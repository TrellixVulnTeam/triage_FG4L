metadata,unique_words,total_words
"net.sf.jabref.IdComparator.compare(BibtexEntry,BibtexEntry)",3,6
gnu.dtools.ritopt.OptionModificationException.OptionModificationException(String),5,6
net.sf.jabref.FocusRequester.FocusRequester(Component),16,23
net.sf.jabref.FocusRequester.run(),4,4
"net.sf.jabref.CrossRefEntryComparator.compare(BibtexEntry,BibtexEntry)",11,22
"net.sf.jabref.DuplicateCheck.isDuplicate(BibtexEntry,BibtexEntry)",23,63
"net.sf.jabref.DuplicateCheck.compareFieldSet(String[],BibtexEntry,BibtexEntry)",15,42
"net.sf.jabref.DuplicateCheck.compareSingleField(String,BibtexEntry,BibtexEntry)",25,76
"net.sf.jabref.DuplicateCheck.compareEntriesStrictly(BibtexEntry,BibtexEntry)",18,47
"net.sf.jabref.DuplicateCheck.containsDuplicate(BibtexDatabase,BibtexEntry)",15,51
"gnu.dtools.ritopt.StreamPrinter.StreamPrinter(InputStream,PrintStream)",5,9
gnu.dtools.ritopt.StreamPrinter.start(),4,5
gnu.dtools.ritopt.StreamPrinter.setStop(Stoppable),4,6
gnu.dtools.ritopt.StreamPrinter.isStopped(),1,2
gnu.dtools.ritopt.StreamPrinter.setFlush(boolean),2,5
gnu.dtools.ritopt.StreamPrinter.stop(),2,8
gnu.dtools.ritopt.StreamPrinter.join(),4,5
gnu.dtools.ritopt.StreamPrinter.run(),14,18
"gnu.dtools.ritopt.OptionRegistrar.register(String,Option)",4,5
"gnu.dtools.ritopt.OptionRegistrar.register(char,Option)",3,4
"gnu.dtools.ritopt.OptionRegistrar.register(String,char,Option)",3,6
"gnu.dtools.ritopt.OptionRegistrar.register(String,char,String,Option)",4,8
"gnu.dtools.ritopt.OptionRegistrar.register(String,char,String,Option,boolean)",5,9
"net.sf.jabref.collab.EntryChange.EntryChange(BibtexEntry,BibtexEntry,BibtexEntry)",36,194
"net.sf.jabref.collab.EntryChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",30,51
net.sf.jabref.collab.EntryChange.description(),4,4
"net.sf.jabref.collab.EntryChange.FieldChange.FieldChange(String,BibtexEntry,BibtexEntry,String,String,String)",28,129
"net.sf.jabref.collab.EntryChange.FieldChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",20,37
net.sf.jabref.collab.EntryChange.FieldChange.description(),2,2
SimpleCsvImporter.getFormatName(),6,6
SimpleCsvImporter.isRecognizedFormat(InputStream),9,10
SimpleCsvImporter.importEntries(InputStream),30,63
gnu.dtools.ritopt.IntOption.IntOption(),1,1
gnu.dtools.ritopt.IntOption.IntOption(IntOption),2,4
gnu.dtools.ritopt.IntOption.IntOption(int),2,3
"gnu.dtools.ritopt.IntOption.IntOption(int,String)",3,6
"gnu.dtools.ritopt.IntOption.IntOption(int,char)",2,5
"gnu.dtools.ritopt.IntOption.IntOption(int,String,char)",3,9
gnu.dtools.ritopt.IntOption.getObject(),3,4
gnu.dtools.ritopt.IntOption.modify(String),11,19
gnu.dtools.ritopt.IntOption.setValue(String),7,9
gnu.dtools.ritopt.IntOption.setValue(int),2,5
gnu.dtools.ritopt.IntOption.getValue(),1,2
gnu.dtools.ritopt.IntOption.getStringValue(),3,6
gnu.dtools.ritopt.IntOption.getTypeName(),4,4
gnu.dtools.ritopt.IntOption.toString(),2,4
gnu.dtools.ritopt.OptionModuleRegistrar.register(OptionModule),3,4
"gnu.dtools.ritopt.OptionModuleRegistrar.register(String,OptionModule)",5,6
"net.sf.jabref.SidePaneHeader.SidePaneHeader(String,URL,SidePaneComponent)",9,13
net.sf.jabref.SidePaneHeader.paintComponent(Graphics),20,72
"net.sf.jabref.SidePaneHeader.addPart(String,URL,SidePaneComponent)",70,234
net.sf.jabref.SidePaneHeader.actionPerformed(ActionEvent),7,8
net.sf.jabref.export.layout.format.CompositeFormat.CompositeFormat(),5,5
"net.sf.jabref.export.layout.format.CompositeFormat.CompositeFormat(LayoutFormatter,LayoutFormatter)",5,9
net.sf.jabref.export.layout.format.CompositeFormat.CompositeFormat(LayoutFormatter[]),5,7
net.sf.jabref.export.layout.format.CompositeFormat.format(String),6,16
"net.sf.jabref.DatabaseSearch.DatabaseSearch(ErrorMessageDisplay,Map<String,String>,SearchRuleSet,BasePanel,String,boolean,boolean,boolean)",18,56
net.sf.jabref.DatabaseSearch.run(),50,97
net.sf.jabref.DatabaseSearch.run().$1.run(),9,11
net.sf.jabref.DatabaseSearch.matches(),4,6
gnu.dtools.ritopt.OptionRegistrationException.OptionRegistrationException(String),5,6
"gnu.dtools.ritopt.OptionRegistrationException.OptionRegistrationException(String,Option)",6,10
gnu.dtools.ritopt.OptionRegistrationException.getTarget(),2,3
"net.sf.jabref.ClipBoardManager.lostOwnership(Clipboard,Transferable)",8,10
net.sf.jabref.ClipBoardManager.setClipboardContents(String),9,28
net.sf.jabref.ClipBoardManager.getClipboardContents(),27,63
net.sf.jabref.about.AboutTextLine.AboutTextLine(String),23,37
net.sf.jabref.about.AboutTextLine.performTimeStep(double),8,18
net.sf.jabref.about.AboutTextLine.toString(),4,7
net.sf.jabref.about.AboutTextLine.getPosX(),1,2
net.sf.jabref.about.AboutTextLine.getPosY(),1,2
net.sf.jabref.about.AboutTextLine.getPos(),1,2
"net.sf.jabref.about.AboutTextLine.setPos(double,double)",2,8
net.sf.jabref.about.AboutTextLine.getText(),2,3
net.sf.jabref.about.AboutTextLine.setText(String),3,6
net.sf.jabref.about.AboutTextLine.getDirection(),1,2
"net.sf.jabref.about.AboutTextLine.setDirection(double,double)",3,8
net.sf.jabref.about.AboutTextLine.getSpeed(),1,2
net.sf.jabref.about.AboutTextLine.setSpeed(double),2,5
net.sf.jabref.about.AboutTextLine.getAccel(),1,2
net.sf.jabref.about.AboutTextLine.setAccel(double),2,5
net.sf.jabref.about.AboutTextLine.getTag(),1,2
net.sf.jabref.about.AboutTextLine.setTag(int),2,5
net.sf.jabref.about.AboutTextLine.getFont(),1,3
net.sf.jabref.about.AboutTextLine.setFont(Font),2,6
net.sf.jabref.about.AboutTextLine.getColor(),1,3
net.sf.jabref.about.AboutTextLine.setColor(Color),2,6
net.sf.jabref.about.AboutTextLine.getVisible(),1,2
net.sf.jabref.about.AboutTextLine.setVisible(boolean),2,5
gnu.dtools.ritopt.ShortOption.ShortOption(),1,1
gnu.dtools.ritopt.ShortOption.ShortOption(ShortOption),2,4
gnu.dtools.ritopt.ShortOption.ShortOption(short),2,3
"gnu.dtools.ritopt.ShortOption.ShortOption(short,String)",3,6
"gnu.dtools.ritopt.ShortOption.ShortOption(short,char)",2,5
"gnu.dtools.ritopt.ShortOption.ShortOption(short,String,char)",3,9
gnu.dtools.ritopt.ShortOption.getObject(),2,3
gnu.dtools.ritopt.ShortOption.modify(String),10,17
gnu.dtools.ritopt.ShortOption.setValue(String),7,9
gnu.dtools.ritopt.ShortOption.setValue(short),2,5
gnu.dtools.ritopt.ShortOption.getValue(),1,2
gnu.dtools.ritopt.ShortOption.getStringValue(),2,5
gnu.dtools.ritopt.ShortOption.getTypeName(),3,3
gnu.dtools.ritopt.ShortOption.toString(),2,4
net.sf.jabref.export.layout.format.AuthorFirstAbbrLastCommas.format(String),9,13
"net.sf.jabref.EntryComparator.EntryComparator(boolean,boolean,String,Comparator<BibtexEntry>)",11,22
"net.sf.jabref.EntryComparator.EntryComparator(boolean,boolean,String)",11,19
"net.sf.jabref.EntryComparator.compare(BibtexEntry,BibtexEntry)",55,169
"net.sf.jabref.EntryComparator.idCompare(BibtexEntry,BibtexEntry)",3,6
net.sf.jabref.XmpPrefsTab.XmpPrefsTab(),61,175
net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.getRowCount(),2,4
net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.getColumnCount(),2,2
"net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.getValueAt(int,int)",9,19
net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.getColumnName(int),8,8
net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.getColumnClass(int),2,3
"net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.isCellEditable(int,int)",4,4
"net.sf.jabref.XmpPrefsTab.XmpPrefsTab().$1.setValueAt(Object,int,int)",10,23
net.sf.jabref.XmpPrefsTab.DeleteRowAction.DeleteRowAction(),11,15
net.sf.jabref.XmpPrefsTab.DeleteRowAction.actionPerformed(ActionEvent),15,34
net.sf.jabref.XmpPrefsTab.AddRowAction.AddRowAction(),11,15
net.sf.jabref.XmpPrefsTab.AddRowAction.actionPerformed(ActionEvent),15,43
net.sf.jabref.XmpPrefsTab.setValues(),26,44
net.sf.jabref.XmpPrefsTab.storeSettings(),48,99
net.sf.jabref.XmpPrefsTab.readyToClose(),2,2
net.sf.jabref.XmpPrefsTab.getTabName(),7,7
gnu.dtools.ritopt.FloatOption.FloatOption(),1,1
gnu.dtools.ritopt.FloatOption.FloatOption(FloatOption),2,4
gnu.dtools.ritopt.FloatOption.FloatOption(float),2,3
"gnu.dtools.ritopt.FloatOption.FloatOption(float,String)",3,6
"gnu.dtools.ritopt.FloatOption.FloatOption(float,char)",2,5
"gnu.dtools.ritopt.FloatOption.FloatOption(float,String,char)",3,9
gnu.dtools.ritopt.FloatOption.getObject(),2,3
gnu.dtools.ritopt.FloatOption.modify(String),10,17
gnu.dtools.ritopt.FloatOption.setValue(String),7,9
gnu.dtools.ritopt.FloatOption.setValue(float),2,5
gnu.dtools.ritopt.FloatOption.getValue(),1,2
gnu.dtools.ritopt.FloatOption.getStringValue(),2,5
gnu.dtools.ritopt.FloatOption.getTypeName(),3,3
gnu.dtools.ritopt.FloatOption.toString(),2,4
net.sf.jabref.BibtexDatabase.$1.vetoableChange(PropertyChangeEvent),30,113
net.sf.jabref.BibtexDatabase.getEntryCount(),5,6
net.sf.jabref.BibtexDatabase.getKeySet(),9,17
net.sf.jabref.BibtexDatabase.getSorter(Comparator<BibtexEntry>),13,28
net.sf.jabref.BibtexDatabase.getEntryMap(),8,10
net.sf.jabref.BibtexDatabase.getEntryById(String),7,10
net.sf.jabref.BibtexDatabase.getEntries(),5,6
net.sf.jabref.BibtexDatabase.getEntryByKey(String),13,60
net.sf.jabref.BibtexDatabase.getEntriesByKey(String),12,34
net.sf.jabref.BibtexDatabase.insertEntry(BibtexEntry),26,49
net.sf.jabref.BibtexDatabase.removeEntry(String),20,41
"net.sf.jabref.BibtexDatabase.setCiteKeyForEntry(String,String)",15,45
net.sf.jabref.BibtexDatabase.setPreamble(String),5,9
net.sf.jabref.BibtexDatabase.getPreamble(),4,6
net.sf.jabref.BibtexDatabase.addString(BibtexString),14,35
net.sf.jabref.BibtexDatabase.removeString(String),5,8
net.sf.jabref.BibtexDatabase.getStringKeySet(),10,16
net.sf.jabref.BibtexDatabase.getStringValues(),9,14
net.sf.jabref.BibtexDatabase.getString(String),5,8
net.sf.jabref.BibtexDatabase.getStringCount(),5,6
net.sf.jabref.BibtexDatabase.hasStringLabel(String),10,17
net.sf.jabref.BibtexDatabase.resolveForStrings(String),13,24
"net.sf.jabref.BibtexDatabase.resolveForStrings(Collection<BibtexEntry>,boolean)",29,72
"net.sf.jabref.BibtexDatabase.resolveForStrings(BibtexEntry,boolean)",27,68
"net.sf.jabref.BibtexDatabase.resolveString(String,HashSet<String>)",43,90
"net.sf.jabref.BibtexDatabase.resolveContent(String,HashSet<String>)",32,111
"net.sf.jabref.BibtexDatabase.checkForDuplicateKeyAndAdd(String,String,boolean)",40,114
net.sf.jabref.BibtexDatabase.getNumberOfKeyOccurences(String),9,13
net.sf.jabref.BibtexDatabase.addKeyToSet(String),17,36
net.sf.jabref.BibtexDatabase.removeKeyFromSet(String),18,39
net.sf.jabref.BibtexDatabase.fireDatabaseChanged(DatabaseChangeEvent),7,15
net.sf.jabref.BibtexDatabase.addDatabaseChangeListener(DatabaseChangeListener),5,10
net.sf.jabref.BibtexDatabase.removeDatabaseChangeListener(DatabaseChangeListener),5,10
"net.sf.jabref.BibtexDatabase.getResolvedField(String,BibtexEntry,BibtexDatabase)",36,108
"net.sf.jabref.BibtexDatabase.getText(String,BibtexDatabase)",15,38
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager)",116,681
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$1.stateChanged(ChangeEvent)",10,18
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$2.focusGained(FocusEvent)",9,10
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$2.focusLost(FocusEvent)",19,28
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$3.actionPerformed(ActionEvent)",14,20
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$4.actionPerformed(ActionEvent)",7,8
"net.sf.jabref.SearchManager2.SearchManager2(JabRefFrame,SidePaneManager).$5.actionPerformed(ActionEvent)",7,12
net.sf.jabref.SearchManager2.setSearchButtonSizes(),19,51
net.sf.jabref.SearchManager2.instantiateSearchDialog(),9,20
net.sf.jabref.SearchManager2.updatePrefs(),16,72
net.sf.jabref.SearchManager2.startIncrementalSearch(),12,19
net.sf.jabref.SearchManager2.startSearch(),25,67
net.sf.jabref.SearchManager2.actionPerformed(ActionEvent),55,124
net.sf.jabref.SearchManager2.actionPerformed(ActionEvent).$6.run(),2,2
"net.sf.jabref.SearchManager2.SearchWorker.SearchWorker(SearchRuleSet,Hashtable<String,String>)",8,17
net.sf.jabref.SearchManager2.SearchWorker.run(),24,57
net.sf.jabref.SearchManager2.SearchWorker.update(),52,201
net.sf.jabref.SearchManager2.clearSearch(),16,28
net.sf.jabref.SearchManager2.itemStateChanged(ItemEvent),23,44
net.sf.jabref.SearchManager2.repeatIncremental(),6,7
net.sf.jabref.SearchManager2.keyTyped(KeyEvent),15,19
net.sf.jabref.SearchManager2.goIncremental(),10,10
net.sf.jabref.SearchManager2.goIncremental().$7.run(),26,97
net.sf.jabref.SearchManager2.componentClosing(),10,14
net.sf.jabref.SearchManager2.keyPressed(KeyEvent),3,4
net.sf.jabref.SearchManager2.keyReleased(KeyEvent),3,4
net.sf.jabref.SearchManager2.caretUpdate(CaretEvent),8,11
net.sf.jabref.SearchManager2.updateSearchButtonText(),24,41
net.sf.jabref.SearchManager2.reportError(String),22,36
"net.sf.jabref.SearchManager2.reportError(String,Exception)",17,27
net.sf.jabref.SearchManager2.setActiveBasePanel(BasePanel),8,24
net.sf.jabref.bst.BstParser.BstParser(TokenStream),5,6
net.sf.jabref.bst.BstParser.setTreeAdaptor(TreeAdaptor),3,8
net.sf.jabref.bst.BstParser.getTreeAdaptor(),2,5
net.sf.jabref.bst.BstParser.getTokenNames(),3,5
net.sf.jabref.bst.BstParser.getGrammarFileName(),5,5
net.sf.jabref.bst.BstParser.program_return.getTree(),2,3
net.sf.jabref.bst.BstParser.program(),48,145
net.sf.jabref.bst.BstParser.commands_return.getTree(),2,3
net.sf.jabref.bst.BstParser.commands(),47,714
net.sf.jabref.bst.BstParser.identifier_return.getTree(),2,3
net.sf.jabref.bst.BstParser.identifier(),28,76
net.sf.jabref.bst.BstParser.id_return.getTree(),2,3
net.sf.jabref.bst.BstParser.id(),30,81
net.sf.jabref.bst.BstParser.idList_return.getTree(),2,3
net.sf.jabref.bst.BstParser.idList(),44,169
net.sf.jabref.bst.BstParser.idList0_return.getTree(),2,3
net.sf.jabref.bst.BstParser.idList0(),39,163
net.sf.jabref.bst.BstParser.function_return.getTree(),2,3
net.sf.jabref.bst.BstParser.function(),36,279
net.sf.jabref.bst.BstParser.stack_return.getTree(),2,3
net.sf.jabref.bst.BstParser.stack(),48,179
net.sf.jabref.bst.BstParser.stackitem_return.getTree(),2,3
net.sf.jabref.bst.BstParser.stackitem(),39,211
net.sf.jabref.FieldComparatorStack<T>.FieldComparatorStack(List<>),5,8
"net.sf.jabref.FieldComparatorStack<T>.compare(T,T)",5,9
"net.sf.jabref.export.FileActions.writePreamble(Writer,String)",7,16
"net.sf.jabref.export.FileActions.writeStrings(Writer,BibtexDatabase)",35,92
"net.sf.jabref.export.FileActions.writeString(Writer,BibtexString,HashMap<String,BibtexString>)",56,129
"net.sf.jabref.export.FileActions.writeBibFileHeader(Writer,String)",20,39
"net.sf.jabref.export.FileActions.saveDatabase(BibtexDatabase,MetaData,File,JabRefPreferences,boolean,boolean,String,boolean)",115,307
"net.sf.jabref.export.FileActions.savePartOfDatabase(BibtexDatabase,MetaData,File,JabRefPreferences,BibtexEntry[],String)",103,343
net.sf.jabref.export.FileActions.getReader(String),25,69
"net.sf.jabref.export.FileActions.getSortedEntries(BibtexDatabase,Set<String>,boolean)",50,231
"net.sf.jabref.export.FileActions.nonZeroField(BibtexEntry,String)",10,16
gnu.dtools.ritopt.LongOption.LongOption(),1,1
gnu.dtools.ritopt.LongOption.LongOption(LongOption),2,4
gnu.dtools.ritopt.LongOption.LongOption(long),2,3
"gnu.dtools.ritopt.LongOption.LongOption(long,String)",3,6
"gnu.dtools.ritopt.LongOption.LongOption(long,char)",2,5
"gnu.dtools.ritopt.LongOption.LongOption(long,String,char)",3,9
gnu.dtools.ritopt.LongOption.getObject(),2,3
gnu.dtools.ritopt.LongOption.modify(String),10,17
gnu.dtools.ritopt.LongOption.setValue(String),7,9
gnu.dtools.ritopt.LongOption.setValue(long),2,5
gnu.dtools.ritopt.LongOption.getValue(),1,2
gnu.dtools.ritopt.LongOption.getStringValue(),2,5
gnu.dtools.ritopt.LongOption.getTypeName(),3,3
gnu.dtools.ritopt.LongOption.toString(),2,4
"net.sf.jabref.FieldTextArea.FieldTextArea(String,String)",50,121
net.sf.jabref.FieldTextArea.getPreferredScrollableViewportSize(),5,7
net.sf.jabref.FieldTextArea.getFieldName(),3,5
net.sf.jabref.FieldTextArea.setFieldName(String),4,8
net.sf.jabref.FieldTextArea.getLabel(),1,3
net.sf.jabref.FieldTextArea.setLabelColor(Color),4,7
net.sf.jabref.FieldTextArea.getPane(),2,2
net.sf.jabref.FieldTextArea.getTextComponent(),2,3
net.sf.jabref.FieldTextArea.updateFont(),6,7
net.sf.jabref.FieldTextArea.paste(String),13,23
net.sf.jabref.FieldTextArea.hasUndoInformation(),2,4
net.sf.jabref.FieldTextArea.undo(),2,7
net.sf.jabref.FieldTextArea.hasRedoInformation(),3,4
net.sf.jabref.FieldTextArea.redo(),3,7
net.sf.jabref.FieldTextArea.addUndoableEditListener(UndoableEditListener),5,14
net.sf.jabref.FieldTextArea.setAutoCompleteListener(AutoCompleteListener),4,12
net.sf.jabref.FieldTextArea.clearAutoCompleteSuggestion(),5,11
net.sf.jabref.export.ExpandEndnoteFilters.ExpandEndnoteFilters(JabRefFrame),24,37
net.sf.jabref.export.ExpandEndnoteFilters.actionPerformed(ActionEvent),38,70
net.sf.jabref.export.ExpandEndnoteFilters.run(),12,17
gnu.dtools.ritopt.OptionEvent.OptionEvent(),2,2
gnu.dtools.ritopt.OptionEvent.OptionEvent(String),4,5
"gnu.dtools.ritopt.OptionEvent.OptionEvent(String,String)",5,8
gnu.dtools.ritopt.OptionEvent.OptionEvent(Option),7,26
"gnu.dtools.ritopt.OptionEvent.OptionEvent(String,String,Option)",6,14
gnu.dtools.ritopt.OptionEvent.getCommand(),2,3
gnu.dtools.ritopt.OptionEvent.getValue(),2,3
gnu.dtools.ritopt.OptionEvent.getTarget(),2,3
gnu.dtools.ritopt.OptionEvent.setCommand(String),3,6
gnu.dtools.ritopt.OptionEvent.setValue(String),3,6
gnu.dtools.ritopt.OptionEvent.setTarget(Option),3,6
net.sf.jabref.BibtexEntry.BibtexEntry(),5,5
net.sf.jabref.BibtexEntry.BibtexEntry(String),4,6
"net.sf.jabref.BibtexEntry.BibtexEntry(String,BibtexEntryType)",7,14
net.sf.jabref.BibtexEntry.getOptionalFields(),8,12
net.sf.jabref.BibtexEntry.getRequiredFields(),8,12
net.sf.jabref.BibtexEntry.getGeneralFields(),6,8
net.sf.jabref.BibtexEntry.getAllFields(),10,17
net.sf.jabref.BibtexEntry.describeRequiredFields(),8,14
net.sf.jabref.BibtexEntry.hasAllRequiredFields(BibtexDatabase),9,14
net.sf.jabref.BibtexEntry.getType(),5,8
net.sf.jabref.BibtexEntry.setType(BibtexEntryType),31,61
net.sf.jabref.BibtexEntry.updateType(),22,54
net.sf.jabref.BibtexEntry.setId(String),22,30
net.sf.jabref.BibtexEntry.getId(),3,3
net.sf.jabref.BibtexEntry.getField(String),7,10
net.sf.jabref.BibtexEntry.getCiteKey(),7,15
"net.sf.jabref.BibtexEntry.setField(Map<String,String>)",27,35
"net.sf.jabref.BibtexEntry.setField(String,String)",31,76
net.sf.jabref.BibtexEntry.clearField(String),24,46
"net.sf.jabref.BibtexEntry.allFieldsPresent(String[],BibtexDatabase)",27,48
"net.sf.jabref.BibtexEntry.firePropertyChangedEvent(String,Object,Object)",14,26
net.sf.jabref.BibtexEntry.addPropertyChangeListener(VetoableChangeListener),14,28
net.sf.jabref.BibtexEntry.removePropertyChangeListener(VetoableChangeListener),7,18
"net.sf.jabref.BibtexEntry.write(Writer,FieldFormatter,boolean)",46,163
"net.sf.jabref.BibtexEntry.writeField(String,Writer,FieldFormatter,boolean)",28,60
net.sf.jabref.BibtexEntry.clone(),12,21
net.sf.jabref.BibtexEntry.toString(),7,9
net.sf.jabref.BibtexEntry.isSearchHit(),2,4
net.sf.jabref.BibtexEntry.setSearchHit(boolean),3,9
net.sf.jabref.BibtexEntry.isGroupHit(),1,2
net.sf.jabref.BibtexEntry.setGroupHit(boolean),2,5
net.sf.jabref.BibtexEntry.getAuthorTitleYear(int),20,44
"net.sf.jabref.export.SaveSession.SaveSession(File,String,boolean)",22,40
net.sf.jabref.export.SaveSession.getWriter(),2,4
net.sf.jabref.export.SaveSession.getEncoding(),2,3
net.sf.jabref.export.SaveSession.setUseBackup(boolean),2,5
net.sf.jabref.export.SaveSession.commit(),49,131
net.sf.jabref.export.SaveSession.cancel(),4,4
net.sf.jabref.export.SaveSession.createLockFile(),27,48
net.sf.jabref.export.SaveSession.deleteLockFile(),13,27
net.sf.jabref.export.SaveSession.getTemporaryFile(),3,4
"net.sf.jabref.HelpAction.HelpAction(HelpDialog,String)",11,21
"net.sf.jabref.HelpAction.HelpAction(HelpDialog,String,String)",14,28
"net.sf.jabref.HelpAction.HelpAction(HelpDialog,String,String,URL)",15,31
"net.sf.jabref.HelpAction.HelpAction(String,HelpDialog,String,String)",15,30
"net.sf.jabref.HelpAction.HelpAction(String,HelpDialog,String,String,KeyStroke)",18,37
"net.sf.jabref.HelpAction.HelpAction(String,HelpDialog,String,String,URL)",16,33
net.sf.jabref.HelpAction.setResourceOwner(Class),3,9
net.sf.jabref.HelpAction.getIconButton(),8,15
net.sf.jabref.HelpAction.actionPerformed(ActionEvent),9,16
net.sf.jabref.autocompleter.EntireFieldAutoCompleter.EntireFieldAutoCompleter(String),7,14
net.sf.jabref.autocompleter.EntireFieldAutoCompleter.isSingleUnitField(),3,3
net.sf.jabref.autocompleter.EntireFieldAutoCompleter.complete(String),2,4
net.sf.jabref.autocompleter.EntireFieldAutoCompleter.addBibtexEntry(BibtexEntry),10,23
"gnu.dtools.ritopt.Utility.contains(String,String)",7,11
"gnu.dtools.ritopt.Utility.count(String,char)",6,11
"gnu.dtools.ritopt.Utility.contains(char,String)",4,7
gnu.dtools.ritopt.Utility.isAlpha(String),7,14
gnu.dtools.ritopt.Utility.isAlphaLower(String),6,12
gnu.dtools.ritopt.Utility.isAlphaUpper(String),6,12
gnu.dtools.ritopt.Utility.isAlpha(char),4,8
gnu.dtools.ritopt.Utility.isAlphaLower(char),3,5
gnu.dtools.ritopt.Utility.isAlphaUpper(char),3,5
gnu.dtools.ritopt.Utility.isAlphaNumeric(char),3,7
gnu.dtools.ritopt.Utility.isNumeric(char),2,4
"gnu.dtools.ritopt.Utility.expandString(String,int)",5,12
gnu.dtools.ritopt.Utility.getSpaces(int),4,5
"gnu.dtools.ritopt.Utility.repeat(char,int)",6,14
gnu.dtools.ritopt.Utility.ltrim(String),6,15
gnu.dtools.ritopt.Utility.rtrim(String),6,21
gnu.dtools.ritopt.Utility.trim(String),4,5
"gnu.dtools.ritopt.Utility.stripComments(String,char,char)",8,14
"gnu.dtools.ritopt.Utility.repeat(String,int)",7,16
gnu.dtools.ritopt.DoubleOption.DoubleOption(),1,1
gnu.dtools.ritopt.DoubleOption.DoubleOption(DoubleOption),2,4
gnu.dtools.ritopt.DoubleOption.DoubleOption(double),2,3
"gnu.dtools.ritopt.DoubleOption.DoubleOption(double,String)",3,6
"gnu.dtools.ritopt.DoubleOption.DoubleOption(double,char)",2,5
"gnu.dtools.ritopt.DoubleOption.DoubleOption(double,String,char)",3,9
gnu.dtools.ritopt.DoubleOption.getObject(),2,3
gnu.dtools.ritopt.DoubleOption.modify(String),10,17
gnu.dtools.ritopt.DoubleOption.setValue(String),7,9
gnu.dtools.ritopt.DoubleOption.setValue(double),2,5
gnu.dtools.ritopt.DoubleOption.getValue(),1,2
gnu.dtools.ritopt.DoubleOption.getStringValue(),2,5
gnu.dtools.ritopt.DoubleOption.getTypeName(),3,3
gnu.dtools.ritopt.DoubleOption.toString(),2,4
gnu.dtools.ritopt.BooleanOption.BooleanOption(),1,1
gnu.dtools.ritopt.BooleanOption.BooleanOption(BooleanOption),2,4
gnu.dtools.ritopt.BooleanOption.BooleanOption(boolean),2,3
"gnu.dtools.ritopt.BooleanOption.BooleanOption(boolean,String)",3,6
"gnu.dtools.ritopt.BooleanOption.BooleanOption(boolean,char)",2,5
"gnu.dtools.ritopt.BooleanOption.BooleanOption(boolean,String,char)",3,9
gnu.dtools.ritopt.BooleanOption.getObject(),2,4
gnu.dtools.ritopt.BooleanOption.modify(String),15,54
gnu.dtools.ritopt.BooleanOption.setValue(String),7,9
gnu.dtools.ritopt.BooleanOption.setValue(boolean),2,5
gnu.dtools.ritopt.BooleanOption.getValue(),1,2
gnu.dtools.ritopt.BooleanOption.getStringValue(),2,4
gnu.dtools.ritopt.BooleanOption.getTypeName(),3,3
gnu.dtools.ritopt.BooleanOption.toString(),2,4
net.sf.jabref.MarkedComparator.MarkedComparator(Comparator<BibtexEntry>),4,5
"net.sf.jabref.MarkedComparator.compare(BibtexEntry,BibtexEntry)",6,16
"net.sf.jabref.MarkedComparator.idCompare(BibtexEntry,BibtexEntry)",3,6
net.sf.jabref.export.PluginBasedExportFormat.getFormat(ExportFormatTemplateExtension),20,75
"net.sf.jabref.export.PluginBasedExportFormat.PluginBasedExportFormat(String,String,String,String,String,ExportFormatTemplateExtension)",16,44
net.sf.jabref.export.PluginBasedExportFormat.getReader(String),17,37
net.sf.jabref.export.layout.format.IfPlural.setArgument(String),14,18
net.sf.jabref.export.layout.format.IfPlural.format(String),15,24
net.sf.jabref.export.CustomExportList.CustomExportList(Comparator<String[]>),9,17
net.sf.jabref.export.CustomExportList.getCustomExportFormats(),9,12
net.sf.jabref.export.CustomExportList.size(),2,3
net.sf.jabref.export.CustomExportList.getSortedList(),4,6
net.sf.jabref.export.CustomExportList.readPrefs(),19,40
net.sf.jabref.export.CustomExportList.createFormat(String[]),11,28
net.sf.jabref.export.CustomExportList.getElementAt(int),4,6
net.sf.jabref.export.CustomExportList.addFormat(String[]),9,15
net.sf.jabref.export.CustomExportList.remove(String[]),9,17
net.sf.jabref.export.CustomExportList.store(),13,19
net.sf.jabref.export.CustomExportList.purge(int),9,14
net.sf.jabref.GeneralRenderer.GeneralRenderer(Color),4,5
"net.sf.jabref.GeneralRenderer.GeneralRenderer(Color,Color)",9,20
"net.sf.jabref.GeneralRenderer.GeneralRenderer(Color,Color,Color)",11,30
"net.sf.jabref.GeneralRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",12,41
"net.sf.jabref.GeneralRenderer.firePropertyChange(String,boolean,boolean)",5,6
"net.sf.jabref.GeneralRenderer.firePropertyChange(String,Object,Object)",6,8
net.sf.jabref.GeneralRenderer.setValue(Object),17,70
"net.sf.jabref.collab.StringNameChange.StringNameChange(BibtexString,BibtexString,String,String,String,String)",11,38
"net.sf.jabref.collab.StringNameChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",39,107
net.sf.jabref.collab.StringNameChange.description(),5,5
net.sf.jabref.export.LatexFieldFormatter.setNeverFailOnHashes(boolean),3,9
"net.sf.jabref.export.LatexFieldFormatter.format(String,String)",83,267
"net.sf.jabref.export.LatexFieldFormatter.writeText(String,int,int)",40,170
"net.sf.jabref.export.LatexFieldFormatter.writeStringLabel(String,int,int,boolean,boolean)",14,25
net.sf.jabref.export.LatexFieldFormatter.putIn(String),8,8
net.sf.jabref.export.LatexFieldFormatter.checkBraces(String),25,66
net.sf.jabref.FieldEditor.getFieldName(),3,3
net.sf.jabref.FieldEditor.getPane(),6,9
net.sf.jabref.FieldEditor.getTextComponent(),3,6
net.sf.jabref.FieldEditor.getLabel(),1,2
net.sf.jabref.FieldEditor.setLabelColor(Color),3,4
net.sf.jabref.FieldEditor.setBackground(Color),3,3
net.sf.jabref.FieldEditor.getText(),2,2
net.sf.jabref.FieldEditor.setText(String),10,15
net.sf.jabref.FieldEditor.append(String),3,3
net.sf.jabref.FieldEditor.getParent(),2,2
net.sf.jabref.FieldEditor.requestFocus(),2,2
net.sf.jabref.FieldEditor.setEnabled(boolean),2,3
net.sf.jabref.FieldEditor.updateFont(),2,2
net.sf.jabref.FieldEditor.paste(String),4,4
net.sf.jabref.FieldEditor.getSelectedText(),6,8
net.sf.jabref.FieldEditor.hasUndoInformation(),2,2
net.sf.jabref.FieldEditor.undo(),1,1
net.sf.jabref.FieldEditor.hasRedoInformation(),2,2
net.sf.jabref.FieldEditor.redo(),1,1
net.sf.jabref.FieldEditor.addUndoableEditListener(UndoableEditListener),4,8
net.sf.jabref.FieldEditor.setAutoCompleteListener(AutoCompleteListener),4,8
net.sf.jabref.FieldEditor.clearAutoCompleteSuggestion(),3,3
net.sf.jabref.export.layout.format.AuthorLastFirst.format(String),8,12
"net.sf.jabref.bst.BibtexPurify.purify(String,Warn)",21,82
net.sf.jabref.BibtexEntryType.$1.getName(),2,2
net.sf.jabref.BibtexEntryType.$1.getOptionalFields(),3,4
net.sf.jabref.BibtexEntryType.$1.getRequiredFields(),3,4
net.sf.jabref.BibtexEntryType.$1.describeRequiredFields(),4,4
"net.sf.jabref.BibtexEntryType.$1.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,8
net.sf.jabref.BibtexEntryType.$2.getName(),3,3
net.sf.jabref.BibtexEntryType.$2.getOptionalFields(),6,7
net.sf.jabref.BibtexEntryType.$2.getRequiredFields(),8,9
net.sf.jabref.BibtexEntryType.$2.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$2.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",12,18
net.sf.jabref.BibtexEntryType.$3.getName(),3,3
net.sf.jabref.BibtexEntryType.$3.getOptionalFields(),9,10
net.sf.jabref.BibtexEntryType.$3.getRequiredFields(),4,5
net.sf.jabref.BibtexEntryType.$3.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$3.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",8,14
net.sf.jabref.BibtexEntryType.$4.getName(),3,3
net.sf.jabref.BibtexEntryType.$4.getOptionalFields(),11,12
net.sf.jabref.BibtexEntryType.$4.getRequiredFields(),9,10
net.sf.jabref.BibtexEntryType.$4.getRequiredFieldsForCustomization(),10,11
net.sf.jabref.BibtexEntryType.$4.describeRequiredFields(),10,10
"net.sf.jabref.BibtexEntryType.$4.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",14,27
net.sf.jabref.BibtexEntryType.$5.getName(),3,3
net.sf.jabref.BibtexEntryType.$5.getOptionalFields(),10,11
net.sf.jabref.BibtexEntryType.$5.getRequiredFields(),7,8
net.sf.jabref.BibtexEntryType.$5.getRequiredFieldsForCustomization(),8,9
net.sf.jabref.BibtexEntryType.$5.describeRequiredFields(),8,8
"net.sf.jabref.BibtexEntryType.$5.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",12,21
net.sf.jabref.BibtexEntryType.$6.getName(),3,3
net.sf.jabref.BibtexEntryType.$6.getOptionalFields(),13,14
net.sf.jabref.BibtexEntryType.$6.getRequiredFields(),7,8
net.sf.jabref.BibtexEntryType.$6.describeRequiredFields(),8,8
"net.sf.jabref.BibtexEntryType.$6.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",11,17
net.sf.jabref.BibtexEntryType.$7.getName(),3,3
net.sf.jabref.BibtexEntryType.$7.getOptionalFields(),12,13
net.sf.jabref.BibtexEntryType.$7.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$7.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$7.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$8.getName(),3,3
net.sf.jabref.BibtexEntryType.$8.getOptionalFields(),12,13
net.sf.jabref.BibtexEntryType.$8.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$8.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$8.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$9.getName(),3,3
net.sf.jabref.BibtexEntryType.$9.getOptionalFields(),11,12
net.sf.jabref.BibtexEntryType.$9.getRequiredFields(),4,5
net.sf.jabref.BibtexEntryType.$9.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$9.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",8,14
net.sf.jabref.BibtexEntryType.$10.getName(),3,3
net.sf.jabref.BibtexEntryType.$10.getOptionalFields(),9,10
net.sf.jabref.BibtexEntryType.$10.getRequiredFields(),4,5
net.sf.jabref.BibtexEntryType.$10.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$10.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",8,14
net.sf.jabref.BibtexEntryType.$11.getName(),3,3
net.sf.jabref.BibtexEntryType.$11.getOptionalFields(),7,8
net.sf.jabref.BibtexEntryType.$11.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$11.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$11.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$12.getName(),3,3
net.sf.jabref.BibtexEntryType.$12.getOptionalFields(),7,8
net.sf.jabref.BibtexEntryType.$12.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$12.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$12.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$13.getName(),3,3
net.sf.jabref.BibtexEntryType.$13.getOptionalFields(),7,8
net.sf.jabref.BibtexEntryType.$13.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$13.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$13.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$14.getName(),3,3
net.sf.jabref.BibtexEntryType.$14.getOptionalFields(),4,5
net.sf.jabref.BibtexEntryType.$14.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$14.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$14.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",10,16
net.sf.jabref.BibtexEntryType.$15.getName(),3,3
net.sf.jabref.BibtexEntryType.$15.getOptionalFields(),11,12
net.sf.jabref.BibtexEntryType.$15.getRequiredFields(),4,5
net.sf.jabref.BibtexEntryType.$15.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$15.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",8,14
net.sf.jabref.BibtexEntryType.$16.getName(),3,3
net.sf.jabref.BibtexEntryType.$16.getOptionalFields(),15,16
net.sf.jabref.BibtexEntryType.$16.getRequiredFields(),5,6
net.sf.jabref.BibtexEntryType.$16.describeRequiredFields(),6,6
"net.sf.jabref.BibtexEntryType.$16.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",9,18
net.sf.jabref.BibtexEntryType.$17.getName(),3,3
net.sf.jabref.BibtexEntryType.$17.getOptionalFields(),12,13
net.sf.jabref.BibtexEntryType.$17.getRequiredFields(),6,7
net.sf.jabref.BibtexEntryType.$17.getRequiredFieldsForCustomization(),7,8
net.sf.jabref.BibtexEntryType.$17.describeRequiredFields(),7,7
"net.sf.jabref.BibtexEntryType.$17.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",11,20
net.sf.jabref.BibtexEntryType.$18.getName(),3,3
net.sf.jabref.BibtexEntryType.$18.getOptionalFields(),12,13
net.sf.jabref.BibtexEntryType.$18.getRequiredFields(),3,3
net.sf.jabref.BibtexEntryType.$18.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$18.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",7,13
net.sf.jabref.BibtexEntryType.$19.getName(),3,3
net.sf.jabref.BibtexEntryType.$19.getOptionalFields(),8,9
net.sf.jabref.BibtexEntryType.$19.getRequiredFields(),3,3
net.sf.jabref.BibtexEntryType.$19.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$19.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",7,13
net.sf.jabref.BibtexEntryType.$20.getName(),3,3
net.sf.jabref.BibtexEntryType.$20.getOptionalFields(),3,3
net.sf.jabref.BibtexEntryType.$20.getRequiredFields(),3,3
net.sf.jabref.BibtexEntryType.$20.describeRequiredFields(),5,5
"net.sf.jabref.BibtexEntryType.$20.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,8
net.sf.jabref.BibtexEntryType.getName(),2,2
net.sf.jabref.BibtexEntryType.compareTo(BibtexEntryType),5,7
net.sf.jabref.BibtexEntryType.getOptionalFields(),3,3
net.sf.jabref.BibtexEntryType.getRequiredFields(),3,3
net.sf.jabref.BibtexEntryType.getGeneralFields(),13,14
net.sf.jabref.BibtexEntryType.getPrimaryOptionalFields(),4,4
net.sf.jabref.BibtexEntryType.describeRequiredFields(),4,4
"net.sf.jabref.BibtexEntryType.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,8
net.sf.jabref.BibtexEntryType.getUtilityFields(),4,5
net.sf.jabref.BibtexEntryType.isRequired(String),7,13
net.sf.jabref.BibtexEntryType.isOptional(String),7,13
net.sf.jabref.BibtexEntryType.getType(String),13,24
net.sf.jabref.BibtexEntryType.getStandardType(String),13,26
net.sf.jabref.BibtexEntryType.removeType(String),21,55
net.sf.jabref.BibtexEntryType.loadCustomEntryTypes(JabRefPreferences),15,33
net.sf.jabref.BibtexEntryType.saveCustomEntryTypes(JabRefPreferences),26,61
net.sf.jabref.BibtexEntryType.getRequiredFieldsForCustomization(),12,26
"net.sf.jabref.FileHistory.FileHistory(JabRefPreferences,JabRefFrame)",26,53
net.sf.jabref.FileHistory.newFile(String),21,40
net.sf.jabref.FileHistory.setItems(),9,11
"net.sf.jabref.FileHistory.addItem(String,int)",13,29
net.sf.jabref.FileHistory.removeItem(String),9,13
net.sf.jabref.FileHistory.storeHistory(),10,19
net.sf.jabref.FileHistory.actionPerformed(ActionEvent),27,46
net.sf.jabref.FileHistory.actionPerformed(ActionEvent).$1.run(),3,3
net.sf.jabref.Globals.startBackgroundTasks(),14,27
net.sf.jabref.Globals.startAutoSaveManager(JabRefFrame),12,30
net.sf.jabref.Globals.stopAutoSaveManager(),8,26
net.sf.jabref.Globals.logger(String),3,4
net.sf.jabref.Globals.turnOffLogging(),9,11
net.sf.jabref.Globals.turnOnConsoleLogging(),8,15
net.sf.jabref.Globals.turnOnFileLogging(),14,28
net.sf.jabref.Globals.turnOnFileLogging().$1.isLoggable(LogRecord),3,4
"net.sf.jabref.Globals.setLanguage(String,String)",15,43
"net.sf.jabref.Globals.lang(String,String[])",28,68
net.sf.jabref.Globals.lang(String),3,7
"net.sf.jabref.Globals.lang(String,String)",3,8
"net.sf.jabref.Globals.lang(String,String,String)",3,9
"net.sf.jabref.Globals.lang(String,String,String,String)",3,10
net.sf.jabref.Globals.menuTitle(String),13,27
net.sf.jabref.Globals.getIntegrityMessage(String),17,32
net.sf.jabref.Globals.getEntryType(String),14,52
net.sf.jabref.Globals.getShortcutMask(),6,15
net.sf.jabref.Globals.initializeJournalNames(),31,89
net.sf.jabref.RegExpRule.RegExpRule(boolean),5,7
"net.sf.jabref.RegExpRule.applyRule(Map<String,String>,BibtexEntry)",22,50
"net.sf.jabref.RegExpRule.searchFields(Set<String>,BibtexEntry,Pattern)",21,39
"net.sf.jabref.export.OOCalcDatabase.OOCalcDatabase(BibtexDatabase,Set<String>)",26,87
net.sf.jabref.export.OOCalcDatabase.getDOMrepresentation(),88,669
"net.sf.jabref.export.OOCalcDatabase.getField(BibtexEntry,String)",5,10
"net.sf.jabref.export.OOCalcDatabase.addTableCell(Document,Element,String)",15,48
net.sf.jabref.collab.Change.Change(),2,2
net.sf.jabref.collab.Change.Change(String),5,7
net.sf.jabref.collab.Change.getName(),2,3
net.sf.jabref.collab.Change.toString(),2,3
net.sf.jabref.collab.Change.isAccepted(),1,2
net.sf.jabref.collab.Change.setAccepted(boolean),2,3
net.sf.jabref.collab.Change.isAcceptable(),14,24
net.sf.jabref.collab.Change.description(),7,9
"net.sf.jabref.collab.Change.makeChange(BasePanel,BibtexDatabase,NamedCompound)",24,48
"net.sf.jabref.SimpleUrlDragDrop.SimpleUrlDragDrop(FieldEditor,StoreFieldAction)",8,21
net.sf.jabref.SimpleUrlDragDrop.dragEnter(DropTargetDragEvent),11,23
net.sf.jabref.SimpleUrlDragDrop.dragOver(DropTargetDragEvent),10,21
net.sf.jabref.SimpleUrlDragDrop.dropActionChanged(DropTargetDragEvent),12,25
net.sf.jabref.SimpleUrlDragDrop.dragExit(DropTargetEvent),11,21
net.sf.jabref.SimpleUrlDragDrop.drop(DropTargetDropEvent),51,114
"net.sf.jabref.export.OpenDocumentRepresentation.OpenDocumentRepresentation(BibtexDatabase,Set<String>)",27,89
net.sf.jabref.export.OpenDocumentRepresentation.getDOMrepresentation(),98,704
"net.sf.jabref.export.OpenDocumentRepresentation.getField(BibtexEntry,String)",6,13
"net.sf.jabref.export.OpenDocumentRepresentation.addTableCell(Document,Element,String)",15,48
"net.sf.jabref.PreviewPanel.PreviewPanel(BibtexDatabase,BibtexEntry,BasePanel,MetaData,String)",26,58
"net.sf.jabref.PreviewPanel.PreviewPanel(BasePanel,MetaData,String)",38,99
net.sf.jabref.PreviewPanel.PrintAction.PrintAction(),9,15
net.sf.jabref.PreviewPanel.PrintAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.PreviewPanel.PrintAction.actionPerformed(ActionEvent).$1.run(),28,47
net.sf.jabref.PreviewPanel.getPrintAction(),2,11
net.sf.jabref.PreviewPanel.CloseAction.CloseAction(),9,16
net.sf.jabref.PreviewPanel.CloseAction.actionPerformed(ActionEvent),7,8
net.sf.jabref.PreviewPanel.getCloseAction(),2,11
net.sf.jabref.PreviewPanel.createPopupMenu(),6,15
net.sf.jabref.PreviewPanel.createToolBar(),37,100
net.sf.jabref.PreviewPanel.createPreviewPane(),18,45
net.sf.jabref.PreviewPanel.createPreviewPane().$1.getPreferredScrollableViewportSize(),5,7
net.sf.jabref.PreviewPanel.createPreviewPane().$2.hyperlinkUpdate(HyperlinkEvent),19,34
net.sf.jabref.PreviewPanel.setDatabase(BibtexDatabase),3,5
net.sf.jabref.PreviewPanel.setMetaData(MetaData),3,11
net.sf.jabref.PreviewPanel.readLayout(String),6,12
net.sf.jabref.PreviewPanel.readLayout(),12,18
net.sf.jabref.PreviewPanel.setLayout(Layout),2,6
net.sf.jabref.PreviewPanel.setEntry(BibtexEntry),15,27
net.sf.jabref.PreviewPanel.update(),24,44
net.sf.jabref.PreviewPanel.update().$3.run(),4,4
net.sf.jabref.PreviewPanel.hasEntry(),1,2
net.sf.jabref.PreviewPanel.vetoableChange(PropertyChangeEvent),23,30
net.sf.jabref.export.layout.format.ToLowerCase.format(String),5,8
net.sf.jabref.FieldNameLabel.FieldNameLabel(String),21,42
net.sf.jabref.FieldNameLabel.paintComponent(Graphics),13,30
net.sf.jabref.OutputPrinter.setStatus(String),3,3
"net.sf.jabref.OutputPrinter.showMessage(Object,String,int)",6,7
net.sf.jabref.OutputPrinter.showMessage(String),2,3
net.sf.jabref.BibtexStringComparator.BibtexStringComparator(boolean),15,21
"net.sf.jabref.BibtexStringComparator.compare(BibtexString,BibtexString)",40,99
gnu.dtools.ritopt.OptionListener.optionInvoked(OptionEvent),3,4
"net.sf.jabref.CompressedEntryEditorTab.CompressedEntryEditorTab(JabRefFrame,BasePanel,List<String>,EntryEditor,boolean,String)",30,54
"net.sf.jabref.CompressedEntryEditorTab.setupPanel(JabRefFrame,BasePanel,boolean,String)",89,399
net.sf.jabref.CompressedEntryEditorTab.getEntry(),2,4
net.sf.jabref.CompressedEntryEditorTab.isFieldModified(FieldEditor),12,28
net.sf.jabref.CompressedEntryEditorTab.markIfModified(FieldEditor),10,19
net.sf.jabref.CompressedEntryEditorTab.markBaseChanged(),5,8
net.sf.jabref.CompressedEntryEditorTab.setActive(FieldEditor),11,15
net.sf.jabref.CompressedEntryEditorTab.getActive(),3,5
net.sf.jabref.CompressedEntryEditorTab.getFields(),6,8
net.sf.jabref.CompressedEntryEditorTab.activate(),13,15
net.sf.jabref.CompressedEntryEditorTab.updateAll(),7,9
net.sf.jabref.CompressedEntryEditorTab.setEntry(BibtexEntry),15,38
"net.sf.jabref.CompressedEntryEditorTab.updateField(String,String)",10,17
net.sf.jabref.CompressedEntryEditorTab.validateAllFields(),17,31
net.sf.jabref.CompressedEntryEditorTab.setEnabled(boolean),7,16
net.sf.jabref.CompressedEntryEditorTab.getPane(),3,3
"net.sf.jabref.CompressedEntryEditorTab.setupJTextComponent(JComponent,AutoCompleteListener)",72,301
net.sf.jabref.CompressedEntryEditorTab.$1.focusGained(FocusEvent),19,30
net.sf.jabref.CompressedEntryEditorTab.$1.focusGained(FocusEvent).$1.fire(DocumentEvent),9,9
net.sf.jabref.CompressedEntryEditorTab.$1.focusGained(FocusEvent).$1.changedUpdate(DocumentEvent),5,5
net.sf.jabref.CompressedEntryEditorTab.$1.focusGained(FocusEvent).$1.insertUpdate(DocumentEvent),5,5
net.sf.jabref.CompressedEntryEditorTab.$1.focusGained(FocusEvent).$1.removeUpdate(DocumentEvent),5,5
net.sf.jabref.CompressedEntryEditorTab.$1.focusLost(FocusEvent),11,13
net.sf.jabref.about.TextBlock.TextBlock(),6,8
net.sf.jabref.about.TextBlock.add(AboutTextLine),4,8
net.sf.jabref.about.TextBlock.iterator(),4,7
net.sf.jabref.about.TextBlock.setHeading(AboutTextLine),5,8
net.sf.jabref.about.TextBlock.getHeading(),4,5
net.sf.jabref.about.TextBlock.isVisible(),1,2
net.sf.jabref.about.TextBlock.setVisible(boolean),2,5
"net.sf.jabref.collab.PreambleChange.PreambleChange(String,String,String)",24,84
"net.sf.jabref.collab.PreambleChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",16,32
net.sf.jabref.collab.PreambleChange.description(),2,2
com.jgoodies.uif_lite.panel.SimpleInternalFrame.SimpleInternalFrame(String),10,18
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.SimpleInternalFrame(Icon,String)",11,26
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.SimpleInternalFrame(String,JToolBar,JComponent)",16,39
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.SimpleInternalFrame(Icon,String,JToolBar,JComponent)",32,78
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getFrameIcon(),6,11
com.jgoodies.uif_lite.panel.SimpleInternalFrame.setFrameIcon(Icon),10,28
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getTitle(),7,13
com.jgoodies.uif_lite.panel.SimpleInternalFrame.setTitle(String),10,26
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getToolBar(),11,20
com.jgoodies.uif_lite.panel.SimpleInternalFrame.setToolBar(JToolBar),19,65
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getContent(),6,10
com.jgoodies.uif_lite.panel.SimpleInternalFrame.setContent(Component),17,32
com.jgoodies.uif_lite.panel.SimpleInternalFrame.isSelected(),11,18
com.jgoodies.uif_lite.panel.SimpleInternalFrame.setSelected(boolean),24,36
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.buildHeader(JLabel,JToolBar)",29,91
com.jgoodies.uif_lite.panel.SimpleInternalFrame.updateHeader(),14,25
com.jgoodies.uif_lite.panel.SimpleInternalFrame.updateUI(),9,13
com.jgoodies.uif_lite.panel.SimpleInternalFrame.hasContent(),8,12
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getTextForeground(boolean),23,55
com.jgoodies.uif_lite.panel.SimpleInternalFrame.getHeaderBackground(),24,49
com.jgoodies.uif_lite.panel.SimpleInternalFrame.RaisedHeaderBorder.getBorderInsets(Component),3,5
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.RaisedHeaderBorder.paintBorder(Component,Graphics,int,int,int,int)",13,24
com.jgoodies.uif_lite.panel.SimpleInternalFrame.ShadowBorder.getBorderInsets(Component),3,5
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.ShadowBorder.paintBorder(Component,Graphics,int,int,int,int)",19,77
"com.jgoodies.uif_lite.panel.SimpleInternalFrame.GradientPanel.GradientPanel(LayoutManager,Color)",7,9
com.jgoodies.uif_lite.panel.SimpleInternalFrame.GradientPanel.paintComponent(Graphics),15,36
net.sf.jabref.GlobalFocusListener.GlobalFocusListener(),3,3
net.sf.jabref.GlobalFocusListener.focusGained(FocusEvent),7,8
net.sf.jabref.GlobalFocusListener.focusLost(FocusEvent),3,4
net.sf.jabref.GlobalFocusListener.getFocused(),2,4
net.sf.jabref.GlobalFocusListener.setFocused(Component),3,4
"net.sf.jabref.TabLabelPattern.TabLabelPattern(JabRefPreferences,HelpDialog)",20,35
net.sf.jabref.TabLabelPattern.storeSettings(),47,139
"net.sf.jabref.TabLabelPattern.addEntryType(Container,String,int)",37,118
"net.sf.jabref.TabLabelPattern.setValue(JTextField,String)",9,27
net.sf.jabref.TabLabelPattern.buildGUI(),103,543
net.sf.jabref.TabLabelPattern.buildGUI().$1.actionPerformed(ActionEvent),12,14
net.sf.jabref.TabLabelPattern.buildGUI().$2.stateChanged(ChangeEvent),13,16
net.sf.jabref.TabLabelPattern.buttonHandler.actionPerformed(ActionEvent),20,57
net.sf.jabref.TabLabelPattern.readyToClose(),2,2
net.sf.jabref.TabLabelPattern.setValues(),35,118
net.sf.jabref.TabLabelPattern.getTabName(),8,8
"net.sf.jabref.TitleLabel.TitleLabel(String,int)",14,26
net.sf.jabref.TitleLabel.TitleLabel(String),7,8
net.sf.jabref.AuthorList.AuthorList(String),36,61
net.sf.jabref.AuthorList.getAuthorList(String),17,53
"net.sf.jabref.AuthorList.fixAuthor_firstNameFirstCommas(String,boolean,boolean)",14,25
net.sf.jabref.AuthorList.fixAuthor_firstNameFirst(String),11,21
"net.sf.jabref.AuthorList.fixAuthor_lastNameFirstCommas(String,boolean,boolean)",14,25
net.sf.jabref.AuthorList.fixAuthor_lastNameFirst(String),11,21
"net.sf.jabref.AuthorList.fixAuthor_lastNameFirst(String,boolean)",12,23
"net.sf.jabref.AuthorList.fixAuthor_lastNameOnlyCommas(String,boolean)",13,23
net.sf.jabref.AuthorList.fixAuthorForAlphabetization(String),10,21
net.sf.jabref.AuthorList.fixAuthor_Natbib(String),10,23
net.sf.jabref.AuthorList.getAuthor(),71,294
"net.sf.jabref.AuthorList.concatTokens(int,int,int,boolean)",34,105
net.sf.jabref.AuthorList.getToken(),76,305
net.sf.jabref.AuthorList.size(),6,10
net.sf.jabref.AuthorList.getAuthor(int),8,19
net.sf.jabref.AuthorList.getAuthorsNatbib(),22,63
net.sf.jabref.AuthorList.getAuthorsLastOnly(boolean),36,99
"net.sf.jabref.AuthorList.getAuthorsLastFirst(boolean,boolean)",42,129
net.sf.jabref.AuthorList.toString(),3,4
net.sf.jabref.AuthorList.getAuthorsLastFirstAnds(boolean),27,81
net.sf.jabref.AuthorList.getAuthorsLastFirstFirstLastAnds(boolean),13,36
"net.sf.jabref.AuthorList.getAuthorsFirstFirst(boolean,boolean)",41,129
net.sf.jabref.AuthorList.equals(Object),11,20
net.sf.jabref.AuthorList.getAuthorsFirstFirstAnds(),25,72
net.sf.jabref.AuthorList.getAuthorsForAlphabetization(),30,62
net.sf.jabref.AuthorList.Author.equals(Object),12,28
"net.sf.jabref.AuthorList.Author.Author(String,String,String,String,String)",36,95
net.sf.jabref.AuthorList.Author.getFirst(),8,10
net.sf.jabref.AuthorList.Author.getFirstAbbr(),10,14
net.sf.jabref.AuthorList.Author.getVon(),9,15
net.sf.jabref.AuthorList.Author.getLast(),8,10
net.sf.jabref.AuthorList.Author.getJr(),10,13
net.sf.jabref.AuthorList.Author.getLastOnly(),10,19
net.sf.jabref.AuthorList.Author.getLastFirst(boolean),14,37
net.sf.jabref.AuthorList.Author.getFirstLast(boolean),14,39
net.sf.jabref.AuthorList.Author.getNameForAlphabetization(),17,36
net.sf.jabref.AuthorList.main(String[]),20,40
"net.sf.jabref.CustomEntryType.CustomEntryType(String,String[],String[])",10,17
"net.sf.jabref.CustomEntryType.CustomEntryType(String,String,String)",13,32
net.sf.jabref.CustomEntryType.parseRequiredFields(String),7,13
net.sf.jabref.CustomEntryType.parseRequiredFields(String[]),14,49
net.sf.jabref.CustomEntryType.getName(),2,3
net.sf.jabref.CustomEntryType.getOptionalFields(),4,4
net.sf.jabref.CustomEntryType.getRequiredFields(),4,4
net.sf.jabref.CustomEntryType.getRequiredFieldsForCustomization(),5,8
net.sf.jabref.CustomEntryType.describeRequiredFields(),8,18
net.sf.jabref.CustomEntryType.describeOptionalFields(),8,18
"net.sf.jabref.CustomEntryType.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",22,77
"net.sf.jabref.CustomEntryType.isCoupledFieldSet(String,BibtexEntry,BibtexDatabase)",19,52
net.sf.jabref.CustomEntryType.getRequiredFieldsString(),21,81
net.sf.jabref.CustomEntryType.save(Writer),20,49
net.sf.jabref.CustomEntryType.parseEntryType(String),28,93
net.sf.jabref.bst.VM.Identifier.Identifier(String),3,5
net.sf.jabref.bst.VM.Identifier.getName(),2,3
net.sf.jabref.bst.VM.Variable.Variable(String),3,5
net.sf.jabref.bst.VM.Variable.getName(),2,3
net.sf.jabref.bst.VM.BstFunction.execute(BstEntry),4,4
net.sf.jabref.bst.VM.VM(File),6,9
net.sf.jabref.bst.VM.VM(String),5,6
net.sf.jabref.bst.VM.charStream2CommonTree(CharStream),12,37
net.sf.jabref.bst.VM.VM(CharStream),6,8
net.sf.jabref.bst.VM.VM(CommonTree),88,284
net.sf.jabref.bst.VM.VM(CommonTree).$1.execute(BstEntry),21,36
net.sf.jabref.bst.VM.VM(CommonTree).$2.execute(BstEntry),16,29
net.sf.jabref.bst.VM.VM(CommonTree).$3.execute(BstEntry),23,34
net.sf.jabref.bst.VM.VM(CommonTree).$4.execute(BstEntry),21,34
net.sf.jabref.bst.VM.VM(CommonTree).$5.execute(BstEntry),22,35
net.sf.jabref.bst.VM.VM(CommonTree).$6.execute(BstEntry),22,35
net.sf.jabref.bst.VM.VM(CommonTree).$7.execute(BstEntry),20,26
net.sf.jabref.bst.VM.VM(CommonTree).$8.execute(BstEntry),27,50
net.sf.jabref.bst.VM.VM(CommonTree).$9.execute(BstEntry),26,57
net.sf.jabref.bst.VM.VM(CommonTree).$10.execute(BstEntry),27,40
net.sf.jabref.bst.VM.VM(CommonTree).$11.execute(BstEntry),12,16
net.sf.jabref.bst.VM.VM(CommonTree).$12.execute(BstEntry),18,24
net.sf.jabref.bst.VM.VM(CommonTree).$13.execute(BstEntry),30,40
net.sf.jabref.bst.VM.VM(CommonTree).$14.execute(BstEntry),24,49
net.sf.jabref.bst.VM.VM(CommonTree).$15.execute(BstEntry),27,44
net.sf.jabref.bst.VM.VM(CommonTree).$16.execute(BstEntry),24,35
net.sf.jabref.bst.VM.VM(CommonTree).$17.execute(BstEntry),22,35
net.sf.jabref.bst.VM.VM(CommonTree).$18.execute(BstEntry),21,29
net.sf.jabref.bst.VM.VM(CommonTree).$19.execute(BstEntry),33,51
net.sf.jabref.bst.VM.VM(CommonTree).$20.execute(BstEntry),13,15
net.sf.jabref.bst.VM.VM(CommonTree).$21.execute(BstEntry),19,30
net.sf.jabref.bst.VM.VM(CommonTree).$22.execute(BstEntry),11,11
net.sf.jabref.bst.VM.VM(CommonTree).$23.execute(BstEntry),5,5
net.sf.jabref.bst.VM.VM(CommonTree).$24.execute(BstEntry),15,17
net.sf.jabref.bst.VM.VM(CommonTree).$25.execute(BstEntry),40,112
net.sf.jabref.bst.VM.VM(CommonTree).$26.execute(BstEntry),39,54
net.sf.jabref.bst.VM.VM(CommonTree).$27.execute(BstEntry),67,172
net.sf.jabref.bst.VM.VM(CommonTree).$28.execute(BstEntry),16,17
net.sf.jabref.bst.VM.VM(CommonTree).$29.execute(BstEntry),17,22
net.sf.jabref.bst.VM.VM(CommonTree).$30.execute(BstEntry),8,9
net.sf.jabref.bst.VM.VM(CommonTree).$31.execute(BstEntry),25,48
net.sf.jabref.bst.VM.VM(CommonTree).$32.execute(BstEntry),23,27
"net.sf.jabref.bst.VM.assign(BstEntry,Object,Object)",16,52
net.sf.jabref.bst.VM.run(BibtexDatabase),6,8
net.sf.jabref.bst.VM.run(Collection<BibtexEntry>),30,94
net.sf.jabref.bst.VM.reset(),20,41
net.sf.jabref.bst.VM.read(),29,69
net.sf.jabref.bst.VM.macro(Tree),36,56
net.sf.jabref.bst.VM.MacroFunction.MacroFunction(String),4,6
net.sf.jabref.bst.VM.MacroFunction.execute(BstEntry),6,6
net.sf.jabref.bst.VM.entry(Tree),38,114
net.sf.jabref.bst.VM.reverse(Tree),14,21
net.sf.jabref.bst.VM.iterate(Tree),11,15
net.sf.jabref.bst.VM.sort(Tree),17,22
"net.sf.jabref.bst.VM.sort(Tree).$33.compare(BstEntry,BstEntry)",6,12
"net.sf.jabref.bst.VM.executeInContext(Object,BstEntry)",10,18
net.sf.jabref.bst.VM.execute(Tree),4,7
net.sf.jabref.bst.VM.StackFunction.getTree(),1,3
net.sf.jabref.bst.VM.StackFunction.StackFunction(Tree),5,10
net.sf.jabref.bst.VM.StackFunction.execute(BstEntry),28,58
net.sf.jabref.bst.VM.push(Tree),3,4
"net.sf.jabref.bst.VM.execute(String,BstEntry)",18,66
net.sf.jabref.bst.VM.function(Tree),8,17
net.sf.jabref.bst.VM.integers(Tree),30,44
net.sf.jabref.bst.VM.strings(Tree),21,31
net.sf.jabref.bst.VM.BstEntry.BstEntry(BibtexEntry),3,5
net.sf.jabref.bst.VM.BstEntry.getFields(),3,5
net.sf.jabref.bst.VM.BstEntry.getBibtexEntry(),2,5
net.sf.jabref.bst.VM.push(Integer),3,6
net.sf.jabref.bst.VM.push(String),3,6
net.sf.jabref.bst.VM.push(Identifier),3,6
net.sf.jabref.bst.VM.getStrings(),3,5
net.sf.jabref.bst.VM.getIntegers(),4,5
net.sf.jabref.bst.VM.getEntries(),4,5
net.sf.jabref.bst.VM.getFunctions(),5,6
net.sf.jabref.bst.VM.getStack(),2,4
net.sf.jabref.bst.VM.warn(String),4,6
net.sf.jabref.export.RtfSelection.RtfSelection(String),17,28
net.sf.jabref.export.RtfSelection.isDataFlavorSupported(DataFlavor),6,16
net.sf.jabref.export.RtfSelection.getTransferDataFlavors(),10,12
net.sf.jabref.export.RtfSelection.getTransferData(DataFlavor),17,42
"net.sf.jabref.collab.ChangeScanner.ChangeScanner(JabRefFrame,BasePanel)",17,30
net.sf.jabref.collab.ChangeScanner.changeScan(File),4,4
net.sf.jabref.collab.ChangeScanner.run(),47,164
net.sf.jabref.collab.ChangeScanner.changesFound(),4,5
net.sf.jabref.collab.ChangeScanner.displayResult(DisplayResultCallback),25,35
net.sf.jabref.collab.ChangeScanner.displayResult(DisplayResultCallback).$1.run(),21,35
net.sf.jabref.collab.ChangeScanner.storeTempDatabase(),6,6
net.sf.jabref.collab.ChangeScanner.storeTempDatabase().$2.run(),24,41
"net.sf.jabref.collab.ChangeScanner.scanMetaData(MetaData,MetaData,MetaData)",39,113
"net.sf.jabref.collab.ChangeScanner.scanEntries(EntrySorter,EntrySorter,EntrySorter)",89,381
"net.sf.jabref.collab.ChangeScanner.bestFit(EntrySorter,EntrySorter,int)",22,56
"net.sf.jabref.collab.ChangeScanner.scanPreamble(BibtexDatabase,BibtexDatabase,BibtexDatabase)",12,43
"net.sf.jabref.collab.ChangeScanner.scanStrings(BibtexDatabase,BibtexDatabase,BibtexDatabase)",45,313
"net.sf.jabref.collab.ChangeScanner.findString(BibtexDatabase,String,HashSet<Object>)",14,36
"net.sf.jabref.collab.ChangeScanner.scanGroups(MetaData,MetaData,MetaData)",47,148
net.sf.jabref.collab.ChangeScanner.DisplayResultCallback.scanResultsResolved(boolean),3,4
net.sf.jabref.bst.VMException.VMException(String),2,4
net.sf.jabref.export.layout.format.AuthorLF_FF.format(String),8,15
net.sf.jabref.collab.InfoPane.InfoPane(),8,9
net.sf.jabref.collab.InfoPane.paint(Graphics),10,16
"net.sf.jabref.UrlDragDrop.UrlDragDrop(EntryEditor,JabRefFrame,FieldEditor)",10,19
net.sf.jabref.UrlDragDrop.dragEnter(DropTargetDragEvent),11,23
net.sf.jabref.UrlDragDrop.dragOver(DropTargetDragEvent),10,21
net.sf.jabref.UrlDragDrop.dropActionChanged(DropTargetDragEvent),12,25
net.sf.jabref.UrlDragDrop.dragExit(DropTargetEvent),11,21
"net.sf.jabref.UrlDragDrop.JOptionChoice.JOptionChoice(String,int)",4,6
net.sf.jabref.UrlDragDrop.JOptionChoice.toString(),2,3
net.sf.jabref.UrlDragDrop.JOptionChoice.getId(),0,0
net.sf.jabref.UrlDragDrop.drop(DropTargetDropEvent),76,280
"net.sf.jabref.PreambleEditor.PreambleEditor(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences)",59,149
"net.sf.jabref.PreambleEditor.PreambleEditor(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences).$1.windowClosing(WindowEvent)",6,8
"net.sf.jabref.PreambleEditor.PreambleEditor(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences).$1.windowOpened(WindowEvent)",4,5
"net.sf.jabref.PreambleEditor.PreambleEditor(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences).$2.accept(Component)",4,5
net.sf.jabref.PreambleEditor.setupJTextComponent(javax.swing.text.JTextComponent),23,83
net.sf.jabref.PreambleEditor.updatePreamble(),5,6
net.sf.jabref.PreambleEditor.FieldListener.focusLost(FocusEvent),13,23
net.sf.jabref.PreambleEditor.StoreFieldAction.StoreFieldAction(),5,11
net.sf.jabref.PreambleEditor.StoreFieldAction.actionPerformed(ActionEvent),34,97
net.sf.jabref.PreambleEditor.UndoAction.UndoAction(),7,10
net.sf.jabref.PreambleEditor.UndoAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.PreambleEditor.RedoAction.RedoAction(),8,10
net.sf.jabref.PreambleEditor.RedoAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.PreambleEditor.CloseAction.CloseAction(),12,18
net.sf.jabref.PreambleEditor.CloseAction.actionPerformed(ActionEvent),10,14
net.sf.jabref.PreambleEditor.getFieldEditor(),2,4
net.sf.jabref.PreambleEditor.storeCurrentEdit(),6,8
net.sf.jabref.JabRefPreferences.getInstance(),5,10
net.sf.jabref.JabRefPreferences.JabRefPreferences(),339,1285
net.sf.jabref.JabRefPreferences.putBracesAroundCapitals(String),7,11
net.sf.jabref.JabRefPreferences.updateSpecialFieldHandling(),13,49
net.sf.jabref.JabRefPreferences.hasKey(String),7,15
net.sf.jabref.JabRefPreferences.get(String),4,8
"net.sf.jabref.JabRefPreferences.get(String,String)",4,8
net.sf.jabref.JabRefPreferences.getBoolean(String),3,5
net.sf.jabref.JabRefPreferences.getBooleanDefault(String),4,5
net.sf.jabref.JabRefPreferences.getDouble(String),3,5
net.sf.jabref.JabRefPreferences.getDoubleDefault(String),4,5
net.sf.jabref.JabRefPreferences.getInt(String),3,5
net.sf.jabref.JabRefPreferences.getIntDefault(String),5,6
net.sf.jabref.JabRefPreferences.getByteArray(String),4,8
net.sf.jabref.JabRefPreferences.getByteArrayDefault(String),4,5
"net.sf.jabref.JabRefPreferences.put(String,String)",4,7
"net.sf.jabref.JabRefPreferences.putBoolean(String,boolean)",4,6
"net.sf.jabref.JabRefPreferences.putDouble(String,double)",4,6
"net.sf.jabref.JabRefPreferences.putInt(String,int)",4,6
"net.sf.jabref.JabRefPreferences.putByteArray(String,byte[])",5,8
net.sf.jabref.JabRefPreferences.remove(String),4,6
"net.sf.jabref.JabRefPreferences.putStringArray(String,String[])",19,47
net.sf.jabref.JabRefPreferences.getStringArray(String),18,40
net.sf.jabref.JabRefPreferences.getColor(String),13,28
net.sf.jabref.JabRefPreferences.getDefaultColor(String),6,16
"net.sf.jabref.JabRefPreferences.putDefaultValue(String,Object)",14,24
"net.sf.jabref.JabRefPreferences.putColor(String,Color)",14,39
net.sf.jabref.JabRefPreferences.getRgb(String),19,39
net.sf.jabref.JabRefPreferences.getKey(String),34,72
net.sf.jabref.JabRefPreferences.getKeyForMac(KeyStroke),22,57
net.sf.jabref.JabRefPreferences.getKeyBindings(),8,14
net.sf.jabref.JabRefPreferences.getDefaultKeys(),10,14
net.sf.jabref.JabRefPreferences.flush(),23,31
"net.sf.jabref.JabRefPreferences.setNewKeyBindings(HashMap<String,String>)",22,64
net.sf.jabref.JabRefPreferences.getKeyPattern(),21,61
net.sf.jabref.JabRefPreferences.putKeyPattern(LabelPattern),24,54
net.sf.jabref.JabRefPreferences.restoreKeyBindings(),18,49
net.sf.jabref.JabRefPreferences.setDefaultKeyBindings(),5,8
net.sf.jabref.JabRefPreferences.defineDefaultKeyBindings(),107,606
net.sf.jabref.JabRefPreferences.getNextUnit(Reader),11,28
net.sf.jabref.JabRefPreferences.makeEscape(String),5,11
"net.sf.jabref.JabRefPreferences.storeCustomEntryType(CustomEntryType,int)",16,33
net.sf.jabref.JabRefPreferences.getCustomEntryType(int),13,39
net.sf.jabref.JabRefPreferences.getDefaultExternalFileTypes(),65,251
net.sf.jabref.JabRefPreferences.getExternalFileTypeSelection(),7,18
net.sf.jabref.JabRefPreferences.getExternalFileTypeByName(String),15,55
net.sf.jabref.JabRefPreferences.getExternalFileTypeByExt(String),14,47
net.sf.jabref.JabRefPreferences.getExternalFileTypeByMimeType(String),18,70
net.sf.jabref.JabRefPreferences.setExternalFileTypes(List<ExternalFileType>),48,201
net.sf.jabref.JabRefPreferences.updateExternalFileTypes(),40,162
net.sf.jabref.JabRefPreferences.purgeCustomEntryTypes(int),14,41
"net.sf.jabref.JabRefPreferences.purgeSeries(String,int)",10,13
net.sf.jabref.JabRefPreferences.getEntryEditorTabList(),5,17
net.sf.jabref.JabRefPreferences.updateEntryEditorTabList(),5,11
net.sf.jabref.JabRefPreferences.exportPreferences(String),15,29
net.sf.jabref.JabRefPreferences.importPreferences(String),13,28
net.sf.jabref.JabRefPreferences.isNonWrappableField(String),12,22
net.sf.jabref.export.MySQLExport.MySQLExport(),6,8
"net.sf.jabref.export.MySQLExport.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",32,66
gnu.dtools.ritopt.OptionMenu.OptionMenu(Options),8,13
gnu.dtools.ritopt.OptionMenu.startMenu(),47,172
gnu.dtools.ritopt.OptionMenu.optionInvoked(OptionEvent),7,11
net.sf.jabref.NameFormatterTab.getNameFormatters(),17,50
net.sf.jabref.NameFormatterTab.TableRow.TableRow(),2,2
net.sf.jabref.NameFormatterTab.TableRow.TableRow(String),5,8
"net.sf.jabref.NameFormatterTab.TableRow.TableRow(String,String)",5,10
net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog),58,186
net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.getRowCount(),2,4
net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.getColumnCount(),2,2
"net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.getValueAt(int,int)",11,18
net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.getColumnName(int),8,13
net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.getColumnClass(int),2,6
"net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.isCellEditable(int,int)",4,4
"net.sf.jabref.NameFormatterTab.NameFormatterTab(HelpDialog).$1.setValueAt(Object,int,int)",16,37
net.sf.jabref.NameFormatterTab.setValues(),20,50
net.sf.jabref.NameFormatterTab.DeleteRowAction.DeleteRowAction(),11,15
net.sf.jabref.NameFormatterTab.DeleteRowAction.actionPerformed(ActionEvent),16,38
net.sf.jabref.NameFormatterTab.AddRowAction.AddRowAction(),11,15
net.sf.jabref.NameFormatterTab.AddRowAction.actionPerformed(ActionEvent),17,47
net.sf.jabref.NameFormatterTab.storeSettings(),39,94
net.sf.jabref.NameFormatterTab.readyToClose(),2,2
net.sf.jabref.NameFormatterTab.getTabName(),6,7
gnu.dtools.ritopt.OptionNotifier.addOptionListener(OptionListener),3,6
gnu.dtools.ritopt.OptionNotifier.removeOptionListener(OptionListener),3,6
gnu.dtools.ritopt.OptionNotifier.setOptionCommand(String),4,5
net.sf.jabref.autocompleter.AutoCompleterFactory.getFor(String),13,54
gnu.dtools.ritopt.Stoppable.stop(),1,1
gnu.dtools.ritopt.Stoppable.isStopped(),1,1
net.sf.jabref.collab.FileUpdateMonitor.FileUpdateMonitor(),6,7
net.sf.jabref.collab.FileUpdateMonitor.run(),27,39
net.sf.jabref.collab.FileUpdateMonitor.stopMonitoring(),9,11
"net.sf.jabref.collab.FileUpdateMonitor.addUpdateListener(FileUpdateListener,File)",22,49
net.sf.jabref.collab.FileUpdateMonitor.hasBeenModified(String),22,30
net.sf.jabref.collab.FileUpdateMonitor.perturbTimestamp(String),25,36
net.sf.jabref.collab.FileUpdateMonitor.removeUpdateListener(String),9,17
net.sf.jabref.collab.FileUpdateMonitor.updateTimeStamp(String),12,23
"net.sf.jabref.collab.FileUpdateMonitor.changeFile(String,File)",12,26
net.sf.jabref.collab.FileUpdateMonitor.getTempFile(String),26,44
"net.sf.jabref.collab.FileUpdateMonitor.Entry.Entry(FileUpdateListener,File)",14,24
net.sf.jabref.collab.FileUpdateMonitor.Entry.hasBeenUpdated(),12,31
net.sf.jabref.collab.FileUpdateMonitor.Entry.updateTimeStamp(),10,17
net.sf.jabref.collab.FileUpdateMonitor.Entry.copy(),10,27
net.sf.jabref.collab.FileUpdateMonitor.Entry.notifyListener(),12,18
net.sf.jabref.collab.FileUpdateMonitor.Entry.notifyFileRemoved(),7,12
net.sf.jabref.collab.FileUpdateMonitor.getTempFile(),19,30
net.sf.jabref.HelpContent.HelpContent(JabRefPreferences),30,61
net.sf.jabref.HelpContent.HelpContent(JabRefPreferences).$1.hyperlinkUpdate(HyperlinkEvent),8,10
net.sf.jabref.HelpContent.back(),9,14
net.sf.jabref.HelpContent.forward(),9,13
net.sf.jabref.HelpContent.reset(),5,7
"net.sf.jabref.HelpContent.setPage(String,Class)",42,95
net.sf.jabref.HelpContent.setPage(URL),11,18
net.sf.jabref.HelpContent.setPageOnly(URL),10,23
net.sf.jabref.HelpContent.getPane(),2,3
"net.sf.jabref.HelpContent.MyNextVisualPositionAction.MyNextVisualPositionAction(Action,int)",9,19
net.sf.jabref.HelpContent.MyNextVisualPositionAction.actionPerformed(ActionEvent),20,39
net.sf.jabref.HelpContent.MyEditorKit.getActions(),19,55
net.sf.jabref.Util.getMinimumIntegerDigits(),4,7
net.sf.jabref.Util.bool(boolean),3,5
net.sf.jabref.Util.pr(String),3,3
net.sf.jabref.Util.pr_(String),3,3
net.sf.jabref.Util.nCase(String),9,14
net.sf.jabref.Util.checkName(String),10,15
net.sf.jabref.Util.createNeutralId(),5,6
"net.sf.jabref.Util.placeDialog(java.awt.Dialog,java.awt.Container)",18,25
net.sf.jabref.Util.parseField(String),34,74
net.sf.jabref.Util.getPublicationDate(BibtexEntry),15,36
net.sf.jabref.Util.shaveString(String),19,40
net.sf.jabref.Util.checkLegalKey(String),41,86
net.sf.jabref.Util.replaceSpecialCharacters(String),25,41
"net.sf.jabref.Util._wrap2(String,int)",19,46
"net.sf.jabref.Util.wrap2(String,int)",9,14
"net.sf.jabref.Util.__wrap2(String,int)",26,53
"net.sf.jabref.Util.findDeliminatedWordsInField(BibtexDatabase,String,String)",20,49
"net.sf.jabref.Util.findAllWordsInField(BibtexDatabase,String,String)",28,78
"net.sf.jabref.Util.findAuthorLastNames(BibtexDatabase,List<String>)",22,65
"net.sf.jabref.Util.stringArrayToDelimited(String[],String)",14,49
"net.sf.jabref.Util.delimToStringArray(String,String)",13,27
"net.sf.jabref.Util.openExternalViewer(MetaData,String,String)",88,492
"net.sf.jabref.Util.openFileOnWindows(String,boolean)",39,80
"net.sf.jabref.Util.openFileWithApplicationOnWindows(String,String)",14,32
"net.sf.jabref.Util.openExternalFileAnyFormat(MetaData,String,ExternalFileType)",77,289
"net.sf.jabref.Util.openRemoteExternalFile(MetaData,String,ExternalFileType)",29,61
"net.sf.jabref.Util.openRemoteExternalFile(MetaData,String,ExternalFileType).$1.run()",11,12
"net.sf.jabref.Util.openExternalFileUnknown(JabRefFrame,BibtexEntry,MetaData,String,UnknownExternalFileType)",74,329
net.sf.jabref.Util.sanitizeUrl(String),45,93
"net.sf.jabref.Util.findPdf(String,String,String,OpenFileFilter)",33,72
"net.sf.jabref.Util.findAssociatedFiles(Collection<BibtexEntry>,Collection<String>,Collection<File>)",38,133
"net.sf.jabref.Util.findFiles(Collection<String>,Collection<File>)",11,24
"net.sf.jabref.Util.findFiles(Collection<String>,File)",16,45
net.sf.jabref.Util.getFileExtension(File),14,34
"net.sf.jabref.Util.findPdf(BibtexEntry,String,String)",15,27
"net.sf.jabref.Util.findPdf(BibtexEntry,String,String[])",22,64
"net.sf.jabref.Util.findFile(BibtexEntry,ExternalFileType,List<String>)",26,74
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,String[],String,boolean)",9,25
net.sf.jabref.Util.stripBrackets(String),12,20
net.sf.jabref.Util.parseMethodsCalls(String),26,95
"net.sf.jabref.Util.getFieldAndFormat(String,BibtexEntry,BibtexDatabase)",36,118
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,String)",9,26
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,String,String,boolean)",40,87
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,File,String)",71,276
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,File,String).$2.accept(File,String)",7,9
"net.sf.jabref.Util.findFile(BibtexEntry,BibtexDatabase,File,String).$3.accept(File,String)",7,9
"net.sf.jabref.Util.expandBrackets(String,BibtexEntry,BibtexDatabase)",27,58
"net.sf.jabref.Util.join(String[],String,int,int)",17,44
"net.sf.jabref.Util.expandFilename(String,String[])",20,33
"net.sf.jabref.Util.expandFilename(String,String)",42,98
"net.sf.jabref.Util.findInDir(String,String,OpenFileFilter,int)",24,62
"net.sf.jabref.Util.updateCompletersForEntry(HashMap<String,AbstractAutoCompleter>,BibtexEntry)",18,42
"net.sf.jabref.Util.setAutomaticFields(Collection<BibtexEntry>,boolean,boolean,boolean)",40,139
"net.sf.jabref.Util.setAutomaticFields(BibtexEntry,boolean,boolean)",28,104
"net.sf.jabref.Util.setAutomaticFields(BibtexEntry,boolean,String,boolean,String,String)",16,62
"net.sf.jabref.Util.copyFile(File,File,boolean)",26,72
net.sf.jabref.Util.performCompatibilityUpdate(),25,75
"net.sf.jabref.Util.upgradePdfPsToFile(BibtexDatabase,String[])",46,170
"net.sf.jabref.Util.getCorrectFileName(String,String)",13,26
net.sf.jabref.Util.quoteForHTML(String),14,20
"net.sf.jabref.Util.quote(String,String,char)",3,9
"net.sf.jabref.Util.quote(String,String,char,int)",26,75
"net.sf.jabref.Util.unquote(String,char)",17,39
net.sf.jabref.Util.quoteMeta(String),18,25
net.sf.jabref.Util.sortWordsAndRemoveDuplicates(String),22,51
"net.sf.jabref.Util.warnAssignmentSideEffects(AbstractGroup[],BibtexEntry[],BibtexDatabase,Component)",74,225
net.sf.jabref.Util.putBracesAroundCapitals(String),54,123
net.sf.jabref.Util.removeBracesAroundCapitals(String),18,33
net.sf.jabref.Util.removeSingleBracesAroundCapitals(String),30,56
net.sf.jabref.Util.getFileFilterForField(String),24,56
"net.sf.jabref.Util.showQuickErrorDialog(JFrame,String,Exception)",67,171
"net.sf.jabref.Util.showQuickErrorDialog(JFrame,String,Exception).$4.actionPerformed(ActionEvent)",6,8
"net.sf.jabref.Util.wrapHTML(String,int)",17,77
net.sf.jabref.Util.easyDateFormat(),15,28
net.sf.jabref.Util.easyDateFormat(Date),19,43
"net.sf.jabref.Util.markEntry(BibtexEntry,NamedCompound)",23,56
"net.sf.jabref.Util.unmarkEntry(BibtexEntry,BibtexDatabase,NamedCompound)",30,73
"net.sf.jabref.Util.unmarkOldStyle(BibtexEntry,BibtexDatabase,NamedCompound)",48,108
net.sf.jabref.Util.isMarked(BibtexEntry),14,22
"net.sf.jabref.Util.massSetField(Collection<BibtexEntry>,String,String,boolean)",40,108
"net.sf.jabref.Util.massRenameField(Collection<BibtexEntry>,String,String,boolean)",33,125
net.sf.jabref.Util.findEncodingsForString(String),15,47
net.sf.jabref.Util.toFourDigitYear(String),25,32
"net.sf.jabref.Util.toFourDigitYear(String,int)",31,54
net.sf.jabref.Util.getMonthNumber(String),30,46
net.sf.jabref.Util.encodeStringArray(String[][]),16,37
net.sf.jabref.Util.encodeStringArray(String[]),15,35
net.sf.jabref.Util.decodeStringDoubleArray(String),24,103
net.sf.jabref.Util.encodeString(String),5,12
"net.sf.jabref.Util.equals(Object,Object)",2,4
net.sf.jabref.Util.toUpperFirstLetter(String),16,38
net.sf.jabref.Util.runAbstractWorker(AbstractWorker),38,80
"net.sf.jabref.Util.waitForFileLock(File,int)",28,67
net.sf.jabref.Util.hasLockFile(File),11,28
net.sf.jabref.Util.getLockFileTimeStamp(File),15,35
net.sf.jabref.Util.deleteLockFile(File),9,18
"net.sf.jabref.Util.getRemainder(String[],String[])",16,40
net.sf.jabref.export.layout.format.LastPage.format(String),7,12
net.sf.jabref.BibLatexEntryTypes.$1.getName(),3,3
net.sf.jabref.BibLatexEntryTypes.$1.getRequiredFields(),7,8
net.sf.jabref.BibLatexEntryTypes.$1.getOptionalFields(),34,35
net.sf.jabref.BibLatexEntryTypes.$1.getPrimaryOptionalFields(),21,23
net.sf.jabref.BibLatexEntryTypes.$1.describeRequiredFields(),4,4
"net.sf.jabref.BibLatexEntryTypes.$1.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,13
net.sf.jabref.BibLatexEntryTypes.$2.getName(),3,3
net.sf.jabref.BibLatexEntryTypes.$2.getRequiredFields(),6,7
net.sf.jabref.BibLatexEntryTypes.$2.getOptionalFields(),38,39
net.sf.jabref.BibLatexEntryTypes.$2.getPrimaryOptionalFields(),22,23
net.sf.jabref.BibLatexEntryTypes.$2.describeRequiredFields(),4,4
"net.sf.jabref.BibLatexEntryTypes.$2.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,13
gnu.dtools.ritopt.OptionArrayable.modify(String),6,6
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager)",124,804
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$1.stateChanged(ChangeEvent)",7,8
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$2.stateChanged(ChangeEvent)",8,9
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$3.stateChanged(ChangeEvent)",9,10
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$4.stateChanged(ChangeEvent)",11,15
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$5.stateChanged(ChangeEvent)",8,10
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$6.stateChanged(ChangeEvent)",8,10
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$7.actionPerformed(ActionEvent)",14,20
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$8.actionPerformed(ActionEvent)",19,35
"net.sf.jabref.groups.GroupSelector.GroupSelector(JabRefFrame,SidePaneManager).$9.actionPerformed(ActionEvent)",17,29
net.sf.jabref.groups.GroupSelector.definePopup(),38,175
net.sf.jabref.groups.GroupSelector.definePopup().$10.mousePressed(MouseEvent),5,7
net.sf.jabref.groups.GroupSelector.definePopup().$10.mouseReleased(MouseEvent),5,7
net.sf.jabref.groups.GroupSelector.definePopup().$10.mouseClicked(MouseEvent),18,38
net.sf.jabref.groups.GroupSelector.definePopup().$11.popupMenuWillBecomeVisible(PopupMenuEvent),4,6
net.sf.jabref.groups.GroupSelector.definePopup().$11.popupMenuWillBecomeInvisible(PopupMenuEvent),9,11
net.sf.jabref.groups.GroupSelector.definePopup().$11.popupMenuCanceled(PopupMenuEvent),9,11
net.sf.jabref.groups.GroupSelector.showPopup(MouseEvent),47,491
net.sf.jabref.groups.GroupSelector.valueChanged(TreeSelectionEvent),50,123
"net.sf.jabref.groups.GroupSelector.GroupingWorker.GroupingWorker(SearchRuleSet,Hashtable<String,String>)",10,19
net.sf.jabref.groups.GroupSelector.GroupingWorker.run(),17,24
net.sf.jabref.groups.GroupSelector.GroupingWorker.update(),25,39
"net.sf.jabref.groups.GroupSelector.revalidateGroups(TreePath[],Enumeration<TreePath>)",20,30
"net.sf.jabref.groups.GroupSelector.revalidateGroups(TreePath[],Enumeration<TreePath>,GroupTreeNode)",27,66
net.sf.jabref.groups.GroupSelector.revalidateGroups(),10,12
net.sf.jabref.groups.GroupSelector.revalidateGroups(GroupTreeNode),17,26
net.sf.jabref.groups.GroupSelector.actionPerformed(ActionEvent),43,95
net.sf.jabref.groups.GroupSelector.componentOpening(),3,3
net.sf.jabref.groups.GroupSelector.componentClosing(),11,15
net.sf.jabref.groups.GroupSelector.setGroups(GroupTreeNode),9,22
"net.sf.jabref.groups.GroupSelector.addGroups(GroupTreeNode,CompoundEdit)",26,47
net.sf.jabref.groups.GroupSelector.NodeAction.NodeAction(String),3,3
net.sf.jabref.groups.GroupSelector.NodeAction.getNode(),2,4
net.sf.jabref.groups.GroupSelector.NodeAction.setNode(GroupTreeNode),3,7
net.sf.jabref.groups.GroupSelector.NodeAction.getNodeToUse(),14,34
net.sf.jabref.groups.GroupSelector.EditGroupAction.EditGroupAction(),4,5
net.sf.jabref.groups.GroupSelector.EditGroupAction.actionPerformed(ActionEvent),37,83
net.sf.jabref.groups.GroupSelector.AddGroupAction.AddGroupAction(),4,5
net.sf.jabref.groups.GroupSelector.AddGroupAction.actionPerformed(ActionEvent),37,80
net.sf.jabref.groups.GroupSelector.AddSubgroupAction.AddSubgroupAction(),5,7
net.sf.jabref.groups.GroupSelector.AddSubgroupAction.actionPerformed(ActionEvent),34,67
net.sf.jabref.groups.GroupSelector.RemoveGroupAndSubgroupsAction.RemoveGroupAndSubgroupsAction(),5,7
net.sf.jabref.groups.GroupSelector.RemoveGroupAndSubgroupsAction.actionPerformed(ActionEvent),35,73
net.sf.jabref.groups.GroupSelector.RemoveSubgroupsAction.RemoveSubgroupsAction(),5,7
net.sf.jabref.groups.GroupSelector.RemoveSubgroupsAction.actionPerformed(ActionEvent),35,68
net.sf.jabref.groups.GroupSelector.RemoveGroupKeepSubgroupsAction.RemoveGroupKeepSubgroupsAction(),5,7
net.sf.jabref.groups.GroupSelector.RemoveGroupKeepSubgroupsAction.actionPerformed(ActionEvent),38,93
net.sf.jabref.groups.GroupSelector.getSelectionPath(),3,7
net.sf.jabref.groups.GroupSelector.SortDirectSubgroupsAction.SortDirectSubgroupsAction(),7,8
net.sf.jabref.groups.GroupSelector.SortDirectSubgroupsAction.actionPerformed(ActionEvent),25,41
net.sf.jabref.groups.GroupSelector.SortAllSubgroupsAction.SortAllSubgroupsAction(),6,7
net.sf.jabref.groups.GroupSelector.SortAllSubgroupsAction.actionPerformed(ActionEvent),27,43
net.sf.jabref.groups.GroupSelector.$12.actionPerformed(ActionEvent),7,8
net.sf.jabref.groups.GroupSelector.ExpandSubtreeAction.ExpandSubtreeAction(),5,7
net.sf.jabref.groups.GroupSelector.ExpandSubtreeAction.actionPerformed(ActionEvent),10,24
net.sf.jabref.groups.GroupSelector.CollapseSubtreeAction.CollapseSubtreeAction(),5,7
net.sf.jabref.groups.GroupSelector.CollapseSubtreeAction.actionPerformed(ActionEvent),10,24
net.sf.jabref.groups.GroupSelector.MoveNodeUpAction.MoveNodeUpAction(),5,5
net.sf.jabref.groups.GroupSelector.MoveNodeUpAction.actionPerformed(ActionEvent),6,11
net.sf.jabref.groups.GroupSelector.MoveNodeDownAction.MoveNodeDownAction(),5,5
net.sf.jabref.groups.GroupSelector.MoveNodeDownAction.actionPerformed(ActionEvent),6,11
net.sf.jabref.groups.GroupSelector.MoveNodeLeftAction.MoveNodeLeftAction(),6,7
net.sf.jabref.groups.GroupSelector.MoveNodeLeftAction.actionPerformed(ActionEvent),7,12
net.sf.jabref.groups.GroupSelector.MoveNodeRightAction.MoveNodeRightAction(),5,5
net.sf.jabref.groups.GroupSelector.MoveNodeRightAction.actionPerformed(ActionEvent),6,11
"net.sf.jabref.groups.GroupSelector.moveNodeUp(GroupTreeNode,boolean)",31,66
"net.sf.jabref.groups.GroupSelector.moveNodeDown(GroupTreeNode,boolean)",31,66
"net.sf.jabref.groups.GroupSelector.moveNodeLeft(GroupTreeNode,boolean)",29,67
"net.sf.jabref.groups.GroupSelector.moveNodeRight(GroupTreeNode,boolean)",28,63
"net.sf.jabref.groups.GroupSelector.concludeMoveGroup(AbstractUndoableEdit,GroupTreeNode)",31,48
"net.sf.jabref.groups.GroupSelector.concludeAssignment(AbstractUndoableEdit,GroupTreeNode,int)",27,58
net.sf.jabref.groups.GroupSelector.getGroupTreeRoot(),3,5
net.sf.jabref.groups.GroupSelector.getExpandedPaths(),7,12
net.sf.jabref.groups.GroupSelector.setActiveBasePanel(BasePanel),25,78
net.sf.jabref.groups.GroupSelector.reportError(String),32,44
"net.sf.jabref.groups.GroupSelector.reportError(String,Exception)",17,27
"net.sf.jabref.groups.GroupSelector.showMatchingGroups(BibtexEntry[],boolean)",36,89
net.sf.jabref.groups.GroupSelector.showOverlappingGroups(List<BibtexEntry>),33,73
net.sf.jabref.EntryEditorTabList.EntryEditorTabList(),5,5
net.sf.jabref.EntryEditorTabList.init(),21,103
net.sf.jabref.EntryEditorTabList.getTabCount(),4,4
net.sf.jabref.EntryEditorTabList.getTabName(int),4,6
net.sf.jabref.EntryEditorTabList.getTabFields(int),4,7
net.sf.jabref.FieldComparator.FieldComparator(String),3,5
"net.sf.jabref.FieldComparator.FieldComparator(String,boolean)",24,49
"net.sf.jabref.FieldComparator.compare(BibtexEntry,BibtexEntry)",59,181
net.sf.jabref.FieldComparator.getField(BibtexEntry),5,11
net.sf.jabref.FieldComparator.getFieldName(),3,5
net.sf.jabref.external.SpringerLinkPdfDownload.SpringerLinkPdfDownload(),4,4
net.sf.jabref.external.SpringerLinkPdfDownload.supportsSite(URL),9,11
net.sf.jabref.external.SpringerLinkPdfDownload.findFullTextURL(URL),25,96
net.sf.jabref.BibtexFields.BibtexFields(),110,572
net.sf.jabref.BibtexFields.setNumericFieldsFromPrefs(),36,122
net.sf.jabref.BibtexFields.add(BibtexSingleField),12,19
net.sf.jabref.BibtexFields.readXML(String),29,76
net.sf.jabref.BibtexFields.getField(String),8,12
net.sf.jabref.BibtexFields.getFieldExtras(String),6,14
net.sf.jabref.BibtexFields.getEditorType(String),10,18
net.sf.jabref.BibtexFields.getFieldWeight(String),8,17
"net.sf.jabref.BibtexFields.setFieldWeight(String,double)",7,19
net.sf.jabref.BibtexFields.getFieldLength(String),8,17
net.sf.jabref.BibtexFields.getFieldDisplayName(String),9,23
net.sf.jabref.BibtexFields.isWriteableField(String),5,13
net.sf.jabref.BibtexFields.isDisplayableField(String),5,13
net.sf.jabref.BibtexFields.isStandardField(String),9,27
net.sf.jabref.BibtexFields.isNumeric(String),5,12
net.sf.jabref.BibtexFields.getAllFieldNames(),8,9
net.sf.jabref.BibtexFields.getFieldName(int),9,9
net.sf.jabref.BibtexFields.numberOfPublicFields(),5,7
net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(String),6,10
"net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(String,boolean)",8,14
"net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(String,boolean,double)",9,17
"net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(String,boolean,int)",9,17
"net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(String,boolean,double,int)",10,20
"net.sf.jabref.BibtexFields.BibtexSingleField.BibtexSingleField(TXMLReader,Element)",38,108
"net.sf.jabref.BibtexFields.BibtexSingleField.setFlag(boolean,int)",3,13
net.sf.jabref.BibtexFields.BibtexSingleField.isSet(int),2,5
net.sf.jabref.BibtexFields.BibtexSingleField.isStandard(),2,3
net.sf.jabref.BibtexFields.BibtexSingleField.setPrivate(),2,3
net.sf.jabref.BibtexFields.BibtexSingleField.isPrivate(),1,1
net.sf.jabref.BibtexFields.BibtexSingleField.setPublic(),2,3
net.sf.jabref.BibtexFields.BibtexSingleField.isPublic(),1,1
net.sf.jabref.BibtexFields.BibtexSingleField.setDisplayable(boolean),4,7
net.sf.jabref.BibtexFields.BibtexSingleField.isDisplayable(),2,3
net.sf.jabref.BibtexFields.BibtexSingleField.setWriteable(boolean),4,7
net.sf.jabref.BibtexFields.BibtexSingleField.isWriteable(),2,3
net.sf.jabref.BibtexFields.BibtexSingleField.setAlternativeDisplayName(String),5,10
net.sf.jabref.BibtexFields.BibtexSingleField.getAlternativeDisplayName(),4,7
net.sf.jabref.BibtexFields.BibtexSingleField.setExtras(String),3,6
net.sf.jabref.BibtexFields.BibtexSingleField.getExtras(),15,19
net.sf.jabref.BibtexFields.BibtexSingleField.setEditorType(int),3,7
net.sf.jabref.BibtexFields.BibtexSingleField.getEditorType(),2,4
net.sf.jabref.BibtexFields.BibtexSingleField.setWeight(double),3,5
net.sf.jabref.BibtexFields.BibtexSingleField.getWeight(),1,2
net.sf.jabref.BibtexFields.BibtexSingleField.getLength(),1,2
net.sf.jabref.BibtexFields.BibtexSingleField.getFieldName(),3,4
net.sf.jabref.BibtexFields.BibtexSingleField.setNumeric(boolean),19,30
net.sf.jabref.BibtexFields.BibtexSingleField.isNumeric(),1,2
"net.sf.jabref.FileTab.FileTab(JabRefFrame,JabRefPreferences)",93,439
"net.sf.jabref.FileTab.FileTab(JabRefFrame,JabRefPreferences).$1.stateChanged(ChangeEvent)",11,22
net.sf.jabref.FileTab.setValues(),30,133
net.sf.jabref.FileTab.storeSettings(),42,168
net.sf.jabref.FileTab.readyToClose(),2,2
net.sf.jabref.FileTab.getTabName(),6,6
net.sf.jabref.gui.GenFieldsCustomizer.GenFieldsCustomizer(JabRefFrame),29,54
net.sf.jabref.gui.GenFieldsCustomizer.jbInit(),65,240
net.sf.jabref.gui.GenFieldsCustomizer.jbInit().$1.actionPerformed(ActionEvent),7,8
net.sf.jabref.gui.GenFieldsCustomizer.ok_actionPerformed(ActionEvent),60,148
net.sf.jabref.gui.GenFieldsCustomizer.cancel_actionPerformed(ActionEvent),8,9
net.sf.jabref.gui.GenFieldsCustomizer.setFieldsText(),16,46
net.sf.jabref.gui.GenFieldsCustomizer.revert_actionPerformed(ActionEvent),17,44
net.sf.jabref.gui.GenFieldsCustomizer_ok_actionAdapter.GenFieldsCustomizer_ok_actionAdapter(GenFieldsCustomizer),6,11
net.sf.jabref.gui.GenFieldsCustomizer_ok_actionAdapter.actionPerformed(ActionEvent),4,7
net.sf.jabref.gui.GenFieldsCustomizer_cancel_actionAdapter.GenFieldsCustomizer_cancel_actionAdapter(GenFieldsCustomizer),7,12
net.sf.jabref.gui.GenFieldsCustomizer_cancel_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.gui.GenFieldsCustomizer_revert_actionAdapter.GenFieldsCustomizer_revert_actionAdapter(GenFieldsCustomizer),7,12
net.sf.jabref.gui.GenFieldsCustomizer_revert_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.JabRefFrame.ToolBar.addAction(Action),9,13
net.sf.jabref.JabRefFrame.JabRefFrame(),6,6
net.sf.jabref.JabRefFrame.init(),101,226
net.sf.jabref.JabRefFrame.init().$1.windowClosing(WindowEvent),6,8
net.sf.jabref.JabRefFrame.init().$2.stateChanged(ChangeEvent),30,68
net.sf.jabref.JabRefFrame.initSidePane(),39,116
net.sf.jabref.JabRefFrame.AboutAction.AboutAction(),5,5
net.sf.jabref.JabRefFrame.AboutAction.actionPerformed(ActionEvent),3,4
net.sf.jabref.JabRefFrame.about(),49,95
net.sf.jabref.JabRefFrame.about().$3.hyperlinkUpdate(javax.swing.event.HyperlinkEvent),14,24
net.sf.jabref.JabRefFrame.preferences(),17,28
net.sf.jabref.JabRefFrame.preferences().$4.run(),13,25
net.sf.jabref.JabRefFrame.preferences().$4.update(),6,6
net.sf.jabref.JabRefFrame.prefs(),4,5
net.sf.jabref.JabRefFrame.quit(),104,287
net.sf.jabref.JabRefFrame.macOSXRegistration(),51,137
net.sf.jabref.JabRefFrame.initLayout(),73,363
net.sf.jabref.JabRefFrame.initLabelMaker(),13,54
net.sf.jabref.JabRefFrame.baseAt(int),9,15
net.sf.jabref.JabRefFrame.showBaseAt(int),6,6
net.sf.jabref.JabRefFrame.showBasePanel(BasePanel),7,9
net.sf.jabref.JabRefFrame.basePanel(),9,15
net.sf.jabref.JabRefFrame.baseCount(),6,9
net.sf.jabref.JabRefFrame.markActiveBasePanel(),20,54
net.sf.jabref.JabRefFrame.getTabIndex(JComponent),7,12
net.sf.jabref.JabRefFrame.getTabbedPane(),2,6
net.sf.jabref.JabRefFrame.getTabTitle(JComponent),8,11
net.sf.jabref.JabRefFrame.getTabTooltip(JComponent),11,13
"net.sf.jabref.JabRefFrame.setTabTitle(JComponent,String,String)",12,29
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String,String,URL)",12,22
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String,String,String,KeyStroke)",14,32
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String)",6,10
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String,KeyStroke)",9,17
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String,String)",12,28
"net.sf.jabref.JabRefFrame.GeneralAction.GeneralAction(String,String,String,KeyStroke)",15,35
net.sf.jabref.JabRefFrame.GeneralAction.actionPerformed(ActionEvent),20,26
net.sf.jabref.JabRefFrame.NewEntryAction.NewEntryAction(KeyStroke),17,27
net.sf.jabref.JabRefFrame.NewEntryAction.NewEntryAction(String),10,15
"net.sf.jabref.JabRefFrame.NewEntryAction.NewEntryAction(String,KeyStroke)",13,22
net.sf.jabref.JabRefFrame.NewEntryAction.actionPerformed(ActionEvent),27,55
net.sf.jabref.JabRefFrame.setUpImportMenus(),4,10
net.sf.jabref.JabRefFrame.fillMenu(),155,669
net.sf.jabref.JabRefFrame.subMenu(String),13,32
net.sf.jabref.JabRefFrame.addPluginMenuItem(JMenuItem),6,21
net.sf.jabref.JabRefFrame.createToolBar(),78,324
net.sf.jabref.JabRefFrame.output(String),6,6
net.sf.jabref.JabRefFrame.output(String).$5.run(),6,8
net.sf.jabref.JabRefFrame.stopShowingSearchResults(),8,11
net.sf.jabref.JabRefFrame.initActions(),74,150
net.sf.jabref.JabRefFrame.initActions().$6.stateChanged(ChangeEvent),5,6
"net.sf.jabref.JabRefFrame.setEnabled(List<Object>,boolean)",14,36
net.sf.jabref.JabRefFrame.updateEnabledState(),19,47
net.sf.jabref.JabRefFrame.setupAllTables(),35,44
"net.sf.jabref.JabRefFrame.addTab(BibtexDatabase,File,HashMap<String,String>,String,boolean)",16,32
"net.sf.jabref.JabRefFrame.addTab(BibtexDatabase,File,MetaData,String,boolean)",15,30
"net.sf.jabref.JabRefFrame.addTab(BasePanel,File,boolean)",23,41
net.sf.jabref.JabRefFrame.closeCurrentTab(),11,16
net.sf.jabref.JabRefFrame.closeCurrentTabNoWarning(),8,15
net.sf.jabref.JabRefFrame.SelectKeysAction.SelectKeysAction(),8,8
net.sf.jabref.JabRefFrame.SelectKeysAction.actionPerformed(ActionEvent),32,71
net.sf.jabref.JabRefFrame.CloseAction.CloseAction(),19,35
net.sf.jabref.JabRefFrame.CloseAction.actionPerformed(ActionEvent),4,5
net.sf.jabref.JabRefFrame.CloseDatabaseAction.CloseDatabaseAction(),14,25
net.sf.jabref.JabRefFrame.CloseDatabaseAction.actionPerformed(ActionEvent),37,94
net.sf.jabref.JabRefFrame.CloseDatabaseAction.close(),30,42
net.sf.jabref.JabRefFrame.NewDatabaseAction.NewDatabaseAction(),13,21
net.sf.jabref.JabRefFrame.NewDatabaseAction.actionPerformed(ActionEvent),18,27
net.sf.jabref.JabRefFrame.ImportCiteSeerAction.ImportCiteSeerAction(),19,32
net.sf.jabref.JabRefFrame.ImportCiteSeerAction.actionPerformed(ActionEvent),33,48
net.sf.jabref.JabRefFrame.ImportCiteSeerAction.actionPerformed(ActionEvent).$1.UpdateComponent.UpdateComponent(boolean),3,5
net.sf.jabref.JabRefFrame.ImportCiteSeerAction.actionPerformed(ActionEvent).$1.UpdateComponent.run(),23,30
net.sf.jabref.JabRefFrame.ImportCiteSeerAction.actionPerformed(ActionEvent).$1.run(),46,108
net.sf.jabref.JabRefFrame.FetchCiteSeerAction.FetchCiteSeerAction(),19,31
net.sf.jabref.JabRefFrame.FetchCiteSeerAction.actionPerformed(ActionEvent),36,64
net.sf.jabref.JabRefFrame.FetchCiteSeerAction.actionPerformed(ActionEvent).$1.$1.setSortingByCitationCount(),15,19
net.sf.jabref.JabRefFrame.FetchCiteSeerAction.actionPerformed(ActionEvent).$1.$1.run(),24,32
net.sf.jabref.JabRefFrame.FetchCiteSeerAction.actionPerformed(ActionEvent).$1.run(),34,60
net.sf.jabref.JabRefFrame.NewSubDatabaseAction.NewSubDatabaseAction(),18,25
net.sf.jabref.JabRefFrame.NewSubDatabaseAction.actionPerformed(ActionEvent),38,70
net.sf.jabref.JabRefFrame.IntegrityCheckAction.IntegrityCheckAction(),14,26
net.sf.jabref.JabRefFrame.IntegrityCheckAction.actionPerformed(ActionEvent),23,45
net.sf.jabref.JabRefFrame.ShowPrefsAction.ShowPrefsAction(),10,14
net.sf.jabref.JabRefFrame.ShowPrefsAction.actionPerformed(ActionEvent),4,5
"net.sf.jabref.JabRefFrame.addImportedEntries(BasePanel,List<BibtexEntry>,String,boolean)",26,52
"net.sf.jabref.JabRefFrame.addImportedEntries(BasePanel,List<BibtexEntry>,String,boolean).$7.run()",21,35
"net.sf.jabref.JabRefFrame.addImportedEntries(BasePanel,List<BibtexEntry>,String,boolean).$8.run()",5,5
"net.sf.jabref.JabRefFrame.addBibEntries(List<BibtexEntry>,String,boolean)",96,353
"net.sf.jabref.JabRefFrame.setUpImportMenu(JMenu,boolean)",29,95
net.sf.jabref.JabRefFrame.getFileHistory(),2,6
net.sf.jabref.JabRefFrame.setPreviewActive(boolean),12,21
net.sf.jabref.JabRefFrame.removeCachedEntryEditors(),11,17
net.sf.jabref.JabRefFrame.block(),12,12
net.sf.jabref.JabRefFrame.unblock(),18,19
net.sf.jabref.JabRefFrame.setProgressBarVisible(boolean),21,38
net.sf.jabref.JabRefFrame.setProgressBarVisible(boolean).$9.run(),5,6
net.sf.jabref.JabRefFrame.setProgressBarValue(int),18,35
net.sf.jabref.JabRefFrame.setProgressBarValue(int).$10.run(),5,6
net.sf.jabref.JabRefFrame.setProgressBarIndeterminate(boolean),19,35
net.sf.jabref.JabRefFrame.setProgressBarIndeterminate(boolean).$11.run(),6,6
net.sf.jabref.JabRefFrame.setProgressBarMaximum(int),23,46
net.sf.jabref.JabRefFrame.setProgressBarMaximum(int).$12.run(),6,6
net.sf.jabref.JabRefFrame.SaveSessionAction.SaveSessionAction(),11,18
net.sf.jabref.JabRefFrame.SaveSessionAction.actionPerformed(ActionEvent),56,115
net.sf.jabref.JabRefFrame.LoadSessionAction.LoadSessionAction(),11,19
net.sf.jabref.JabRefFrame.LoadSessionAction.actionPerformed(ActionEvent),14,22
net.sf.jabref.JabRefFrame.LoadSessionAction.actionPerformed(ActionEvent).$1.run(),29,63
net.sf.jabref.JabRefFrame.ChangeTabAction.ChangeTabAction(boolean),10,22
net.sf.jabref.JabRefFrame.ChangeTabAction.actionPerformed(ActionEvent),10,21
"net.sf.jabref.JabRefFrame.EditAction.EditAction(String,URL)",18,39
net.sf.jabref.JabRefFrame.EditAction.actionPerformed(ActionEvent),15,30
net.sf.jabref.JabRefFrame.CustomizeExportsAction.CustomizeExportsAction(),7,8
net.sf.jabref.JabRefFrame.CustomizeExportsAction.actionPerformed(ActionEvent),12,17
net.sf.jabref.JabRefFrame.CustomizeImportsAction.CustomizeImportsAction(),7,8
net.sf.jabref.JabRefFrame.CustomizeImportsAction.actionPerformed(ActionEvent),11,15
net.sf.jabref.JabRefFrame.CustomizeEntryTypeAction.CustomizeEntryTypeAction(),7,9
net.sf.jabref.JabRefFrame.CustomizeEntryTypeAction.actionPerformed(ActionEvent),12,18
net.sf.jabref.JabRefFrame.GenFieldsCustomizationAction.GenFieldsCustomizationAction(),7,8
net.sf.jabref.JabRefFrame.GenFieldsCustomizationAction.actionPerformed(ActionEvent),13,20
net.sf.jabref.JabRefFrame.DatabasePropertiesAction.DatabasePropertiesAction(),5,7
net.sf.jabref.JabRefFrame.DatabasePropertiesAction.actionPerformed(ActionEvent),14,31
net.sf.jabref.JabRefFrame.IncreaseTableFontSizeAction.IncreaseTableFontSizeAction(),11,21
net.sf.jabref.JabRefFrame.IncreaseTableFontSizeAction.actionPerformed(ActionEvent),16,40
net.sf.jabref.JabRefFrame.DecreaseTableFontSizeAction.DecreaseTableFontSizeAction(),11,21
net.sf.jabref.JabRefFrame.DecreaseTableFontSizeAction.actionPerformed(ActionEvent),16,42
net.sf.jabref.JabRefFrame.MyGlassPane.MyGlassPane(),19,42
net.sf.jabref.JabRefFrame.MyGlassPane.isOpaque(),7,8
"net.sf.jabref.JabRefFrame.showMessage(Object,String,int)",9,15
net.sf.jabref.JabRefFrame.setStatus(String),4,4
net.sf.jabref.JabRefFrame.showMessage(String),5,8
net.sf.jabref.EntryEditorTab.EntryEditorTab(),3,3
"net.sf.jabref.EntryEditorTab.EntryEditorTab(JabRefFrame,BasePanel,List<String>,EntryEditor,boolean,String)",29,53
"net.sf.jabref.EntryEditorTab.setupPanel(JabRefFrame,BasePanel,boolean,String)",86,385
net.sf.jabref.EntryEditorTab.getEntry(),2,4
net.sf.jabref.EntryEditorTab.isFieldModified(FieldEditor),12,28
net.sf.jabref.EntryEditorTab.markIfModified(FieldEditor),10,19
net.sf.jabref.EntryEditorTab.markBaseChanged(),5,8
net.sf.jabref.EntryEditorTab.setActive(FieldEditor),11,15
net.sf.jabref.EntryEditorTab.getActive(),3,5
net.sf.jabref.EntryEditorTab.getFields(),6,8
net.sf.jabref.EntryEditorTab.activate(),13,15
net.sf.jabref.EntryEditorTab.updateAll(),7,9
net.sf.jabref.EntryEditorTab.setEntry(BibtexEntry),15,38
"net.sf.jabref.EntryEditorTab.updateField(String,String)",10,17
net.sf.jabref.EntryEditorTab.validateAllFields(),17,31
net.sf.jabref.EntryEditorTab.setEnabled(boolean),7,16
net.sf.jabref.EntryEditorTab.getPane(),3,3
"net.sf.jabref.EntryEditorTab.setupJTextComponent(JComponent,AutoCompleteListener)",72,301
net.sf.jabref.EntryEditorTab.$1.focusGained(FocusEvent),19,30
net.sf.jabref.EntryEditorTab.$1.focusGained(FocusEvent).$1.fire(DocumentEvent),9,9
net.sf.jabref.EntryEditorTab.$1.focusGained(FocusEvent).$1.changedUpdate(DocumentEvent),5,5
net.sf.jabref.EntryEditorTab.$1.focusGained(FocusEvent).$1.insertUpdate(DocumentEvent),5,5
net.sf.jabref.EntryEditorTab.$1.focusGained(FocusEvent).$1.removeUpdate(DocumentEvent),5,5
net.sf.jabref.EntryEditorTab.$1.focusLost(FocusEvent),11,13
net.sf.jabref.MnemonicAwareAction.MnemonicAwareAction(),3,3
net.sf.jabref.MnemonicAwareAction.MnemonicAwareAction(ImageIcon),6,10
"net.sf.jabref.MnemonicAwareAction.putValue(String,Object)",16,38
net.sf.jabref.gui.PersistenceTableColumnListener.PersistenceTableColumnListener(MainTable),6,15
net.sf.jabref.gui.PersistenceTableColumnListener.updateColumnPrefs(),26,100
net.sf.jabref.gui.PersistenceTableColumnListener.columnAdded(TableColumnModelEvent),13,29
net.sf.jabref.gui.PersistenceTableColumnListener.columnMarginChanged(ChangeEvent),15,27
net.sf.jabref.gui.PersistenceTableColumnListener.columnMoved(TableColumnModelEvent),15,33
net.sf.jabref.gui.PersistenceTableColumnListener.columnRemoved(TableColumnModelEvent),13,29
net.sf.jabref.gui.PersistenceTableColumnListener.columnSelectionChanged(ListSelectionEvent),11,23
"net.sf.jabref.groups.SearchGroup.SearchGroup(String,String,boolean,boolean,int)",24,87
"net.sf.jabref.groups.SearchGroup.fromString(String,BibtexDatabase,int)",49,134
net.sf.jabref.groups.SearchGroup.getTypeId(),2,2
net.sf.jabref.groups.SearchGroup.getSearchRule(),2,4
net.sf.jabref.groups.SearchGroup.toString(),15,27
net.sf.jabref.groups.SearchGroup.getSearchExpression(),3,5
net.sf.jabref.groups.SearchGroup.supportsAdd(),2,2
net.sf.jabref.groups.SearchGroup.supportsRemove(),2,2
net.sf.jabref.groups.SearchGroup.add(BibtexEntry[]),7,8
net.sf.jabref.groups.SearchGroup.remove(BibtexEntry[]),7,8
net.sf.jabref.groups.SearchGroup.equals(Object),10,23
"net.sf.jabref.groups.SearchGroup.contains(Map<String,String>,BibtexEntry)",14,25
net.sf.jabref.groups.SearchGroup.contains(BibtexEntry),7,12
"net.sf.jabref.groups.SearchGroup.applyRule(Map<String,String>,BibtexEntry)",20,39
net.sf.jabref.groups.SearchGroup.deepCopy(),28,32
net.sf.jabref.groups.SearchGroup.isCaseSensitive(),1,2
net.sf.jabref.groups.SearchGroup.isRegExp(),2,4
net.sf.jabref.groups.SearchGroup.isDynamic(),1,1
net.sf.jabref.groups.SearchGroup.getDescription(),9,10
"net.sf.jabref.groups.SearchGroup.getDescriptionForPreview(String,AST,boolean,boolean)",38,101
"net.sf.jabref.groups.SearchGroup.describeNode(AST,boolean,boolean,boolean,boolean)",50,328
net.sf.jabref.groups.SearchGroup.getShortDescription(),22,58
net.sf.jabref.bst.PurifyFunction.PurifyFunction(VM),2,2
net.sf.jabref.bst.PurifyFunction.execute(BstEntry),16,30
"net.sf.jabref.DatabaseChangeEvent.DatabaseChangeEvent(BibtexDatabase,ChangeType,BibtexEntry)",7,18
net.sf.jabref.DatabaseChangeEvent.getSource(),3,4
net.sf.jabref.DatabaseChangeEvent.getEntry(),2,4
net.sf.jabref.DatabaseChangeEvent.getType(),2,4
net.sf.jabref.SplashScreen.SplashScreen(Frame),29,76
net.sf.jabref.SplashScreen.update(Graphics),20,23
net.sf.jabref.SplashScreen.paint(Graphics),10,16
net.sf.jabref.SplashScreen.splash(),30,46
net.sf.jabref.external.ConfirmCloseFileListEntryEditor.confirmClose(FileListEntry),5,6
net.sf.jabref.export.layout.format.FormatPagesForXML.format(String),4,6
net.sf.jabref.bst.WidthFunction.WidthFunction(VM),2,2
net.sf.jabref.bst.WidthFunction.execute(BstEntry),18,32
net.sf.jabref.groups.TransferableEntrySelection.TransferableEntrySelection(BibtexEntry[]),13,36
net.sf.jabref.groups.TransferableEntrySelection.getTransferDataFlavors(),4,6
net.sf.jabref.groups.TransferableEntrySelection.isDataFlavorSupported(DataFlavor),6,14
net.sf.jabref.groups.TransferableEntrySelection.getTransferData(DataFlavor),24,44
net.sf.jabref.groups.TransferableEntrySelection.getSelection(),5,5
net.sf.jabref.groups.TransferableEntrySelection.setIncludeCiteKeyword(boolean),4,13
net.sf.jabref.external.PushToWinEdt.getName(),9,9
net.sf.jabref.external.PushToWinEdt.getApplicationName(),5,5
net.sf.jabref.external.PushToWinEdt.getTooltip(),8,8
net.sf.jabref.external.PushToWinEdt.getIcon(),5,6
net.sf.jabref.external.PushToWinEdt.getKeyStrokeName(),7,7
"net.sf.jabref.external.PushToWinEdt.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",33,66
net.sf.jabref.external.PushToWinEdt.operationCompleted(BasePanel),19,38
net.sf.jabref.external.PushToWinEdt.requiresBibtexKeys(),3,3
net.sf.jabref.external.PushToWinEdt.getSettingsPanel(),12,28
net.sf.jabref.external.PushToWinEdt.initSettingsPanel(),26,69
net.sf.jabref.external.PushToWinEdt.storeSettings(),10,20
net.sf.ext.BrowserLauncher.BrowserLauncher(),4,4
net.sf.ext.BrowserLauncher.loadClasses(),69,356
net.sf.ext.BrowserLauncher.locateBrowser(),101,337
net.sf.ext.BrowserLauncher.openURL(String),100,295
"net.sf.ext.BrowserLauncher.ICStart(int[],int)",9,10
net.sf.ext.BrowserLauncher.ICStop(int[]),2,2
"net.sf.ext.BrowserLauncher.ICLaunchURL(int,byte[],byte[],int,int[],int[])",8,9
net.sf.jabref.export.layout.format.Number.setArgument(String),6,6
net.sf.jabref.export.layout.format.Number.format(String),8,10
"net.sf.jabref.export.ExportToClipboardAction.ExportToClipboardAction(JabRefFrame,BibtexDatabase)",8,14
net.sf.jabref.export.ExportToClipboardAction.run(),119,335
"net.sf.jabref.export.ExportToClipboardAction.run().$1.lostOwnership(Clipboard,Transferable)",5,6
net.sf.jabref.export.ExportToClipboardAction.update(),4,4
gnu.dtools.ritopt.Options.Options(),3,3
gnu.dtools.ritopt.Options.Options(String),24,65
gnu.dtools.ritopt.Options.getHelp(),19,37
gnu.dtools.ritopt.Options.getUsage(),6,9
gnu.dtools.ritopt.Options.getUsageProgram(),3,5
gnu.dtools.ritopt.Options.getVersion(),2,3
gnu.dtools.ritopt.Options.getDefaultOptionFilename(),3,5
gnu.dtools.ritopt.Options.getDebugFlag(),2,4
gnu.dtools.ritopt.Options.shouldDisplayUsage(),2,4
gnu.dtools.ritopt.Options.shouldUseMenu(),1,2
gnu.dtools.ritopt.Options.setDisplayUsage(boolean),3,5
gnu.dtools.ritopt.Options.setUseMenu(boolean),2,3
gnu.dtools.ritopt.Options.setUsageProgram(String),4,8
gnu.dtools.ritopt.Options.setVersion(String),3,6
gnu.dtools.ritopt.Options.setDefaultOptionFilename(String),4,6
gnu.dtools.ritopt.Options.displayHelp(),5,6
gnu.dtools.ritopt.Options.displayVersion(),7,9
"gnu.dtools.ritopt.Options.register(String,Option)",4,9
"gnu.dtools.ritopt.Options.register(char,Option)",3,8
"gnu.dtools.ritopt.Options.register(String,char,Option)",4,11
"gnu.dtools.ritopt.Options.register(String,char,String,Option)",5,14
"gnu.dtools.ritopt.Options.register(String,char,String,Option,boolean)",6,16
gnu.dtools.ritopt.Options.register(OptionModule),4,8
"gnu.dtools.ritopt.Options.register(String,OptionModule)",7,10
gnu.dtools.ritopt.Options.process(String),19,37
gnu.dtools.ritopt.Options.getModule(String),6,8
gnu.dtools.ritopt.Options.moduleExists(String),4,6
gnu.dtools.ritopt.Options.optionInvoked(OptionEvent),8,17
gnu.dtools.ritopt.Options.split(String),23,60
gnu.dtools.ritopt.Options.writeOptionFile(String),19,57
gnu.dtools.ritopt.Options.loadOptionFile(String),19,43
gnu.dtools.ritopt.Options.processOptions(String),44,374
net.sf.jabref.export.layout.format.Default.setArgument(String),6,7
net.sf.jabref.export.layout.format.Default.format(String),7,14
net.sf.jabref.export.MSBibExportFormat.MSBibExportFormat(),7,8
"net.sf.jabref.export.MSBibExportFormat.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",43,87
"net.sf.jabref.CheckBoxMessage.CheckBoxMessage(String,String,boolean)",24,51
net.sf.jabref.CheckBoxMessage.isSelected(),1,2
gnu.dtools.ritopt.CharOption.CharOption(),1,1
gnu.dtools.ritopt.CharOption.CharOption(CharOption),2,4
gnu.dtools.ritopt.CharOption.CharOption(char),2,3
"gnu.dtools.ritopt.CharOption.CharOption(char,String)",3,6
"gnu.dtools.ritopt.CharOption.CharOption(char,char)",2,5
"gnu.dtools.ritopt.CharOption.CharOption(char,String,char)",3,9
gnu.dtools.ritopt.CharOption.getObject(),3,4
gnu.dtools.ritopt.CharOption.modify(String),7,10
gnu.dtools.ritopt.CharOption.setValue(String),7,9
gnu.dtools.ritopt.CharOption.setValue(char),2,5
gnu.dtools.ritopt.CharOption.getValue(),1,2
gnu.dtools.ritopt.CharOption.getStringValue(),2,4
gnu.dtools.ritopt.CharOption.getTypeName(),3,3
gnu.dtools.ritopt.CharOption.toString(),2,4
net.sf.jabref.about.AnimationListener.animationReady(),2,2
net.sf.jabref.imports.ParserResult.ParserResult(Collection<BibtexEntry>),14,17
"net.sf.jabref.imports.ParserResult.ParserResult(BibtexDatabase,HashMap<String,String>,HashMap<String,BibtexEntryType>)",13,29
net.sf.jabref.imports.ParserResult.toOpenTab(),6,8
net.sf.jabref.imports.ParserResult.setToOpenTab(boolean),2,5
net.sf.jabref.imports.ParserResult.getJabrefVersion(),10,17
net.sf.jabref.imports.ParserResult.setJabrefVersion(String),9,22
net.sf.jabref.imports.ParserResult.getJabrefMajorVersion(),3,6
net.sf.jabref.imports.ParserResult.setJabrefMajorVersion(int),4,13
net.sf.jabref.imports.ParserResult.getJabrefMinorVersion(),3,6
net.sf.jabref.imports.ParserResult.setJabrefMinorVersion(int),4,13
net.sf.jabref.imports.ParserResult.getDatabase(),3,4
net.sf.jabref.imports.ParserResult.getMetaData(),5,8
net.sf.jabref.imports.ParserResult.getEntryTypes(),7,10
net.sf.jabref.imports.ParserResult.getFile(),1,3
net.sf.jabref.imports.ParserResult.setFile(File),2,4
net.sf.jabref.imports.ParserResult.setEncoding(String),10,16
net.sf.jabref.imports.ParserResult.getEncoding(),8,11
net.sf.jabref.imports.ParserResult.addWarning(String),12,18
net.sf.jabref.imports.ParserResult.hasWarnings(),2,3
net.sf.jabref.imports.ParserResult.warnings(),3,9
net.sf.jabref.imports.ParserResult.isPostponedAutosaveFound(),3,6
net.sf.jabref.imports.ParserResult.setPostponedAutosaveFound(boolean),4,13
net.sf.jabref.imports.ParserResult.isInvalid(),1,2
net.sf.jabref.imports.ParserResult.setInvalid(boolean),2,5
net.sf.jabref.imports.ParserResult.getErrorMessage(),3,5
net.sf.jabref.imports.ParserResult.setErrorMessage(String),4,10
net.sf.jabref.bst.TextPrefixFunction.TextPrefixFunction(VM),3,3
net.sf.jabref.bst.TextPrefixFunction.execute(BstEntry),20,48
net.sf.jabref.gui.components.JPanelYBoxPreferredWidth.getMaximumSize(),6,13
gnu.dtools.ritopt.OptionProcessingException.OptionProcessingException(String),5,6
net.sf.jabref.export.layout.format.ResolvePDF.format(String),35,47
net.sf.jabref.export.IExportFormat.getConsoleName(),5,7
net.sf.jabref.export.IExportFormat.getDisplayName(),10,12
net.sf.jabref.export.IExportFormat.getFileFilter(),6,10
"net.sf.jabref.export.IExportFormat.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",22,52
"net.sf.jabref.collab.GroupChange.GroupChange(GroupTreeNode,GroupTreeNode)",10,20
"net.sf.jabref.collab.GroupChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",48,122
net.sf.jabref.collab.GroupChange.description(),15,17
"net.sf.jabref.StringDialog.StringDialog(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences)",73,277
"net.sf.jabref.StringDialog.StringDialog(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences).$1.windowClosing(WindowEvent)",6,8
"net.sf.jabref.StringDialog.StringDialog(JabRefFrame,BasePanel,BibtexDatabase,JabRefPreferences).$2.accept(Component)",4,5
net.sf.jabref.StringDialog.StringTable.StringTable(StringTableModel),37,86
net.sf.jabref.StringDialog.StringTable.getPane(),2,2
net.sf.jabref.StringDialog.sortStrings(),13,29
net.sf.jabref.StringDialog.refreshTable(),7,10
"net.sf.jabref.StringDialog.StringTableModel.StringTableModel(StringDialog,BibtexDatabase)",8,13
"net.sf.jabref.StringDialog.StringTableModel.getValueAt(int,int)",9,15
"net.sf.jabref.StringDialog.StringTableModel.setValueAt(Object,int,int)",57,198
net.sf.jabref.StringDialog.StringTableModel.getColumnCount(),2,2
net.sf.jabref.StringDialog.StringTableModel.getRowCount(),6,7
net.sf.jabref.StringDialog.StringTableModel.getColumnName(int),7,11
"net.sf.jabref.StringDialog.StringTableModel.isCellEditable(int,int)",4,4
net.sf.jabref.StringDialog.isNumber(String),10,13
net.sf.jabref.StringDialog.assureNotEditing(),9,20
net.sf.jabref.StringDialog.CloseAction.CloseAction(StringDialog),14,22
net.sf.jabref.StringDialog.CloseAction.actionPerformed(ActionEvent),14,25
net.sf.jabref.StringDialog.NewStringAction.NewStringAction(StringDialog),11,17
net.sf.jabref.StringDialog.NewStringAction.actionPerformed(ActionEvent),46,129
net.sf.jabref.StringDialog.StoreContentAction.StoreContentAction(StringDialog),13,20
net.sf.jabref.StringDialog.StoreContentAction.actionPerformed(ActionEvent),3,4
net.sf.jabref.StringDialog.RemoveStringAction.RemoveStringAction(StringDialog),13,22
net.sf.jabref.StringDialog.RemoveStringAction.actionPerformed(ActionEvent),62,117
net.sf.jabref.StringDialog.UndoAction.UndoAction(),8,12
net.sf.jabref.StringDialog.UndoAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.StringDialog.RedoAction.RedoAction(),9,12
net.sf.jabref.StringDialog.RedoAction.actionPerformed(ActionEvent),8,9
"net.sf.jabref.export.CustomExportDialog.CustomExportDialog(JabRefFrame,String,String,String)",14,29
net.sf.jabref.export.CustomExportDialog.CustomExportDialog(JabRefFrame),68,264
net.sf.jabref.export.CustomExportDialog.CustomExportDialog(JabRefFrame).$1.actionPerformed(ActionEvent),28,44
net.sf.jabref.export.CustomExportDialog.CustomExportDialog(JabRefFrame).$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.export.CustomExportDialog.CustomExportDialog(JabRefFrame).$3.actionPerformed(ActionEvent),21,46
net.sf.jabref.export.CustomExportDialog.okPressed(),1,2
net.sf.jabref.export.CustomExportDialog.index(),1,2
net.sf.jabref.export.CustomExportDialog.oldField(),2,3
net.sf.jabref.export.CustomExportDialog.oldName(),2,3
net.sf.jabref.export.CustomExportDialog.oldRegexp(),2,3
net.sf.jabref.export.CustomExportDialog.layoutFile(),4,6
net.sf.jabref.export.CustomExportDialog.name(),3,4
net.sf.jabref.export.CustomExportDialog.extension(),6,14
net.sf.jabref.groups.GroupsTree.GroupsTree(GroupSelector),47,78
net.sf.jabref.groups.GroupsTree.dragEnter(DragSourceDragEvent),6,8
net.sf.jabref.groups.GroupsTree.dragOver(DragSourceDragEvent),23,69
net.sf.jabref.groups.GroupsTree.dropActionChanged(DragSourceDragEvent),8,9
net.sf.jabref.groups.GroupsTree.dragDropEnd(DragSourceDropEvent),6,9
net.sf.jabref.groups.GroupsTree.dragExit(DragSourceEvent),6,7
net.sf.jabref.groups.GroupsTree.dragEnter(DropTargetDragEvent),7,8
net.sf.jabref.groups.GroupsTree.dragOver(DropTargetDragEvent),73,219
net.sf.jabref.groups.GroupsTree.dropActionChanged(DropTargetDragEvent),8,9
net.sf.jabref.groups.GroupsTree.drop(DropTargetDropEvent),84,248
net.sf.jabref.groups.GroupsTree.dragExit(DropTargetEvent),9,9
net.sf.jabref.groups.GroupsTree.dragGestureRecognized(DragGestureEvent),16,37
net.sf.jabref.groups.GroupsTree.getSelectedNode(),7,22
net.sf.jabref.groups.GroupsTree.refreshPaths(Enumeration<TreePath>),24,57
net.sf.jabref.groups.GroupsTree.refreshPaths(TreePath[]),20,52
net.sf.jabref.groups.GroupsTree.setHighlight1Cell(Object),9,18
net.sf.jabref.groups.GroupsTree.setHighlight2Cells(Object[]),10,18
net.sf.jabref.groups.GroupsTree.setHighlight3Cells(Object[]),10,18
net.sf.jabref.groups.GroupsTree.setHighlightBorderCell(GroupTreeNode),11,21
"net.sf.jabref.groups.GroupsTree.sort(GroupTreeNode,boolean)",10,17
"net.sf.jabref.groups.GroupsTree.sortWithoutRevalidate(GroupTreeNode,boolean)",16,53
net.sf.jabref.groups.GroupsTree.expandSubtree(GroupTreeNode),10,21
net.sf.jabref.groups.GroupsTree.collapseSubtree(GroupTreeNode),10,21
net.sf.jabref.groups.GroupsTree.hasExpandedDescendant(TreePath),18,50
net.sf.jabref.groups.GroupsTree.hasCollapsedDescendant(TreePath),18,50
"net.sf.jabref.collab.MetaDataChange.MetaDataChange(MetaData,MetaData)",10,22
net.sf.jabref.collab.MetaDataChange.getChangeCount(),4,4
"net.sf.jabref.collab.MetaDataChange.insertMetaDataAddition(String,Vector<String>)",12,18
net.sf.jabref.collab.MetaDataChange.insertMetaDataRemoval(String),11,14
"net.sf.jabref.collab.MetaDataChange.insertMetaDataChange(String,Vector<String>)",12,18
net.sf.jabref.collab.MetaDataChange.description(),28,56
"net.sf.jabref.collab.MetaDataChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",21,60
"net.sf.jabref.collab.MetaDataChange.MetaDataChangeUnit.MetaDataChangeUnit(int,String,Vector<String>)",9,16
"net.sf.jabref.ContentSelectorDialog2.ContentSelectorDialog2(Frame,JabRefFrame,BasePanel,boolean,MetaData,String)",21,39
"net.sf.jabref.ContentSelectorDialog2.ContentSelectorDialog2(Dialog,JabRefFrame,BasePanel,boolean,MetaData,String)",21,39
net.sf.jabref.ContentSelectorDialog2.doInit(),31,70
net.sf.jabref.ContentSelectorDialog2.setupActions(),17,101
net.sf.jabref.ContentSelectorDialog2.setupActions().$1.valueChanged(ListSelectionEvent),15,24
net.sf.jabref.ContentSelectorDialog2.setupActions().$2.actionPerformed(ActionEvent),4,6
net.sf.jabref.ContentSelectorDialog2.setupActions().$3.actionPerformed(ActionEvent),21,58
net.sf.jabref.ContentSelectorDialog2.setupActions().$4.actionPerformed(ActionEvent),16,36
net.sf.jabref.ContentSelectorDialog2.setupActions().$5.valueChanged(ListSelectionEvent),15,20
net.sf.jabref.ContentSelectorDialog2.setupActions().$6.actionPerformed(ActionEvent),23,42
net.sf.jabref.ContentSelectorDialog2.setupActions().$7.actionPerformed(ActionEvent),7,9
net.sf.jabref.ContentSelectorDialog2.setupActions().$8.focusLost(FocusEvent),27,59
net.sf.jabref.ContentSelectorDialog2.setupActions().$9.actionPerformed(ActionEvent),21,55
net.sf.jabref.ContentSelectorDialog2.setupActions().$10.actionPerformed(ActionEvent),11,13
net.sf.jabref.ContentSelectorDialog2.setupActions().$11.actionPerformed(ActionEvent),6,7
net.sf.jabref.ContentSelectorDialog2.setupActions().$12.actionPerformed(ActionEvent),15,21
net.sf.jabref.ContentSelectorDialog2.setupActions().$13.actionPerformed(ActionEvent),4,5
net.sf.jabref.ContentSelectorDialog2.newWordAction(),17,31
net.sf.jabref.ContentSelectorDialog2.applyChanges(),64,171
net.sf.jabref.ContentSelectorDialog2.setupFieldSelector(),17,30
net.sf.jabref.ContentSelectorDialog2.setupWordSelector(),27,89
"net.sf.jabref.ContentSelectorDialog2.findPos(DefaultListModel,String)",10,17
net.sf.jabref.ContentSelectorDialog2.initLayout(),65,367
net.sf.jabref.KeyBindingsDialog.getAction(),3,3
net.sf.jabref.KeyBindingsDialog.getNewKeyBindings(),6,7
"net.sf.jabref.KeyBindingsDialog.KeyBindingsDialog(HashMap<String,String>,HashMap<String,String>)",52,156
"net.sf.jabref.KeyBindingsDialog.KeyBindingsDialog(HashMap<String,String>,HashMap<String,String>).$1.windowClosing(WindowEvent)",6,7
net.sf.jabref.KeyBindingsDialog.setTop(),15,29
net.sf.jabref.KeyBindingsDialog.JBM_CustomKeyBindingsListener.keyPressed(KeyEvent),51,170
net.sf.jabref.KeyBindingsDialog.MyListSelectionListener.valueChanged(ListSelectionEvent),28,50
net.sf.jabref.KeyBindingsDialog.setList(),40,121
net.sf.jabref.KeyBindingsDialog.KeystrokeTable.KeystrokeTable(KeystrokeTableModel),3,7
"net.sf.jabref.KeyBindingsDialog.KeystrokeTable.isCellEditable(int,int)",4,4
net.sf.jabref.KeyBindingsDialog.KeystrokeTable.getOriginalName(int),8,10
"net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.KeystrokeTableModel(TreeMap<String,String[]>)",16,30
"net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.isCellEditable(int,int)",4,4
net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.getColumnName(int),8,11
net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.getColumnCount(),2,2
net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.getRowCount(),4,4
"net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.getValueAt(int,int)",6,16
"net.sf.jabref.KeyBindingsDialog.KeystrokeTableModel.setValueAt(Object,int,int)",7,9
net.sf.jabref.KeyBindingsDialog.setButtons(),8,20
net.sf.jabref.KeyBindingsDialog.setButtons().$2.actionPerformed(ActionEvent),13,17
net.sf.jabref.KeyBindingsDialog.setButtons().$3.actionPerformed(ActionEvent),9,10
net.sf.jabref.KeyBindingsDialog.setButtons().$4.actionPerformed(ActionEvent),13,19
net.sf.jabref.KeyBindingsDialog.setToDefault(String),7,16
net.sf.jabref.EntryCustomizationDialog.EntryCustomizationDialog(JabRefFrame),85,378
net.sf.jabref.EntryCustomizationDialog.EntryCustomizationDialog(JabRefFrame).$1.actionPerformed(ActionEvent),4,5
"net.sf.jabref.EntryCustomizationDialog.EntryCustomizationDialog(JabRefFrame,BibtexEntryType)",9,14
net.sf.jabref.EntryCustomizationDialog.initialize(),28,44
net.sf.jabref.EntryCustomizationDialog.save(),38,100
net.sf.jabref.EntryCustomizationDialog.setTypeSelection(),16,43
net.sf.jabref.EntryCustomizationDialog.makeButtons(),29,124
net.sf.jabref.EntryCustomizationDialog.makeButtons().$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.EntryCustomizationDialog.makeButtons().$3.actionPerformed(ActionEvent),4,5
net.sf.jabref.EntryCustomizationDialog.makeButtons().$4.actionPerformed(ActionEvent),36,103
net.sf.jabref.EntryCustomizationDialog.makeButtons().$5.actionPerformed(ActionEvent),46,104
net.sf.jabref.EntryCustomizationDialog.makeButtons().$6.actionPerformed(ActionEvent),59,138
net.sf.jabref.EntryCustomizationDialog.updateTypesForEntries(String),43,82
net.sf.jabref.EntryCustomizationDialog.itemStateChanged(ItemEvent),19,33
net.sf.jabref.EntryCustomizationDialog.updateToType(String),18,39
net.sf.jabref.export.layout.format.ToUpperCase.format(String),5,8
net.sf.jabref.export.layout.format.AuthorFirstFirst.format(String),8,12
net.sf.jabref.JabRefFileChooser.JabRefFileChooser(),4,4
net.sf.jabref.JabRefFileChooser.JabRefFileChooser(File),4,7
net.sf.jabref.JabRefFileChooser.setUI(ComponentUI),8,11
net.sf.jabref.JabRefFileChooser.main(String[]),12,20
net.sf.jabref.JabRefUI.JabRefUI(JFileChooser),5,6
net.sf.jabref.JabRefUI.DoubleClickListener.DoubleClickListener(JList),3,7
net.sf.jabref.JabRefUI.DoubleClickListener.mouseEntered(MouseEvent),15,26
"net.sf.jabref.JabRefUI.createDoubleClickListener(JFileChooser,JList)",7,12
net.sf.jabref.bst.ChangeCaseFunction.ChangeCaseFunction(VM),2,2
net.sf.jabref.bst.ChangeCaseFunction.execute(BstEntry),20,45
net.sf.jabref.AbstractWorker.AbstractWorker(),3,7
net.sf.jabref.AbstractWorker.init(),2,2
net.sf.jabref.AbstractWorker.getWorker(),11,15
net.sf.jabref.AbstractWorker.getCallBack(),12,15
net.sf.jabref.AbstractWorker.update(),6,8
net.sf.jabref.export.layout.format.AuthorLF_FFAbbr.format(String),8,15
net.sf.jabref.KeyCollisionException.KeyCollisionException(),3,3
net.sf.jabref.KeyCollisionException.KeyCollisionException(String),5,6
"net.sf.jabref.KeyCollisionException.KeyCollisionException(String,Throwable)",6,9
net.sf.jabref.KeyCollisionException.KeyCollisionException(Throwable),4,6
gnu.dtools.ritopt.SimpleProcess.SimpleProcess(Process),5,10
"gnu.dtools.ritopt.SimpleProcess.SimpleProcess(Process,InputStream,PrintStream,PrintStream)",8,25
gnu.dtools.ritopt.SimpleProcess.getOutputStream(),3,7
gnu.dtools.ritopt.SimpleProcess.getInputStream(),3,7
gnu.dtools.ritopt.SimpleProcess.getErrorStream(),4,7
gnu.dtools.ritopt.SimpleProcess.waitFor(),6,8
gnu.dtools.ritopt.SimpleProcess.waitForImpl(),15,37
gnu.dtools.ritopt.SimpleProcess.exitValue(),3,5
gnu.dtools.ritopt.SimpleProcess.destroy(),5,6
"net.sf.jabref.MetaData.MetaData(HashMap<String,String>,BibtexDatabase)",62,138
net.sf.jabref.MetaData.MetaData(),4,7
net.sf.jabref.MetaData.initializeNewDatabase(),15,41
net.sf.jabref.MetaData.iterator(),6,8
net.sf.jabref.MetaData.getData(String),5,8
net.sf.jabref.MetaData.remove(String),5,7
"net.sf.jabref.MetaData.putData(String,Vector<String>)",19,30
net.sf.jabref.MetaData.getFileDirectory(String),43,99
"net.sf.jabref.MetaData.putGroups(Vector<String>,BibtexDatabase,int)",12,15
net.sf.jabref.MetaData.getGroups(),3,3
net.sf.jabref.MetaData.setGroups(GroupTreeNode),8,12
net.sf.jabref.MetaData.writeMetaData(Writer),50,171
"net.sf.jabref.MetaData.wrapStringBuffer(StringBuffer,int)",8,18
net.sf.jabref.MetaData.getNextUnit(Reader),13,28
net.sf.jabref.MetaData.getFile(),1,3
net.sf.jabref.MetaData.setFile(File),2,6
net.sf.jabref.MetaData.getDBStrings(),1,3
net.sf.jabref.MetaData.setDBStrings(DBStrings),2,6
net.sf.jabref.export.ExportCustomizationDialog.ExportCustomizationDialog(JabRefFrame),77,266
net.sf.jabref.export.ExportCustomizationDialog.ExportCustomizationDialog(JabRefFrame).$1.actionPerformed(ActionEvent),23,41
net.sf.jabref.export.ExportCustomizationDialog.ExportCustomizationDialog(JabRefFrame).$2.actionPerformed(ActionEvent),28,48
net.sf.jabref.export.ExportCustomizationDialog.ExportCustomizationDialog(JabRefFrame).$3.actionPerformed(ActionEvent),17,38
net.sf.jabref.export.ExportCustomizationDialog.ExportCustomizationDialog(JabRefFrame).$4.actionPerformed(ActionEvent),4,5
"net.sf.jabref.export.ExportCustomizationDialog.ExportTableFormat.getColumnValue(String[],int)",5,6
net.sf.jabref.export.ExportCustomizationDialog.ExportTableFormat.getColumnCount(),2,2
net.sf.jabref.export.ExportCustomizationDialog.ExportTableFormat.getColumnName(int),11,18
"net.sf.jabref.AdvancedTab.AdvancedTab(JabRefPreferences,HelpDialog)",86,377
"net.sf.jabref.AdvancedTab.AdvancedTab(JabRefPreferences,HelpDialog).$1.stateChanged(ChangeEvent)",10,10
net.sf.jabref.AdvancedTab.setValues(),28,81
net.sf.jabref.AdvancedTab.storeSettings(),63,211
net.sf.jabref.AdvancedTab.readyToClose(),21,36
net.sf.jabref.AdvancedTab.getTabName(),6,6
"net.sf.jabref.bst.BibtexNameFormatter.formatName(String,int,String,Warn)",9,42
"net.sf.jabref.bst.BibtexNameFormatter.formatName(Author,String,Warn)",56,302
"net.sf.jabref.bst.BibtexNameFormatter.consumeToMatchingBrace(StringBuffer,char[],int)",11,28
net.sf.jabref.bst.BibtexNameFormatter.getFirstCharOfString(String),15,23
"net.sf.jabref.bst.BibtexNameFormatter.numberOfChars(String,int)",12,31
"net.sf.jabref.export.layout.Layout.Layout(Vector<StringInt>,String)",31,184
net.sf.jabref.export.layout.Layout.setPostFormatter(LayoutFormatter),7,21
"net.sf.jabref.export.layout.Layout.doLayout(BibtexEntry,BibtexDatabase)",34,64
"net.sf.jabref.export.layout.Layout.doLayout(BibtexDatabase,String)",28,82
net.sf.jabref.export.layout.Layout.getMissingFormatters(),5,7
gnu.dtools.ritopt.OptionException.OptionException(String),4,5
"net.sf.jabref.export.FieldFormatter.format(String,String)",7,9
net.sf.jabref.export.layout.format.NotFoundFormatter.NotFoundFormatter(String),3,6
net.sf.jabref.export.layout.format.NotFoundFormatter.getNotFound(),2,3
net.sf.jabref.export.layout.format.NotFoundFormatter.format(String),8,12
"net.sf.jabref.BrowseAction.BrowseAction(JFrame,JTextField,boolean)",9,15
net.sf.jabref.BrowseAction.actionPerformed(ActionEvent),17,43
net.sf.jabref.groups.VersionHandling.importFlatGroups(Vector<String>),22,43
"net.sf.jabref.groups.VersionHandling.importGroups(Vector<String>,BibtexDatabase,int)",17,30
"net.sf.jabref.groups.VersionHandling.Version0_1.fromString(String,BibtexDatabase,int)",33,70
net.sf.jabref.groups.VersionHandling.Version0_1.getSubtree(String),16,23
"net.sf.jabref.groups.VersionHandling.Version0_1.indexOfUnquoted(String,char)",17,26
"net.sf.jabref.groups.VersionHandling.Version2_3.fromString(Vector<String>,BibtexDatabase,int)",29,76
"net.sf.jabref.export.ExportComparator.compare(String[],String[])",2,4
net.sf.jabref.autocompleter.NameFieldAutoCompleter.NameFieldAutoCompleter(String),6,14
net.sf.jabref.autocompleter.NameFieldAutoCompleter.isSingleUnitField(),3,3
"net.sf.jabref.autocompleter.NameFieldAutoCompleter.addBibtexEntry(String,BibtexEntry)",6,13
net.sf.jabref.autocompleter.NameFieldAutoCompleter.addBibtexEntry(BibtexEntry),12,52
net.sf.jabref.autocompleter.NameFieldAutoCompleter.complete(String),3,6
net.sf.jabref.autocompleter.NameFieldAutoCompleter.getFieldName(),3,5
gnu.dtools.ritopt.ArrayOption.ArrayOption(),2,2
gnu.dtools.ritopt.ArrayOption.getObjectArray(),2,3
gnu.dtools.ritopt.ArrayOption.getObjectList(),6,10
"net.sf.jabref.ExternalTab.ExternalTab(JabRefFrame,PrefsDialog3,JabRefPreferences,HelpDialog)",102,442
"net.sf.jabref.ExternalTab.ExternalTab(JabRefFrame,PrefsDialog3,JabRefPreferences,HelpDialog).$1.itemStateChanged(ItemEvent)",12,15
"net.sf.jabref.ExternalTab.addSettingsButton(PushToApplication,DefaultFormBuilder)",16,27
"net.sf.jabref.ExternalTab.addSettingsButton(PushToApplication,DefaultFormBuilder).$2.actionPerformed(ActionEvent)",10,13
net.sf.jabref.ExternalTab.setValues(),29,78
net.sf.jabref.ExternalTab.storeSettings(),32,75
net.sf.jabref.ExternalTab.readyToClose(),2,2
net.sf.jabref.ExternalTab.getTabName(),7,7
net.sf.jabref.DuplicateSearch.DuplicateSearch(BasePanel),4,5
net.sf.jabref.DuplicateSearch.run(),70,190
net.sf.jabref.DuplicateSearch.run().$1.run(),27,53
net.sf.jabref.DuplicateSearch.SearcherThread.run(),18,37
net.sf.jabref.DuplicateSearch.SearcherThread.finished(),1,2
net.sf.jabref.DuplicateSearch.SearcherThread.setFinished(),9,10
"net.sf.jabref.DuplicateSearch.DuplicateCallBack.DuplicateCallBack(JabRefFrame,BibtexEntry,BibtexEntry,int)",9,18
net.sf.jabref.DuplicateSearch.DuplicateCallBack.getSelected(),2,2
net.sf.jabref.DuplicateSearch.DuplicateCallBack.update(),12,16
"net.sf.jabref.groups.UndoableModifySubtree.UndoableModifySubtree(GroupSelector,GroupTreeNode,String)",18,35
net.sf.jabref.groups.UndoableModifySubtree.getUndoPresentationName(),8,10
net.sf.jabref.groups.UndoableModifySubtree.getRedoPresentationName(),6,8
net.sf.jabref.groups.UndoableModifySubtree.undo(),22,56
net.sf.jabref.groups.UndoableModifySubtree.redo(),14,31
net.sf.jabref.groups.UndoableModifySubtree.setRevalidate(boolean),9,12
net.sf.jabref.imports.MedlineFetcher.SearchResult.addID(String),4,6
net.sf.jabref.imports.MedlineFetcher.toSearchTerm(String),7,27
"net.sf.jabref.imports.MedlineFetcher.getIds(String,int,int)",49,184
net.sf.jabref.imports.MedlineFetcher.stopFetching(),2,2
net.sf.jabref.imports.MedlineFetcher.getHelpPage(),6,7
net.sf.jabref.imports.MedlineFetcher.getIcon(),5,7
net.sf.jabref.imports.MedlineFetcher.getKeyName(),5,5
net.sf.jabref.imports.MedlineFetcher.getOptionsPanel(),3,5
net.sf.jabref.imports.MedlineFetcher.getTitle(),6,7
"net.sf.jabref.imports.MedlineFetcher.processQuery(String,ImportInspector,OutputPrinter)",55,184
net.sf.jabref.export.SaveException.SaveException(String),5,6
"net.sf.jabref.export.SaveException.SaveException(String,int)",6,9
"net.sf.jabref.export.SaveException.SaveException(String,BibtexEntry)",6,10
net.sf.jabref.export.SaveException.getStatus(),1,2
net.sf.jabref.export.SaveException.getEntry(),2,4
net.sf.jabref.export.SaveException.specificEntry(),2,3
"net.sf.jabref.FieldContentSelector.FieldContentSelector(JabRefFrame,BasePanel,Window,FieldEditor,MetaData,AbstractAction,boolean,String)",82,246
"net.sf.jabref.FieldContentSelector.FieldContentSelector(JabRefFrame,BasePanel,Window,FieldEditor,MetaData,AbstractAction,boolean,String).$1.getPreferredSize()",10,24
"net.sf.jabref.FieldContentSelector.FieldContentSelector(JabRefFrame,BasePanel,Window,FieldEditor,MetaData,AbstractAction,boolean,String).$2.actionPerformed(ActionEvent)",20,22
"net.sf.jabref.FieldContentSelector.FieldContentSelector(JabRefFrame,BasePanel,Window,FieldEditor,MetaData,AbstractAction,boolean,String).$3.actionPerformed(ActionEvent)",9,12
"net.sf.jabref.FieldContentSelector.FieldContentSelector(JabRefFrame,BasePanel,Window,FieldEditor,MetaData,AbstractAction,boolean,String).$4.actionPerformed(ActionEvent)",28,76
net.sf.jabref.FieldContentSelector.selectionMade(),37,71
net.sf.jabref.FieldContentSelector.rebuildComboBox(),19,34
net.sf.jabref.DatabaseChangeListener.databaseChanged(DatabaseChangeEvent),4,5
net.sf.jabref.export.AutoSaveManager.AutoSaveManager(JabRefFrame),6,9
net.sf.jabref.export.AutoSaveManager.startAutoSaveTimer(),11,21
net.sf.jabref.export.AutoSaveManager.stopAutoSaveTimer(),5,5
net.sf.jabref.export.AutoSaveManager.AutoSaveTask.run(),19,36
net.sf.jabref.export.AutoSaveManager.getAutoSaveFile(File),11,22
net.sf.jabref.export.AutoSaveManager.autoSave(BasePanel),25,49
net.sf.jabref.export.AutoSaveManager.deleteAutoSaveFile(BasePanel),15,38
net.sf.jabref.export.AutoSaveManager.clearAutoSaves(),19,33
net.sf.jabref.export.AutoSaveManager.newerAutoSaveExists(File),9,25
gnu.dtools.ritopt.NotifyOption.NotifyOption(),2,2
gnu.dtools.ritopt.NotifyOption.NotifyOption(OptionListener),3,6
"gnu.dtools.ritopt.NotifyOption.NotifyOption(OptionListener,String)",5,9
"gnu.dtools.ritopt.NotifyOption.NotifyOption(OptionListener,String,String)",8,15
gnu.dtools.ritopt.NotifyOption.NotifyOption(NotifyOption),9,14
gnu.dtools.ritopt.NotifyOption.NotifyOption(String),4,5
"gnu.dtools.ritopt.NotifyOption.NotifyOption(String,String)",4,8
"gnu.dtools.ritopt.NotifyOption.NotifyOption(String,char)",4,7
"gnu.dtools.ritopt.NotifyOption.NotifyOption(String,String,char)",10,18
gnu.dtools.ritopt.NotifyOption.getObject(),2,3
gnu.dtools.ritopt.NotifyOption.modify(String),14,32
gnu.dtools.ritopt.NotifyOption.setValue(String),7,9
gnu.dtools.ritopt.NotifyOption.getValue(),2,3
gnu.dtools.ritopt.NotifyOption.getStringValue(),2,4
gnu.dtools.ritopt.NotifyOption.getTypeName(),4,4
gnu.dtools.ritopt.NotifyOption.addOptionListener(OptionListener),4,9
gnu.dtools.ritopt.NotifyOption.removeOptionListener(OptionListener),4,9
gnu.dtools.ritopt.NotifyOption.setOptionCommand(String),4,7
gnu.dtools.ritopt.NotifyOption.toString(),2,3
PrepRelease.main(String[]),12,16
PrepRelease.traverse(File),17,32
PrepRelease.delete(File),10,13
net.sf.jabref.external.PushToEmacs.getName(),9,9
net.sf.jabref.external.PushToEmacs.getApplicationName(),4,4
net.sf.jabref.external.PushToEmacs.getTooltip(),7,7
net.sf.jabref.external.PushToEmacs.getIcon(),5,6
net.sf.jabref.external.PushToEmacs.getKeyStrokeName(),6,6
net.sf.jabref.external.PushToEmacs.getSettingsPanel(),10,17
net.sf.jabref.external.PushToEmacs.storeSettings(),8,10
net.sf.jabref.external.PushToEmacs.initSettingsPanel(),15,28
"net.sf.jabref.external.PushToEmacs.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",46,102
"net.sf.jabref.external.PushToEmacs.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData).$1.run()",19,26
net.sf.jabref.external.PushToEmacs.operationCompleted(BasePanel),31,67
net.sf.jabref.external.PushToEmacs.requiresBibtexKeys(),3,3
net.sf.jabref.StrictDuplicateSearch.StrictDuplicateSearch(BasePanel),7,11
net.sf.jabref.StrictDuplicateSearch.run(),54,165
net.sf.jabref.StrictDuplicateSearch.run().$1.run(),5,5
net.sf.jabref.export.SaveAllAction.SaveAllAction(JabRefFrame),18,32
net.sf.jabref.export.SaveAllAction.actionPerformed(ActionEvent),18,25
net.sf.jabref.export.SaveAllAction.run(),17,27
net.sf.jabref.export.layout.format.AuthorOrgSci.format(String),9,28
net.sf.jabref.export.layout.format.RemoveLatexCommands.format(String),30,114
net.sf.jabref.JabRef.main(String[]),5,6
net.sf.jabref.JabRef.JabRef(String[]),115,239
net.sf.jabref.JabRef.setupOptions(),56,205
"net.sf.jabref.JabRef.processArguments(String[],boolean)",156,671
net.sf.jabref.JabRef.fetch(String),55,168
net.sf.jabref.JabRef.openWindow(Vector<ParserResult>),255,947
net.sf.jabref.JabRef.startSidePanePlugins(JabRefFrame),26,85
"net.sf.jabref.JabRef.openBibFile(String,boolean)",43,122
net.sf.jabref.JabRef.importFile(String),35,109
net.sf.jabref.JabRef.importToOpenBase(String),14,29
"net.sf.jabref.DuplicateResolverDialog.DuplicateResolverDialog(JFrame,BibtexEntry,BibtexEntry,int)",12,20
"net.sf.jabref.DuplicateResolverDialog.DuplicateResolverDialog(JDialog,BibtexEntry,BibtexEntry,int)",12,20
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int)",74,318
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int).$1.actionPerformed(ActionEvent)",7,8
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int).$2.actionPerformed(ActionEvent)",7,8
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int).$3.actionPerformed(ActionEvent)",6,7
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int).$4.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.DuplicateResolverDialog.init(BibtexEntry,BibtexEntry,int).$5.actionPerformed(ActionEvent)",6,7
"net.sf.jabref.DuplicateResolverDialog.setSourceView(BibtexEntry,BibtexEntry)",14,30
"net.sf.jabref.DuplicateResolverDialog.setEntries(BibtexEntry,BibtexEntry)",11,18
net.sf.jabref.DuplicateResolverDialog.isBlocking(),2,2
net.sf.jabref.DuplicateResolverDialog.getSelected(),2,2
"net.sf.jabref.DuplicateResolverDialog.resolveDuplicate(JFrame,BibtexEntry,BibtexEntry)",13,25
"net.sf.jabref.DuplicateResolverDialog.resolveDuplicate(JDialog,BibtexEntry,BibtexEntry)",13,25
"net.sf.jabref.DuplicateResolverDialog.resolveDuplicateInImport(JabRefFrame,BibtexEntry,BibtexEntry)",17,30
"net.sf.jabref.external.TransferableFileLinkSelection.TransferableFileLinkSelection(BasePanel,BibtexEntry[])",35,103
net.sf.jabref.external.TransferableFileLinkSelection.getTransferDataFlavors(),8,17
net.sf.jabref.external.TransferableFileLinkSelection.isDataFlavorSupported(DataFlavor),17,38
net.sf.jabref.external.TransferableFileLinkSelection.getTransferData(DataFlavor),11,23
net.sf.jabref.FieldTextMenu.FieldTextMenu(FieldEditor),15,50
net.sf.jabref.FieldTextMenu.mouseClicked(MouseEvent),3,4
net.sf.jabref.FieldTextMenu.mouseEntered(MouseEvent),3,4
net.sf.jabref.FieldTextMenu.mouseExited(MouseEvent),3,4
net.sf.jabref.FieldTextMenu.mousePressed(MouseEvent),5,6
net.sf.jabref.FieldTextMenu.mouseReleased(MouseEvent),5,6
net.sf.jabref.FieldTextMenu.maybeShowPopup(MouseEvent),26,38
"net.sf.jabref.FieldTextMenu.BasicAction.BasicAction(String,String,URL)",11,19
"net.sf.jabref.FieldTextMenu.BasicAction.BasicAction(String,String,URL,KeyStroke)",14,26
net.sf.jabref.FieldTextMenu.BasicAction.BasicAction(String),6,7
"net.sf.jabref.FieldTextMenu.BasicAction.BasicAction(String,KeyStroke)",10,14
net.sf.jabref.FieldTextMenu.BasicAction.actionPerformed(ActionEvent),3,4
net.sf.jabref.FieldTextMenu.PasteAction.PasteAction(),7,11
net.sf.jabref.FieldTextMenu.PasteAction.actionPerformed(ActionEvent),15,23
net.sf.jabref.FieldTextMenu.CopyAction.CopyAction(),7,11
net.sf.jabref.FieldTextMenu.CopyAction.actionPerformed(ActionEvent),20,37
net.sf.jabref.FieldTextMenu.ReplaceAction.ReplaceAction(),4,5
net.sf.jabref.FieldTextMenu.ReplaceAction.actionPerformed(ActionEvent),15,30
net.sf.jabref.FieldTextMenu.generalFixAuthor(String),22,89
net.sf.jabref.export.layout.format.AuthorFirstLastOxfordCommas.format(String),9,13
gnu.dtools.ritopt.ByteOption.ByteOption(),1,1
gnu.dtools.ritopt.ByteOption.ByteOption(ByteOption),2,4
gnu.dtools.ritopt.ByteOption.ByteOption(byte),2,3
"gnu.dtools.ritopt.ByteOption.ByteOption(byte,String)",3,6
"gnu.dtools.ritopt.ByteOption.ByteOption(byte,char)",2,5
"gnu.dtools.ritopt.ByteOption.ByteOption(byte,String,char)",3,9
gnu.dtools.ritopt.ByteOption.getObject(),2,3
gnu.dtools.ritopt.ByteOption.modify(String),10,17
gnu.dtools.ritopt.ByteOption.setValue(String),7,9
gnu.dtools.ritopt.ByteOption.setValue(byte),2,5
gnu.dtools.ritopt.ByteOption.getValue(),1,2
gnu.dtools.ritopt.ByteOption.getStringValue(),2,5
gnu.dtools.ritopt.ByteOption.getTypeName(),3,3
gnu.dtools.ritopt.ByteOption.toString(),2,4
net.sf.jabref.UnknownEntryType.UnknownEntryType(String),5,7
net.sf.jabref.UnknownEntryType.getName(),2,3
net.sf.jabref.UnknownEntryType.getOptionalFields(),3,4
net.sf.jabref.UnknownEntryType.getRequiredFields(),3,4
net.sf.jabref.UnknownEntryType.describeRequiredFields(),5,5
net.sf.jabref.UnknownEntryType.describeOptionalFields(),5,5
"net.sf.jabref.UnknownEntryType.hasAllRequiredFields(BibtexEntry,BibtexDatabase)",5,8
net.sf.jabref.UnknownEntryType.save(Writer),2,2
net.sf.jabref.export.layout.format.RemoveTilde.format(String),13,30
net.sf.jabref.external.UpgradeExternalLinks.UpgradeExternalLinks(BasePanel),5,8
net.sf.jabref.external.UpgradeExternalLinks.action(),36,61
"net.sf.jabref.gui.GlazedEntrySorter.GlazedEntrySorter(Map<String,BibtexEntry>)",25,56
net.sf.jabref.gui.GlazedEntrySorter.getTheList(),4,6
net.sf.jabref.gui.GlazedEntrySorter.databaseChanged(DatabaseChangeEvent),17,51
net.sf.jabref.export.layout.format.XMLChars.format(String),15,38
net.sf.jabref.export.layout.format.XMLChars.firstFormat(String),3,5
net.sf.jabref.export.layout.format.XMLChars.restFormat(String),37,93
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(String,MetaData,BibtexEntry,FieldEditor,OpenFileFilter)",12,27
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(JabRefFrame,MetaData,EntryEditor,String,OpenFileFilter,FieldEditor)",42,128
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(JabRefFrame,MetaData,EntryEditor,String,OpenFileFilter,FieldEditor).$1.actionPerformed(ActionEvent)",14,24
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(JabRefFrame,MetaData,EntryEditor,String,OpenFileFilter,FieldEditor).$2.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(JabRefFrame,MetaData,EntryEditor,String,OpenFileFilter,FieldEditor).$3.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.external.ExternalFilePanel.ExternalFilePanel(JabRefFrame,MetaData,EntryEditor,String,OpenFileFilter,FieldEditor).$4.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.external.ExternalFilePanel.setEntry(BibtexEntry,BibtexDatabase)",9,20
net.sf.jabref.external.ExternalFilePanel.getDatabase(),4,8
net.sf.jabref.external.ExternalFilePanel.getEntry(),3,8
net.sf.jabref.external.ExternalFilePanel.getKey(),6,8
net.sf.jabref.external.ExternalFilePanel.output(String),3,5
"net.sf.jabref.external.ExternalFilePanel.pushXMP(String,FieldEditor)",8,10
"net.sf.jabref.external.ExternalFilePanel.pushXMP(String,FieldEditor).$5.run()",41,148
"net.sf.jabref.external.ExternalFilePanel.browseFile(String,FieldEditor)",40,138
"net.sf.jabref.external.ExternalFilePanel.downLoadFile(String,FieldEditor,Component)",30,51
"net.sf.jabref.external.ExternalFilePanel.downLoadFile(String,FieldEditor,Component).$6.getPlannedFileName(String)",39,78
"net.sf.jabref.external.ExternalFilePanel.downLoadFile(String,FieldEditor,Component).$6.run()",82,296
"net.sf.jabref.external.ExternalFilePanel.downLoadFile(String,FieldEditor,Component).$6.run().$1.run()",5,7
"net.sf.jabref.external.ExternalFilePanel.autoSetFile(String,FieldEditor)",44,83
"net.sf.jabref.external.ExternalFilePanel.autoSetFile(String,FieldEditor).$7.run()",41,92
net.sf.jabref.MergeDialog.isOkPressed(),1,2
"net.sf.jabref.MergeDialog.MergeDialog(JabRefFrame,String,boolean)",14,19
net.sf.jabref.MergeDialog.jbInit(JabRefFrame),56,206
net.sf.jabref.MergeDialog.jbInit(JabRefFrame).$1.actionPerformed(ActionEvent),4,5
net.sf.jabref.MergeDialog.ok_actionPerformed(ActionEvent),5,6
net.sf.jabref.MergeDialog.Cancel_actionPerformed(ActionEvent),5,6
net.sf.jabref.MergeDialog.okPressed(),1,2
net.sf.jabref.MergeDialog.importEntries(),2,3
net.sf.jabref.MergeDialog.importGroups(),1,1
net.sf.jabref.MergeDialog.importStrings(),2,3
net.sf.jabref.MergeDialog.importSelectorWords(),3,4
net.sf.jabref.MergeDialog_ok_actionAdapter.MergeDialog_ok_actionAdapter(MergeDialog),5,9
net.sf.jabref.MergeDialog_ok_actionAdapter.actionPerformed(ActionEvent),4,7
net.sf.jabref.MergeDialog_Cancel_actionAdapter.MergeDialog_Cancel_actionAdapter(MergeDialog),6,10
net.sf.jabref.MergeDialog_Cancel_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.export.layout.format.AuthorLastFirstCommas.format(String),9,13
com.jgoodies.uif_lite.component.UIFSplitPane.UIFSplitPane(),20,38
com.jgoodies.uif_lite.component.UIFSplitPane.UIFSplitPane(int),16,40
"com.jgoodies.uif_lite.component.UIFSplitPane.UIFSplitPane(int,boolean)",26,58
"com.jgoodies.uif_lite.component.UIFSplitPane.UIFSplitPane(int,Component,Component)",21,74
"com.jgoodies.uif_lite.component.UIFSplitPane.UIFSplitPane(int,boolean,Component,Component)",35,98
"com.jgoodies.uif_lite.component.UIFSplitPane.createStrippedSplitPane(int,Component,Component)",30,101
com.jgoodies.uif_lite.component.UIFSplitPane.isDividerBorderVisible(),19,33
com.jgoodies.uif_lite.component.UIFSplitPane.setDividerBorderVisible(boolean),21,48
com.jgoodies.uif_lite.component.UIFSplitPane.updateUI(),13,22
com.jgoodies.uif_lite.component.UIFSplitPane.setEmptyDividerBorder(),10,38
net.sf.jabref.export.layout.format.AuthorFirstLastCommas.format(String),9,13
"net.sf.jabref.collab.StringChange.StringChange(BibtexString,BibtexString,String,String,String,String)",21,94
"net.sf.jabref.collab.StringChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",37,93
net.sf.jabref.collab.StringChange.description(),2,2
gnu.dtools.ritopt.OptionModifiable.modify(String),6,6
net.sf.jabref.export.layout.format.FormatChars.format(String),76,264
"net.sf.jabref.export.layout.format.FormatChars.getPart(String,int,boolean)",22,42
"net.sf.jabref.export.layout.format.FormatChars.IntAndString.IntAndString(int,String)",1,2
"net.sf.jabref.external.PushToApplicationAction.PushToApplicationAction(JabRefFrame,PushToApplication)",17,40
net.sf.jabref.external.PushToApplicationAction.actionPerformed(ActionEvent),36,89
net.sf.jabref.external.PushToApplicationAction.run(),20,25
net.sf.jabref.external.PushToApplicationAction.run().$1.run(),4,5
net.sf.jabref.external.PushToApplicationAction.getKeyString(BibtexEntry[]),18,50
net.sf.jabref.ErrorMessageDisplay.reportError(String),6,12
"net.sf.jabref.ErrorMessageDisplay.reportError(String,Exception)",9,20
net.sf.jabref.export.ExportFormats.initAllExports(),64,260
net.sf.jabref.export.ExportFormats.initAllExports().$1.getConsoleName(),3,5
net.sf.jabref.export.ExportFormats.initAllExports().$1.getDisplayName(),3,5
net.sf.jabref.export.ExportFormats.initAllExports().$1.getFileFilter(),4,8
"net.sf.jabref.export.ExportFormats.initAllExports().$1.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",15,32
"net.sf.jabref.export.ExportFormats.getConsoleExportList(int,int,String)",24,71
net.sf.jabref.export.ExportFormats.getExportFormats(),15,25
net.sf.jabref.export.ExportFormats.getExportFormat(String),6,11
"net.sf.jabref.export.ExportFormats.getExportAction(JabRefFrame,boolean)",19,48
"net.sf.jabref.export.ExportFormats.getExportAction(JabRefFrame,boolean).ExportAction.ExportAction(JabRefFrame,boolean)",9,18
"net.sf.jabref.export.ExportFormats.getExportAction(JabRefFrame,boolean).ExportAction.actionPerformed(ActionEvent)",72,197
"net.sf.jabref.export.ExportFormats.getExportAction(JabRefFrame,boolean).ExportAction.actionPerformed(ActionEvent).$1.run()",22,33
"net.sf.jabref.export.ExportFormats.getExportAction(JabRefFrame,boolean).ExportAction.actionPerformed(ActionEvent).$1.update()",24,49
net.sf.jabref.export.ExportFormats.createExportFileChooser(String),24,78
net.sf.jabref.export.ExportFormats.putFormat(IExportFormat),5,10
net.sf.jabref.imports.ImportInspectionCommandLine.addEntry(BibtexEntry),4,8
"net.sf.jabref.imports.ImportInspectionCommandLine.setProgress(int,int)",9,16
net.sf.jabref.imports.ImportInspectionCommandLine.$1.setStatus(String),5,5
"net.sf.jabref.imports.ImportInspectionCommandLine.$1.showMessage(Object,String,int)",8,11
net.sf.jabref.imports.ImportInspectionCommandLine.$1.showMessage(String),4,6
"net.sf.jabref.imports.ImportInspectionCommandLine.query(String,EntryFetcher)",12,19
net.sf.jabref.imports.ImportInspectionCommandLine.toFront(),1,1
"net.sf.jabref.imports.GeneralFetcher.GeneralFetcher(SidePaneManager,JabRefFrame,EntryFetcher)",49,192
"net.sf.jabref.imports.GeneralFetcher.GeneralFetcher(SidePaneManager,JabRefFrame,EntryFetcher).$1.actionPerformed(ActionEvent)",7,9
net.sf.jabref.imports.GeneralFetcher.setHelpResourceOwner(Class),4,8
net.sf.jabref.imports.GeneralFetcher.getTextField(),2,4
net.sf.jabref.imports.GeneralFetcher.getAction(),1,3
net.sf.jabref.imports.GeneralFetcher.actionPerformed(ActionEvent),23,36
net.sf.jabref.imports.GeneralFetcher.actionPerformed(ActionEvent).$2.run(),12,14
net.sf.jabref.imports.GeneralFetcher.FetcherAction.FetcherAction(),12,24
net.sf.jabref.imports.GeneralFetcher.FetcherAction.actionPerformed(ActionEvent),20,40
net.sf.jabref.collab.EntryAddChange.EntryAddChange(BibtexEntry),14,24
"net.sf.jabref.collab.EntryAddChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",19,40
net.sf.jabref.collab.EntryAddChange.description(),2,2
"net.sf.jabref.SearchRule.applyRule(Map<String,String>,BibtexEntry)",8,11
net.sf.jabref.PreviewPrefsTab.PreviewPrefsTab(JabRefPreferences),43,313
net.sf.jabref.PreviewPrefsTab.PreviewPrefsTab(JabRefPreferences).$1.actionPerformed(ActionEvent),13,23
net.sf.jabref.PreviewPrefsTab.PreviewPrefsTab(JabRefPreferences).$2.actionPerformed(ActionEvent),13,23
net.sf.jabref.PreviewPrefsTab.PreviewPrefsTab(JabRefPreferences).$3.actionPerformed(ActionEvent),22,36
net.sf.jabref.PreviewPrefsTab.PreviewPrefsTab(JabRefPreferences).$4.actionPerformed(ActionEvent),23,38
net.sf.jabref.PreviewPrefsTab.getTestEntry(),138,282
net.sf.jabref.PreviewPrefsTab.setValues(),8,16
net.sf.jabref.PreviewPrefsTab.storeSettings(),8,14
net.sf.jabref.PreviewPrefsTab.readyToClose(),2,2
net.sf.jabref.PreviewPrefsTab.getTabName(),7,7
net.sf.jabref.external.FindFullTextAction.FindFullTextAction(BasePanel),4,10
net.sf.jabref.external.FindFullTextAction.init(),10,10
net.sf.jabref.external.FindFullTextAction.run(),9,13
net.sf.jabref.external.FindFullTextAction.update(),83,195
net.sf.jabref.external.FindFullTextAction.update().$1.downloadComplete(FileListEntry),30,71
net.sf.jabref.export.layout.format.RisKeywords.format(String),9,21
net.sf.jabref.imports.CiteSeerEntryFetcherHandler.CiteSeerEntryFetcherHandler(BibtexEntry),6,8
"net.sf.jabref.imports.CiteSeerEntryFetcherHandler.characters(char[],int,int)",14,36
"net.sf.jabref.imports.CiteSeerEntryFetcherHandler.startElement(String,String,String,Attributes)",28,73
net.sf.jabref.imports.CiteSeerEntryFetcherHandler.endDocument(),12,16
net.sf.jabref.JabRefMain.exceptionToString(Throwable),7,23
net.sf.jabref.JabRefMain.main(String[]),145,568
net.sf.jabref.SidePane.SidePane(),37,79
net.sf.jabref.SidePane.setComponents(Collection<SidePaneComponent>),22,40
net.sf.jabref.SidePane.remove(Component),4,5
net.sf.jabref.SidePane.getMaximumSize(),4,5
net.sf.jabref.SidePane.getPreferredSize(),3,5
"net.sf.jabref.external.PushToApplicationButton.PushToApplicationButton(JabRefFrame,List<PushToApplication>)",9,19
net.sf.jabref.external.PushToApplicationButton.init(),51,146
net.sf.jabref.external.PushToApplicationButton.init().$1.actionPerformed(ActionEvent),13,22
net.sf.jabref.external.PushToApplicationButton.buildPopupMenu(),21,45
net.sf.jabref.external.PushToApplicationButton.setSelected(int),24,49
net.sf.jabref.external.PushToApplicationButton.getComponent(),5,8
net.sf.jabref.external.PushToApplicationButton.getMenuAction(),2,4
net.sf.jabref.external.PushToApplicationButton.actionPerformed(ActionEvent),11,37
net.sf.jabref.external.PushToApplicationButton.BooleanHolder.BooleanHolder(boolean),2,4
"net.sf.jabref.external.PushToApplicationButton.showSettingsDialog(Object,PushToApplication,JPanel)",51,152
"net.sf.jabref.external.PushToApplicationButton.showSettingsDialog(Object,PushToApplication,JPanel).$2.actionPerformed(ActionEvent)",7,9
"net.sf.jabref.external.PushToApplicationButton.showSettingsDialog(Object,PushToApplication,JPanel).$3.actionPerformed(ActionEvent)",5,7
"net.sf.jabref.external.PushToApplicationButton.showSettingsDialog(Object,PushToApplication,JPanel).$4.actionPerformed(ActionEvent)",5,6
net.sf.jabref.external.PushToApplicationButton.PopupItemActionListener.PopupItemActionListener(int),5,7
net.sf.jabref.external.PushToApplicationButton.PopupItemActionListener.actionPerformed(ActionEvent),22,31
net.sf.jabref.external.PushToApplicationButton.MenuButtonActionListener.actionPerformed(ActionEvent),11,17
net.sf.jabref.external.PushToApplicationButton.MenuAction.MenuAction(),9,10
net.sf.jabref.external.PushToApplicationButton.MenuAction.setTitle(String),12,15
net.sf.jabref.external.PushToApplicationButton.MenuAction.actionPerformed(ActionEvent),6,9
net.sf.jabref.external.PushToApplicationButton.PushButtonMouseListener.mousePressed(MouseEvent),6,12
net.sf.jabref.external.PushToApplicationButton.PushButtonMouseListener.mouseClicked(MouseEvent),6,12
net.sf.jabref.external.PushToApplicationButton.PushButtonMouseListener.mouseReleased(MouseEvent),6,12
net.sf.jabref.external.PushToApplicationButton.PushButtonMouseListener.processPopupTrigger(MouseEvent),16,24
"net.sf.jabref.external.PushToApplicationButton.PushToApplicationComparator.compare(PushToApplication,PushToApplication)",4,8
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData)",53,218
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$1.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$2.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$3.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$4.actionPerformed(ActionEvent)",12,14
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$5.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$6.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$7.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$8.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$9.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$10.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$11.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$12.actionPerformed(ActionEvent)",8,9
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$13.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$14.actionPerformed(ActionEvent)",10,11
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$15.actionPerformed(ActionEvent)",9,10
"net.sf.jabref.RightClickMenu.RightClickMenu(BasePanel,MetaData).$16.actionPerformed(ActionEvent)",16,18
net.sf.jabref.RightClickMenu.populateTypeMenu(),16,33
net.sf.jabref.RightClickMenu.popupMenuWillBecomeVisible(PopupMenuEvent),31,112
"net.sf.jabref.RightClickMenu.insertNodes(JMenu,GroupTreeNode,BibtexEntry[],boolean,boolean)",26,129
"net.sf.jabref.RightClickMenu.setGroupFontAndIcon(JMenuItem,AbstractGroup)",21,59
"net.sf.jabref.RightClickMenu.getAction(GroupTreeNode,BibtexEntry[],boolean,boolean)",16,49
net.sf.jabref.RightClickMenu.popupMenuWillBecomeInvisible(PopupMenuEvent),7,15
net.sf.jabref.RightClickMenu.popupMenuCanceled(PopupMenuEvent),4,6
"net.sf.jabref.RightClickMenu.ChangeTypeAction.ChangeTypeAction(BibtexEntryType,BasePanel)",8,14
net.sf.jabref.RightClickMenu.ChangeTypeAction.actionPerformed(ActionEvent),7,9
"net.sf.jabref.gui.FileListEntry.FileListEntry(String,String,ExternalFileType)",8,17
net.sf.jabref.gui.FileListEntry.getDescription(),2,3
net.sf.jabref.gui.FileListEntry.setDescription(String),3,6
net.sf.jabref.gui.FileListEntry.getLink(),2,3
net.sf.jabref.gui.FileListEntry.setLink(String),3,6
net.sf.jabref.gui.FileListEntry.getType(),3,5
net.sf.jabref.gui.FileListEntry.setType(ExternalFileType),4,8
net.sf.jabref.gui.FileListEntry.toString(),4,5
net.sf.jabref.autocompleter.AbstractAutoCompleter.addBibtexEntry(BibtexEntry),14,21
net.sf.jabref.autocompleter.AbstractAutoCompleter.isSingleUnitField(),3,3
net.sf.jabref.autocompleter.AbstractAutoCompleter.complete(String),30,47
net.sf.jabref.autocompleter.AbstractAutoCompleter.incrementLastCharacter(String),12,26
net.sf.jabref.autocompleter.AbstractAutoCompleter.stringMinLength(String),8,11
net.sf.jabref.autocompleter.AbstractAutoCompleter.addWordToIndex(String),6,12
net.sf.jabref.autocompleter.AbstractAutoCompleter.indexContainsWord(String),4,8
"net.sf.jabref.external.AutoSetExternalFileForEntries.AutoSetExternalFileForEntries(BasePanel,String)",10,17
net.sf.jabref.external.AutoSetExternalFileForEntries.init(),37,71
net.sf.jabref.external.AutoSetExternalFileForEntries.run(),102,366
net.sf.jabref.external.AutoSetExternalFileForEntries.update(),22,30
"net.sf.jabref.external.AutoSetExternalFileForEntries.OptionsDialog.OptionsDialog(JFrame,String)",87,274
"net.sf.jabref.external.AutoSetExternalFileForEntries.OptionsDialog.OptionsDialog(JFrame,String).$1.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.external.AutoSetExternalFileForEntries.OptionsDialog.OptionsDialog(JFrame,String).$2.actionPerformed(ActionEvent)",4,5
net.sf.jabref.external.AutoSetExternalFileForEntries.OptionsDialog.setVisible(boolean),21,56
net.sf.jabref.external.AutoSetExternalFileForEntries.OptionsDialog.canceled(),1,2
net.sf.jabref.BasePanel.BasePanel(JabRefFrame),25,45
"net.sf.jabref.BasePanel.BasePanel(JabRefFrame,BibtexDatabase,File,HashMap<String,String>,String)",17,37
"net.sf.jabref.BasePanel.BasePanel(JabRefFrame,BibtexDatabase,File,MetaData,String)",13,22
"net.sf.jabref.BasePanel.init(JabRefFrame,BibtexDatabase,File,MetaData,String)",33,64
net.sf.jabref.BasePanel.isBaseChanged(),2,4
net.sf.jabref.BasePanel.getMode(),1,2
net.sf.jabref.BasePanel.database(),2,4
net.sf.jabref.BasePanel.metaData(),2,6
net.sf.jabref.BasePanel.frame(),3,5
net.sf.jabref.BasePanel.prefs(),5,6
net.sf.jabref.BasePanel.getEncoding(),2,3
net.sf.jabref.BasePanel.setEncoding(String),3,6
net.sf.jabref.BasePanel.output(String),10,12
net.sf.jabref.BasePanel.setupActions(),165,545
net.sf.jabref.BasePanel.setupActions().$1.action(),6,6
net.sf.jabref.BasePanel.setupActions().$2.action(),16,22
net.sf.jabref.BasePanel.setupActions().$3.action(),3,5
net.sf.jabref.BasePanel.setupActions().$4.action(),32,79
net.sf.jabref.BasePanel.setupActions().$5.action(),38,93
net.sf.jabref.BasePanel.setupActions().$6.action(),43,107
net.sf.jabref.BasePanel.setupActions().$7.action(),48,115
net.sf.jabref.BasePanel.setupActions().$8.action(),75,210
net.sf.jabref.BasePanel.setupActions().$9.action(),4,4
net.sf.jabref.BasePanel.setupActions().$10.action(),14,28
net.sf.jabref.BasePanel.setupActions().$11.action(),13,28
net.sf.jabref.BasePanel.setupActions().$12.action(),9,12
net.sf.jabref.BasePanel.setupActions().$13.init(),25,54
net.sf.jabref.BasePanel.setupActions().$13.run(),24,43
net.sf.jabref.BasePanel.setupActions().$13.update(),33,65
net.sf.jabref.BasePanel.setupActions().$14.init(),34,67
net.sf.jabref.BasePanel.setupActions().$14.run(),69,192
net.sf.jabref.BasePanel.setupActions().$14.update(),32,51
net.sf.jabref.BasePanel.setupActions().$14.update().$1.run(),13,23
net.sf.jabref.BasePanel.setupActions().$15.action(),11,24
net.sf.jabref.BasePanel.setupActions().$16.action(),12,25
net.sf.jabref.BasePanel.setupActions().$17.action(),10,15
net.sf.jabref.BasePanel.setupActions().$18.action(),41,110
net.sf.jabref.BasePanel.setupActions().$19.action(),42,111
net.sf.jabref.BasePanel.setupActions().$20.action(),3,3
net.sf.jabref.BasePanel.setupActions().$20.action().$1.run(),106,416
net.sf.jabref.BasePanel.setupActions().$21.action(),3,3
net.sf.jabref.BasePanel.setupActions().$21.action().$1.run(),37,91
net.sf.jabref.BasePanel.setupActions().$22.action(),30,67
net.sf.jabref.BasePanel.setupActions().$23.action(),34,78
net.sf.jabref.BasePanel.setupActions().$24.action(),35,65
net.sf.jabref.BasePanel.setupActions().$25.action(),6,8
net.sf.jabref.BasePanel.setupActions().$26.action(),26,70
net.sf.jabref.BasePanel.setupActions().$27.run(),19,30
net.sf.jabref.BasePanel.setupActions().$27.update(),13,15
net.sf.jabref.BasePanel.setupActions().$28.action(),29,46
net.sf.jabref.BasePanel.setupActions().$29.action(),18,23
net.sf.jabref.BasePanel.setupActions().$30.action(),10,22
net.sf.jabref.BasePanel.setupActions().$31.action(),14,32
net.sf.jabref.BasePanel.setupActions().$32.action(),14,32
net.sf.jabref.BasePanel.setupActions().$33.action(),4,4
net.sf.jabref.BasePanel.setupActions().$34.action(),13,21
net.sf.jabref.BasePanel.setupActions().$35.action(),2,2
net.sf.jabref.BasePanel.setupActions().$36.action(),3,3
net.sf.jabref.BasePanel.runCommand(String),67,132
"net.sf.jabref.BasePanel.saveDatabase(File,boolean,String)",75,259
net.sf.jabref.BasePanel.newEntry(BibtexEntryType),82,175
net.sf.jabref.BasePanel.insertEntry(BibtexEntry),48,101
net.sf.jabref.BasePanel.updateTableFont(),4,7
net.sf.jabref.BasePanel.createMainTable(),45,180
net.sf.jabref.BasePanel.createMainTable().$37.listChanged(ListEvent<BibtexEntry>),14,31
net.sf.jabref.BasePanel.createMainTable().$38.actionPerformed(ActionEvent),10,11
net.sf.jabref.BasePanel.createMainTable().$39.actionPerformed(ActionEvent),10,11
net.sf.jabref.BasePanel.createMainTable().$40.actionPerformed(ActionEvent),10,11
net.sf.jabref.BasePanel.createMainTable().$41.keyPressed(KeyEvent),36,106
net.sf.jabref.BasePanel.setupMainPanel(),59,169
net.sf.jabref.BasePanel.getAutoCompleters(),6,9
net.sf.jabref.BasePanel.getAutoCompleter(String),6,11
net.sf.jabref.BasePanel.instantiateAutoCompleters(),25,58
net.sf.jabref.BasePanel.addContentSelectorValuesToAutoCompleters(),24,54
net.sf.jabref.BasePanel.addJournalListToAutoCompleter(),20,42
"net.sf.jabref.BasePanel.parseMetaData(HashMap<String,String>)",25,41
net.sf.jabref.BasePanel.updatePreamble(),3,8
net.sf.jabref.BasePanel.assureStringDialogNotEditing(),4,10
net.sf.jabref.BasePanel.updateStringDialog(),5,9
net.sf.jabref.BasePanel.updateEntryPreviewToRow(BibtexEntry),5,6
net.sf.jabref.BasePanel.adjustSplitter(),14,29
net.sf.jabref.BasePanel.entryEditorAllowsChange(),18,30
net.sf.jabref.BasePanel.moveFocusToEntryEditor(),9,13
net.sf.jabref.BasePanel.isShowingEditor(),6,11
net.sf.jabref.BasePanel.showEntry(BibtexEntry),49,157
net.sf.jabref.BasePanel.getEntryEditor(BibtexEntry),31,104
net.sf.jabref.BasePanel.getCurrentEditor(),3,6
net.sf.jabref.BasePanel.showEntryEditor(EntryEditor),23,73
net.sf.jabref.BasePanel.showPreview(PreviewPanel),12,28
net.sf.jabref.BasePanel.hideBottomComponent(),8,12
net.sf.jabref.BasePanel.highlightEntry(BibtexEntry),25,44
net.sf.jabref.BasePanel.entryEditorClosing(EntryEditor),14,28
net.sf.jabref.BasePanel.ensureNotShowing(BibtexEntry),13,25
net.sf.jabref.BasePanel.updateEntryEditorIfShowing(),9,36
net.sf.jabref.BasePanel.storeCurrentEdit(),14,24
net.sf.jabref.BasePanel.updateAllContentSelectors(),27,39
net.sf.jabref.BasePanel.rebuildAllEntryEditors(),9,16
net.sf.jabref.BasePanel.markBaseChanged(),25,44
net.sf.jabref.BasePanel.markNonUndoableBaseChanged(),5,9
net.sf.jabref.BasePanel.markChangedOrUnChanged(),19,38
net.sf.jabref.BasePanel.selectSingleEntry(int),17,32
net.sf.jabref.BasePanel.setSearchMatcher(SearchMatcher),5,13
net.sf.jabref.BasePanel.setGroupMatcher(Matcher<BibtexEntry>),6,11
net.sf.jabref.BasePanel.stopShowingSearchResults(),8,12
net.sf.jabref.BasePanel.stopShowingGroup(),7,8
net.sf.jabref.BasePanel.isShowingFloatSearch(),10,13
net.sf.jabref.BasePanel.isShowingFilterSearch(),9,14
net.sf.jabref.BasePanel.getDatabase(),2,4
net.sf.jabref.BasePanel.preambleEditorClosing(),3,5
net.sf.jabref.BasePanel.stringsClosing(),4,4
"net.sf.jabref.BasePanel.changeType(BibtexEntry,BibtexEntryType)",4,15
net.sf.jabref.BasePanel.changeType(BibtexEntryType),9,17
"net.sf.jabref.BasePanel.changeType(BibtexEntry[],BibtexEntryType)",37,94
net.sf.jabref.BasePanel.showDeleteConfirmationDialog(int),24,75
net.sf.jabref.BasePanel.autoGenerateKeysBeforeSaving(),36,68
net.sf.jabref.BasePanel.setPreviewActive(boolean),16,23
net.sf.jabref.BasePanel.setSelectionListenerEnabled(boolean),4,10
net.sf.jabref.BasePanel.UndoAction.action(),34,72
net.sf.jabref.BasePanel.RedoAction.action(),32,58
"net.sf.jabref.BasePanel.lostOwnership(Clipboard,Transferable)",8,10
net.sf.jabref.BasePanel.setEntryEditorEnabled(boolean),8,24
net.sf.jabref.BasePanel.fileMonitorHandle(),4,7
net.sf.jabref.BasePanel.fileUpdated(),55,104
net.sf.jabref.BasePanel.fileUpdated().$42.run(),24,62
net.sf.jabref.BasePanel.fileRemoved(),5,7
net.sf.jabref.BasePanel.cleanUp(),20,52
net.sf.jabref.BasePanel.setUpdatedExternally(boolean),3,5
net.sf.jabref.BasePanel.getSelectedEntries(),9,17
net.sf.jabref.BasePanel.getFile(),9,13
net.sf.jabref.BasePanel.getKeysForSelection(),26,62
net.sf.jabref.BasePanel.getGroupSelector(),2,4
net.sf.jabref.BasePanel.isUpdatedExternally(),2,4
net.sf.jabref.BasePanel.getFileMonitorHandle(),4,7
net.sf.jabref.BasePanel.setFileMonitorHandle(String),5,14
net.sf.jabref.BasePanel.getSidePaneManager(),2,6
net.sf.jabref.BasePanel.setNonUndoableChange(boolean),3,9
net.sf.jabref.BasePanel.setBaseChanged(boolean),3,9
net.sf.jabref.BasePanel.setSaving(boolean),2,5
net.sf.jabref.BasePanel.getShowing(),2,2
net.sf.jabref.BasePanel.newEntryShowing(BibtexEntry),35,69
net.sf.jabref.BasePanel.back(),19,38
net.sf.jabref.BasePanel.forward(),15,29
net.sf.jabref.BasePanel.setBackAndForwardEnabledState(),7,15
net.sf.jabref.ReplaceStringDialog.ReplaceStringDialog(JabRefFrame),68,347
net.sf.jabref.ReplaceStringDialog.ReplaceStringDialog(JabRefFrame).$1.actionPerformed(ActionEvent),14,17
net.sf.jabref.ReplaceStringDialog.ReplaceStringDialog(JabRefFrame).$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.ReplaceStringDialog.okPressed(),1,2
net.sf.jabref.ReplaceStringDialog.allFields(),2,2
net.sf.jabref.ReplaceStringDialog.selOnly(),2,3
net.sf.jabref.ReplaceStringDialog.fields(),7,8
"net.sf.jabref.ReplaceStringDialog.replace(BibtexEntry,NamedCompound)",22,41
"net.sf.jabref.ReplaceStringDialog.replaceField(BibtexEntry,String,NamedCompound)",27,60
net.sf.jabref.export.layout.format.FileLink.format(String),60,133
net.sf.jabref.export.layout.format.FileLink.setArgument(String),14,22
"net.sf.jabref.export.layout.format.plugin.NameFormat.format(String,AuthorList,String[])",18,52
"net.sf.jabref.export.layout.format.plugin.NameFormat.format(String,String,BibtexEntry)",15,51
net.sf.jabref.export.layout.format.plugin.NameFormat.format(String),5,9
net.sf.jabref.export.layout.format.plugin.NameFormat.setParameter(String),3,6
net.sf.jabref.bst.FormatNameFunction.FormatNameFunction(VM),3,3
net.sf.jabref.bst.FormatNameFunction.execute(BstEntry),26,75
net.sf.jabref.SidePaneManager.SidePaneManager(JabRefFrame),22,33
net.sf.jabref.SidePaneManager.SidePaneManager(JabRefFrame).$1.stateChanged(ChangeEvent),7,8
net.sf.jabref.SidePaneManager.SidePaneManager(JabRefFrame).$1.stateChanged(ChangeEvent).$1.run(),11,14
net.sf.jabref.SidePaneManager.getPanel(),3,3
net.sf.jabref.SidePaneManager.hasComponent(String),4,5
net.sf.jabref.SidePaneManager.isComponentVisible(String),7,9
net.sf.jabref.SidePaneManager.toggle(String),6,9
net.sf.jabref.SidePaneManager.show(String),10,14
net.sf.jabref.SidePaneManager.hide(String),11,17
"net.sf.jabref.SidePaneManager.register(String,SidePaneComponent)",7,9
"net.sf.jabref.SidePaneManager.registerAndShow(String,SidePaneComponent)",6,10
net.sf.jabref.SidePaneManager.show(SidePaneComponent),8,15
net.sf.jabref.SidePaneManager.getComponent(String),5,7
net.sf.jabref.SidePaneManager.hideComponent(SidePaneComponent),10,16
net.sf.jabref.SidePaneManager.hideComponent(String),13,21
net.sf.jabref.SidePaneManager.unregisterComponent(String),6,7
net.sf.jabref.SidePaneManager.setActiveBasePanel(BasePanel),13,30
net.sf.jabref.SidePaneManager.updateView(),17,52
net.sf.jabref.SidePaneManager.revalidate(),3,5
gnu.dtools.ritopt.StringOption.StringOption(),2,2
gnu.dtools.ritopt.StringOption.StringOption(StringOption),3,6
gnu.dtools.ritopt.StringOption.StringOption(String),3,5
"gnu.dtools.ritopt.StringOption.StringOption(String,String)",3,8
"gnu.dtools.ritopt.StringOption.StringOption(String,char)",3,7
"gnu.dtools.ritopt.StringOption.StringOption(String,String,char)",3,11
gnu.dtools.ritopt.StringOption.getObject(),2,3
gnu.dtools.ritopt.StringOption.modify(String),6,8
gnu.dtools.ritopt.StringOption.setValue(String),7,9
gnu.dtools.ritopt.StringOption.getValue(),2,3
gnu.dtools.ritopt.StringOption.getStringValue(),2,4
gnu.dtools.ritopt.StringOption.getTypeName(),3,4
gnu.dtools.ritopt.StringOption.toString(),2,3
"net.sf.jabref.external.ExternalFileTypeEntryEditor.ExternalFileTypeEntryEditor(JFrame,ExternalFileType)",8,15
"net.sf.jabref.external.ExternalFileTypeEntryEditor.ExternalFileTypeEntryEditor(JDialog,ExternalFileType)",8,15
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType),58,247
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$1.actionPerformed(ActionEvent),13,15
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$2.actionPerformed(ActionEvent),5,6
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$3.actionPerformed(ActionEvent),33,57
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$4.handle(DocumentEvent),8,10
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$4.insertUpdate(DocumentEvent),5,5
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$4.removeUpdate(DocumentEvent),5,9
net.sf.jabref.external.ExternalFileTypeEntryEditor.init(ExternalFileType).$4.changedUpdate(DocumentEvent),5,9
net.sf.jabref.external.ExternalFileTypeEntryEditor.setEntry(ExternalFileType),6,11
net.sf.jabref.external.ExternalFileTypeEntryEditor.setVisible(boolean),4,9
net.sf.jabref.external.ExternalFileTypeEntryEditor.setValues(ExternalFileType),14,41
net.sf.jabref.external.ExternalFileTypeEntryEditor.storeSettings(ExternalFileType),29,80
net.sf.jabref.external.ExternalFileTypeEntryEditor.okPressed(),1,2
"net.sf.jabref.external.ExternalFileTypeEntryEditor.BrowseListener.BrowseListener(JDialog,JTextField)",7,9
net.sf.jabref.external.ExternalFileTypeEntryEditor.BrowseListener.actionPerformed(ActionEvent),27,57
net.sf.jabref.export.SaveDatabaseAction.SaveDatabaseAction(BasePanel),6,11
net.sf.jabref.export.SaveDatabaseAction.init(),56,169
net.sf.jabref.export.SaveDatabaseAction.init().$1.run(),32,52
net.sf.jabref.export.SaveDatabaseAction.init().$1.run().$1.scanResultsResolved(boolean),12,14
net.sf.jabref.export.SaveDatabaseAction.init().$1.run().$1.scanResultsResolved(boolean).$1.run(),7,7
net.sf.jabref.export.SaveDatabaseAction.update(),30,52
net.sf.jabref.export.SaveDatabaseAction.run(),74,152
"net.sf.jabref.export.SaveDatabaseAction.saveDatabase(File,boolean,String)",83,313
net.sf.jabref.export.SaveDatabaseAction.runCommand(),44,79
net.sf.jabref.export.SaveDatabaseAction.save(),4,4
net.sf.jabref.export.SaveDatabaseAction.saveAs(),62,136
net.sf.jabref.export.SaveDatabaseAction.isSuccess(),9,12
net.sf.jabref.export.SaveDatabaseAction.isCancelled(),8,15
net.sf.jabref.external.FindFullText.FindFullText(),9,13
net.sf.jabref.external.FindFullText.findFullText(BibtexEntry),29,105
net.sf.jabref.external.FindFullText.lookForFullTextAtURL(String),37,106
"net.sf.jabref.external.FindFullText.resolveRedirects(URL,int)",55,124
net.sf.jabref.external.FindFullText.loadPage(URL),28,55
"net.sf.jabref.external.FindFullText.FindResult.FindResult(URL,URL)",7,17
"net.sf.jabref.external.FindFullText.FindResult.FindResult(int,URL)",5,14
"net.sf.jabref.external.FindFullText.dumpToFile(String,File)",11,16
net.sf.jabref.imports.RepecNepImporter.getFormatName(),7,9
net.sf.jabref.imports.RepecNepImporter.getCLIId(),8,9
net.sf.jabref.imports.RepecNepImporter.getExtensions(),8,9
net.sf.jabref.imports.RepecNepImporter.getDescription(),24,38
net.sf.jabref.imports.RepecNepImporter.isRecognizedFormat(InputStream),28,65
net.sf.jabref.imports.RepecNepImporter.startsWithKeyword(Collection<String>),10,20
net.sf.jabref.imports.RepecNepImporter.readLine(),4,10
net.sf.jabref.imports.RepecNepImporter.readMultipleLines(),25,51
net.sf.jabref.imports.RepecNepImporter.parseTitleString(BibtexEntry),20,27
net.sf.jabref.imports.RepecNepImporter.parseAuthors(BibtexEntry),26,107
net.sf.jabref.imports.RepecNepImporter.parseAbstract(BibtexEntry),15,18
"net.sf.jabref.imports.RepecNepImporter.parseAdditionalFields(BibtexEntry,boolean)",50,207
net.sf.jabref.imports.RepecNepImporter.isStartOfWorkingPaper(),13,18
net.sf.jabref.imports.RepecNepImporter.importEntries(InputStream),60,141
"net.sf.jabref.groups.UndoableAddOrRemoveGroup.UndoableAddOrRemoveGroup(GroupSelector,GroupTreeNode,GroupTreeNode,int)",46,114
net.sf.jabref.groups.UndoableAddOrRemoveGroup.getUndoPresentationName(),6,8
net.sf.jabref.groups.UndoableAddOrRemoveGroup.getName(),12,27
net.sf.jabref.groups.UndoableAddOrRemoveGroup.getRedoPresentationName(),6,8
net.sf.jabref.groups.UndoableAddOrRemoveGroup.undo(),2,3
net.sf.jabref.groups.UndoableAddOrRemoveGroup.redo(),2,3
net.sf.jabref.groups.UndoableAddOrRemoveGroup.doOperation(boolean),30,141
net.sf.jabref.groups.UndoableAddOrRemoveGroup.setRevalidate(boolean),13,17
net.sf.jabref.export.layout.format.RemoveBracketsAddComma.format(String),10,43
net.sf.jabref.export.layout.format.Replace.setArgument(String),13,16
net.sf.jabref.export.layout.format.Replace.format(String),13,20
gnu.dtools.ritopt.OptionModule.OptionModule(),3,4
gnu.dtools.ritopt.OptionModule.OptionModule(String),8,12
"gnu.dtools.ritopt.OptionModule.register(String,Option)",3,9
"gnu.dtools.ritopt.OptionModule.register(char,Option)",2,8
"gnu.dtools.ritopt.OptionModule.register(String,char,Option)",4,11
"gnu.dtools.ritopt.OptionModule.register(String,char,String,Option)",5,14
"gnu.dtools.ritopt.OptionModule.register(String,char,String,Option,boolean)",13,39
gnu.dtools.ritopt.OptionModule.optionExists(Option),2,12
gnu.dtools.ritopt.OptionModule.optionExists(char),4,8
gnu.dtools.ritopt.OptionModule.optionExists(String),6,11
gnu.dtools.ritopt.OptionModule.getOptionIterator(),4,7
gnu.dtools.ritopt.OptionModule.getOption(char),4,12
gnu.dtools.ritopt.OptionModule.getOption(String),6,15
gnu.dtools.ritopt.OptionModule.getHelp(),6,10
gnu.dtools.ritopt.OptionModule.writeFileToPrintStream(PrintStream),10,15
gnu.dtools.ritopt.OptionModule.isDeprecated(),1,2
gnu.dtools.ritopt.OptionModule.setDeprecated(boolean),2,5
"gnu.dtools.ritopt.OptionModule.action(char,char)",3,6
"gnu.dtools.ritopt.OptionModule.action(String,char)",4,7
"gnu.dtools.ritopt.OptionModule.action(char,String)",12,20
"gnu.dtools.ritopt.OptionModule.action(String,String)",12,21
gnu.dtools.ritopt.OptionModule.setName(String),3,6
gnu.dtools.ritopt.OptionModule.getName(),2,3
"net.sf.jabref.groups.ExplicitGroup.ExplicitGroup(String,int)",9,11
"net.sf.jabref.groups.ExplicitGroup.fromString(String,BibtexDatabase,int)",32,59
"net.sf.jabref.groups.ExplicitGroup.addEntries(QuotedStringTokenizer,BibtexDatabase)",18,29
net.sf.jabref.groups.ExplicitGroup.getSearchRule(),2,4
net.sf.jabref.groups.ExplicitGroup.supportsAdd(),2,2
net.sf.jabref.groups.ExplicitGroup.supportsRemove(),2,2
net.sf.jabref.groups.ExplicitGroup.add(BibtexEntry[]),11,30
net.sf.jabref.groups.ExplicitGroup.addEntry(BibtexEntry),4,8
net.sf.jabref.groups.ExplicitGroup.remove(BibtexEntry[]),11,30
net.sf.jabref.groups.ExplicitGroup.removeEntry(BibtexEntry),4,8
net.sf.jabref.groups.ExplicitGroup.contains(BibtexEntry),4,7
"net.sf.jabref.groups.ExplicitGroup.contains(Map<String,String>,BibtexEntry)",7,11
"net.sf.jabref.groups.ExplicitGroup.applyRule(Map<String,String>,BibtexEntry)",9,16
net.sf.jabref.groups.ExplicitGroup.deepCopy(),7,12
net.sf.jabref.groups.ExplicitGroup.equals(Object),22,67
net.sf.jabref.groups.ExplicitGroup.toString(),32,72
net.sf.jabref.groups.ExplicitGroup.clearAssignments(),5,6
net.sf.jabref.groups.ExplicitGroup.isDynamic(),1,1
net.sf.jabref.groups.ExplicitGroup.getDescription(),3,4
net.sf.jabref.groups.ExplicitGroup.getDescriptionForPreview(),24,33
net.sf.jabref.groups.ExplicitGroup.getShortDescription(),15,27
net.sf.jabref.groups.ExplicitGroup.refreshForNewDatabase(BibtexDatabase),14,48
net.sf.jabref.groups.ExplicitGroup.getEntries(),4,5
net.sf.jabref.groups.ExplicitGroup.getTypeId(),2,2
net.sf.jabref.export.layout.format.GetOpenOfficeType.format(String),21,80
net.sf.jabref.gui.components.JPanelYBox.JPanelYBox(),6,15
net.sf.jabref.export.layout.format.AuthorLastFirstAbbrCommas.format(String),9,13
"net.sf.jabref.gui.MainTableSelectionListener.MainTableSelectionListener(BasePanel,MainTable)",11,26
net.sf.jabref.gui.MainTableSelectionListener.setEnabled(boolean),2,5
net.sf.jabref.gui.MainTableSelectionListener.instantiatePreviews(),14,49
net.sf.jabref.gui.MainTableSelectionListener.updatePreviews(),12,20
net.sf.jabref.gui.MainTableSelectionListener.listChanged(ListEvent<BibtexEntry>),38,118
net.sf.jabref.gui.MainTableSelectionListener.listChanged(ListEvent<BibtexEntry>).$1.run(),6,7
"net.sf.jabref.gui.MainTableSelectionListener.updatePreview(BibtexEntry,boolean)",5,10
"net.sf.jabref.gui.MainTableSelectionListener.updatePreview(BibtexEntry,boolean,int)",25,46
"net.sf.jabref.gui.MainTableSelectionListener.updatePreview(BibtexEntry,boolean,int).$2.actionPerformed(ActionEvent)",6,10
"net.sf.jabref.gui.MainTableSelectionListener.updatePreview(BibtexEntry,boolean,int).$3.run()",12,18
"net.sf.jabref.gui.MainTableSelectionListener.updatePreview(BibtexEntry,boolean,int).$4.run()",8,8
net.sf.jabref.gui.MainTableSelectionListener.editSignalled(),5,9
net.sf.jabref.gui.MainTableSelectionListener.editSignalled(BibtexEntry),12,29
net.sf.jabref.gui.MainTableSelectionListener.mouseReleased(MouseEvent),21,47
net.sf.jabref.gui.MainTableSelectionListener.mousePressed(MouseEvent),21,47
net.sf.jabref.gui.MainTableSelectionListener.mouseClicked(MouseEvent),48,108
net.sf.jabref.gui.MainTableSelectionListener.mouseClicked(MouseEvent).$5.run(),46,185
"net.sf.jabref.gui.MainTableSelectionListener.processPopupTrigger(MouseEvent,int)",28,66
"net.sf.jabref.gui.MainTableSelectionListener.showIconRightClickMenu(MouseEvent,int,String[])",60,193
net.sf.jabref.gui.MainTableSelectionListener.entryEditorClosing(EntryEditor),15,26
net.sf.jabref.gui.MainTableSelectionListener.mouseEntered(MouseEvent),3,4
net.sf.jabref.gui.MainTableSelectionListener.mouseExited(MouseEvent),3,4
net.sf.jabref.gui.MainTableSelectionListener.setPreviewActive(boolean),12,20
net.sf.jabref.gui.MainTableSelectionListener.switchPreview(),10,30
net.sf.jabref.gui.MainTableSelectionListener.keyTyped(KeyEvent),74,167
net.sf.jabref.gui.MainTableSelectionListener.keyReleased(KeyEvent),3,4
net.sf.jabref.gui.MainTableSelectionListener.keyPressed(KeyEvent),3,4
net.sf.jabref.gui.MainTableSelectionListener.focusGained(FocusEvent),3,4
net.sf.jabref.gui.MainTableSelectionListener.focusLost(FocusEvent),8,11
net.sf.jabref.gui.VerticalLabelUI.VerticalLabelUI(),6,9
net.sf.jabref.gui.VerticalLabelUI.VerticalLabelUI(boolean),10,17
net.sf.jabref.gui.VerticalLabelUI.createUI(JComponent),10,16
"net.sf.jabref.gui.VerticalLabelUI.getBaseline(JComponent,int,int)",4,7
net.sf.jabref.gui.VerticalLabelUI.getBaselineResizeBehavior(JComponent),4,15
"net.sf.jabref.gui.VerticalLabelUI.layoutCL(JLabel,FontMetrics,String,Icon,Rectangle,Rectangle,Rectangle)",12,71
"net.sf.jabref.gui.VerticalLabelUI.paint(Graphics,JComponent)",10,20
net.sf.jabref.gui.VerticalLabelUI.getPreferredSize(JComponent),5,8
net.sf.jabref.gui.VerticalLabelUI.getMaximumSize(JComponent),5,8
net.sf.jabref.gui.VerticalLabelUI.getMinimumSize(JComponent),5,8
net.sf.jabref.gui.VerticalLabelUI.transposeDimension(Dimension),4,7
"net.sf.jabref.gui.VerticalLabelUI.transposeRectangle(Rectangle,Rectangle)",4,10
"net.sf.jabref.gui.VerticalLabelUI.copyRectangle(Rectangle,Rectangle)",4,10
net.sf.jabref.export.layout.format.RTFChars.format(String),49,212
"net.sf.jabref.export.layout.format.RTFChars.getPart(String,int)",7,19
"net.sf.jabref.export.layout.format.RTFChars.IntAndString.IntAndString(int,String)",1,2
"net.sf.jabref.EntryEditor.EntryEditor(JabRefFrame,BasePanel,BibtexEntry)",42,111
net.sf.jabref.EntryEditor.setupFieldPanels(),49,294
net.sf.jabref.EntryEditor.getType(),3,5
net.sf.jabref.EntryEditor.getEntry(),2,4
net.sf.jabref.EntryEditor.getDatabase(),3,5
net.sf.jabref.EntryEditor.setupToolBar(),71,246
net.sf.jabref.EntryEditor.rebuildPanels(),22,37
"net.sf.jabref.EntryEditor.getExtra(String,FieldEditor)",94,334
"net.sf.jabref.EntryEditor.getExtra(String,FieldEditor).$1.mouseClicked(MouseEvent)",12,16
"net.sf.jabref.EntryEditor.getExtra(String,FieldEditor).$2.actionPerformed(ActionEvent)",23,56
"net.sf.jabref.EntryEditor.getExtra(String,FieldEditor).$3.actionPerformed(ActionEvent)",10,18
net.sf.jabref.EntryEditor.setupSourcePanel(),56,128
net.sf.jabref.EntryEditor.updateSource(),40,70
net.sf.jabref.EntryEditor.updateSource().$4.run(),14,31
net.sf.jabref.EntryEditor.setupJTextComponent(JTextComponent),53,207
net.sf.jabref.EntryEditor.requestFocus(),4,4
net.sf.jabref.EntryEditor.activateVisible(),16,28
net.sf.jabref.EntryEditor.isEnabled(),6,10
net.sf.jabref.EntryEditor.setEnabled(boolean),13,28
net.sf.jabref.EntryEditor.scrollTo(int),17,27
net.sf.jabref.EntryEditor.storeCurrentEdit(),21,37
net.sf.jabref.EntryEditor.getVisiblePanel(),9,13
net.sf.jabref.EntryEditor.getVisiblePanelName(),9,13
net.sf.jabref.EntryEditor.setVisiblePanel(int),14,20
net.sf.jabref.EntryEditor.setVisiblePanel(String),12,24
net.sf.jabref.EntryEditor.switchTo(BibtexEntry),25,45
net.sf.jabref.EntryEditor.lastSourceAccepted(),12,17
net.sf.jabref.EntryEditor.storeSource(boolean),96,334
net.sf.jabref.EntryEditor.storeSource(boolean).$5.run(),14,31
"net.sf.jabref.EntryEditor.setField(String,String)",12,25
net.sf.jabref.EntryEditor.updateAllFields(),13,21
net.sf.jabref.EntryEditor.validateAllFields(),13,20
net.sf.jabref.EntryEditor.updateAllContentSelectors(),10,16
net.sf.jabref.EntryEditor.vetoableChange(PropertyChangeEvent),16,32
net.sf.jabref.EntryEditor.updateField(Object),8,12
net.sf.jabref.EntryEditor.setMovingToDifferentEntry(),3,5
net.sf.jabref.EntryEditor.TypeLabel.TypeLabel(String),19,30
net.sf.jabref.EntryEditor.TypeLabel.TypeLabel(String).$1.mouseClicked(MouseEvent),23,51
net.sf.jabref.EntryEditor.TypeLabel.paintComponent(Graphics),26,46
net.sf.jabref.EntryEditor.FieldListener.focusGained(FocusEvent),10,14
net.sf.jabref.EntryEditor.FieldListener.focusLost(FocusEvent),10,14
net.sf.jabref.EntryEditor.TabListener.stateChanged(ChangeEvent),19,26
net.sf.jabref.EntryEditor.TabListener.stateChanged(ChangeEvent).$1.run(),3,3
net.sf.jabref.EntryEditor.TabListener.stateChanged(ChangeEvent).$2.run(),11,19
net.sf.jabref.EntryEditor.DeleteAction.DeleteAction(),9,15
net.sf.jabref.EntryEditor.DeleteAction.actionPerformed(ActionEvent),25,46
net.sf.jabref.EntryEditor.CloseAction.CloseAction(),9,16
net.sf.jabref.EntryEditor.CloseAction.actionPerformed(ActionEvent),15,26
net.sf.jabref.EntryEditor.CopyKeyAction.CopyKeyAction(),12,22
net.sf.jabref.EntryEditor.CopyKeyAction.actionPerformed(ActionEvent),15,21
net.sf.jabref.EntryEditor.StoreFieldAction.StoreFieldAction(),5,11
net.sf.jabref.EntryEditor.StoreFieldAction.actionPerformed(ActionEvent),104,443
net.sf.jabref.EntryEditor.StoreFieldAction.actionPerformed(ActionEvent).$1.run(),14,31
net.sf.jabref.EntryEditor.SwitchLeftAction.SwitchLeftAction(),3,4
net.sf.jabref.EntryEditor.SwitchLeftAction.actionPerformed(ActionEvent),14,19
net.sf.jabref.EntryEditor.SwitchRightAction.SwitchRightAction(),2,2
net.sf.jabref.EntryEditor.SwitchRightAction.actionPerformed(ActionEvent),13,18
net.sf.jabref.EntryEditor.NextEntryAction.NextEntryAction(),8,13
net.sf.jabref.EntryEditor.NextEntryAction.actionPerformed(ActionEvent),15,35
net.sf.jabref.EntryEditor.PrevEntryAction.PrevEntryAction(),10,16
net.sf.jabref.EntryEditor.PrevEntryAction.actionPerformed(ActionEvent),16,44
net.sf.jabref.EntryEditor.GenerateKeyAction.GenerateKeyAction(JabRefFrame),19,38
net.sf.jabref.EntryEditor.GenerateKeyAction.actionPerformed(ActionEvent),56,112
net.sf.jabref.EntryEditor.UndoAction.UndoAction(),7,10
net.sf.jabref.EntryEditor.UndoAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.EntryEditor.RedoAction.RedoAction(),8,10
net.sf.jabref.EntryEditor.RedoAction.actionPerformed(ActionEvent),8,9
net.sf.jabref.EntryEditor.SaveDatabaseAction.SaveDatabaseAction(),3,5
net.sf.jabref.EntryEditor.SaveDatabaseAction.actionPerformed(ActionEvent),24,45
net.sf.jabref.EntryEditor.ExternalViewerListener.mouseClicked(MouseEvent),27,39
"net.sf.jabref.EntryEditor.ChangeTypeAction.ChangeTypeAction(BibtexEntryType,BasePanel)",8,14
net.sf.jabref.EntryEditor.ChangeTypeAction.actionPerformed(ActionEvent),8,10
net.sf.jabref.EntryEditor.warnDuplicateBibtexkey(),24,61
net.sf.jabref.EntryEditor.warnEmptyBibtexkey(),24,63
net.sf.jabref.EntryEditor.AutoSetFileAction.AutoSetFileAction(),15,20
net.sf.jabref.EntryEditor.AutoSetFileAction.actionPerformed(ActionEvent),23,44
net.sf.jabref.EntryEditor.AutoSetFileAction.actionPerformed(ActionEvent).$1.actionPerformed(ActionEvent),22,35
"net.sf.jabref.external.MoveFileAction.MoveFileAction(JabRefFrame,EntryEditor,FileListEditor,boolean)",10,26
net.sf.jabref.external.MoveFileAction.actionPerformed(ActionEvent),98,464
net.sf.jabref.OpenFileFilter.OpenFileFilter(String[]),14,48
net.sf.jabref.OpenFileFilter.OpenFileFilter(),19,22
net.sf.jabref.OpenFileFilter.OpenFileFilter(String),4,4
net.sf.jabref.OpenFileFilter.accept(File),4,8
net.sf.jabref.OpenFileFilter.accept(String),12,40
net.sf.jabref.OpenFileFilter.getSuffix(String),11,45
net.sf.jabref.OpenFileFilter.getDescription(),3,3
"net.sf.jabref.OpenFileFilter.accept(File,String)",6,10
net.sf.jabref.export.layout.format.AuthorAbbreviator.format(String),16,28
net.sf.jabref.export.layout.AbstractParamLayoutFormatter.parseArgument(String),24,80
net.sf.jabref.gui.ImportInspectionDialog.CallBack.stopFetching(),12,16
net.sf.jabref.gui.ImportInspectionDialog.setDefaultSelected(boolean),8,16
"net.sf.jabref.gui.ImportInspectionDialog.ImportInspectionDialog(JabRefFrame,BasePanel,String[],String,boolean)",127,528
"net.sf.jabref.gui.ImportInspectionDialog.ImportInspectionDialog(JabRefFrame,BasePanel,String[],String,boolean).$1.windowOpened(WindowEvent)",7,8
"net.sf.jabref.gui.ImportInspectionDialog.ImportInspectionDialog(JabRefFrame,BasePanel,String[],String,boolean).$1.windowClosed(WindowEvent)",10,18
"net.sf.jabref.gui.ImportInspectionDialog.ImportInspectionDialog(JabRefFrame,BasePanel,String[],String,boolean).$2.actionPerformed(ActionEvent)",4,5
"net.sf.jabref.gui.ImportInspectionDialog.setProgress(int,int)",14,29
net.sf.jabref.gui.ImportInspectionDialog.addEntry(BibtexEntry),11,30
net.sf.jabref.gui.ImportInspectionDialog.addEntries(Collection<BibtexEntry>),38,82
"net.sf.jabref.gui.ImportInspectionDialog.internalDuplicate(Collection<BibtexEntry>,BibtexEntry)",18,52
net.sf.jabref.gui.ImportInspectionDialog.removeSelectedEntries(),24,64
net.sf.jabref.gui.ImportInspectionDialog.entryListComplete(),18,29
net.sf.jabref.gui.ImportInspectionDialog.getSelectedEntries(),20,51
net.sf.jabref.gui.ImportInspectionDialog.generateKeySelectedEntry(),37,90
net.sf.jabref.gui.ImportInspectionDialog.generateKeys(boolean),48,128
"net.sf.jabref.gui.ImportInspectionDialog.insertNodes(JMenu,GroupTreeNode)",19,79
net.sf.jabref.gui.ImportInspectionDialog.getAction(GroupTreeNode),7,17
net.sf.jabref.gui.ImportInspectionDialog.AddToGroupAction.AddToGroupAction(GroupTreeNode),5,9
net.sf.jabref.gui.ImportInspectionDialog.AddToGroupAction.actionPerformed(ActionEvent),25,56
net.sf.jabref.gui.ImportInspectionDialog.addCallBack(CallBack),2,5
net.sf.jabref.gui.ImportInspectionDialog.OkListener.actionPerformed(ActionEvent),130,410
net.sf.jabref.gui.ImportInspectionDialog.OkListener.actionPerformed(ActionEvent).$1.run(),17,27
net.sf.jabref.gui.ImportInspectionDialog.signalStopFetching(),4,7
net.sf.jabref.gui.ImportInspectionDialog.setWidths(),20,69
net.sf.jabref.gui.ImportInspectionDialog.StopListener.actionPerformed(ActionEvent),9,11
net.sf.jabref.gui.ImportInspectionDialog.CancelListener.actionPerformed(ActionEvent),13,15
net.sf.jabref.gui.ImportInspectionDialog.GenerateListener.actionPerformed(ActionEvent),11,18
net.sf.jabref.gui.ImportInspectionDialog.DeleteListener.DeleteListener(),6,9
net.sf.jabref.gui.ImportInspectionDialog.DeleteListener.actionPerformed(ActionEvent),6,8
net.sf.jabref.gui.ImportInspectionDialog.MyTable.MyTable(TableModel),4,7
"net.sf.jabref.gui.ImportInspectionDialog.MyTable.isCellEditable(int,int)",4,5
net.sf.jabref.gui.ImportInspectionDialog.MyTableModel.getColumnClass(int),2,2
net.sf.jabref.gui.ImportInspectionDialog.SelectionButton.SelectionButton(boolean),4,6
net.sf.jabref.gui.ImportInspectionDialog.SelectionButton.actionPerformed(ActionEvent),10,14
net.sf.jabref.gui.ImportInspectionDialog.DeselectDuplicatesButtonListener.actionPerformed(ActionEvent),11,18
net.sf.jabref.gui.ImportInspectionDialog.EntrySelectionListener.listChanged(ListEvent<BibtexEntry>),17,29
net.sf.jabref.gui.ImportInspectionDialog.EntrySelectionListener.listChanged(ListEvent<BibtexEntry>).$1.run(),5,6
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.isIconColumn(int),6,14
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.mouseClicked(MouseEvent),35,80
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.mouseEntered(MouseEvent),3,4
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.mouseExited(MouseEvent),3,4
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.showPopup(MouseEvent),17,33
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.showOrdinaryRightClickMenu(MouseEvent),7,7
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.showFileFieldMenu(MouseEvent),38,101
"net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.openExternalLink(String,MouseEvent)",32,55
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.mouseReleased(MouseEvent),10,12
net.sf.jabref.gui.ImportInspectionDialog.TableClickListener.mousePressed(MouseEvent),53,193
net.sf.jabref.gui.ImportInspectionDialog.AttachUrl.AttachUrl(),7,9
net.sf.jabref.gui.ImportInspectionDialog.AttachUrl.actionPerformed(ActionEvent),30,57
net.sf.jabref.gui.ImportInspectionDialog.DownloadFile.DownloadFile(),7,9
net.sf.jabref.gui.ImportInspectionDialog.DownloadFile.actionPerformed(ActionEvent),35,78
net.sf.jabref.gui.ImportInspectionDialog.DownloadFile.downloadComplete(FileListEntry),28,65
net.sf.jabref.gui.ImportInspectionDialog.AutoSetLinks.AutoSetLinks(),10,11
net.sf.jabref.gui.ImportInspectionDialog.AutoSetLinks.actionPerformed(ActionEvent),47,110
net.sf.jabref.gui.ImportInspectionDialog.AutoSetLinks.actionPerformed(ActionEvent).$1.actionPerformed(ActionEvent),19,30
net.sf.jabref.gui.ImportInspectionDialog.LinkLocalFile.LinkLocalFile(),8,11
net.sf.jabref.gui.ImportInspectionDialog.LinkLocalFile.actionPerformed(ActionEvent),34,94
net.sf.jabref.gui.ImportInspectionDialog.LinkLocalFile.downloadComplete(FileListEntry),28,65
net.sf.jabref.gui.ImportInspectionDialog.AttachFile.AttachFile(String),10,20
net.sf.jabref.gui.ImportInspectionDialog.AttachFile.actionPerformed(ActionEvent),40,76
net.sf.jabref.gui.ImportInspectionDialog.setupComparatorChooser(),40,139
net.sf.jabref.gui.ImportInspectionDialog.EntryTable.EntryTable(TableModel),7,11
"net.sf.jabref.gui.ImportInspectionDialog.EntryTable.getCellRenderer(int,int)",5,10
net.sf.jabref.gui.ImportInspectionDialog.EntryTable.getColumnClass(int),5,7
"net.sf.jabref.gui.ImportInspectionDialog.EntryTable.isCellEditable(int,int)",4,5
"net.sf.jabref.gui.ImportInspectionDialog.EntryTable.setValueAt(Object,int,int)",18,39
net.sf.jabref.gui.ImportInspectionDialog.EntryTableFormat.getColumnCount(),5,5
net.sf.jabref.gui.ImportInspectionDialog.EntryTableFormat.getColumnName(int),8,9
"net.sf.jabref.gui.ImportInspectionDialog.EntryTableFormat.getColumnValue(BibtexEntry,int)",39,125
net.sf.jabref.gui.ImportInspectionDialog.toFront(),1,2
net.sf.jabref.imports.OAI2Fetcher.shouldWait(),6,9
"net.sf.jabref.imports.OAI2Fetcher.OAI2Fetcher(String,String,String,String,String,long)",34,107
net.sf.jabref.imports.OAI2Fetcher.OAI2Fetcher(),13,22
net.sf.jabref.imports.OAI2Fetcher.constructUrl(String),27,62
net.sf.jabref.imports.OAI2Fetcher.fixKey(String),16,41
net.sf.jabref.imports.OAI2Fetcher.correctLineBreaks(String),5,9
net.sf.jabref.imports.OAI2Fetcher.importOai2Entry(String),76,218
net.sf.jabref.imports.OAI2Fetcher.getHelpPage(),4,4
net.sf.jabref.imports.OAI2Fetcher.getIcon(),5,7
net.sf.jabref.imports.OAI2Fetcher.getKeyName(),6,7
net.sf.jabref.imports.OAI2Fetcher.getOptionsPanel(),3,5
net.sf.jabref.imports.OAI2Fetcher.getTitle(),6,7
"net.sf.jabref.imports.OAI2Fetcher.processQuery(String,ImportInspector,OutputPrinter)",56,113
net.sf.jabref.imports.OAI2Fetcher.stopFetching(),2,2
"net.sf.jabref.BibtexString.BibtexString(String,String,String)",4,11
net.sf.jabref.BibtexString.getId(),1,1
net.sf.jabref.BibtexString.setId(String),2,2
net.sf.jabref.BibtexString.getName(),2,3
net.sf.jabref.BibtexString.setName(String),3,6
net.sf.jabref.BibtexString.getContent(),2,4
net.sf.jabref.BibtexString.setContent(String),3,6
net.sf.jabref.BibtexString.clone(),6,6
net.sf.jabref.export.OpenOfficeDocumentCreator.OpenOfficeDocumentCreator(),10,14
"net.sf.jabref.export.OpenOfficeDocumentCreator.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",14,26
"net.sf.jabref.export.OpenOfficeDocumentCreator.storeOpenOfficeFile(File,InputStream)",28,84
"net.sf.jabref.export.OpenOfficeDocumentCreator.exportOpenOfficeCalc(File,BibtexDatabase,Set<String>)",25,61
"net.sf.jabref.export.OpenOfficeDocumentCreator.exportOpenOfficeCalcXML(File,BibtexDatabase,Set<String>)",31,68
"net.sf.jabref.export.OpenOfficeDocumentCreator.addResourceFile(String,String,ZipOutputStream)",11,26
"net.sf.jabref.export.OpenOfficeDocumentCreator.addFromResource(String,OutputStream)",18,32
net.sf.jabref.collab.FileUpdateListener.fileUpdated(),5,8
net.sf.jabref.collab.FileUpdateListener.fileRemoved(),3,4
net.sf.jabref.label.DefaultLabelRule.applyRule(BibtexEntry),11,16
net.sf.jabref.mods.PersonName.PersonName(),2,2
net.sf.jabref.mods.PersonName.PersonName(String),4,7
"net.sf.jabref.mods.PersonName.PersonName(String,String,String)",5,17
net.sf.jabref.mods.PersonName.parseName(String),18,35
net.sf.jabref.mods.PersonName.getGivenNames(),5,13
net.sf.jabref.mods.PersonName.getSurname(),2,3
net.sf.jabref.mods.PersonName.setSurname(String),4,6
net.sf.jabref.mods.PersonName.getFirstname(),3,3
net.sf.jabref.mods.PersonName.setFirstname(String),4,6
net.sf.jabref.mods.PersonName.getMiddlename(),4,4
net.sf.jabref.mods.PersonName.setMiddlename(String),5,9
net.sf.jabref.mods.PersonName.getFullname(),6,21
net.sf.jabref.mods.PersonName.toString(),2,3
net.sf.jabref.export.layout.ParamLayoutFormatter.setArgument(String),8,12
net.sf.jabref.gui.components.JPanelYBoxPreferredHeight.getMaximumSize(),6,13
net.sf.jabref.external.AccessLinksForEntries.getExternalLinksForEntries(List<BibtexEntry>),27,82
"net.sf.jabref.external.AccessLinksForEntries.copyExternalLinksToDirectory(List<FileListEntry>,File,MetaData,JProgressBar,boolean,ActionListener)",88,268
"net.sf.jabref.external.AccessLinksForEntries.copyExternalLinksToDirectory(List<FileListEntry>,File,MetaData,JProgressBar,boolean,ActionListener).$1.run()",8,12
"net.sf.jabref.external.AccessLinksForEntries.copyExternalLinksToDirectory(List<FileListEntry>,File,MetaData,JProgressBar,boolean,ActionListener).$2.run()",4,4
net.sf.jabref.external.AccessLinksForEntries.SaveWithLinkedFiles.SaveWithLinkedFiles(BasePanel),5,8
net.sf.jabref.external.AccessLinksForEntries.SaveWithLinkedFiles.action(),40,94
net.sf.jabref.external.AccessLinksForEntries.SaveWithLinkedFiles.action().$1.run(),17,19
net.sf.jabref.external.AccessLinksForEntries.SaveWithLinkedFiles.action().$1.run().$1.actionPerformed(ActionEvent),5,8
"net.sf.jabref.export.VerifyingWriter.VerifyingWriter(OutputStream,String)",11,15
net.sf.jabref.export.VerifyingWriter.write(String),10,19
net.sf.jabref.export.VerifyingWriter.couldEncodeAll(),1,2
net.sf.jabref.export.VerifyingWriter.getProblemCharacters(),7,14
"net.sf.jabref.util.ResourceExtractor.ResourceExtractor(Component,String,File)",14,25
net.sf.jabref.util.ResourceExtractor.run(),12,16
net.sf.jabref.export.layout.format.AuthorLastFirstOxfordCommas.format(String),9,13
"net.sf.jabref.SidePaneComponent.SidePaneComponent(SidePaneManager,URL,String)",39,83
net.sf.jabref.SidePaneComponent.hideAway(),3,4
net.sf.jabref.SidePaneComponent.setVisibility(boolean),7,9
net.sf.jabref.SidePaneComponent.hasVisibility(),5,6
net.sf.jabref.SidePaneComponent.setActiveBasePanel(BasePanel),4,9
net.sf.jabref.SidePaneComponent.getActiveBasePanel(),3,6
net.sf.jabref.SidePaneComponent.componentClosing(),6,7
net.sf.jabref.SidePaneComponent.componentOpening(),4,5
net.sf.jabref.SidePaneComponent.getMinimumSize(),4,5
net.sf.jabref.SidePaneComponent.CloseButtonListener.actionPerformed(ActionEvent),4,5
net.sf.jabref.imports.MedlineHandler.getItems(),6,6
net.sf.jabref.imports.MedlineHandler.MedlineHandler(),2,2
"net.sf.jabref.imports.MedlineHandler.startElement(String,String,String,Attributes)",63,220
"net.sf.jabref.imports.MedlineHandler.join(Object[],String)",7,17
net.sf.jabref.imports.MedlineHandler.makeBibtexString(),19,29
"net.sf.jabref.imports.MedlineHandler.endElement(String,String,String)",112,452
"net.sf.jabref.imports.MedlineHandler.characters(char[],int,int)",44,166
net.sf.jabref.imports.MedlineHandler.fixPageRange(String),31,69
net.sf.jabref.PrefsTab.setValues(),15,22
net.sf.jabref.PrefsTab.storeSettings(),13,15
net.sf.jabref.PrefsTab.readyToClose(),16,22
net.sf.jabref.PrefsTab.getTabName(),9,12
net.sf.jabref.TableColumnsTab.TableRow.TableRow(String),8,11
net.sf.jabref.TableColumnsTab.TableRow.TableRow(int),4,6
"net.sf.jabref.TableColumnsTab.TableRow.TableRow(String,int)",5,9
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame)",77,296
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.getRowCount()",2,4
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.getColumnCount()",2,2
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.getValueAt(int,int)",18,37
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.getColumnName(int)",8,13
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.getColumnClass(int)",3,5
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.isCellEditable(int,int)",4,6
"net.sf.jabref.TableColumnsTab.TableColumnsTab(JabRefPreferences,JabRefFrame).$1.setValueAt(Object,int,int)",23,61
net.sf.jabref.TableColumnsTab.setValues(),20,45
net.sf.jabref.TableColumnsTab.DeleteRowAction.DeleteRowAction(),11,15
net.sf.jabref.TableColumnsTab.DeleteRowAction.actionPerformed(ActionEvent),18,40
net.sf.jabref.TableColumnsTab.AddRowAction.AddRowAction(),11,15
net.sf.jabref.TableColumnsTab.AddRowAction.actionPerformed(ActionEvent),22,57
"net.sf.jabref.TableColumnsTab.AbstractMoveRowAction.AbstractMoveRowAction(String,ImageIcon)",6,10
"net.sf.jabref.TableColumnsTab.AbstractMoveRowAction.swap(int,int)",7,21
net.sf.jabref.TableColumnsTab.MoveRowUpAction.MoveRowUpAction(),9,11
net.sf.jabref.TableColumnsTab.MoveRowUpAction.actionPerformed(ActionEvent),28,64
net.sf.jabref.TableColumnsTab.MoveRowDownAction.MoveRowDownAction(),9,10
net.sf.jabref.TableColumnsTab.MoveRowDownAction.actionPerformed(ActionEvent),28,67
net.sf.jabref.TableColumnsTab.UpdateOrderAction.UpdateOrderAction(),6,7
net.sf.jabref.TableColumnsTab.UpdateOrderAction.actionPerformed(ActionEvent),34,68
"net.sf.jabref.TableColumnsTab.UpdateOrderAction.actionPerformed(ActionEvent).$1.compare(TableRow,TableRow)",6,12
net.sf.jabref.TableColumnsTab.UpdateWidthsAction.UpdateWidthsAction(),9,23
net.sf.jabref.TableColumnsTab.UpdateWidthsAction.actionPerformed(ActionEvent),35,104
net.sf.jabref.TableColumnsTab.storeSettings(),44,130
net.sf.jabref.TableColumnsTab.readyToClose(),2,2
net.sf.jabref.TableColumnsTab.getTabName(),8,8
net.sf.jabref.export.ModsExportFormat.ModsExportFormat(),6,8
"net.sf.jabref.export.ModsExportFormat.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",36,76
net.sf.jabref.external.WriteXMPAction.WriteXMPAction(BasePanel),5,8
net.sf.jabref.external.WriteXMPAction.init(),40,96
net.sf.jabref.external.WriteXMPAction.run(),63,207
net.sf.jabref.external.WriteXMPAction.update(),15,21
net.sf.jabref.external.WriteXMPAction.OptionsDialog.OptionsDialog(JFrame),62,181
net.sf.jabref.external.WriteXMPAction.OptionsDialog.OptionsDialog(JFrame).$1.actionPerformed(ActionEvent),4,5
net.sf.jabref.external.WriteXMPAction.OptionsDialog.OptionsDialog(JFrame).$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.external.WriteXMPAction.OptionsDialog.done(),4,7
net.sf.jabref.external.WriteXMPAction.OptionsDialog.open(),16,24
"net.sf.jabref.groups.AddToGroupAction.AddToGroupAction(GroupTreeNode,boolean,BasePanel)",10,21
net.sf.jabref.groups.AddToGroupAction.AddToGroupAction(boolean),11,17
net.sf.jabref.groups.AddToGroupAction.setBasePanel(BasePanel),3,8
net.sf.jabref.groups.AddToGroupAction.setNode(GroupTreeNode),3,7
net.sf.jabref.groups.AddToGroupAction.actionPerformed(ActionEvent),68,190
"net.sf.jabref.export.ExportFormat.ExportFormat(String,String,String,String,String)",23,71
net.sf.jabref.export.ExportFormat.ExportFormat(),6,7
net.sf.jabref.export.ExportFormat.setCustomExport(boolean),15,29
net.sf.jabref.export.ExportFormat.getConsoleName(),5,9
net.sf.jabref.export.ExportFormat.getDisplayName(),5,9
net.sf.jabref.export.ExportFormat.setEncoding(String),9,16
net.sf.jabref.export.ExportFormat.getReader(String),14,25
"net.sf.jabref.export.ExportFormat.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",107,456
net.sf.jabref.export.ExportFormat.readFormatterFile(String),43,125
"net.sf.jabref.export.ExportFormat.getSaveSession(String,File)",6,13
net.sf.jabref.export.ExportFormat.getFileFilter(),7,21
net.sf.jabref.export.ExportFormat.finalizeSaveSession(SaveSession),12,17
"net.sf.jabref.groups.RemoveFromGroupAction.RemoveFromGroupAction(GroupTreeNode,BasePanel)",7,14
net.sf.jabref.groups.RemoveFromGroupAction.RemoveFromGroupAction(),8,9
net.sf.jabref.groups.RemoveFromGroupAction.setNode(GroupTreeNode),3,7
net.sf.jabref.groups.RemoveFromGroupAction.setBasePanel(BasePanel),3,8
net.sf.jabref.groups.RemoveFromGroupAction.actionPerformed(ActionEvent),35,55
"net.sf.jabref.GeneralTab.GeneralTab(JabRefFrame,JabRefPreferences)",122,557
"net.sf.jabref.GeneralTab.GeneralTab(JabRefFrame,JabRefPreferences).$1.stateChanged(ChangeEvent)",11,17
net.sf.jabref.GeneralTab.setValues(),60,216
net.sf.jabref.GeneralTab.storeSettings(),78,252
net.sf.jabref.GeneralTab.readyToClose(),24,36
net.sf.jabref.GeneralTab.getTabName(),5,5
net.sf.jabref.export.layout.format.AuthorFirstAbbrLastOxfordCommas.format(String),9,13
"net.sf.jabref.EntryEditorPrefsTab.EntryEditorPrefsTab(JabRefFrame,JabRefPreferences)",63,247
"net.sf.jabref.EntryEditorPrefsTab.EntryEditorPrefsTab(JabRefFrame,JabRefPreferences).$1.stateChanged(ChangeEvent)",9,16
"net.sf.jabref.EntryEditorPrefsTab.EntryEditorPrefsTab(JabRefFrame,JabRefPreferences).$2.stateChanged(ChangeEvent)",10,12
net.sf.jabref.EntryEditorPrefsTab.setValues(),25,81
net.sf.jabref.EntryEditorPrefsTab.storeSettings(),37,105
net.sf.jabref.EntryEditorPrefsTab.readyToClose(),2,2
net.sf.jabref.EntryEditorPrefsTab.getTabName(),7,7
"net.sf.jabref.groups.AndOrSearchRuleSet.AndOrSearchRuleSet(boolean,boolean)",4,6
"net.sf.jabref.groups.AndOrSearchRuleSet.applyRule(Map<String,String>,BibtexEntry)",16,47
net.sf.jabref.TransferableBibtexEntry.TransferableBibtexEntry(BibtexEntry[]),4,8
net.sf.jabref.TransferableBibtexEntry.getTransferDataFlavors(),8,16
net.sf.jabref.TransferableBibtexEntry.isDataFlavorSupported(DataFlavor),6,16
net.sf.jabref.TransferableBibtexEntry.getTransferData(DataFlavor),23,53
net.sf.jabref.search.NoSearchMatcher.matches(BibtexEntry),4,4
"net.sf.jabref.net.CookieHandlerImpl.put(URI,Map<List<String,String>>)",19,58
"net.sf.jabref.net.CookieHandlerImpl.get(URI,Map<List<String,String>>)",27,90
net.sf.jabref.search.SearchMatcher.matches(BibtexEntry),5,7
"net.sf.jabref.collab.StringRemoveChange.StringRemoveChange(BibtexString,BibtexString,BibtexString)",22,67
"net.sf.jabref.collab.StringRemoveChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",23,44
net.sf.jabref.collab.StringRemoveChange.description(),2,2
net.sf.jabref.bst.BstLexer.BstLexer(),2,2
net.sf.jabref.bst.BstLexer.BstLexer(CharStream),4,5
net.sf.jabref.bst.BstLexer.getGrammarFileName(),5,5
net.sf.jabref.bst.BstLexer.mT25(),16,35
net.sf.jabref.bst.BstLexer.mT26(),16,35
net.sf.jabref.bst.BstLexer.mT27(),16,35
net.sf.jabref.bst.BstLexer.mT28(),16,35
net.sf.jabref.bst.BstLexer.mT29(),16,35
net.sf.jabref.bst.BstLexer.mT30(),16,35
net.sf.jabref.bst.BstLexer.mT31(),16,35
net.sf.jabref.bst.BstLexer.mT32(),16,35
net.sf.jabref.bst.BstLexer.mT33(),16,35
net.sf.jabref.bst.BstLexer.mSTRINGS(),17,41
net.sf.jabref.bst.BstLexer.mINTEGERS(),17,41
net.sf.jabref.bst.BstLexer.mFUNCTION(),17,41
net.sf.jabref.bst.BstLexer.mEXECUTE(),17,41
net.sf.jabref.bst.BstLexer.mSORT(),17,41
net.sf.jabref.bst.BstLexer.mITERATE(),17,41
net.sf.jabref.bst.BstLexer.mREVERSE(),17,41
net.sf.jabref.bst.BstLexer.mENTRY(),17,41
net.sf.jabref.bst.BstLexer.mREAD(),17,41
net.sf.jabref.bst.BstLexer.mMACRO(),17,41
net.sf.jabref.bst.BstLexer.mQUOTED(),18,41
net.sf.jabref.bst.BstLexer.mIDENTIFIER(),21,60
net.sf.jabref.bst.BstLexer.mLETTER(),15,33
net.sf.jabref.bst.BstLexer.mSTRING(),25,64
net.sf.jabref.bst.BstLexer.mINTEGER(),29,82
net.sf.jabref.bst.BstLexer.mNUMERAL(),11,18
net.sf.jabref.bst.BstLexer.mWS(),27,71
net.sf.jabref.bst.BstLexer.mLINE_COMMENT(),26,78
net.sf.jabref.bst.BstLexer.mTokens(),24,245
"net.sf.jabref.EntryTypeDialog.TypeButton.TypeButton(String,BibtexEntryType)",6,11
net.sf.jabref.EntryTypeDialog.TypeButton.compareTo(TypeButton),4,8
net.sf.jabref.EntryTypeDialog.EntryTypeDialog(JabRefFrame),81,223
net.sf.jabref.EntryTypeDialog.EntryTypeDialog(JabRefFrame).$1.windowClosing(WindowEvent),6,8
net.sf.jabref.EntryTypeDialog.actionPerformed(ActionEvent),7,13
net.sf.jabref.EntryTypeDialog.getChoice(),4,6
net.sf.jabref.EntryTypeDialog.CancelAction.CancelAction(),14,24
net.sf.jabref.EntryTypeDialog.CancelAction.actionPerformed(ActionEvent),4,5
tests.net.sf.jabref.bst.TestVM.testAbbrv(),40,52
tests.net.sf.jabref.bst.TestVM.testVMSimple(),29,52
tests.net.sf.jabref.bst.TestVM.testLabel(),22,37
tests.net.sf.jabref.bst.TestVM.testQuote(),13,19
tests.net.sf.jabref.bst.TestVM.testVMFunction1(),18,36
tests.net.sf.jabref.bst.TestVM.testVMExecuteSimple(),19,68
tests.net.sf.jabref.bst.TestVM.testVMIfSkipPop(),14,57
tests.net.sf.jabref.bst.TestVM.testVMArithmetic(),17,41
tests.net.sf.jabref.bst.TestVM.testNumNames(),20,54
tests.net.sf.jabref.bst.TestVM.testVMStringOps1(),20,81
tests.net.sf.jabref.bst.TestVM.testSubstring(),16,57
tests.net.sf.jabref.bst.TestVM.testEmpty(),23,53
tests.net.sf.jabref.bst.TestVM.testDuplicateEmptyPopSwapIf(),18,38
tests.net.sf.jabref.bst.TestVM.testChangeCase(),27,69
tests.net.sf.jabref.bst.TestVM.testTextLength(),22,75
tests.net.sf.jabref.bst.TestVM.testVMIntToStr(),15,28
tests.net.sf.jabref.bst.TestVM.testVMChrToInt(),15,43
tests.net.sf.jabref.bst.TestVM.testSort(),26,79
tests.net.sf.jabref.bst.TestVM.testBuildIn(),17,24
tests.net.sf.jabref.bst.TestVM.testVariables(),18,21
tests.net.sf.jabref.bst.TestVM.testWhile(),21,41
tests.net.sf.jabref.bst.TestVM.testType(),31,79
tests.net.sf.jabref.bst.TestVM.testMissing(),27,62
tests.net.sf.jabref.bst.TestVM.testFormatName(),35,91
tests.net.sf.jabref.bst.TestVM.testCallType(),34,73
tests.net.sf.jabref.bst.TestVM.testIterate(),25,55
tests.net.sf.jabref.bst.TestVM.testWidth(),35,84
tests.net.sf.jabref.bst.TestVM.testVMSwap(),16,27
tests.net.sf.jabref.bst.TestVM.bibtexString2BibtexEntry(String),14,25
tests.net.sf.jabref.bst.TestVM.bibtexEntry2BibtexString(BibtexEntry),13,21
tests.net.sf.jabref.bst.TestVM.t1BibtexString(),34,36
tests.net.sf.jabref.bst.TestVM.testHypthenatedName(),25,34
tests.net.sf.jabref.bst.TestVM.t1BibtexEntry(),4,11
net.sf.jabref.about.About2.About2(JFrame),30,58
net.sf.jabref.about.About2.processWindowEvent(WindowEvent),6,14
net.sf.jabref.about.About2.actionPerformed(ActionEvent),14,20
"net.sf.jabref.collab.FileUpdatePanel.FileUpdatePanel(JabRefFrame,BasePanel,SidePaneManager,File,ChangeScanner)",39,91
net.sf.jabref.collab.FileUpdatePanel.getPanel(),7,19
net.sf.jabref.collab.FileUpdatePanel.componentClosing(),5,6
net.sf.jabref.collab.FileUpdatePanel.actionPerformed(ActionEvent),19,33
net.sf.jabref.collab.FileUpdatePanel.scanResultsResolved(boolean),19,26
net.sf.jabref.imports.ScifinderImporter.getFormatName(),4,6
net.sf.jabref.imports.ScifinderImporter.getCLIId(),8,9
net.sf.jabref.imports.ScifinderImporter.isRecognizedFormat(InputStream),20,30
net.sf.jabref.imports.ScifinderImporter.importEntries(InputStream),77,246
net.sf.jabref.PrefsDialog3.PrefsDialog3(JabRefFrame),101,451
net.sf.jabref.PrefsDialog3.PrefsDialog3(JabRefFrame).$1.valueChanged(ListSelectionEvent),12,15
net.sf.jabref.PrefsDialog3.PrefsDialog3(JabRefFrame).$2.actionPerformed(ActionEvent),34,78
net.sf.jabref.PrefsDialog3.PrefsDialog3(JabRefFrame).$3.actionPerformed(ActionEvent),46,70
net.sf.jabref.PrefsDialog3.OkAction.OkAction(),1,1
net.sf.jabref.PrefsDialog3.OkAction.actionPerformed(ActionEvent),8,14
net.sf.jabref.PrefsDialog3.OkAction.actionPerformed(ActionEvent).$1.run(),16,32
net.sf.jabref.PrefsDialog3.OkAction.actionPerformed(ActionEvent).$1.update(),19,22
net.sf.jabref.PrefsDialog3.setValues(),12,20
net.sf.jabref.PrefsDialog3.CancelAction.CancelAction(),2,3
net.sf.jabref.PrefsDialog3.CancelAction.actionPerformed(ActionEvent),5,6
"net.sf.jabref.gui.FieldSetComponent.FieldSetComponent(String,List<String>,List<String>,boolean,boolean)",19,32
"net.sf.jabref.gui.FieldSetComponent.FieldSetComponent(String,List<String>,boolean,boolean)",21,31
"net.sf.jabref.gui.FieldSetComponent.FieldSetComponent(String,List<String>,List<String>,String,String,boolean,boolean)",57,270
net.sf.jabref.gui.FieldSetComponent.setListSelectionMode(int),4,10
net.sf.jabref.gui.FieldSetComponent.selectField(String),16,30
net.sf.jabref.gui.FieldSetComponent.getFirstSelected(),5,7
net.sf.jabref.gui.FieldSetComponent.setEnabled(boolean),6,20
net.sf.jabref.gui.FieldSetComponent.setFields(List<String>),12,41
net.sf.jabref.gui.FieldSetComponent.addField(String),38,57
net.sf.jabref.gui.FieldSetComponent.addFieldUncritically(String),23,33
net.sf.jabref.gui.FieldSetComponent.removeSelected(),8,18
net.sf.jabref.gui.FieldSetComponent.activate(),4,4
net.sf.jabref.gui.FieldSetComponent.changesMade(),7,11
net.sf.jabref.gui.FieldSetComponent.getFields(),9,12
net.sf.jabref.gui.FieldSetComponent.addListSelectionListener(ListSelectionListener),6,20
net.sf.jabref.gui.FieldSetComponent.addAdditionActionListener(ActionListener),16,26
net.sf.jabref.gui.FieldSetComponent.removeAdditionActionListener(ActionListener),5,9
net.sf.jabref.gui.FieldSetComponent.addListDataListener(ListDataListener),6,16
net.sf.jabref.gui.FieldSetComponent.move(int),18,39
net.sf.jabref.gui.FieldSetComponent.actionPerformed(ActionEvent),37,78
net.sf.jabref.imports.CiteSeerFetcher.CiteSeerFetcher(SidePaneManager),53,189
net.sf.jabref.imports.CiteSeerFetcher.ShowEmptyFetchSetDialog.run(),20,25
net.sf.jabref.imports.CiteSeerFetcher.getEmptyFetchSetDialog(),4,12
net.sf.jabref.imports.CiteSeerFetcher.ShowNoConnectionDialog.ShowNoConnectionDialog(String),5,7
net.sf.jabref.imports.CiteSeerFetcher.ShowNoConnectionDialog.run(),21,29
"net.sf.jabref.imports.CiteSeerFetcher.ShowBadIdentifiersDialog.ShowBadIdentifiersDialog(Hashtable<Integer,BibtexEntry>)",9,11
net.sf.jabref.imports.CiteSeerFetcher.ShowBadIdentifiersDialog.run(),40,104
"net.sf.jabref.imports.CiteSeerFetcher.ShowBadIdentifierDialog.ShowBadIdentifierDialog(String,int)",6,11
net.sf.jabref.imports.CiteSeerFetcher.ShowBadIdentifierDialog.run(),26,40
"net.sf.jabref.imports.CiteSeerFetcher.ShowBadURLDialog.ShowBadURLDialog(String,int)",5,11
net.sf.jabref.imports.CiteSeerFetcher.ShowBadURLDialog.run(),27,40
net.sf.jabref.imports.CiteSeerFetcher.ShowMissingURLDialog.ShowMissingURLDialog(int),4,6
net.sf.jabref.imports.CiteSeerFetcher.ShowMissingURLDialog.run(),26,36
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarMaximum.UpdateProgressBarMaximum(int),5,7
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarMaximum.run(),5,6
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarTwoMaximum.UpdateProgressBarTwoMaximum(int),5,7
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarTwoMaximum.run(),5,6
net.sf.jabref.imports.CiteSeerFetcher.InitializeProgressBar.run(),8,17
net.sf.jabref.imports.CiteSeerFetcher.InitializeProgressBarTwo.run(),8,17
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarValue.UpdateProgressBarValue(int),5,7
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarValue.run(),6,6
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarTwoValue.UpdateProgressBarTwoValue(int),5,7
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressBarTwoValue.run(),6,6
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressStatus.UpdateProgressStatus(String),4,7
net.sf.jabref.imports.CiteSeerFetcher.UpdateProgressStatus.run(),7,7
net.sf.jabref.imports.CiteSeerFetcher.activateCitationFetcher(),4,9
net.sf.jabref.imports.CiteSeerFetcher.deactivateCitationFetcher(),4,6
net.sf.jabref.imports.CiteSeerFetcher.activateImportFetcher(),3,6
net.sf.jabref.imports.CiteSeerFetcher.deactivateImportFetcher(),3,4
net.sf.jabref.imports.CiteSeerFetcher.beginImportCiteSeerProgress(),12,26
net.sf.jabref.imports.CiteSeerFetcher.endImportCiteSeerProgress(),9,19
"net.sf.jabref.imports.CiteSeerFetcher.populate(BibtexDatabase,BibtexDatabase)",47,251
"net.sf.jabref.imports.CiteSeerFetcher.generateCitationList(Map<String,Boolean>,BibtexDatabase)",63,184
net.sf.jabref.imports.CiteSeerFetcher.generateCanonicalNumber(BibtexEntry),7,9
net.sf.jabref.imports.CiteSeerFetcher.generateCanonicalNumber(String),8,21
net.sf.jabref.imports.CiteSeerFetcher.generateCanonicalIdentifier(BibtexEntry),9,18
net.sf.jabref.imports.CiteSeerFetcher.generateCanonicalURL(String),9,23
net.sf.jabref.imports.CiteSeerFetcher.generateCanonicalURL(BibtexEntry),8,11
"net.sf.jabref.imports.CiteSeerFetcher.generateIdentifierList(BibtexEntry,Map<String,Boolean>,Hashtable<Integer,BibtexEntry>)",51,138
"net.sf.jabref.imports.CiteSeerFetcher.importCiteSeerEntries(int[],NamedCompound)",35,107
"net.sf.jabref.imports.CiteSeerFetcher.importCiteSeerEntry(BibtexEntry,NamedCompound,BooleanAssign,BooleanAssign,BooleanAssign,Hashtable<Integer,BibtexEntry>)",55,155
net.sf.jabref.IncrementalSearcher.IncrementalSearcher(JabRefPreferences),6,8
net.sf.jabref.IncrementalSearcher.getField(),3,4
"net.sf.jabref.IncrementalSearcher.search(String,BibtexEntry)",8,17
"net.sf.jabref.IncrementalSearcher.searchFields(Set<String>,BibtexEntry,String)",22,66
net.sf.jabref.bst.Warn.warn(String),2,2
"net.sf.jabref.external.IconSelection.IconSelection(JDialog,String)",10,17
net.sf.jabref.external.IconSelection.setVisible(boolean),4,9
net.sf.jabref.external.IconSelection.isOkPressed(),7,9
net.sf.jabref.external.IconSelection.getSelectedIconKey(),5,8
net.sf.jabref.external.IconSelection.init(String),62,185
net.sf.jabref.external.IconSelection.init(String).MyRenderer.MyRenderer(),11,15
"net.sf.jabref.external.IconSelection.init(String).MyRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",20,55
net.sf.jabref.external.IconSelection.init(String).$1.actionPerformed(ActionEvent),9,15
net.sf.jabref.external.IconSelection.init(String).$2.actionPerformed(ActionEvent),5,8
net.sf.jabref.external.IconSelection.init(String).$3.mouseClicked(MouseEvent),5,6
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame),103,457
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame).$1.actionPerformed(ActionEvent),19,33
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame).$2.actionPerformed(ActionEvent),22,41
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame).$3.actionPerformed(ActionEvent),9,10
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame).$4.actionPerformed(ActionEvent),5,6
net.sf.jabref.journals.ManageJournalsPanel.ManageJournalsPanel(JabRefFrame).$5.actionPerformed(ActionEvent),10,12
net.sf.jabref.journals.ManageJournalsPanel.getDialog(),1,3
net.sf.jabref.journals.ManageJournalsPanel.setValues(),18,35
net.sf.jabref.journals.ManageJournalsPanel.buildExternalsPanel(),42,122
net.sf.jabref.journals.ManageJournalsPanel.setupExternals(),15,49
net.sf.jabref.journals.ManageJournalsPanel.setupUserTable(),32,63
net.sf.jabref.journals.ManageJournalsPanel.readyToClose(),26,59
net.sf.jabref.journals.ManageJournalsPanel.storeSettings(),54,140
net.sf.jabref.journals.ManageJournalsPanel.DownloadAction.DownloadAction(JTextField),7,8
net.sf.jabref.journals.ManageJournalsPanel.DownloadAction.actionPerformed(ActionEvent),51,92
"net.sf.jabref.journals.ManageJournalsPanel.BrowseAction.BrowseAction(JTextField,boolean)",8,11
net.sf.jabref.journals.ManageJournalsPanel.BrowseAction.actionPerformed(ActionEvent),17,43
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.AbbreviationsTableModel(),3,3
"net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.setJournals(Map<String,String>)",15,31
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getJournals(),5,6
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getColumnCount(),2,2
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getRowCount(),4,4
"net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getValueAt(int,int)",7,11
"net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.setValueAt(Object,int,int)",11,20
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getColumnName(int),4,4
"net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.isCellEditable(int,int)",2,2
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getMouseListener(),3,6
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.getMouseListener().$1.mouseClicked(MouseEvent),30,61
net.sf.jabref.journals.ManageJournalsPanel.AbbreviationsTableModel.actionPerformed(ActionEvent),35,81
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.ExternalFileEntry(),7,7
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.ExternalFileEntry(String),9,10
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.setupPanel(),25,78
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.setupPanel().$1.actionPerformed(ActionEvent),23,56
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.setupPanel().$2.actionPerformed(ActionEvent),10,12
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.getPanel(),2,3
net.sf.jabref.journals.ManageJournalsPanel.ExternalFileEntry.getValue(),3,3
"net.sf.jabref.journals.ManageJournalsPanel.JournalEntry.JournalEntry(String,String)",5,10
net.sf.jabref.journals.ManageJournalsPanel.JournalEntry.compareTo(JournalEntry),4,6
net.sf.jabref.gui.PreventDraggingJTableHeader.PreventDraggingJTableHeader(TableColumnModel),6,7
net.sf.jabref.gui.PreventDraggingJTableHeader.setDraggedColumn(TableColumn),12,24
net.sf.jabref.gui.PreventDraggingJTableHeader.getDraggedColumn(),10,21
net.sf.jabref.gui.PreventDraggingJTableHeader.getSpecialColumnsCount(),13,34
net.sf.jabref.gui.PreventDraggingJTableHeader.isUnnamed(TableColumn),7,12
"net.sf.jabref.gui.PreventDraggingJTableHeader.preventDragBeforeIndex(JTable,int,int)",21,67
net.sf.jabref.gui.ColorSetupPanel.ColorSetupPanel(),38,141
net.sf.jabref.gui.ColorSetupPanel.setValues(),9,15
net.sf.jabref.gui.ColorSetupPanel.storeSettings(),9,14
net.sf.jabref.gui.ColorSetupPanel.ColorButtonListener.ColorButtonListener(ColorButton),3,8
net.sf.jabref.gui.ColorSetupPanel.ColorButtonListener.actionPerformed(ActionEvent),10,18
"net.sf.jabref.gui.ColorSetupPanel.ColorButton.ColorButton(String,String)",12,20
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getDefaultButton(),6,11
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getDefaultButton().$1.actionPerformed(ActionEvent),9,11
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getKey(),2,3
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getName(),2,3
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getColor(),1,3
net.sf.jabref.gui.ColorSetupPanel.ColorButton.setColor(Color),2,6
"net.sf.jabref.gui.ColorSetupPanel.ColorButton.paintIcon(Component,Graphics,int,int)",13,14
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getIconWidth(),2,4
net.sf.jabref.gui.ColorSetupPanel.ColorButton.getIconHeight(),2,4
net.sf.jabref.gui.components.JPanelXBoxPreferredSize.JPanelXBoxPreferredSize(),5,5
net.sf.jabref.gui.components.JPanelXBoxPreferredSize.JPanelXBoxPreferredSize(Component),6,6
net.sf.jabref.gui.components.JPanelXBoxPreferredSize.getMaximumSize(),4,5
net.sf.jabref.mods.MODSEntry.MODSEntry(),10,13
net.sf.jabref.mods.MODSEntry.MODSEntry(BibtexEntry),11,28
net.sf.jabref.mods.MODSEntry.populateFromBibtex(BibtexEntry),35,133
net.sf.jabref.mods.MODSEntry.populateExtensionFields(BibtexEntry),8,19
net.sf.jabref.mods.MODSEntry.getAuthors(String),18,54
net.sf.jabref.mods.MODSEntry.getDate(BibtexEntry),10,26
net.sf.jabref.mods.MODSEntry.getMODSgenre(BibtexEntry),24,37
net.sf.jabref.mods.MODSEntry.getDOMrepresentation(),9,18
net.sf.jabref.mods.MODSEntry.getDOMrepresentation(Document),75,429
net.sf.jabref.mods.MODSEntry.stripNonValidXMLCharacters(String),22,39
net.sf.jabref.mods.MODSEntry.toString(),23,43
net.sf.jabref.msbib.MSBibDatabase.MSBibDatabase(),8,9
net.sf.jabref.msbib.MSBibDatabase.MSBibDatabase(InputStream),6,8
net.sf.jabref.msbib.MSBibDatabase.MSBibDatabase(BibtexDatabase),8,17
"net.sf.jabref.msbib.MSBibDatabase.MSBibDatabase(BibtexDatabase,Set<String>)",8,21
net.sf.jabref.msbib.MSBibDatabase.importEntries(InputStream),41,115
"net.sf.jabref.msbib.MSBibDatabase.addEntries(BibtexDatabase,Set<String>)",11,31
net.sf.jabref.msbib.MSBibDatabase.getDOMrepresentation(),38,88
net.sf.jabref.SearchRuleSet.addRule(SearchRule),4,9
net.sf.jabref.SearchRuleSet.clearRules(),3,3
"net.sf.jabref.SearchRuleSet.applyRule(Map<String,String>,BibtexEntry)",15,31
net.sf.jabref.imports.CheckForNewEntryTypesAction.isActionNecessary(ParserResult),18,29
"net.sf.jabref.imports.CheckForNewEntryTypesAction.performAction(BasePanel,ParserResult)",40,83
"net.sf.jabref.plugin.PluginCore.getLocationInsideJar(String,String)",26,60
net.sf.jabref.plugin.PluginCore.initialize(),104,296
net.sf.jabref.plugin.PluginCore.getManager(),5,9
"net.sf.jabref.undo.UndoableChangeType.UndoableChangeType(BibtexEntry,BibtexEntryType,BibtexEntryType)",5,17
net.sf.jabref.undo.UndoableChangeType.getUndoPresentationName(),6,7
net.sf.jabref.undo.UndoableChangeType.getRedoPresentationName(),6,7
net.sf.jabref.undo.UndoableChangeType.undo(),3,5
net.sf.jabref.undo.UndoableChangeType.redo(),3,5
net.sf.jabref.imports.HTMLConverter.HTMLConverter(),11,27
net.sf.jabref.imports.HTMLConverter.format(String),27,86
"net.sf.jabref.imports.HTMLConverter.readTag(String,StringBuffer,int)",17,35
net.sf.jabref.imports.IsiImporter.getFormatName(),4,6
net.sf.jabref.imports.IsiImporter.getCLIId(),8,9
net.sf.jabref.imports.IsiImporter.isRecognizedFormat(InputStream),27,42
"net.sf.jabref.imports.IsiImporter.processSubSup(HashMap<String,String>)",23,45
"net.sf.jabref.imports.IsiImporter.processCapitalization(HashMap<String,String>)",16,29
net.sf.jabref.imports.IsiImporter.importEntries(InputStream),102,419
net.sf.jabref.imports.IsiImporter.parsePages(String),7,14
net.sf.jabref.imports.IsiImporter.parseMonth(String),16,25
net.sf.jabref.imports.IsiImporter.isiAuthorConvert(String),28,53
net.sf.jabref.imports.IsiImporter.isiAuthorsConvert(String[]),7,19
net.sf.jabref.imports.IsiImporter.isiAuthorsConvert(String),8,15
net.sf.jabref.journals.UnabbreviateAction.UnabbreviateAction(BasePanel),4,7
net.sf.jabref.journals.UnabbreviateAction.init(),10,10
net.sf.jabref.journals.UnabbreviateAction.run(),33,59
net.sf.jabref.journals.UnabbreviateAction.update(),4,4
net.sf.jabref.GUIGlobals.getTableIcon(String),12,21
net.sf.jabref.GUIGlobals.setUpIconTheme(),40,120
net.sf.jabref.GUIGlobals.getIconUrl(String),30,62
net.sf.jabref.GUIGlobals.getImage(String),16,36
net.sf.jabref.GUIGlobals.getAllIcons(),10,18
"net.sf.jabref.GUIGlobals.readIconThemeFile(URL,String)",27,72
net.sf.jabref.GUIGlobals.getLocaleHelpPath(),19,32
net.sf.jabref.GUIGlobals.init(),45,144
net.sf.jabref.gui.date.DatePickerButton.DatePickerButton(FieldEditor),13,32
net.sf.jabref.gui.date.DatePickerButton.actionPerformed(ActionEvent),15,29
net.sf.jabref.gui.date.DatePickerButton.getDatePicker(),4,6
"net.sf.jabref.groups.GroupTreeCellRenderer.getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean)",65,206
net.sf.jabref.groups.GroupTreeCellRenderer.setHighlight1Cell(Object),11,19
net.sf.jabref.groups.GroupTreeCellRenderer.setHighlight2Cells(Object[]),8,15
net.sf.jabref.groups.GroupTreeCellRenderer.setHighlight3Cells(Object[]),8,15
net.sf.jabref.groups.GroupTreeCellRenderer.setHighlightBorderCell(Object),10,24
net.sf.jabref.export.layout.format.NoSpaceBetweenAbbreviations.format(String),21,32
"net.sf.jabref.groups.UndoableChangeAssignment.UndoableChangeAssignment(Set<BibtexEntry>,Set<BibtexEntry>)",18,47
"net.sf.jabref.groups.UndoableChangeAssignment.UndoableChangeAssignment(Set<BibtexEntry>,Set<BibtexEntry>,GroupTreeNode)",11,24
net.sf.jabref.groups.UndoableChangeAssignment.setEditedNode(GroupTreeNode),17,32
net.sf.jabref.groups.UndoableChangeAssignment.getUndoPresentationName(),9,12
net.sf.jabref.groups.UndoableChangeAssignment.getRedoPresentationName(),9,12
net.sf.jabref.groups.UndoableChangeAssignment.undo(),15,19
net.sf.jabref.groups.UndoableChangeAssignment.redo(),14,18
"net.sf.jabref.external.DroppedFileHandler.DroppedFileHandler(JabRefFrame,BasePanel)",38,103
"net.sf.jabref.external.DroppedFileHandler.handleDroppedfile(String,ExternalFileType,boolean,MainTable,int)",30,84
"net.sf.jabref.external.DroppedFileHandler.handleDroppedfile(String,ExternalFileType,boolean,BibtexEntry)",55,169
"net.sf.jabref.external.DroppedFileHandler.tryXmpImport(String,ExternalFileType,boolean,NamedCompound)",82,230
"net.sf.jabref.external.DroppedFileHandler.showLinkMoveCopyRenameDialog(String,ExternalFileType,String,boolean,boolean)",57,245
"net.sf.jabref.external.DroppedFileHandler.showLinkMoveCopyRenameDialog(String,ExternalFileType,String,boolean,boolean).$1.stateChanged(ChangeEvent)",14,31
"net.sf.jabref.external.DroppedFileHandler.doLink(BibtexEntry,ExternalFileType,String,boolean,NamedCompound)",58,201
"net.sf.jabref.external.DroppedFileHandler.doMove(String,ExternalFileType,String,NamedCompound)",56,132
"net.sf.jabref.external.DroppedFileHandler.doCopy(String,ExternalFileType,String,NamedCompound)",64,150
"net.sf.jabref.groups.UndoableMoveGroup.UndoableMoveGroup(GroupSelector,GroupTreeNode,GroupTreeNode,GroupTreeNode,int)",17,70
net.sf.jabref.groups.UndoableMoveGroup.getUndoPresentationName(),7,10
net.sf.jabref.groups.UndoableMoveGroup.getRedoPresentationName(),7,10
net.sf.jabref.groups.UndoableMoveGroup.undo(),14,28
net.sf.jabref.groups.UndoableMoveGroup.redo(),14,28
"net.sf.jabref.gui.SearchResultsDialog.SearchResultsDialog(JabRefFrame,String)",9,13
net.sf.jabref.gui.SearchResultsDialog.init(String),68,219
net.sf.jabref.gui.SearchResultsDialog.init(String).$1.actionPerformed(ActionEvent),5,6
net.sf.jabref.gui.SearchResultsDialog.init(String).$2.windowOpened(WindowEvent),7,8
net.sf.jabref.gui.SearchResultsDialog.init(String).$2.windowClosing(WindowEvent),11,21
net.sf.jabref.gui.SearchResultsDialog.setVisible(boolean),8,14
net.sf.jabref.gui.SearchResultsDialog.selectFirstEntry(),12,17
net.sf.jabref.gui.SearchResultsDialog.clear(),5,6
net.sf.jabref.gui.SearchResultsDialog.setupComparatorChooser(TableComparatorChooser<BibtexEntry>),32,96
net.sf.jabref.gui.SearchResultsDialog.setWidths(),24,66
"net.sf.jabref.gui.SearchResultsDialog.addEntries(java.util.List<BibtexEntry>,BasePanel)",14,37
"net.sf.jabref.gui.SearchResultsDialog.addEntry(BibtexEntry,BasePanel)",12,30
net.sf.jabref.gui.SearchResultsDialog.TableClickListener.mouseReleased(MouseEvent),6,9
net.sf.jabref.gui.SearchResultsDialog.TableClickListener.mousePressed(MouseEvent),28,50
net.sf.jabref.gui.SearchResultsDialog.TableClickListener.mouseClicked(MouseEvent),46,97
net.sf.jabref.gui.SearchResultsDialog.TableClickListener.processPopupTrigger(MouseEvent),51,128
net.sf.jabref.gui.SearchResultsDialog.EntrySelectionListener.listChanged(ListEvent<BibtexEntry>),28,56
net.sf.jabref.gui.SearchResultsDialog.EntrySelectionListener.listChanged(ListEvent<BibtexEntry>).$1.run(),5,6
net.sf.jabref.gui.SearchResultsDialog.EntryTableFormat.getColumnCount(),5,5
net.sf.jabref.gui.SearchResultsDialog.EntryTableFormat.getColumnName(int),6,10
"net.sf.jabref.gui.SearchResultsDialog.EntryTableFormat.getColumnValue(BibtexEntry,int)",41,108
net.sf.jabref.gui.SearchResultsDialog.EntryTableFormat.getColumnClass(int),4,4
net.sf.jabref.gui.SearchResultsDialog.EntryTableFormat.getColumnComparator(int),2,3
net.sf.jabref.export.layout.format.FirstPage.format(String),5,9
net.sf.jabref.export.layout.format.DOIStrip.format(String),17,63
net.sf.jabref.groups.GroupsPrefsTab.GroupsPrefsTab(JabRefPreferences),43,175
net.sf.jabref.groups.GroupsPrefsTab.GroupsPrefsTab(JabRefPreferences).$1.focusGained(FocusEvent),6,7
net.sf.jabref.groups.GroupsPrefsTab.GroupsPrefsTab(JabRefPreferences).$1.focusLost(FocusEvent),5,6
net.sf.jabref.groups.GroupsPrefsTab.setValues(),14,43
net.sf.jabref.groups.GroupsPrefsTab.storeSettings(),15,37
net.sf.jabref.groups.GroupsPrefsTab.readyToClose(),2,2
net.sf.jabref.groups.GroupsPrefsTab.getTabName(),5,5
"net.sf.jabref.ContentSelectorDialog.ContentSelectorDialog(JabRefFrame,boolean,MetaData)",30,69
"net.sf.jabref.ContentSelectorDialog.ContentSelectorDialog(JabRefFrame,boolean,MetaData,String)",32,49
net.sf.jabref.ContentSelectorDialog.setupFieldSelector(),19,36
net.sf.jabref.ContentSelectorDialog.updateWordPanel(),15,28
net.sf.jabref.ContentSelectorDialog.fillWordSelector(),20,44
net.sf.jabref.ContentSelectorDialog.addWord(),29,62
net.sf.jabref.ContentSelectorDialog.addField(),22,41
net.sf.jabref.ContentSelectorDialog.removeWord(),28,53
net.sf.jabref.ContentSelectorDialog.fieldSelector_actionPerformed(ActionEvent),15,28
net.sf.jabref.ContentSelectorDialog.jbInit(),59,496
net.sf.jabref.ContentSelectorDialog.jbInit().$1.actionPerformed(ActionEvent),5,6
net.sf.jabref.ContentSelectorDialog.jbInit().$2.actionPerformed(ActionEvent),5,6
net.sf.jabref.ContentSelectorDialog.jbInit().$3.actionPerformed(ActionEvent),5,6
net.sf.jabref.ContentSelectorDialog.jbInit().$4.actionPerformed(ActionEvent),5,6
net.sf.jabref.ContentSelectorDialog.jbInit().$5.actionPerformed(ActionEvent),13,19
net.sf.jabref.ContentSelectorDialog.Close_actionPerformed(ActionEvent),5,6
net.sf.jabref.ContentSelectorDialog_Close_actionAdapter.ContentSelectorDialog_Close_actionAdapter(ContentSelectorDialog),7,12
net.sf.jabref.ContentSelectorDialog_Close_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.ContentSelectorDialog_fieldSelector_actionAdapter.ContentSelectorDialog_fieldSelector_actionAdapter(ContentSelectorDialog),7,13
net.sf.jabref.ContentSelectorDialog_fieldSelector_actionAdapter.actionPerformed(ActionEvent),6,9
net.sf.jabref.util.TBuildInfo.TBuildInfo(String),7,9
net.sf.jabref.util.TBuildInfo.readBuildVersionData(String),42,104
net.sf.jabref.util.TBuildInfo.getBUILD_DATE(),3,5
net.sf.jabref.util.TBuildInfo.getBUILD_VERSION(),3,5
net.sf.jabref.util.TBuildInfo.getBUILD_NUMBER(),2,3
"net.sf.jabref.imports.CiteSeerCitationHandler.CiteSeerCitationHandler(Map<String,Boolean>)",12,17
"net.sf.jabref.imports.CiteSeerCitationHandler.characters(char[],int,int)",7,16
net.sf.jabref.imports.CiteSeerCitationHandler.startDocument(),7,7
"net.sf.jabref.imports.CiteSeerCitationHandler.startElement(String,String,String,Attributes)",23,58
net.sf.jabref.export.layout.format.HTMLParagraphs.format(String),15,42
net.sf.jabref.imports.SixpackImporter.getFormatName(),4,6
net.sf.jabref.imports.SixpackImporter.getCLIId(),8,9
net.sf.jabref.imports.SixpackImporter.isRecognizedFormat(InputStream),18,28
net.sf.jabref.imports.SixpackImporter.importEntries(InputStream),86,229
net.sf.jabref.export.layout.format.AuthorFirstFirstCommas.format(String),9,13
net.sf.jabref.gui.IconComparator.IconComparator(String[]),4,6
"net.sf.jabref.gui.IconComparator.compare(BibtexEntry,BibtexEntry)",8,17
net.sf.jabref.groups.GroupMatcher.matches(BibtexEntry),4,6
net.sf.jabref.CallBack.update(),1,1
net.sf.jabref.labelPattern.LabelPatternUtil.updateDefaultPattern(),9,10
net.sf.jabref.labelPattern.LabelPatternUtil.split(String),48,155
"net.sf.jabref.labelPattern.LabelPatternUtil.makeLabel(LabelPattern,BibtexDatabase,BibtexEntry)",96,273
"net.sf.jabref.labelPattern.LabelPatternUtil.applyModifiers(String,String[],int)",46,111
"net.sf.jabref.labelPattern.LabelPatternUtil.makeLabel(BibtexEntry,String)",83,418
"net.sf.jabref.labelPattern.LabelPatternUtil.getField(BibtexEntry,String)",12,32
net.sf.jabref.labelPattern.LabelPatternUtil.getAddition(int),13,23
"net.sf.jabref.labelPattern.LabelPatternUtil.getTitleWords(int,BibtexEntry)",35,85
net.sf.jabref.labelPattern.LabelPatternUtil.isLabelUnique(String),29,59
net.sf.jabref.labelPattern.LabelPatternUtil.firstAuthor(String),15,36
net.sf.jabref.labelPattern.LabelPatternUtil.firstAuthorVonAndLast(String),18,49
net.sf.jabref.labelPattern.LabelPatternUtil.lastAuthor(String),18,42
net.sf.jabref.labelPattern.LabelPatternUtil.allAuthors(String),25,55
net.sf.jabref.labelPattern.LabelPatternUtil.authorsAlpha(String),44,119
"net.sf.jabref.labelPattern.LabelPatternUtil.NAuthors(String,int)",25,62
net.sf.jabref.labelPattern.LabelPatternUtil.oneAuthorPlusIni(String),35,77
net.sf.jabref.labelPattern.LabelPatternUtil.authAuthEa(String),20,62
net.sf.jabref.labelPattern.LabelPatternUtil.authEtal(String),21,63
"net.sf.jabref.labelPattern.LabelPatternUtil.authN_M(String,int,int)",17,36
net.sf.jabref.labelPattern.LabelPatternUtil.authshort(String),32,84
"net.sf.jabref.labelPattern.LabelPatternUtil.authIniN(String,int)",41,106
net.sf.jabref.labelPattern.LabelPatternUtil.firstPage(String),19,43
net.sf.jabref.labelPattern.LabelPatternUtil.lastPage(String),18,42
net.sf.jabref.labelPattern.LabelPatternUtil.parseFieldMarker(String),15,63
net.sf.jabref.BaseAction.action(),2,2
net.sf.jabref.imports.EndnoteImporter.getFormatName(),5,7
net.sf.jabref.imports.EndnoteImporter.getCLIId(),8,9
net.sf.jabref.imports.EndnoteImporter.isRecognizedFormat(InputStream),23,43
net.sf.jabref.imports.EndnoteImporter.importEntries(InputStream),117,443
net.sf.jabref.imports.EndnoteImporter.fixAuthor(String),28,61
"net.sf.jabref.imports.AutosaveStartupPrompter.AutosaveStartupPrompter(JabRefFrame,List<File>)",9,14
net.sf.jabref.imports.AutosaveStartupPrompter.run(),72,243
"net.sf.jabref.wizard.text.gui.OverlayPanel.OverlayPanel(JComponent,String)",25,60
net.sf.jabref.wizard.text.gui.OverlayPanel.paint(Graphics),11,22
tests.net.sf.jabref.imports.GeneralFetcherTest.testResetButton(),24,59
tests.net.sf.jabref.imports.GeneralFetcherTest.setUp(),16,31
tests.net.sf.jabref.imports.GeneralFetcherTest.tearDown(),4,4
"net.sf.jabref.export.ExportFileFilter.ExportFileFilter(IExportFormat,String)",8,17
net.sf.jabref.export.ExportFileFilter.getExportFormat(),2,5
net.sf.jabref.export.ExportFileFilter.getExtension(),2,3
net.sf.jabref.export.ExportFileFilter.accept(File),6,9
net.sf.jabref.export.ExportFileFilter.getDescription(),3,3
net.sf.jabref.export.ExportFileFilter.compareTo(ExportFileFilter),5,7
net.sf.jabref.external.PushToApplication.getName(),2,2
net.sf.jabref.external.PushToApplication.getApplicationName(),3,3
net.sf.jabref.external.PushToApplication.getTooltip(),2,2
net.sf.jabref.external.PushToApplication.getIcon(),1,2
net.sf.jabref.external.PushToApplication.getKeyStrokeName(),4,4
net.sf.jabref.external.PushToApplication.getSettingsPanel(),18,31
net.sf.jabref.external.PushToApplication.storeSettings(),14,24
"net.sf.jabref.external.PushToApplication.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",21,33
net.sf.jabref.external.PushToApplication.operationCompleted(BasePanel),14,15
net.sf.jabref.external.PushToApplication.requiresBibtexKeys(),14,20
net.sf.jabref.util.ErrorConsole.getInstance(),3,8
net.sf.jabref.util.ErrorConsole.ErrorConsole(),8,33
net.sf.jabref.util.ErrorConsole.getErrorMessages(),5,6
net.sf.jabref.util.ErrorConsole.getOutput(),3,4
net.sf.jabref.util.ErrorConsole.displayErrorConsole(JFrame),27,65
net.sf.jabref.util.ErrorConsole.ErrorConsoleAction.ErrorConsoleAction(JFrame),12,19
net.sf.jabref.util.ErrorConsole.ErrorConsoleAction.actionPerformed(ActionEvent),7,8
net.sf.jabref.util.ErrorConsole.getAction(JFrame),5,8
"net.sf.jabref.util.ErrorConsole.TeeStream.TeeStream(PrintStream,PrintStream)",3,6
"net.sf.jabref.util.ErrorConsole.TeeStream.write(byte,int,int)",4,10
net.sf.jabref.util.ErrorConsole.TeeStream.flush(),1,3
net.sf.jabref.imports.ImportFormatReader.ImportFormatReader(),2,2
net.sf.jabref.imports.ImportFormatReader.resetImportFormats(),61,144
net.sf.jabref.imports.ImportFormatReader.getByCliId(String),10,26
"net.sf.jabref.imports.ImportFormatReader.importFromStream(String,InputStream)",18,35
"net.sf.jabref.imports.ImportFormatReader.importFromFile(String,String)",13,23
"net.sf.jabref.imports.ImportFormatReader.importFromFile(ImportFormat,String)",18,49
net.sf.jabref.imports.ImportFormatReader.createDatabase(Collection<BibtexEntry>),22,47
net.sf.jabref.imports.ImportFormatReader.getCustomImportFormats(),13,31
net.sf.jabref.imports.ImportFormatReader.getBuiltInInputFormats(),14,32
net.sf.jabref.imports.ImportFormatReader.getImportFormats(),9,13
net.sf.jabref.imports.ImportFormatReader.getImportFormatList(),16,43
net.sf.jabref.imports.ImportFormatReader.expandAuthorInitials(String),16,64
net.sf.jabref.imports.ImportFormatReader.expandAll(String),17,48
net.sf.jabref.imports.ImportFormatReader.checkAndCreateFile(String),15,27
"net.sf.jabref.imports.ImportFormatReader.setIfNecessary(BibtexEntry,String,String)",9,19
"net.sf.jabref.imports.ImportFormatReader.getReader(File,String)",7,19
net.sf.jabref.imports.ImportFormatReader.getReaderDefaultEncoding(InputStream),7,18
"net.sf.jabref.imports.ImportFormatReader.import_File(String,String)",37,90
net.sf.jabref.imports.ImportFormatReader.purgeEmptyEntries(Collection<BibtexEntry>),23,41
net.sf.jabref.imports.ImportFormatReader.importUnknownFormat(String),33,88
net.sf.jabref.imports.SPIRESFetcher.SPIRESFetcher(),2,2
net.sf.jabref.imports.SPIRESFetcher.constructUrl(String),28,53
net.sf.jabref.imports.SPIRESFetcher.constructUrlFromSlaccitation(String),28,59
net.sf.jabref.imports.SPIRESFetcher.constructUrlFromEprint(String),23,49
"net.sf.jabref.imports.SPIRESFetcher.importSpiresEntries(String,OutputPrinter)",53,122
net.sf.jabref.imports.SPIRESFetcher.getHelpPage(),10,10
net.sf.jabref.imports.SPIRESFetcher.getIcon(),5,7
net.sf.jabref.imports.SPIRESFetcher.getKeyName(),5,5
net.sf.jabref.imports.SPIRESFetcher.getOptionsPanel(),3,5
net.sf.jabref.imports.SPIRESFetcher.getTitle(),6,7
net.sf.jabref.imports.SPIRESFetcher.cancelled(),7,7
net.sf.jabref.imports.SPIRESFetcher.done(int),2,2
net.sf.jabref.imports.SPIRESFetcher.stopFetching(),2,2
"net.sf.jabref.imports.SPIRESFetcher.processQuery(String,ImportInspector,OutputPrinter)",42,78
net.sf.jabref.export.layout.format.AuthorAndsCommaReplacer.format(String),9,31
"net.sf.jabref.util.QuotedStringTokenizer.QuotedStringTokenizer(String,String,char)",22,53
net.sf.jabref.util.QuotedStringTokenizer.nextToken(),17,42
net.sf.jabref.util.QuotedStringTokenizer.isDelimiter(char),3,3
net.sf.jabref.util.QuotedStringTokenizer.hasMoreTokens(),4,4
"net.sf.jabref.net.Cookie.Cookie(URI,String)",32,146
net.sf.jabref.net.Cookie.hasExpired(),3,5
net.sf.jabref.net.Cookie.getName(),2,3
net.sf.jabref.net.Cookie.getURI(),1,3
net.sf.jabref.net.Cookie.matches(URI),14,28
net.sf.jabref.net.Cookie.toString(),6,15
tests.net.sf.jabref.bst.AllTests.suite(),18,59
net.sf.jabref.HelpDialog.HelpDialog(JabRefFrame),41,129
net.sf.jabref.HelpDialog.showPage(String),5,7
"net.sf.jabref.HelpDialog.showPage(String,Class)",16,29
net.sf.jabref.HelpDialog.hyperlinkUpdate(HyperlinkEvent),11,20
net.sf.jabref.HelpDialog.CloseAction.CloseAction(),12,19
net.sf.jabref.HelpDialog.CloseAction.actionPerformed(ActionEvent),4,5
net.sf.jabref.HelpDialog.BackAction.BackAction(),9,9
net.sf.jabref.HelpDialog.BackAction.actionPerformed(ActionEvent),7,10
net.sf.jabref.HelpDialog.ForwardAction.ForwardAction(),5,6
net.sf.jabref.HelpDialog.ForwardAction.actionPerformed(ActionEvent),7,10
net.sf.jabref.HelpDialog.ContentsAction.ContentsAction(),6,8
net.sf.jabref.HelpDialog.ContentsAction.actionPerformed(ActionEvent),13,15
net.sf.jabref.imports.RisImporter.getFormatName(),4,6
net.sf.jabref.imports.RisImporter.getCLIId(),8,9
net.sf.jabref.imports.RisImporter.isRecognizedFormat(InputStream),22,47
net.sf.jabref.imports.RisImporter.importEntries(InputStream),98,409
tests.net.sf.jabref.export.layout.format.AuthorLastFirstOxfordCommasTest.testFormat(),27,83
net.sf.jabref.export.layout.format.DOICheck.format(String),21,66
net.sf.jabref.label.KeyWord.KeyWord(),19,33
net.sf.jabref.label.KeyWord.getKeyWord(),3,9
net.sf.jabref.label.KeyWord.isKeyWord(String),6,9
net.sf.jabref.label.KeyWord.isKeyWordMatchCase(String),5,9
net.sf.jabref.imports.CustomImportList.Importer.Importer(),1,1
net.sf.jabref.imports.CustomImportList.Importer.Importer(String[]),7,12
net.sf.jabref.imports.CustomImportList.Importer.getName(),2,3
net.sf.jabref.imports.CustomImportList.Importer.setName(String),3,6
net.sf.jabref.imports.CustomImportList.Importer.getClidId(),3,3
net.sf.jabref.imports.CustomImportList.Importer.setCliId(String),3,6
net.sf.jabref.imports.CustomImportList.Importer.getClassName(),2,3
net.sf.jabref.imports.CustomImportList.Importer.setClassName(String),3,6
net.sf.jabref.imports.CustomImportList.Importer.setBasePath(String),4,10
net.sf.jabref.imports.CustomImportList.Importer.getBasePath(),3,6
net.sf.jabref.imports.CustomImportList.Importer.getBasePathUrl(),6,11
net.sf.jabref.imports.CustomImportList.Importer.getAsStringArray(),6,9
net.sf.jabref.imports.CustomImportList.Importer.equals(Object),4,7
net.sf.jabref.imports.CustomImportList.Importer.hashCode(),3,5
net.sf.jabref.imports.CustomImportList.Importer.compareTo(Importer),3,5
net.sf.jabref.imports.CustomImportList.Importer.toString(),2,3
net.sf.jabref.imports.CustomImportList.Importer.getInstance(),17,33
net.sf.jabref.imports.CustomImportList.CustomImportList(JabRefPreferences),7,10
net.sf.jabref.imports.CustomImportList.readPrefs(),18,23
net.sf.jabref.imports.CustomImportList.addImporter(Importer),3,8
net.sf.jabref.imports.CustomImportList.replaceImporter(Importer),11,26
net.sf.jabref.imports.CustomImportList.store(),11,17
net.sf.jabref.imports.CustomImportList.purgeAll(),8,12
tests.net.sf.jabref.bst.BibtexCaseChangerTest.testChangeCase(),30,235
tests.net.sf.jabref.bst.BibtexCaseChangerTest.testColon(),6,37
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerT(String,String)",6,12
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerT(String,String).$1.warn(String)",4,7
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerL(String,String)",6,12
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerL(String,String).$2.warn(String)",4,7
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerU(String,String)",6,12
"tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerU(String,String).$3.warn(String)",4,7
net.sf.jabref.gui.FirstColumnComparator.FirstColumnComparator(BibtexDatabase),4,7
"net.sf.jabref.gui.FirstColumnComparator.compare(BibtexEntry,BibtexEntry)",7,17
net.sf.jabref.export.layout.format.RemoveBrackets.format(String),10,40
"net.sf.jabref.bst.BibtexWidth.getSpecialCharWidth(char[],int)",4,17
net.sf.jabref.bst.BibtexWidth.getCharWidth(char),4,104
"net.sf.jabref.bst.BibtexWidth.width(String,Warn)",39,104
net.sf.jabref.imports.BibtexParser.BibtexParser(Reader),13,16
net.sf.jabref.imports.BibtexParser.parse(Reader),12,22
net.sf.jabref.imports.BibtexParser.fromString(String),17,44
net.sf.jabref.imports.BibtexParser.singleFromString(String),17,35
net.sf.jabref.imports.BibtexParser.isRecognizedFormat(Reader),25,36
net.sf.jabref.imports.BibtexParser.skipWhitespace(),14,20
net.sf.jabref.imports.BibtexParser.skipAndRecordWhitespace(int),18,30
net.sf.jabref.imports.BibtexParser.parse(),144,483
net.sf.jabref.imports.BibtexParser.peek(),4,4
net.sf.jabref.imports.BibtexParser.read(),3,4
net.sf.jabref.imports.BibtexParser.unread(int),3,4
net.sf.jabref.imports.BibtexParser.parseString(),20,53
net.sf.jabref.imports.BibtexParser.parsePreamble(),6,8
net.sf.jabref.imports.BibtexParser.parseEntry(BibtexEntryType),35,102
net.sf.jabref.imports.BibtexParser.parseField(BibtexEntry),50,98
net.sf.jabref.imports.BibtexParser.parseFieldContent(String),80,220
net.sf.jabref.imports.BibtexParser.hasNegativeBraceCount(String),15,26
net.sf.jabref.imports.BibtexParser.parseTextToken(),23,39
net.sf.jabref.imports.BibtexParser.fixKey(),46,143
net.sf.jabref.imports.BibtexParser.removeWhitespaces(StringBuilder),12,23
net.sf.jabref.imports.BibtexParser.unreadBuffer(StringBuilder),12,16
net.sf.jabref.imports.BibtexParser.parseKey(),40,83
net.sf.jabref.imports.BibtexParser.NoLabelException.NoLabelException(String),4,5
net.sf.jabref.imports.BibtexParser.parseBracketedText(),37,77
net.sf.jabref.imports.BibtexParser.parseBracketedTextExactly(),18,31
net.sf.jabref.imports.BibtexParser.parseQuotedFieldExactly(),18,31
net.sf.jabref.imports.BibtexParser.consume(char),8,13
net.sf.jabref.imports.BibtexParser.consumeUncritically(char),10,12
"net.sf.jabref.imports.BibtexParser.consume(char,char)",12,20
net.sf.jabref.imports.BibtexParser.checkEntryTypes(ParserResult),22,60
net.sf.jabref.imports.BibtexParser.readJabRefVersionNumber(),56,112
net.sf.jabref.imports.BibtexParser.setMajorMinorVersions(),18,38
net.sf.jabref.wizard.auximport.AuxSubGenerator.AuxSubGenerator(BibtexDatabase),13,17
net.sf.jabref.wizard.auximport.AuxSubGenerator.setReferenceDatabase(BibtexDatabase),5,7
net.sf.jabref.wizard.auximport.AuxSubGenerator.parseAuxFile(String),76,233
net.sf.jabref.wizard.auximport.AuxSubGenerator.resolveTags(),40,99
"net.sf.jabref.wizard.auximport.AuxSubGenerator.insertEntry(BibtexDatabase,BibtexEntry)",20,47
"net.sf.jabref.wizard.auximport.AuxSubGenerator.generate(String,BibtexDatabase)",24,45
net.sf.jabref.wizard.auximport.AuxSubGenerator.getGeneratedDatabase(),4,9
net.sf.jabref.wizard.auximport.AuxSubGenerator.getFoundKeysInAux(),5,5
net.sf.jabref.wizard.auximport.AuxSubGenerator.getResolvedKeysCount(),7,9
net.sf.jabref.wizard.auximport.AuxSubGenerator.getNotResolvedKeysCount(),6,6
net.sf.jabref.wizard.auximport.AuxSubGenerator.getCrossreferencedEntriesCount(),10,18
net.sf.jabref.wizard.auximport.AuxSubGenerator.clear(),8,8
net.sf.jabref.wizard.auximport.AuxSubGenerator.getNotFoundList(),9,13
net.sf.jabref.wizard.auximport.AuxSubGenerator.getNestedAuxCounter(),9,14
net.sf.jabref.undo.NamedCompound.NamedCompound(String),4,6
net.sf.jabref.undo.NamedCompound.addEdit(UndoableEdit),4,11
net.sf.jabref.undo.NamedCompound.hasEdits(),1,2
net.sf.jabref.undo.NamedCompound.getUndoPresentationName(),6,8
net.sf.jabref.undo.NamedCompound.getRedoPresentationName(),6,8
net.sf.jabref.undo.NamedCompound.getNameOnly(),7,9
tests.net.sf.jabref.AuthorListTest.testFixAuthor_Natbib(),14,76
tests.net.sf.jabref.AuthorListTest.testGetAuthorList(),7,26
tests.net.sf.jabref.AuthorListTest.testFixAuthor_firstNameFirstCommas(),22,324
tests.net.sf.jabref.AuthorListTest.testFixAuthor_firstNameFirst(),16,90
tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameFirstCommas(),18,320
tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameFirst(),17,251
tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameOnlyCommas(),16,158
tests.net.sf.jabref.AuthorListTest.testFixAuthorForAlphabetization(),13,50
tests.net.sf.jabref.AuthorListTest.size(String),5,9
tests.net.sf.jabref.AuthorListTest.testSize(),15,64
tests.net.sf.jabref.AuthorListTest.testGetAuthor(),16,141
tests.net.sf.jabref.AuthorListTest.testGetAuthorsNatbib(),20,91
tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastOnly(),14,91
tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastFirst(),19,180
tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastFirstAnds(),13,117
tests.net.sf.jabref.AuthorListTest.testGetAuthorsFirstFirst(),12,143
tests.net.sf.jabref.AuthorListTest.testGetAuthorsFirstFirstAnds(),14,65
tests.net.sf.jabref.AuthorListTest.testGetAuthorsForAlphabetization(),13,53
net.sf.jabref.external.SynchronizeFileField.SynchronizeFileField(BasePanel),5,8
net.sf.jabref.external.SynchronizeFileField.init(),39,72
net.sf.jabref.external.SynchronizeFileField.run(),152,736
net.sf.jabref.external.SynchronizeFileField.update(),23,32
"net.sf.jabref.external.SynchronizeFileField.OptionsDialog.OptionsDialog(JFrame,MetaData,String)",88,273
"net.sf.jabref.external.SynchronizeFileField.OptionsDialog.OptionsDialog(JFrame,MetaData,String).$1.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.external.SynchronizeFileField.OptionsDialog.OptionsDialog(JFrame,MetaData,String).$2.actionPerformed(ActionEvent)",4,5
net.sf.jabref.external.SynchronizeFileField.OptionsDialog.setVisible(boolean),21,57
net.sf.jabref.external.SynchronizeFileField.OptionsDialog.canceled(),1,2
"net.sf.jabref.FieldTextField.FieldTextField(String,String,boolean)",50,142
net.sf.jabref.FieldTextField.append(String),4,7
net.sf.jabref.FieldTextField.getFieldName(),3,5
net.sf.jabref.FieldTextField.getLabel(),1,3
net.sf.jabref.FieldTextField.setLabelColor(Color),6,9
net.sf.jabref.FieldTextField.getPane(),2,2
net.sf.jabref.FieldTextField.getTextComponent(),2,3
net.sf.jabref.FieldTextField.updateFont(),6,7
net.sf.jabref.FieldTextField.paste(String),12,19
net.sf.jabref.FieldTextField.hasUndoInformation(),2,4
net.sf.jabref.FieldTextField.undo(),2,7
net.sf.jabref.FieldTextField.hasRedoInformation(),3,4
net.sf.jabref.FieldTextField.redo(),3,7
net.sf.jabref.FieldTextField.addUndoableEditListener(UndoableEditListener),5,14
net.sf.jabref.FieldTextField.setAutoCompleteListener(AutoCompleteListener),4,12
net.sf.jabref.FieldTextField.clearAutoCompleteSuggestion(),5,11
"net.sf.jabref.plugin.SidePanePlugin.init(JabRefFrame,SidePaneManager)",6,8
net.sf.jabref.plugin.SidePanePlugin.getSidePaneComponent(),2,4
net.sf.jabref.plugin.SidePanePlugin.getMenuItem(),2,4
net.sf.jabref.plugin.SidePanePlugin.getShortcutKey(),3,3
"net.sf.jabref.bst.BibtexCaseChanger.BibtexCaseChanger(String,char,Warn)",6,11
"net.sf.jabref.bst.BibtexCaseChanger.changeCase(String,char,Warn)",6,11
net.sf.jabref.bst.BibtexCaseChanger.changeCase(),16,45
"net.sf.jabref.bst.BibtexCaseChanger.decrBraceLevel(String,int)",5,15
net.sf.jabref.bst.BibtexCaseChanger.complain(String),7,8
"net.sf.jabref.bst.BibtexCaseChanger.checkBrace(String,int)",5,8
"net.sf.jabref.bst.BibtexCaseChanger.convertSpecialChar(StringBuffer,char[],int,char)",33,64
"net.sf.jabref.bst.BibtexCaseChanger.convertAccented(char[],int,String,StringBuffer,char)",24,56
"net.sf.jabref.bst.BibtexCaseChanger.convertNonControl(char[],int,StringBuffer,char)",13,22
"net.sf.jabref.bst.BibtexCaseChanger.convertChar0(char[],int,StringBuffer,char)",14,30
"net.sf.jabref.bst.BibtexCaseChanger.findSpecialChar(char[],int)",5,43
tests.net.sf.jabref.export.layout.format.AuthorAndsCommaReplacerTest.testFormat(),30,70
"net.sf.jabref.imports.FieldContentParser.format(StringBuffer,String)",96,247
net.sf.jabref.imports.FieldContentParser.format(StringBuffer),13,25
"net.sf.jabref.imports.FieldContentParser.wrap(String,int)",28,69
"net.sf.jabref.imports.FieldContentParser.addWrappedLine(StringBuffer,String,int)",19,41
net.sf.jabref.SimpleSearchRule.SimpleSearchRule(boolean),4,7
"net.sf.jabref.SimpleSearchRule.applyRule(Map<String,String>,BibtexEntry)",28,89
net.sf.jabref.IconStringRenderer.IconStringRenderer(String),5,10
"net.sf.jabref.IconStringRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",17,57
"net.sf.jabref.search.SearchExpression.SearchExpression(JabRefPreferences,Hashtable<String,String>)",33,65
"net.sf.jabref.search.SearchExpression.applyRule(Map<String,String>,BibtexEntry)",14,20
net.sf.jabref.gui.components.JPanelXBoxLeftJustify.JPanelXBoxLeftJustify(),6,7
net.sf.jabref.gui.components.JPanelXBoxLeftJustify.JPanelXBoxLeftJustify(Component),6,6
net.sf.jabref.gui.components.JPanelXBoxLeftJustify.add(Component),5,8
net.sf.jabref.external.ScienceDirectPdfDownload.ScienceDirectPdfDownload(),4,4
net.sf.jabref.external.ScienceDirectPdfDownload.supportsSite(URL),9,11
net.sf.jabref.external.ScienceDirectPdfDownload.findFullTextURL(URL),18,62
"net.sf.jabref.imports.OpenDatabaseAction.OpenDatabaseAction(JabRefFrame,boolean)",17,30
net.sf.jabref.imports.OpenDatabaseAction.actionPerformed(ActionEvent),58,161
net.sf.jabref.imports.OpenDatabaseAction.actionPerformed(ActionEvent).$1.run(),4,5
"net.sf.jabref.imports.OpenDatabaseAction.OpenItSwingHelper.OpenItSwingHelper(BasePanel,File,boolean)",6,14
net.sf.jabref.imports.OpenDatabaseAction.OpenItSwingHelper.run(),7,7
"net.sf.jabref.imports.OpenDatabaseAction.openIt(File,boolean)",97,355
"net.sf.jabref.imports.OpenDatabaseAction.openIt(File,boolean).$2.run()",6,6
"net.sf.jabref.imports.OpenDatabaseAction.performPostOpenActions(BasePanel,ParserResult,boolean)",25,55
"net.sf.jabref.imports.OpenDatabaseAction.addNewDatabase(ParserResult,File,boolean)",36,67
"net.sf.jabref.imports.OpenDatabaseAction.addNewDatabase(ParserResult,File,boolean).$3.run()",38,58
"net.sf.jabref.imports.OpenDatabaseAction.loadDatabase(File,String)",52,172
net.sf.jabref.imports.OpenDatabaseAction.checkForEncoding(Reader),38,127
net.sf.jabref.util.CaseChanger.getModeName(int),8,16
net.sf.jabref.util.CaseChanger.getModeNames(),6,9
net.sf.jabref.util.CaseChanger.getNumModes(),4,7
"net.sf.jabref.util.CaseChanger.changeCase(String[],int)",11,28
"net.sf.jabref.util.CaseChanger.changeCase(String,int)",10,23
"net.sf.jabref.util.CaseChanger.changeCase(String,int,boolean)",20,60
net.sf.jabref.label.LabelRule.applyRule(BibtexEntry),8,10
net.sf.jabref.AppearancePrefsTab.AppearancePrefsTab(JabRefPreferences),74,298
net.sf.jabref.AppearancePrefsTab.AppearancePrefsTab(JabRefPreferences).$1.actionPerformed(ActionEvent),10,11
net.sf.jabref.AppearancePrefsTab.AppearancePrefsTab(JabRefPreferences).$2.actionPerformed(ActionEvent),13,19
net.sf.jabref.AppearancePrefsTab.setValues(),20,74
net.sf.jabref.AppearancePrefsTab.storeSettings(),45,100
net.sf.jabref.AppearancePrefsTab.readyToClose(),24,38
net.sf.jabref.AppearancePrefsTab.getTabName(),6,6
"net.sf.jabref.collab.EntryDeleteChange.EntryDeleteChange(BibtexEntry,BibtexEntry)",33,75
"net.sf.jabref.collab.EntryDeleteChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",16,34
net.sf.jabref.collab.EntryDeleteChange.description(),2,2
tests.net.sf.jabref.export.layout.format.AuthorLastFirstTest.testFormat(),17,66
tests.net.sf.jabref.export.layout.RTFCharsTest.testBasicFormat(),16,39
tests.net.sf.jabref.export.layout.RTFCharsTest.testLaTeXHighlighting(),12,43
tests.net.sf.jabref.export.layout.RTFCharsTest.testComplicated(),13,21
tests.net.sf.jabref.export.layout.RTFCharsTest.testSpecialCharacters(),13,111
tests.net.sf.jabref.export.layout.format.AllTests.suite(),34,181
net.sf.jabref.export.OpenDocumentSpreadsheetCreator.OpenDocumentSpreadsheetCreator(),9,14
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.performExport(BibtexDatabase,MetaData,String,String,Set<String>)",14,26
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.storeOpenDocumentSpreadsheetFile(File,InputStream)",44,129
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.exportOpenDocumentSpreadsheet(File,BibtexDatabase,Set<String>)",25,62
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.exportOpenDocumentSpreadsheetXML(File,BibtexDatabase,Set<String>)",32,68
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.addResourceFile(String,String,ZipOutputStream)",11,26
"net.sf.jabref.export.OpenDocumentSpreadsheetCreator.addFromResource(String,OutputStream)",18,32
"net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.ZipFileChooserTableModel(ZipFile,ZipEntry[])",7,18
net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getColumnCount(),9,13
net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getRowCount(),9,12
net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getColumnName(int),10,15
net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getZipEntry(int),7,22
net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getZipFile(),5,13
"net.sf.jabref.imports.ZipFileChooser.ZipFileChooserTableModel.getValueAt(int,int)",19,46
net.sf.jabref.imports.ZipFileChooser.getSize(),6,8
net.sf.jabref.imports.ZipFileChooser.getSelectableZipEntries(ZipFile),16,49
"net.sf.jabref.imports.ZipFileChooser.ZipFileChooser(ImportCustomizationDialog,ZipFile)",74,227
"net.sf.jabref.imports.ZipFileChooser.ZipFileChooser(ImportCustomizationDialog,ZipFile).$1.actionPerformed(ActionEvent)",4,5
"net.sf.jabref.imports.ZipFileChooser.ZipFileChooser(ImportCustomizationDialog,ZipFile).$2.actionPerformed(ActionEvent)",45,117
net.sf.jabref.sql.DbImportAction.DbImportAction(JabRefFrame),4,7
net.sf.jabref.sql.DbImportAction.getAction(),2,4
net.sf.jabref.sql.DbImportAction.DbImpAction.DbImpAction(),10,10
net.sf.jabref.sql.DbImportAction.DbImpAction.actionPerformed(ActionEvent),10,14
net.sf.jabref.sql.DbImportAction.init(),24,59
net.sf.jabref.sql.DbImportAction.run(),24,39
net.sf.jabref.sql.DbImportAction.update(),42,84
net.sf.jabref.labelPattern.DefaultLabelPatterns.DefaultLabelPatterns(),24,75
net.sf.jabref.about.AboutPanel.AboutPanel(),43,111
net.sf.jabref.about.AboutPanel.addAnimationListener(AnimationListener),4,9
"net.sf.jabref.about.AboutPanel.getMiddleX(String,Font)",8,16
net.sf.jabref.about.AboutPanel.loadFont(String),17,32
net.sf.jabref.about.AboutPanel.loadAboutText(),45,174
net.sf.jabref.about.AboutPanel.paintComponent(Graphics),32,95
"net.sf.jabref.about.AboutPanel.drawLine(AboutTextLine,Graphics)",11,32
net.sf.jabref.about.AboutPanel.getPreferredSize(),5,6
net.sf.jabref.about.AboutPanel.removeNotify(),4,6
net.sf.jabref.about.AboutPanel.skipAnimation(),7,10
net.sf.jabref.about.AboutPanel.AnimationThread.AnimationThread(),6,10
net.sf.jabref.about.AboutPanel.AnimationThread.kill(),2,2
net.sf.jabref.about.AboutPanel.AnimationThread.setEnabled(boolean),4,4
net.sf.jabref.about.AboutPanel.AnimationThread.setMode(int),2,5
net.sf.jabref.about.AboutPanel.AnimationThread.run(),32,74
net.sf.jabref.about.AboutPanel.AnimationThread.performStep(AboutTextLine),23,88
"net.sf.jabref.groups.EntryTableTransferHandler.EntryTableTransferHandler(MainTable,JabRefFrame,BasePanel)",42,87
net.sf.jabref.groups.EntryTableTransferHandler.getSourceActions(JComponent),12,13
net.sf.jabref.groups.EntryTableTransferHandler.createTransferable(JComponent),16,34
"net.sf.jabref.groups.EntryTableTransferHandler.importData(JComponent,Transferable)",63,173
"net.sf.jabref.groups.EntryTableTransferHandler.canImport(JComponent,DataFlavor[])",34,57
"net.sf.jabref.groups.EntryTableTransferHandler.exportAsDrag(JComponent,InputEvent,int)",28,60
"net.sf.jabref.groups.EntryTableTransferHandler.exportDone(JComponent,Transferable,int)",7,11
"net.sf.jabref.groups.EntryTableTransferHandler.exportToClipboard(JComponent,Clipboard,int)",7,13
"net.sf.jabref.groups.EntryTableTransferHandler.handleDropTransfer(String,int)",50,97
net.sf.jabref.groups.EntryTableTransferHandler.getFilesFromDraggedFilesString(String),48,113
"net.sf.jabref.groups.EntryTableTransferHandler.handleDraggedFilenames(String,int)",7,15
"net.sf.jabref.groups.EntryTableTransferHandler.handleDraggedFiles(List<File>,int)",34,69
"net.sf.jabref.groups.EntryTableTransferHandler.handleDraggedFiles(List<File>,int).$1.run()",7,7
"net.sf.jabref.groups.EntryTableTransferHandler.loadOrImportFiles(String[],int)",101,312
"net.sf.jabref.groups.EntryTableTransferHandler.handleDropTransfer(URL,int)",31,60
net.sf.jabref.autocompleter.DefaultAutoCompleter.DefaultAutoCompleter(String),6,12
net.sf.jabref.autocompleter.DefaultAutoCompleter.isSingleUnitField(),3,3
net.sf.jabref.autocompleter.DefaultAutoCompleter.complete(String),2,4
net.sf.jabref.autocompleter.DefaultAutoCompleter.addBibtexEntry(BibtexEntry),13,34
"net.sf.jabref.EntrySorter.EntrySorter(Map<String,BibtexEntry>,Comparator<BibtexEntry>)",19,45
net.sf.jabref.EntrySorter.index(),43,78
net.sf.jabref.EntrySorter.isOutdated(),1,2
net.sf.jabref.EntrySorter.getIdAt(int),6,10
net.sf.jabref.EntrySorter.getEntryAt(int),5,8
net.sf.jabref.EntrySorter.getEntryCount(),5,8
net.sf.jabref.EntrySorter.databaseChanged(DatabaseChangeEvent),20,78
tests.net.sf.jabref.export.layout.format.AuthorFirstAbbrLastCommasTest.testFormat(),19,59
net.sf.jabref.imports.JSTORFetcher2.getHelpPage(),5,5
net.sf.jabref.imports.JSTORFetcher2.getIcon(),5,7
net.sf.jabref.imports.JSTORFetcher2.getKeyName(),5,5
net.sf.jabref.imports.JSTORFetcher2.getOptionsPanel(),2,5
net.sf.jabref.imports.JSTORFetcher2.getTitle(),6,7
net.sf.jabref.imports.JSTORFetcher2.stopFetching(),4,6
"net.sf.jabref.imports.JSTORFetcher2.processQuery(String,ImportInspector,OutputPrinter)",39,90
net.sf.jabref.imports.JSTORFetcher2.getCitations(String),24,59
"net.sf.jabref.imports.JSTORFetcher2.getCitationsFromUrl(String,List<String>)",21,58
net.sf.jabref.imports.JSTORFetcher2.getSingleCitation(String),9,13
"net.sf.jabref.bst.BibtexTextPrefix.textPrefix(int,String,Warn)",18,64
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor)",67,309
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$1.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$2.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$3.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$4.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$5.actionPerformed(ActionEvent)",6,7
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$6.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$7.actionPerformed(ActionEvent)",13,24
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$8.actionPerformed(ActionEvent)",5,8
"net.sf.jabref.gui.FileListEditor.FileListEditor(JabRefFrame,MetaData,String,String,EntryEditor).$9.actionPerformed(ActionEvent)",5,8
net.sf.jabref.gui.FileListEditor.openSelectedFile(),21,43
net.sf.jabref.gui.FileListEditor.getTableModel(),4,8
net.sf.jabref.gui.FileListEditor.getFieldName(),3,5
net.sf.jabref.gui.FileListEditor.getPane(),7,10
net.sf.jabref.gui.FileListEditor.getTextComponent(),3,6
net.sf.jabref.gui.FileListEditor.getLabel(),1,3
net.sf.jabref.gui.FileListEditor.setLabelColor(Color),4,7
net.sf.jabref.gui.FileListEditor.getText(),5,6
net.sf.jabref.gui.FileListEditor.setText(String),6,9
net.sf.jabref.gui.FileListEditor.append(String),3,3
net.sf.jabref.gui.FileListEditor.updateFont(),2,2
net.sf.jabref.gui.FileListEditor.paste(String),4,4
net.sf.jabref.gui.FileListEditor.getSelectedText(),3,3
net.sf.jabref.gui.FileListEditor.addEntry(String),15,33
net.sf.jabref.gui.FileListEditor.addEntry(),2,4
net.sf.jabref.gui.FileListEditor.removeEntries(),11,17
net.sf.jabref.gui.FileListEditor.moveEntry(int),21,58
"net.sf.jabref.gui.FileListEditor.editListEntry(FileListEntry,boolean)",24,55
net.sf.jabref.gui.FileListEditor.autoSetLinks(),16,27
net.sf.jabref.gui.FileListEditor.autoSetLinks().$10.actionPerformed(ActionEvent),22,34
"net.sf.jabref.gui.FileListEditor.autoSetLinks(Collection<BibtexEntry>,NamedCompound,Set<BibtexEntry>,ArrayList<File>)",44,93
"net.sf.jabref.gui.FileListEditor.autoSetLinks(Collection<BibtexEntry>,NamedCompound,Set<BibtexEntry>,ArrayList<File>).$11.run()",65,253
"net.sf.jabref.gui.FileListEditor.autoSetLinks(BibtexEntry,FileListTableModel,MetaData,ActionListener,JDialog)",89,198
"net.sf.jabref.gui.FileListEditor.autoSetLinks(BibtexEntry,FileListTableModel,MetaData,ActionListener,JDialog).$12.run()",62,214
"net.sf.jabref.gui.FileListEditor.autoSetLinks(BibtexEntry,FileListTableModel,MetaData,ActionListener,JDialog).$12.run().$1.run()",7,10
"net.sf.jabref.gui.FileListEditor.relativizePath(File,ArrayList<File>)",18,46
net.sf.jabref.gui.FileListEditor.downloadFile(),36,82
net.sf.jabref.gui.FileListEditor.downloadComplete(FileListEntry),26,41
net.sf.jabref.gui.FileListEditor.TableClickListener.mouseClicked(MouseEvent),16,30
net.sf.jabref.gui.FileListEditor.TableClickListener.mousePressed(MouseEvent),6,9
net.sf.jabref.gui.FileListEditor.TableClickListener.mouseReleased(MouseEvent),6,9
net.sf.jabref.gui.FileListEditor.TableClickListener.processPopupTrigger(MouseEvent),13,18
net.sf.jabref.gui.FileListEditor.FileListEditorTransferHandler.FileListEditorTransferHandler(),25,35
net.sf.jabref.gui.FileListEditor.FileListEditorTransferHandler.getSourceActions(JComponent),12,13
"net.sf.jabref.gui.FileListEditor.FileListEditorTransferHandler.importData(JComponent,Transferable)",61,164
"net.sf.jabref.gui.FileListEditor.FileListEditorTransferHandler.importData(JComponent,Transferable).$1.run()",28,61
"net.sf.jabref.gui.FileListEditor.FileListEditorTransferHandler.canImport(JComponent,DataFlavor[])",29,50
net.sf.jabref.gui.FileListEditor.hasUndoInformation(),2,2
net.sf.jabref.gui.FileListEditor.undo(),1,1
net.sf.jabref.gui.FileListEditor.hasRedoInformation(),2,2
net.sf.jabref.gui.FileListEditor.redo(),1,1
net.sf.jabref.gui.FileListEditor.addUndoableEditListener(UndoableEditListener),4,8
net.sf.jabref.gui.FileListEditor.setAutoCompleteListener(AutoCompleteListener),4,8
net.sf.jabref.gui.FileListEditor.clearAutoCompleteSuggestion(),3,3
net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviator.format(String),16,26
"net.sf.jabref.undo.UndoableRemoveString.UndoableRemoveString(BasePanel,BibtexDatabase,BibtexString)",7,18
net.sf.jabref.undo.UndoableRemoveString.getUndoPresentationName(),7,11
net.sf.jabref.undo.UndoableRemoveString.getRedoPresentationName(),7,11
net.sf.jabref.undo.UndoableRemoveString.undo(),15,18
net.sf.jabref.undo.UndoableRemoveString.redo(),8,12
net.sf.jabref.imports.CopacImporter.getFormatName(),4,6
net.sf.jabref.imports.CopacImporter.getCLIId(),8,9
net.sf.jabref.imports.CopacImporter.isRecognizedFormat(InputStream),19,29
net.sf.jabref.imports.CopacImporter.importEntries(InputStream),53,209
"net.sf.jabref.imports.CopacImporter.setOrAppend(BibtexEntry,String,String,String)",9,23
osxadapter.OSXAdapter.OSXAdapter(JabRefFrame),7,9
osxadapter.OSXAdapter.handleAbout(ApplicationEvent),20,26
osxadapter.OSXAdapter.handlePreferences(ApplicationEvent),13,19
osxadapter.OSXAdapter.handleQuit(ApplicationEvent),31,45
osxadapter.OSXAdapter.registerMacOSXApplication(JabRefFrame),24,35
osxadapter.OSXAdapter.enablePrefs(boolean),14,24
net.sf.jabref.imports.PdfXmpImporter.getFormatName(),8,8
net.sf.jabref.imports.PdfXmpImporter.importEntries(InputStream),13,17
net.sf.jabref.imports.PdfXmpImporter.isRecognizedFormat(InputStream),15,17
net.sf.jabref.imports.PdfXmpImporter.getCLIid(),8,10
"net.sf.jabref.collab.ChangeDisplayDialog.ChangeDisplayDialog(JFrame,BasePanel,BibtexDatabase,DefaultMutableTreeNode)",45,140
"net.sf.jabref.collab.ChangeDisplayDialog.ChangeDisplayDialog(JFrame,BasePanel,BibtexDatabase,DefaultMutableTreeNode).$1.stateChanged(ChangeEvent)",6,8
"net.sf.jabref.collab.ChangeDisplayDialog.ChangeDisplayDialog(JFrame,BasePanel,BibtexDatabase,DefaultMutableTreeNode).$2.actionPerformed(ActionEvent)",4,5
"net.sf.jabref.collab.ChangeDisplayDialog.ChangeDisplayDialog(JFrame,BasePanel,BibtexDatabase,DefaultMutableTreeNode).$3.actionPerformed(ActionEvent)",44,62
net.sf.jabref.collab.ChangeDisplayDialog.isOkPressed(),1,2
net.sf.jabref.collab.ChangeDisplayDialog.setInfo(JComponent),13,28
net.sf.jabref.collab.ChangeDisplayDialog.valueChanged(TreeSelectionEvent),18,38
net.sf.jabref.util.MassSetFieldAction.MassSetFieldAction(JabRefFrame),11,15
net.sf.jabref.util.MassSetFieldAction.createDialog(),64,281
net.sf.jabref.util.MassSetFieldAction.createDialog().$1.stateChanged(ChangeEvent),11,13
net.sf.jabref.util.MassSetFieldAction.createDialog().$2.stateChanged(ChangeEvent),12,14
net.sf.jabref.util.MassSetFieldAction.createDialog().$3.stateChanged(ChangeEvent),11,12
net.sf.jabref.util.MassSetFieldAction.createDialog().$4.actionPerformed(ActionEvent),27,39
net.sf.jabref.util.MassSetFieldAction.createDialog().$5.actionPerformed(ActionEvent),6,7
net.sf.jabref.util.MassSetFieldAction.prepareDialog(boolean),9,24
net.sf.jabref.util.MassSetFieldAction.actionPerformed(ActionEvent),51,121
net.sf.jabref.util.MassSetFieldAction.getFieldNames(String),4,5
net.sf.jabref.imports.ImportFormat.ImportFormat(),5,6
net.sf.jabref.imports.ImportFormat.isRecognizedFormat(InputStream),9,10
net.sf.jabref.imports.ImportFormat.importEntries(InputStream),10,14
net.sf.jabref.imports.ImportFormat.getFormatName(),5,12
net.sf.jabref.imports.ImportFormat.getExtensions(),8,11
net.sf.jabref.imports.ImportFormat.getCLIId(),16,28
net.sf.jabref.imports.ImportFormat.getDescription(),21,28
net.sf.jabref.imports.ImportFormat.setIsCustomImporter(boolean),11,27
net.sf.jabref.imports.ImportFormat.getIsCustomImporter(),6,16
net.sf.jabref.imports.ImportFormat.hashCode(),8,12
net.sf.jabref.imports.ImportFormat.equals(Object),9,22
net.sf.jabref.imports.ImportFormat.toString(),7,9
net.sf.jabref.imports.ImportFormat.compareTo(ImportFormat),11,28
tests.net.sf.jabref.export.layout.format.AuthorFirstAbbrLastOxfordCommasTest.testFormat(),28,76
net.sf.jabref.imports.ImportFormats.createImportFileChooser(String),22,77
"net.sf.jabref.imports.ImportFormats.getImportAction(JabRefFrame,boolean)",14,34
"net.sf.jabref.imports.ImportFormats.getImportAction(JabRefFrame,boolean).ImportAction.ImportAction(JabRefFrame,boolean)",12,24
"net.sf.jabref.imports.ImportFormats.getImportAction(JabRefFrame,boolean).ImportAction.actionPerformed(ActionEvent)",40,89
"net.sf.jabref.imports.AppendDatabaseAction.AppendDatabaseAction(JabRefFrame,BasePanel)",8,14
net.sf.jabref.imports.AppendDatabaseAction.action(),34,65
net.sf.jabref.imports.AppendDatabaseAction.action().$1.run(),5,5
"net.sf.jabref.imports.AppendDatabaseAction.openIt(boolean,boolean,boolean,boolean)",36,62
"net.sf.jabref.imports.AppendDatabaseAction.mergeFromBibtex(JabRefFrame,BasePanel,ParserResult,boolean,boolean,boolean,boolean)",82,254
net.sf.jabref.plugin.core.JabRefPlugin.doStart(),5,5
net.sf.jabref.plugin.core.JabRefPlugin.doStop(),5,5
net.sf.jabref.plugin.core.JabRefPlugin.getInstance(PluginManager),9,21
"net.sf.jabref.search.SearchExpressionTreeParser.apply(AST,BibtexEntry)",13,28
net.sf.jabref.search.SearchExpressionTreeParser.SearchExpressionTreeParser(),6,8
net.sf.jabref.search.SearchExpressionTreeParser.tSearchExpression(AST),23,121
net.sf.jabref.search.SearchExpressionTreeParser.tExpressionSearch(AST),47,146
net.sf.jabref.search.SearchExpressionTreeParser.tSearchType(AST),24,88
net.sf.jabref.FontSelector.FontSelector(),6,9
net.sf.jabref.FontSelector.FontSelector(Font),11,18
net.sf.jabref.FontSelector.setFont(Font),4,9
net.sf.jabref.FontSelector.updateText(),15,51
net.sf.jabref.FontSelector.ActionHandler.actionPerformed(ActionEvent),9,19
"net.sf.jabref.FontSelectorDialog.FontSelectorDialog(Component,Font)",80,355
"net.sf.jabref.FontSelectorDialog.FontSelectorDialog(Component,Font).$1.paint(Graphics)",10,16
net.sf.jabref.FontSelectorDialog.ok(),1,1
net.sf.jabref.FontSelectorDialog.cancel(),2,2
net.sf.jabref.FontSelectorDialog.getSelectedFont(),12,21
net.sf.jabref.FontSelectorDialog.getFontList(),29,79
"net.sf.jabref.FontSelectorDialog.createTextFieldAndListPanel(String,JTextField,JList)",29,121
net.sf.jabref.FontSelectorDialog.updatePreview(),16,28
net.sf.jabref.FontSelectorDialog.ActionHandler.actionPerformed(ActionEvent),6,11
net.sf.jabref.FontSelectorDialog.ListHandler.valueChanged(ListSelectionEvent),18,60
net.sf.jabref.export.layout.LayoutHelper.LayoutHelper(Reader),6,7
net.sf.jabref.export.layout.LayoutHelper.getLayoutFromText(String),14,28
net.sf.jabref.export.layout.LayoutHelper.getCurrentGroup(),2,3
net.sf.jabref.export.layout.LayoutHelper.setCurrentGroup(String),3,4
net.sf.jabref.export.layout.LayoutHelper.getBracketedField(int),17,66
net.sf.jabref.export.layout.LayoutHelper.getBracketedOptionField(int),38,146
net.sf.jabref.export.layout.LayoutHelper.parse(),31,61
net.sf.jabref.export.layout.LayoutHelper.parseField(),35,121
net.sf.jabref.export.layout.LayoutHelper.peek(),4,4
net.sf.jabref.export.layout.LayoutHelper.read(),5,6
net.sf.jabref.export.layout.LayoutHelper.skipWhitespace(),7,8
net.sf.jabref.export.layout.LayoutHelper.unread(int),3,4
net.sf.jabref.imports.OvidImporter.getFormatName(),4,6
net.sf.jabref.imports.OvidImporter.getCLIId(),8,9
net.sf.jabref.imports.OvidImporter.isRecognizedFormat(InputStream),19,29
net.sf.jabref.imports.OvidImporter.importEntries(InputStream),105,372
net.sf.jabref.imports.OvidImporter.fixNames(String),19,52
"net.sf.jabref.imports.CiteSeerUndoHandler.overwriteDialog(String,String,String)",37,106
"net.sf.jabref.imports.CiteSeerUndoHandler.overwriteDialog(String,String,String).$1.propertyChange(PropertyChangeEvent)",18,27
"net.sf.jabref.imports.CiteSeerUndoHandler.CiteSeerUndoHandler(NamedCompound,BibtexEntry,BasePanel,BooleanAssign,BooleanAssign,BooleanAssign)",20,42
"net.sf.jabref.imports.CiteSeerUndoHandler.CiteSeerUndoHandler(NamedCompound,BibtexEntry,BasePanel,BooleanAssign)",12,21
"net.sf.jabref.imports.CiteSeerUndoHandler.characters(char[],int,int)",24,138
"net.sf.jabref.imports.CiteSeerUndoHandler.makeOverwriteChoice(String,String,String)",13,46
"net.sf.jabref.imports.CiteSeerUndoHandler.startElement(String,String,String,Attributes)",28,68
net.sf.jabref.imports.CiteSeerUndoHandler.endDocument(),21,75
net.sf.jabref.imports.CiteSeerUndoHandler.addAuthor(String),5,12
net.sf.jabref.gui.EntryTypeList.EntryTypeList(List<String>),29,54
net.sf.jabref.gui.EntryTypeList.addField(String),35,50
net.sf.jabref.gui.EntryTypeList.removeSelected(),31,80
net.sf.jabref.gui.EntryTypeList.valueChanged(ListSelectionEvent),6,7
"net.sf.jabref.gui.EntryTypeList.enable(String,boolean)",16,42
net.sf.jabref.gui.EntryTypeList.addDefaultActionListener(ActionListener),4,9
net.sf.jabref.gui.EntryTypeList.actionPerformed(ActionEvent),9,13
net.sf.jabref.gui.EntryTypeList.setEnabled(boolean),3,7
net.sf.jabref.wizard.integrity.IntegrityMessage.setPrintMode(int),3,7
"net.sf.jabref.wizard.integrity.IntegrityMessage.IntegrityMessage(int,BibtexEntry,String,Object)",13,27
net.sf.jabref.wizard.integrity.IntegrityMessage.getMessage(),9,14
net.sf.jabref.wizard.integrity.IntegrityMessage.toString(),7,11
net.sf.jabref.wizard.integrity.IntegrityMessage.getType(),1,2
net.sf.jabref.wizard.integrity.IntegrityMessage.getEntry(),2,4
net.sf.jabref.wizard.integrity.IntegrityMessage.getFieldName(),3,5
net.sf.jabref.wizard.integrity.IntegrityMessage.getAdditionalInfo(),3,5
net.sf.jabref.wizard.integrity.IntegrityMessage.getFixed(),1,2
net.sf.jabref.wizard.integrity.IntegrityMessage.setFixed(boolean),2,5
tests.net.sf.jabref.BibtexDatabaseTest.testResolveStrings(),27,61
net.sf.jabref.journals.JournalAbbreviations.JournalAbbreviations(),2,2
net.sf.jabref.journals.JournalAbbreviations.JournalAbbreviations(String),6,8
net.sf.jabref.journals.JournalAbbreviations.JournalAbbreviations(File),7,11
net.sf.jabref.journals.JournalAbbreviations.fullNameIterator(),10,15
net.sf.jabref.journals.JournalAbbreviations.isKnownName(String),7,16
net.sf.jabref.journals.JournalAbbreviations.isAbbreviatedName(String),8,15
net.sf.jabref.journals.JournalAbbreviations.dotsToNodots(String),6,9
"net.sf.jabref.journals.JournalAbbreviations.getAbbreviatedName(String,boolean)",19,65
net.sf.jabref.journals.JournalAbbreviations.getFullName(String),21,39
net.sf.jabref.journals.JournalAbbreviations.readJournalList(String),17,33
net.sf.jabref.journals.JournalAbbreviations.readJournalList(File),7,14
net.sf.jabref.journals.JournalAbbreviations.readJournalList(Reader),33,128
"net.sf.jabref.journals.JournalAbbreviations.abbreviate(BibtexEntry,String,CompoundEdit,boolean)",23,101
"net.sf.jabref.journals.JournalAbbreviations.unabbreviate(BibtexEntry,String,CompoundEdit)",20,66
net.sf.jabref.journals.JournalAbbreviations.getJournals(),5,7
"net.sf.jabref.journals.JournalAbbreviations.getNameSwitcher(EntryEditor,FieldEditor,UndoManager)",29,56
"net.sf.jabref.journals.JournalAbbreviations.getNameSwitcher(EntryEditor,FieldEditor,UndoManager).$1.actionPerformed(ActionEvent)",24,72
net.sf.jabref.journals.JournalAbbreviations.getTableModel(),14,43
"net.sf.jabref.journals.JournalAbbreviations.getTableModel().$2.isCellEditable(int,int)",4,4
net.sf.jabref.plugin.core.generated._JabRefPlugin.getId(),4,4
net.sf.jabref.plugin.core.generated._JabRefPlugin.getExportFormatTemplateExtensions(),23,60
"net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.ExportFormatTemplateExtension(Plugin,Extension)",7,12
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getDisplayName(),4,7
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getConsoleName(),4,7
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getLayoutFilename(),4,7
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getDirAsUrl(),4,6
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getDirAsUrl(String),7,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getExtension(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatTemplateExtension.getEncoding(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getExportFormatExtensions(),22,54
"net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatExtension.ExportFormatExtension(Plugin,Extension)",6,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatExtension.getExportFormat(),5,15
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatExtension.getDisplayName(),4,7
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatExtension.getConsoleName(),4,7
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatExtension.getExtension(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getSidePanePluginExtensions(),21,54
"net.sf.jabref.plugin.core.generated._JabRefPlugin.SidePanePluginExtension.SidePanePluginExtension(Plugin,Extension)",5,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.SidePanePluginExtension.getSidePanePlugin(),5,15
net.sf.jabref.plugin.core.generated._JabRefPlugin.SidePanePluginExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.SidePanePluginExtension.getDescription(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getEntryFetcherExtensions(),22,54
"net.sf.jabref.plugin.core.generated._JabRefPlugin.EntryFetcherExtension.EntryFetcherExtension(Plugin,Extension)",6,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.EntryFetcherExtension.getEntryFetcher(),6,15
net.sf.jabref.plugin.core.generated._JabRefPlugin.EntryFetcherExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.EntryFetcherExtension.getDescription(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getExportFormatProviderExtensions(),23,60
"net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatProviderExtension.ExportFormatProviderExtension(Plugin,Extension)",7,12
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatProviderExtension.getFormatProvider(),6,17
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatProviderExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.ExportFormatProviderExtension.getDescription(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getPushToApplicationExtensions(),22,54
"net.sf.jabref.plugin.core.generated._JabRefPlugin.PushToApplicationExtension.PushToApplicationExtension(Plugin,Extension)",6,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.PushToApplicationExtension.getPushToApp(),7,15
net.sf.jabref.plugin.core.generated._JabRefPlugin.PushToApplicationExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.PushToApplicationExtension.getDescription(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getLayoutFormatterExtensions(),22,54
"net.sf.jabref.plugin.core.generated._JabRefPlugin.LayoutFormatterExtension.LayoutFormatterExtension(Plugin,Extension)",6,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.LayoutFormatterExtension.getLayoutFormatter(),6,17
net.sf.jabref.plugin.core.generated._JabRefPlugin.LayoutFormatterExtension.getDescription(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.LayoutFormatterExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.getImportFormatExtensions(),21,48
"net.sf.jabref.plugin.core.generated._JabRefPlugin.ImportFormatExtension.ImportFormatExtension(Plugin,Extension)",5,10
net.sf.jabref.plugin.core.generated._JabRefPlugin.ImportFormatExtension.getImportFormat(),5,11
net.sf.jabref.plugin.core.generated._JabRefPlugin.ImportFormatExtension.getName(),3,5
net.sf.jabref.plugin.core.generated._JabRefPlugin.ImportFormatExtension.getDescription(),3,5
"net.sf.jabref.export.layout.LayoutEntry.LayoutEntry(StringInt,String)",27,70
"net.sf.jabref.export.layout.LayoutEntry.LayoutEntry(Vector<StringInt>,String,int)",33,189
net.sf.jabref.export.layout.LayoutEntry.setPostFormatter(LayoutFormatter),4,9
"net.sf.jabref.export.layout.LayoutEntry.doLayout(BibtexEntry,BibtexDatabase)",59,268
"net.sf.jabref.export.layout.LayoutEntry.doLayout(BibtexDatabase,String)",35,122
net.sf.jabref.export.layout.LayoutEntry.getLayoutFormatterFromPlugins(String),24,86
"net.sf.jabref.export.layout.LayoutEntry.getLayoutFormatterByClassName(String,String)",18,44
"net.sf.jabref.export.layout.LayoutEntry.getOptionalLayout(String,String)",45,193
net.sf.jabref.export.layout.LayoutEntry.isInvalidFormatter(),2,4
net.sf.jabref.export.layout.LayoutEntry.getInvalidFormatters(),6,7
"net.sf.jabref.search.BasicSearch.BasicSearch(boolean,boolean)",5,11
"net.sf.jabref.search.BasicSearch.applyRule(String,BibtexEntry)",8,24
"net.sf.jabref.search.BasicSearch.applyRule(Map<String,String>,BibtexEntry)",41,144
net.sf.jabref.search.BasicSearch.parseQuery(String),28,71
"net.sf.jabref.external.PushToLyx.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",35,68
"net.sf.jabref.external.PushToLyx.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData).$1.run()",18,31
net.sf.jabref.external.PushToLyx.getName(),8,8
net.sf.jabref.external.PushToLyx.getApplicationName(),4,4
net.sf.jabref.external.PushToLyx.getTooltip(),7,7
net.sf.jabref.external.PushToLyx.getIcon(),5,6
net.sf.jabref.external.PushToLyx.getKeyStrokeName(),5,5
net.sf.jabref.external.PushToLyx.operationCompleted(BasePanel),22,43
net.sf.jabref.external.PushToLyx.requiresBibtexKeys(),3,3
net.sf.jabref.external.PushToLyx.getSettingsPanel(),10,15
net.sf.jabref.external.PushToLyx.storeSettings(),8,8
net.sf.jabref.external.PushToLyx.initSettingsPanel(),10,16
"net.sf.jabref.gui.AttachFileDialog.AttachFileDialog(Frame,MetaData,BibtexEntry,String)",16,38
"net.sf.jabref.gui.AttachFileDialog.AttachFileDialog(Dialog,MetaData,BibtexEntry,String)",15,38
net.sf.jabref.gui.AttachFileDialog.cancelled(),1,2
net.sf.jabref.gui.AttachFileDialog.getValue(),4,4
net.sf.jabref.gui.AttachFileDialog.initGui(),56,184
net.sf.jabref.gui.AttachFileDialog.initGui().$1.actionPerformed(ActionEvent),10,12
net.sf.jabref.gui.AttachFileDialog.initGui().$2.actionPerformed(ActionEvent),11,13
net.sf.jabref.gui.AttachFileDialog.initGui().$3.actionPerformed(ActionEvent),11,13
net.sf.jabref.gui.AttachFileDialog.initGui().$4.actionPerformed(ActionEvent),5,7
net.sf.jabref.gui.AttachFileDialog.initGui().$5.actionPerformed(ActionEvent),5,7
"net.sf.jabref.external.ExternalFileMenuItem.ExternalFileMenuItem(JabRefFrame,BibtexEntry,String,String,Icon,MetaData,ExternalFileType)",19,45
"net.sf.jabref.external.ExternalFileMenuItem.ExternalFileMenuItem(JabRefFrame,BibtexEntry,String,String,Icon,MetaData,String)",17,38
net.sf.jabref.external.ExternalFileMenuItem.actionPerformed(ActionEvent),10,13
net.sf.jabref.external.ExternalFileMenuItem.openLink(),51,161
"net.sf.jabref.wizard.auximport.gui.FromAuxDialog.FromAuxDialog(JabRefFrame,String,boolean,JTabbedPane)",21,31
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.jbInit(JabRefFrame),57,216
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.jbInit(JabRefFrame).$1.actionPerformed(ActionEvent),4,5
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.initOptionsPanel(JabRefFrame),58,203
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.initStatusPanel(),48,182
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.getDescriptionPanel(),33,81
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.ok_actionPerformed(ActionEvent),5,6
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.Cancel_actionPerformed(ActionEvent),5,6
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.generate_actionPerformed(ActionEvent),50,164
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.okPressed(),1,2
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.getGenerateDB(),6,7
"net.sf.jabref.wizard.auximport.gui.FromAuxDialog.BrowseAction.BrowseAction(JTextField,JabRefFrame)",10,14
net.sf.jabref.wizard.auximport.gui.FromAuxDialog.BrowseAction.actionPerformed(ActionEvent),15,28
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_ok_actionAdapter.FromAuxDialog_ok_actionAdapter(FromAuxDialog),5,9
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_ok_actionAdapter.actionPerformed(ActionEvent),4,7
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_Cancel_actionAdapter.FromAuxDialog_Cancel_actionAdapter(FromAuxDialog),6,10
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_Cancel_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_generate_actionAdapter.FromAuxDialog_generate_actionAdapter(FromAuxDialog),6,10
net.sf.jabref.wizard.auximport.gui.FromAuxDialog_generate_actionAdapter.actionPerformed(ActionEvent),5,8
net.sf.jabref.export.layout.LayoutFormatter.format(String),22,29
tests.net.sf.jabref.imports.AllTests.suite(),16,49
"net.sf.jabref.imports.CiteSeerEntryFetcher.processQuery(String,ImportInspector,OutputPrinter)",72,174
net.sf.jabref.imports.CiteSeerEntryFetcher.getHelpPage(),7,8
net.sf.jabref.imports.CiteSeerEntryFetcher.getIcon(),5,7
net.sf.jabref.imports.CiteSeerEntryFetcher.getKeyName(),6,6
net.sf.jabref.imports.CiteSeerEntryFetcher.getOptionsPanel(),2,4
net.sf.jabref.imports.CiteSeerEntryFetcher.getTitle(),7,8
net.sf.jabref.imports.CiteSeerEntryFetcher.stopFetching(),2,3
tests.net.sf.jabref.export.layout.format.AuthorAndsReplacerTest.testFormat(),30,84
net.sf.jabref.external.ExternalFileTypeEditor.ExternalFileTypeEditor(JFrame),10,16
net.sf.jabref.external.ExternalFileTypeEditor.ExternalFileTypeEditor(JDialog),10,16
net.sf.jabref.external.ExternalFileTypeEditor.setValues(),19,30
net.sf.jabref.external.ExternalFileTypeEditor.storeSettings(),11,16
net.sf.jabref.external.ExternalFileTypeEditor.init(),66,261
net.sf.jabref.external.ExternalFileTypeEditor.init().$1.actionPerformed(ActionEvent),6,7
net.sf.jabref.external.ExternalFileTypeEditor.init().$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.external.ExternalFileTypeEditor.init().$3.actionPerformed(ActionEvent),37,75
net.sf.jabref.external.ExternalFileTypeEditor.getEditor(ExternalFileType),6,31
net.sf.jabref.external.ExternalFileTypeEditor.getAction(JabRefFrame),13,25
net.sf.jabref.external.ExternalFileTypeEditor.getAction(JDialog),10,23
net.sf.jabref.external.ExternalFileTypeEditor.AddListener.actionPerformed(ActionEvent),20,40
net.sf.jabref.external.ExternalFileTypeEditor.RemoveListener.actionPerformed(ActionEvent),21,39
net.sf.jabref.external.ExternalFileTypeEditor.EditListener.actionPerformed(ActionEvent),18,25
"net.sf.jabref.external.ExternalFileTypeEditor.IconRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",15,23
net.sf.jabref.external.ExternalFileTypeEditor.FileTypeTableModel.getColumnCount(),2,2
net.sf.jabref.external.ExternalFileTypeEditor.FileTypeTableModel.getRowCount(),5,5
net.sf.jabref.external.ExternalFileTypeEditor.FileTypeTableModel.getColumnName(int),9,18
net.sf.jabref.external.ExternalFileTypeEditor.FileTypeTableModel.getColumnClass(int),5,8
"net.sf.jabref.external.ExternalFileTypeEditor.FileTypeTableModel.getValueAt(int,int)",13,26
net.sf.jabref.external.ExternalFileTypeEditor.TableClickListener.handleClick(MouseEvent),9,10
net.sf.jabref.external.ExternalFileTypeEditor.TableClickListener.mouseClicked(MouseEvent),5,6
net.sf.jabref.external.ExternalFileTypeEditor.TableClickListener.mousePressed(MouseEvent),5,6
net.sf.jabref.external.ExternalFileTypeEditor.TableClickListener.mouseReleased(MouseEvent),5,6
net.sf.jabref.external.ExternalFileTypeEditor.EditExternalFileTypesAction.EditExternalFileTypesAction(JabRefFrame),11,17
net.sf.jabref.external.ExternalFileTypeEditor.EditExternalFileTypesAction.EditExternalFileTypesAction(JDialog),9,15
net.sf.jabref.external.ExternalFileTypeEditor.EditExternalFileTypesAction.actionPerformed(ActionEvent),17,34
net.sf.jabref.imports.InspecImporter.getFormatName(),4,6
net.sf.jabref.imports.InspecImporter.getCLIId(),8,9
net.sf.jabref.imports.InspecImporter.isRecognizedFormat(InputStream),31,52
net.sf.jabref.imports.InspecImporter.importEntries(InputStream),61,186
"net.sf.jabref.gui.IsMarkedComparator.compare(BibtexEntry,BibtexEntry)",5,11
net.sf.jabref.external.PushToVim.getName(),8,8
net.sf.jabref.external.PushToVim.getApplicationName(),4,4
net.sf.jabref.external.PushToVim.getTooltip(),7,7
net.sf.jabref.external.PushToVim.getIcon(),5,6
net.sf.jabref.external.PushToVim.getKeyStrokeName(),4,4
net.sf.jabref.external.PushToVim.getSettingsPanel(),12,32
net.sf.jabref.external.PushToVim.storeSettings(),10,23
net.sf.jabref.external.PushToVim.initSettingsPanel(),26,78
"net.sf.jabref.external.PushToVim.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",37,60
"net.sf.jabref.external.PushToVim.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData).$1.run()",19,26
net.sf.jabref.external.PushToVim.operationCompleted(BasePanel),25,58
net.sf.jabref.external.PushToVim.requiresBibtexKeys(),3,3
net.sf.jabref.wizard.text.gui.HintListModel.setData(Vector<IntegrityMessage>),7,14
net.sf.jabref.wizard.text.gui.HintListModel.valueUpdated(int),6,8
net.sf.jabref.external.FullTextFinder.supportsSite(URL),11,19
net.sf.jabref.external.FullTextFinder.findFullTextURL(URL),3,6
net.sf.jabref.imports.BiomailImporter.getFormatName(),4,6
net.sf.jabref.imports.BiomailImporter.getCLIId(),8,9
net.sf.jabref.imports.BiomailImporter.isRecognizedFormat(InputStream),24,39
net.sf.jabref.imports.BiomailImporter.importEntries(InputStream),81,282
net.sf.jabref.imports.SilverPlatterImporter.getFormatName(),5,7
net.sf.jabref.imports.SilverPlatterImporter.getCLIId(),8,9
net.sf.jabref.imports.SilverPlatterImporter.isRecognizedFormat(InputStream),37,60
net.sf.jabref.imports.SilverPlatterImporter.importEntries(InputStream),80,293
tests.net.sf.jabref.AllTests.suite(),25,123
net.sf.jabref.external.UnknownExternalFileType.UnknownExternalFileType(String),6,8
gnu.dtools.ritopt.Option.getObject(),1,2
gnu.dtools.ritopt.Option.getStringValue(),2,3
gnu.dtools.ritopt.Option.Option(),2,2
gnu.dtools.ritopt.Option.Option(Option),3,15
gnu.dtools.ritopt.Option.Option(String),3,7
gnu.dtools.ritopt.Option.Option(char),2,6
"gnu.dtools.ritopt.Option.Option(String,char)",3,9
gnu.dtools.ritopt.Option.setKey(String),4,6
gnu.dtools.ritopt.Option.setKey(char),3,5
gnu.dtools.ritopt.Option.setShortOption(char),3,6
gnu.dtools.ritopt.Option.setLongOption(String),4,7
gnu.dtools.ritopt.Option.setDescription(String),3,6
gnu.dtools.ritopt.Option.setDeprecated(boolean),2,5
gnu.dtools.ritopt.Option.setHelpOptionSpecificationSize(int),5,11
gnu.dtools.ritopt.Option.setHelpTypenameSize(int),4,9
gnu.dtools.ritopt.Option.setHelpDescriptionSize(int),4,9
gnu.dtools.ritopt.Option.setHelpDeprecatedSize(int),4,9
gnu.dtools.ritopt.Option.setMenuOptionSpecificationSize(int),5,11
gnu.dtools.ritopt.Option.setMenuTypenameSize(int),4,9
gnu.dtools.ritopt.Option.setMenuDescriptionSize(int),4,9
gnu.dtools.ritopt.Option.setMenuDeprecatedSize(int),4,9
gnu.dtools.ritopt.Option.setFileCompleteOptionSize(int),5,11
gnu.dtools.ritopt.Option.setFileCommentSize(int),4,9
gnu.dtools.ritopt.Option.setInvoked(boolean),2,3
gnu.dtools.ritopt.Option.deprecate(),3,3
gnu.dtools.ritopt.Option.getName(),3,3
gnu.dtools.ritopt.Option.getShortOption(),1,2
gnu.dtools.ritopt.Option.getLongOption(),2,3
gnu.dtools.ritopt.Option.getHelp(),8,12
gnu.dtools.ritopt.Option.getHelpOptionSpecification(),7,17
gnu.dtools.ritopt.Option.getHelpTypeName(),8,12
gnu.dtools.ritopt.Option.getHelpDescription(),6,10
gnu.dtools.ritopt.Option.getHelpDeprecated(),6,10
gnu.dtools.ritopt.Option.getHelpHeader(),12,26
gnu.dtools.ritopt.Option.getDescription(),2,3
gnu.dtools.ritopt.Option.getHashKey(),4,8
gnu.dtools.ritopt.Option.getHashKey(String),4,7
gnu.dtools.ritopt.Option.getHashKey(char),4,5
"gnu.dtools.ritopt.Option.getHashKey(String,char)",4,10
gnu.dtools.ritopt.Option.isDeprecated(),1,2
gnu.dtools.ritopt.Option.isInvoked(),1,2
gnu.dtools.ritopt.Option.getOptionFileLine(),23,99
gnu.dtools.ritopt.Option.getHelpOptionSpecificationSize(),4,8
gnu.dtools.ritopt.Option.getHelpTypenameSize(),3,6
gnu.dtools.ritopt.Option.getHelpDescriptionSize(),3,6
gnu.dtools.ritopt.Option.getHelpDeprecatedSize(),3,6
gnu.dtools.ritopt.Option.getMenuOptionSpecificationSize(),4,8
gnu.dtools.ritopt.Option.getMenuTypenameSize(),3,6
gnu.dtools.ritopt.Option.getMenuDescriptionSize(),3,6
gnu.dtools.ritopt.Option.getMenuDeprecatedSize(),3,6
gnu.dtools.ritopt.Option.getFileCompleteOptionSize(),4,8
gnu.dtools.ritopt.Option.getFileCommentSize(),3,6
gnu.dtools.ritopt.Option.getTypeName(),3,3
gnu.dtools.ritopt.Option.action(),8,22
tests.net.sf.jabref.util.CaseChangerTest.testNumberOfModes(),13,48
tests.net.sf.jabref.util.CaseChangerTest.testChangeCaseStringArrayInt(),13,29
tests.net.sf.jabref.util.CaseChangerTest.testChangeCaseStringInt(),7,45
tests.net.sf.jabref.util.CaseChangerTest.testPreserveBrackets(),3,3
"net.sf.jabref.groups.KeywordGroup.KeywordGroup(String,String,String,boolean,boolean,int)",19,43
net.sf.jabref.groups.KeywordGroup.compilePattern(),10,20
"net.sf.jabref.groups.KeywordGroup.fromString(String,BibtexDatabase,int)",43,159
net.sf.jabref.groups.KeywordGroup.getSearchRule(),4,8
net.sf.jabref.groups.KeywordGroup.toString(),16,34
net.sf.jabref.groups.KeywordGroup.supportsAdd(),4,4
net.sf.jabref.groups.KeywordGroup.supportsRemove(),4,4
net.sf.jabref.groups.KeywordGroup.add(BibtexEntry[]),29,65
net.sf.jabref.groups.KeywordGroup.remove(BibtexEntry[]),25,52
net.sf.jabref.groups.KeywordGroup.equals(Object),12,28
"net.sf.jabref.groups.KeywordGroup.contains(Map<String,String>,BibtexEntry)",12,22
net.sf.jabref.groups.KeywordGroup.contains(BibtexEntry),15,29
"net.sf.jabref.groups.KeywordGroup.containsWord(String,String)",20,61
net.sf.jabref.groups.KeywordGroup.removeMatches(BibtexEntry),32,100
"net.sf.jabref.groups.KeywordGroup.applyRule(Map<String,String>,BibtexEntry)",9,14
net.sf.jabref.groups.KeywordGroup.deepCopy(),30,34
net.sf.jabref.groups.KeywordGroup.isCaseSensitive(),1,2
net.sf.jabref.groups.KeywordGroup.isRegExp(),2,4
net.sf.jabref.groups.KeywordGroup.getSearchExpression(),3,5
net.sf.jabref.groups.KeywordGroup.getSearchField(),3,5
net.sf.jabref.groups.KeywordGroup.isDynamic(),1,1
net.sf.jabref.groups.KeywordGroup.getDescription(),9,11
"net.sf.jabref.groups.KeywordGroup.getDescriptionForPreview(String,String,boolean,boolean)",37,98
net.sf.jabref.groups.KeywordGroup.getShortDescription(),24,55
net.sf.jabref.groups.KeywordGroup.getTypeId(),2,2
net.sf.jabref.export.layout.format.RisMonth.format(String),16,32
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbrOxfordCommasTest.testFormat(),28,76
"net.sf.jabref.search.RegExNode.RegExNode(int,String,boolean,boolean)",13,23
net.sf.jabref.search.RegExNode.getPattern(),1,3
"net.sf.jabref.TablePrefsTab.TablePrefsTab(JabRefPreferences,JabRefFrame)",119,653
"net.sf.jabref.TablePrefsTab.TablePrefsTab(JabRefPreferences,JabRefFrame).$1.actionPerformed(ActionEvent)",12,22
"net.sf.jabref.TablePrefsTab.TablePrefsTab(JabRefPreferences,JabRefFrame).$2.actionPerformed(ActionEvent)",12,22
"net.sf.jabref.TablePrefsTab.TablePrefsTab(JabRefPreferences,JabRefFrame).$3.actionPerformed(ActionEvent)",12,22
"net.sf.jabref.TablePrefsTab.TablePrefsTab(JabRefPreferences,JabRefFrame).$4.stateChanged(ChangeEvent)",9,25
net.sf.jabref.TablePrefsTab.setValues(),34,185
net.sf.jabref.TablePrefsTab.storeSettings(),48,174
net.sf.jabref.TablePrefsTab.readyToClose(),2,2
net.sf.jabref.TablePrefsTab.getTabName(),7,7
"net.sf.jabref.groups.UndoableResetGroups.UndoableResetGroups(GroupSelector,GroupTreeNode)",10,16
net.sf.jabref.groups.UndoableResetGroups.getUndoPresentationName(),6,9
net.sf.jabref.groups.UndoableResetGroups.getRedoPresentationName(),6,9
net.sf.jabref.groups.UndoableResetGroups.undo(),17,31
net.sf.jabref.groups.UndoableResetGroups.redo(),9,13
net.sf.jabref.groups.UndoableResetGroups.setRevalidate(boolean),9,12
net.sf.jabref.collab.StringAddChange.StringAddChange(BibtexString),15,49
"net.sf.jabref.collab.StringAddChange.makeChange(BasePanel,BibtexDatabase,NamedCompound)",30,81
net.sf.jabref.collab.StringAddChange.description(),2,2
net.sf.jabref.plugin.PluginInstallerAction.PluginInstallerAction(JabRefFrame),17,22
net.sf.jabref.plugin.PluginInstallerAction.actionPerformed(ActionEvent),10,17
net.sf.jabref.groups.AbstractGroup.getTypeId(),2,2
"net.sf.jabref.groups.AbstractGroup.AbstractGroup(String,int)",5,9
net.sf.jabref.groups.AbstractGroup.getSearchRule(),4,8
"net.sf.jabref.groups.AbstractGroup.fromString(String,BibtexDatabase,int)",26,45
net.sf.jabref.groups.AbstractGroup.getName(),6,8
net.sf.jabref.groups.AbstractGroup.setName(String),4,8
net.sf.jabref.groups.AbstractGroup.supportsAdd(),6,7
net.sf.jabref.groups.AbstractGroup.supportsRemove(),6,7
net.sf.jabref.groups.AbstractGroup.add(BibtexEntry[]),17,20
net.sf.jabref.groups.AbstractGroup.remove(BibtexEntry[]),17,20
"net.sf.jabref.groups.AbstractGroup.contains(Map<String,String>,BibtexEntry)",11,19
net.sf.jabref.groups.AbstractGroup.contains(BibtexEntry),5,8
net.sf.jabref.groups.AbstractGroup.containsAny(BibtexEntry[]),7,12
net.sf.jabref.groups.AbstractGroup.containsAll(BibtexEntry[]),7,12
net.sf.jabref.groups.AbstractGroup.isDynamic(),13,16
net.sf.jabref.groups.AbstractGroup.setHierarchicalContext(int),12,21
net.sf.jabref.groups.AbstractGroup.getHierarchicalContext(),3,6
net.sf.jabref.groups.AbstractGroup.getDescription(),10,11
net.sf.jabref.groups.AbstractGroup.deepCopy(),3,5
net.sf.jabref.groups.AbstractGroup.getShortDescription(),5,6
net.sf.jabref.groups.AbstractGroup.refreshForNewDatabase(BibtexDatabase),19,26
"wsi.ra.types.StringInt.StringInt(String,int)",6,12
net.sf.jabref.plugin.ManagePluginsDialog.ManagePluginsDialog(JabRefFrame),76,272
net.sf.jabref.plugin.ManagePluginsDialog.ManagePluginsDialog(JabRefFrame).$1.actionPerformed(ActionEvent),6,7
net.sf.jabref.plugin.ManagePluginsDialog.ManagePluginsDialog(JabRefFrame).$2.actionPerformed(ActionEvent),6,7
net.sf.jabref.plugin.ManagePluginsDialog.ManagePluginsDialog(JabRefFrame).$3.actionPerformed(ActionEvent),6,7
net.sf.jabref.plugin.ManagePluginsDialog.ManagePluginsDialog(JabRefFrame).$4.actionPerformed(ActionEvent),6,7
net.sf.jabref.plugin.ManagePluginsDialog.removeSelected(),35,112
net.sf.jabref.plugin.ManagePluginsDialog.buildList(),27,139
net.sf.jabref.plugin.ManagePluginsDialog.setVisible(boolean),3,7
net.sf.jabref.plugin.ManagePluginsDialog.installPlugin(),23,41
net.sf.jabref.plugin.ManagePluginsDialog.downloadPlugin(),19,38
net.sf.jabref.plugin.ManagePluginsDialog.installFromURL(URL),26,59
net.sf.jabref.plugin.ManagePluginsDialog.installFromFile(File),7,12
net.sf.jabref.plugin.ManagePluginsDialog.PluginTableFormat.getColumnCount(),2,2
net.sf.jabref.plugin.ManagePluginsDialog.PluginTableFormat.getColumnName(int),9,16
"net.sf.jabref.plugin.ManagePluginsDialog.PluginTableFormat.getColumnValue(NameAndVersion,int)",18,38
net.sf.jabref.imports.ImportFileFilter.ImportFileFilter(ImportFormat),4,10
net.sf.jabref.imports.ImportFileFilter.getImportFormat(),1,3
net.sf.jabref.imports.ImportFileFilter.accept(File),6,9
net.sf.jabref.imports.ImportFileFilter.getDescription(),3,3
net.sf.jabref.imports.ImportFileFilter.compareTo(ImportFileFilter),4,6
net.sf.jabref.imports.MsBibImporter.isRecognizedFormat(InputStream),48,87
net.sf.jabref.imports.MsBibImporter.getCLIid(),3,3
net.sf.jabref.imports.MsBibImporter.importEntries(InputStream),10,19
net.sf.jabref.imports.MsBibImporter.getFormatName(),5,7
net.sf.jabref.export.layout.format.RisAuthors.format(String),14,28
net.sf.jabref.export.layout.format.RisAuthors.setArgument(String),4,6
net.sf.jabref.export.layout.format.CreateDocBookEditors.format(String),13,28
net.sf.jabref.util.XMPUtil.readXMP(String),16,28
"net.sf.jabref.util.XMPUtil.writeXMP(String,BibtexEntry,BibtexDatabase)",38,81
net.sf.jabref.util.XMPUtil.readXMP(File),20,39
net.sf.jabref.util.XMPUtil.readXMP(InputStream),34,137
net.sf.jabref.util.XMPUtil.getBibtexEntryFromDocumentInformation(PDDocumentInformation),30,89
net.sf.jabref.util.XMPUtil.getBibtexEntryFromDublinCore(XMPSchemaDublinCore),59,232
"net.sf.jabref.util.XMPUtil.writeXMP(File,BibtexEntry,BibtexDatabase)",40,87
"net.sf.jabref.util.XMPUtil.toXMP(Collection<BibtexEntry>,BibtexDatabase,OutputStream)",34,108
"net.sf.jabref.util.XMPUtil.toXMP(Collection<BibtexEntry>,BibtexDatabase)",31,82
net.sf.jabref.util.XMPUtil.readRawXMP(InputStream),23,60
net.sf.jabref.util.XMPUtil.getXMPMetadata(PDDocument),19,45
net.sf.jabref.util.XMPUtil.readRawXMP(File),16,41
"net.sf.jabref.util.XMPUtil.writeToDCSchema(XMPSchemaDublinCore,BibtexEntry,BibtexDatabase)",114,443
"net.sf.jabref.util.XMPUtil.writeDublinCore(PDDocument,BibtexEntry,BibtexDatabase)",29,72
"net.sf.jabref.util.XMPUtil.writeDublinCore(PDDocument,Collection<BibtexEntry>,BibtexDatabase)",43,135
"net.sf.jabref.util.XMPUtil.writeDocumentInformation(PDDocument,BibtexEntry,BibtexDatabase)",40,133
"net.sf.jabref.util.XMPUtil.writeXMP(File,Collection<BibtexEntry>,BibtexDatabase,boolean)",62,208
net.sf.jabref.util.XMPUtil.usage(),30,86
net.sf.jabref.util.XMPUtil.main(String[]),69,276
net.sf.jabref.util.XMPUtil.hasMetadata(InputStream),22,34
net.sf.jabref.groups.GroupDialog.$1.getPreferredSize(),10,16
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup)",110,721
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$2.getPreferredSize()",4,5
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$3.itemStateChanged(ItemEvent)",8,9
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$4.actionPerformed(ActionEvent)",4,5
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$5.actionPerformed(ActionEvent)",40,104
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$6.caretUpdate(CaretEvent)",4,6
"net.sf.jabref.groups.GroupDialog.GroupDialog(JabRefFrame,BasePanel,AbstractGroup).$7.itemStateChanged(ItemEvent)",5,6
net.sf.jabref.groups.GroupDialog.okPressed(),1,2
net.sf.jabref.groups.GroupDialog.getResultingGroup(),1,2
net.sf.jabref.groups.GroupDialog.setLayoutForSelectedGroup(),16,39
net.sf.jabref.groups.GroupDialog.updateComponents(),47,179
net.sf.jabref.groups.GroupDialog.addPreviousEntries(),50,100
net.sf.jabref.groups.GroupDialog.setDescription(String),5,10
"net.sf.jabref.groups.GroupDialog.formatRegExException(String,Exception)",26,50
net.sf.jabref.groups.GroupDialog.getUndoForAddPreviousEntries(),12,17
net.sf.jabref.groups.GroupDialog.setNameFontItalic(boolean),9,25
net.sf.jabref.groups.GroupDialog.getContext(),11,19
net.sf.jabref.groups.GroupDialog.setContext(int),9,19
net.sf.jabref.about.ExtendedInfoPanel.ExtendedInfoPanel(ActionListener),76,233
net.sf.jabref.about.ExtendedInfoPanel.animationReady(),12,14
net.sf.jabref.about.ExtendedInfoPanel.actionPerformed(ActionEvent),19,35
net.sf.jabref.groups.GroupTreeNode.GroupTreeNode(AbstractGroup),6,7
net.sf.jabref.groups.GroupTreeNode.getGroup(),4,4
net.sf.jabref.groups.GroupTreeNode.setGroup(AbstractGroup),6,7
net.sf.jabref.groups.GroupTreeNode.getTreeAsString(),23,45
net.sf.jabref.groups.GroupTreeNode.deepCopy(),11,28
net.sf.jabref.groups.GroupTreeNode.refreshGroupsForNewDatabase(BibtexDatabase),18,35
net.sf.jabref.groups.GroupTreeNode.getIndexedPath(),13,39
net.sf.jabref.groups.GroupTreeNode.getNode(int[]),13,31
net.sf.jabref.groups.GroupTreeNode.getDescendant(int[]),23,52
net.sf.jabref.groups.GroupTreeNode.getSearchRule(),18,33
net.sf.jabref.groups.GroupTreeNode.getSearchRule(int),16,66
net.sf.jabref.groups.GroupTreeNode.preorderEnumeration(),4,7
net.sf.jabref.groups.GroupTreeNode.depthFirstEnumeration(),4,7
net.sf.jabref.groups.GroupTreeNode.breadthFirstEnumeration(),4,7
net.sf.jabref.groups.GroupTreeNode.children(),4,5
net.sf.jabref.groups.GroupTreeNode.getMatchingGroups(BibtexEntry),20,34
net.sf.jabref.groups.GroupTreeNode.canMoveUp(),4,4
net.sf.jabref.groups.GroupTreeNode.canMoveDown(),3,3
net.sf.jabref.groups.GroupTreeNode.canMoveLeft(),6,7
net.sf.jabref.groups.GroupTreeNode.canMoveRight(),4,4
net.sf.jabref.groups.GroupTreeNode.moveUp(GroupSelector),11,30
net.sf.jabref.groups.GroupTreeNode.moveDown(GroupSelector),13,33
net.sf.jabref.groups.GroupTreeNode.moveLeft(GroupSelector),14,45
net.sf.jabref.groups.GroupTreeNode.moveRight(GroupSelector),14,35
net.sf.jabref.groups.GroupTreeNode.getChildAt(int[]),14,33
net.sf.jabref.groups.GroupTreeNode.addToGroup(BibtexEntry[]),16,28
net.sf.jabref.groups.GroupTreeNode.removeFromGroup(BibtexEntry[]),16,28
net.sf.jabref.groups.GroupTreeNode.getTransferDataFlavors(),4,6
net.sf.jabref.groups.GroupTreeNode.isDataFlavorSupported(DataFlavor),6,11
net.sf.jabref.groups.GroupTreeNode.getTransferData(DataFlavor),7,18
net.sf.jabref.groups.GroupTreeNode.equals(Object),10,26
net.sf.jabref.groups.GroupTreeNode.hashCode(),3,5
net.sf.jabref.Worker.run(),1,1
net.sf.jabref.mods.PageNumbers.PageNumbers(String),4,5
net.sf.jabref.mods.PageNumbers.parsePageNums(String),11,16
net.sf.jabref.mods.PageNumbers.getDOMrepresentation(Document),16,50
net.sf.jabref.mods.PageNumbers.toString(String),4,8
net.sf.jabref.mods.PageNumbers.toString(),1,3
"net.sf.jabref.undo.UndoableKeyChange.UndoableKeyChange(BibtexDatabase,String,String,String)",9,20
net.sf.jabref.undo.UndoableKeyChange.getUndoPresentationName(),8,11
net.sf.jabref.undo.UndoableKeyChange.getRedoPresentationName(),8,11
net.sf.jabref.undo.UndoableKeyChange.undo(),5,6
net.sf.jabref.undo.UndoableKeyChange.redo(),4,6
net.sf.jabref.undo.UndoableKeyChange.set(String),6,8
net.sf.jabref.export.layout.format.FormatPagesForHTML.format(String),4,6
net.sf.jabref.export.IExportFormatProvider.getExportFormats(),4,8
tests.net.sf.jabref.export.layout.HTMLCharsTest.testBasicFormat(),19,55
tests.net.sf.jabref.export.layout.HTMLCharsTest.testLaTeXHighlighting(),12,43
net.sf.jabref.export.layout.format.HTMLChars.format(String),84,298
"net.sf.jabref.export.layout.format.HTMLChars.getPart(String,int,boolean)",22,42
"net.sf.jabref.export.layout.format.HTMLChars.IntAndString.IntAndString(int,String)",1,2
"tests.net.sf.jabref.bst.BibtexWidthTest.assertBibtexWidth(int,String)",5,10
"tests.net.sf.jabref.bst.BibtexWidthTest.assertBibtexWidth(int,String).$1.warn(String)",4,6
tests.net.sf.jabref.bst.BibtexWidthTest.testWidth(),17,34
tests.net.sf.jabref.bst.BibtexWidthTest.testGetCharWidth(),4,22
"net.sf.jabref.external.DownloadExternalFile.DownloadExternalFile(JabRefFrame,MetaData,String)",11,24
net.sf.jabref.external.DownloadExternalFile.download(DownloadCallback),28,60
"net.sf.jabref.external.DownloadExternalFile.download(URL,DownloadCallback)",113,370
"net.sf.jabref.external.DownloadExternalFile.download(URL,DownloadCallback).$1.run()",33,48
"net.sf.jabref.external.DownloadExternalFile.download(URL,DownloadCallback).$1.run().$1.run()",3,3
"net.sf.jabref.external.DownloadExternalFile.download(URL,DownloadCallback).$2.confirmClose(FileListEntry)",23,58
"net.sf.jabref.external.DownloadExternalFile.expandFilename(String,String)",20,52
net.sf.jabref.external.DownloadExternalFile.downloadFinished(),14,32
net.sf.jabref.external.DownloadExternalFile.getSuggestedFileName(String),28,47
net.sf.jabref.external.DownloadExternalFile.getSuffix(String),50,135
net.sf.jabref.external.DownloadExternalFile.getFileDirectory(String),9,13
net.sf.jabref.external.DownloadExternalFile.DownloadCallback.downloadComplete(FileListEntry),5,6
"net.sf.jabref.imports.ImportMenuItem.ImportMenuItem(JabRefFrame,boolean)",5,7
"net.sf.jabref.imports.ImportMenuItem.ImportMenuItem(JabRefFrame,boolean,ImportFormat)",14,23
net.sf.jabref.imports.ImportMenuItem.actionPerformed(ActionEvent),8,14
net.sf.jabref.imports.ImportMenuItem.automatedImport(String),17,28
net.sf.jabref.imports.ImportMenuItem.MyWorker.init(),17,29
net.sf.jabref.imports.ImportMenuItem.MyWorker.run(),53,131
net.sf.jabref.imports.ImportMenuItem.MyWorker.update(),100,296
"net.sf.jabref.imports.ImportMenuItem.mergeImportResults(List<Pair<String,ParserResult>>)",56,168
net.sf.jabref.export.layout.format.WrapContent.setArgument(String),6,9
net.sf.jabref.export.layout.format.WrapContent.format(String),7,15
net.sf.jabref.autocompleter.CrossrefAutoCompleter.CrossrefAutoCompleter(String),7,13
net.sf.jabref.autocompleter.CrossrefAutoCompleter.isSingleUnitField(),3,3
net.sf.jabref.autocompleter.CrossrefAutoCompleter.complete(String),2,4
net.sf.jabref.autocompleter.CrossrefAutoCompleter.addBibtexEntry(BibtexEntry),9,19
"net.sf.jabref.undo.UndoableFieldChange.UndoableFieldChange(BibtexEntry,String,String,String)",7,20
net.sf.jabref.undo.UndoableFieldChange.getUndoPresentationName(),6,7
net.sf.jabref.undo.UndoableFieldChange.getRedoPresentationName(),6,7
net.sf.jabref.undo.UndoableFieldChange.undo(),10,16
net.sf.jabref.undo.UndoableFieldChange.redo(),9,16
net.sf.jabref.util.TXMLReader.TXMLReader(String),32,72
net.sf.jabref.util.TXMLReader.isReady(),1,2
net.sf.jabref.util.TXMLReader.getNodes(String),8,10
"net.sf.jabref.util.TXMLReader.getFirstElement(Element,String)",12,22
"net.sf.jabref.util.TXMLReader.getSimpleElementText(Element,String)",11,25
net.sf.jabref.util.TXMLReader.getSimpleElementText(Element),19,35
"net.sf.jabref.util.TXMLReader.readIntegerAttribute(Element,String,int)",14,26
"net.sf.jabref.util.TXMLReader.readStringAttribute(Element,String,String)",10,23
"net.sf.jabref.util.TXMLReader.readDoubleAttribute(Element,String,double)",11,21
net.sf.jabref.search.SearchExpressionLexer.SearchExpressionLexer(InputStream),6,6
net.sf.jabref.search.SearchExpressionLexer.SearchExpressionLexer(Reader),5,5
net.sf.jabref.search.SearchExpressionLexer.SearchExpressionLexer(InputBuffer),6,8
net.sf.jabref.search.SearchExpressionLexer.SearchExpressionLexer(LexerSharedInputState),15,43
net.sf.jabref.search.SearchExpressionLexer.nextToken(),32,107
net.sf.jabref.search.SearchExpressionLexer.mWS(boolean),21,50
net.sf.jabref.search.SearchExpressionLexer.mLPAREN(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mRPAREN(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mEQUAL(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mEEQUAL(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mNEQUAL(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mQUOTE(boolean),17,42
net.sf.jabref.search.SearchExpressionLexer.mSTRING(boolean),18,66
net.sf.jabref.search.SearchExpressionLexer.mLETTER(boolean),20,56
net.sf.jabref.search.SearchExpressionLexer.mFIELDTYPE(boolean),27,60
net.sf.jabref.search.SearchExpressionLexer.mk_tokenSet_0(),3,6
net.sf.jabref.search.SearchExpressionLexer.mk_tokenSet_1(),3,6
"net.sf.jabref.imports.ImportInspector.setProgress(int,int)",16,23
net.sf.jabref.imports.ImportInspector.addEntry(BibtexEntry),8,15
net.sf.jabref.imports.ImportInspector.toFront(),4,5
net.sf.jabref.external.FileLinksUpgradeWarning.isActionNecessary(ParserResult),26,44
"net.sf.jabref.external.FileLinksUpgradeWarning.performAction(BasePanel,ParserResult)",90,332
"net.sf.jabref.external.FileLinksUpgradeWarning.linksFound(BibtexDatabase,String[])",16,35
"net.sf.jabref.external.FileLinksUpgradeWarning.makeChanges(BasePanel,ParserResult,boolean,boolean,String)",61,138
net.sf.jabref.external.FileLinksUpgradeWarning.showsFileInGenFields(),17,43
tests.net.sf.jabref.bst.BibtexPurifyTest.testPurify(),21,41
"tests.net.sf.jabref.bst.BibtexPurifyTest.assertPurify(String,String)",5,12
"tests.net.sf.jabref.bst.BibtexPurifyTest.assertPurify(String,String).$1.warn(String)",4,7
tests.net.sf.jabref.export.layout.format.DOICheckTest.testFormat(),16,73
tests.net.sf.jabref.export.layout.format.RemoveTildeTest.testFormatString(),14,35
"net.sf.jabref.wizard.auximport.AuxCommandLine.AuxCommandLine(String,BibtexDatabase)",13,24
net.sf.jabref.wizard.auximport.AuxCommandLine.perform(),31,102
net.sf.jabref.external.RegExpFileSearch.main(String[]),30,58
"net.sf.jabref.external.RegExpFileSearch.findFilesForSet(Collection<BibtexEntry>,Collection<String>,List<File>,String)",32,86
"net.sf.jabref.external.RegExpFileSearch.findFiles(BibtexEntry,Collection<String>,Collection<File>,String)",30,71
"net.sf.jabref.external.RegExpFileSearch.findFile(BibtexEntry,BibtexDatabase,Collection<File>,String,String,boolean)",18,47
"net.sf.jabref.external.RegExpFileSearch.findFile(BibtexEntry,BibtexDatabase,String,String,String,boolean)",49,100
"net.sf.jabref.external.RegExpFileSearch.findFile(BibtexEntry,BibtexDatabase,File,String,String)",74,276
"net.sf.jabref.external.RegExpFileSearch.findFile(BibtexEntry,BibtexDatabase,File,String,String).$1.accept(File,String)",7,9
"tests.net.sf.jabref.TestUtils.getChildNamed(Component,String)",13,43
net.sf.jabref.gui.DatabasePropertiesDialog.DatabasePropertiesDialog(JFrame),14,25
net.sf.jabref.gui.DatabasePropertiesDialog.setPanel(BasePanel),5,12
net.sf.jabref.gui.DatabasePropertiesDialog.init(JFrame),64,252
net.sf.jabref.gui.DatabasePropertiesDialog.init(JFrame).$1.actionPerformed(ActionEvent),4,5
net.sf.jabref.gui.DatabasePropertiesDialog.init(JFrame).$2.actionPerformed(ActionEvent),6,7
net.sf.jabref.gui.DatabasePropertiesDialog.init(JFrame).$3.actionPerformed(ActionEvent),4,5
net.sf.jabref.gui.DatabasePropertiesDialog.setVisible(boolean),3,9
net.sf.jabref.gui.DatabasePropertiesDialog.setValues(),31,120
net.sf.jabref.gui.DatabasePropertiesDialog.storeSettings(),39,149
tests.net.sf.jabref.imports.RISImporterTest.setUp(),8,11
tests.net.sf.jabref.imports.RISImporterTest.tearDown(),2,3
tests.net.sf.jabref.imports.RISImporterTest.testIsRecognizedFormat(),8,21
tests.net.sf.jabref.imports.RISImporterTest.testProcessSubSup(),13,100
tests.net.sf.jabref.imports.RISImporterTest.testImportEntries(),29,78
net.sf.jabref.export.layout.format.RemoveWhitespace.format(String),11,21
net.sf.jabref.export.layout.format.AuthorNatBib.format(String),8,12
net.sf.jabref.export.layout.format.CurrentDate.format(String),16,34
net.sf.jabref.gui.FieldWeightDialog.main(String[]),8,8
net.sf.jabref.gui.FieldWeightDialog.FieldWeightDialog(JabRefFrame),22,39
net.sf.jabref.gui.FieldWeightDialog.buildMainPanel(),43,116
net.sf.jabref.gui.FieldWeightDialog.buildButtonPanel(),11,37
net.sf.jabref.gui.FieldWeightDialog.buildButtonPanel().$1.actionPerformed(ActionEvent),6,9
net.sf.jabref.gui.FieldWeightDialog.buildButtonPanel().$2.actionPerformed(ActionEvent),4,7
net.sf.jabref.gui.FieldWeightDialog.storeSettings(),25,45
"net.sf.jabref.gui.FieldWeightDialog.SliderInfo.SliderInfo(String,int)",7,15
net.sf.jabref.export.layout.format.CreateBibORDFAuthors.format(String),32,71
"net.sf.jabref.export.layout.format.CreateBibORDFAuthors.singleAuthor(StringBuffer,String,int)",23,51
tests.net.sf.jabref.export.layout.format.AuthorLastFirstCommasTest.testFormat(),26,81
net.sf.jabref.wizard.integrity.IntegrityCheck.IntegrityCheck(),5,6
net.sf.jabref.wizard.integrity.IntegrityCheck.checkBibtexDatabase(BibtexDatabase),11,24
net.sf.jabref.wizard.integrity.IntegrityCheck.checkBibtexEntry(BibtexEntry),8,18
net.sf.jabref.wizard.integrity.IntegrityCheck.checkSingleEntry(BibtexEntry),12,51
"net.sf.jabref.wizard.integrity.IntegrityCheck.authorNameCheck(String,String,BibtexEntry)",30,133
"net.sf.jabref.wizard.integrity.IntegrityCheck.titleCheck(String,String,BibtexEntry)",40,79
"net.sf.jabref.wizard.integrity.IntegrityCheck.yearCheck(String,String,BibtexEntry)",20,52
tests.net.sf.jabref.export.layout.format.NoSpaceBetweenAbbreviationsTest.setUp(),2,3
tests.net.sf.jabref.export.layout.format.NoSpaceBetweenAbbreviationsTest.tearDown(),2,3
tests.net.sf.jabref.export.layout.format.NoSpaceBetweenAbbreviationsTest.testFormat(),11,28
"net.sf.jabref.external.ExternalFileType.ExternalFileType(String,String,String,String,String)",13,36
net.sf.jabref.external.ExternalFileType.ExternalFileType(String[]),56,111
net.sf.jabref.external.ExternalFileType.getStringArrayRepresentation(),17,30
net.sf.jabref.external.ExternalFileType.getName(),2,3
net.sf.jabref.external.ExternalFileType.setName(String),7,12
net.sf.jabref.external.ExternalFileType.getExtension(),2,3
net.sf.jabref.external.ExternalFileType.setExtension(String),3,6
net.sf.jabref.external.ExternalFileType.getMimeType(),3,5
net.sf.jabref.external.ExternalFileType.setMimeType(String),4,10
net.sf.jabref.external.ExternalFileType.getFieldName(),11,19
net.sf.jabref.external.ExternalFileType.getOpenWith(),1,1
net.sf.jabref.external.ExternalFileType.setOpenWith(String),2,2
net.sf.jabref.external.ExternalFileType.setIconName(String),25,51
net.sf.jabref.external.ExternalFileType.getIconLabel(),10,16
net.sf.jabref.external.ExternalFileType.getIconName(),10,20
net.sf.jabref.external.ExternalFileType.getIcon(),2,4
net.sf.jabref.external.ExternalFileType.setIcon(ImageIcon),3,7
net.sf.jabref.external.ExternalFileType.toString(),2,3
net.sf.jabref.external.ExternalFileType.compareTo(ExternalFileType),5,7
net.sf.jabref.external.ExternalFileType.copy(),8,13
net.sf.jabref.external.ExternalFileType.hashCode(),3,5
net.sf.jabref.external.ExternalFileType.equals(Object),15,57
net.sf.jabref.export.layout.format.AuthorAndsReplacer.format(String),17,44
"net.sf.jabref.search.SearchExpressionParser.checkSyntax(String,boolean,boolean)",24,51
"net.sf.jabref.search.SearchExpressionParser.SearchExpressionParser(TokenBuffer,int)",12,26
net.sf.jabref.search.SearchExpressionParser.SearchExpressionParser(TokenBuffer),6,9
"net.sf.jabref.search.SearchExpressionParser.SearchExpressionParser(TokenStream,int)",12,24
net.sf.jabref.search.SearchExpressionParser.SearchExpressionParser(TokenStream),6,7
net.sf.jabref.search.SearchExpressionParser.SearchExpressionParser(ParserSharedInputState),12,23
"net.sf.jabref.search.SearchExpressionParser.quotedRegularExpression(boolean,boolean)",27,120
"net.sf.jabref.search.SearchExpressionParser.simpleRegularExpression(boolean,boolean)",27,120
net.sf.jabref.search.SearchExpressionParser.searchExpression(),19,58
net.sf.jabref.search.SearchExpressionParser.condition(),29,237
net.sf.jabref.search.SearchExpressionParser.expression(),28,185
net.sf.jabref.search.SearchExpressionParser.expressionSearch(),31,410
net.sf.jabref.search.SearchExpressionParser.compareType(),25,160
net.sf.jabref.search.SearchExpressionParser.buildTokenTypeASTClassMap(),5,9
net.sf.jabref.search.SearchExpressionParser.mk_tokenSet_0(),3,4
net.sf.jabref.search.SearchExpressionParser.mk_tokenSet_1(),3,4
net.sf.jabref.search.SearchExpressionParser.mk_tokenSet_2(),3,4
net.sf.jabref.FieldEditorFocusListener.FieldEditorFocusListener(),4,4
net.sf.jabref.FieldEditorFocusListener.focusGained(FocusEvent),11,14
net.sf.jabref.FieldEditorFocusListener.focusLost(FocusEvent),9,12
net.sf.jabref.gui.components.JPanelXBox.JPanelXBox(),6,15
net.sf.jabref.gui.components.JPanelXBox.JPanelXBox(Component),5,6
"net.sf.jabref.gui.MainTable.MainTable(MainTableFormat,EventList<BibtexEntry>,JabRefFrame,BasePanel)",72,249
net.sf.jabref.gui.MainTable.refreshSorting(),15,72
net.sf.jabref.gui.MainTable.showFloatSearch(Matcher<BibtexEntry>),19,29
net.sf.jabref.gui.MainTable.stopShowingFloatSearch(),10,15
net.sf.jabref.gui.MainTable.showFloatGrouping(Matcher<BibtexEntry>),19,25
net.sf.jabref.gui.MainTable.isShowingFloatSearch(),1,2
net.sf.jabref.gui.MainTable.stopShowingFloatGrouping(),8,9
net.sf.jabref.gui.MainTable.getTableRows(),7,7
net.sf.jabref.gui.MainTable.addSelectionListener(ListEventListener<BibtexEntry>),8,15
net.sf.jabref.gui.MainTable.getPane(),2,4
"net.sf.jabref.gui.MainTable.getCellRenderer(int,int)",29,114
net.sf.jabref.gui.MainTable.setWidths(),30,94
net.sf.jabref.gui.MainTable.getEntryAt(int),4,6
net.sf.jabref.gui.MainTable.getSelectedEntries(),5,12
net.sf.jabref.gui.MainTable.getCurrentSortOrder(),14,27
net.sf.jabref.gui.MainTable.getCurrentSortFields(),19,35
net.sf.jabref.gui.MainTable.setupComparatorChooser(),45,152
net.sf.jabref.gui.MainTable.setupComparatorChooser().$1.actionPerformed(ActionEvent),21,72
"net.sf.jabref.gui.MainTable.getCellStatus(int,int)",22,44
net.sf.jabref.gui.MainTable.getSelected(),7,8
net.sf.jabref.gui.MainTable.findEntry(BibtexEntry),6,12
net.sf.jabref.gui.MainTable.getIconTypeForColumn(int),6,11
"net.sf.jabref.gui.MainTable.matches(int,Matcher<BibtexEntry>)",6,8
net.sf.jabref.gui.MainTable.isComplete(int),13,16
net.sf.jabref.gui.MainTable.isMarked(int),10,14
net.sf.jabref.gui.MainTable.scrollTo(int),9,14
net.sf.jabref.gui.MainTable.updateFont(),11,21
net.sf.jabref.gui.MainTable.ensureVisible(int),12,23
"net.sf.jabref.gui.MainTable.scrollToCenter(int,int)",27,101
net.sf.jabref.gui.MainTable.updateRenderers(),25,161
"net.sf.jabref.gui.MainTable.mixColors(Color,Color)",6,12
net.sf.jabref.gui.MainTable.IncompleteRenderer.IncompleteRenderer(),12,16
net.sf.jabref.gui.MainTable.IncompleteRenderer.setNumber(int),3,5
net.sf.jabref.gui.MainTable.IncompleteRenderer.setValue(Object),3,4
net.sf.jabref.gui.MainTable.CompleteRenderer.CompleteRenderer(Color),3,5
net.sf.jabref.gui.MainTable.CompleteRenderer.setNumber(int),3,5
net.sf.jabref.gui.MainTable.CompleteRenderer.setValue(Object),3,4
"net.sf.jabref.gui.MainTable.MyTableComparatorChooser.MyTableComparatorChooser(JTable,SortedList<BibtexEntry>,Object)",19,32
"net.sf.jabref.gui.MainTable.MyTableComparatorChooser.MyTableComparatorChooser(JTable,SortedList<BibtexEntry>,Object).$1.actionPerformed(ActionEvent)",7,8
net.sf.jabref.gui.MainTable.setUI(TableUI),16,28
net.sf.jabref.gui.MainTable.getComparatorForColumn(int),9,16
net.sf.jabref.gui.MainTable.getSortingColumn(int),17,23
net.sf.jabref.gui.MainTable.getTableColumnListener(),4,10
net.sf.jabref.gui.MainTable.getSortedForTable(),19,28
net.sf.jabref.export.layout.format.AuthorLastFirstAbbrOxfordCommas.format(String),9,13
"net.sf.jabref.journals.AbbreviateAction.AbbreviateAction(BasePanel,boolean)",5,10
net.sf.jabref.journals.AbbreviateAction.init(),10,10
net.sf.jabref.journals.AbbreviateAction.run(),34,60
net.sf.jabref.journals.AbbreviateAction.update(),4,4
net.sf.jabref.imports.BibteXMLImporter.getFormatName(),5,7
net.sf.jabref.imports.BibteXMLImporter.getCLIId(),8,9
net.sf.jabref.imports.BibteXMLImporter.isRecognizedFormat(InputStream),24,39
net.sf.jabref.imports.BibteXMLImporter.importEntries(InputStream),49,120
net.sf.jabref.imports.BibTeXMLHandler.BibTeXMLHandler(),3,3
net.sf.jabref.imports.BibTeXMLHandler.getItems(),6,6
"net.sf.jabref.imports.BibTeXMLHandler.doctypeDecl(String,String,String)",5,7
net.sf.jabref.imports.BibTeXMLHandler.startDocument(),7,7
net.sf.jabref.imports.BibTeXMLHandler.endDocument(),1,1
"net.sf.jabref.imports.BibTeXMLHandler.characters(char,int,int)",7,10
"net.sf.jabref.imports.BibTeXMLHandler.startElement(String,String,String,Attributes)",37,110
"net.sf.jabref.imports.BibTeXMLHandler.endElement(String,String,String)",17,30
net.sf.jabref.external.PushToLatexEditor.getName(),10,10
net.sf.jabref.external.PushToLatexEditor.getApplicationName(),5,5
net.sf.jabref.external.PushToLatexEditor.getTooltip(),7,7
net.sf.jabref.external.PushToLatexEditor.getIcon(),5,6
net.sf.jabref.external.PushToLatexEditor.getKeyStrokeName(),4,4
"net.sf.jabref.external.PushToLatexEditor.pushEntries(BibtexDatabase,BibtexEntry[],String,MetaData)",31,58
net.sf.jabref.external.PushToLatexEditor.operationCompleted(BasePanel),19,38
net.sf.jabref.external.PushToLatexEditor.requiresBibtexKeys(),3,3
net.sf.jabref.external.PushToLatexEditor.getSettingsPanel(),13,26
net.sf.jabref.external.PushToLatexEditor.initSettingsPanel(),27,67
net.sf.jabref.external.PushToLatexEditor.storeSettings(),11,18
net.sf.jabref.imports.BooleanAssign.BooleanAssign(boolean),3,3
net.sf.jabref.imports.BooleanAssign.setValue(boolean),2,5
net.sf.jabref.imports.BooleanAssign.getValue(),1,2
"net.sf.jabref.plugin.PluginInstaller.installPlugin(JabRefFrame,File,String)",56,445
net.sf.jabref.plugin.PluginInstaller.checkInstalledVersion(File),22,53
net.sf.jabref.plugin.PluginInstaller.deletePlugin(NameAndVersion),14,37
net.sf.jabref.plugin.PluginInstaller.deleteOlderVersions(File),19,60
net.sf.jabref.plugin.PluginInstaller.deletePluginFile(File),19,33
"net.sf.jabref.plugin.PluginInstaller.copyPlugin(JFrame,URL,String)",31,81
"net.sf.jabref.plugin.PluginInstaller.copyPlugin(JFrame,File,String)",31,96
net.sf.jabref.plugin.PluginInstaller.getInstalledVersions(String),24,70
"net.sf.jabref.plugin.PluginInstaller.getInstalledVersions(String).$1.accept(File,String)",4,5
net.sf.jabref.plugin.PluginInstaller.schedulePluginForDeletion(String),21,49
net.sf.jabref.plugin.PluginInstaller.deletePluginsOnStartup(String[]),32,57
net.sf.jabref.plugin.PluginInstaller.getNameAndVersion(File),36,68
net.sf.jabref.plugin.PluginInstaller.unpackPluginXML(File),32,88
net.sf.jabref.plugin.PluginInstaller.findInstalledPlugins(),54,228
"net.sf.jabref.plugin.PluginInstaller.findInstalledPlugins().$2.accept(File,String)",6,7
"net.sf.jabref.plugin.PluginInstaller.NameAndVersion.NameAndVersion(String,VersionNumber,boolean,File)",6,20
net.sf.jabref.plugin.PluginInstaller.NameAndVersion.compareTo(Object),6,22
net.sf.jabref.plugin.PluginInstaller.NameAndVersion.getStatus(),1,2
net.sf.jabref.plugin.PluginInstaller.NameAndVersion.setStatus(int),2,5
net.sf.jabref.plugin.PluginInstaller.VersionNumber.VersionNumber(String),14,20
net.sf.jabref.plugin.PluginInstaller.VersionNumber.compareTo(Object),10,28
net.sf.jabref.plugin.PluginInstaller.VersionNumber.toString(),6,21
net.sf.jabref.plugin.PluginInstaller.VersionNumber.equals(Object),3,3
tests.net.sf.jabref.util.XMPUtilTest.bibtexDescription(String),15,28
tests.net.sf.jabref.util.XMPUtilTest.bibtexXPacket(String),28,72
"tests.net.sf.jabref.util.XMPUtilTest.writeManually(File,String)",33,93
tests.net.sf.jabref.util.XMPUtilTest.bibtexString2BibtexEntry(String),14,25
tests.net.sf.jabref.util.XMPUtilTest.bibtexEntry2BibtexString(BibtexEntry),13,21
tests.net.sf.jabref.util.XMPUtilTest.t1BibtexString(),34,36
tests.net.sf.jabref.util.XMPUtilTest.t1BibtexEntry(),4,11
tests.net.sf.jabref.util.XMPUtilTest.t2XMP(),27,40
tests.net.sf.jabref.util.XMPUtilTest.t2BibtexString(),4,10
tests.net.sf.jabref.util.XMPUtilTest.t2BibtexEntry(),23,40
tests.net.sf.jabref.util.XMPUtilTest.t3BibtexEntry(),83,129
tests.net.sf.jabref.util.XMPUtilTest.t3BibtexString(),4,10
tests.net.sf.jabref.util.XMPUtilTest.t3XMP(),85,151
tests.net.sf.jabref.util.XMPUtilTest.setUp(),38,80
tests.net.sf.jabref.util.XMPUtilTest.tearDown(),12,19
tests.net.sf.jabref.util.XMPUtilTest.testReadXMPSimple(),34,72
tests.net.sf.jabref.util.XMPUtilTest.testReadXMPUTF8(),32,63
tests.net.sf.jabref.util.XMPUtilTest.testPrivacyFilter(),33,127
tests.net.sf.jabref.util.XMPUtilTest.testReadXMPSeq(),38,102
tests.net.sf.jabref.util.XMPUtilTest.testReadXMPEntryType(),24,49
tests.net.sf.jabref.util.XMPUtilTest.readManually(File),32,67
tests.net.sf.jabref.util.XMPUtilTest.testWriteReadManually(),30,103
tests.net.sf.jabref.util.XMPUtilTest.testReadWriteXMP(),53,83
tests.net.sf.jabref.util.XMPUtilTest.testNewlineHandling(),38,75
tests.net.sf.jabref.util.XMPUtilTest.testAttributeRead(),24,46
tests.net.sf.jabref.util.XMPUtilTest.testEmpty(),9,10
tests.net.sf.jabref.util.XMPUtilTest.testSimpleUpdate(),94,735
tests.net.sf.jabref.util.XMPUtilTest.testXMLEscape(),53,79
"tests.net.sf.jabref.util.XMPUtilTest.assertEquals(BibtexEntry,BibtexEntry)",17,84
tests.net.sf.jabref.util.XMPUtilTest.testXMPreadString(),60,175
tests.net.sf.jabref.util.XMPUtilTest.testReadMultiple(),23,51
tests.net.sf.jabref.util.XMPUtilTest.testWriteMultiple(),23,57
tests.net.sf.jabref.util.XMPUtilTest.testReadWriteDC(),82,250
tests.net.sf.jabref.util.XMPUtilTest.testWriteSingleUpdatesDCAndInfo(),84,252
tests.net.sf.jabref.util.XMPUtilTest.testReadRawXMP(),64,171
tests.net.sf.jabref.util.XMPUtilTest.testCommandLineSingleBib(),40,103
tests.net.sf.jabref.util.XMPUtilTest.testCommandLineSinglePdf(),58,199
tests.net.sf.jabref.util.XMPUtilTest.testCommandLineByKey(),40,149
tests.net.sf.jabref.util.XMPUtilTest.testCommandLineSeveral(),47,123
tests.net.sf.jabref.util.XMPUtilTest.testResolveStrings(),61,111
tests.net.sf.jabref.util.XMPUtilTest.testEncryption(),27,56
tests.net.sf.jabref.util.XMPUtilTest.testResolveStrings2(),87,240
tests.net.sf.jabref.util.XMPUtilTest.slurp(Reader),12,42
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.IntegrityMessagePanel(BasePanel),52,167
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.updateView(BibtexEntry),15,26
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.updateView(BibtexDatabase),15,25
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.valueChanged(ListSelectionEvent),35,62
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.keyPressed(KeyEvent),3,4
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.keyReleased(KeyEvent),10,16
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.keyTyped(KeyEvent),3,4
net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.actionPerformed(ActionEvent),42,89
"net.sf.jabref.wizard.integrity.gui.IntegrityMessagePanel.IntegrityListRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",22,57
net.sf.jabref.export.layout.format.WrapFileLinks.setArgument(String),11,20
net.sf.jabref.export.layout.format.WrapFileLinks.format(String),81,223
net.sf.jabref.export.layout.format.WrapFileLinks.replaceStrings(String),8,18
net.sf.jabref.export.layout.format.WrapFileLinks.parseFormatString(String),50,123
net.sf.jabref.export.layout.format.WrapFileLinks.FormatEntry.FormatEntry(int),3,5
net.sf.jabref.export.layout.format.WrapFileLinks.FormatEntry.FormatEntry(String),5,8
net.sf.jabref.export.layout.format.WrapFileLinks.FormatEntry.getType(),1,2
net.sf.jabref.export.layout.format.WrapFileLinks.FormatEntry.getString(),1,3
"net.sf.jabref.groups.UnsupportedVersionException.UnsupportedVersionException(String,int)",7,12
"net.sf.jabref.gui.FileDialogs.getMultipleFiles(JFrame,File,String,boolean)",39,82
"net.sf.jabref.gui.FileDialogs.getNewFile(JFrame,File,String,int,boolean)",9,20
"net.sf.jabref.gui.FileDialogs.getNewFile(JFrame,File,String,int,boolean,JComponent)",11,23
"net.sf.jabref.gui.FileDialogs.getNewFile(JFrame,File,String,String,int,boolean)",10,23
"net.sf.jabref.gui.FileDialogs.getNewDir(JFrame,File,String,int,boolean)",10,20
"net.sf.jabref.gui.FileDialogs.getNewDir(JFrame,File,String,String,int,boolean)",11,23
"net.sf.jabref.gui.FileDialogs.getNewFile(JFrame,File,String,String,int,boolean,boolean,JComponent)",18,42
"net.sf.jabref.gui.FileDialogs.getNewFileImpl(JFrame,File,String,String,OpenFileFilter,int,boolean,boolean,boolean,JComponent)",78,238
"net.sf.jabref.gui.FileDialogs.getNewFileForMac(JFrame,File,String,int,boolean,boolean,FilenameFilter)",25,65
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData)",74,259
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$1.actionPerformed(ActionEvent)",24,49
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$2.itemStateChanged(ItemEvent)",9,13
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$3.actionPerformed(ActionEvent)",4,7
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$4.actionPerformed(ActionEvent)",5,6
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$5.insertUpdate(DocumentEvent)",6,8
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$5.removeUpdate(DocumentEvent)",4,6
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$5.changedUpdate(DocumentEvent)",6,8
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$6.windowActivated(WindowEvent)",11,17
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$6.windowActivated(WindowEvent).$1.run()",5,7
"net.sf.jabref.gui.FileListEntryEditor.FileListEntryEditor(JabRefFrame,FileListEntry,boolean,boolean,MetaData).$6.windowClosed(WindowEvent)",6,8
net.sf.jabref.gui.FileListEntryEditor.checkExtension(),26,71
net.sf.jabref.gui.FileListEntryEditor.openFile(),16,25
net.sf.jabref.gui.FileListEntryEditor.setExternalConfirm(ConfirmCloseFileListEntryEditor),8,11
net.sf.jabref.gui.FileListEntryEditor.setOkEnabled(boolean),4,9
net.sf.jabref.gui.FileListEntryEditor.getProgressBar(),3,5
net.sf.jabref.gui.FileListEntryEditor.getProgressBarLabel(),4,6
net.sf.jabref.gui.FileListEntryEditor.setEntry(FileListEntry),5,11
"net.sf.jabref.gui.FileListEntryEditor.setVisible(boolean,boolean)",6,13
net.sf.jabref.gui.FileListEntryEditor.isVisible(),2,4
net.sf.jabref.gui.FileListEntryEditor.setValues(FileListEntry),27,69
net.sf.jabref.gui.FileListEntryEditor.storeSettings(FileListEntry),42,118
net.sf.jabref.gui.FileListEntryEditor.okPressed(),1,2
"net.sf.jabref.gui.FileListEntryEditor.BrowseListener.BrowseListener(JFrame,JTextField)",7,11
net.sf.jabref.gui.FileListEntryEditor.BrowseListener.actionPerformed(ActionEvent),39,98
net.sf.jabref.gui.components.JPanelYBoxPreferredSize.JPanelYBoxPreferredSize(),5,5
net.sf.jabref.gui.components.JPanelYBoxPreferredSize.JPanelYBoxPreferredSize(Component),6,6
net.sf.jabref.gui.components.JPanelYBoxPreferredSize.getMaximumSize(),4,5
net.sf.jabref.undo.CountingUndoManager.CountingUndoManager(BasePanel),5,10
net.sf.jabref.undo.CountingUndoManager.addEdit(UndoableEdit),4,9
net.sf.jabref.undo.CountingUndoManager.undo(),14,22
net.sf.jabref.undo.CountingUndoManager.redo(),15,22
net.sf.jabref.undo.CountingUndoManager.markUnchanged(),3,4
net.sf.jabref.undo.CountingUndoManager.hasChanged(),3,3
net.sf.jabref.imports.ACMPortalFetcher.getOptionsPanel(),14,37
"net.sf.jabref.imports.ACMPortalFetcher.processQuery(String,ImportInspector,OutputPrinter)",75,262
net.sf.jabref.imports.ACMPortalFetcher.makeUrl(int),11,28
"net.sf.jabref.imports.ACMPortalFetcher.parse(ImportInspector,String,int,int)",31,50
"net.sf.jabref.imports.ACMPortalFetcher.parseEntryBibTeX(String,boolean)",50,129
"net.sf.jabref.imports.ACMPortalFetcher.parseNextEntry(String,int,int)",36,90
net.sf.jabref.imports.ACMPortalFetcher.convertHTMLChars(String),15,23
"net.sf.jabref.imports.ACMPortalFetcher.getNumberOfHits(String,String,Pattern)",28,76
net.sf.jabref.imports.ACMPortalFetcher.getResults(URL),14,32
net.sf.jabref.imports.ACMPortalFetcher.getResultsFromFile(File),16,38
net.sf.jabref.imports.ACMPortalFetcher.getTitle(),7,8
net.sf.jabref.imports.ACMPortalFetcher.getIcon(),5,7
net.sf.jabref.imports.ACMPortalFetcher.getHelpPage(),6,7
net.sf.jabref.imports.ACMPortalFetcher.getKeyName(),6,6
net.sf.jabref.imports.ACMPortalFetcher.cancelled(),5,6
net.sf.jabref.imports.ACMPortalFetcher.done(int),20,26
net.sf.jabref.imports.ACMPortalFetcher.stopFetching(),12,16
tests.net.sf.jabref.gui.AutoCompleterTest.testAutoCompleterFactory(),7,29
tests.net.sf.jabref.gui.AutoCompleterTest.testDefaultAutoCompleter(),18,70
tests.net.sf.jabref.gui.AutoCompleterTest.testCrossRefCompleter(),17,54
tests.net.sf.jabref.gui.AutoCompleterTest.testEntireFieldCompleter(),19,68
tests.net.sf.jabref.gui.AutoCompleterTest.testNameFieldCompleter(),31,204
tests.net.sf.jabref.gui.AutoCompleterTest.testEntryEditorForNameFieldAutoCompleter(),37,102
tests.net.sf.jabref.gui.AutoCompleterTest.testEntryEditorForFieldAnotherAutoCompleter(),34,91
tests.net.sf.jabref.gui.AutoCompleterTest.getDatabse(),17,32
"net.sf.jabref.groups.AutoGroupDialog.AutoGroupDialog(JabRefFrame,BasePanel,GroupSelector,GroupTreeNode,String,String,String)",97,407
"net.sf.jabref.groups.AutoGroupDialog.AutoGroupDialog(JabRefFrame,BasePanel,GroupSelector,GroupTreeNode,String,String,String).$1.actionPerformed(ActionEvent)",56,146
"net.sf.jabref.groups.AutoGroupDialog.AutoGroupDialog(JabRefFrame,BasePanel,GroupSelector,GroupTreeNode,String,String,String).$2.actionPerformed(ActionEvent)",4,5
net.sf.jabref.groups.AutoGroupDialog.okPressed(),1,2
net.sf.jabref.groups.AutoGroupDialog.oldField(),2,3
net.sf.jabref.groups.AutoGroupDialog.oldRemove(),2,3
net.sf.jabref.groups.AutoGroupDialog.field(),3,4
net.sf.jabref.groups.AutoGroupDialog.remove(),3,4
net.sf.jabref.groups.AutoGroupDialog.caretUpdate(CaretEvent),4,6
net.sf.jabref.groups.AutoGroupDialog.updateComponents(),9,11
"net.sf.jabref.external.WriteXMPEntryEditorAction.WriteXMPEntryEditorAction(BasePanel,EntryEditor)",18,37
net.sf.jabref.external.WriteXMPEntryEditorAction.actionPerformed(ActionEvent),69,168
"net.sf.jabref.external.WriteXMPEntryEditorAction.WriteXMPWorker.WriteXMPWorker(List<File>,BibtexEntry)",8,13
net.sf.jabref.external.WriteXMPEntryEditorAction.WriteXMPWorker.run(),29,81
net.sf.jabref.imports.IEEEXploreFetcher.IEEEXploreFetcher(),18,34
net.sf.jabref.imports.IEEEXploreFetcher.getOptionsPanel(),18,54
"net.sf.jabref.imports.IEEEXploreFetcher.processQuery(String,ImportInspector,OutputPrinter)",61,213
net.sf.jabref.imports.IEEEXploreFetcher.getTitle(),7,8
net.sf.jabref.imports.IEEEXploreFetcher.getIcon(),5,7
net.sf.jabref.imports.IEEEXploreFetcher.getHelpPage(),6,7
net.sf.jabref.imports.IEEEXploreFetcher.getKeyName(),6,6
net.sf.jabref.imports.IEEEXploreFetcher.stopFetching(),7,7
net.sf.jabref.imports.IEEEXploreFetcher.makeUrl(int),9,21
"net.sf.jabref.imports.IEEEXploreFetcher.parse(ImportInspector,String,int,int)",36,95
"net.sf.jabref.imports.IEEEXploreFetcher.parseBibtexDatabase(List<String>,boolean)",57,142
net.sf.jabref.imports.IEEEXploreFetcher.cleanup(BibtexEntry),59,354
"net.sf.jabref.imports.IEEEXploreFetcher.parseNextEntryId(String,int)",14,40
"net.sf.jabref.imports.IEEEXploreFetcher.parseNextEntry(String,int)",74,371
"net.sf.jabref.imports.IEEEXploreFetcher.getNumberOfHits(String,String,Pattern)",19,43
net.sf.jabref.imports.IEEEXploreFetcher.getResults(URL),14,32
net.sf.jabref.imports.IEEEXploreFetcher.getResultsFromFile(File),16,38
net.sf.jabref.label.BookLabelRule.applyRule(BibtexEntry),22,69
net.sf.jabref.groups.AllEntriesGroup.AllEntriesGroup(),4,5
"net.sf.jabref.groups.AllEntriesGroup.fromString(String,BibtexDatabase,int)",17,25
net.sf.jabref.groups.AllEntriesGroup.getSearchRule(),2,4
net.sf.jabref.groups.AllEntriesGroup.supportsAdd(),2,2
net.sf.jabref.groups.AllEntriesGroup.supportsRemove(),2,2
net.sf.jabref.groups.AllEntriesGroup.add(BibtexEntry[]),8,8
net.sf.jabref.groups.AllEntriesGroup.remove(BibtexEntry[]),8,8
"net.sf.jabref.groups.AllEntriesGroup.contains(Map<String,String>,BibtexEntry)",7,10
net.sf.jabref.groups.AllEntriesGroup.deepCopy(),3,3
"net.sf.jabref.groups.AllEntriesGroup.applyRule(Map<String,String>,BibtexEntry)",9,12
net.sf.jabref.groups.AllEntriesGroup.equals(Object),3,3
net.sf.jabref.groups.AllEntriesGroup.toString(),1,2
net.sf.jabref.groups.AllEntriesGroup.contains(BibtexEntry),3,4
net.sf.jabref.groups.AllEntriesGroup.isDynamic(),4,5
net.sf.jabref.groups.AllEntriesGroup.getDescription(),8,8
net.sf.jabref.groups.AllEntriesGroup.getShortDescription(),7,7
net.sf.jabref.groups.AllEntriesGroup.getTypeId(),2,2
tests.net.sf.jabref.imports.OAI2ImportTest.setUp(),15,27
tests.net.sf.jabref.imports.OAI2ImportTest.testCorrectLineBreaks(),8,50
tests.net.sf.jabref.imports.OAI2ImportTest.testParse(),39,61
tests.net.sf.jabref.imports.OAI2ImportTest.testOai22xml(),12,17
tests.net.sf.jabref.imports.OAI2ImportTest.testOai23xml(),19,23
tests.net.sf.jabref.imports.OAI2ImportTest.testUrlConstructor(),22,50
tests.net.sf.jabref.imports.OAI2ImportTest.testFixKey(),9,48
tests.net.sf.jabref.imports.OAI2ImportTest.testOnline(),37,110
net.sf.jabref.imports.TextAnalyzer.TextAnalyzer(String),6,8
net.sf.jabref.imports.TextAnalyzer.getEntry(),2,3
net.sf.jabref.imports.TextAnalyzer.guessBibtexFields(String),49,289
"net.sf.jabref.imports.TextAnalyzer.getMatches(String,String)",11,40
net.sf.jabref.imports.TextAnalyzer.clean(String),11,27
"net.sf.jabref.imports.TextAnalyzer.Substring.Substring(String,int,int)",4,6
net.sf.jabref.imports.TextAnalyzer.Substring.begin(),1,2
net.sf.jabref.imports.TextAnalyzer.Substring.end(),0,0
net.sf.jabref.imports.TextAnalyzer.Substring.compareTo(Substring),4,7
net.sf.jabref.sql.DBStrings.DBStrings(),13,19
net.sf.jabref.sql.DBStrings.initialize(),19,43
net.sf.jabref.sql.DBStrings.setServerType(String),4,10
net.sf.jabref.sql.DBStrings.setServerHostname(String),4,10
net.sf.jabref.sql.DBStrings.setDatabase(String),3,6
net.sf.jabref.sql.DBStrings.setUsername(String),3,6
net.sf.jabref.sql.DBStrings.setPassword(String),3,6
net.sf.jabref.sql.DBStrings.getServerType(),3,5
net.sf.jabref.sql.DBStrings.getServerHostname(),3,5
net.sf.jabref.sql.DBStrings.getDatabase(),2,3
net.sf.jabref.sql.DBStrings.getUsername(),2,3
net.sf.jabref.sql.DBStrings.getPassword(),2,3
net.sf.jabref.sql.DBStrings.getServerTypes(),3,5
net.sf.jabref.sql.DBStrings.setServerTypes(String[]),4,10
net.sf.jabref.sql.DBStrings.isInitialized(),1,2
net.sf.jabref.sql.DBStrings.isInitialized(boolean),1,4
net.sf.jabref.sql.DBStrings.isConfigValid(),2,4
net.sf.jabref.sql.DBStrings.isConfigValid(boolean),2,8
net.sf.jabref.export.layout.format.CreateDocBookAuthors.format(String),23,88
"net.sf.jabref.export.layout.format.CreateDocBookAuthors.addBody(StringBuilder,AuthorList,String)",16,51
"net.sf.jabref.export.layout.format.CreateDocBookAuthors.singleAuthor(StringBuffer,String)",23,68
net.sf.jabref.gui.MainTableFormat.MainTableFormat(BasePanel),5,8
net.sf.jabref.gui.MainTableFormat.getColumnCount(),5,5
net.sf.jabref.gui.MainTableFormat.getColumnName(int),22,64
net.sf.jabref.gui.MainTableFormat.getIconTypeForColumn(int),19,29
net.sf.jabref.gui.MainTableFormat.getColumnIndex(String),15,30
"net.sf.jabref.gui.MainTableFormat.getColumnValue(BibtexEntry,int)",31,88
net.sf.jabref.gui.MainTableFormat.formatName(Object),19,55
"net.sf.jabref.gui.MainTableFormat.hasField(BibtexEntry,String)",9,14
net.sf.jabref.gui.MainTableFormat.updateTableFormat(),58,179
net.sf.jabref.gui.MainTableFormat.isIconColumn(int),4,7
net.sf.jabref.gui.MainTableFormat.NoSearchMatcher.matches(BibtexEntry),4,4
"net.sf.jabref.gui.MainTableFormat.SearchMatcher.SearchMatcher(SearchRuleSet,Hashtable<String,String>)",7,20
net.sf.jabref.gui.MainTableFormat.SearchMatcher.matches(BibtexEntry),9,13
net.sf.jabref.imports.CsaImporter.getFormatName(),4,6
net.sf.jabref.imports.CsaImporter.getCLIId(),8,9
net.sf.jabref.imports.CsaImporter.readLine(BufferedReader),8,17
"net.sf.jabref.imports.CsaImporter.addNote(HashMap<String,String>,String)",9,28
"net.sf.jabref.imports.CsaImporter.parseDate(HashMap<String,String>,String)",42,171
net.sf.jabref.imports.CsaImporter.isRecognizedFormat(InputStream),22,34
net.sf.jabref.imports.CsaImporter.importEntries(InputStream),118,476
net.sf.jabref.gui.AutoCompleteListener.AutoCompleteListener(AbstractAutoCompleter),4,8
net.sf.jabref.gui.AutoCompleteListener.setNextFocusListener(FocusListener),13,29
net.sf.jabref.gui.AutoCompleteListener.keyPressed(KeyEvent),21,50
"net.sf.jabref.gui.AutoCompleteListener.cycle(JTextComponent,int)",28,90
net.sf.jabref.gui.AutoCompleteListener.keyTyped(KeyEvent),45,239
"net.sf.jabref.gui.AutoCompleteListener.findCompletions(String,JTextComponent)",9,10
net.sf.jabref.gui.AutoCompleteListener.getCurrentWord(JTextComponent),42,95
net.sf.jabref.gui.AutoCompleteListener.findNamePositionStatus(JTextComponent),17,34
net.sf.jabref.gui.AutoCompleteListener.focusGained(FocusEvent),4,12
net.sf.jabref.gui.AutoCompleteListener.focusLost(FocusEvent),11,23
net.sf.jabref.gui.AutoCompleteListener.clearCurrentSuggestion(JTextComponent),16,38
net.sf.jabref.imports.BiblioscapeImporter.getFormatName(),4,6
net.sf.jabref.imports.BiblioscapeImporter.getCLIId(),8,9
net.sf.jabref.imports.BiblioscapeImporter.isRecognizedFormat(InputStream),9,10
net.sf.jabref.imports.BiblioscapeImporter.importEntries(InputStream),102,723
tests.net.sf.jabref.export.layout.format.AuthorAbbreviatorTest.testFormat(),15,44
net.sf.jabref.gui.components.JPanelXBoxPreferredHeight.JPanelXBoxPreferredHeight(),5,5
net.sf.jabref.gui.components.JPanelXBoxPreferredHeight.JPanelXBoxPreferredHeight(Component),6,6
net.sf.jabref.gui.components.JPanelXBoxPreferredHeight.getMaximumSize(),6,13
net.sf.jabref.imports.BibsonomyScraper.getEntry(String),30,71
tests.net.sf.jabref.search.BasicSearchTest.testBasicSearchParsing(),17,106
tests.net.sf.jabref.search.BasicSearchTest.makeBibtexEntry(),18,33
net.sf.jabref.mods.MODSDatabase.MODSDatabase(),8,9
net.sf.jabref.mods.MODSDatabase.MODSDatabase(BibtexDatabase),7,11
"net.sf.jabref.mods.MODSDatabase.MODSDatabase(BibtexDatabase,Set<String>)",8,21
"net.sf.jabref.mods.MODSDatabase.addEntries(BibtexDatabase,Set<String>)",12,36
net.sf.jabref.mods.MODSDatabase.getDOMrepresentation(),39,101
net.sf.jabref.imports.SPIRESBibtexFilterReader.SPIRESBibtexFilterReader(Reader),7,9
net.sf.jabref.imports.SPIRESBibtexFilterReader.readpreLine(),7,16
net.sf.jabref.imports.SPIRESBibtexFilterReader.fixBibkey(String),8,12
net.sf.jabref.imports.SPIRESBibtexFilterReader.read(),8,16
"tests.net.sf.jabref.JabRefTestCase.assertEquals(BibtexEntry,BibtexEntry)",11,26
tests.net.sf.jabref.JabRefTestCase.testVoid(),3,3
net.sf.jabref.util.CaseChangeMenu.CaseChangeMenu(JTextComponent),18,34
net.sf.jabref.util.CaseChangeMenu.actionPerformed(ActionEvent),10,14
net.sf.jabref.util.CaseChangeMenu.caseChange(int),6,10
net.sf.jabref.imports.JstorImporter.getFormatName(),6,8
net.sf.jabref.imports.JstorImporter.getCLIId(),8,9
net.sf.jabref.imports.JstorImporter.isRecognizedFormat(InputStream),9,10
net.sf.jabref.imports.JstorImporter.importEntries(InputStream),51,159
net.sf.jabref.search.HitOrMissComparator.HitOrMissComparator(Matcher<BibtexEntry>),6,12
"net.sf.jabref.search.HitOrMissComparator.compare(BibtexEntry,BibtexEntry)",6,18
net.sf.jabref.imports.OAI2Handler.OAI2Handler(BibtexEntry),4,5
net.sf.jabref.imports.OAI2Handler.startDocument(),7,7
"net.sf.jabref.imports.OAI2Handler.characters(char[],int,int)",6,9
"net.sf.jabref.imports.OAI2Handler.startElement(String,String,String,Attributes)",12,17
"net.sf.jabref.imports.OAI2Handler.endElement(String,String,String)",33,158
net.sf.jabref.imports.OAI2Handler.endDocument(),9,9
net.sf.jabref.imports.JSTORFetcher.getHelpPage(),5,5
net.sf.jabref.imports.JSTORFetcher.getIcon(),5,7
net.sf.jabref.imports.JSTORFetcher.getKeyName(),5,5
net.sf.jabref.imports.JSTORFetcher.getOptionsPanel(),2,5
net.sf.jabref.imports.JSTORFetcher.getTitle(),6,7
net.sf.jabref.imports.JSTORFetcher.stopFetching(),3,3
"net.sf.jabref.imports.JSTORFetcher.processQuery(String,ImportInspector,OutputPrinter)",31,70
"net.sf.jabref.imports.JSTORFetcher.getBibtexEntries(String,String)",36,83
net.sf.jabref.imports.JSTORFetcher.openTicket(),8,20
"net.sf.jabref.imports.JSTORFetcher.getCitations(String,String)",43,85
"net.sf.jabref.imports.JSTORFetcher.getCookie(String,URLConnection)",26,77
tests.net.sf.jabref.DuplicateCheckTest.testDuplicateDetection(),22,113
"net.sf.jabref.groups.UndoableModifyGroup.UndoableModifyGroup(GroupSelector,GroupTreeNode,GroupTreeNode,AbstractGroup)",17,34
net.sf.jabref.groups.UndoableModifyGroup.getUndoPresentationName(),7,10
net.sf.jabref.groups.UndoableModifyGroup.getRedoPresentationName(),7,10
net.sf.jabref.groups.UndoableModifyGroup.undo(),12,13
net.sf.jabref.groups.UndoableModifyGroup.redo(),12,13
net.sf.jabref.imports.ImportCustomizationDialog.getSize(),11,31
"net.sf.jabref.imports.ImportCustomizationDialog.pathToClass(File,File)",17,51
net.sf.jabref.imports.ImportCustomizationDialog.addOrReplaceImporter(CustomImportList.Importer),21,37
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame),86,332
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame).$1.actionPerformed(ActionEvent),49,137
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame).$2.actionPerformed(ActionEvent),43,119
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame).$3.actionPerformed(ActionEvent),29,62
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame).$4.actionPerformed(ActionEvent),31,58
net.sf.jabref.imports.ImportCustomizationDialog.ImportCustomizationDialog(JabRefFrame).$5.actionPerformed(ActionEvent),4,5
"net.sf.jabref.imports.ImportCustomizationDialog.ImportTableModel.getValueAt(int,int)",12,37
net.sf.jabref.imports.ImportCustomizationDialog.ImportTableModel.getColumnCount(),4,5
net.sf.jabref.imports.ImportCustomizationDialog.ImportTableModel.getRowCount(),7,7
net.sf.jabref.imports.ImportCustomizationDialog.ImportTableModel.getColumnName(int),5,7
net.sf.jabref.imports.ImportCustomizationDialog.ImportTableModel.getImporter(int),10,21
"net.sf.jabref.label.LabelMaker.applyRule(BibtexEntry,BibtexDatabase)",25,74
net.sf.jabref.label.LabelMaker.setDefaultRule(LabelRule),3,7
net.sf.jabref.label.LabelMaker.applyDefaultRule(BibtexEntry),5,10
"net.sf.jabref.label.LabelMaker.addRule(LabelRule,BibtexEntryType)",8,16
tests.net.sf.jabref.util.XMPSchemaBibtexTest.setUp(),2,3
tests.net.sf.jabref.util.XMPSchemaBibtexTest.tearDown(),2,3
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testXMPSchemaBibtexXMPMetadata(),12,29
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testXMPSchemaBibtexElement(),18,49
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testGetSetPersonList(),29,83
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testSetGetTextPropertyString(),23,96
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testSetGetBagListString(),24,129
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testGetSequenceListString(),23,122
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testSetRemoveGetSequenceDateListString(),8,8
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testGetAllProperties(),29,106
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testSetBibtexEntry(),11,35
tests.net.sf.jabref.util.XMPSchemaBibtexTest.testGetTextContent(),33,67
net.sf.jabref.labelPattern.LabelPattern.LabelPattern(),2,2
net.sf.jabref.labelPattern.LabelPattern.LabelPattern(LabelPattern),3,7
net.sf.jabref.labelPattern.LabelPattern.setParent(LabelPattern),8,16
net.sf.jabref.labelPattern.LabelPattern.getParent(),3,10
"net.sf.jabref.labelPattern.LabelPattern.addLabelPattern(String,String)",7,13
net.sf.jabref.labelPattern.LabelPattern.removeLabelPattern(String),12,32
"net.sf.jabref.labelPattern.LabelPattern.removeLabelPattern(String,boolean)",7,10
net.sf.jabref.labelPattern.LabelPattern.getValue(String),26,59
net.sf.jabref.labelPattern.LabelPattern.isDefaultValue(String),8,11
tests.net.sf.jabref.export.layout.format.ResolvePDFTest.setUp(),2,3
tests.net.sf.jabref.export.layout.format.ResolvePDFTest.tearDown(),1,2
tests.net.sf.jabref.export.layout.format.ResolvePDFTest.testFormat(),26,58
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.testOneAuthorSimpleName(),16,38
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.testOneAuthorCommonName(),17,40
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.testTwoAuthorsCommonName(),21,43
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.testJrAuthor(),18,19
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.testFormat(),15,31
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbreviatorTester.abbreviate(String),6,8
"net.sf.jabref.undo.UndoableInsertEntry.UndoableInsertEntry(BibtexDatabase,BibtexEntry,BasePanel)",7,18
net.sf.jabref.undo.UndoableInsertEntry.getUndoPresentationName(),6,7
net.sf.jabref.undo.UndoableInsertEntry.getRedoPresentationName(),6,7
net.sf.jabref.undo.UndoableInsertEntry.undo(),15,19
net.sf.jabref.undo.UndoableInsertEntry.redo(),14,18
tests.net.sf.jabref.labelPattern.AllTests.suite(),11,25
tests.net.sf.jabref.imports.CopacImporterTest.setUp(),8,11
tests.net.sf.jabref.imports.CopacImporterTest.tearDown(),2,3
tests.net.sf.jabref.imports.CopacImporterTest.testIsRecognizedFormat(),13,84
tests.net.sf.jabref.imports.CopacImporterTest.testImportEntries(),38,77
tests.net.sf.jabref.imports.CopacImporterTest.testImportEntries2(),25,48
net.sf.jabref.journals.ManageJournalsAction.ManageJournalsAction(JabRefFrame),13,17
net.sf.jabref.journals.ManageJournalsAction.actionPerformed(ActionEvent),12,26
tests.net.sf.jabref.export.layout.format.AuthorFirstLastCommasTest.testFormat(),26,81
wsi.ra.tool.WSITools.WSITools(),2,2
"wsi.ra.tool.WSITools.tokenize(Vector<String>,String)",12,22
"wsi.ra.tool.WSITools.tokenize(Vector<String>,String,String)",17,38
"wsi.ra.tool.WSITools.tokenize(Vector<String>,String,String,int)",26,59
net.sf.jabref.gui.EntryCustomizationDialog2.EntryCustomizationDialog2(JabRefFrame),14,22
net.sf.jabref.gui.EntryCustomizationDialog2.initGui(),74,313
net.sf.jabref.gui.EntryCustomizationDialog2.initGui().$1.actionPerformed(ActionEvent),4,5
net.sf.jabref.gui.EntryCustomizationDialog2.valueChanged(ListSelectionEvent),36,142
net.sf.jabref.gui.EntryCustomizationDialog2.applyChanges(),53,204
net.sf.jabref.gui.EntryCustomizationDialog2.typeDeletion(String),35,87
"net.sf.jabref.gui.EntryCustomizationDialog2.equalArrays(String[],String[])",7,12
net.sf.jabref.gui.EntryCustomizationDialog2.actionPerformed(ActionEvent),16,29
net.sf.jabref.gui.EntryCustomizationDialog2.updateTypesForEntries(String),35,60
net.sf.jabref.gui.EntryCustomizationDialog2.updateTables(),8,16
net.sf.jabref.gui.EntryCustomizationDialog2.DefaultListener.actionPerformed(ActionEvent),25,63
net.sf.jabref.gui.EntryCustomizationDialog2.DataListener.intervalAdded(javax.swing.event.ListDataEvent),8,9
net.sf.jabref.gui.EntryCustomizationDialog2.DataListener.intervalRemoved(javax.swing.event.ListDataEvent),8,9
net.sf.jabref.gui.EntryCustomizationDialog2.DataListener.contentsChanged(javax.swing.event.ListDataEvent),8,9
net.sf.jabref.gui.EntryCustomizationDialog2.DataListener.record(),9,12
"net.sf.jabref.undo.UndoableRemoveEntry.UndoableRemoveEntry(BibtexDatabase,BibtexEntry,BasePanel)",7,18
net.sf.jabref.undo.UndoableRemoveEntry.getUndoPresentationName(),6,7
net.sf.jabref.undo.UndoableRemoveEntry.getRedoPresentationName(),6,7
net.sf.jabref.undo.UndoableRemoveEntry.undo(),15,18
net.sf.jabref.undo.UndoableRemoveEntry.redo(),14,19
wsi.ra.tool.ResourceLoader.ResourceLoader(),4,6
wsi.ra.tool.ResourceLoader.instance(),6,15
wsi.ra.tool.ResourceLoader.getBytesFromResourceLocation(String),55,238
wsi.ra.tool.ResourceLoader.readLines(String),11,20
"wsi.ra.tool.ResourceLoader.readLines(String,boolean)",31,83
wsi.ra.tool.ResourceLoader.getBytesFromFile(String),31,87
wsi.ra.tool.ResourceLoader.getBytesFromStream(InputStream),21,43
net.sf.jabref.sql.SQLutil.getDBType(DBStrings),16,42
net.sf.jabref.sql.SQLutil.createJDBCurl(DBStrings),25,58
net.sf.jabref.sql.SQLutil.getJDBCdriver(DBStrings),18,33
net.sf.jabref.sql.SQLutil.connectToDB(DBStrings),33,55
"net.sf.jabref.sql.SQLutil.processDMLWithResults(Object,String)",27,53
"net.sf.jabref.sql.SQLutil.processDMLWithSingleResult(Connection,String)",18,32
"net.sf.jabref.sql.SQLutil.execDMLWithResults(Connection,String)",28,57
"net.sf.jabref.sql.SQLutil.processDML(Object,String)",22,44
"net.sf.jabref.sql.SQLutil.execDML(Connection,String)",27,55
net.sf.jabref.sql.SQLutil.getFields(),5,8
net.sf.jabref.sql.SQLutil.refreshFields(),26,73
"net.sf.jabref.sql.SQLutil.uniqueInsert(ArrayList<String>,String[])",16,50
"net.sf.jabref.sql.SQLutil.exportDatabase(BibtexDatabase,MetaData,Set<String>,String,DBTYPE)",39,102
"net.sf.jabref.sql.SQLutil.importDatabase(Set<String>,DBStrings)",19,46
"net.sf.jabref.sql.SQLutil.importDatabase_worker(DBTYPE,Set<String>,Connection)",57,284
"net.sf.jabref.sql.SQLutil.importGroupsTree(DBTYPE,MetaData,HashMap<String,BibtexEntry>,Connection)",65,240
"net.sf.jabref.sql.SQLutil.findGroupTypeName(String,Connection)",20,35
"net.sf.jabref.sql.SQLutil.exportDatabase(BibtexDatabase,MetaData,Set<String>,DBStrings)",36,101
"net.sf.jabref.sql.SQLutil.exportDatabase_worker(DBTYPE,BibtexDatabase,MetaData,Set<String>,Object)",32,81
"net.sf.jabref.sql.SQLutil.dmlCreateTables(DBTYPE,Object)",58,164
"net.sf.jabref.sql.SQLutil.fieldsAsCols(ArrayList<String>,String)",29,53
"net.sf.jabref.sql.SQLutil.dmlTable_mysql(String,String,Object)",58,184
"net.sf.jabref.sql.SQLutil.dmlTable_derby(String,String,Object)",56,182
net.sf.jabref.sql.SQLutil.dmlPopTab_GT(Object),35,57
net.sf.jabref.sql.SQLutil.dmlPopTab_ET(Object),41,113
"net.sf.jabref.sql.SQLutil.setFieldID(ArrayList<String>,ArrayList<String>,String[],String)",9,25
"net.sf.jabref.sql.SQLutil.dmlPopTab_FD(List<BibtexEntry>,Object)",41,94
"net.sf.jabref.sql.SQLutil.dmlPopTab_ST(BibtexDatabase,Object)",23,68
"net.sf.jabref.sql.SQLutil.dmlPopTab_GP(GroupTreeNode,Object)",10,15
"net.sf.jabref.sql.SQLutil.dmlPopTab_GP_worker(GroupTreeNode,int,int,Object)",48,137
"net.sf.jabref.sql.SQLutil.dmlPopTab_EG(GroupTreeNode,Object)",12,18
"net.sf.jabref.sql.SQLutil.dmlPopTab_EG_worker(GroupTreeNode,int,int,Object)",39,61
"net.sf.jabref.sql.SQLutil.getExceptionMessage(Exception,DBTYPE)",11,31
net.sf.jabref.sql.SQLutil.getExceptionMessage_MySQL(Exception),51,164
net.sf.jabref.gui.SortTabsAction.SortTabsAction(JabRefFrame),14,21
net.sf.jabref.gui.SortTabsAction.actionPerformed(ActionEvent),23,65
"net.sf.jabref.gui.SortTabsAction.compare(String,String)",3,6
"net.sf.jabref.util.Pair<P,V>.Pair(P,V)",5,6
"net.sf.jabref.util.Pair<P,V>.pCompare()",9,18
"net.sf.jabref.util.Pair<P,V>.pCompare().$1.compare(Pair<P,V>,Pair<P,V>)",3,8
"net.sf.jabref.util.Pair<P,V>.pCompare(Comparator<P>)",12,30
"net.sf.jabref.util.Pair<P,V>.pCompare(Comparator<P>).$2.compare(Pair<P>,Pair<P>)",4,9
"net.sf.jabref.util.Pair<P,V>.flip()",13,29
"net.sf.jabref.util.Pair<P,V>.flipList(List<Pair<P,V>>)",10,30
"net.sf.jabref.util.Pair<P,V>.disjointPartition(List<Pair<P,V>>)",30,114
"net.sf.jabref.util.Pair<P,V>.vCompare()",9,18
"net.sf.jabref.util.Pair<P,V>.vCompare().$3.compare(Pair<V>,Pair<V>)",3,8
"net.sf.jabref.util.Pair<P,V>.vCompare(Comparator<V>)",12,30
"net.sf.jabref.util.Pair<P,V>.vCompare(Comparator<V>).$4.compare(Pair<V>,Pair<V>)",4,9
"net.sf.jabref.util.Pair<P,V>.zip(List<P>,List<V>)",15,37
"net.sf.jabref.util.Pair<P,V>.pList(List<>)",9,26
"net.sf.jabref.util.Pair<P,V>.vList(List<>)",8,23
"net.sf.jabref.util.Pair<P,V>.iteratorV(Iterator<>)",4,12
"net.sf.jabref.util.Pair<P,V>.iteratorV(Iterator<>).$5.hasNext()",1,1
"net.sf.jabref.util.Pair<P,V>.iteratorV(Iterator<>).$5.next()",1,1
"net.sf.jabref.util.Pair<P,V>.iteratorV(Iterator<>).$5.remove()",2,3
"net.sf.jabref.util.Pair<P,V>.iterableV(Iterable<>)",2,9
"net.sf.jabref.util.Pair<P,V>.iterableV(Iterable<>).$6.iterator()",2,5
"net.sf.jabref.util.Pair<P,V>.iteratorP(Iterator<>)",4,12
"net.sf.jabref.util.Pair<P,V>.iteratorP(Iterator<>).$7.hasNext()",1,1
"net.sf.jabref.util.Pair<P,V>.iteratorP(Iterator<>).$7.next()",1,1
"net.sf.jabref.util.Pair<P,V>.iteratorP(Iterator<>).$7.remove()",2,3
"net.sf.jabref.util.Pair<P,V>.iterableP(Iterable<>)",2,9
"net.sf.jabref.util.Pair<P,V>.iterableP(Iterable<>).$8.iterator()",2,5
"net.sf.jabref.util.Pair<P,V>.toString()",7,16
"net.sf.jabref.util.Pair<P,V>.hashCode()",2,6
"net.sf.jabref.util.Pair<P,V>.equals(Object)",7,14
wsi.ra.tool.ExternalHelper.ExternalHelper(),4,4
wsi.ra.tool.ExternalHelper.getOperationSystemName(),20,42
"net.sf.jabref.undo.UndoableStringChange.UndoableStringChange(BasePanel,BibtexString,boolean,String,String)",8,27
net.sf.jabref.undo.UndoableStringChange.getUndoPresentationName(),8,17
net.sf.jabref.undo.UndoableStringChange.getRedoPresentationName(),8,17
net.sf.jabref.undo.UndoableStringChange.undo(),13,23
net.sf.jabref.undo.UndoableStringChange.redo(),12,23
"net.sf.jabref.imports.EntryFetcher.processQuery(String,ImportInspector,OutputPrinter)",29,44
net.sf.jabref.imports.EntryFetcher.getTitle(),6,8
net.sf.jabref.imports.EntryFetcher.getKeyName(),7,12
net.sf.jabref.imports.EntryFetcher.getIcon(),4,8
net.sf.jabref.imports.EntryFetcher.getHelpPage(),11,19
net.sf.jabref.imports.EntryFetcher.getOptionsPanel(),12,22
net.sf.jabref.gui.FileListTableModel.FileListTableModel(),4,4
net.sf.jabref.gui.FileListTableModel.getRowCount(),4,5
net.sf.jabref.gui.FileListTableModel.getColumnCount(),2,2
net.sf.jabref.gui.FileListTableModel.getColumnClass(int),3,5
"net.sf.jabref.gui.FileListTableModel.getValueAt(int,int)",12,25
net.sf.jabref.gui.FileListTableModel.getEntry(int),4,8
net.sf.jabref.gui.FileListTableModel.removeEntry(int),8,13
"net.sf.jabref.gui.FileListTableModel.addEntry(int,FileListEntry)",22,50
"net.sf.jabref.gui.FileListTableModel.addEntry(int,FileListEntry).$1.run()",6,7
"net.sf.jabref.gui.FileListTableModel.setValueAt(Object,int,int)",6,8
net.sf.jabref.gui.FileListTableModel.setContent(String),12,20
net.sf.jabref.gui.FileListTableModel.setContentDontGuessTypes(String),7,10
"net.sf.jabref.gui.FileListTableModel.setContent(String,boolean,boolean)",32,127
net.sf.jabref.gui.FileListTableModel.getFirstLabel(String),29,74
"net.sf.jabref.gui.FileListTableModel.decodeEntry(ArrayList<String>,boolean)",26,87
"net.sf.jabref.gui.FileListTableModel.getElementIfAvailable(ArrayList<String>,int)",8,13
net.sf.jabref.gui.FileListTableModel.getStringRepresentation(),16,39
net.sf.jabref.gui.FileListTableModel.getToolTipHTMLRepresentation(),20,50
net.sf.jabref.gui.FileListTableModel.encodeEntry(FileListEntry),11,32
net.sf.jabref.gui.FileListTableModel.encodeString(String),5,12
net.sf.jabref.gui.FileListTableModel.print(),7,25
net.sf.jabref.label.InproceedingsLabelRule.applyRule(BibtexEntry),36,134
net.sf.jabref.wizard.text.TagToMarkedTextStore.TagToMarkedTextStore(),10,14
"net.sf.jabref.wizard.text.TagToMarkedTextStore.appendPosition(String,int,int)",12,34
"net.sf.jabref.wizard.text.TagToMarkedTextStore.insertPosition(String,int,int)",12,34
"net.sf.jabref.wizard.text.TagToMarkedTextStore.setStyleForTag(String,String,StyledDocument)",21,48
"net.sf.jabref.remote.RemoteListener.RemoteListener(JabRef,ServerSocket)",7,12
net.sf.jabref.remote.RemoteListener.disable(),8,8
net.sf.jabref.remote.RemoteListener.run(),54,126
net.sf.jabref.remote.RemoteListener.openRemoteListener(JabRef),18,35
net.sf.jabref.remote.RemoteListener.sendToActiveJabRefInstance(String[]),56,108
net.sf.jabref.label.ArticleLabelRule.applyRule(BibtexEntry),55,183
net.sf.jabref.sql.DbConnectAction.DbConnectAction(BasePanel),4,7
net.sf.jabref.sql.DbConnectAction.getAction(),2,4
net.sf.jabref.sql.DbConnectAction.DbImpAction.actionPerformed(ActionEvent),3,5
net.sf.jabref.sql.DbConnectAction.action(),43,121
net.sf.jabref.util.EncryptionNotSupportedException.EncryptionNotSupportedException(String),4,6
tests.net.sf.jabref.UtilTest.testNCase(),5,13
tests.net.sf.jabref.UtilTest.testGetPublicationDate(),17,77
tests.net.sf.jabref.UtilTest.testCheckName(),6,29
tests.net.sf.jabref.UtilTest.testCreateNeutralId(),9,21
tests.net.sf.jabref.UtilTest.testPlaceDialog(),12,26
tests.net.sf.jabref.UtilTest.testParseField(),12,42
tests.net.sf.jabref.UtilTest.testShaveString(),6,37
tests.net.sf.jabref.UtilTest.testCheckLegalKey(),12,30
tests.net.sf.jabref.UtilTest.testReplaceSpecialCharacters(),13,23
tests.net.sf.jabref.UtilTest.testJoin(),7,24
tests.net.sf.jabref.UtilTest.testStripBrackets(),10,54
tests.net.sf.jabref.UtilTest.setUp(),50,73
tests.net.sf.jabref.UtilTest.testParseMethodCalls(),12,176
tests.net.sf.jabref.UtilTest.testFieldAndFormat(),18,81
tests.net.sf.jabref.UtilTest.testUserFieldAndFormat(),27,117
tests.net.sf.jabref.UtilTest.testExpandBrackets(),30,93
tests.net.sf.jabref.UtilTest.testSanitizeUrl(),27,154
tests.net.sf.jabref.UtilTest.test2to4DigitsYear(),11,60
tests.net.sf.jabref.UtilTest.testToMonthNumber(),27,220
tests.net.sf.jabref.UtilTest.testToUpperCharFirst(),5,30
net.sf.jabref.imports.PostOpenAction.isActionNecessary(ParserResult),12,15
"net.sf.jabref.imports.PostOpenAction.performAction(BasePanel,ParserResult)",27,39
"tests.net.sf.jabref.FileBasedTestCase.assertEqualPaths(String,String)",9,23
tests.net.sf.jabref.FileBasedTestCase.createTempDir(String),21,30
"tests.net.sf.jabref.FileBasedTestCase.createTempDir(String,File)",27,50
tests.net.sf.jabref.FileBasedTestCase.deleteRecursive(File),20,39
tests.net.sf.jabref.FileBasedTestCase.getBibtexEntry(),49,76
tests.net.sf.jabref.FileBasedTestCase.setUp(),42,251
tests.net.sf.jabref.FileBasedTestCase.tearDown(),16,22
tests.net.sf.jabref.FileBasedTestCase.testVoid(),3,3
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.setUp(),2,3
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.tearDown(),2,3
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.testComposite(),20,65
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.testComposite().$1.format(String),4,9
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.testComposite().$2.format(String),4,7
tests.net.sf.jabref.export.layout.format.CompositeFormatTest.testComposite().$3.format(String),4,7
"net.sf.jabref.wizard.text.gui.TextInputDialog.TextInputDialog(JabRefFrame,BasePanel,String,boolean,BibtexEntry)",32,50
net.sf.jabref.wizard.text.gui.TextInputDialog.jbInit(JabRefFrame),48,131
net.sf.jabref.wizard.text.gui.TextInputDialog.jbInit(JabRefFrame).$1.stateChanged(ChangeEvent),9,10
net.sf.jabref.wizard.text.gui.TextInputDialog.jbInit(JabRefFrame).$2.actionPerformed(ActionEvent),4,5
net.sf.jabref.wizard.text.gui.TextInputDialog.initRawPanel(),136,673
net.sf.jabref.wizard.text.gui.TextInputDialog.initButtonPanel(),21,51
net.sf.jabref.wizard.text.gui.TextInputDialog.initSourcePanel(),24,65
net.sf.jabref.wizard.text.gui.TextInputDialog.addStylesToDocument(StyledDocument),25,102
net.sf.jabref.wizard.text.gui.TextInputDialog.insertTextForTag(),48,142
net.sf.jabref.wizard.text.gui.TextInputDialog.okPressed(),1,2
net.sf.jabref.wizard.text.gui.TextInputDialog.actionPerformed(ActionEvent),12,21
net.sf.jabref.wizard.text.gui.TextInputDialog.updateSourceView(),23,35
net.sf.jabref.wizard.text.gui.TextInputDialog.getAllFields(),15,41
net.sf.jabref.wizard.text.gui.TextInputDialog.PasteAction.PasteAction(),7,10
net.sf.jabref.wizard.text.gui.TextInputDialog.PasteAction.actionPerformed(ActionEvent),24,45
net.sf.jabref.wizard.text.gui.TextInputDialog.LoadAction.LoadAction(),7,7
net.sf.jabref.wizard.text.gui.TextInputDialog.LoadAction.actionPerformed(ActionEvent),26,47
net.sf.jabref.wizard.text.gui.TextInputDialog.ClearAction.ClearAction(),6,6
net.sf.jabref.wizard.text.gui.TextInputDialog.ClearAction.actionPerformed(ActionEvent),6,8
net.sf.jabref.wizard.text.gui.TextInputDialog.MenuHeaderAction.MenuHeaderAction(),6,6
net.sf.jabref.wizard.text.gui.TextInputDialog.MenuHeaderAction.actionPerformed(ActionEvent),3,4
net.sf.jabref.wizard.text.gui.TextInputDialog.FieldListSelectionHandler.valueChanged(ListSelectionEvent),22,63
net.sf.jabref.wizard.text.gui.TextInputDialog.SimpleCellRenderer.SimpleCellRenderer(Font),8,17
"net.sf.jabref.wizard.text.gui.TextInputDialog.SimpleCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",39,88
net.sf.jabref.wizard.text.gui.TextInputDialog.FieldListMouseListener.mouseClicked(MouseEvent),8,9
net.sf.jabref.wizard.text.gui.PopupListener.PopupListener(JPopupMenu),4,8
net.sf.jabref.wizard.text.gui.PopupListener.mousePressed(MouseEvent),5,6
net.sf.jabref.wizard.text.gui.PopupListener.mouseReleased(MouseEvent),5,6
net.sf.jabref.wizard.text.gui.PopupListener.maybeShowPopup(MouseEvent),12,16
"net.sf.jabref.wizard.text.gui.BasicAction.BasicAction(String,String,URL)",11,19
"net.sf.jabref.wizard.text.gui.BasicAction.BasicAction(String,String,URL,KeyStroke)",14,26
net.sf.jabref.wizard.text.gui.BasicAction.BasicAction(String),6,7
"net.sf.jabref.wizard.text.gui.BasicAction.BasicAction(String,KeyStroke)",10,14
net.sf.jabref.wizard.text.gui.BasicAction.actionPerformed(ActionEvent),3,4
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testMakeLabelAndCheckLegalKeys(),42,306
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testMakeLabelAndCheckLegalKeysAccentGrave(),31,135
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testCheckLegalKey(),27,178
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testFirstAuthor(),23,47
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testAuthIniN(),18,98
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testFirstPage(),9,44
tests.net.sf.jabref.labelPattern.LabelPatternUtilTest.testLastPage(),9,44
tests.net.sf.jabref.export.layout.AllTests.suite(),11,36
tests.net.sf.jabref.export.layout.format.AuthorLastFirstAbbrCommasTest.testFormat(),27,74
"tests.net.sf.jabref.UtilFindFileTest.findFile(String,String)",6,12
tests.net.sf.jabref.UtilFindFileTest.testFindFileRelative(),23,80
tests.net.sf.jabref.UtilFindFileTest.testFindPdf(),20,60
tests.net.sf.jabref.UtilFindFileTest.testFindAssociatedFiles(),31,99
tests.net.sf.jabref.UtilFindFileTest.testFindPdfInMultiple(),25,235
tests.net.sf.jabref.UtilFindFileTest.testFindFile(),37,261
tests.net.sf.jabref.testutils.TestUtils.getInitializedJabRef(),25,51
tests.net.sf.jabref.testutils.TestUtils.closeJabRef(),10,18
tests.net.sf.jabref.testutils.TestUtils.disableSystemExit(),6,15
tests.net.sf.jabref.testutils.TestUtils.disableSystemExit().$1.checkPermission(Permission),6,10
tests.net.sf.jabref.testutils.TestUtils.enableSystemExit(),6,7
tests.net.sf.jabref.util.AllTests.suite(),13,37
"net.sf.jabref.sql.DBConnectDialog.DBConnectDialog(JFrame,DBStrings)",76,361
"net.sf.jabref.sql.DBConnectDialog.DBConnectDialog(JFrame,DBStrings).$1.actionPerformed(ActionEvent)",16,29
"net.sf.jabref.sql.DBConnectDialog.DBConnectDialog(JFrame,DBStrings).$2.actionPerformed(ActionEvent)",7,9
net.sf.jabref.sql.DBConnectDialog.checkInput(),30,85
net.sf.jabref.sql.DBConnectDialog.storeSettings(),24,54
net.sf.jabref.sql.DBConnectDialog.getDBStrings(),1,3
net.sf.jabref.sql.DBConnectDialog.setDBStrings(DBStrings),2,6
net.sf.jabref.sql.DBConnectDialog.getConnectToDB(),1,2
net.sf.jabref.sql.DBConnectDialog.setConnectToDB(boolean),2,5
"net.sf.jabref.util.TypeOr<S,T>.TypeOr(S,T)",4,4
"net.sf.jabref.util.TypeOr<S,T>.isS()",0,0
"net.sf.jabref.util.TypeOr<S,T>.isT()",0,0
tests.net.sf.jabref.export.layout.format.BibtexNameLayoutFormatterTest.testFormatStringStringBibtexEntry(),19,68
tests.net.sf.jabref.export.layout.format.BibtexNameLayoutFormatterTest.testFormat(),18,109
net.sf.jabref.msbib.MSBibEntry.MSBibEntry(),2,2
net.sf.jabref.msbib.MSBibEntry.MSBibEntry(BibtexEntry),4,8
"net.sf.jabref.msbib.MSBibEntry.MSBibEntry(Element,String)",7,10
"net.sf.jabref.msbib.MSBibEntry.getFromXml(String,Element)",15,27
"net.sf.jabref.msbib.MSBibEntry.populateFromXml(Element,String)",84,428
net.sf.jabref.msbib.MSBibEntry.populateFromBibtex(BibtexEntry),99,658
net.sf.jabref.msbib.MSBibEntry.format(String),8,17
net.sf.jabref.msbib.MSBibEntry.getLCID(String),14,18
net.sf.jabref.msbib.MSBibEntry.getLanguage(int),15,20
"net.sf.jabref.msbib.MSBibEntry.getSpecificAuthors(String,Element,String)",25,137
"net.sf.jabref.msbib.MSBibEntry.getAuthors(Element,String)",35,115
net.sf.jabref.msbib.MSBibEntry.getAuthors(String),12,33
net.sf.jabref.msbib.MSBibEntry.getDate(BibtexEntry),10,26
net.sf.jabref.msbib.MSBibEntry.getMSBibSourceType(BibtexEntry),30,173
net.sf.jabref.msbib.MSBibEntry.getDOMrepresentation(),9,18
"net.sf.jabref.msbib.MSBibEntry.addField(Document,Element,String,String)",29,64
"net.sf.jabref.msbib.MSBibEntry.addAuthor(Document,Element,String,List<PersonName>)",23,81
"net.sf.jabref.msbib.MSBibEntry.addAdrress(Document,Element,String)",64,95
"net.sf.jabref.msbib.MSBibEntry.addDate(Document,Element,String,String)",28,51
net.sf.jabref.msbib.MSBibEntry.getDOMrepresentation(Document),108,495
"net.sf.jabref.msbib.MSBibEntry.parseSingleStandardNumber(String,String,String,HashMap<String,String>)",21,32
"net.sf.jabref.msbib.MSBibEntry.parseStandardNumber(String,HashMap<String,String>)",12,38
"net.sf.jabref.msbib.MSBibEntry.addAuthor(HashMap<String,String>,String,List<PersonName>)",14,35
net.sf.jabref.msbib.MSBibEntry.mapMSBibToBibtexType(String),31,165
net.sf.jabref.msbib.MSBibEntry.getBibtexRepresentation(),139,608
net.sf.jabref.msbib.MSBibEntry.stripNonValidXMLCharacters(String),22,39
net.sf.jabref.msbib.MSBibEntry.toString(),25,45
net.sf.jabref.net.URLDownload.URLDownload(URL),13,23
"net.sf.jabref.net.URLDownload.URLDownload(Component,URL,File)",13,35
net.sf.jabref.net.URLDownload.setCookieHandler(),16,27
net.sf.jabref.net.URLDownload.getMimeType(),3,5
net.sf.jabref.net.URLDownload.getURLConnection(),3,5
net.sf.jabref.net.URLDownload.getStringContent(),13,17
net.sf.jabref.net.URLDownload.openConnectionOnly(),13,17
net.sf.jabref.net.URLDownload.download(),17,23
net.sf.jabref.net.URLDownload.downloadToString(),15,31
net.sf.jabref.net.URLDownload.downloadToFile(),14,34
"net.sf.jabref.net.URLDownload.copy(InputStream,OutputStream)",15,27
"net.sf.jabref.net.URLDownload.copy(InputStream,Writer)",17,33
tests.net.sf.jabref.export.layout.format.AuthorFirstLastOxfordCommasTest.testFormat(),27,83
net.sf.jabref.imports.ScienceDirectFetcher.getHelpPage(),6,6
net.sf.jabref.imports.ScienceDirectFetcher.getIcon(),5,7
net.sf.jabref.imports.ScienceDirectFetcher.getKeyName(),6,6
net.sf.jabref.imports.ScienceDirectFetcher.getOptionsPanel(),2,5
net.sf.jabref.imports.ScienceDirectFetcher.getTitle(),7,8
net.sf.jabref.imports.ScienceDirectFetcher.stopFetching(),4,6
"net.sf.jabref.imports.ScienceDirectFetcher.processQuery(String,ImportInspector,OutputPrinter)",37,72
net.sf.jabref.imports.ScienceDirectFetcher.getCitations(String),24,57
"net.sf.jabref.imports.ScienceDirectFetcher.getCitationsFromUrl(String,List<String>)",19,55
"net.sf.jabref.undo.UndoableInsertString.UndoableInsertString(BasePanel,BibtexDatabase,BibtexString)",7,18
net.sf.jabref.undo.UndoableInsertString.getUndoPresentationName(),7,11
net.sf.jabref.undo.UndoableInsertString.getRedoPresentationName(),7,11
net.sf.jabref.undo.UndoableInsertString.undo(),9,12
net.sf.jabref.undo.UndoableInsertString.redo(),14,18
tests.net.sf.jabref.bst.TextPrefixFunctionTest.testPrefix(),19,28
"tests.net.sf.jabref.bst.TextPrefixFunctionTest.assertPrefix(String,String)",6,14
"tests.net.sf.jabref.bst.TextPrefixFunctionTest.assertPrefix(String,String).$1.warn(String)",5,8
net.sf.jabref.imports.MedlineImporter.getFormatName(),4,6
net.sf.jabref.imports.MedlineImporter.getCLIId(),8,9
net.sf.jabref.imports.MedlineImporter.isRecognizedFormat(InputStream),19,29
net.sf.jabref.imports.MedlineImporter.fetchMedline(String),37,60
net.sf.jabref.imports.MedlineImporter.importEntries(InputStream),61,133
tests.net.sf.jabref.export.layout.format.HTMLParagraphsTest.testFormat(),11,38
"net.sf.jabref.undo.UndoablePreambleChange.UndoablePreambleChange(BibtexDatabase,BasePanel,String,String)",9,21
net.sf.jabref.undo.UndoablePreambleChange.getUndoPresentationName(),8,11
net.sf.jabref.undo.UndoablePreambleChange.getRedoPresentationName(),8,11
net.sf.jabref.undo.UndoablePreambleChange.undo(),10,14
net.sf.jabref.undo.UndoablePreambleChange.redo(),9,14
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testFormatName(),28,194
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testFormatName().$1.warn(String),3,3
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testFormatName().$2.warn(String),3,3
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testFormatName().$3.warn(String),3,3
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testFormatName().$4.warn(String),3,3
"tests.net.sf.jabref.bst.BibtexNameFormatterTest.assertNameFormat(String,String,int,String)",7,18
"tests.net.sf.jabref.bst.BibtexNameFormatterTest.assertNameFormat(String,String,int,String).$5.warn(String)",3,3
"tests.net.sf.jabref.bst.BibtexNameFormatterTest.assertNameFormatC(String,String)",3,10
"tests.net.sf.jabref.bst.BibtexNameFormatterTest.assertNameFormatB(String,String)",3,10
"tests.net.sf.jabref.bst.BibtexNameFormatterTest.assertNameFormatA(String,String)",3,10
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testConsumeToMatchingBrace(),13,52
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testGetFirstCharOfString(),8,29
tests.net.sf.jabref.bst.BibtexNameFormatterTest.testNumberOfChars(),8,45
net.sf.jabref.util.XMPSchemaBibtex.XMPSchemaBibtex(XMPMetadata),11,19
"net.sf.jabref.util.XMPSchemaBibtex.XMPSchemaBibtex(Element,String)",11,17
net.sf.jabref.util.XMPSchemaBibtex.makeProperty(String),4,8
net.sf.jabref.util.XMPSchemaBibtex.getPersonList(String),10,15
"net.sf.jabref.util.XMPSchemaBibtex.setPersonList(String,String)",15,31
net.sf.jabref.util.XMPSchemaBibtex.getTextProperty(String),4,9
"net.sf.jabref.util.XMPSchemaBibtex.setTextProperty(String,String)",6,13
net.sf.jabref.util.XMPSchemaBibtex.getBagList(String),5,12
"net.sf.jabref.util.XMPSchemaBibtex.removeBagValue(String,String)",6,15
"net.sf.jabref.util.XMPSchemaBibtex.addBagValue(String,String)",6,15
net.sf.jabref.util.XMPSchemaBibtex.getSequenceList(String),6,12
"net.sf.jabref.util.XMPSchemaBibtex.removeSequenceValue(String,String)",7,15
"net.sf.jabref.util.XMPSchemaBibtex.addSequenceValue(String,String)",7,15
net.sf.jabref.util.XMPSchemaBibtex.getSequenceDateList(String),8,15
"net.sf.jabref.util.XMPSchemaBibtex.removeSequenceDateValue(String,Calendar)",9,17
"net.sf.jabref.util.XMPSchemaBibtex.addSequenceDateValue(String,Calendar)",8,15
net.sf.jabref.util.XMPSchemaBibtex.getContents(NodeList),17,44
"net.sf.jabref.util.XMPSchemaBibtex.getAllProperties(XMPSchema,String)",84,234
net.sf.jabref.util.XMPSchemaBibtex.setBibtexEntry(BibtexEntry),3,10
"net.sf.jabref.util.XMPSchemaBibtex.setBibtexEntry(BibtexEntry,BibtexDatabase)",37,90
net.sf.jabref.util.XMPSchemaBibtex.getBibtexEntry(),16,43
net.sf.jabref.util.XMPSchemaBibtex.getTextContent(Node),27,55
"net.sf.jabref.wizard.integrity.gui.IntegrityWizard.IntegrityWizard(JabRefFrame,BasePanel)",17,27
net.sf.jabref.wizard.integrity.gui.IntegrityWizard.jbInit(),69,240
net.sf.jabref.wizard.integrity.gui.IntegrityWizard.actionPerformed(ActionEvent),17,29
net.sf.jabref.wizard.integrity.gui.IntegrityWizard.actionPerformed(ActionEvent).$1.run(),6,6
tests.net.sf.jabref.export.layout.format.AuthorOrgSciTest.setUp(),2,3
tests.net.sf.jabref.export.layout.format.AuthorOrgSciTest.tearDown(),2,3
tests.net.sf.jabref.export.layout.format.AuthorOrgSciTest.testOrgSci(),17,29
tests.net.sf.jabref.export.layout.format.AuthorOrgSciTest.testOrgSciPlusAbbreviation(),22,35
tests.net.sf.jabref.imports.BibtexParserTest.testParseReader(),24,45
tests.net.sf.jabref.imports.BibtexParserTest.testBibtexParser(),8,10
tests.net.sf.jabref.imports.BibtexParserTest.testIsRecognizedFormat(),45,144
tests.net.sf.jabref.imports.BibtexParserTest.testFromString(),21,54
tests.net.sf.jabref.imports.BibtexParserTest.testFromSingle2(),26,72
tests.net.sf.jabref.imports.BibtexParserTest.testFromStringSingle(),22,62
tests.net.sf.jabref.imports.BibtexParserTest.testParse(),26,56
tests.net.sf.jabref.imports.BibtexParserTest.testParse2(),24,62
tests.net.sf.jabref.imports.BibtexParserTest.testBigNumbers(),23,38
tests.net.sf.jabref.imports.BibtexParserTest.testBigNumbers2(),31,73
tests.net.sf.jabref.imports.BibtexParserTest.testNewlineHandling(),35,68
tests.net.sf.jabref.imports.BibtexParserTest.testFileNaming(),33,48
tests.net.sf.jabref.imports.BibtexParserTest.testFileNaming1(),34,48
tests.net.sf.jabref.imports.BibtexParserTest.testFileNaming3(),34,48
tests.net.sf.jabref.export.layout.format.AuthorFirstFirstTest.testFormat(),20,34
tests.net.sf.jabref.export.layout.LayoutTest.setUp(),9,13
tests.net.sf.jabref.export.layout.LayoutTest.t1BibtexString(),33,34
tests.net.sf.jabref.export.layout.LayoutTest.t1BibtexEntry(),4,11
tests.net.sf.jabref.export.layout.LayoutTest.bibtexString2BibtexEntry(String),14,25
"tests.net.sf.jabref.export.layout.LayoutTest.layout(String,String)",15,39
tests.net.sf.jabref.export.layout.LayoutTest.testLayoutBibtextype(),11,29
tests.net.sf.jabref.export.layout.LayoutTest.testHTMLChar(),14,58
tests.net.sf.jabref.export.layout.LayoutTest.testPluginLoading(),18,28
tests.net.sf.jabref.export.layout.LayoutTest.testLayout(),19,30
tests.net.sf.jabref.imports.IsiImporterTest.setUp(),8,11
tests.net.sf.jabref.imports.IsiImporterTest.tearDown(),2,3
tests.net.sf.jabref.imports.IsiImporterTest.testIsRecognizedFormat(),11,60
tests.net.sf.jabref.imports.IsiImporterTest.testProcessSubSup(),13,100
tests.net.sf.jabref.imports.IsiImporterTest.testImportEntries(),30,80
tests.net.sf.jabref.imports.IsiImporterTest.testImportEntriesINSPEC(),110,260
tests.net.sf.jabref.imports.IsiImporterTest.testImportEntriesWOS(),30,71
tests.net.sf.jabref.imports.IsiImporterTest.testIsiAuthorsConvert(),24,64
tests.net.sf.jabref.imports.IsiImporterTest.testMonthConvert(),9,52
tests.net.sf.jabref.imports.IsiImporterTest.testIsiAuthorConvert(),11,84
tests.net.sf.jabref.imports.IsiImporterTest.testGetExtensions(),4,5
tests.net.sf.jabref.imports.IsiImporterTest.testGetIsCustomImporter(),5,12
tests.net.sf.jabref.imports.IsiImporterTest.testImportIEEEExport(),102,170
tests.net.sf.jabref.imports.IsiImporterTest.testImportEntriesMedline(),72,145
tests.net.sf.jabref.search.AllTests.suite(),10,23
