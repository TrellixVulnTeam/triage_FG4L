<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:30:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-310/BOOKKEEPER-310.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-310] Changes in hedwig server to support JMS spec</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-310</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;The primary changes are :&lt;/p&gt;

&lt;p&gt;a) Support modified protocol changes (optional body).&lt;br/&gt;
b) Return the published message&apos;s seq-id in the response.&lt;br/&gt;
c) Minor bugfix to Array indexing in bucket which was triggered in a testcase.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12595483">BOOKKEEPER-310</key>
            <summary>Changes in hedwig server to support JMS spec</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12595480">BOOKKEEPER-308</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mridulm80">Mridul Muralidharan</assignee>
                                    <reporter username="mridulm80">Mridul Muralidharan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Jun 2012 21:57:20 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:54 +0000</updated>
                            <resolved>Mon, 30 Jul 2012 16:22:57 +0100</resolved>
                                                    <fixVersion>4.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13398861" author="mridulm80" created="Thu, 21 Jun 2012 22:16:46 +0100"  >&lt;p&gt;Implements the changes mentioned in description&lt;/p&gt;</comment>
                            <comment id="13400495" author="ikelly" created="Mon, 25 Jun 2012 15:10:00 +0100"  >&lt;p&gt;The server config shouldn&apos;t be changed to standalone by default. This makes hedwig use the local derby persistent storage, which is incomplete.&lt;/p&gt;

&lt;p&gt;There are TODOs with text &quot;Fix this&quot;. If the fix is too big to do in this JIRA, put a description of what is broken so that the next person to see the TODO will know where to start.&lt;/p&gt;

&lt;p&gt;You should open a JIRA for updating the hedwig console.&lt;/p&gt;</comment>
                            <comment id="13400497" author="ikelly" created="Mon, 25 Jun 2012 15:10:15 +0100"  >&lt;p&gt;Otherwise, patch is good though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13400641" author="mridulm80" created="Mon, 25 Jun 2012 17:56:33 +0100"  >

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I thought the standalone was commented out ? I think I had that in some earlier commit as part of testing since zookeeper (default) mode lead to a lot of server crashes (lost connection to zookeeper type errors).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The changes to helper methods become relevant when properties get used in testcases. As of now, since they are not, it is not yet a problem.&lt;br/&gt;
But you are right, as soon as the new protocol changes get more widely used and tested, those two methods will need to be changed.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Are there any issues with the way seq-id is compared/returned for a publish ?&lt;br/&gt;
I was unsure of whether I was doing the right thing, and whether I was doing enough of the right thing (like in a multi-colo deployment, etc).&lt;/p&gt;


&lt;p&gt;Thanks for the review Ivan !&lt;/p&gt;</comment>
                            <comment id="13401940" author="hustlmsp" created="Wed, 27 Jun 2012 04:37:06 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;code-comment&quot;&gt;// more than 10s
&lt;/span&gt;                 bucket = 3 * 9 + 1;
             }
-            ++latencyBuckets[bucket];
+            &lt;span class=&quot;code-comment&quot;&gt;// This threw java.lang.ArrayIndexOutOfBoundsException: &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; me in a test.
&lt;/span&gt;+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bucket &amp;lt; latencyBuckets.length) ++latencyBuckets[bucket];
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;could you provide more infos about this issue? I don&apos;t think it should over bound.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
b) Return the published message&apos;s seq-id in the response.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seems you separated the protocol change and code change in different jiras. it is not easy to review. so a better idea to create a jira like &apos;support returning seq-id for publish requests&apos; to include the protocol change, code change and test cases together.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -138,6 +201,9 @@ message PubSubResponse{
     optional Message message = 5;
     optional bytes topic = 6;
     optional bytes subscriberId = 7;
+
+    &lt;span class=&quot;code-comment&quot;&gt;// If the request was a publish request, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; was the message Id of the published message.
&lt;/span&gt;+    optional MessageSeqId publishedMsgId = 8;
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It would be better to have a generic field called &apos;respBody&apos; to adapt different response body for different requests, otherwise we have to put lots of optional fields in PubSubResponse for different requests. since PubSubResponse is also used for Message delivery, it should not put too many fields in future changes.&lt;/p&gt;

&lt;p&gt;so a better solution is&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
message PublishResponse {
    required MessageSeqId publishedMsgId = 2;
}

message ResponseBody {
    optional PublishResponse pubResponse = 2;
}

message PubSubResponse{
    required ProtocolVersion protocolVersion = 1;
    required StatusCode statusCode = 2;
    required uint64 txnId = 3;
    
    
    optional string statusMsg = 4;
    &lt;span class=&quot;code-comment&quot;&gt;//in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; of a status code of NOT_RESPONSIBLE_FOR_TOPIC, the status
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;//message will contain the name of the host actually responsible 
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the topic
&lt;/span&gt;    
    &lt;span class=&quot;code-comment&quot;&gt;//the following fields are sent in delivered messages
&lt;/span&gt;    optional Message message = 5;
    optional bytes topic = 6;
    optional bytes subscriberId = 7;

    &lt;span class=&quot;code-comment&quot;&gt;// the following fields are sent by other requests
&lt;/span&gt;    optional ResponseBody respBody = 8;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so if we want to add response for other type requests, we could add optional fields in ResponseBody. Actually it is what we did in a message filter feature we are working on, to return subscription preferences in subscribe response.&lt;/p&gt;

</comment>
                            <comment id="13402161" author="mridulm80" created="Wed, 27 Jun 2012 13:03:40 +0100"  >&lt;blockquote&gt;&lt;p&gt;could you provide more infos about this issue? I don&apos;t think it should over bound.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This was observed as part of a test run - since the fix was obvious, i did not try to debug it further.&lt;br/&gt;
Unfortunately, I do not have the test details now.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;seems you separated the protocol change and code change in different jiras. it is not easy to review. so a better idea to create a jira like &apos;support returning seq-id for publish requests&apos; to include the protocol change, code change and test cases together.&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;The jira&apos;s are split along the modules they impact (from the initial idea of one mega-jira &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;br/&gt;
I did not want to create a lot of issues to handle all the individual changes; since they are collectively required for the jms provider to function. In addition, since the changes are interdependent at times, it is not possible to always tease the changes apart - so left them as such.&lt;/p&gt;

&lt;p&gt;If it is becoming a problem to review, I can consider splitting them further.&lt;/p&gt;



&lt;blockquote&gt;&lt;p&gt;It would be better to have a generic field called &apos;respBody&apos; to adapt different response body for different requests, otherwise we have to put lots of optional fields in PubSubResponse for different requests. since PubSubResponse is also used for Message delivery, it should not put too many fields in future changes.&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;I agree, adding a new ResponseBody will minimize future changes; while allowing us to extend to return other values in future.&lt;/p&gt;
</comment>
                            <comment id="13402773" author="hustlmsp" created="Thu, 28 Jun 2012 02:44:55 +0100"  >&lt;blockquote&gt;
&lt;p&gt;This was observed as part of a test run - since the fix was obvious, i did not try to debug it further.&lt;br/&gt;
Unfortunately, I do not have the test details now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think the fix was obvious. since the number of buckets is 3 * 9 + 2, the bucket index should not be large than it. your fix is not on the root cause. Finding root cause is more important before a fix.&lt;/p&gt;</comment>
                            <comment id="13402909" author="mridulm80" created="Thu, 28 Jun 2012 08:40:04 +0100"  >&lt;p&gt;If it is unexpected, you could try rerunning the tests target in jms client to see if it can be reproduced - unfortunately it is not consistently observed always.&lt;br/&gt;
I do not have details of the testrun anymore.&lt;/p&gt;</comment>
                            <comment id="13407610" author="mridulm80" created="Fri, 6 Jul 2012 00:50:57 +0100"  >&lt;p&gt;Very minor changes to server compared to earlier version - essentially to revert the changes related to optional body.&lt;br/&gt;
It is back to being mandatory now (as earlier).&lt;/p&gt;</comment>
                            <comment id="13409233" author="hustlmsp" created="Mon, 9 Jul 2012 08:14:15 +0100"  >&lt;p&gt;reviews for hedwig to support returning message seq id for publish requests are listed as below:&lt;/p&gt;

&lt;p&gt;1) protocol changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; PubSubResponse getSuccessResponse(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txnId, PubSubProtocol.MessageSeqId publishedMessageSeqId) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; == publishedMessageSeqId) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getBasicBuilder(StatusCode.SUCCESS).setTxnId(txnId).build();
+        PubSubProtocol.PublishResponse publishResponse = PubSubProtocol.PublishResponse.newBuilder().setPublishedMsgId(publishedMessageSeqId).build();
+        PubSubProtocol.ResponseBody responseBody = PubSubProtocol.ResponseBody.newBuilder().setPublishResponse(publishResponse).build();
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getBasicBuilder(StatusCode.SUCCESS).setTxnId(txnId).setResponseBody(responseBody).build();
+    }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I would be better to provide a common help method to convert ResponseBody to PubSubResponse. And for PublishResponse, there is special help method to form PublishResponse. It might be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// convert response body to pubsub response.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; PubSubResponse getSuccessResponse(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txnId, PubSubProtocol.ResponseBody respBody);

&lt;span class=&quot;code-comment&quot;&gt;// form publish response
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; PubSubProtocol.ResponseBody.Builder getPublishResponse(PubSubProtocol.MessageSeqId publishedMessageSeqId);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) server changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-310&quot; title=&quot;Changes in hedwig server to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-310&quot;&gt;&lt;del&gt;BOOKKEEPER-310&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-            ++latencyBuckets[bucket];
+            &lt;span class=&quot;code-comment&quot;&gt;// This threw java.lang.ArrayIndexOutOfBoundsException: &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; me in a test.
&lt;/span&gt;+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bucket &amp;lt; latencyBuckets.length) ++latencyBuckets[bucket];
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the ArrayIndexOutOfBoundsException is due to time changed, so a negative latency is passed. it would be fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-327&quot; title=&quot;System.currentTimeMillis usage in BookKeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-327&quot;&gt;&lt;del&gt;BOOKKEEPER-327&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-330&quot; title=&quot;System.currentTimeMillis usage in Hedwig&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-330&quot;&gt;&lt;del&gt;BOOKKEEPER-330&lt;/del&gt;&lt;/a&gt; for both hedwig and bookkeeper.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
message.getBody();
+                &lt;span class=&quot;code-comment&quot;&gt;// Optional to have body : not sure why the dangling call exists ! Flush state ?
&lt;/span&gt;+                &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (message.hasBody()) message.getBody();&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seems body is a required field for Message. is there anything special you considered?&lt;/p&gt;


</comment>
                            <comment id="13409259" author="hustlmsp" created="Mon, 9 Jul 2012 08:58:38 +0100"  >&lt;p&gt;I forgot to say that it would be better to have test cases to test returning message seq id for publish requests.&lt;/p&gt;</comment>
                            <comment id="13409327" author="mridulm80" created="Mon, 9 Jul 2012 12:01:33 +0100"  >&lt;blockquote&gt;&lt;p&gt;1) protocol changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It was my oversight that I did not realize it was a publically exposed api between modules ! Should have looked at the diff&apos;s more carefully, my apolgoes.&lt;br/&gt;
Actually there is no reason for it to exist in protocol and can be easily moved as a private method within PublishHandler.&lt;br/&gt;
Will that be fine ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;seems body is a required field for Message. is there anything special you considered?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I had made body optional in an earlier change, but reverted following Ivan&apos;s comment.&lt;br/&gt;
The commented out code slipped my cleanup.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;I forgot to say that it would be better to have test cases to test returning message seq id for publish requests.&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;I dont have specific testcases, but then quite a lot of activemq testcases in JMS provider module will fail if seq-id is not returned &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Some of them even try to correlate between publisher and consumer : though I think in a clustered deployment, this will fail - so we might need to relook at these testcases in future anyway ...&lt;/p&gt;


&lt;p&gt;I will try to find a publish/subscribe() testcase in server and add an assert to check for the published seq-id.&lt;/p&gt;
</comment>
                            <comment id="13409331" author="hustlmsp" created="Mon, 9 Jul 2012 12:11:43 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Actually there is no reason for it to exist in protocol and can be easily moved as a private method within PublishHandler.&lt;br/&gt;
Will that be fine ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it is OK to put publishResponse in PublishHandler.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I dont have specific testcases, but then quite a lot of activemq testcases in JMS provider module will fail if seq-id is not returned &lt;br/&gt;
I will try to find a publish/subscribe() testcase in server and add an assert to check for the published seq-id.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;when you added a feature, it would better to add test cases for the feature added itself. so the testcases could be in existed test suites to check return seq-id. &lt;/p&gt;</comment>
                            <comment id="13413131" author="mridulm80" created="Thu, 12 Jul 2012 20:56:00 +0100"  >&lt;p&gt;Removed all spurious and non essential changes to server.&lt;br/&gt;
The patch now contains only changes to return seq-id for published messages.&lt;/p&gt;</comment>
                            <comment id="13413181" author="mridulm80" created="Thu, 12 Jul 2012 21:50:09 +0100"  >&lt;p&gt;Please note that the protocol change is in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt; along with metadata changes.&lt;br/&gt;
The actual protocol changes are what are detailed in the review comments - so nothing else new there.&lt;/p&gt;</comment>
                            <comment id="13414744" author="mridulm80" created="Sun, 15 Jul 2012 20:24:42 +0100"  >&lt;p&gt;Incorporate review comments - specifically :&lt;br/&gt;
a) Move to latest apache bookkeeper trunk rev&lt;br/&gt;
b) add test case for publish to check if seq-id is returned.&lt;br/&gt;
c) Fix TestBookKeeperPersistenceManager.java to use modified generic type.&lt;/p&gt;</comment>
                            <comment id="13414897" author="hustlmsp" created="Mon, 16 Jul 2012 08:29:28 +0100"  >&lt;p&gt;the patch is quite good except test cases.&lt;/p&gt;

&lt;p&gt;A better test case is to check whether the MessageSeqId returned by published requests equals to the MessageSeqId received by a subscriber. Just asserting whether it is null doesn&apos;t make sense.&lt;/p&gt;

&lt;p&gt;Especially for async publish, you&apos;d better concurrently async publish several messages and check their message seq id are right and same as the message seq id received by subscriber. to make sure publish request doesn&apos;t return wrong message seq id.&lt;/p&gt;</comment>
                            <comment id="13414948" author="mridulm80" created="Mon, 16 Jul 2012 10:16:35 +0100"  >
&lt;p&gt;The testcases you mention are already present under activemq&apos;s testcases under jms provider : I think I already specified this earlier. &lt;br/&gt;
The caveat is that it wont work in a clustered deployment due to changes in seq-id in remote server (if I understood it right) - the jms testcase does not depend on this.&lt;br/&gt;
I am not sure what codepaths this testcase tests (or is extended to test), but did not want to make changes which will limit its usability.&lt;br/&gt;
If that is not the case, we can add some rudimentary checks on the seq-id.&lt;/p&gt;
</comment>
                            <comment id="13414954" author="hustlmsp" created="Mon, 16 Jul 2012 10:31:40 +0100"  >&lt;p&gt;@Mridul, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The testcases you mention are already present under activemq&apos;s testcases under jms provider : I think I already specified this earlier. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As I commented before, this feature is a general feature added for hedwig client not only for jms clinet. so we had to ensure it works correctly from hedwig client perspective. so a robust test case would be necessary for it.&lt;/p&gt;

&lt;p&gt;I wrote a case in TestPubSubClient (hedwig-server) module as below. Does it make sense to you?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    @Test
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testAsyncPublishWithResponse() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
+        ByteString topic = ByteString.copyFromUtf8(&lt;span class=&quot;code-quote&quot;&gt;&quot;testAsyncPublishWithResponse&quot;&lt;/span&gt;);
+        ByteString subid = ByteString.copyFromUtf8(&lt;span class=&quot;code-quote&quot;&gt;&quot;mysubid&quot;&lt;/span&gt;);
+
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix = &lt;span class=&quot;code-quote&quot;&gt;&quot;AsyncMessage-&quot;&lt;/span&gt;;
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numMessages = 30;
+
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AtomicInteger numPublished = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicInteger(0);
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CountDownLatch publishLatch = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(1);
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MessageSeqId&amp;gt; publishedMsgs =
+            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MessageSeqId&amp;gt;();
+
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; AtomicInteger numReceived = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicInteger(0);
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CountDownLatch receiveLatch = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(1);
+        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MessageSeqId&amp;gt; receivedMsgs =
+            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, MessageSeqId&amp;gt;();
+
+        subscriber.subscribe(topic, subid, CreateOrAttach.CREATE_OR_ATTACH);
+        subscriber.startDelivery(topic, subid, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageHandler() {
+            &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void deliver(ByteString topic, ByteString subscriberId,
+                                             Message msg, Callback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; callback,
+                                             &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; context) {
+                &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; str = msg.getBody().toStringUtf8();
+                receivedMsgs.put(str, msg.getMsgId()); 
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (numMessages == numReceived.incrementAndGet()) {
+                    receiveLatch.countDown();
+                }
+                callback.operationFinished(context, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+            }
+        });
+
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0; i&amp;lt;numMessages; i++) {
+            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; str = prefix + i;
+            ByteString data = ByteString.copyFromUtf8(str);
+            Message msg = Message.newBuilder().setBody(data).build();
+            publisher.asyncPublishWithResponse(topic, msg, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;PublishResponse&amp;gt;() {
+                @Override
+                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationFinished(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx, PublishResponse response) {
+                    publishedMsgs.put(str, response.getPublishedMsgId());
+                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (numMessages == numPublished.incrementAndGet()) {
+                        publishLatch.countDown();
+                    }
+                }
+                @Override
+                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationFailed(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; PubSubException exception) {
+                    publishLatch.countDown();
+                }
+            }, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+        }
+        assertTrue(&lt;span class=&quot;code-quote&quot;&gt;&quot;Timed out waiting on callback &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; publish requests.&quot;&lt;/span&gt;,
+                   publishLatch.await(10, TimeUnit.SECONDS));
+        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Should be expected &quot;&lt;/span&gt; + numMessages + &lt;span class=&quot;code-quote&quot;&gt;&quot; publishes.&quot;&lt;/span&gt;,
+                     numMessages, numPublished.get());
+        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Should be expected &quot;&lt;/span&gt; + numMessages + &lt;span class=&quot;code-quote&quot;&gt;&quot; publishe responses.&quot;&lt;/span&gt;,
+                     numMessages, publishedMsgs.size());
+
+        assertTrue(&lt;span class=&quot;code-quote&quot;&gt;&quot;Timed out waiting on callback &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; messages.&quot;&lt;/span&gt;,
+                   receiveLatch.await(30, TimeUnit.SECONDS));
+        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Should be expected &quot;&lt;/span&gt; + numMessages + &lt;span class=&quot;code-quote&quot;&gt;&quot; messages.&quot;&lt;/span&gt;,
+                     numMessages, numReceived.get());
+        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Should be expected &quot;&lt;/span&gt; + numMessages + &lt;span class=&quot;code-quote&quot;&gt;&quot; messages in map.&quot;&lt;/span&gt;,
+                     numMessages, receivedMsgs.size());
+
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0; i&amp;lt;numMessages; i++) {
+            &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; str = prefix + i;
+            MessageSeqId pubId = publishedMsgs.get(str);
+            MessageSeqId revId = receivedMsgs.get(str);
+            assertTrue(&lt;span class=&quot;code-quote&quot;&gt;&quot;Doesn&apos;t receive same message seq id &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + str,
+                       pubId.equals(revId));
+        }
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13414974" author="mridulm80" created="Mon, 16 Jul 2012 11:02:32 +0100"  >&lt;p&gt;Assuming single server hedwig deployment, this testcase should be sufficient. Thanks !&lt;/p&gt;</comment>
                            <comment id="13414984" author="hustlmsp" created="Mon, 16 Jul 2012 11:26:52 +0100"  >&lt;p&gt;I just had one concern, if hedwig support returning message seq id for publish requests, so we had to ensure that hedwig returns the right message seq id for clients. at least we need to ensure publisher and subscriber see same message seq id for same message. but your test just assert the seq id is not null, which does nothing for testing.&lt;/p&gt;</comment>
                            <comment id="13415006" author="hudson" created="Mon, 16 Jul 2012 12:16:18 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #606 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/606/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/606/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-310&quot; title=&quot;Changes in hedwig server to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-310&quot;&gt;&lt;del&gt;BOOKKEEPER-310&lt;/del&gt;&lt;/a&gt;: Changes in hedwig server to support JMS spec (ivank via sijie) (Revision 1361968)&lt;/p&gt;

&lt;p&gt;     Result = ABORTED&lt;br/&gt;
sijie : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/README&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/configure.ac&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/m4/gtest.m4&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/scripts/log4cxx.conf&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/scripts/tester.sh&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/Makefile.am&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/main.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/messageboundtest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/publishtest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/pubsubdatatest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/pubsubtest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/subscribetest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/util.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/utiltest.cpp&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13416013" author="hustlmsp" created="Tue, 17 Jul 2012 09:43:56 +0100"  >&lt;p&gt;oh, sorry that I committed &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-306&quot; title=&quot;Change C++ client to use gtest for testing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-306&quot;&gt;&lt;del&gt;BOOKKEEPER-306&lt;/del&gt;&lt;/a&gt; with wrong jira id. has fixed it. please ignore the above comment generated by hudson. &lt;/p&gt;</comment>
                            <comment id="13416119" author="hustlmsp" created="Tue, 17 Jul 2012 13:08:52 +0100"  >&lt;p&gt;in order not to block this jira too long, I did some improvement on hedwig-server part changes.&lt;/p&gt;

&lt;p&gt;1) improving the test cases.&lt;br/&gt;
2) fix an assert error on TestBookkeeperPersistenceManager.&lt;/p&gt;

&lt;p&gt;could you take a look at it?&lt;/p&gt;</comment>
                            <comment id="13416130" author="mridulm80" created="Tue, 17 Jul 2012 13:19:39 +0100"  >&lt;p&gt;Looks good, thanks !&lt;/p&gt;</comment>
                            <comment id="13418344" author="fpj" created="Thu, 19 Jul 2012 16:06:16 +0100"  >&lt;p&gt;I checked the latest patch and it doesn&apos;t seem to compile without the patches for &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-311&quot; title=&quot;Changes in hedwig client api to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-311&quot;&gt;&lt;del&gt;BOOKKEEPER-311&lt;/del&gt;&lt;/a&gt;. Is it right? The patch looks good to me, but I&apos;d like to make sure it is not breaking anything.&lt;/p&gt;</comment>
                            <comment id="13418853" author="hustlmsp" created="Fri, 20 Jul 2012 02:08:31 +0100"  >&lt;p&gt;@Flavio, yes ur right. &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-310&quot; title=&quot;Changes in hedwig server to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-310&quot;&gt;&lt;del&gt;BOOKKEEPER-310&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-311&quot; title=&quot;Changes in hedwig client api to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-311&quot;&gt;&lt;del&gt;BOOKKEEPER-311&lt;/del&gt;&lt;/a&gt; should work together for &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-331&quot; title=&quot;Let hedwig support returning message seq id for publish requests.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-331&quot;&gt;&lt;del&gt;BOOKKEEPER-331&lt;/del&gt;&lt;/a&gt;. A better way is to put them together into one patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-331&quot; title=&quot;Let hedwig support returning message seq id for publish requests.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-331&quot;&gt;&lt;del&gt;BOOKKEEPER-331&lt;/del&gt;&lt;/a&gt;, but Mridul preferred to put them as separated patches. so &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-309&quot; title=&quot;Protocol changes in hedwig to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-309&quot;&gt;&lt;del&gt;BOOKKEEPER-309&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-310&quot; title=&quot;Changes in hedwig server to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-310&quot;&gt;&lt;del&gt;BOOKKEEPER-310&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-311&quot; title=&quot;Changes in hedwig client api to support JMS spec&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-311&quot;&gt;&lt;del&gt;BOOKKEEPER-311&lt;/del&gt;&lt;/a&gt; would be committed until all of them passed reviews.&lt;/p&gt;</comment>
                            <comment id="13423746" author="fpj" created="Fri, 27 Jul 2012 09:37:23 +0100"  >&lt;p&gt;+1, lgtm.&lt;/p&gt;</comment>
                            <comment id="13424906" author="hustlmsp" created="Mon, 30 Jul 2012 16:22:57 +0100"  >&lt;p&gt;committed as r1367117. thanks Mridul. thanks Flavio for reviewing.&lt;/p&gt;</comment>
                            <comment id="13552839" author="ikelly" created="Mon, 14 Jan 2013 16:20:47 +0000"  >&lt;p&gt;This actually went in as r1361968&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12597988">BOOKKEEPER-331</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12536807" name="BOOKKEEPER-310.diff" size="28332" author="hustlmsp" created="Tue, 17 Jul 2012 13:08:52 +0100"/>
                            <attachment id="12532945" name="hedwig-server.patch" size="23015" author="mridulm80" created="Thu, 21 Jun 2012 22:16:46 +0100"/>
                            <attachment id="12535294" name="hedwig-server.patch.1" size="20546" author="mridulm80" created="Fri, 6 Jul 2012 00:50:57 +0100"/>
                            <attachment id="12536267" name="hedwig-server.patch.3" size="18427" author="mridulm80" created="Thu, 12 Jul 2012 20:56:00 +0100"/>
                            <attachment id="12536569" name="hedwig-server.patch.4" size="23450" author="mridulm80" created="Sun, 15 Jul 2012 20:24:42 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Jun 2012 14:10:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>293563</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyn6vj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>