<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:32:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-56/BOOKKEEPER-56.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-56] Race condition of message handler in connection recovery in Hedwig client</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-56</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;There&apos;s a race condition in the connection recovery logic in Hedwig client. The message handler user set might be overwritten incorrectly. &lt;/p&gt;

&lt;p&gt;When handling channelDisconnected event, we try to reconnect to Hedwig server. After the connection is created and subscribed, we&apos;ll call StartDelivery() to recover the message handler to the original one of the disconnected connection. But if during this process, user calls StartDelivery() to set a new message handler, it will get overwritten to the original one.&lt;/p&gt;

&lt;p&gt;The process can be demonstrated as below:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; main thread &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; netty worker thread &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; StartDelivery(messageHandlerA) &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; (connection Broken here, and recovered later...) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; ResponseHandler::channelDisconnected()   (connection disconnected event received) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; new SubscribeReconnectCallback(subHandler.getMessageHandler()) (store messageHandlerA in SubscribeReconnectCallback to recover later) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; client.doConnect() (try reconnect)  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; doSubUnsub() (resubscribe) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; SubscriberResponseHandler::handleSubscribeResponse()  (subscription succeeds) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; StartDelivery(messageHandlderB)             &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; SubscribeReconnectCallback::operationFinished()                               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; StartDelvery(messageHandlerA)   (messageHandler get overwritten)              &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;I can stably reproduce this by simulating this race condition by put some sleep in ResponseHandler.&lt;/p&gt;

&lt;p&gt;I think essentially speaking we should not store messageHandler in ResponseHandler, since the message handler is supposed to be bound to connection. Instead, no matter which connection is in use, we should use the same messageHandler, the one user set last time. So I think we should change to store messageHandler in the HedwigSubscriber, in this way we don&apos;t need to recover the handler in connection recovery and thus won&apos;t face this race condition.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12520225">BOOKKEEPER-56</key>
            <summary>Race condition of message handler in connection recovery in Hedwig client</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hustlmsp">Sijie Guo</assignee>
                                    <reporter username="gavin_li">Gavin Li</reporter>
                        <labels>
                    </labels>
                <created>Fri, 26 Aug 2011 09:09:50 +0100</created>
                <updated>Mon, 22 Oct 2012 15:50:19 +0100</updated>
                            <resolved>Sat, 28 Apr 2012 09:12:00 +0100</resolved>
                                    <version>4.0.0</version>
                                    <fixVersion>4.1.0</fixVersion>
                                    <component>hedwig-client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13091686" author="gavin_li" created="Fri, 26 Aug 2011 10:16:43 +0100"  >&lt;p&gt;patch&lt;/p&gt;</comment>
                            <comment id="13091687" author="gavin_li" created="Fri, 26 Aug 2011 10:17:30 +0100"  >&lt;p&gt;change to store handler in HedwigSubscriber instead of ResponseHandler&lt;/p&gt;</comment>
                            <comment id="13093662" author="ikelly" created="Tue, 30 Aug 2011 12:23:44 +0100"  >&lt;p&gt;It seems inelegant to have to look up the delivery handler every time, when the message has already arrived in an object which can know how to deliver it. Perhaps we could add a package private method on HedwigSubscriber, called restartDelivery, which gets the handler from the hashmap and sets it in the response handler. In this case, the patch wouldn&apos;t modify the response handler at all, just how the reconnect callback sets it.&lt;/p&gt;

&lt;p&gt;The correct behaviour in this case is that the reconnect callback should not be able to overwrite the message handler. I think it is also valid to broaden this to say that noone should ever be able to overwrite the message handler, as this would indicate that startDelivery had been called twice without stopDelivery being called in between, which would indicate a programming error on the part of the client. &lt;/p&gt;

&lt;p&gt;There are tabs in the patch. For BK/HW the standard is 4 space indentation.&lt;/p&gt;</comment>
                            <comment id="13157165" author="ikelly" created="Fri, 25 Nov 2011 14:16:40 +0000"  >&lt;p&gt;I don&apos;t consider this a blocker. The fix should be fairly simple, but we need a test case, which don&apos;t currently have. &lt;br/&gt;
Moving to 4.1.0.&lt;/p&gt;</comment>
                            <comment id="13228308" author="fpj" created="Tue, 13 Mar 2012 11:01:05 +0000"  >&lt;p&gt;Should we move this one to 4.2.0?&lt;/p&gt;</comment>
                            <comment id="13252268" author="hustlmsp" created="Thu, 12 Apr 2012 08:33:53 +0100"  >&lt;p&gt;take a look at this issue, I found that it is difficult to add a test case over it. since startDeliver could be executed only when a subscription channel is connected, it is hard to trigger #startDelivery in test thread after reconnecting succeed and before reconnect task call #startDelivery.&lt;/p&gt;

&lt;p&gt;Any suggestion on how to add the test case?&lt;/p&gt;</comment>
                            <comment id="13256208" author="hustlmsp" created="Wed, 18 Apr 2012 06:20:27 +0100"  >&lt;p&gt;attach a patch which re-factor the existing patch addressing Ivan&apos;s comment.&lt;/p&gt;</comment>
                            <comment id="13260735" author="ikelly" created="Tue, 24 Apr 2012 18:38:40 +0100"  >&lt;p&gt;Committed as r1329883. Thanks Sijie and Gavin.&lt;/p&gt;</comment>
                            <comment id="13260756" author="hudson" created="Tue, 24 Apr 2012 18:55:06 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #475 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/475/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/475/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-56&quot; title=&quot;Race condition of message handler in connection recovery in Hedwig client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-56&quot;&gt;&lt;del&gt;BOOKKEEPER-56&lt;/del&gt;&lt;/a&gt;: Race condition of message handler in connection recovery in Hedwig client (sijie &amp;amp; Gavin Li via ivank) (Revision 1329883)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/handlers/SubscribeReconnectCallback.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/proxy/HedwigProxy.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/proxy/ProxyStartDeliveryHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/proxy/ProxyStopDeliveryHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/regions/RegionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHub.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13264246" author="hustlmsp" created="Sat, 28 Apr 2012 08:48:21 +0100"  >&lt;p&gt;yeah, seems that hedwig-client/src/main/java/org/apache/hedwig/client/exceptions/AlreadyStartDeliveryException.java is not committed. so the hubson job is failed with compilation failure.&lt;/p&gt;</comment>
                            <comment id="13264248" author="hustlmsp" created="Sat, 28 Apr 2012 08:50:21 +0100"  >&lt;p&gt;reopen the jira to commit the missed file.&lt;/p&gt;</comment>
                            <comment id="13264253" author="hustlmsp" created="Sat, 28 Apr 2012 09:12:00 +0100"  >&lt;p&gt;committed the missed file in r1331704.&lt;/p&gt;</comment>
                            <comment id="13264256" author="hudson" created="Sat, 28 Apr 2012 09:27:12 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #479 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/479/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/479/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-56&quot; title=&quot;Race condition of message handler in connection recovery in Hedwig client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-56&quot;&gt;&lt;del&gt;BOOKKEEPER-56&lt;/del&gt;&lt;/a&gt;: Race condition of message handler in connection recovery in Hedwig client (added AlreadyStartDeliveryException file missed in r1329883) (sijie &amp;amp; Gavin Li via ivank) (Revision 1331704)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
sijie : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/exceptions/AlreadyStartDeliveryException.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12523076" name="BK-56.patch" size="21926" author="hustlmsp" created="Wed, 18 Apr 2012 06:20:23 +0100"/>
                            <attachment id="12491760" name="patch_56" size="11837" author="gavin_li" created="Fri, 26 Aug 2011 10:16:43 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Aug 2011 11:23:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4rrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61656</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>