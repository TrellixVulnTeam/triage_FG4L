<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:26:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-33/BOOKKEEPER-33.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-33] Add length and offset parameter to addEntry</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-33</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;&amp;lt;from email to dev list&amp;gt;&lt;br/&gt;
I&apos;m having an issue with the LedgerHandle#addEntry api.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; best illustrates it. I&apos;m buffering namenode transactions in the stream and only transmitting when either flush is called or I have enough data to pass my threshold. This means I have a byte buffer in my class which I fill up as new transactions come in. When I transmit, I set this buffer as an entry to bookkeeper. I.e. N whole namenode transactions will be contained in 1 single bk entry. &lt;/p&gt;

&lt;p&gt;The problem is this byte buffer (DataOutputBuffer in this case). I reuse the same buffer over and over. But this buffer has a fixed size. If I transmit before it is full, the whole buffer size will be transmitted anyhow. If the buffer is being reused, this will retransmit old transactions out of order. For example, in the first use, the buffer fills with, &lt;span class=&quot;error&quot;&gt;&amp;#91;a,b,c,d,e&amp;#93;&lt;/span&gt; and adds this as an entry and resets the byte buffer. Then transaction f is  added and flushed, in this case &lt;span class=&quot;error&quot;&gt;&amp;#91;f,b,c,d,e&amp;#93;&lt;/span&gt; is not transmitted. &lt;/p&gt;

&lt;p&gt;What I need is the ability to set offset and length in the byte[] passed to addEntry. Is there a reason this wasn&apos;t added in the initial implementation? If not, and if you agree this is a valid usecase, ill open a JIRA and add this functionality. Im getting around this now by doing an extra Array.copyOf which is less than ideal.&lt;br/&gt;
&amp;lt;/from email&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12514026">BOOKKEEPER-33</key>
            <summary>Add length and offset parameter to addEntry</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Jul 2011 09:30:43 +0100</created>
                <updated>Wed, 7 Dec 2011 15:56:10 +0000</updated>
                            <resolved>Thu, 11 Aug 2011 19:38:28 +0100</resolved>
                                                    <fixVersion>4.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13065114" author="ikelly" created="Thu, 14 Jul 2011 09:39:47 +0100"  >&lt;blockquote&gt;
&lt;p&gt;// from Utkarsh on dev list&lt;br/&gt;
Is it worth using ByteBuffer instead of passing around offset and limit&lt;br/&gt;
separately?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wouldn&apos;t like to have &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; addEntry(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, BKException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; addEntry(ByteBuffer data) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, BKException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This looks a little imbalanced to me. I&apos;d prefer to either have only the ByteBuffer call, or to have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; addEntry(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, BKException {
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; addEntry(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, BKException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Internally we could use bytebuffers easily though. If we simply add a ByteBuffer method to the api, we should change all the other methods to work with byte buffers too.&lt;/p&gt;</comment>
                            <comment id="13065400" author="utkarsh" created="Thu, 14 Jul 2011 18:27:05 +0100"  >&lt;p&gt;Seems like adding the offset and length is a good enhancement in itself.&lt;/p&gt;

&lt;p&gt;There is another unrelated enhancement which is to take ByteBuffer directly in case of NIO clients that read it from somewhere and want to log it to Bookkeeper without copying. Agreed that a second enhancement is probably a separate JIRA.&lt;/p&gt;</comment>
                            <comment id="13080905" author="ikelly" created="Mon, 8 Aug 2011 12:24:55 +0100"  >&lt;p&gt;Ready for review&lt;/p&gt;</comment>
                            <comment id="13081094" author="fpj" created="Mon, 8 Aug 2011 19:01:46 +0100"  >&lt;p&gt;+1, looks good!&lt;/p&gt;</comment>
                            <comment id="13081299" author="fpj" created="Tue, 9 Aug 2011 00:45:53 +0100"  >&lt;p&gt;My +1 was precipitated, BookieReadWriteTest hangs for me, but interestingly it passes if I turn console logging on.&lt;/p&gt;</comment>
                            <comment id="13082276" author="ikelly" created="Wed, 10 Aug 2011 11:32:50 +0100"  >&lt;p&gt;Where does it hang? (kill -QUIT &amp;lt;pid&amp;gt; will give a stacktrace) Have you tried it on a different machine? I&apos;ve run it in a loop with logging off and it hasn&apos;t hung for me.&lt;/p&gt;

&lt;p&gt;One thing I have noticed in these tests is that Object#wait() &amp;amp; Object#notify() are being used. This can be problematic if notify() is called on the callback thread before wait() is called on the client thread. It&apos;ll hang forever. These should be changed to CountdownLatch in all tests, but thats another JIRA.&lt;/p&gt;</comment>
                            <comment id="13082418" author="fpj" created="Wed, 10 Aug 2011 16:50:58 +0100"  >&lt;p&gt;Stack trace of a test run that halted.&lt;/p&gt;</comment>
                            <comment id="13082453" author="ikelly" created="Wed, 10 Aug 2011 17:34:55 +0100"  >&lt;p&gt;That looks very like the netty problem we used to have. I&apos;ll kick it off in a loop overnight to see if I can hit the same thing. Have you definitely applied on a clean up to date checkout of trunk?&lt;/p&gt;</comment>
                            <comment id="13083351" author="fpj" created="Thu, 11 Aug 2011 19:38:28 +0100"  >&lt;p&gt;+1, thanks, Ivan. Committed revision 1156723.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12489677" name="BK-33.diff" size="16149" author="ikelly" created="Mon, 8 Aug 2011 12:24:55 +0100"/>
                            <attachment id="12489992" name="bookkeeper-33-trace.txt" size="33308" author="fpj" created="Wed, 10 Aug 2011 16:50:57 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Jul 2011 17:27:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>65376</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hynzz3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>174015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>