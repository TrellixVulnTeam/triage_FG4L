<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:26:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-336/BOOKKEEPER-336.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-336] bookie readEntries is taking more time if the ensemble has failed bookie(s)</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-336</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Scenario:&lt;/p&gt;

&lt;p&gt;1) Start three bookies. Create ledger with ensemblesize=3, quorumsize=2&lt;br/&gt;
2) Add 100 entries to this ledger&lt;br/&gt;
3) Make first bookie down and read the entries from 0-99&lt;/p&gt;

&lt;p&gt;Output: Each entry is going to fetch from the failed bookie and is waiting for the bookie connection timeout, only after failure going to next bookie.&lt;br/&gt;
This is affecting the read entry performance.&lt;/p&gt;

&lt;p&gt;Impact: Namenode switching time will be affected by adding this failed bookie readTimeOut also.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12598127">BOOKKEEPER-336</key>
            <summary>bookie readEntries is taking more time if the ensemble has failed bookie(s)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="brahmareddy">Brahma Reddy Battula</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Jul 2012 05:49:01 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:37 +0000</updated>
                            <resolved>Thu, 13 Dec 2012 12:08:30 +0000</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                            <comments>
                            <comment id="13410047" author="brahmareddy" created="Tue, 10 Jul 2012 05:51:31 +0100"  >&lt;p&gt;For each entry retry it&apos;ll take 10seconds&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2012-07-06 22:07:59,734 ERROR hidden.bkjournal.org.apache.bookkeeper.client.PendingReadOp: Bookie handle is not available while reading entry: 18 ledgerId: 3 from bookie: /HOST.24:3181
2012-07-06 22:08:10,234 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not connect to bookie: /HOST.24:3181
2012-07-06 22:08:10,234 ERROR hidden.bkjournal.org.apache.bookkeeper.client.PendingReadOp: Bookie handle is not available while reading entry: 21 ledgerId: 3 from bookie: /HOST.24:3181
2012-07-06 22:08:21,234 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not connect to bookie: /HOST.24:3181
2012-07-06 22:08:21,234 ERROR hidden.bkjournal.org.apache.bookkeeper.client.PendingReadOp: Bookie handle is not available while reading entry: 24 ledgerId: 3 from bookie: /HOST.24:3181
2012-07-06 22:08:31,734 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not connect to bookie: /HOST.24:3181
2012-07-06 22:08:31,734 ERROR hidden.bkjournal.org.apache.bookkeeper.client.PendingReadOp: Bookie handle is not available while reading entry: 27 ledgerId: 3 from bookie: /HOST.24:3181
2012-07-06 22:08:42,734 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not connect to bookie: /HOST.24:3181
2012-07-06 22:08:42,734 ERROR hidden.bkjournal.org.apache.bookkeeper.client.PendingReadOp: Bookie handle is not available while reading entry: 30 ledgerId: 3 from bookie: /HOST.24:3181
2012-07-06 22:08:53,234 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not connect to bookie: /HOST.24:3181
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13410052" author="rakeshr" created="Tue, 10 Jul 2012 06:02:28 +0100"  >&lt;p&gt;In the Netty code I&apos;ve seen &apos;connectTimeout&apos; parameter with default value 10000ms - Time to wait for a socket connection to be available. &lt;/p&gt;

&lt;p&gt;Also, I could see if the machine is reachable(and just shutdown the bookie server) the timeout is very less and immediately retrying to the other bookie in the ensemble. This scenario is occurring if the machine is unreachable and come out as connection timeout.&lt;/p&gt;</comment>
                            <comment id="13411280" author="umamaheswararao" created="Wed, 11 Jul 2012 07:51:07 +0100"  >&lt;p&gt;For some reason my reply did not go I think. Below is the reply for Ivan&apos;s mail.&lt;/p&gt;

&lt;p&gt;===================================================================&lt;/p&gt;

&lt;p&gt;Yep, We are also thinking in the same lines.&lt;br/&gt;
One Idea is that, we can add the failed BKto blackList and from the next entry onwards, we will try first to the healthy bks then we will try for the blackListed bookie from the quorum trails.&lt;br/&gt;
Why we are planning to retry on blackListed bookies also is, that bookie may come back or can serve well for next reads. But we will give chance only after reamaining bookies faild for the read. &lt;br/&gt;
How does it sound? &lt;br/&gt;
Brahma already filed a JIRA BK-336 and Rakesh signed up that same.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Uma&lt;br/&gt;
________________________________________&lt;br/&gt;
From: Ivan Kelly &lt;span class=&quot;error&quot;&gt;&amp;#91;ivank@apache.org&amp;#93;&lt;/span&gt;&lt;br/&gt;
Sent: Tuesday, July 10, 2012 4:22 PM&lt;br/&gt;
To: bookkeeper-dev@zookeeper.apache.org&lt;br/&gt;
Subject: Re: Read entry performance when bookie in the ensemble in unreachable.....&lt;/p&gt;

&lt;p&gt;Hmmm, perhaps we should add a blacklist to the PendingReadOp, or we&lt;br/&gt;
could decide to only read from bookies which are in /ledgers/available&lt;/p&gt;

&lt;p&gt;Could you open a JIRA for this.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Ivan&lt;/p&gt;

&lt;p&gt;=======================================================================&lt;/p&gt;</comment>
                            <comment id="13411281" author="umamaheswararao" created="Wed, 11 Jul 2012 07:52:20 +0100"  >&lt;p&gt;Flavio&apos;s reply in mailing list about this issue:&lt;/p&gt;

&lt;p&gt;=================================================&lt;br/&gt;
I&apos;m not sure blacklisting is a good idea, the bookie could be simply a little slow at that point for whatever reason. It might be a better idea to have a separate timeout for reads. We send read requests to the quorum sequentially to optimize the use bandwidth, but it is clear that slow/dead bookies can hurt performance. We have essentially optimized for what we believed to be the common case. &lt;/p&gt;

&lt;p&gt;-Flavio&lt;/p&gt;

&lt;p&gt;================================================&lt;/p&gt;
</comment>
                            <comment id="13411286" author="umamaheswararao" created="Wed, 11 Jul 2012 07:59:50 +0100"  >&lt;p&gt;Hi Ivan, If we check available bookie&apos;s check, we may end up in checking for every entry right, whether bookie is available or not. &lt;br/&gt;
Instead how does the above suggesion sounds to you? We will read the entry from that fault bookie only after the trails for remaining good bookis in the quorum. So, that we are just changing the oreder of read trails in quorum bookies for entries by keeping track of the failed bookies in a faultBookie list. So, that we are not completely avaoiding the reads from that fault bookies. We will to read from this fault bookies only if all other bookies also failed in quorum.&lt;/p&gt;</comment>
                            <comment id="13411304" author="fpj" created="Wed, 11 Jul 2012 08:57:46 +0100"  >&lt;p&gt;Changing the order of reads for a readEntry request for a single request makes sense because the problem might be transient. If the problem persists, we should drop the bookie and change the ensemble. &lt;/p&gt;

&lt;p&gt;My suggestion is to have a short read timeout and simply move on to the next bookie quickly. This way does not require keeping a blacklist.&lt;/p&gt;

&lt;p&gt;We could also provide another scheduler that sends reads to all bookies in parallel (or to any subset greater than 1). &lt;/p&gt;</comment>
                            <comment id="13411322" author="umamaheswararao" created="Wed, 11 Jul 2012 09:30:29 +0100"  >&lt;p&gt;Thanks a lot, Flavio for your opinion.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the problem persists, we should drop the bookie and change the ensemble. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This would be taken care by AutoRecovery worker if really Bookie is unavailable little later. read can continue with others until we have other bookies in quorum.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My suggestion is to have a short read timeout and simply move on to the next bookie quickly. This way does not require keeping a blacklist.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, this would be a simplest option. But need to check the scenarios like, if quorum of bookies present in the slow network may create read failure due to this short timeout ..etc. In network down case, whatever whatever timeout we set that much time it will wait.&lt;br/&gt;
If n entries present in X bookie and its NW down, then n-y entries may be required to read first from this bookie based scheduling algorithm.&lt;/p&gt;

&lt;p&gt;So, overall latency would be (n-y)* configured timeout. So, when compared to normal reads this will have little latency. Ofcource, I understand this is the initial design for the best optimization and have roundrobin fashion.&lt;br/&gt;
May be our first option may be more better than this as we will not talk to that failed bookie for next entries?&lt;/p&gt;

&lt;p&gt;My worry here is, whatever latency in this read, it will get added to the NameNode switch time. Currently ZKFC will find and switch within 5secs I guess. This read latency will get added to that 5secs switch time due to some bookie are in outof network. &lt;/p&gt;

&lt;p&gt;Thanks in advance, Ivan and Flavio for your valuable opinions.&lt;/p&gt;</comment>
                            <comment id="13411342" author="hustlmsp" created="Wed, 11 Jul 2012 10:32:22 +0100"  >&lt;blockquote&gt;
&lt;p&gt;One Idea is that, we can add the failed BKto blackList and from the next entry onwards, we will try first to the healthy bks then we will try for the blackListed bookie from the quorum trails.&lt;br/&gt;
Why we are planning to retry on blackListed bookies also is, that bookie may come back or can serve well for next reads. But we will give chance only after reamaining bookies faild for the read. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If I understood correctly, the blackList could be a list which maintains the slow bookies based on previous requests. following requests could first tried bookies not in this list, then tried bookies in this this. I think it is a good solution to improve read latency for following requests.&lt;/p&gt;

&lt;p&gt;but seems the problem mentioned in Rakesh&apos;s comment. the timeout latency hitting a unreachable bookie still would still be 10s, due to netty setting. so the above solution could not resolve it. and the long latency might introduced due to other reasons like slow disks on bookie server. Flavio is trying to introduce a solution to switch bookies in fixed timeout period to avoid long read latency: a new read request would be send if previous one does not respond. then we had two requests on-the-fly reading same entry from two bookies, the quick one would win and callback.&lt;/p&gt;

&lt;p&gt;I think we may consider including these two solutions: blacklist use to pick a might-be-better bookie as start to read entry, read timeout mechanism to avoid long latency and quick switch to next bookie.&lt;/p&gt;
</comment>
                            <comment id="13411353" author="umamaheswararao" created="Wed, 11 Jul 2012 10:46:33 +0100"  >&lt;blockquote&gt;
&lt;p&gt;but seems the problem mentioned in Rakesh&apos;s comment. the timeout latency hitting a unreachable bookie still would still be 10s, due to netty setting.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, 10s is deffenitely we may have to reduce or make it configurable, because our NN switch itself will take just 5secs. By including my proposal, this latency will be only for one entry.&lt;/p&gt;

&lt;p&gt;Yep, I agree, keeping the both option will solve the things. And we can tune the config value however user wants depending on his clusters.&lt;/p&gt;</comment>
                            <comment id="13411356" author="fpj" created="Wed, 11 Jul 2012 10:56:11 +0100"  >&lt;p&gt;The thing I don&apos;t like about the blacklist idea is the following. Keeping a blacklist requires determining which bookies are misbehaving by not responding fast enough or at all. Since we are targeting performance, we don&apos;t want to wait too long to go to the next bookie to read an entry. With a short timeout, we will possibly have a lot of false positives because a request may have been caused by a transient problem. False positives make maintaining the blacklist difficult.   &lt;/p&gt;</comment>
                            <comment id="13411367" author="rakeshr" created="Wed, 11 Jul 2012 11:06:12 +0100"  >&lt;p&gt;I just prepared an initial draft version and uploaded, here the idea is just re-ordering the replica indexes:&lt;/p&gt;

&lt;p&gt;On read failure, it will just queued the bookie to the &apos;unhealthybookies&apos; list. Next sendRead() request will consider the &apos;unhealthybookies&apos; and prepare the replicabookieIndex in such a way that good bookies will come first in the list and then the unhealthy bookie. This way we would be able to move the slow/bad bookies last in the queue and will do the read. &lt;/p&gt;

&lt;p&gt;On successful read from an unhealthy bookie will clear the entry from the &apos;unhealthybookies&apos; list.&lt;/p&gt;

&lt;p&gt;I&apos;d like to know the suggestion on this approach.&lt;/p&gt;</comment>
                            <comment id="13411383" author="rakeshr" created="Wed, 11 Jul 2012 11:25:55 +0100"  >&lt;p&gt;Thanks all for the suggestions and thoughts.&lt;/p&gt;

&lt;p&gt;Presently in our code base, we are configuring the &quot;readTimeout&quot; in the channel bookie. &lt;br/&gt;
As Uma suggested I&apos;d also prefer providing &quot;connectionTimeOut&apos; as a configurable item. Both the re-ordering and &quot;timeouts&quot; will help to improve the read performance.&lt;/p&gt;</comment>
                            <comment id="13411389" author="hustlmsp" created="Wed, 11 Jul 2012 11:39:24 +0100"  >&lt;blockquote&gt;
&lt;p&gt;With a short timeout, we will possibly have a lot of false positives because a request may have been caused by a transient problem. False positives make maintaining the blacklist difficult.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;short timeout provided the mechanism to quick switch to try next bookie. but it doesn&apos;t change read sequence, next read still started from same slow bookie. same long latency needs for following read requests.&lt;/p&gt;

&lt;p&gt;re-ordering the read sequence could avoid it. I treated blacklist as a kind of mechanism to achieve re-ordering. I think both needs for read latency.&lt;/p&gt;</comment>
                            <comment id="13411397" author="rakeshr" created="Wed, 11 Jul 2012 12:12:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;re-ordering the read sequence could avoid it. I treated blacklist as a kind of mechanism to achieve re-ordering&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The attached patch is based on the re-ordering mechanism and treated failed bookies are unhealthy and kept last in the list. &lt;br/&gt;
Please review.&lt;/p&gt;</comment>
                            <comment id="13412042" author="fpj" created="Wed, 11 Jul 2012 22:54:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;short timeout provided the mechanism to quick switch to try next bookie. but it doesn&apos;t change read sequence, next read still started from same slow bookie. same long latency needs for following read requests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@sijie In general we have been taking an optimistic approach to reading. If you&apos;re not happy with that approach, perhaps we should have a pessimistic approach implemented in a different scheduler so that we can switch between the two.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The attached patch is based on the re-ordering mechanism and treated failed bookies are unhealthy and kept last in the list. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@rakesh Could you post it on the review board, please, Rakesh? I haven&apos;t looked at the patch yet, but I&apos;m still wondering if we should have a separate scheduler just so that we still have the option of using the approach we have currently implemented.  &lt;/p&gt;</comment>
                            <comment id="13412402" author="hustlmsp" created="Thu, 12 Jul 2012 01:19:17 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@sijie In general we have been taking an optimistic approach to reading. If you&apos;re not happy with that approach, perhaps we should have a pessimistic approach implemented in a different scheduler so that we can &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt; between the two.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think both &apos;re-ordering&apos; and &apos;timeout&apos; are needed to solve this problem. They resolved the problem in two different aspects.&lt;/p&gt;

&lt;p&gt;Let me explaining my understandings as below.&lt;/p&gt;

&lt;p&gt;suppose we have an ensemble (bk1, bk2, bk3). bk1 is slow and it needs 10s to get read response; bk2 and bk3 are fast and it needs 1s to get read response. &lt;/p&gt;

&lt;p&gt;for success case:&lt;/p&gt;

&lt;p&gt;using current strategy: the read needs 10s to get the response.&lt;br/&gt;
&apos;timeout&apos; strategy: suppose we had 5s timeout. we don&apos;t received response from bk1 at 5s. it does switch to read entry from bk2. bk2 responded at 1s. we need total 6s to get response.&lt;br/&gt;
&apos;re-ordering&apos; strategy: we had some latency statistics to know which bookies are slow (unreachable bookie is a kind of slow bookie whose latency is infinite). now we know bk1 is 10s slow, we start trying reading from bk2. so we just need 1s to get the response.&lt;/p&gt;

&lt;p&gt;for failure case: (suppose bk1 returned failure response after 10s)&lt;/p&gt;

&lt;p&gt;using current strategy: the read first try bk1 and then try bk2. the total time is 11s.&lt;br/&gt;
&apos;timeout&apos; strategy: as above. we need 6s.&lt;br/&gt;
&apos;re-ordering&apos; strategy: just need 1s if we had know bk1 is a slow bookie.&lt;/p&gt;


&lt;p&gt;As my explanation, &apos;timeout&apos; resolve the read latency problem when hitting a slow bookie, while &apos;re-ordering&apos; try to avoid hitting a slow bookie based on previous requests&apos; statistics. They are two different aspects of this problem. They doesn&apos;t conflict on resolving this issue.&lt;/p&gt;

&lt;p&gt;And I think we could abstract it to provide different strategies.&lt;/p&gt;
</comment>
                            <comment id="13412417" author="hustlmsp" created="Thu, 12 Jul 2012 01:34:19 +0100"  >&lt;p&gt;@Rakesh&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Set&amp;lt;InetSocketAddress&amp;gt; unhealthyBookies = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;InetSocketAddress&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seems unhealthyBookies is a local variable in PendingReadOp. so it is only useful for a readEntries request. it doesn&apos;t make sense if readEntries are just reading little entries. As my understanding, it would be a shared status across different readEntries requests.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerEntry.java&lt;/p&gt;

&lt;p&gt;for &apos;re-ordering&apos;, it is a read sequence problem. I&apos;d prefer &apos;re-ordering&apos; changes would behind an interface. the interface might just return next bookie to read. and you could put the original solution (in-ordering read sequence) and &apos;re-ordering&apos; solution as different implementation.&lt;/p&gt;

&lt;p&gt;as Flavio&apos;s suggestion, seems that it could be done in a separated distribution schedule. &lt;/p&gt;</comment>
                            <comment id="13419056" author="rakeshr" created="Fri, 20 Jul 2012 12:03:24 +0100"  >&lt;p&gt;@Flavio&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Could you post it on the review board, please, Rakesh?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There are few more refactoring to be done as part of the comments in the JIRA, Is that ok to post for review after the changes? Also it would be great to see your thoughts on the following refactoring.&lt;/p&gt;


&lt;p&gt;@Sijie&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;as Flavio&apos;s suggestion, seems that it could be done in a separated distribution schedule. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I agree to make more generic to the LedgerHandle level rather than for each LedgerEntry. I feel we should have few more details of the health/proirity of bookies in the DistributionSchedule interface.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Following are just my thoughts to refactor the scheduling algo, please have a look and would like to know your opinon?&lt;br/&gt;
&lt;b&gt;Proposal:&lt;/b&gt;&lt;br/&gt;
I&apos;m just thinking to call this as different scheduling strategies:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.bookkeeper.client.DistributionSchedule.java

    ScheduleStrategy getScheduleStrategy();

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; ScheduleStrategy {
        ROUNDROBIN, ORDEREDROUNDROBIN;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, introducing new interface(thought of not adding ordering to the existing DistributionSchedule algo). New interface is an extended version of DistributionSchedule, which has the api getBookieIndexes(SchedulerContext) as follows: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.bookkeeper.client.OrderedDistributionSchedule.java

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; OrderedDistributionSchedule &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; DistributionSchedule {
    SchedulerContext getSchedulerContext();
    /**
     * Get the bookieIndexes of the given context. This bookie index will be ordered
     * according to the priority of bookies and high priority bookies will be first
     * in the list.
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; getBookieIndexes(SchedulerContext schedulerContext);

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; SchedulerContext {
        void setEntryId();
        void setQuorumSize();
        void addCurrentEnsemble(ArrayList&amp;lt;InetSocketAddress&amp;gt; ensemble);
        void addLowPriorityBookie(InetSocketAddress bookieAddr);
        void removeLowPriorityBookie(InetSocketAddress bookieAddr);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;How the strategies will be used?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Will expose the strategy as a configuration item in bk_server.conf like:
schedulingStrategy=RoundRobin (by &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;)
schedulingStrategy=OrderedRoundRobin
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When initializing the LedgerHandle, based on the strategy will create schedulers. Other modules will use like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(lh.distributionSchedulegetScheduleStrategy() == ScheduleStrategy.ORDEREDROUNDROBIN)
           &lt;span class=&quot;code-comment&quot;&gt;// casting to specifc strategy algo and &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; necessary operations
&lt;/span&gt;           (OrderedDistributionSchedule)lh.distributionSchedule
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13419081" author="rakeshr" created="Fri, 20 Jul 2012 13:26:12 +0100"  >&lt;p&gt;These are just my thoughts, but I don&apos;t think this is the best, since it requires specific typecasting.&lt;/p&gt;

&lt;p&gt;Another simple approach is to modify the existing distributionSchedule interface, this needs dummy implementation to the RRDistributionSchedule algo and other OrderedRRDistributionSchedule algo will have ordered implementation. &lt;/p&gt;


&lt;p&gt;Hi All, Could you please help me to give your ideas as its core part.&lt;/p&gt;

&lt;p&gt;Thanks, &lt;br/&gt;
Rakesh&lt;/p&gt;</comment>
                            <comment id="13420408" author="hustlmsp" created="Mon, 23 Jul 2012 04:15:23 +0100"  >&lt;p&gt;@Rakesh, thanks for providing such proposal. &lt;/p&gt;

&lt;p&gt;I&apos;d have a different opinion on the interface. &lt;b&gt;DistributionSchedule&lt;/b&gt; is an interface determines how entries are distributed to store among bookies. It is a strategy how we store the entries but not a strategy how we read/write the entries. For this jira, you are proposing different way to read entries from current strategy deployed in BookKeeper client. so I think we&apos;d need a clean interface how to read entries from an ensemble instead of adding new methods in &lt;b&gt;DistributionSchedule&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;How about define an interface as below?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; ReadStrategy {

	/**
	 * Read entry &amp;lt;ledgerId, entryId&amp;gt;.
	 * The implementation should handle the logic how to retry reading all replicas.
	 *
	 * The entry would be returned in callback&apos; context object.
	 */
	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void readEntry(LedgerHandle lh, LedgerEntry entry, ReadEntryCallback callback);

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;the &lt;b&gt;ReadStrategy&lt;/b&gt; interface provides a method for PendingReadOp to read an entry. the implementations should implement their logics to retry reading all replicas. &lt;/p&gt;

&lt;p&gt;you could move PendingReadOp#sendRead and PendingReadOp#logErrorAndReattemptRead to a default read strategy. And you could implement your re-ordering read logic in a ReorderingReadStrategy.&lt;/p&gt;

&lt;p&gt;What is your opinion? And Would like to see others&apos; comments.&lt;/p&gt;</comment>
                            <comment id="13421380" author="rakeshr" created="Tue, 24 Jul 2012 14:06:00 +0100"  >&lt;p&gt;Thanks a lot Sijie for the idea.&lt;/p&gt;

&lt;p&gt;Hi All, I&apos;ve uploaded latest patch which defines the following read strategies and is maintianed in distribution schedule. Please have a look.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ReadStrategy
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;SimpleReadStrategy&lt;/li&gt;
		&lt;li&gt;OrderedReadStrategy&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-Rakesh&lt;/p&gt;</comment>
                            <comment id="13421992" author="rakeshr" created="Wed, 25 Jul 2012 05:15:00 +0100"  >&lt;p&gt;review board: &lt;a href=&quot;https://reviews.apache.org/r/6128/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/6128/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13422013" author="hustlmsp" created="Wed, 25 Jul 2012 06:28:13 +0100"  >&lt;p&gt;I had added my comments in review board : &lt;a href=&quot;https://reviews.apache.org/r/6128/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/6128/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13429286" author="ikelly" created="Mon, 6 Aug 2012 18:40:07 +0100"  >&lt;p&gt;I&apos;d prefer to only have one implementation of the reading schedule, which covers all usecases, and that it is completely encapsulated in PendingReadOp. Flavio and I discussed this last week and came up with something like the following (it has changed a little since I&apos;ve thought about it more).&lt;/p&gt;

&lt;p&gt;For each bookie, record the response time of the last read request. When making a read request, if the last response time for the replica is greater than a configured threshold, make the read request for the next replica also. &lt;/p&gt;

&lt;p&gt;To do this, we maintain a array of int in PendingReadOp, int[] responseTimes = new int&lt;span class=&quot;error&quot;&gt;&amp;#91;ensembleSize&amp;#93;&lt;/span&gt;; &lt;br/&gt;
The response time can be UNKNOWN, PENDING, or a positive integer.&lt;br/&gt;
Initially all will be initialized to UNKNOWN. When a read request is made to a bookie, we check the response time. If it is UNKNOWN, we make the request to the bookie, and to the next bookie also. If is PENDING, we do not send to the bookie, but we do send to the next bookie. If it is a positive int, we check it against the threshold and send to the next bookie also if it exceeds the threshold. &lt;/p&gt;


&lt;p&gt;This does mean quite a large change to PendingReadOp, as at the moment it tries to read all entries in parallel. &lt;/p&gt;</comment>
                            <comment id="13430953" author="rakeshr" created="Wed, 8 Aug 2012 09:52:00 +0100"  >&lt;p&gt;@Ivan Thanks a lot for the new idea. Just few clarifications.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d prefer to only have one implementation of the reading schedule&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;@Flavio @Sijie&lt;br/&gt;
Would like to know your opinion on this. As we had talked about to have a separate scheduling algo for the perf oriented strategies?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;When making a read request, if the last response time for the replica is greater than a configured threshold, make the read request for the next replica also.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are suggesting to have parallel reads and whoever wins will send the result back to the client. Also collect statistics of the previous reads.&lt;/p&gt;

&lt;p&gt;Will the parallel read (to the quorum bookies) makes the bkserver busy/exhaust with many read requests ?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;To do this, we maintain a array of int in PendingReadOp, int[] responseTimes = new int&lt;span class=&quot;error&quot;&gt;&amp;#91;ensembleSize&amp;#93;&lt;/span&gt;; &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since PendingReadOp is for single entry, bookie statistics should be maintained behind and in the bkclient like, &lt;br/&gt;
HashSet bkResponseTimes &amp;lt;InetAddress, Integer&amp;gt; = new HashSet &amp;lt;InetAddress, Integer&amp;gt;(). &lt;br/&gt;
When reading, it justs initialize the PendingReadOp with previous statistics(UNKNOWN/PENDING/+ve integer) and will send the requests to the bookie which has good response time. Also I feel, the bookies can be reordered based on the statistics by sending request to the good/fast bookies first.&lt;/p&gt;</comment>
                            <comment id="13430955" author="rakeshr" created="Wed, 8 Aug 2012 09:56:10 +0100"  >&lt;p&gt;oops..just few correction. Please read the datastructure as &lt;br/&gt;
HashMap&amp;lt;InetAddress, Integer&amp;gt; bkResponseTimes = new HashMap &amp;lt;InetAddress, Integer&amp;gt;();&lt;/p&gt;</comment>
                            <comment id="13430991" author="hustlmsp" created="Wed, 8 Aug 2012 10:56:21 +0100"  >&lt;blockquote&gt;
&lt;p&gt; Would like to know your opinion on this. As we had talked about to have a separate scheduling algo for the perf oriented strategies?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Rekesh, @Ivan:&lt;/p&gt;

&lt;p&gt;I think we still need a clean interface ReadStrategy to allow the possibility to provide different read strategies. For code maintain, it would be better to have only one read strategy in codebase.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To do this, we maintain a array of int in PendingReadOp, int[] responseTimes = new int&lt;span class=&quot;error&quot;&gt;&amp;#91;ensembleSize&amp;#93;&lt;/span&gt;; &lt;br/&gt;
The response time can be UNKNOWN, PENDING, or a positive integer.&lt;br/&gt;
Initially all will be initialized to UNKNOWN. When a read request is made to a bookie, we check the response time. If it is UNKNOWN, we make the request to the bookie, and to the next bookie also. If is PENDING, we do not send to the bookie, but we do send to the next bookie. If it is a positive int, we check it against the threshold and send to the next bookie also if it exceeds the threshold.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it did the &apos;timeout&apos; part as my previous comment. If we choose bookie to start reading according to the response time, it would be kind of &apos;re-order&apos;. the idea matches my previous comment. I am OK with it.&lt;/p&gt;</comment>
                            <comment id="13431730" author="ikelly" created="Thu, 9 Aug 2012 11:49:27 +0100"  >&lt;p&gt;My previously suggested solution won&apos;t work with the current implementation of PendingReadOp. We read all entries in parallel, so we can&apos;t decide whether to make more than one read based on previous reads. Generally, all read requests are sent at the start, so there&apos;ll never be an opportunity to make the decision. &lt;/p&gt;</comment>
                            <comment id="13431793" author="hustlmsp" created="Thu, 9 Aug 2012 14:21:07 +0100"  >&lt;p&gt;ah, if the responseTimes is only internal structure for a read operation. it doesn&apos;t help make the decision. but if the responseTimes is a kind of statistics shared by the client, it would help.&lt;/p&gt;

&lt;p&gt;Ivan&apos;s comment reminder me that there might be a problem for &apos;re-order&apos; Rakesh proposed.&lt;/p&gt;

&lt;p&gt;currently, the read requests for a bunch of entries would be issued round-robin way, which balanced the load. if &apos;re-order&apos; as proposed, the read requests load might be not balanced. so &apos;re-order&apos; may improve nothing but introduced complexity.&lt;/p&gt;

&lt;p&gt;seems timeout is a simple and straightforward solution. &lt;/p&gt;</comment>
                            <comment id="13431915" author="ikelly" created="Thu, 9 Aug 2012 16:43:04 +0100"  >&lt;p&gt;Yes, i think having a timeout is the most straightforward solution to this. As kicking off all reads requests at the same time, we won&apos;t have to wait on the timeout for each individual request as I had initially thought. We can have this timeout as configurable, but I think that 2 seconds is a reasonable default. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Kick off a timer at end of PendingReadOp#initiate()&lt;/li&gt;
	&lt;li&gt;When timer times out, iterate through PendingReadOp#seq.&lt;/li&gt;
	&lt;li&gt;For each entry, if not completed, kick off next speculative read&lt;/li&gt;
	&lt;li&gt;Set timer again&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We must allow a response from either of the read requests to complete the entry. We also have to modify error handling to only propagate to client if all read requests have failed. &lt;/p&gt;</comment>
                            <comment id="13432370" author="fpj" created="Fri, 10 Aug 2012 02:31:44 +0100"  >&lt;p&gt;It sounds like we cannot avoid an extra timeout unless we send a read request for a given entry to all replicas in parallel (we assume that at least one will be available; if not, the request will eventually fail). Consequently, it sounds like we need a timeout in the way Ivan is proposing.&lt;/p&gt;

&lt;p&gt;I&apos;m not against having another scheme that enables parallel read requests for the same entry of a ledger. It is a way of trading throughput for latency upon crash events. &lt;/p&gt;</comment>
                            <comment id="13439610" author="ikelly" created="Wed, 22 Aug 2012 16:25:49 +0100"  >&lt;p&gt;I&apos;ve attached a first draft at the proposed fix. There&apos;s still a few things missing, such as the timeout is hardcoded now, and there&apos;s no testing yet, so I really don&apos;t know how well it works. All current tests pass though.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ivankelly/bookkeeper/tree/BOOKKEEPER-336&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/ivankelly/bookkeeper/tree/BOOKKEEPER-336&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13481040" author="rakeshr" created="Sun, 21 Oct 2012 20:49:51 +0100"  >&lt;p&gt;Hi Ivan, The idea of timeout approach also works well and improves read perf.&lt;/p&gt;

&lt;p&gt;Just to conclude our discussion, the following approaches has been discussed so far.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reordering of bkclients based on health&lt;/li&gt;
	&lt;li&gt;read timeouts with sequential reads&lt;/li&gt;
	&lt;li&gt;read timeouts with parallel reads&lt;/li&gt;
	&lt;li&gt;provide multiple read schemes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hi All, Could you please give your vote to select better one&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13481481" author="ikelly" created="Mon, 22 Oct 2012 17:27:57 +0100"  >&lt;p&gt;I think &quot;read timeouts with parallel reads&quot; is best, and i&apos;ve already implemented it. I&apos;ll try to add tests this week.&lt;/p&gt;</comment>
                            <comment id="13482028" author="stuhood" created="Tue, 23 Oct 2012 02:45:29 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think &quot;read timeouts with parallel reads&quot; is best, and i&apos;ve already implemented it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1. This is the simplest place to start, and gives the best benefits for availability and latency. Optimizations for throughput can come later.&lt;/p&gt;</comment>
                            <comment id="13483042" author="rakeshr" created="Wed, 24 Oct 2012 08:18:23 +0100"  >&lt;p&gt;Thanks Ivan, Stud for the participation. I also agree to go with read timeouts.&lt;/p&gt;

&lt;p&gt;I could see the parallel read to quorum bookies would make the bkserver busy/exhaust with many read requests and may affect the write latency in worst case. But good thing is, we have &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-429&quot; title=&quot;Provide separate read and write threads in the bookkeeper server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-429&quot;&gt;&lt;del&gt;BOOKKEEPER-429&lt;/del&gt;&lt;/a&gt; idea of separate read/write threads, this would help us in latency and IMO this issue also go together.&lt;/p&gt;
</comment>
                            <comment id="13485072" author="ikelly" created="Fri, 26 Oct 2012 18:51:47 +0100"  >&lt;p&gt;Added tests and made configurable. Ready for review&lt;/p&gt;</comment>
                            <comment id="13485074" author="ikelly" created="Fri, 26 Oct 2012 18:55:26 +0100"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/7749/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/7749/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;requires &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-444&quot; title=&quot;Refactor pending read op to make speculative reads possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-444&quot;&gt;&lt;del&gt;BOOKKEEPER-444&lt;/del&gt;&lt;/a&gt; to apply&lt;/p&gt;</comment>
                            <comment id="13485698" author="rakeshr" created="Sun, 28 Oct 2012 19:47:02 +0000"  >&lt;p&gt;Thanks Ivan for the patch and BitSet usage is very nice. I&apos;ve added few comments in review board, could you please have a look.&lt;/p&gt;</comment>
                            <comment id="13487890" author="ikelly" created="Wed, 31 Oct 2012 16:00:26 +0000"  >&lt;p&gt;I&apos;ve just realized I posted the wrong patch. The proper patch already addressed most of your comments, plus it had tests. Ive updated on reviewboard and here.&lt;/p&gt;</comment>
                            <comment id="13488016" author="ikelly" created="Wed, 31 Oct 2012 17:57:01 +0000"  >&lt;p&gt;new patch switches back where the timer is started, but the requestsSent flag wasnt needed anyhow. Also, there was a possible ConcurrentModificationException. Fixed by switching to ArrayBlockingQueue&lt;/p&gt;</comment>
                            <comment id="13504619" author="hadoopqa" created="Tue, 27 Nov 2012 13:42:23 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WARNING: Running test-patch on a dirty local svn workspace&lt;/p&gt;

&lt;p&gt;Patch &amp;lt;a href=&quot;/jira/secure/attachment/12551593/0002-&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;del&gt;bookie-readEntries-is-taking-more-tim.patch&quot;&amp;gt;/jira/secure/attachment/12551593/0002&lt;/del&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;-bookie-readEntries-is-taking-more-tim.patch&amp;lt;/a&amp;gt; downloaded at Tue Nov 27 13:19:57 UTC 2012&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; the patch contains 8 line(s) with trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; the patch seems to introduce 1 new Javadoc warning(s)&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;WARNING&lt;/font&gt;: the current HEAD has 8 Javadoc warning(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;WARNING&lt;/font&gt;: the current HEAD has 9 javac warning(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;WARNING: the current HEAD has  Findbugs warning(s), they should be addressed ASAP&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 397&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;.   There is at least one warning, please check&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/37/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/37/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13507416" author="ikelly" created="Fri, 30 Nov 2012 16:24:28 +0000"  >&lt;p&gt;New patch fixes precommit complaints.&lt;/p&gt;</comment>
                            <comment id="13507448" author="hadoopqa" created="Fri, 30 Nov 2012 16:56:34 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WARNING: Running test-patch on a dirty local svn workspace&lt;/p&gt;

&lt;p&gt;Patch &amp;lt;a href=&quot;/jira/secure/attachment/12555517/0001-&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;del&gt;bookie-readEntries-is-taking-more-tim.patch&quot;&amp;gt;/jira/secure/attachment/12555517/0001&lt;/del&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;-bookie-readEntries-is-taking-more-tim.patch&amp;lt;/a&amp;gt; downloaded at Fri Nov 30 16:31:14 UTC 2012&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; the patch contains 1 line(s) with trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;WARNING: the current HEAD has  Findbugs warning(s), they should be addressed ASAP&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 391&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;.   There is at least one warning, please check&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/56/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/56/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13508654" author="hadoopqa" created="Mon, 3 Dec 2012 11:16:14 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WARNING: Running test-patch on a dirty local svn workspace&lt;/p&gt;

&lt;p&gt;Patch &amp;lt;a href=&quot;/jira/secure/attachment/12555734/0001-&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;&lt;del&gt;bookie-readEntries-is-taking-more-tim.patch&quot;&amp;gt;/jira/secure/attachment/12555734/0001&lt;/del&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;-bookie-readEntries-is-taking-more-tim.patch&amp;lt;/a&amp;gt; downloaded at Mon Dec  3 10:52:06 UTC 2012&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 394&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/64/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/64/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13508940" author="rakeshr" created="Mon, 3 Dec 2012 18:56:33 +0000"  >&lt;p&gt;Good work Ivan, +1 for the speculative reads.&lt;/p&gt;</comment>
                            <comment id="13509524" author="hudson" created="Tue, 4 Dec 2012 05:44:44 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #836 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/836/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/836/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;REVERT&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt; bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place&lt;br/&gt;
Accidently committed this change, before approval. Reverting (ivank) (Revision 1416408)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt; bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place (Revision 1416393)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13527900" author="fpj" created="Mon, 10 Dec 2012 12:22:59 +0000"  >&lt;p&gt;Overall it looks pretty good. I have a number of comments, not necessarily blockers for this patch:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;In the case the digest of an entry doesn&apos;t match, we will discard the entry, although we have heard from the bookie. Consequently, we need to request another entry, and possibly this is handled through a different code path. Is it the case? In the case there is a different code path to deal with invalid entries, we may want to consider coalescing them as much as possible.&lt;/li&gt;
	&lt;li&gt;It would be great to add documentation for the new parameter and to update conf/bk_server.conf&lt;/li&gt;
	&lt;li&gt;The default value for the speculative read seems a large. Is there any reason why we shouldn&apos;t be a bit more aggressive with the default value, especially because we can turn off speculative reads altogether?&lt;/li&gt;
	&lt;li&gt;Please fix typos in the comments. I&apos;ve seen at least a couple, like &quot;functionallity&quot;.&lt;/li&gt;
	&lt;li&gt;In the future, it might be a good idea to use failure detection techniques like phi accrual for the speculative read timeout instead of having a fixed value.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13527902" author="fpj" created="Mon, 10 Dec 2012 12:23:18 +0000"  >&lt;p&gt;Sorting out comments.&lt;/p&gt;</comment>
                            <comment id="13527962" author="ikelly" created="Mon, 10 Dec 2012 14:38:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
1. In the case the digest of an entry doesn&apos;t match, we will discard the entry, although we have heard from the bookie. Consequently, we need to request another entry, and possibly this is handled through a different code path. Is it the case? In the case there is a different code path to deal with invalid entries, we may want to consider coalescing them as much as possible.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the case of a digest fail, it will go through the same path as before. i.e. it will try the next replica anyhow.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;2. It would be great to add documentation for the new parameter and to update conf/bk_server.conf&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The option is client side only so it doesn&apos;t belong in bk_server.conf. Will add something in bookkeeperConfigParams.textile.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;3. The default value for the speculative read seems a large. Is there any reason why we shouldn&apos;t be a bit more aggressive with the default value, especially because we can turn off speculative reads altogether?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s much lower than connection timeout which is what was being hit originally (10 seconds). I have no problem with lowering it, but at this stage selecting a default value is guess work, and 2s seems reasonable to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;4. Please fix typos in the comments. I&apos;ve seen at least a couple, like &quot;functionallity&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will fix and put up a new patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;5. In the future, it might be a good idea to use failure detection techniques like phi accrual for the speculative read timeout instead of having a fixed value.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This would be nice. Has this stuff gone into ZK yet, perhaps we could reuse some of that code. In any case, future work.&lt;/p&gt;</comment>
                            <comment id="13527969" author="fpj" created="Mon, 10 Dec 2012 14:54:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;The option is client side only so it doesn&apos;t belong in bk_server.conf.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right, my bad.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This would be nice. Has this stuff gone into ZK yet, perhaps we could reuse some of that code. In any case, future work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, it implied too many changes and the guy who did it didn&apos;t push very hard either. Here it would be a lot more focused, so less of a concern.&lt;/p&gt;</comment>
                            <comment id="13528124" author="hustlmsp" created="Mon, 10 Dec 2012 18:20:35 +0000"  >&lt;p&gt;two comments about the patch.&lt;/p&gt;

&lt;p&gt;1. Using Timer per reading op is not a good idea, because each timer would create a thread associated with it. Image that there are lots of ledgers being used (e.g. Hedwig case), there might be lot of threads created, which is bad. I would suggest using (maybe reuse existing one) ScheduledExecutorService to schedule speculative reads instead of creating a new timer each time.&lt;/p&gt;

&lt;p&gt;2. could you define -1 to meaningful constants? it might make code more readable.&lt;/p&gt;

&lt;p&gt;otherwise, the remaining part of the patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="13530314" author="ikelly" created="Wed, 12 Dec 2012 20:50:20 +0000"  >&lt;p&gt;new patch addresses comments.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; I couldn&apos;t remove all the -1s as some come from List#indexOf.&lt;/p&gt;</comment>
                            <comment id="13530697" author="hustlmsp" created="Thu, 13 Dec 2012 05:31:41 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I couldn&apos;t remove all the -1s as some come from List#indexOf.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds OK for me.&lt;/p&gt;

&lt;p&gt;+1 for the new patch. Great work, Ivan. Thanks.&lt;/p&gt;</comment>
                            <comment id="13530939" author="ikelly" created="Thu, 13 Dec 2012 12:08:30 +0000"  >&lt;p&gt;Committed as r1421242. Thanks for reviewing guys.&lt;/p&gt;</comment>
                            <comment id="13530941" author="ikelly" created="Thu, 13 Dec 2012 12:12:06 +0000"  >&lt;p&gt;I had to manually merge with &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-365&quot; title=&quot;Ledger will never recover if one of the quorum bookie is down forever and others dont have entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-365&quot;&gt;&lt;del&gt;BOOKKEEPER-365&lt;/del&gt;&lt;/a&gt;. Attaching final patch.&lt;/p&gt;</comment>
                            <comment id="13532102" author="hudson" created="Fri, 14 Dec 2012 06:51:27 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #860 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/860/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/860/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt;: bookie readEntries is taking more time if the ensemble has failed bookie(s) (ivank) (Revision 1421242)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12549521">BOOKKEEPER-208</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12560768" name="0001-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="36851" author="ikelly" created="Thu, 13 Dec 2012 12:12:06 +0000"/>
                            <attachment id="12560633" name="0001-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="36027" author="ikelly" created="Wed, 12 Dec 2012 20:50:20 +0000"/>
                            <attachment id="12555734" name="0001-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="29659" author="ikelly" created="Mon, 3 Dec 2012 10:47:00 +0000"/>
                            <attachment id="12555517" name="0001-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="29656" author="ikelly" created="Fri, 30 Nov 2012 16:24:28 +0000"/>
                            <attachment id="12551593" name="0002-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="29696" author="ikelly" created="Wed, 31 Oct 2012 17:57:01 +0000"/>
                            <attachment id="12551569" name="0002-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="29543" author="ikelly" created="Wed, 31 Oct 2012 16:00:46 +0000"/>
                            <attachment id="12550990" name="0002-BOOKKEEPER-336-bookie-readEntries-is-taking-more-tim.patch" size="10192" author="ikelly" created="Fri, 26 Oct 2012 18:51:47 +0100"/>
                            <attachment id="12537686" name="BOOKKEEPER-336.1.patch" size="39103" author="rakeshr" created="Tue, 24 Jul 2012 13:59:31 +0100"/>
                            <attachment id="12541985" name="BOOKKEEPER-336.draft1.diff" size="13950" author="ikelly" created="Wed, 22 Aug 2012 16:25:49 +0100"/>
                            <attachment id="12536005" name="BOOKKEEPER-336.patch" size="19524" author="rakeshr" created="Wed, 11 Jul 2012 10:58:51 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12613499">BOOKKEEPER-444</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jul 2012 05:02:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>250195</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4p27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61216</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>