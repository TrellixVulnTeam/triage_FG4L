<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:32:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-252/BOOKKEEPER-252.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-252] Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server.</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-252</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;In some case, we need to hedwig-client as proxy server to provide messaging service to other users.&lt;/p&gt;

&lt;p&gt;client -&amp;gt; proxy server 1 -&amp;gt; hedwig&lt;br/&gt;
       \&amp;gt; proxy server 2 /&amp;gt;&lt;/p&gt;

&lt;p&gt;when client would connect to either proxy server to receive messages, the proxy server would setup subscription channel to hedwig server.&lt;/p&gt;

&lt;p&gt;we just want client to be simple, so when the channel between client and proxy server is broken, client will try to connect to proxy servers thru VIP. it might connect to other proxy server. for example, first time client connects to proxy server 1, but the client found the connection is broken, it connects to proxy server 2. when proxy server 2 tried to setup subscription channel to hedwig, hedwig found that this subscription has existed before occupied by proxy server 1.&lt;/p&gt;

&lt;p&gt;the panic here is that proxy server 1 only disconnect old subscription channel only when it detected the channel between client and itself is broken. The detection might be delayed due to several reasons. so it might increment the latency that messages are pushed to real client.&lt;/p&gt;

&lt;p&gt;so we try to introduce a subscription mode called CREATE_OR_ATTACH_OR_KILL mode.&lt;/p&gt;

&lt;p&gt;when a subscriber use this subscription mode, it would kill old existed subscription channel. when using this subscription mode, we would turn off auto-reconnect functionality in hedwig client and just tell client about the channel disconnected event so client could do its logic when channel is detected.&lt;/p&gt;

&lt;p&gt;in order to provide some admin tool for admin guys to debug/operate, we provide ADMIN mode. if a subscriber attach to a subscription using ADMIN mode, its subscription channel would never be killed, then it is safe to guarantee admin operations.&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12554649">BOOKKEEPER-252</key>
            <summary>Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hustlmsp">Sijie Guo</assignee>
                                    <reporter username="hustlmsp">Sijie Guo</reporter>
                        <labels>
                    </labels>
                <created>Thu, 10 May 2012 09:19:25 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:30 +0000</updated>
                            <resolved>Fri, 14 Sep 2012 17:18:30 +0100</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13272181" author="hustlmsp" created="Thu, 10 May 2012 09:21:59 +0100"  >&lt;p&gt;attach a patch to provide kill/admin subscription mode as description.&lt;/p&gt;</comment>
                            <comment id="13272185" author="jiraposter@reviews.apache.org" created="Thu, 10 May 2012 09:27:14 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/5086/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5086/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;In some case, we need to hedwig-client as proxy server to provide messaging service to other users.&lt;/p&gt;

&lt;p&gt;client -&amp;gt; proxy server 1 -&amp;gt; hedwig&lt;br/&gt;
\&amp;gt; proxy server 2 /&amp;gt;&lt;/p&gt;

&lt;p&gt;when client would connect to either proxy server to receive messages, the proxy server would setup subscription channel to hedwig server.&lt;/p&gt;

&lt;p&gt;we just want client to be simple, so when the channel between client and proxy server is broken, client will try to connect to proxy servers thru VIP. it might connect to other proxy server. for example, first time client connects to proxy server 1, but the client found the connection is broken, it connects to proxy server 2. when proxy server 2 tried to setup subscription channel to hedwig, hedwig found that this subscription has existed before occupied by proxy server 1.&lt;/p&gt;

&lt;p&gt;the panic here is that proxy server 1 only disconnect old subscription channel only when it detected the channel between client and itself is broken. The detection might be delayed due to several reasons. so it might increment the latency that messages are pushed to real client.&lt;/p&gt;

&lt;p&gt;so we try to introduce a subscription mode called CREATE_OR_ATTACH_OR_KILL mode.&lt;/p&gt;

&lt;p&gt;when a subscriber use this subscription mode, it would kill old existed subscription channel. when using this subscription mode, we would turn off auto-reconnect functionality in hedwig client and just tell client about the channel disconnected event so client could do its logic when channel is detected.&lt;/p&gt;

&lt;p&gt;in order to provide some admin tool for admin guys to debug/operate, we provide ADMIN mode. if a subscriber attach to a subscription using ADMIN mode, its subscription channel would never be killed, then it is safe to guarantee admin operations.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-252&quot; title=&quot;Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-252&quot;&gt;&lt;del&gt;BOOKKEEPER-252&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-252&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-252&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  hedwig-client/src/main/cpp/inc/hedwig/callback.h 5200d5b &lt;br/&gt;
  hedwig-client/src/main/cpp/inc/hedwig/subscribe.h fc8da58 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/channel.cpp ada1e58 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/clientimpl.h 40e063c &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/clientimpl.cpp 712de01 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.h d9d2ffd &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.cpp 42fa2ad &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/publisherimpl.cpp a421e98 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.h 508a495 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 6f7d02e &lt;br/&gt;
  hedwig-client/src/main/cpp/test/subscribetest.cpp f90502c &lt;br/&gt;
  hedwig-client/src/main/cpp/test/util.h 780a466 &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java 972590b &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/data/PubSubData.java 8460de0 &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/data/TopicSubscriber.java 064cec1 &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigPublisher.java 603766c &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 0c8634c &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java c4affaf &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/util/SubscriptionChannelListener.java PRE-CREATION &lt;br/&gt;
  hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java 92f409d &lt;br/&gt;
  hedwig-protocol/src/main/protobuf/PubSubProtocol.proto b845c40 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigCommands.java a17f56b &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java 5da8e16 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/handlers/SubscribeHandler.java 76e0c14 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java 52089f5 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java ba841af &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionManager.java 0fdfad0 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/ZkSubscriptionManager.java 4d39335 &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java 08994de &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java 5f6e363 &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/handlers/TestSubUnsubHandler.java d24a86d &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/subscriptions/StubSubscriptionManager.java 255880b &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/subscriptions/TestZkSubscriptionManager.java f6d533f &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/5086/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5086/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Sijie&lt;/p&gt;
</comment>
                            <comment id="13292647" author="hustlmsp" created="Mon, 11 Jun 2012 06:42:45 +0100"  >&lt;p&gt;attach a patch based on latest trunk. the patch is generated based on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-191&quot; title=&quot;Hub server should change ledger to write, so consumed messages have chance to be garbage collected.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-191&quot;&gt;&lt;del&gt;BOOKKEEPER-191&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13295576" author="ikelly" created="Fri, 15 Jun 2012 11:34:03 +0100"  >&lt;p&gt;The idea seems sound. I&apos;d prefer if these options were added to SubscriptionOptions though, rather than to CreateOrAttach mode. Call the option &quot;steal&quot; or &quot;force&quot; or something. &lt;/p&gt;

&lt;p&gt;I don&apos;t like how this has introduced a new set of APIs for subscribing. Why do we need to expose the connection logic to the client?&lt;/p&gt;</comment>
                            <comment id="13295723" author="hustlmsp" created="Fri, 15 Jun 2012 16:31:03 +0100"  >&lt;p&gt;@Ivan&lt;/p&gt;

&lt;p&gt;we need to disable reconnect when using kill subscription mode, otherwise the killed subscription channel would be established in reconnect logic.&lt;/p&gt;

&lt;p&gt;so we have to expose disconnect event to client to let user aware of it when the channel is disconnected, when disabling reconnect.&lt;/p&gt;</comment>
                            <comment id="13447757" author="hustlmsp" created="Tue, 4 Sep 2012 16:35:41 +0100"  >&lt;p&gt;attach a new patch rebased to latest trunk and addressed Ivan&apos;s previous&apos;s comment.&lt;/p&gt;

&lt;p&gt;also upload to review board: &lt;a href=&quot;https://reviews.apache.org/r/5086/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5086/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13450721" author="ikelly" created="Fri, 7 Sep 2012 16:29:41 +0100"  >&lt;p&gt;I still don&apos;t like this SubscriptionChannelListener, or rather I don&apos;t like passing it to the subscribe call at least. It adds to the main subscription API and exposes the connection logic to the client in a way which has been nicely hidden up until now. Moreover, I don&apos;t think it&apos;s necessary. We have a flag in the SubscriptionOptions with this change, forceAttach, which on disconnect, the client can check on channelDisconnect to decide whether to reconnect or not.&lt;/p&gt;

&lt;p&gt;If you explicitly need notification at the application level, this is a different matter, and I think it should be separate to the reconnect logic. I think it highlights a shortcoming in the api. Currently, there is no means of notifying a client when a the service goes down, though we haven&apos;t needed it yet. However, if this is a requirement for your usecase, we should go about solving it, but without exposing the underlying connection.&lt;/p&gt;</comment>
                            <comment id="13450723" author="ikelly" created="Fri, 7 Sep 2012 16:34:59 +0100"  >&lt;p&gt;Also, to clarify what i meant about passing it to the subscribe call, I think it would be better to register it with the Subscriber as a whole, if it is indeed needed. Or alternatively merge it with MessageHandler, though the problem there is that it would be a BC break.&lt;/p&gt;</comment>
                            <comment id="13451740" author="hustlmsp" created="Mon, 10 Sep 2012 03:47:15 +0100"  >&lt;p&gt;first of all, I have to clarify that disabling reconnect logic is necessary. if a subscriber subscribes with &apos;forceAttach&apos;, it would kill the existed attached subscription. the killed subscription would reconnect and kill the new one if we couldn&apos;t disable reconnect logic. so it would enter a killing-loop for the subscribers.&lt;/p&gt;

&lt;p&gt;after disabling reconnect logic, we need some mechanism to get application notified with the events of the channel(the channel is broken due to hub failure, due to topic periodical release or other things). otherwise, application would not notice that it could not receive messages any more due to something is wrong.&lt;/p&gt;

&lt;p&gt;so SubscriptionChannelListener is the mechanism we needed when enabling &apos;forceAttach&apos;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;alternatively merge it with MessageHandler,&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is not only a BC break when merging it with MessageHandler. MessageHandler is just used to receive notifications, which is quite different to a listener on the events of a subscription channel. Because, application could start or stop a message handler according to its usage. I would have a use case to explain that.&lt;/p&gt;

&lt;p&gt;Say a proxy server using a hedwig client to receive notifications from hub server and send to its downstream servers. A proxy server may #stopDelivery after receiving N messages from hub, which is to send these messages to its downstream and wait for their responses. If the connection to hub server is broken now, the proxy server would not get notified with it, since the message handler has been #stopDelivery. it just only get notified when it called #startDelivery, which might be a long delay. Bad thing is that a new message handler might be used calling #startDelivery.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think it would be better to register it with the Subscriber as a whole, if it is indeed needed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are forcing all subscriptions for this subscriber to use same one. But different subscriptions has different behaviors. So I would prefer it would be subscription-level not client-level.&lt;/p&gt;</comment>
                            <comment id="13455477" author="hustlmsp" created="Fri, 14 Sep 2012 01:11:05 +0100"  >&lt;p&gt;Attach a new patch which provides a client-level subscription listener rather than per-subscription listener.&lt;/p&gt;

&lt;p&gt;for now, those disable resubscribe feature subscriptions, &apos;TOPIC_MOVED&apos; event will be emitted to the registered listener to notify a topic is moved when channel broken.&lt;/p&gt;</comment>
                            <comment id="13455479" author="hustlmsp" created="Fri, 14 Sep 2012 01:11:37 +0100"  >&lt;p&gt;it is also updated in review board: &lt;a href=&quot;https://reviews.apache.org/r/5086/diff/3/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5086/diff/3/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13455869" author="hustlmsp" created="Fri, 14 Sep 2012 16:31:37 +0100"  >&lt;p&gt;attach a new patch addressing Ivan and Andiruddha&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13455905" author="ikelly" created="Fri, 14 Sep 2012 17:18:30 +0100"  >&lt;p&gt;Committed r1384836. Good work Sijie.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=i0exception&quot; class=&quot;user-hover&quot; rel=&quot;i0exception&quot;&gt;Aniruddha&lt;/a&gt; There was one comment from the review that wasn&apos;t addresses. If you think it&apos;s a big issue, we can look at it further in another JIRA, but I thought this one had been held up for too long already.&lt;/p&gt;</comment>
                            <comment id="13455916" author="i0exception" created="Fri, 14 Sep 2012 17:30:10 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt;, If this is about passing the channel to the listener, I&apos;m fine with it not being passed. &lt;/p&gt;</comment>
                            <comment id="13455962" author="hudson" created="Fri, 14 Sep 2012 18:23:22 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #712 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/712/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/712/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-252&quot; title=&quot;Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-252&quot;&gt;&lt;del&gt;BOOKKEEPER-252&lt;/del&gt;&lt;/a&gt;: Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server. (sijie via ivank) (Revision 1384836)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/inc/hedwig/callback.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/inc/hedwig/subscribe.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/data.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/subscriberimpl.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/subscriberimpl.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/subscribetest.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/util.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigClientImpl.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/util/SubscriptionListener.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/handlers/SubscribeHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/MMSubscriptionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/handlers/TestSubUnsubHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/subscriptions/StubSubscriptionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/subscriptions/TestMMSubscriptionManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12526319" name="BK-252.diff" size="110159" author="hustlmsp" created="Thu, 10 May 2012 09:21:43 +0100"/>
                            <attachment id="12545159" name="BOOKKEEPER-252.diff" size="110586" author="hustlmsp" created="Fri, 14 Sep 2012 16:31:37 +0100"/>
                            <attachment id="12545085" name="BOOKKEEPER-252.diff" size="109147" author="hustlmsp" created="Fri, 14 Sep 2012 01:11:05 +0100"/>
                            <attachment id="12543689" name="BOOKKEEPER-252.diff" size="120509" author="hustlmsp" created="Tue, 4 Sep 2012 16:35:41 +0100"/>
                            <attachment id="12531635" name="BOOKKEEPER-252.diff" size="110134" author="hustlmsp" created="Mon, 11 Jun 2012 06:42:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 May 2012 08:27:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>238899</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyn6pj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169274</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>