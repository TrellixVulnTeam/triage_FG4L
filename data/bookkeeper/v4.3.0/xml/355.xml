<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:31:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-355/BOOKKEEPER-355.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-355] Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-355</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Scenario:&lt;br/&gt;
------------&lt;br/&gt;
1. Ledger is created with ensemble and quorum size as 2, written with one entry&lt;br/&gt;
2. Now first bookie is in the ensemble is made down.&lt;br/&gt;
3. Another client fence and trying to recover the same ledger&lt;br/&gt;
4. During this time ensemble change will happen and new bookie will be added. But this bookie is not able to connect.&lt;br/&gt;
5. This recovery will fail.&lt;br/&gt;
7. Now previously added bookie came up.&lt;br/&gt;
8. Another client trying to recover the same ledger.&lt;br/&gt;
9. Since new bookie is first in the ensemble, doRecoveryRead() is reading from that bookie and getting NoSuchLedgerException and closing the ledger with -1&lt;/p&gt;

&lt;p&gt;i.e. Marking the ledger as empty, even though first client had successfully written one entry.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12602144">BOOKKEEPER-355</key>
            <summary>Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="vinayrpet">Vinayakumar B</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Aug 2012 11:02:04 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:59 +0000</updated>
                            <resolved>Mon, 7 Jan 2013 11:25:54 +0000</resolved>
                                    <version>4.1.0</version>
                    <version>4.2.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13431192" author="vinayrpet" created="Wed, 8 Aug 2012 17:03:31 +0100"  >&lt;p&gt;Attaching patch&lt;/p&gt;</comment>
                            <comment id="13431518" author="hustlmsp" created="Thu, 9 Aug 2012 01:50:39 +0100"  >&lt;p&gt;Thanks Vinay.&lt;/p&gt;

&lt;p&gt;I think this issue is related to jira &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-163&quot; title=&quot;Prevent incorrect NoSuchLedgerException for readLastConfirmed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-163&quot;&gt;&lt;del&gt;BOOKKEEPER-163&lt;/del&gt;&lt;/a&gt;. But it is a bit different. NoSuchLedger is due to a new bookie is selected to do recovery add, but the new bookie failed to add the entry. so next recovery operation would encountered NoSuchLedger exception and close ledger.&lt;/p&gt;

&lt;p&gt;The test case you added seems OK for me. A few comments about your patch:&lt;br/&gt;
1) it would be better to not add separated read code path in LedgerRecoveryOp. You could still leverage PendingReadOp, but added a method #initiateWithRecovery() to tell PendingReadOp is a recovery read.&lt;br/&gt;
2) I don&apos;t like the idea to send all request to the quorum and wait all responses. It is totally bad in a distributed system that you could not depends on all bookies are alive. And I think NoSuchLedger is a rare case, so how about reading the first bookie, if it responded with NoSuchLedger, we had to check next bookie until we received all bookies in quorum responded NoSuchLedger. Then we know it is NoSuchLedger and finished recovery and close it.&lt;/p&gt;

&lt;p&gt;As the explanation, it is a kind of special read strategy used for recovery read. so I think this jira could leverage a clean ReadStrategy we introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-336&quot; title=&quot;bookie readEntries is taking more time if the ensemble has failed bookie(s)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-336&quot;&gt;&lt;del&gt;BOOKKEEPER-336&lt;/del&gt;&lt;/a&gt; to provide a recovery read strategy.&lt;/p&gt;</comment>
                            <comment id="13431599" author="rakeshr" created="Thu, 9 Aug 2012 07:19:09 +0100"  >&lt;p&gt;Hi Vinay its good catch.&lt;/p&gt;

&lt;p&gt;@Sijie&lt;br/&gt;
I like the approach. IMHO little more needs to see the case of disk failures.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And I think NoSuchLedger is a rare case, so how about reading the first bookie, if it responded with NoSuchLedger, we had to check next bookie until we received all bookies in quorum responded NoSuchLedger. Then we know it is NoSuchLedger and finished recovery and close it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Also, we could look at NoSuchEntryException. Consider a case where disk failed and here closing ledger may cause inconsistency. It needs to check with next bookie until quorum sends NoSuchEntry(that couldn&apos;t afford since we crossed more than tolerated failures).&lt;/p&gt;</comment>
                            <comment id="13431622" author="hustlmsp" created="Thu, 9 Aug 2012 08:01:16 +0100"  >&lt;p&gt;@Rakesh,&lt;/p&gt;

&lt;p&gt;I agreed to check NoSuchLedger and NoSuchEntry exception. Waiting for all responses is pessimistic solution. I would prefer to do it in optimistic way. For NoSuchLedger and NoSuchEntry, we just wait for all responses to confirm it is really a NoSuchLedger and NoSuchEntry.&lt;/p&gt;</comment>
                            <comment id="13431627" author="vinayrpet" created="Thu, 9 Aug 2012 08:05:56 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; for taking a look here.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt; would be better to not add separated read code path in LedgerRecoveryOp. You could still leverage PendingReadOp, but added a method #initiateWithRecovery() to tell PendingReadOp is a recovery read.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In &lt;tt&gt;PendingReadOp#readComplete()&lt;/tt&gt; following snippet is present, which is the one who created the problem in this case. Otherwise it would have tried to next bookie if NoSuchLedger encountered on first bookie exactly as suggested.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we just read only one entry, and &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; entry is not existed (in recoveryRead &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt;)
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// we don&apos;t need to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; ReattemptRead, otherwise we could not handle following &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt;:
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;//
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// an empty ledger with quorum (bk1, bk2), bk2 is failed forever.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// bk1 &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; NoLedgerException, client &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; ReattemptRead to bk2 but bk2 isn&apos;t connected
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// so the read 0 entry would failed. &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; ledger could never be closed.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (startEntryId == endEntryId) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (BKException.Code.NoSuchLedgerExistsException == rc
                    || BKException.Code.NoSuchEntryException == rc) {
                lh.opCounterSem.release();
                submitCallback(rc);
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
            }
        }&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;According to comment here, If one bookie throws NoSuchLedger and other bookie not able to connect, then why we need to assume that next entry is not written and close the ledger with one less entry.&lt;/p&gt;

&lt;p&gt;In current case, first client ( Original writer) had successfully written the entry and got success response also. But problem created during recoveryAdd. &lt;/p&gt;

&lt;p&gt;Just removal of above code will solve the problem. No other changes required.&lt;/p&gt;</comment>
                            <comment id="13431644" author="hustlmsp" created="Thu, 9 Aug 2012 08:42:53 +0100"  >&lt;p&gt;ah, If I remembered correctly, the code is added to try to resolve a bookie is gone for-ever as comments. but seems that the fix isn&apos;t right, which introduce the issue here. You fix to remove above code is right. &lt;/p&gt;

&lt;p&gt;But we need to think how to address the case described in the comments, which is a generic problem:&lt;br/&gt;
If some bookies of a quorum gone forever, some bookies of this quorum are still alive but doesn&apos;t have that entry (NoSuchEntry or NoSuchLedger), then the ledger doesn&apos;t have any evidence to recovery/close it. But it would be a separated jira to discuss. &lt;/p&gt;
</comment>
                            <comment id="13431670" author="vinayrpet" created="Thu, 9 Aug 2012 09:26:07 +0100"  >&lt;p&gt;I will post the patch with above changes. I will rise one Jira in sometime(as of now i am unable to rise due to some problem in Jira) to handle the mentioned issue.&lt;/p&gt;</comment>
                            <comment id="13431681" author="umamaheswararao" created="Thu, 9 Aug 2012 09:53:29 +0100"  >&lt;blockquote&gt;
&lt;p&gt;If some bookies of a quorum gone forever, some bookies of this quorum are still alive but doesn&apos;t have that entry (NoSuchEntry or NoSuchLedger), then the ledger doesn&apos;t have any evidence to recovery/close it. But it would be a separated jira to discuss. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, this we have to discuss more to find better way to close or recover in that situation.&lt;/p&gt;

&lt;p&gt;BTW, great catch Vinay. Thanks a lot, for your analysis.&lt;/p&gt;</comment>
                            <comment id="13431700" author="hustlmsp" created="Thu, 9 Aug 2012 10:17:39 +0100"  >&lt;p&gt;@Vinay, thanks. good job.&lt;/p&gt;</comment>
                            <comment id="13431772" author="vinayrpet" created="Thu, 9 Aug 2012 13:28:35 +0100"  >&lt;blockquote&gt;&lt;p&gt;If some bookies of a quorum gone forever, some bookies of this quorum are still alive but doesn&apos;t have that entry (NoSuchEntry or NoSuchLedger), then the ledger doesn&apos;t have any evidence to recovery/close it. But it would be a separated jira to discuss.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-356&quot; title=&quot;Ledger will never recover if one of the quorum bookie is down forever and others dont have entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-356&quot;&gt;&lt;del&gt;BOOKKEEPER-356&lt;/del&gt;&lt;/a&gt; is rised to handle this problem&lt;/p&gt;</comment>
                            <comment id="13431870" author="vinayrpet" created="Thu, 9 Aug 2012 15:51:34 +0100"  >&lt;p&gt;Attaching the patch with fixed comments&lt;/p&gt;</comment>
                            <comment id="13434118" author="hustlmsp" created="Tue, 14 Aug 2012 14:36:52 +0100"  >&lt;p&gt;the patch would fail test case &apos;BookieRecoveryTest#testBookieRecoveryOnOpenedLedgers&apos;. so I think we need to reach an agreement about the cases described in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-356&quot; title=&quot;Ledger will never recover if one of the quorum bookie is down forever and others dont have entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-356&quot;&gt;&lt;del&gt;BOOKKEEPER-356&lt;/del&gt;&lt;/a&gt; before pushing it.&lt;/p&gt;</comment>
                            <comment id="13438531" author="ikelly" created="Tue, 21 Aug 2012 09:30:50 +0100"  >&lt;p&gt;The current patch fails tests. Cancelling the patch until we have a fix for this and possibly &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-356&quot; title=&quot;Ledger will never recover if one of the quorum bookie is down forever and others dont have entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-356&quot;&gt;&lt;del&gt;BOOKKEEPER-356&lt;/del&gt;&lt;/a&gt; first.&lt;/p&gt;</comment>
                            <comment id="13531155" author="ikelly" created="Thu, 13 Dec 2012 16:30:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-356&quot; title=&quot;Ledger will never recover if one of the quorum bookie is down forever and others dont have entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-356&quot;&gt;&lt;del&gt;BOOKKEEPER-356&lt;/del&gt;&lt;/a&gt; fixed this problem in one way, but it&apos;s still possible to hit the root cause, and i&apos;ve included a test case which does hit it (testLedgerRecoveryWithRollingRestart). Its a corner case, but a case that will kill your ledger.&lt;/p&gt;

&lt;p&gt;The buggy sequence of events is.&lt;/p&gt;

&lt;p&gt;You have a ledger with ensemble (B1, B2, B3)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;B1 brought down for maintenance&lt;/li&gt;
	&lt;li&gt;Ledger recovery started&lt;/li&gt;
	&lt;li&gt;B2 answers read last confirmed.&lt;/li&gt;
	&lt;li&gt;B1 replaced in ensemble by B4&lt;/li&gt;
	&lt;li&gt;Write to B4 fails for some reason&lt;/li&gt;
	&lt;li&gt;B1 comes back up.&lt;/li&gt;
	&lt;li&gt;B2 goes down for maintenance.&lt;/li&gt;
	&lt;li&gt;Ledger recovery starts (ledger is now unavailable)&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;The core of the issue is that recovery updates the ensemble for a ledger before writing anything. Recovery only needs to update ensembles when closing the ledger, and the patch does exactly that.&lt;/p&gt;</comment>
                            <comment id="13531373" author="hustlmsp" created="Thu, 13 Dec 2012 19:36:32 +0000"  >&lt;p&gt;two minor questions about ledger close need you to clarify.&lt;/p&gt;

&lt;p&gt;after this change, two clients openLedger and tried ledger recovery at the same time. so these two clients might recover this ledger with different ensembles. during closing, there are two chances:&lt;/p&gt;

&lt;p&gt;1) client1 closed the ledger succeed. client2 tried to update ledger metadata with its recovered ensemble but failed. client2 reread ledger metadata and find the conflicts between these two ledger metadata could be resolved. so client2 update the ledger metadata with its version, which overwrite client1&apos;s.&lt;/p&gt;

&lt;p&gt;for example, ensemble (A, B, C) is changed to (A, B, D) by client 1, overwritten to (A, B, E) by client 2.&lt;br/&gt;
so in client 1, it still see the ensemble as (A, B, D) not (A, B, E). both (A, B, D) and (A, B, E) are right from the logic. but these two different reads seems different views. could it be a problem? if not, we need to clarify it.&lt;/p&gt;

&lt;p&gt;2) if the confliction between these two ledger metadata could not be resolved. one client would fail with openLedger. then the behavior of two current readers of a un-closed ledger is undefined as 1). so the question is if the ledger is closed by other client, should we need to fail the client trying opening the ledger? If not, we need to improve the close logic. otherwise, we need clarify the undefined behavior.&lt;/p&gt;

&lt;p&gt;for example, ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, D) and M =&amp;gt; (A, B, E) (N &amp;lt; M) in client 1. ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, E) in client 2.&lt;/p&gt;

</comment>
                            <comment id="13531549" author="ikelly" created="Thu, 13 Dec 2012 21:45:08 +0000"  >&lt;p&gt;Hmm, there&apos;s also GC implications. If the new bookie isn&apos;t in the metadata, the entries may be GC&apos;d. &lt;/p&gt;</comment>
                            <comment id="13532204" author="ikelly" created="Fri, 14 Dec 2012 10:01:07 +0000"  >&lt;p&gt;The changes I attached raise a couple of issues, and isn&apos;t safe with 4.2 GC (it will be fine with 4.3 changes). Therefore, im going to move those changes to a new JIRA for 4.3 and for this jira ill just attach the testcase to verify that the original case doesn&apos;t exist anymore.&lt;/p&gt;</comment>
                            <comment id="13532885" author="hustlmsp" created="Sat, 15 Dec 2012 01:52:40 +0000"  >&lt;p&gt;hmm. I don&apos;t think it isn&apos;t safe with 4.2 GC, since 4.2 GC is ScanAndCompare GC, not a ledger metadata based GC. 4.3 GC would have some problems with that, but I think a FULL gc could avoid it.&lt;/p&gt;

&lt;p&gt;The point I raised the comment is to figure out if two closed ledger hold different version of ledger metadata in memory, is it OK? if it was OK, then I think the fix looks good.&lt;/p&gt;

&lt;p&gt;I think this issue is a know issue which would affect correctness of ledger recovery. if we knew it, it would be better to fix it not leaving to next release.&lt;/p&gt;</comment>
                            <comment id="13533001" author="ikelly" created="Sat, 15 Dec 2012 11:57:53 +0000"  >&lt;p&gt;Ah, this is true. in 4.2 is just checks if the ledger exists in the metadata, not whether the bookie is part of that ledger. Regarding two closing at the same time. &lt;/p&gt;

&lt;p&gt;For concurrent closes, this LedgerMetadata should resolve fine, as we don&apos;t check the bookie details in resolveConflict(), just when the ensemble changes, which should be the same if both have recovered correctly.&lt;/p&gt;</comment>
                            <comment id="13533576" author="hustlmsp" created="Mon, 17 Dec 2012 00:11:30 +0000"  >&lt;p&gt;conflict resolve failed when the number of ensembles are different. &lt;/p&gt;

&lt;p&gt;c1: ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, D) and M =&amp;gt; (A, B, E) (N &amp;lt; M)&lt;br/&gt;
c2: ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, E)&lt;/p&gt;

&lt;p&gt;this two ensemble change are treated as conflicted so one would fail when opening ledger.&lt;/p&gt;</comment>
                            <comment id="13533772" author="rakeshr" created="Mon, 17 Dec 2012 09:36:04 +0000"  >&lt;p&gt;Thanks guys for the good progress. Sorry for pitching late, I&apos;m busy with our internal releases and other schedules.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;c1: ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, D) and M =&amp;gt; (A, B, E) (N &amp;lt; M)&lt;br/&gt;
c2: ensemble N =&amp;gt; (A, B, C) is changed to N =&amp;gt; (A, B, E)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ve gone through the latest code. As Ivan mentioned, concurrent closes have Ledger#resolveConflicts() mechanism and would help to handle most of the cases. I could also see one possible case of concurrency and what you guys feel about the following race condition:&lt;/p&gt;

&lt;p&gt;1) Assume, c1 &amp;amp; c2 both initiates recovery and sees the failure of C. &lt;/p&gt;

&lt;p&gt;2) Say c1 would try replacing C with D and at same time c2 would try replacing C with E. &lt;/p&gt;

&lt;p&gt;3) Again assume, c1 &amp;amp; c2 sends the metadata update request simulataneously.&lt;/p&gt;

&lt;p&gt;Consider c1 would succeeded and c2 recevies the metadataversion exception. Now c2 will enters into LedgerHandle#resolveconflicts(), here its checking whether C (failed bookie) exists in the new zkmetadata. As c1 would previously modified the metadata (C with D), c2 will be thinking the failed bookie is replaced with E and go ahead with unnecessary writes to E. Below is existing code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
             metadata.setVersion(newMeta.getVersion());
            &lt;span class=&quot;code-comment&quot;&gt;// Resolve the conflicts &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; zk metadata still contains failed bookie
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (newMeta.currentEnsemble.get(ensembleInfo.bookieIndex).equals(
                    ensembleInfo.addr)) {
            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                &lt;span class=&quot;code-comment&quot;&gt;// the failed bookie has been replaced
&lt;/span&gt;                blockAddCompletions.decrementAndGet();
                unsetSuccessAndSendWriteRequest(ensembleInfo.bookieIndex);
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;IMHO, we would add the following checks in the LedgerHandle#resolveConflicts() for &quot;failed bookie has been replaced in ZK&quot;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (newMeta.currentEnsemble.get(ensembleInfo.bookieIndex).equals(
                    ensembleInfo.addr)) {
                 .....
            }&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metadata.currentEnsemble.get(ensembleInfo.bookieIndex)
                    .equals(newMeta.currentEnsemble
                            .get(ensembleInfo.bookieIndex))) {
                &lt;span class=&quot;code-comment&quot;&gt;// the failed bookie has been replaced
&lt;/span&gt;                blockAddCompletions.decrementAndGet();
                unsetSuccessAndSendWriteRequest(ensembleInfo.bookieIndex);
            }&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                &lt;span class=&quot;code-comment&quot;&gt;// some other client would have replaced the failed
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// bookie with &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one. Hence failing!
&lt;/span&gt;                ......
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;-Rakesh&lt;/p&gt;</comment>
                            <comment id="13533978" author="ikelly" created="Mon, 17 Dec 2012 15:12:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; In this case, the code path you&apos;re talking about doesn&apos;t get executed, as we don&apos;t use ChangeEnsembleCb during recovery with my patch. However, LedgerMetadata#resolveConflict does get called. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; The scenario you&apos;re talking about would only happen if 2 clients try to recover, and the one of them encounters chooses a faulty bookie when selecting a new bookie to replicate to. I think it&apos;s pretty safe to remove the check on the number of ensembles, if the ledger is closed and the end entry matches. What do you think?&lt;/p&gt;</comment>
                            <comment id="13534639" author="hustlmsp" created="Tue, 18 Dec 2012 04:45:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt; sounds good for me. +1 for remove checking if the ledger is closed and end entry matches.&lt;/p&gt;</comment>
                            <comment id="13534833" author="ikelly" created="Tue, 18 Dec 2012 11:28:47 +0000"  >&lt;p&gt;New patch allows resolution if the ledger is closed but ensembles have a different count (is possible as discussed in previous comments).&lt;/p&gt;</comment>
                            <comment id="13535663" author="hustlmsp" created="Wed, 19 Dec 2012 05:35:31 +0000"  >&lt;p&gt;hmm. you new patch just added code for resolving conflicts, but doesn&apos;t include the fixes. I am a bit confused. if the conflicts could be resolved, I assume that it is safe to include your fixes, right?&lt;/p&gt;</comment>
                            <comment id="13536218" author="ikelly" created="Wed, 19 Dec 2012 18:12:06 +0000"  >&lt;p&gt;Oops, forgot to roll back my branch. Attaching new patch. Requires &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-520&quot; title=&quot;BookieFailureTest hangs on precommit build&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-520&quot;&gt;&lt;del&gt;BOOKKEEPER-520&lt;/del&gt;&lt;/a&gt;, as it modifies the same area.&lt;/p&gt;</comment>
                            <comment id="13536264" author="hadoopqa" created="Wed, 19 Dec 2012 18:35:43 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-355&quot; title=&quot;Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-355&quot;&gt;&lt;del&gt;BOOKKEEPER-355&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12561749/0003-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0003-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&lt;/a&gt; downloaded at Wed Dec 19 18:33:06 UTC 2012&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; Patch failed to apply to head of branch&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;</comment>
                            <comment id="13536794" author="hustlmsp" created="Thu, 20 Dec 2012 05:50:04 +0000"  >&lt;p&gt;resubmitted the patch to trigger pre-commit build, since &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-520&quot; title=&quot;BookieFailureTest hangs on precommit build&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-520&quot;&gt;&lt;del&gt;BOOKKEEPER-520&lt;/del&gt;&lt;/a&gt; is in.&lt;/p&gt;</comment>
                            <comment id="13536796" author="hustlmsp" created="Thu, 20 Dec 2012 05:50:50 +0000"  >&lt;p&gt;BTW, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; could you take a look at the patch when you had time?&lt;/p&gt;</comment>
                            <comment id="13541136" author="rakeshr" created="Sun, 30 Dec 2012 19:06:44 +0000"  >&lt;p&gt;Hi Ivan, patch looks nice.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Could you please add &apos;@Test(timeout = )&apos; for the test cases.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I doubt whether similar situation comes during normal add entries also. Here, we are first updating the ledger metadata and then tries writing the entries.&lt;br/&gt;
I feel its safe if we could reverse the logic of LedgerHandle#handleBookieFailure() like:&lt;br/&gt;
1)Replace the new bookie to the metadata.currentEnsemble, now sends a write entry.&lt;br/&gt;
2)Then update the zkmetadata only after the successful writes of an entry. Otherwise finds another bookie..&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;How does it sound to you?&lt;/p&gt;</comment>
                            <comment id="13542213" author="ikelly" created="Wed, 2 Jan 2013 16:21:14 +0000"  >&lt;p&gt;New patch adds timeout.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I doubt whether similar situation comes during normal add entries also. Here, we are first updating the ledger metadata and then tries writing the entries.&lt;br/&gt;
I feel its safe if we could reverse the logic of LedgerHandle#handleBookieFailure() like:&lt;br/&gt;
1)Replace the new bookie to the metadata.currentEnsemble, now sends a write entry.&lt;br/&gt;
2)Then update the zkmetadata only after the successful writes of an entry. Otherwise finds another bookie..&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We could change it to do this, but i don&apos;t see any compelling reason to, so we should leave it as is, as it works now. A similar situation cannot occur with normal adds, as a fails bookie will not contain the entry in any case, so replacing it is safe.&lt;/p&gt;</comment>
                            <comment id="13542230" author="hadoopqa" created="Wed, 2 Jan 2013 16:50:39 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-355&quot; title=&quot;Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-355&quot;&gt;&lt;del&gt;BOOKKEEPER-355&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12562919/0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&lt;/a&gt; downloaded at Wed Jan  2 16:21:12 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 759&lt;br/&gt;
.    Tests failed: 1&lt;br/&gt;
.    Tests errors: 2&lt;/p&gt;

&lt;p&gt;.    The patch failed the following testcases:&lt;/p&gt;

&lt;p&gt;.      testBookieClusterRestart(org.apache.bookkeeper.replication.AuditorBookieTest)&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/185/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/185/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13542256" author="rakeshr" created="Wed, 2 Jan 2013 17:54:09 +0000"  >&lt;p&gt;@Ivan&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We could change it to do this, but i don&apos;t see any compelling reason to, so we should leave it as is, as it works now. A similar situation cannot occur with normal adds, as a fails bookie will not contain the entry in any case, so replacing it is safe&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, I agree. &lt;/p&gt;


&lt;p&gt;Latest patch looks good, apart from the build failures -1 TESTS&lt;/p&gt;</comment>
                            <comment id="13542525" author="fpj" created="Wed, 2 Jan 2013 23:08:15 +0000"  >&lt;p&gt;It looks like this assertion in LedgerMetadata is failing: assert ensembles.isEmpty() || startEntryId &amp;gt;= ensembles.lastKey();&lt;/p&gt;</comment>
                            <comment id="13542573" author="fpj" created="Wed, 2 Jan 2013 23:54:33 +0000"  >&lt;p&gt;For the testBookieClusterRestart failure, if I&apos;m reading the log messages right, an auditor is being elected after restarting the electors:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2013-01-02 16:26:53,908 - INFO  - [AuditorElector-67.195.138.27:15020:Auditor@169] - I&apos;m starting as Auditor Bookie
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but I&apos;m not exactly sure why waitForNewAuditor is failing.&lt;/p&gt;</comment>
                            <comment id="13543870" author="ikelly" created="Fri, 4 Jan 2013 13:13:53 +0000"  >&lt;p&gt;Last patch was bad. Didn&apos;t actually have the handleBookieFailure changes.&lt;/p&gt;</comment>
                            <comment id="13543975" author="hadoopqa" created="Fri, 4 Jan 2013 16:04:00 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-355&quot; title=&quot;Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-355&quot;&gt;&lt;del&gt;BOOKKEEPER-355&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12563287/0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&lt;/a&gt; downloaded at Fri Jan  4 14:42:14 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 TESTS&lt;/font&gt; - patch does not compile, cannot run testcases&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/197/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/197/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13544004" author="hadoopqa" created="Fri, 4 Jan 2013 16:40:23 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-355&quot; title=&quot;Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-355&quot;&gt;&lt;del&gt;BOOKKEEPER-355&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12563287/0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch&lt;/a&gt; downloaded at Fri Jan  4 16:09:45 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 780&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/198/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13544634" author="hustlmsp" created="Sat, 5 Jan 2013 08:48:04 +0000"  >&lt;p&gt;+1 for the latest patch.&lt;/p&gt;</comment>
                            <comment id="13545807" author="ikelly" created="Mon, 7 Jan 2013 11:25:55 +0000"  >&lt;p&gt;Committed as r1429756. Thanks for reviewing guys.&lt;/p&gt;</comment>
                            <comment id="13545849" author="hudson" created="Mon, 7 Jan 2013 12:31:28 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk2 #38 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk2/38/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk2/38/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-355&quot; title=&quot;Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during  recovery add&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-355&quot;&gt;&lt;del&gt;BOOKKEEPER-355&lt;/del&gt;&lt;/a&gt;: Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during recovery add (ivank) (Revision 1429756)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerRecoveryTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12603455">BOOKKEEPER-365</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12624496">BOOKKEEPER-520</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12601655">HDFS-3769</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12563287" name="0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="18776" author="ikelly" created="Fri, 4 Jan 2013 13:13:53 +0000"/>
                            <attachment id="12562919" name="0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="7827" author="ikelly" created="Wed, 2 Jan 2013 16:15:24 +0000"/>
                            <attachment id="12561468" name="0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="7812" author="ikelly" created="Tue, 18 Dec 2012 11:28:47 +0000"/>
                            <attachment id="12560947" name="0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="5592" author="ikelly" created="Fri, 14 Dec 2012 10:20:47 +0000"/>
                            <attachment id="12560802" name="0001-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="15036" author="ikelly" created="Thu, 13 Dec 2012 16:30:28 +0000"/>
                            <attachment id="12561749" name="0003-BOOKKEEPER-355-Ledger-recovery-will-mark-ledger-as-c.patch" size="18750" author="ikelly" created="Wed, 19 Dec 2012 18:12:06 +0000"/>
                            <attachment id="12540037" name="BOOKKEEPER-355.patch" size="6666" author="vinayrpet" created="Thu, 9 Aug 2012 15:51:34 +0100"/>
                            <attachment id="12539886" name="BOOKKEEPER-355.patch" size="12732" author="vinayrpet" created="Wed, 8 Aug 2012 17:03:31 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Aug 2012 00:50:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>295933</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyxxnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>231960</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>