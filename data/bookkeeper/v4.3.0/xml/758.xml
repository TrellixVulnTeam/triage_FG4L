<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:32:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-758/BOOKKEEPER-758.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-758] Add TryReadLastAddConfirmed API</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-758</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;add TryReadLastConfirmed to read last confirmed without coverage checking, as for readers which polls LAC, they just need LAC.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12713563">BOOKKEEPER-758</key>
            <summary>Add TryReadLastAddConfirmed API</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hustlmsp">Sijie Guo</assignee>
                                    <reporter username="hustlmsp">Sijie Guo</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 May 2014 06:01:53 +0100</created>
                <updated>Fri, 30 May 2014 13:45:16 +0100</updated>
                            <resolved>Fri, 30 May 2014 13:02:00 +0100</resolved>
                                                    <fixVersion>4.3.0</fixVersion>
                                    <component>bookkeeper-client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13995075" author="fpj" created="Mon, 12 May 2014 14:27:17 +0100"  >&lt;p&gt;It looks good. It sounds like you want to have a weaker version of ReadLastAddConfirmed that simply returns some valid value, not necessarily the last.&lt;/p&gt;

&lt;p&gt;It looks like the callback can be called multiple times. For example, we can return immediately here:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;// callback immediately
cb.readLastConfirmedDataComplete(BKException.Code.OK, maxRecoveredData);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and later on here:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;        if (numResponsesPending == 0 &amp;amp;&amp;amp; !completed) {
            if (!hasValidResponse) {
                // no success called
                cb.readLastConfirmedDataComplete(BKException.Code.LedgerRecoveryException, maxRecoveredData);
            } else {
                // callback
                cb.readLastConfirmedDataComplete(BKException.Code.OK, maxRecoveredData);
            }
            completed = true;
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the test cases, don&apos;t we have to wait until the bookie is down when we kill a bookie?&lt;/p&gt;

&lt;p&gt;(typo) Also, in the last test case, it shouldn&apos;t be numEntries here:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;       for (int i = 0; i &amp;lt; numEntries; i++) {
            killBookie(lh.getLedgerMetadata().currentEnsemble.get(i));
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13995965" author="hustlmsp" created="Tue, 13 May 2014 03:34:29 +0100"  >&lt;blockquote&gt;
&lt;p&gt; It sounds like you want to have a weaker version of ReadLastAddConfirmed that simply returns some valid value, not necessarily the last.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct. The TryReadLastAddconfirmed API will callback with the first larger LAC that it received, which is most of readers want as they want a new LAC to move on.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It looks like the callback can be called multiple times&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup. that is the intention behavior in TryReadLastAddConfirmedOp, so we could get the LAC updated when we received callbacks, as we already issued read lac to multiple bookies, we don&apos;t want to waste bandwidth.&lt;br/&gt;
But for the api that exposed to user, it would be only callback once. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the test cases, don&apos;t we have to wait until the bookie is down when we kill a bookie?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;killBookie is a synchronous call. so the bookie should be down after it returned.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, in the last test case, it shouldn&apos;t be numEntries here:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good catch. Will fix it in new patch.&lt;/p&gt;</comment>
                            <comment id="13996065" author="hustlmsp" created="Tue, 13 May 2014 06:29:29 +0100"  >&lt;p&gt;attached a new patch fix the testcase.&lt;/p&gt;</comment>
                            <comment id="13996511" author="fpj" created="Tue, 13 May 2014 16:46:30 +0100"  >&lt;p&gt;+1, looks good. Since this is an extension of the API, it would be good to have another +1 here. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13997508" author="ikelly" created="Wed, 14 May 2014 13:41:25 +0100"  >&lt;p&gt;the multiple callback invocations concerns me. How does the client know that they should issue another call to tryReadLAC?&lt;/p&gt;</comment>
                            <comment id="13999080" author="hadoopqa" created="Thu, 15 May 2014 19:39:51 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-758&quot; title=&quot;Add TryReadLastAddConfirmed API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-758&quot;&gt;&lt;del&gt;BOOKKEEPER-758&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12644557/BOOKKEEPER-758.v2.diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-758.v2.diff&lt;/a&gt; downloaded at Thu May 15 18:10:57 UTC 2014&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 919&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/636/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/636/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14000311" author="hustlmsp" created="Fri, 16 May 2014 22:11:38 +0100"  >&lt;p&gt;in general, if a reader is tailing current ledger, it would use following code snippet to poll latest lac to move on. the multiple callbacks is to update the lac internally, so when the reader move on to read next entry, the getLastAddConfirmed will return updated lac.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; readEntry = xx;
lh.readEntries(readEntry, readEntry);
++readEntry;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (readEntry &amp;gt; lh.getLastAddConfirmed()) {
  lh.tryReadLastAddConfirmed();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14003963" author="fpj" created="Tue, 20 May 2014 21:56:53 +0100"  >&lt;p&gt;But this code does not benefit at all from the fact that the callback can be called multiple times, no? I don&apos;t think it is necessarily a big deal, but it isn&apos;t very clear the precise semantics and how applications can benefit from potentially multiple calls to the callback.&lt;/p&gt;</comment>
                            <comment id="14004255" author="hustlmsp" created="Wed, 21 May 2014 03:55:25 +0100"  >&lt;p&gt;to be clear, the multiple callbacks is internally in bk client, the user will only get one callback. the benefit to the code here is: when user received a LAC response from any bookie, it could move on to read the entries w/o waiting other bookies responses; so the reading entries could be paralleled with receiving LAC responses from other bookies. the benefit isn&apos;t the goal of this API, this API is to not block readLAC on waiting for LAC responses from multiple bookies.&lt;/p&gt;</comment>
                            <comment id="14005296" author="fpj" created="Wed, 21 May 2014 23:02:12 +0100"  >&lt;p&gt;Sounds right, it is not propagated up to the application.&lt;/p&gt;</comment>
                            <comment id="14007193" author="fpj" created="Fri, 23 May 2014 15:24:47 +0100"  >&lt;p&gt;Just a ping... I&apos;m happy to have this one in, waiting for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14009572" author="ikelly" created="Tue, 27 May 2014 12:04:15 +0100"  >&lt;p&gt;Ah, if it doesn&apos;t go to the client it&apos;s fine. There&apos;s a race condition in asyncTryReadLastConfirmed() though. Even though completed is volatile, there&apos;s no guarantee that two threads won&apos;t read completed with value false, then run the completion action, and both try to set completed to true. It would be better to use a atomicboolean and check and set it at the start of the callback.&lt;/p&gt;
</comment>
                            <comment id="14009791" author="hustlmsp" created="Tue, 27 May 2014 16:26:45 +0100"  >&lt;p&gt;since the callbacks should be executed in single thread in ordersafeexecutor. so the boolean doesn&apos;t need to be volatile. for safety, I could change to use atomicboolean.&lt;/p&gt;</comment>
                            <comment id="14009830" author="ikelly" created="Tue, 27 May 2014 16:55:01 +0100"  >&lt;p&gt;Ya, change it. The volatile looks like you&apos;re aiming for thread safety, so it&apos;s confusing. We shouldn&apos;t rely too much on orderedsafeexecutor also, since our callbacks thread model isn&apos;t well defined. Otherwise this is good to go.&lt;/p&gt;</comment>
                            <comment id="14011710" author="fpj" created="Wed, 28 May 2014 23:24:53 +0100"  >&lt;blockquote&gt;&lt;p&gt;our callbacks thread model isn&apos;t well defined&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds like a potential area of improvement...&lt;/p&gt;</comment>
                            <comment id="14012163" author="hustlmsp" created="Thu, 29 May 2014 08:40:51 +0100"  >&lt;p&gt;addressed comments.&lt;/p&gt;</comment>
                            <comment id="14012164" author="hustlmsp" created="Thu, 29 May 2014 08:43:40 +0100"  >&lt;blockquote&gt;
&lt;p&gt;our callbacks thread model isn&apos;t well defined&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;aren&apos;t all the callbacks running in ordersafeexecutor by ledger id? callbacks of same ledger are running in same thread, no?&lt;/p&gt;</comment>
                            <comment id="14012266" author="hadoopqa" created="Thu, 29 May 2014 11:36:12 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-758&quot; title=&quot;Add TryReadLastAddConfirmed API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-758&quot;&gt;&lt;del&gt;BOOKKEEPER-758&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12647317/BOOKKEEPER-758.v3.diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-758.v3.diff&lt;/a&gt; downloaded at Thu May 29 10:06:53 UTC 2014&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 919&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/641/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/641/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14012329" author="ikelly" created="Thu, 29 May 2014 13:42:15 +0100"  >&lt;p&gt;The patch actually fails findbugs. There&apos;s a problem with the CI scripts, so it doesn&apos;t show up. I&apos;m create another JIRA to fix that.&lt;/p&gt;</comment>
                            <comment id="14012400" author="ikelly" created="Thu, 29 May 2014 15:30:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;aren&apos;t all the callbacks running in ordersafeexecutor by ledger id? callbacks of same ledger are running in same thread, no?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In theory, but there&apos;s no explicit enforcement. &lt;/p&gt;</comment>
                            <comment id="14013170" author="hustlmsp" created="Fri, 30 May 2014 02:00:45 +0100"  >&lt;p&gt;attach a patch to address the findbugs issue&lt;/p&gt;</comment>
                            <comment id="14013316" author="hadoopqa" created="Fri, 30 May 2014 06:39:25 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-758&quot; title=&quot;Add TryReadLastAddConfirmed API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-758&quot;&gt;&lt;del&gt;BOOKKEEPER-758&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12647501/BOOKKEEPER-758.v4.diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-758.v4.diff&lt;/a&gt; downloaded at Fri May 30 05:04:52 UTC 2014&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;WARNING&lt;/font&gt;: the current HEAD has 23 Javadoc warning(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 919&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;red&quot;&gt;.   There is at least one warning, please check&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/644/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/644/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14013586" author="ikelly" created="Fri, 30 May 2014 13:02:00 +0100"  >&lt;p&gt;Committed r1598565. Thanks Sijie.&lt;/p&gt;</comment>
                            <comment id="14013603" author="hudson" created="Fri, 30 May 2014 13:45:16 +0100"  >&lt;p&gt;SUCCESS: Integrated in bookkeeper-trunk #651 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/651/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/651/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-758&quot; title=&quot;Add TryReadLastAddConfirmed API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-758&quot;&gt;&lt;del&gt;BOOKKEEPER-758&lt;/del&gt;&lt;/a&gt;: Add TryReadLastAddConfirmed API (sijie via ivank) (ivank: rev 1598565)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperClientStats.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/TryReadLastConfirmedOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestTryReadLastConfirmed.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12644371" name="BOOKKEEPER-758.diff" size="14907" author="hustlmsp" created="Mon, 12 May 2014 06:02:52 +0100"/>
                            <attachment id="12644557" name="BOOKKEEPER-758.v2.diff" size="17241" author="hustlmsp" created="Tue, 13 May 2014 06:28:56 +0100"/>
                            <attachment id="12647317" name="BOOKKEEPER-758.v3.diff" size="21107" author="hustlmsp" created="Thu, 29 May 2014 08:40:51 +0100"/>
                            <attachment id="12647501" name="BOOKKEEPER-758.v4.diff" size="21120" author="hustlmsp" created="Fri, 30 May 2014 02:00:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 May 2014 13:27:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391879</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzpcgn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392082</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>