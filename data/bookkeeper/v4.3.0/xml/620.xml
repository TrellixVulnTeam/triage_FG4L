<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:28:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-620/BOOKKEEPER-620.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-620] PerChannelBookieClient race during channel disconnect</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-620</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;channel &amp;amp; state are not synchronized in PerChannelBookieClient#closeInternal. so it might cause state is set to CONNECTED but the netty channel is closed by mistake in closeInternal.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12651610">BOOKKEEPER-620</key>
            <summary>PerChannelBookieClient race during channel disconnect</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="hustlmsp">Sijie Guo</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Jun 2013 01:58:41 +0100</created>
                <updated>Tue, 6 Aug 2013 18:25:30 +0100</updated>
                            <resolved>Fri, 28 Jun 2013 17:00:01 +0100</resolved>
                                                    <fixVersion>4.2.2</fixVersion>
                    <fixVersion>4.3.0</fixVersion>
                                    <component>bookkeeper-client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13679486" author="ikelly" created="Mon, 10 Jun 2013 14:17:18 +0100"  >&lt;p&gt;The race is worse than the description describes. If connect, close and connect are called in the wrong order, it can cause a NPE on the readTimeoutTimer. It can also leak a Channel, as if state is set to CONNECTING, then DISCONNECTED, another connect can start and two channels are created. The attached patch fixes this, and adds a test which should trigger this.&lt;/p&gt;</comment>
                            <comment id="13679543" author="hadoopqa" created="Mon, 10 Jun 2013 15:37:12 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12587059/0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Mon Jun 10 14:02:05 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 TESTS&lt;/font&gt; - patch does not compile, cannot run testcases&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/354/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/354/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13680101" author="hustlmsp" created="Tue, 11 Jun 2013 01:39:38 +0100"  >&lt;p&gt;yes. the description is simple. we are trying to generate the patch. but you already eager to generate a patch, that&apos;s fine. several comments as below:&lt;/p&gt;

&lt;p&gt;1. remove the LOG.info(&quot;Already connected with another channel&quot; or change it to DEBUG. it might generate lots of useless statements.&lt;br/&gt;
2. in channelDisconnected, we&apos;d better to check whether the current channel in PCBC client is the right channel disconnected in (ChannelEvent) before setting state to DISCONNECTED state. And it is better to close channel in ChannelEvent not channel in PCBC. otherwise, it would enter a dead loop: new estabilished channels are closed by previous channelDisconnected events.&lt;br/&gt;
3. it would be better to check ChannelClosedException when writing request failure and set the channel to DISCONNECTED.&lt;/p&gt;
</comment>
                            <comment id="13681312" author="ikelly" created="Wed, 12 Jun 2013 16:01:12 +0100"  >&lt;p&gt;Ah sorry, I didn&apos;t know you guys were working on a patch. I wanted to get this into 4.2.2 so I just dived right in. As it is, I think my patch needs some more work, especially around the channelDisconnected part, as I&apos;m not confident there still aren&apos;t races there. Do you guys have a different solution?&lt;/p&gt;</comment>
                            <comment id="13681429" author="hustlmsp" created="Wed, 12 Jun 2013 18:45:27 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt; your patch already addressed most of part. you possibly need to address my previous comments. I would point you to our changes if it is pushed to our branch.&lt;/p&gt;</comment>
                            <comment id="13683568" author="ikelly" created="Fri, 14 Jun 2013 18:34:11 +0100"  >&lt;p&gt;New patch addresses comments except for 3. If there&apos;s an I/O error in a netty socket, the channelDisconnected callback is called, so setting the channel to disconnected on write request failures is unnecessary. Also, I&apos;d like to minimise the number of the place we modify state to make things simpler.&lt;/p&gt;</comment>
                            <comment id="13683646" author="hadoopqa" created="Fri, 14 Jun 2013 19:37:43 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12587843/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Fri Jun 14 18:11:40 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 849&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/361/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13683830" author="hadoopqa" created="Fri, 14 Jun 2013 22:47:52 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12587843/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Fri Jun 14 21:21:38 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 849&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/363/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/363/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13684212" author="fpj" created="Sat, 15 Jun 2013 15:15:34 +0100"  >&lt;p&gt;Patch looks good to me. A couple of comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;have you really meant to say &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-5&quot; title=&quot;Issue with Netty in BookKeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-5&quot;&gt;&lt;del&gt;BOOKKEEPER-5&lt;/del&gt;&lt;/a&gt; in the test case in the patch?&lt;/li&gt;
	&lt;li&gt;I think you could have fixed a number of iterations and coordinated with CountDownLatch objs instead of relying on a 5s sleep.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13685490" author="ikelly" created="Mon, 17 Jun 2013 13:18:47 +0100"  >&lt;p&gt;New patch addresses flavio&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13685503" author="fpj" created="Mon, 17 Jun 2013 13:38:14 +0100"  >&lt;p&gt;Thanks, Ivan. I was actually thinking that connectIfNeededAndDoOp() and disconnect() should be executed in lockstep, otherwise we could have a number of calls for one while having just a single call for the other unnecessarily. &lt;/p&gt;

&lt;p&gt;The patch looks good, I just would like to understand if what I&apos;m proposing is incorrect. &lt;/p&gt;</comment>
                            <comment id="13685511" author="hadoopqa" created="Mon, 17 Jun 2013 13:47:42 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12588132/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Mon Jun 17 12:21:22 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 849&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/372/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/372/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13685548" author="ikelly" created="Mon, 17 Jun 2013 14:27:41 +0100"  >&lt;p&gt;Putting them in lockstep would mean they&apos;re not interleaved. There&apos;s enough iterations to ensure they overlap. Also, I don&apos;t start running the connects until the disconnect thread has started.&lt;/p&gt;</comment>
                            <comment id="13686217" author="hustlmsp" created="Tue, 18 Jun 2013 01:12:03 +0100"  >&lt;p&gt;&amp;gt; LOG.info(&quot;Successfully connected to bookie: {}&quot;, addr);&lt;/p&gt;

&lt;p&gt;add channel in this statement, and move this line down after the channel is assigned.&lt;/p&gt;

&lt;p&gt;&amp;gt; LOG.warn(&quot;Closed before connection completed, clean up: {}, current state {}&quot;,&lt;br/&gt;
+                                  addr, state);&lt;/p&gt;

&lt;p&gt;log channel object instead of addr, which channel give more information than addr for debugging.&lt;/p&gt;

&lt;p&gt;&amp;gt; LOG.debug(&quot;Already connected with another channel, so close the new channel &quot;);&lt;/p&gt;

&lt;p&gt;log existed channel and new connected channel, otherwise this log statement didn&apos;t give any useful information&lt;/p&gt;

&lt;p&gt;&amp;gt; LOG.error(&quot;Could not connect to bookie: {}, current state {}&quot;, addr, state);&lt;/p&gt;

&lt;p&gt;same thing, log channel rather than addr.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void closeInternal(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; permanent) {
+        ChannelFuture closeFuture = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
         &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (permanent) {
                 state = ConnectionState.CLOSED;
             } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (state != ConnectionState.CLOSED) {
                 state = ConnectionState.DISCONNECTED;
             }
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (channel != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                closeFuture = closeChannel(channel);
+                channel = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+            }
         }
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (channel != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-            channel.close().awaitUninterruptibly();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (closeFuture != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+            closeFuture.awaitUninterruptibly();
         }
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (readTimeoutTimer != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-            readTimeoutTimer.stop();
-            readTimeoutTimer = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I would suggest moving close out side of synchronization, just assigned the channel to a local variable and close this local variable out side of the synchronization block, we observed a deadlock on netty channel buffer.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
         LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Disconnected from bookie: &quot;&lt;/span&gt; + addr);
-        errorOutOutstandingEntries();
-        Channel c = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.channel;
+        Channel c = ctx.getChannel();
         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-            c.close();
+            closeChannel(c);
         }
+
+        Set&amp;lt;CompletionKey&amp;gt; addsToError = Collections.emptySet();
+        Set&amp;lt;CompletionKey&amp;gt; readsToError = Collections.emptySet();
         &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
-            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (state != ConnectionState.CLOSED) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.channel == c
+                &amp;amp;&amp;amp; state != ConnectionState.CLOSED) {
                 state = ConnectionState.DISCONNECTED;
             }
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (state == ConnectionState.CLOSED
+                || state == ConnectionState.DISCONNECTED) {
+                addsToError = addCompletions.keySet();
+                readsToError = readCompletions.keySet();
+            }
+        }
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (CompletionKey key : addsToError) {
+            errorOutAddKey(key);
+        }
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (CompletionKey key : readsToError) {
+            errorOutReadKey(key);
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;1) in general, it would be better to keep comments when you moved around the code.&lt;br/&gt;
2) it would be better to error out entries before set state back to DISCONNECTED. since after the channel is set to DISCONNECTED, the client would begin sending requests to connecting. you might error ongoing requests.&lt;/p&gt;

&lt;p&gt;so you could do conditional check first, call errorOutOutstandingEntries based on conditional checking and set the state back DISCONNECTED after error out entries.&lt;/p&gt;
</comment>
                            <comment id="13686218" author="hustlmsp" created="Tue, 18 Jun 2013 01:12:32 +0100"  >&lt;p&gt;cancel the patch until comments addressed.&lt;/p&gt;</comment>
                            <comment id="13686555" author="ikelly" created="Tue, 18 Jun 2013 11:27:44 +0100"  >&lt;p&gt;New patch addresses all comments except the channelDisconnected one.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1) in general, it would be better to keep comments when you moved around the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Both comment blocks on #errorOutOutstandingEntries() are redundant after the move. The method doc talks about classes that were removed from the codebase before I started working on it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2) it would be better to error out entries before set state back to DISCONNECTED. since after the channel is set to DISCONNECTED, the client would begin sending requests to connecting. you might error ongoing requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we error out outstanding requests before setting state to DISCONNECTED, there is a time period between the erroring and the synchronization block where more requests could be added. These would not be errored. We can&apos;t error out inside the synchronization block because it could lead to a deadlock if the request was retried. As it is now, it won&apos;t touch ongoing requests, as we only take the set of requests to error at the same time as setting the state to disconnected.&lt;/p&gt;</comment>
                            <comment id="13686569" author="hadoopqa" created="Tue, 18 Jun 2013 11:47:35 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12588322/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Tue Jun 18 10:21:30 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 849&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/374/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/374/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13688825" author="hustlmsp" created="Thu, 20 Jun 2013 04:08:29 +0100"  >&lt;blockquote&gt;
&lt;p&gt;If we error out outstanding requests before setting state to DISCONNECTED, there is a time period between the erroring and the synchronization block where more requests could be added. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;that&apos;s not true. new requests would be failed directly since the channel is closed, writing a request to a closed request would error out the request directly. error outing a request would trigger replacing a new bookie. that is not a big deal.&lt;/p&gt;

&lt;p&gt;but if you set the channel to DISCONNECTED first, you would error out outgoing requests. that is my concern.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Both comment blocks on #errorOutOutstandingEntries() are redundant after the move. The method doc talks about classes that were removed from the codebase before I started working on it&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;// DO NOT rewrite these using Map.Entry iterations. We want to iterate&lt;/li&gt;
	&lt;li&gt;// on keys and see if we are successfully able to remove the key from&lt;/li&gt;
	&lt;li&gt;// the map. Because the add and the read methods also do the same thing&lt;/li&gt;
	&lt;li&gt;// in case they get a write failure on the socket. The one who&lt;/li&gt;
	&lt;li&gt;// successfully removes the key from the map is the one responsible for&lt;/li&gt;
	&lt;li&gt;// calling the application callback.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;you just moved around the code, which doesn&apos;t change the behavior how we iterate the keys. the comment is about iterating keys. so I don&apos;t think it is redundant as you said.&lt;/p&gt;</comment>
                            <comment id="13690507" author="ikelly" created="Fri, 21 Jun 2013 18:39:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;that&apos;s not true. new requests would be failed directly since the channel is closed, writing a request to a closed request would error out the request directly. error outing a request would trigger replacing a new bookie. that is not a big deal.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I this, is true, I hadn&apos;t thought of that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;but if you set the channel to DISCONNECTED first, you would error out outgoing requests. that is my concern.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do you mean requests which were made after state was set to DISCONNECTED but before I error out the keys? This cannot happen, as I only error out the keys which are in the completions sets when set the state to DISCONNECTED. Anything added afterwards, once the synchronize block is exited, is fine. This also relates to the comment. Since I&apos;m selecting the keys in the synchronization block before erroring them out outside the block, it&apos;s not possible to do it using a foreach style loop, which is what the comment is warning against.&lt;/p&gt;</comment>
                            <comment id="13692682" author="hustlmsp" created="Tue, 25 Jun 2013 03:00:58 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Do you mean requests which were made after state was set to DISCONNECTED but before I error out the keys?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes. this is the case I mentioned.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This cannot happen, as I only error out the keys which are in the completions sets when set the state to DISCONNECTED. Anything added afterwards, once the synchronize block is exited, is fine. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t understand why you say this couldn&apos;t happen. Map#keySet just returned a view of the keys, which is backed by the underlying map, the changes to underlying map would affect the set view and vice-versa.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ConcurrentHashMap.html#keySet%28%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ConcurrentHashMap.html#keySet%28%29&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13692993" author="ikelly" created="Tue, 25 Jun 2013 13:58:07 +0100"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t understand why you say this couldn&apos;t happen. Map#keySet just returned a view of the keys, which is backed by the underlying map, the changes to underlying map would affect the set view and vice-versa&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You&apos;re right. I assumed wrongly that keySet() constructed a new set. I&apos;ve updated the patch to use guava&apos;s ImmutableSet to store the keys to be errored out. &lt;/p&gt;</comment>
                            <comment id="13693085" author="hadoopqa" created="Tue, 25 Jun 2013 15:47:55 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12589600/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Tue Jun 25 14:21:40 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 851&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/386/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/386/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13693350" author="hustlmsp" created="Tue, 25 Jun 2013 21:25:57 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
You&apos;re right. I assumed wrongly that keySet() constructed a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; set. I&apos;ve updated the patch to use guava&apos;s ImmutableSet to store the keys to be errored out. 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where the QPS is high, there will be lots of pending requests, copying keys would introduce more memory. as my comments before, there is no issue in original sequence (error out entries first and set DISCONNECTED later), why change it?&lt;/p&gt;</comment>
                            <comment id="13694038" author="ikelly" created="Wed, 26 Jun 2013 16:54:16 +0100"  >&lt;p&gt;the original sequence is harder to reason about, because you have to rely on actions taking place elsewhere in the code for correct behaviour. I thought the way I changed it made the correctness easier to verify by just looking at the channelDisconnect(). The selection of the ops to error out occurs inside the synchronization block, so you know that you are only errorring those that were pending when the state change occurred.&lt;/p&gt;

&lt;p&gt;I&apos;m not that hung up on it, though. I&apos;ve reverted that part of the patch to the original code (adding a this.channel == ctx.getChannel() check though).&lt;/p&gt;</comment>
                            <comment id="13694050" author="hadoopqa" created="Wed, 26 Jun 2013 17:17:31 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12589765/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch&lt;/a&gt; downloaded at Wed Jun 26 15:51:21 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 853&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/391/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/391/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13694408" author="hustlmsp" created="Thu, 27 Jun 2013 02:35:52 +0100"  >&lt;p&gt;I just don&apos;t want to be surprised by other problem (e.g gc issues) about the sequence. anyway, +1 for latest patch.&lt;/p&gt;</comment>
                            <comment id="13695526" author="hudson" created="Fri, 28 Jun 2013 16:56:18 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #263 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/263/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/263/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-620&quot; title=&quot;PerChannelBookieClient race during channel disconnect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-620&quot;&gt;&lt;del&gt;BOOKKEEPER-620&lt;/del&gt;&lt;/a&gt;: PerChannelBookieClient race during channel disconnect (ivank) (Revision 1497814)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13695529" author="ikelly" created="Fri, 28 Jun 2013 17:00:01 +0100"  >&lt;p&gt;Committed r1497814 to trunk.&lt;br/&gt;
Committed revision 1497824 to branch-4.2.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews and discussion guys.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12662079">BOOKKEEPER-668</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12589765" name="0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="14005" author="ikelly" created="Wed, 26 Jun 2013 16:49:50 +0100"/>
                            <attachment id="12589600" name="0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="15937" author="ikelly" created="Tue, 25 Jun 2013 13:49:11 +0100"/>
                            <attachment id="12588322" name="0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="15624" author="ikelly" created="Tue, 18 Jun 2013 11:20:33 +0100"/>
                            <attachment id="12588132" name="0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="15554" author="ikelly" created="Mon, 17 Jun 2013 13:18:47 +0100"/>
                            <attachment id="12587843" name="0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="14654" author="ikelly" created="Fri, 14 Jun 2013 18:32:29 +0100"/>
                            <attachment id="12587059" name="0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch" size="10630" author="ikelly" created="Mon, 10 Jun 2013 14:17:18 +0100"/>
                            <attachment id="12586684" name="BOOKKEEPER-620.diff" size="1482" author="ikelly" created="Fri, 7 Jun 2013 10:06:50 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Jun 2013 13:17:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331936</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzf3un:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>332265</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>