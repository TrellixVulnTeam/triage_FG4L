<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:25:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-346/BOOKKEEPER-346.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-346] Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-346</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;This jira to detect IOExceptions in &quot;LedgerCache&quot; to iterate over all the configured ledger(s).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12599089">BOOKKEEPER-346</key>
            <summary>Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12548815">BOOKKEEPER-199</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vinayrpet">Vinayakumar B</assignee>
                                    <reporter username="rakeshr">Rakesh R</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Jul 2012 10:02:18 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:33 +0000</updated>
                            <resolved>Fri, 26 Oct 2012 11:52:32 +0100</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13417078" author="vinayrpet" created="Wed, 18 Jul 2012 14:32:25 +0100"  >&lt;p&gt;Attaching the patch,&lt;br/&gt;
depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt; patch&lt;/p&gt;</comment>
                            <comment id="13417079" author="vinayrpet" created="Wed, 18 Jul 2012 14:33:18 +0100"  >&lt;p&gt;Here, on flush failure of index file, copying the contents to another directory and continue writing.&lt;/p&gt;</comment>
                            <comment id="13439554" author="vinayrpet" created="Wed, 22 Aug 2012 15:15:31 +0100"  >&lt;p&gt;Attaching the latest patch with deamon thread for disk scanning&lt;/p&gt;</comment>
                            <comment id="13441390" author="ikelly" created="Fri, 24 Aug 2012 19:50:48 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;LedgerDirManager is missing from the patch&lt;/li&gt;
	&lt;li&gt;why not have a pickDir interface on LedgerDirManager?&lt;/li&gt;
	&lt;li&gt;getSizeTillLastwrite -&amp;gt; getSizeSinceLastWrite&lt;/li&gt;
	&lt;li&gt;isRelocateIndexFile -&amp;gt; shouldRelocateIndexFile&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I don&apos;t see where setRelocatedIndexFile(true) is ever called. Where is it detected an IOException on a directory?&lt;/li&gt;
	&lt;li&gt;Does this only deal with disk full exceptions, or should it deal with faulty/dead disks as well?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441800" author="vinayrpet" created="Sat, 25 Aug 2012 08:04:32 +0100"  >&lt;p&gt;Hi Ivan,&lt;br/&gt;
Thanks for taking a look at this.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;LedgerDirManager is missing from the patch&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This patch depends on the patch attached in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;why not have a pickDir interface on LedgerDirManager?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think its good idea. Currently it was used only for cache files. May we can use the same for entry log also if we put in LedgerDirManager.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;getSizeTillLastwrite -&amp;gt; getSizeSinceLastWrite&lt;br/&gt;
isRelocateIndexFile -&amp;gt; shouldRelocateIndexFile&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. I will rename.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t see where setRelocatedIndexFile(true) is ever called. Where is it detected an IOException on a directory&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This will be called from the disk checker daemon thread which is inside LedgerDirManager.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Does this only deal with disk full exceptions, or should it deal with faulty/dead disks as well?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Currently, it is designed to handle only disk full cases. Since in cases of faulty/dead disks we might loose/corrupt the data. Shutting down the bookie in such cases. This will be done by disk checker daemon.&lt;/p&gt;</comment>
                            <comment id="13443039" author="vinayrpet" created="Tue, 28 Aug 2012 10:10:57 +0100"  >&lt;p&gt;Attaching the latest patch with above comment fixes and some more changes.&lt;/p&gt;</comment>
                            <comment id="13443080" author="ikelly" created="Tue, 28 Aug 2012 12:33:25 +0100"  >&lt;p&gt;LedgerDirsManager is still missing from the patch.&lt;/p&gt;</comment>
                            <comment id="13443084" author="vinayrpet" created="Tue, 28 Aug 2012 12:39:12 +0100"  >&lt;p&gt;Oh..I forgot to mention this again.. This patch depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I will link it.. &lt;br/&gt;
Please take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13445885" author="vinayrpet" created="Fri, 31 Aug 2012 13:54:27 +0100"  >&lt;p&gt;Attaching the latest patch.&lt;br/&gt;
This patch depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt; and contains comment fixes given in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;</comment>
                            <comment id="13448444" author="vinayrpet" created="Wed, 5 Sep 2012 05:03:04 +0100"  >&lt;p&gt;Marking PA again for visibility&lt;/p&gt;</comment>
                            <comment id="13452889" author="hustlmsp" created="Tue, 11 Sep 2012 11:31:51 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    /**
+     * Copies current file contents upto specified size to the target file and
+     * deletes the current file.
+     * If size not known then pass size as &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE to copy complete file.
+     */
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void moveToNewLocation(File newFile, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; size) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+        checkOpen(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (size == &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE) {
+            size = fc.size();
+        }
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!newFile.exists()) {
+            checkParents(newFile);
+            newFile.createNewFile();
+        }
+        FileChannel newFc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RandomAccessFile(newFile, &lt;span class=&quot;code-quote&quot;&gt;&quot;rw&quot;&lt;/span&gt;).getChannel();
+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; written = 0;
+            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (written &amp;lt; size) {
+                &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; count = fc.transferTo(written, size, newFc);
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt;= 0) {
+                    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Copying to &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; location failed&quot;&lt;/span&gt;);
+                }
+                written += count;
+            }
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (written &amp;lt;= 0 &amp;amp;&amp;amp; size &amp;gt; 0) {
+                &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Copying to &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; location failed&quot;&lt;/span&gt;);
+            }
+        } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
+            newFc.force(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
+        }
+        fc.close();
+        fc = newFc;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!delete()) {
+            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed to delete the previous index file &quot;&lt;/span&gt; + lf);
+        }
+        lf = newFile;
+    }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;first, the operation is not synchronized. it would be called in different threads (in flush thread and thread serving requests).&lt;/p&gt;

&lt;p&gt;second, this is not a transacted operation. so if the bookie server failed before deleted the old index file. then there are two index files existed after bookie server restarted. it would introduce the issue described in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-374&quot; title=&quot;Bookkeeper doesn&amp;#39;t search all ledger directories for index files.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-374&quot;&gt;&lt;del&gt;BOOKKEEPER-374&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;one possible solution for the movement, we need record a transaction for the movement, say &apos;file1&apos; move to &apos;file2&apos;. if the bookie failed before delete the original file. &apos;file1&apos; and &apos;file2&apos; are both existed in the system. when the bookie server restarts, it starts to replay the journal to ensure &apos;file1&apos; is copied to &apos;file2&apos; and &apos;file1&apos; is deleted before starting serving the requests.&lt;/p&gt;

&lt;p&gt;and we could leverage Journal to record such transaction.&lt;/p&gt;

&lt;p&gt;since it is not a small change, I would like to see others&apos; comments for this change.&lt;/p&gt;
</comment>
                            <comment id="13452902" author="vinayrpet" created="Tue, 11 Sep 2012 11:50:05 +0100"  >&lt;p&gt;Thanks Sijie. I agree with your point. &lt;/p&gt;

</comment>
                            <comment id="13471554" author="vinayrpet" created="Mon, 8 Oct 2012 14:59:39 +0100"  >&lt;p&gt;Attaching the draft patch for transaction based movement of ledger index file.&lt;br/&gt;
Please review...&lt;/p&gt;</comment>
                            <comment id="13471634" author="vinayrpet" created="Mon, 8 Oct 2012 17:04:30 +0100"  >&lt;p&gt;this patch depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13476794" author="vinayrpet" created="Tue, 16 Oct 2012 07:27:04 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; Can you please take a look at this patch for the transaction based movement of ledger cache index file.&lt;/p&gt;</comment>
                            <comment id="13476840" author="hustlmsp" created="Tue, 16 Oct 2012 08:59:51 +0100"  >&lt;p&gt;sure. I tried to take a look at last week but it failed due to other blocking things. I would try to give a review today. sorry for delay.&lt;/p&gt;</comment>
                            <comment id="13478894" author="vinayrpet" created="Thu, 18 Oct 2012 11:37:44 +0100"  >&lt;p&gt;Attaching the rebased patch. This depends on the latest patch attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13479034" author="hustlmsp" created="Thu, 18 Oct 2012 15:32:03 +0100"  >&lt;p&gt;sorry for late response. the overall of the patch looks good to me. I had some comments listed as below:&lt;/p&gt;

&lt;p&gt;1) about Journal entries. &lt;/p&gt;

&lt;p&gt;for journal entry, I would suggest to move logging journal entries to Journal. so we had a centralized place to manage all journal entry format. so we had 3 kind of entries now.&lt;/p&gt;

&lt;p&gt;a) AddEntry: for added entry. call logAddEntry to record a journal entry in journal.&lt;br/&gt;
b) MasterKeyEntry: log master key for a ledger. call logMasterKey(long ledgerId, byte[] masterKey) and in #logMasterKey, it build the ByteBuffer and write to journal.&lt;br/&gt;
c) LedgerStorageChanges: log changes of a ledger storage. call logLedgerStorageChanges(long ledgerId, ByteBuffer changes) and in #logLedgerStorageChanges you build the ByteBuffer and write to journal.&lt;/p&gt;

&lt;p&gt;when replaying journal, Journal dispatched to different methods when encountering different type of journal entries. the skeleton code of Journal would be something like below (the wordings might be not correct. please feel free to correct them):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class Journal {

void logAddEntry(ByteBuffer entry, ...) &lt;span class=&quot;code-comment&quot;&gt;// log an addEntry operation
&lt;/span&gt;
void logMasterKey(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] masterKey) &lt;span class=&quot;code-comment&quot;&gt;// log the master key of a ledger
&lt;/span&gt;
void logLedgerStorageChanges(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, ByteBuffer changes) &lt;span class=&quot;code-comment&quot;&gt;// log changes from a ledger storage. 
&lt;/span&gt;
}

class JournalScanner {

void onAddEntry(ByteBuffer) {
&lt;span class=&quot;code-comment&quot;&gt;// handle add entry 
&lt;/span&gt;}

void onMasterKey(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] masterKey) {
&lt;span class=&quot;code-comment&quot;&gt;// handle master key
&lt;/span&gt;}

void onLedgerStorageChanged(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, ByteBuffer changes) {
&lt;span class=&quot;code-comment&quot;&gt;// handle ledger storage changes (like a ledger index relocation in InterLeavedLedgerStorage)
&lt;/span&gt;}

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;so all the journal entry details and constants defines could be managed by Journal, we don&apos;t need to spread the journal format code all overal other files.&lt;/p&gt;

&lt;p&gt;2) I am not sure is there any better solution to record the relocation? otherwise using current journal entry, you had to replay the journal twice. In most time, it wasted time. I don&apos;t have better idea now, needs to think more about it.&lt;/p&gt;

</comment>
                            <comment id="13479046" author="hustlmsp" created="Thu, 18 Oct 2012 15:48:01 +0100"  >&lt;p&gt;One possible better solution for 2) is copying the data to a temporary file in other directly first, then renaming the temporary file to target index file.&lt;/p&gt;

&lt;p&gt;so the steps would be&lt;/p&gt;

&lt;p&gt;1) copying A.idx to B.rloc&lt;br/&gt;
2) deleting A.idx&lt;br/&gt;
3) renaming B.rloc to B.idx&lt;/p&gt;

&lt;p&gt;so you would not find two *.idx at the same time when starting replaying journal. just a tricky place is that if failure happens between 2) and 3). there would be no *.idx for that ledger, the code needs to look up *.rloc too if there is no *.idx. the changes would be quite small. After that, it would be safe to replay the journal in one pass.&lt;/p&gt;</comment>
                            <comment id="13479640" author="vinayrpet" created="Fri, 19 Oct 2012 06:46:46 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; for the detailed suggestion on Journal changes and solution of ledger cache file movement. I will look into it and post a new patch ASAP.&lt;/p&gt;</comment>
                            <comment id="13479982" author="vinayrpet" created="Fri, 19 Oct 2012 13:43:19 +0100"  >&lt;blockquote&gt;&lt;p&gt;for journal entry, I would suggest to move logging journal entries to Journal. so we had a centralized place to manage all journal entry format. so we had 3 kind of entries now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, agree. I can move this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;One possible better solution for 2) is copying the data to a temporary file in other directly first, then renaming the temporary file to target index file.&lt;/p&gt;

&lt;p&gt;1) copying A.idx to B.rloc&lt;br/&gt;
2) deleting A.idx&lt;br/&gt;
3) renaming B.rloc to B.idx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For me this approach looks good.&lt;/p&gt;

&lt;p&gt;But, in case of failure between 2 and 3, there is a problem if we are replaying journal in only pass.&lt;/p&gt;

&lt;p&gt; Here is the scenario&lt;br/&gt;
 1. Say some 100 entries are written to one ledger (say L0).&lt;br/&gt;
 2. last 10 entries are not yet flushed. &lt;br/&gt;
 3. Now disk became full and we need to do cache file movement.&lt;br/&gt;
 4. While executing step 3 of movement bookie crashed (i.e. while renaming 0.rloc to 0.idx)&lt;br/&gt;
 5. Now there wont be any 0.idx file for the ledger.&lt;br/&gt;
 6. And after restart Bookie will start replaying journals.&lt;br/&gt;
 7. Now if we replay in one pass, then the 10 entries which are written before CACHE_INDEX_MOVEMENT_KEY will not have any corresponding ledger idx file and it will treat as new ledger and it will create and write 10 entries.&lt;br/&gt;
 8. Now while during replay of &lt;/p&gt;
{logLedgerStorageChanges}
&lt;p&gt; there will be two files 0.rloc and 0.idx. we cannot directly rename in this case, we need to merge both contents.&lt;/p&gt;


&lt;p&gt;I feel since Bookie will be startup phase during replay and also journal may not have huge data to replay, replaying in 2 passes would be fine.&lt;/p&gt;

&lt;p&gt;Any thoughts..?&lt;/p&gt;









</comment>
                            <comment id="13479985" author="vinayrpet" created="Fri, 19 Oct 2012 13:47:01 +0100"  >&lt;blockquote&gt;&lt;p&gt;there would be no *.idx for that ledger, the code needs to look up *.rloc too if there is no *.idx. the changes would be quite small. After that, it would be safe to replay the journal in one pass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;OOPS!! I got your last point now.. Sorry for the confusion created by above comment.&lt;/p&gt;</comment>
                            <comment id="13483373" author="ikelly" created="Wed, 24 Oct 2012 17:43:07 +0100"  >&lt;p&gt;I dont like the coupling of the journal with ledger storage. It makes things hard to test and benchmark in isolation. Whats more, it&apos;s unnecessary.&lt;br/&gt;
If we have the copy sequence as above&lt;br/&gt;
1) copy A.idx to A.idx.rloc&lt;br/&gt;
2) delete A.idx&lt;br/&gt;
3) rename A.idx.rloc to A.idx&lt;/p&gt;

&lt;p&gt;the problematic case is if we crash after 2, before 3 completes. But if on initialization of the LedgerCacheImpl, we scan all directories for A.idx.rloc, if A.idx exists the copy was incomplete, remove A.idx.rloc, if A.idx does not exist, rename A.idx.rloc to A.idx. Theres no need to mess with the journal at all.&lt;/p&gt;</comment>
                            <comment id="13483726" author="hustlmsp" created="Thu, 25 Oct 2012 00:30:05 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt; Ah, ur right. we had LedgerCacheImpl to scan over all directories when initializing LedgerCacheImpl. so no journal needed for ledger storage.&lt;/p&gt;</comment>
                            <comment id="13483899" author="vinayrpet" created="Thu, 25 Oct 2012 05:58:08 +0100"  >&lt;p&gt;Oh!! &lt;br/&gt;
Then I will post a patch with just movement using above mentioned steps. I hope that would be fine.&lt;/p&gt;</comment>
                            <comment id="13483903" author="vinayrpet" created="Thu, 25 Oct 2012 06:05:35 +0100"  >&lt;p&gt;Attaching the latest patch&lt;/p&gt;</comment>
                            <comment id="13483980" author="ikelly" created="Thu, 25 Oct 2012 09:40:58 +0100"  >&lt;p&gt;New patch misses the case of a crash between 1 &amp;amp; 2. In the case, on reboot A.idx &amp;amp; A.idx.rloc exists. Now, if we delete ledger A, A.idx is deleted. A.idx.rloc is then orphaned. This is why I think it was be better to do the scan for rloc files at the bootup, rather than just in time. You&apos;ll need to add a start() method to the LedgerCache interface, but thats not a problem. EntryLogger and LedgerStorage already have a start method.&lt;/p&gt;</comment>
                            <comment id="13484018" author="vinayrpet" created="Thu, 25 Oct 2012 11:14:46 +0100"  >&lt;p&gt;Thanks Ivan,&lt;/p&gt;

&lt;p&gt;You mean to say, After scanning all directories for *.idx files, one more time scan for *.idx.rloc files.&lt;/p&gt;

&lt;p&gt;1) If one x.idx.rloc file found and corresponding x.idx not found earlier, then rename x.idx.rloc to x.idx and add x to activeLedgers list.&lt;br/&gt;
2) if x.idc.rloc file found and also x.idx was also found during first scan, then just delete x.idx.rloc and proceed.&lt;/p&gt;

&lt;p&gt;Am I right?&lt;/p&gt;

&lt;p&gt;All these things if I do in &lt;tt&gt;org.apache.bookkeeper.bookie.LedgerCacheImpl.getActiveLedgers()&lt;/tt&gt; then no need of &lt;tt&gt;start()&lt;/tt&gt; method. Also I can remove similar code in &lt;tt&gt;findIndexFile()&lt;/tt&gt; &lt;/p&gt;
</comment>
                            <comment id="13484023" author="ikelly" created="Thu, 25 Oct 2012 11:34:31 +0100"  >&lt;p&gt;Yes, you can put it in getActiveLedger(), though I think you should rename this to getActiveLedgersOnInit() to hint that it should only ever be called on initialisation, as later called could mess things up.&lt;/p&gt;

&lt;p&gt;I would change the order a little bit also, to avoid traversing the directories more than once. Basically, Id change the current loop to the following&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File ledgerDirectory : ledgerDirectories) {
            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File grandParent : ledgerDirectory.listFiles()) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (grandParent.isDirectory()) {
                    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File parent : grandParent.listFiles()) {
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (parent.isDirectory()) {
                            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File index : parent.listFiles()) {
                                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!index.isFile() 
                                    || !index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.idx&quot;&lt;/span&gt;)
                                    || !index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.rloc&quot;&lt;/span&gt;)) {
                                    &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
                                }
                                
                                &lt;span class=&quot;code-comment&quot;&gt;// We&apos;ve found a ledger index file. The file name is the
&lt;/span&gt;                                &lt;span class=&quot;code-comment&quot;&gt;// HexString representation of the ledgerId.
&lt;/span&gt;                                &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ledgerIdInHex = index.getName().replace(&lt;span class=&quot;code-quote&quot;&gt;&quot;.rloc&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;).replace(&quot;&lt;/span&gt;.idx&lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt;&quot;);
                                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (index.getName().endsWith(&quot;.rloc)) {
                                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (indexFileExists(ledgerIdInHex, ledgerDirectories)) {
                                        index.delete();
                                        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
                                    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                                        index.renameTo(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(index.getParentFile(), ledgerIdInHex + &lt;span class=&quot;code-quote&quot;&gt;&quot;.idx&quot;&lt;/span&gt;));
                                    }
                                }
                                activeLedgerManager.addActiveLedger(&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.parseLong(ledgerIdInHex, 16), &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
                            }
                        }
                    }
                }
            }
        }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13484024" author="ikelly" created="Thu, 25 Oct 2012 11:35:47 +0100"  >&lt;p&gt;&quot;.idx&quot; and &quot;.rloc&quot; should be defined as constants somewhere also.&lt;/p&gt;</comment>
                            <comment id="13484089" author="vinayrpet" created="Thu, 25 Oct 2012 14:01:59 +0100"  >&lt;p&gt;Attaching the latest patch, which fixes Ivan&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13484151" author="ikelly" created="Thu, 25 Oct 2012 15:16:25 +0100"  >&lt;p&gt;Theres a logic error in the patch (and in my suggested solution). It causes CompationTest to fail.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!index.isFile()
   || !index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.idx&quot;&lt;/span&gt;)
   || !index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.rloc&quot;&lt;/span&gt;)) {
   &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should be &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!index.isFile()
   || (!index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.idx&quot;&lt;/span&gt;)
       &amp;amp;&amp;amp; !index.getName().endsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;.rloc&quot;&lt;/span&gt;))) {
   &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, cutting the code at 80 chars is causing the code to be harder to read. Generally, for Java I use 120 as the character limit, as with java you&apos;ve usually lost 8 characters (class and method indent) before you can write any code. HDFS does use 80, but their indent level is 2. 120 has been the defacto standard for BK/hedwig, though I can find anywhere that it&apos;s written down.&lt;/p&gt;</comment>
                            <comment id="13484686" author="vinayrpet" created="Fri, 26 Oct 2012 05:13:26 +0100"  >&lt;p&gt;Thanks Ivan, I will correct the logic, also correct the character limit and post a new patch soon.&lt;/p&gt;</comment>
                            <comment id="13484801" author="vinayrpet" created="Fri, 26 Oct 2012 09:51:04 +0100"  >&lt;p&gt;Attaching latest patch with comment fixes&lt;/p&gt;</comment>
                            <comment id="13484850" author="ikelly" created="Fri, 26 Oct 2012 11:52:32 +0100"  >&lt;p&gt;Committed r1402464, thanks Vinay&lt;/p&gt;</comment>
                            <comment id="13484940" author="hudson" created="Fri, 26 Oct 2012 15:03:46 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #775 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/775/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/775/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-346&quot; title=&quot;Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-346&quot;&gt;&lt;del&gt;BOOKKEEPER-346&lt;/del&gt;&lt;/a&gt;: Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any) (Vinay via ivank) (Revision 1402464)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12599088">BOOKKEEPER-345</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12550940" name="BOOKKEEPER-346.patch" size="19374" author="vinayrpet" created="Fri, 26 Oct 2012 09:51:04 +0100"/>
                            <attachment id="12550771" name="BOOKKEEPER-346.patch" size="20413" author="vinayrpet" created="Thu, 25 Oct 2012 14:01:59 +0100"/>
                            <attachment id="12550743" name="BOOKKEEPER-346.patch" size="17773" author="vinayrpet" created="Thu, 25 Oct 2012 06:05:35 +0100"/>
                            <attachment id="12549664" name="BOOKKEEPER-346.patch" size="24256" author="vinayrpet" created="Thu, 18 Oct 2012 11:37:44 +0100"/>
                            <attachment id="12548233" name="BOOKKEEPER-346.patch" size="23891" author="vinayrpet" created="Mon, 8 Oct 2012 14:59:39 +0100"/>
                            <attachment id="12543258" name="BOOKKEEPER-346.patch" size="14772" author="vinayrpet" created="Fri, 31 Aug 2012 13:54:27 +0100"/>
                            <attachment id="12542737" name="BOOKKEEPER-346.patch" size="13350" author="vinayrpet" created="Tue, 28 Aug 2012 10:10:57 +0100"/>
                            <attachment id="12541969" name="BOOKKEEPER-346.patch" size="12618" author="vinayrpet" created="Wed, 22 Aug 2012 15:15:31 +0100"/>
                            <attachment id="12536985" name="BOOKKEEPER-346.patch" size="15478" author="vinayrpet" created="Wed, 18 Jul 2012 14:32:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Jul 2012 13:32:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245558</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy066n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>