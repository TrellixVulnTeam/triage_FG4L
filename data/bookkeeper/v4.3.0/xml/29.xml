<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:27:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-29/BOOKKEEPER-29.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-29] BookieRecoveryTest fails intermittently</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-29</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;The failure doesn&apos;t hit every time. You have to run, multiple times. From bookkeeper-server, run mvn test -Dtest=BookieRecoveryTest multiple times to repro.&lt;br/&gt;
Test output is attached.&lt;/p&gt;

&lt;p&gt;-------------------------------------------------------&lt;br/&gt;
 T E S T S&lt;br/&gt;
-------------------------------------------------------&lt;br/&gt;
Running org.apache.bookkeeper.test.BookieRecoveryTest&lt;br/&gt;
log4j:WARN No appenders could be found for logger (org.apache.bookkeeper.test.BaseTestCase).&lt;br/&gt;
log4j:WARN Please initialize the log4j system properly.&lt;br/&gt;
Tests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.794 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests in error: &lt;br/&gt;
  testAsyncBookieRecoveryToSpecificBookie&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;(org.apache.bookkeeper.test.BookieRecoveryTest)&lt;/p&gt;

&lt;p&gt;Tests run: 8, Failures: 0, Errors: 1, Skipped: 0&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12512230">BOOKKEEPER-29</key>
            <summary>BookieRecoveryTest fails intermittently</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Jun 2011 16:35:13 +0100</created>
                <updated>Wed, 7 Dec 2011 15:56:11 +0000</updated>
                            <resolved>Thu, 11 Aug 2011 20:38:50 +0100</resolved>
                                                    <fixVersion>4.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13073605" author="ikelly" created="Mon, 1 Aug 2011 17:48:26 +0100"  >&lt;p&gt;while [ $? = 0 ]; do mvn test -Dtest=BookieRecoveryTest; done&lt;/p&gt;

&lt;p&gt;this should repro it.&lt;/p&gt;</comment>
                            <comment id="13076057" author="ikelly" created="Tue, 2 Aug 2011 07:10:12 +0100"  >&lt;p&gt;The problem was in the test. The tests created a bunch of bookies, and wrote a load of entries and failed the server. They then created a new server and tried to verify the recovered ledger. The problem was that there was no time between creating the server and trying to verify, which meant that the watcher on the client may not have been updated with the full bookie list. This meant that a full ensemble could not be built and the test failed at that point. This patch fixes that by moving the creation of the new server to earlier in the test, before the entries are written but after the initial ledger handle is created.&lt;/p&gt;</comment>
                            <comment id="13078427" author="fpj" created="Tue, 2 Aug 2011 21:59:50 +0100"  >&lt;p&gt;It&apos;s nice that you&apos;ve been able to find the problem, Ivan. Two comments:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;It doesn&apos;t look like moving the start of a new bookie up solves completely the problem, since we are still not sure that the bookie has registered. It is true that we are giving more time, but in my understanding we are just reducing the chance that it happens and not eliminating it. We probably need to watch the list of bookies on ZooKeeper to be able to determine when the list changes;&lt;/li&gt;
	&lt;li&gt;There is a change to the log4j.properties that shouldn&apos;t be there.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13078471" author="ikelly" created="Tue, 2 Aug 2011 23:21:29 +0100"  >&lt;p&gt;1. The scenario is something that should never happen in the wild. Usually a cluster will be have all machines started before the failure even happens. The only reason the recovery server is started later in this case is so that it doesn&apos;t become part of the original ensemble. &lt;/p&gt;

&lt;p&gt;I think just putting the start server earlier is enough, because there are many calls to bk after this. This mean the test thread will be preempted and the zk watcher thread will get a chance to run, updating the available server lists. &lt;/p&gt;

&lt;p&gt;The other option may be to do zk sync explicitly after the newServer call. I don&apos;t think it add anything though.&lt;/p&gt;

&lt;p&gt;2. this is a mistake, i generated the patch wrong. reattached a new one. &lt;/p&gt;</comment>
                            <comment id="13078489" author="fpj" created="Wed, 3 Aug 2011 00:06:42 +0100"  >&lt;p&gt;We shouldn&apos;t expect to have all servers from time zero. One of the reasons why we get bookies available through zookeeper is exactly to have the ability to remove and add servers dynamically.&lt;/p&gt;

&lt;p&gt;As for how to fix it, I was thinking that we could set a watch on the bookies znode before starting the bookie, and blocking until we get the notification. How does it sound to you? &lt;/p&gt;</comment>
                            <comment id="13078592" author="ikelly" created="Wed, 3 Aug 2011 06:05:35 +0100"  >&lt;blockquote&gt;
&lt;p&gt;We shouldn&apos;t expect to have all servers from time zero. One of the reasons why we get bookies available through zookeeper is exactly to have the ability to remove and add servers dynamically.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well, I don&apos;t exactly expect them to exist from time zero as such. But I would expect them to exist before the failure. A scenario where you add a bookie after a failure and expect the recovery to be seamless seems unrealistic to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
As for how to fix it, I was thinking that we could set a watch on the bookies znode before starting the bookie, and blocking until we get the notification. How does it sound to you? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There already exists a watch on the bookie znodes, the bookie watcher on the client. I dont know how to wait on the notification without making the bookie watcher public. However, the zk.sync() i mentioned in my previous comment could be functionally equivalent, no?&lt;/p&gt;</comment>
                            <comment id="13079091" author="ikelly" created="Wed, 3 Aug 2011 23:38:37 +0100"  >&lt;p&gt;Sync solution doesn&apos;t work. I added &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CountDownLatch latch = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(1);
        bkc.getZkHandle().sync(&lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VoidCallback() {
                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void processResult(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx) {
                    latch.countDown();
                }
            }, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        latch.await();

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to #startNewBookie (I left the calls to this method in their original places). It doesn&apos;t ensure the watcher is run. &lt;/p&gt;

&lt;p&gt;Im trying with simply Thread.yield() to see if that does any better.&lt;/p&gt;</comment>
                            <comment id="13079121" author="ikelly" created="Thu, 4 Aug 2011 00:49:51 +0100"  >&lt;p&gt;yield yields no success either. I&apos;ve attached a patch which reaches explicitly into the bookiewatcher now. Its a bit hacky, but it will guarantee that the available bookie list is updated.&lt;/p&gt;</comment>
                            <comment id="13079122" author="ikelly" created="Thu, 4 Aug 2011 00:50:27 +0100"  >&lt;p&gt;yield yields no success either. I&apos;ve attached a patch which reaches explicitly into the bookiewatcher now. Its a bit hacky, but it will guarantee that the available bookie list is updated.&lt;/p&gt;</comment>
                            <comment id="13079243" author="fpj" created="Thu, 4 Aug 2011 07:05:52 +0100"  >&lt;p&gt;I&apos;m proposing a different way of doing it with this new patch. In each test, we set a watch on /ledgers/available to see when the new bookie is added. To make sure that we get the right change, we have to also wait until the crashed bookie is removed.&lt;/p&gt;</comment>
                            <comment id="13079469" author="ikelly" created="Thu, 4 Aug 2011 18:06:03 +0100"  >&lt;p&gt;looks good to me, could you remove the commented out imports at the top of the patch and ill commit it.&lt;/p&gt;</comment>
                            <comment id="13079790" author="fpj" created="Fri, 5 Aug 2011 05:41:34 +0100"  >&lt;p&gt;Thanks for reviewing it, Ivan. I have removed the commented imports. &lt;/p&gt;</comment>
                            <comment id="13082279" author="ikelly" created="Wed, 10 Aug 2011 11:38:35 +0100"  >&lt;p&gt;+1 committed @1156096&lt;/p&gt;</comment>
                            <comment id="13083019" author="fpj" created="Thu, 11 Aug 2011 09:57:32 +0100"  >&lt;p&gt;This test still fails for me intermittently, but I think I have been able to nail it down. The main problem seems to be with BookieWatcher. To obtain a new bookie for an open ledger, we request it from BookieWatcher. It is possible, though, that we see a new bookie registered with ZooKeeper (as in stateNewBookie), but the notification of the change in ZooKeeper has not been processed by BookieWatcher yet. In this case, we close the ledger because we can&apos;t get a new bookie, and the test fails.&lt;/p&gt;

&lt;p&gt;To solve this problem, we need to force an update to the list of the BookieWatcher object.&lt;/p&gt;</comment>
                            <comment id="13083024" author="fpj" created="Thu, 11 Aug 2011 10:09:55 +0100"  >&lt;p&gt;This patch does a few things:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It adds a call to BookKeeper to enable updates to the list of a BookieWatcher object from a test;&lt;/li&gt;
	&lt;li&gt;It makes sure that the change in the list of bookies is the one we expect by checking continuously if the corresponding znode exists. This change actually simplifies the code of the test;&lt;/li&gt;
	&lt;li&gt;It also moves the call to instantiateZookeeperClient in the constructor of Bookie to after the initialization of the Bookie. This way we make sure that the bookie is ready to answer once it has registered with zookeeper.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13083190" author="ikelly" created="Thu, 11 Aug 2011 17:05:56 +0100"  >&lt;p&gt;1. Removed public method from BookKeeper&lt;/p&gt;

&lt;p&gt;2. Removed redundant calls to new BookKeeper in Bookie. Its already done by the base class.&lt;/p&gt;

&lt;p&gt;3. Added synchronization on PerChannelBookieClient#connect&lt;/p&gt;


&lt;p&gt;I ran this patch in a loop for 3 hours at while point it hit the netty cleanup hang. 2. &amp;amp; 3. should help with this, though it&apos;s hard to find the root cause as a repro takes 3 hours. &lt;/p&gt;
</comment>
                            <comment id="13083333" author="ikelly" created="Thu, 11 Aug 2011 19:29:54 +0100"  >&lt;p&gt;Uploaded wrong patch last time. This one is correct.&lt;/p&gt;</comment>
                            <comment id="13083358" author="ikelly" created="Thu, 11 Aug 2011 19:41:32 +0100"  >&lt;p&gt;Rebased after &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-33&quot; title=&quot;Add length and offset parameter to addEntry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-33&quot;&gt;&lt;del&gt;BOOKKEEPER-33&lt;/del&gt;&lt;/a&gt; committed.&lt;/p&gt;</comment>
                            <comment id="13083383" author="ikelly" created="Thu, 11 Aug 2011 19:52:17 +0100"  >&lt;p&gt;Missed a conflict with &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-33&quot; title=&quot;Add length and offset parameter to addEntry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-33&quot;&gt;&lt;del&gt;BOOKKEEPER-33&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13083424" author="fpj" created="Thu, 11 Aug 2011 20:38:50 +0100"  >&lt;p&gt;+1, I have just committed this one. Committed revision 1156766.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12489274" name="BK-29.diff" size="2743" author="ikelly" created="Thu, 4 Aug 2011 00:50:27 +0100"/>
                            <attachment id="12489273" name="BK-29.diff" size="2743" author="ikelly" created="Thu, 4 Aug 2011 00:49:51 +0100"/>
                            <attachment id="12489126" name="BK-29.diff" size="3989" author="ikelly" created="Tue, 2 Aug 2011 23:21:45 +0100"/>
                            <attachment id="12488857" name="BK-29.diff" size="4503" author="ikelly" created="Tue, 2 Aug 2011 07:10:12 +0100"/>
                            <attachment id="12490096" name="BOOKKEEPER-29-v2.patch" size="7135" author="fpj" created="Thu, 11 Aug 2011 10:09:55 +0100"/>
                            <attachment id="12490155" name="BOOKKEEPER-29.diff" size="19074" author="ikelly" created="Thu, 11 Aug 2011 19:52:17 +0100"/>
                            <attachment id="12490154" name="BOOKKEEPER-29.diff" size="18603" author="ikelly" created="Thu, 11 Aug 2011 19:41:32 +0100"/>
                            <attachment id="12490151" name="BOOKKEEPER-29.diff" size="18603" author="ikelly" created="Thu, 11 Aug 2011 19:29:54 +0100"/>
                            <attachment id="12490127" name="BOOKKEEPER-29.patch" size="5041" author="ikelly" created="Thu, 11 Aug 2011 17:05:56 +0100"/>
                            <attachment id="12489440" name="BOOKKEEPER-29.patch" size="5041" author="fpj" created="Fri, 5 Aug 2011 05:41:34 +0100"/>
                            <attachment id="12489319" name="BOOKKEEPER-29.patch" size="5489" author="fpj" created="Thu, 4 Aug 2011 07:03:03 +0100"/>
                            <attachment id="12484652" name="org.apache.bookkeeper.test.BookieRecoveryTest.txt" size="3694" author="ikelly" created="Wed, 29 Jun 2011 16:36:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Aug 2011 20:59:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>65333</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hynzxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>174010</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>