<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:31:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-503/BOOKKEEPER-503.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-503] The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-503</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Running follow script in hedwig-server project&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; mvn test -Dtest=TestThrottlingDelivery; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; echo .; done
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We may get assertion failure:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testServerSideThrottle[0](org.apache.hedwig.server.delivery.TestThrottlingDelivery)  Time elapsed: 14.922 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
junit.framework.AssertionFailedError: Timed out waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; messages 31
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at org.apache.hedwig.server.delivery.TestThrottlingDelivery.throttleX(TestThrottlingDelivery.java:159)
	at org.apache.hedwig.server.delivery.TestThrottlingDelivery.testServerSideThrottle(TestThrottlingDelivery.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a race issue which may cause messages been throttled by mistake, the root cause is ActiveSubscriberState.messageConsumed() and ActiveSubscriberState.deliverNextMessage() may be executed in different threads by AbstractSubscriptionManager and FIFODeliveryManager.&lt;/p&gt;

&lt;p&gt;Read the log in attachement around Line 2420 if you want to get more information, here I replay the logs onto the code (Line XX denotes code listed below):&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Messages 1-30 are to be delivered and the message window size in Hub server is 10.&lt;/li&gt;
	&lt;li&gt;Messages 1-10 are delivered to subscriber while message 11-30 is throttled by the window size limitation.&lt;/li&gt;
	&lt;li&gt;Subscriber calls consume 1-10 asynchronously.&lt;/li&gt;
	&lt;li&gt;CONSUME 1 is handled and FIFODeliveryManager continue to deliver message 11.&lt;/li&gt;
	&lt;li&gt;Subscriber receive message 11 and quickly ack CONSUME 11 to Hub.&lt;/li&gt;
	&lt;li&gt;Now there are two threads operate on a same ActiveSubscriberState:
	&lt;ul&gt;
		&lt;li&gt;Thread in AbstractSubscriptionManager: call ActiveSubscriberState.messageConsumed() for message 2, 3, 11 (4-10 is still on the way since it&apos;s asynchronous consume). Let&apos;s assume this thread happen to run in Line (14) for message 11.&lt;/li&gt;
		&lt;li&gt;Thread in FIFODeliveryManager:  Coincidently, it&apos;s in Line (36) now (with last delivered 11, last consumed 1 and variable isThrottled is still false).&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;If thread in AbstractSubscriptionManager executed before FIFODeliveryManager, then consume operator for 11 does nothing more.&lt;/li&gt;
	&lt;li&gt;CONSUME &lt;span class=&quot;error&quot;&gt;&amp;#91;4-10&amp;#93;&lt;/span&gt; will be just ignored by the if statement in Line (2) since lastSeqIdConsumedUtil is now 11.&lt;/li&gt;
	&lt;li&gt;Further messages like 12 have no chance to been delivered at this time.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
(01) &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void messageConsumed(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; newSeqIdConsumed) {
(02)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (newSeqIdConsumed &amp;lt;= lastSeqIdConsumedUtil) {
(03)         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
(04)     }
(05)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (logger.isDebugEnabled()) {
(06)         logger.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Subscriber ({}) moved consumed ptr from {} to {}.&quot;&lt;/span&gt;,
(07)                      va(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, lastSeqIdConsumedUtil, newSeqIdConsumed));
(08)     }
(09)     lastSeqIdConsumedUtil = newSeqIdConsumed;
(10)     &lt;span class=&quot;code-comment&quot;&gt;// after updated seq id check whether it still exceed msg limitation
&lt;/span&gt;(11)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (msgLimitExceeded()) {
(12)         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
(13)     }
(14)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isThrottled) {
(15)         isThrottled = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
(16)         logger.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Try to wake up subscriber ({}) to deliver messages again : last delivered {}, last consumed {}.&quot;&lt;/span&gt;,
(17)                     va(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, lastLocalSeqIdDelivered, lastSeqIdConsumedUtil));
(18) 
(19)         enqueueWithoutFailure(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DeliveryManagerRequest() {
(20)             @Override
(21)             &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void performRequest() {
(22)                 &lt;span class=&quot;code-comment&quot;&gt;// enqueue 
&lt;/span&gt;(23)                 clearRetryDelayForSubscriber(ActiveSubscriberState.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);            
(24)             }
(25)         });
(26)     }
(27) }
(28) 
(29) &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void deliverNextMessage() {
(30)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isConnected()) {
(31)         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
(32)     }
(33) 
(34)     &lt;span class=&quot;code-comment&quot;&gt;// check whether we have delivered enough messages without receiving their consumes
&lt;/span&gt;(35)     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (msgLimitExceeded()) {
(36)         logger.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Subscriber ({}) is throttled : last delivered {}, last consumed {}.&quot;&lt;/span&gt;,
(37)                     va(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, lastLocalSeqIdDelivered, lastSeqIdConsumedUtil));
(38)         isThrottled = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
(39)         &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; nothing, since the delivery process would be throttled.
&lt;/span&gt;(40)         &lt;span class=&quot;code-comment&quot;&gt;// After message consumed, it would be added back to retry queue.
&lt;/span&gt;(41)         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
(42)     }
(43) 
(44)     localSeqIdDeliveringNow = persistenceMgr.getSeqIdAfterSkipping(topic, lastLocalSeqIdDelivered, 1);
(45) 
(46)     ScanRequest scanRequest = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ScanRequest(topic, localSeqIdDeliveringNow,
(47)             /* callback= */&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, /* ctx= */&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
(48) 
(49)     persistenceMgr.scanSingleMessage(scanRequest);
(50) }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By the way, we should also take care of thread-safe issue in other methods for ActiveSubscriberState, which implements some other callback interface.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12623785">BOOKKEEPER-503</key>
            <summary>The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jiannan">Jiannan Wang</assignee>
                                    <reporter username="jiannan">Jiannan Wang</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Dec 2012 17:11:05 +0000</created>
                <updated>Wed, 13 Feb 2013 15:46:45 +0000</updated>
                            <resolved>Sat, 12 Jan 2013 17:55:49 +0000</resolved>
                                                    <fixVersion>4.2.0</fixVersion>
                                    <component>hedwig-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13537242" author="ikelly" created="Thu, 20 Dec 2012 18:33:53 +0000"  >&lt;p&gt;I had a quick look at this. I think it&apos;s something to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-507&quot; title=&quot;Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-507&quot;&gt;&lt;del&gt;BOOKKEEPER-507&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13543644" author="hustlmsp" created="Fri, 4 Jan 2013 06:50:02 +0000"  >&lt;p&gt;I had run &apos;while [ 0 &lt;del&gt;lt 10 ]; do mvn test -Dtest=TestThrottlingDelivery; echo &apos;&lt;/del&gt;----&apos;; done&apos; for hours. it doesn&apos;t reproduce the issue described as above. I think it is fixed after fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-507&quot; title=&quot;Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-507&quot;&gt;&lt;del&gt;BOOKKEEPER-507&lt;/del&gt;&lt;/a&gt;. so is it OK to close it? it could be reopened if it reproduced.&lt;/p&gt;</comment>
                            <comment id="13543779" author="fpj" created="Fri, 4 Jan 2013 10:44:43 +0000"  >&lt;p&gt;Let&apos;s close it as you suggest, Sijie. I&apos;m marking it as &quot;Cannot reproduce&quot;.&lt;/p&gt;</comment>
                            <comment id="13543834" author="jiannan" created="Fri, 4 Jan 2013 12:19:43 +0000"  >&lt;p&gt;I pull the newest code and run with command &quot;while mvn test -Dtest=TestThrottlingDelivery; do echo .; done&quot; and it failed in my dev box.&lt;/p&gt;</comment>
                            <comment id="13543835" author="jiannan" created="Fri, 4 Jan 2013 12:21:08 +0000"  >&lt;p&gt;Reopen since it happen in my dev box.&lt;/p&gt;</comment>
                            <comment id="13543966" author="fpj" created="Fri, 4 Jan 2013 15:49:43 +0000"  >&lt;p&gt;I can&apos;t reproduce this one. Jiannan, is there anything special about your setup? Could you have a closer look at the issue to see what&apos;s going since you&apos;re able to reproduce it?&lt;/p&gt;</comment>
                            <comment id="13544291" author="hustlmsp" created="Fri, 4 Jan 2013 22:03:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Message 12 has no chance to been delivered.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;if CONSUME 11 arrives before CONSUME&lt;span class=&quot;error&quot;&gt;&amp;#91;2-10&amp;#93;&lt;/span&gt;, so the gap becomes to 1 which is less than the window size, right? so we should deliver message 12, right?&lt;/p&gt;

&lt;p&gt;Could you enable DEBUG when you run the test and attach the log for failures? &lt;/p&gt;</comment>
                            <comment id="13544575" author="jiannan" created="Sat, 5 Jan 2013 04:28:33 +0000"  >&lt;p&gt;Sorry, there are some problem in my description, I didn&apos;t post it last night but I run out of battery in my Mac book. I&apos;ll update it today.&lt;/p&gt;</comment>
                            <comment id="13544648" author="jiannan" created="Sat, 5 Jan 2013 10:06:43 +0000"  >&lt;p&gt;Attach fail logs&lt;/p&gt;</comment>
                            <comment id="13544771" author="hustlmsp" created="Sat, 5 Jan 2013 17:39:32 +0000"  >&lt;p&gt;good job, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the race condition happened between checking and setting isThrottled variable.&lt;/p&gt;

&lt;p&gt;for simplification,&lt;/p&gt;

&lt;p&gt;A.1 check #msgLimitExceed&lt;br/&gt;
A.2 set isThrottled to true&lt;/p&gt;

&lt;p&gt;B.1 modified last consume seq id&lt;br/&gt;
B.2 check #msgLimitExceed&lt;br/&gt;
B.3 check isThrottled&lt;/p&gt;

&lt;p&gt;if the sequence is A.1 B.1 B.2 B.3 A.2, then no one could pick the throttled subscriber back to normal.&lt;/p&gt;

&lt;p&gt;we might need some synchronization between these two methods. we could not just simply change messageConsumed to run in DeliveryThread. since #deliveryNextMessage not only run in DeliveryThread, but also run in netty worker thread, in the delivery callback of previous message.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt; Could you generate a patch for it?&lt;/p&gt;</comment>
                            <comment id="13545288" author="jiannan" created="Sun, 6 Jan 2013 03:16:47 +0000"  >&lt;p&gt;Sure, I&apos;m working on it, I guess I can generate a patch today.&lt;br/&gt;
Thanks for Sijie&apos;s tip, or I may make the mistake.&lt;/p&gt;</comment>
                            <comment id="13545705" author="jiannan" created="Mon, 7 Jan 2013 08:56:21 +0000"  >&lt;p&gt;I find other error messages during test without my patch: &quot;Client is not yet subscribed to Topic: testServerSideThrottleWithHigherValue, SubscriberId: serverThrottleSub&quot;.&lt;/p&gt;

&lt;p&gt;I think I should take a look at it before uploading patch.&lt;/p&gt;</comment>
                            <comment id="13548694" author="ikelly" created="Wed, 9 Jan 2013 17:23:51 +0000"  >&lt;p&gt;The fact that deliverNextMessage is in another thread seems to cause a lot of problems (also &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-529&quot; title=&quot;stopServingSubscriber in delivery manager should remove stub callbacks in ReadAheadCache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-529&quot;&gt;&lt;del&gt;BOOKKEEPER-529&lt;/del&gt;&lt;/a&gt;). Could we solve all this, just by making deliverNextMessage submit a task to the executor, which does that deliverNextMessage does now?&lt;/p&gt;</comment>
                            <comment id="13549357" author="hustlmsp" created="Thu, 10 Jan 2013 04:56:27 +0000"  >&lt;p&gt;we could do it. if we want to do that way, we need to provide multiple threads for delivery manager first, moving &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-526&quot; title=&quot;multiple threads for delivery manager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-526&quot;&gt;&lt;del&gt;BOOKKEEPER-526&lt;/del&gt;&lt;/a&gt; from 4.3.0 to 4.2.0. Otherwise, we might encounter performance issue, since original implementation only #deliverNextMessage first time in delivery manager thread, after that it would #deliverNextMessage in netty worker threads. if we submit deliverNextMessage back to delivery manager thread, there is only one delivery manager now. we have to let &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-526&quot; title=&quot;multiple threads for delivery manager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-526&quot;&gt;&lt;del&gt;BOOKKEEPER-526&lt;/del&gt;&lt;/a&gt; in before taking this solution here.&lt;/p&gt;</comment>
                            <comment id="13549803" author="ikelly" created="Thu, 10 Jan 2013 17:17:32 +0000"  >&lt;p&gt;I&apos;ve written a test case which should trigger this (if i understand the description correctly). Do you have a fix for this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13549878" author="ikelly" created="Thu, 10 Jan 2013 18:31:54 +0000"  >&lt;p&gt;I used the same test class for &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-539&quot; title=&quot;ClientNotSubscribedException &amp;amp; doesn&amp;#39;t receive enough messages in TestThrottlingDelivery#testServerSideThrottle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-539&quot;&gt;&lt;del&gt;BOOKKEEPER-539&lt;/del&gt;&lt;/a&gt;, so the test attached for this should be applied on top of that.&lt;/p&gt;</comment>
                            <comment id="13550804" author="jiannan" created="Fri, 11 Jan 2013 04:17:27 +0000"  >&lt;p&gt;thanks Ivan for adding test case, I&apos;m basing on 539 to generate patch.&lt;/p&gt;</comment>
                            <comment id="13551552" author="jiannan" created="Fri, 11 Jan 2013 21:59:08 +0000"  >&lt;p&gt;I go through all variables in ActiveSubscriberState and check which need to be synchronized:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;font color=&quot;red&quot;&gt;lastLocalSeqIdDelivered&lt;/font&gt;
	&lt;ul&gt;
		&lt;li&gt;WRITE by sendingFinished(), which is called in netty thread&lt;/li&gt;
		&lt;li&gt;READ by msgLimitExceeded(), which maybe called by messageConsumed() in AbstractSubscriptionManager thread&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;connected
	&lt;ul&gt;
		&lt;li&gt;has been synchronized&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;font color=&quot;red&quot;&gt;lastScanErrorTime&lt;/font&gt;
	&lt;ul&gt;
		&lt;li&gt;WRITE by clearLastScanErrorTime(), which is called by clearRetryDelayForSubscriber() in delivery manager thread&lt;/li&gt;
		&lt;li&gt;WRITE by scanFailed(), which is called in netty thread&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;localSeqIdDeliveringNow
	&lt;ul&gt;
		&lt;li&gt;WRITE by doDeliverNextMessage(), which is called in netty thread&lt;/li&gt;
		&lt;li&gt;READ by sendingFinished(), which is called in the same thread above&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;font color=&quot;red&quot;&gt;lastSeqIdCommunicatedExternally&lt;/font&gt;
	&lt;ul&gt;
		&lt;li&gt;WRITE by sendingFinished(), which is called in netty thread&lt;/li&gt;
		&lt;li&gt;READ by doStopServingSubscriber(), which is called in delivery manager thread&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;font color=&quot;red&quot;&gt;lastSeqIdConsumedUtil&lt;/font&gt;
	&lt;ul&gt;
		&lt;li&gt;WRITE by messageConsumed(), which is called in AbstractSubscriptionManager thread&lt;/li&gt;
		&lt;li&gt;READ by msgLimitExceeded(), which maybe called by doDeliverNextMessage() in netty thread&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;font color=&quot;red&quot;&gt;isThrottled&lt;/font&gt;
	&lt;ul&gt;
		&lt;li&gt;WRITE by messageConsumed(), which is called in AbstractSubscriptionManager thread&lt;/li&gt;
		&lt;li&gt;READ by sendingFinished(), which is called in netty thread&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Other variables
	&lt;ul&gt;
		&lt;li&gt;assigned in ActiveSubscriberState constructor and only READ in other methods&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Since there are many variables require synchronization, I only share a common ReentrantReadWriteLock between them. After &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-526&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-526&lt;/a&gt;, we can remove this lock and run all operations of ActiveSubscriberState in same thread. By the way, there has been a ReentrantReadWriteLock &quot;connectedLock&quot; in ActiveSubscriberState, I think it&apos;s Ok to reuse instead of adding a new ReentrantReadWriteLock object, but I don&apos;t change it in this patch (should I reuse it?).&lt;/p&gt;

&lt;p&gt;And I fix another two problem to make my code pass all test cases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;StubPersistenceManager#scanSingleMessage doesn&apos;t response with seq ID (and then response.getMessage().getMsgId() always return 0)&lt;/li&gt;
	&lt;li&gt;TestFIFODeliveryManager#testFIFODeliverySubCloseSubRace() startServingSubscription should start delivery from 1.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;With this patch, there is no error found in my dev box with running TestThrottlingDelivery for 2 hours (it taks about 20 minutes to fail test in my dev box before).&lt;/p&gt;</comment>
                            <comment id="13551825" author="hustlmsp" created="Sat, 12 Jan 2013 06:23:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt; good job, thanks for detail analyzing the variables. actually you don&apos;t need to use ReadWriteLock. Read/Write locks allow in multiple readers a the same time, but only if no writers are already in. Hence under some usage scenarios we can get better concurrency, because the reader populations can proceed together. but in this case, reader and writer are only one. you could use synchronized to make the code simple and clean. in honestly, connectLock could use synchronized too.&lt;/p&gt;</comment>
                            <comment id="13551827" author="hustlmsp" created="Sat, 12 Jan 2013 06:29:40 +0000"  >&lt;p&gt;provide a version using synchronized which might make code clean.&lt;/p&gt;</comment>
                            <comment id="13551828" author="hustlmsp" created="Sat, 12 Jan 2013 06:30:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jiannan&quot; class=&quot;user-hover&quot; rel=&quot;jiannan&quot;&gt;Jiannan Wang&lt;/a&gt; could you take a look at the patch using synchronized?&lt;/p&gt;</comment>
                            <comment id="13551831" author="hadoopqa" created="Sat, 12 Jan 2013 06:39:24 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-503&quot; title=&quot;The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-503&quot;&gt;&lt;del&gt;BOOKKEEPER-503&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12564499/BOOKKEEPER-503.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-503.patch&lt;/a&gt; downloaded at Sat Jan 12 06:08:20 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; the patch seems to introduce 3 new Findbugs warning(s) in module(s) &lt;span class=&quot;error&quot;&gt;&amp;#91;hedwig-server&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 788&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/243/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/243/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13551841" author="hadoopqa" created="Sat, 12 Jan 2013 07:10:39 +0000"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-503&quot; title=&quot;The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-503&quot;&gt;&lt;del&gt;BOOKKEEPER-503&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12564558/BOOKKEEPER-503.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;BOOKKEEPER-503.patch&lt;/a&gt; downloaded at Sat Jan 12 06:39:32 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 2 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 788&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/244/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/244/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13551851" author="jiannan" created="Sat, 12 Jan 2013 07:39:05 +0000"  >&lt;p&gt;Thanks sijie for clean the code, it looks much better now. The new patch look good to me, only a line in ActiveSubscriberState.toString():&lt;br/&gt;
+            sb.append(&quot;Subscriber: &quot;); -&amp;gt; sb.append(&quot;, Subscriber: &quot;);&lt;br/&gt;
+            sb.append(subscriberId.toStringUtf8());&lt;br/&gt;
+            sb.append(&quot;, DeliveryPtr: &quot;);&lt;/p&gt;</comment>
                            <comment id="13551852" author="jiannan" created="Sat, 12 Jan 2013 07:46:55 +0000"  >&lt;p&gt;By the way, thanks for explaining ReadWriteLock usage, I didn&apos;t think so deep about it. But I think for this scenario, there may more readers, since the ReadWriteLock of my previous patch is shared by many variables. But I can&apos;t agree more to use synchronized instead of ReadWriteLock, my previous patch is very very ugly when it compared to yours &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13551960" author="ikelly" created="Sat, 12 Jan 2013 16:54:18 +0000"  >&lt;p&gt;Patch looks good. +1 from me. synchronized is fine at the ActiveSubscriberState level, as we should only be executing one operation at at time for each subscriber anyhow.&lt;/p&gt;</comment>
                            <comment id="13551976" author="ikelly" created="Sat, 12 Jan 2013 17:55:49 +0000"  >&lt;p&gt;Committed as r1432485. Thanks guys.&lt;/p&gt;</comment>
                            <comment id="13551987" author="hudson" created="Sat, 12 Jan 2013 18:29:15 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk2 #56 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk2/56/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk2/56/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-503&quot; title=&quot;The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-503&quot;&gt;&lt;del&gt;BOOKKEEPER-503&lt;/del&gt;&lt;/a&gt;: The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes (jiannan &amp;amp; sijie via ivank) (Revision 1432485)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestFIFODeliveryManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12626710">BOOKKEEPER-539</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12564201" name="0001-BOOKKEEPER-503-Test-case.patch" size="9081" author="ikelly" created="Thu, 10 Jan 2013 17:17:32 +0000"/>
                            <attachment id="12564558" name="BOOKKEEPER-503.patch" size="16405" author="hustlmsp" created="Sat, 12 Jan 2013 06:29:40 +0000"/>
                            <attachment id="12564499" name="BOOKKEEPER-503.patch" size="16980" author="jiannan" created="Fri, 11 Jan 2013 21:59:08 +0000"/>
                            <attachment id="12563410" name="logs.tar" size="101969" author="jiannan" created="Sat, 5 Jan 2013 10:06:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Dec 2012 18:33:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>297485</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyyjlj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235518</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>