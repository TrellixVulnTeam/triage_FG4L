<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:31:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-168/BOOKKEEPER-168.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-168] Message bounding on subscriptions</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-168</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12542000">BOOKKEEPER-168</key>
            <summary>Message bounding on subscriptions</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Feb 2012 16:53:42 +0000</created>
                <updated>Mon, 22 Oct 2012 15:50:13 +0100</updated>
                            <resolved>Fri, 20 Apr 2012 10:21:19 +0100</resolved>
                                                    <fixVersion>4.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13204648" author="jiraposter@reviews.apache.org" created="Thu, 9 Feb 2012 16:57:58 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;br/&gt;
  hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;br/&gt;
  hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;br/&gt;
  hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;br/&gt;
  hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;br/&gt;
  hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;br/&gt;
  hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java b76023c &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13208286" author="jiraposter@reviews.apache.org" created="Wed, 15 Feb 2012 09:05:57 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/#review5119&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/#review5119&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;thanks Ivan. most of this patch is good to me, except two things.&lt;/p&gt;

&lt;p&gt;one is,  you didn&apos;t update message bound when someone unsubscribes. is there any decision on it?&lt;/p&gt;

&lt;p&gt;the other one is, if subscriber 1 subscribe topic with UNLIMITED bound, subscriber 2 subscribe topic with size-bound, you treat it as size-bound. but it would be better to set as UNLIMITED, right?&lt;/p&gt;


&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3824/#comment11219&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/#comment11219&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think DEBUG level is better for such kind of message.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sijie&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-02-09 16:57:20, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-02-09 16:57:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java b76023c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13208511" author="jiraposter@reviews.apache.org" created="Wed, 15 Feb 2012 14:46:58 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2012-02-15 09:04:42, Sijie Guo wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; thanks Ivan. most of this patch is good to me, except two things.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; one is,  you didn&apos;t update message bound when someone unsubscribes. is there any decision on it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; the other one is, if subscriber 1 subscribe topic with UNLIMITED bound, subscriber 2 subscribe topic with size-bound, you treat it as size-bound. but it would be better to set as UNLIMITED, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;one is,  you didn&apos;t update message bound when someone unsubscribes. is there any decision on it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well spotted, i&apos;ve added this now&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the other one is, if subscriber 1 subscribe topic with UNLIMITED bound, subscriber 2 subscribe topic with size-bound, you treat it as size-bound. but it would be better to set as UNLIMITED, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ah, there&apos;s a bug there also. I should break after finding a subscription with no message bound.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2012-02-15 09:04:42, Sijie Guo wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java, line 344&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3824/diff/1/?file=73881#file73881line344&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff/1/?file=73881#file73881line344&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think DEBUG level is better for such kind of message.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;actually, i only had that in for testing. removed now.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/#review5119&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/#review5119&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2012-02-09 16:57:20, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-02-09 16:57:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java b76023c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13208579" author="jiraposter@reviews.apache.org" created="Wed, 15 Feb 2012 16:56:59 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-02-15 16:55:04.015131)&lt;/p&gt;


&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;New patch addresses Sijie&apos;s comments.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;br/&gt;
  hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;br/&gt;
  hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;br/&gt;
  hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;br/&gt;
  hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;br/&gt;
  hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;br/&gt;
  hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java b76023c &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13212601" author="hustlmsp" created="Tue, 21 Feb 2012 14:09:34 +0000"  >&lt;p&gt;the new patch is well done, although I have two small problems to discuss as below: &lt;/p&gt;

&lt;p&gt;1) how we define the message bound? suppose I set the bound to 5, does it means that subscriber would received latest 5 messages or 6 messages. currently the subscriber can receive 6 messages. (you compute minSeqId by lastPushedSeqId - messageBound)&lt;/p&gt;

&lt;p&gt;2) is it possible to expose message bound as a parameter to override a configuration setting? or provide a more general subscribe api to pass subscription specified parameters like a key/value map.&lt;/p&gt;

&lt;p&gt;#subscribe(topic, subscribe, parameters /&lt;b&gt;a key/value map&lt;/b&gt;/)&lt;/p&gt;</comment>
                            <comment id="13215563" author="ikelly" created="Fri, 24 Feb 2012 11:58:40 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1) how we define the message bound? suppose I set the bound to 5, does it means that subscriber would received latest 5 messages or 6 messages. currently the subscriber can receive 6 messages. (you compute minSeqId by lastPushedSeqId - messageBound)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Are you sure about this? the tests check that subscribers are only getting as many messages as the bound is set to.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2) is it possible to expose message bound as a parameter to override a configuration setting? or provide a more general subscribe api to pass subscription specified parameters like a key/value map.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I did have this originally in my first draft, but it looked messy to me. Do you have a usecase for this right now, or is it just speculative?&lt;/p&gt;</comment>
                            <comment id="13215669" author="hustlmsp" created="Fri, 24 Feb 2012 15:22:59 +0000"  >&lt;p&gt;&amp;gt; Are you sure about this? the tests check that subscribers are only getting as many messages as the bound is set to.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

+    MyOrderCheckingMessageHandlerCallback* cb =
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyOrderCheckingMessageHandlerCallback(95);
+
+    Hedwig::MessageHandlerCallbackPtr handler(cb);
+    sub.startDelivery(topic, subid, handler);
+    
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 10000; i++) {
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cb-&amp;gt;nextExpected() == 101) {
+	&lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+	sleep(1);
+      }
+    }
+    CPPUNIT_ASSERT(cb-&amp;gt;nextExpected() == 101);
+  }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from the test case, it would received 6 messages while the bound was 5. Received 5 or 6 messages is OK for me (although I prefer it received 5 messages). My concern is that we should make clear that how many messages client should received, when user use this settings. otherwise it make user confused. It would better to make it clear in the documentation of this setting.&lt;/p&gt;

&lt;p&gt;&amp;gt; I did have this originally in my first draft, but it looked messy to me. Do you have a usecase for this right now, or is it just speculative?&lt;/p&gt;

&lt;p&gt;in a proxy-style server using hedwig client, it usually initializes a client instance to handle/proxy the subscriptions. if we want to support different application/subscription having different size-bound, we have to construct multiple client instances, which make it complex.&lt;/p&gt;</comment>
                            <comment id="13215676" author="ikelly" created="Fri, 24 Feb 2012 15:30:19 +0000"  >&lt;p&gt;Ah, you&apos;re right about the test case. I was counting wrong in my head.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;in a proxy-style server using hedwig client, it usually initializes a client instance to handle/proxy the subscriptions. if we want to support different application/subscription having different size-bound, we have to construct multiple client instances, which make it complex.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ll have a look at how to do this. It shouldn&apos;t be very complex, though I&apos;ll have to do for both C++ and java.&lt;/p&gt;</comment>
                            <comment id="13228317" author="ikelly" created="Tue, 13 Mar 2012 11:15:34 +0000"  >&lt;p&gt;Added new subscribe method, which takes SubscriptionOptions. This can be extended in the future to take more options if this is ever needed.&lt;/p&gt;</comment>
                            <comment id="13228320" author="jiraposter@reviews.apache.org" created="Tue, 13 Mar 2012 11:17:36 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2012-03-13 11:16:09.577984)&lt;/p&gt;


&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;br/&gt;
  hedwig-client/src/main/cpp/inc/hedwig/subscribe.h 775a32c &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.h 1cad984 &lt;br/&gt;
  hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;br/&gt;
  hedwig-client/src/main/cpp/log4cpp.conf 5651e25 &lt;br/&gt;
  hedwig-client/src/main/cpp/scripts/log4cxx.conf fc1084c &lt;br/&gt;
  hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;br/&gt;
  hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;br/&gt;
  hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;br/&gt;
  hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java 6910e7d &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/data/PubSubData.java 1b33c2f &lt;br/&gt;
  hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;br/&gt;
  hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;br/&gt;
  hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java f1fd965 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubSubscriber.java 40aa338 &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;br/&gt;
  hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13228551" author="stuhood" created="Tue, 13 Mar 2012 18:08:35 +0000"  >&lt;p&gt;It seems like &apos;time&apos; might make a better bound than message count, since message count could be very volatile depending on the topic?&lt;/p&gt;</comment>
                            <comment id="13228564" author="ikelly" created="Tue, 13 Mar 2012 18:30:42 +0000"  >&lt;p&gt;Time based bounding would also be a lot more complex to implement, as it would require a garbage collecting thread, going over each message, checking it against the bound and if so deleting it.&lt;/p&gt;

&lt;p&gt;The nice thing about the number based message bound is that it does the cleanup just in time, and it allows administrators to reason about how much storage their system will take without having to worry about tuning garbage collection. &lt;/p&gt;</comment>
                            <comment id="13229041" author="jiraposter@reviews.apache.org" created="Wed, 14 Mar 2012 07:03:37 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3824/#review5925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/#review5925&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;new patch is good to me. +1.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sijie&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-03-13 11:16:09, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3824/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-03-13 11:16:09)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In hedwig, messages for a subscription will queue up forever if the subscriber is offline. In some usecases, this is undesirable, as it will eventually mean resource exhaustion. In this JIRA we propose an optional change to the subscription contract, which allows the user to set a bound on the number of messages which will be queued for its subscription while it is offline.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-168&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/inc/hedwig/client.h f37ef98 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/inc/hedwig/subscribe.h 775a32c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/client.cpp 6d70ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.h b4e2c15 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/data.cpp a223120 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/subscriberimpl.h 1cad984 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/lib/subscriberimpl.cpp 32075c4 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/log4cpp.conf 5651e25 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/scripts/log4cxx.conf fc1084c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/scripts/tester.sh 5df613a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/Makefile.am 62902e6 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/main.cpp 3290af3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/cpp/test/messageboundtest.cpp PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java 6910e7d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java 66e049f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/data/PubSubData.java 1b33c2f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java 5fb1d88 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java f46868b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-protocol/src/main/protobuf/PubSubProtocol.proto e44d981 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java 2c9af4d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java f1fd965 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java 02ec607 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java 5c38ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java 0261521 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubSubscriber.java 40aa338 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java 714a631 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java 84b866d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3824/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3824/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13229077" author="fpj" created="Wed, 14 Mar 2012 08:42:59 +0000"  >&lt;p&gt;Although Ivan&apos;s argument sounds right to me, I also agree with Stu that a time-based collection can be useful in some scenarios. For example, in the case I tell my users that their messages will be there for at least a month. In fact, I believe we have considered a time-based mechanism at some point. &lt;/p&gt;

&lt;p&gt;If you guys think this is a useful feature, we can try to work it out perhaps in a separate jira. &lt;/p&gt;</comment>
                            <comment id="13229122" author="ikelly" created="Wed, 14 Mar 2012 10:26:44 +0000"  >&lt;p&gt;It is a valid scenario, but it belongs in another JIRA. The current fix addresses the requirement and usecases we currently have. If in the future we find ourselves with a usecase which requires time based bounding, we can add it then.&lt;/p&gt;
</comment>
                            <comment id="13229135" author="hudson" created="Wed, 14 Mar 2012 11:39:33 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #404 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/404/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/404/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;: Message bounding on subscriptions (ivank) (Revision 1300510)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/inc/hedwig/client.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/inc/hedwig/subscribe.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/client.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/data.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/data.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/subscriberimpl.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/lib/subscriberimpl.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/log4cpp.conf&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/scripts/log4cxx.conf&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/scripts/tester.sh&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/Makefile.am&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/main.cpp&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/conf/ClientConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/data/PubSubData.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/java/org/apache/hedwig/client/netty/HedwigSubscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/persistence/LocalDBPersistenceManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/persistence/PersistenceManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/persistence/ReadAheadCache.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubSubscriber.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/StubPersistenceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13229136" author="ikelly" created="Wed, 14 Mar 2012 11:41:10 +0000"  >&lt;p&gt;Committed r1300510. Thanks for the review Sijie.&lt;/p&gt;</comment>
                            <comment id="13257536" author="hustlmsp" created="Thu, 19 Apr 2012 16:10:06 +0100"  >&lt;p&gt;@Ivan,&lt;/p&gt;

&lt;p&gt;I just found that you missed committing the newly added test case. &lt;br/&gt;
hedwig-server/src/test/java/org/apache/hedwig/server/persistence/MessageBoundedPersistenceTest.java&lt;/p&gt;

&lt;p&gt;+++ hedwig-client/src/main/cpp/test/messageboundtest.cpp&lt;/p&gt;

&lt;p&gt;so I opened the issue, could you commit these two missed files?&lt;/p&gt;</comment>
                            <comment id="13258107" author="ikelly" created="Fri, 20 Apr 2012 10:21:20 +0100"  >&lt;p&gt;Added test in r1328270&lt;/p&gt;</comment>
                            <comment id="13258119" author="hudson" created="Fri, 20 Apr 2012 10:45:26 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #468 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/468/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/468/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-168&quot; title=&quot;Message bounding on subscriptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-168&quot;&gt;&lt;del&gt;BOOKKEEPER-168&lt;/del&gt;&lt;/a&gt;: Message bounding on subscriptions (ivank) &lt;span class=&quot;error&quot;&gt;&amp;#91;missing test&amp;#93;&lt;/span&gt; (Revision 1328270)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-client/src/main/cpp/test/messageboundtest.cpp&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12518173" name="BOOKKEEPER-168.diff" size="628240" author="ikelly" created="Tue, 13 Mar 2012 11:15:34 +0000"/>
                            <attachment id="12514661" name="BOOKKEEPER-168.diff" size="585397" author="ikelly" created="Wed, 15 Feb 2012 16:54:01 +0000"/>
                            <attachment id="12513974" name="BOOKKEEPER-168.diff" size="581325" author="ikelly" created="Thu, 9 Feb 2012 16:56:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Feb 2012 16:57:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>227287</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4sdj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61753</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>