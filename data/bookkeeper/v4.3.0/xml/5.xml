<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:33:09 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-5/BOOKKEEPER-5.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-5] Issue with Netty in BookKeeper</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-5</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;In one my experiments, I found that a BookKeeper object was locked after I tried to halt it. By searching the Web, I found that the issue is described here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jboss.org/netty/community.html#nabble-td5492010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jboss.org/netty/community.html#nabble-td5492010&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll upload a patch to fix it. For now, I&apos;m marking it for 3.4.0, but if there is any chance we can get it in 3.3.3, it would be nice.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12499276">BOOKKEEPER-5</key>
            <summary>Issue with Netty in BookKeeper</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="fpj">Flavio Junqueira</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Feb 2011 20:55:47 +0000</created>
                <updated>Wed, 7 Dec 2011 15:56:09 +0000</updated>
                            <resolved>Tue, 30 Aug 2011 08:49:03 +0100</resolved>
                                                    <fixVersion>4.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12997578" author="hadoopqa" created="Mon, 21 Feb 2011 21:33:28 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12471577/ZOOKEEPER-998.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12471577/ZOOKEEPER-998.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1072085.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/154//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12999088" author="hadoopqa" created="Thu, 24 Feb 2011 22:33:27 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12471577/ZOOKEEPER-998.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12471577/ZOOKEEPER-998.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1072085.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/157//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13007028" author="fpj" created="Tue, 15 Mar 2011 17:20:42 +0000"  >&lt;p&gt;It is still halting, so I&apos;m canceling for now.&lt;/p&gt;</comment>
                            <comment id="13050096" author="fpj" created="Wed, 15 Jun 2011 23:44:54 +0100"  >&lt;p&gt;Preliminary patch to fix this problem. It does not include a test yet.&lt;/p&gt;</comment>
                            <comment id="13050562" author="fpj" created="Thu, 16 Jun 2011 17:56:15 +0100"  >&lt;p&gt;Patch with test. The patch essentially introduces a ChannelGroup as the Netty documentation suggests:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.jboss.org/netty/3.2/api/org/jboss/netty/channel/ChannelFactory.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.jboss.org/netty/3.2/api/org/jboss/netty/channel/ChannelFactory.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13050957" author="ikelly" created="Fri, 17 Jun 2011 11:15:52 +0100"  >&lt;p&gt;Is the locking on the object the same as the locking in the netty thread you posted? &lt;/p&gt;

&lt;p&gt;I think the reason this patch works is that you call .awaitUninterruptibly() on the channel group. You could just do awaitingUninterruptibly() on the channel.close call in PerChannelBookieClient#close for the same effect. Also, the fact that you call close on the group rather than the individual channels means PerChannelBookieClient#close gets bypassed completely, which could be a potential source of bugs, as someone could put cleanup in there that never gets called. &lt;/p&gt;

&lt;p&gt;Who calls the halt() code in the test code? It might be a good idea to move the releaseExternalResources() call into a new thread to allow halt to be called from callbacks. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void halt() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
    bookieClient.close();
    bookieWatcher.halt();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ownChannelFactory) {
      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;() {
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
          channelFactory.releaseExternalResources();
        }
      }.start();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ownZKHandle) {
      zk.close();
    }
    callbackWorker.shutdown();
    mainWorkerPool.shutdown();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, indentation in general is inconsistent over BK, 4 space in some places, 2 space in others. We should standardize. It may even be a good idea to go through the whole tree and reindent now, rather than later when such an action would destroy history (we currently don&apos;t have very much history since the split). &lt;/p&gt;

&lt;p&gt;Finally, I think halt() should be called close(). halt() seems to imply that the bookkeeper service is being stopped, not that you&apos;re just closing your connection to it.&lt;/p&gt;
</comment>
                            <comment id="13050961" author="fpj" created="Fri, 17 Jun 2011 11:44:00 +0100"  >&lt;p&gt;The trunk code in BookiClient.close() is this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;for (PerChannelBookieClient channel: channels.values()){
            channel.close();
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and I have just replaced it with channelGroup.close(). The documentation of ChannelFactory says:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Graceful shutdown

To shut down a network application service which is managed by a factory. you should follow the following steps:

   1- close all channels created by the factory and their child channels usually using ChannelGroup.close(), and
   2- call releaseExternalResources().
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and if you look at the ChannelGroup documentation, I&apos;m just using the way they suggest. Finally, in my understanding of awaitUninterruptibly() is that the thread waits and can&apos;t be interrupted.&lt;/p&gt;

&lt;p&gt;On the test, BookKeeper.halt() is invoked from the tearDown method of BaseTestCase, which the test class extends. I tried applying only the new test, and it hangs on my computer. &lt;/p&gt;
</comment>
                            <comment id="13050962" author="fpj" created="Fri, 17 Jun 2011 11:44:19 +0100"  >&lt;p&gt;Until issues brought up are resolved.&lt;/p&gt;</comment>
                            <comment id="13051052" author="ikelly" created="Fri, 17 Jun 2011 13:53:45 +0100"  >&lt;p&gt;BookieClient has a list of PerChannelBookieClient which in turn holds the netty Channel. My concern is that, by using ChannelGroup, PerChannelBookieClient#close is bypassed completely. Its not a problem now, as all it does it close the channel, but if in future it is used, it will never be called. I think the core of the problem is that it introduces an asymmetry in the lifetime management of the Channel object. PerChannelBookieClient creates it, but BookieClient destroys it.&lt;/p&gt;

&lt;p&gt;My understanding of awaitUninterruptibly() is the same, and I think that is where the bug was. Since channel.close() is called but not awaited on, the thread moves on and calls releaseExternalResources() while the close is possibly still in progress.&lt;/p&gt;</comment>
                            <comment id="13051059" author="fpj" created="Fri, 17 Jun 2011 14:01:38 +0100"  >&lt;p&gt;I&apos;m not sure I understand why you&apos;re saying that PerChannelBookieClient#close is bypassed completely. The original trunk code only calls close on the channel of a PerChannelBookieClient. According to the documentation of ChannelGroup, calling close on it causes it to close all channels in the group. I believe the change I&apos;m proposing achieves the same behavior, no?&lt;/p&gt;

&lt;p&gt;Perhaps you&apos;re saying that we should just call awaitUninterruptibly() on every PerChannelBookieClient#close instead of creating a channel group? I think it should work.&lt;/p&gt;</comment>
                            <comment id="13051068" author="ikelly" created="Fri, 17 Jun 2011 14:39:09 +0100"  >&lt;p&gt;The original code in BookieClient is:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close(){
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (PerChannelBookieClient channel: channels.values()){
            channel.close();
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which called close on PerChannelBookieClient, not just its channel. The names are confusing and should be changed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Perhaps you&apos;re saying that we should just call awaitUninterruptibly() on every PerChannelBookieClient#close instead of creating a channel group? I think it should work. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yup, this is what I was suggesting.&lt;/p&gt;</comment>
                            <comment id="13051072" author="fpj" created="Fri, 17 Jun 2011 14:42:54 +0100"  >&lt;p&gt;Sounds good to me. I&apos;ll fix and propose a new patch.&lt;/p&gt;</comment>
                            <comment id="13051210" author="ikelly" created="Fri, 17 Jun 2011 18:30:16 +0100"  >&lt;p&gt;Problem was a race between the creation/connection of channels in BookieClient#lookupClient. This meant a client was created, connection and discarded, and therefore never closed. &lt;/p&gt;

&lt;p&gt;This patch defers connection until the channel has been safely put into the channels hashmap.&lt;/p&gt;</comment>
                            <comment id="13051506" author="fpj" created="Sat, 18 Jun 2011 13:06:28 +0100"  >&lt;p&gt;Good catch, Ivan. It is actually not even necessary to connect before invoking an operation, since we call connectIfNeededAndDoOp() upon every addEntry and readEntry. It works even without the else block in your version of the patch. There are also a few other changes unrelated to this issue, like a change to pom.xml and fixed typos. Do you want those to get in or they ended up there by accident?&lt;/p&gt;</comment>
                            <comment id="13051849" author="ikelly" created="Mon, 20 Jun 2011 09:32:46 +0100"  >&lt;p&gt;They were uncommitted changes. I&apos;ve regenerated the patch to only include whats committed.&lt;/p&gt;</comment>
                            <comment id="13056300" author="breed" created="Tue, 28 Jun 2011 05:52:56 +0100"  >&lt;p&gt;if i understand this patch correctly, there are two big fixes:&lt;/p&gt;

&lt;p&gt;1) we wait for close to complete&lt;br/&gt;
2) we proactively initiate a connection on lookup&lt;/p&gt;

&lt;p&gt;was 1) really causing a problem?&lt;/p&gt;

&lt;p&gt;the rest is really just cleanup right?&lt;/p&gt;

&lt;p&gt;it looks like all of the additions to BookKeeper.java are just debug messages that should be removed.&lt;/p&gt;

&lt;p&gt;other than these small items the patch looks good.&lt;/p&gt;
</comment>
                            <comment id="13056443" author="fpj" created="Tue, 28 Jun 2011 11:51:40 +0100"  >&lt;p&gt;On 1): According to the discussions I found online about this problem with Netty, if the thread is interrupted while waiting on close, then it can go into an infinite loop. Honestly, I didn&apos;t spend time trying to understand what exactly is the problem with netty, only that folks recommend to do it in the way we have in the patch, which makes a difference.&lt;/p&gt;

&lt;p&gt;The real problem, though, is that we were creating new channels, but not keeping track of the, so when shutting down, we were not closing those channels and triggering the netty problem. &lt;/p&gt;

&lt;p&gt;I rarely have a good sense of where log messages have to be inserted, but I do find useful to say what we are shutting down when we call halt() in the BookKeeper object. Since these messages only appear when we shut down the object, I don&apos;t see a problem with keeping them, but at the same time I don&apos;t feel strongly about removing them if you feel they are unnecessary. &lt;/p&gt;</comment>
                            <comment id="13056512" author="breed" created="Tue, 28 Jun 2011 14:44:49 +0100"  >&lt;p&gt;i&apos;m fine with 1). we do need to either remove those messages or change them to debug especially since this is a client library. on the server being verbose only messes up the server log, but on the client it can be really annoying for the client application.&lt;/p&gt;</comment>
                            <comment id="13056722" author="ikelly" created="Tue, 28 Jun 2011 20:50:18 +0100"  >&lt;p&gt;Removed trace statements&lt;/p&gt;</comment>
                            <comment id="13058590" author="breed" created="Fri, 1 Jul 2011 16:06:00 +0100"  >&lt;p&gt;+1 looks good&lt;/p&gt;</comment>
                            <comment id="13061347" author="fpj" created="Thu, 7 Jul 2011 15:38:38 +0100"  >&lt;p&gt;Thanks Ivan for working on the patch and Ben for reviewing it. Committed revision 1143850.&lt;/p&gt;</comment>
                            <comment id="13083347" author="ikelly" created="Thu, 11 Aug 2011 19:35:27 +0100"  >&lt;p&gt;This issue still seems to be hitting if you run for long enough. To repro, &lt;/p&gt;

&lt;p&gt;true; while [ $? = 0 ]; do mvn test -Dtest=BookieReadWriteTest; done&lt;/p&gt;

&lt;p&gt;Leave this running for 5-6 hours, and the bug should hit. From looking at the code it could be that connect is unsynchronized, so resources could be allocated and lost by concurrent executions of connect(). I&apos;m currently testing a patch to see if this is the case.&lt;/p&gt;</comment>
                            <comment id="13084051" author="ikelly" created="Fri, 12 Aug 2011 12:23:28 +0100"  >&lt;p&gt;I&apos;ve attached a patch to fix this. I&apos;m not sure how to proceed procedurally with this though, as the original fix is in trunk, and the original fix is good, just incomplete. Perhaps this should get a whole new JIRA.&lt;/p&gt;</comment>
                            <comment id="13093526" author="ikelly" created="Tue, 30 Aug 2011 08:49:03 +0100"  >&lt;p&gt;Going to fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-59&quot; title=&quot;Race condition in netty code allocates and orphans resources (BK-5 revisited)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-59&quot;&gt;&lt;del&gt;BOOKKEEPER-59&lt;/del&gt;&lt;/a&gt;. To do it under BK-5 we&apos;d have to pull the former patch and then reapply it with extra changes. This is ugly, especially since the original patch does good stuff. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12490234" name="BOOKKEEPER-5.diff" size="1748" author="ikelly" created="Fri, 12 Aug 2011 12:23:28 +0100"/>
                            <attachment id="12484492" name="BOOKKEEPER-5.diff" size="4929" author="ikelly" created="Tue, 28 Jun 2011 20:50:18 +0100"/>
                            <attachment id="12483123" name="BOOKKEEPER-5.diff" size="6038" author="ikelly" created="Mon, 20 Jun 2011 09:32:46 +0100"/>
                            <attachment id="12482959" name="BOOKKEEPER-5.diff" size="7360" author="ikelly" created="Fri, 17 Jun 2011 18:30:16 +0100"/>
                            <attachment id="12482822" name="BOOKKEEPER-5.patch" size="7947" author="fpj" created="Thu, 16 Jun 2011 17:56:15 +0100"/>
                            <attachment id="12482731" name="BOOKKEEPER-5.patch" size="5393" author="fpj" created="Wed, 15 Jun 2011 23:44:54 +0100"/>
                            <attachment id="12471577" name="ZOOKEEPER-998.patch" size="995" author="fpj" created="Mon, 21 Feb 2011 21:03:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Feb 2011 21:33:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>63264</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy9ozb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>90526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>