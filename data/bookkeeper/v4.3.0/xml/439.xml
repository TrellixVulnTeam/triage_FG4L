<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:31:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-439/BOOKKEEPER-439.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-439] No more messages delivered after deleted consumed ledgers.</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-439</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;We encountered exception as below:&lt;/p&gt;

&lt;blockquote&gt;

&lt;p&gt;2012-10-18 09:27:27,248 - DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;CacheThread:BookkeeperPersistenceManager$RangeScanOp@247&amp;#93;&lt;/span&gt; - Issuing a bk read for ledger: L2 from entry-id: 100 to entry-id: 103&lt;br/&gt;
2012-10-18 09:27:27,248 - ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;CacheThread:BookkeeperPersistenceManager$RangeScanOp$2@261&amp;#93;&lt;/span&gt; - Error while reading from ledger: L2 for topic: TOPIC&lt;br/&gt;
org.apache.bookkeeper.client.BKException$BKReadException&lt;br/&gt;
        at org.apache.bookkeeper.client.BKException.create(BKException.java:48)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp$2.safeReadComplete(BookkeeperPersistenceManager.java:260)&lt;br/&gt;
        at org.apache.hedwig.zookeeper.SafeAsynBKCallback$ReadCallback.readComplete(SafeAsynBKCallback.java:61)&lt;br/&gt;
        at org.apache.bookkeeper.client.LedgerHandle.asyncReadEntries(LedgerHandle.java:380)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.read(BookkeeperPersistenceManager.java:252)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.startReadingFrom(BookkeeperPersistenceManager.java:327)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager$RangeScanOp.runInternal(BookkeeperPersistenceManager.java:217)&lt;br/&gt;
        at org.apache.hedwig.server.common.TopicOpQueuer$SynchronousOp.run(TopicOpQueuer.java:77)&lt;br/&gt;
        at org.apache.hedwig.server.common.TopicOpQueuer.pushAndMaybeRun(TopicOpQueuer.java:105)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.BookkeeperPersistenceManager.scanMessages(BookkeeperPersistenceManager.java:336)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.ReadAheadCache$ScanRequestWrapper.performRequest(ReadAheadCache.java:704)&lt;br/&gt;
        at org.apache.hedwig.server.persistence.ReadAheadCache.run(ReadAheadCache.java:291)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:662)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;topic TOPIC has 2 ledgers L1, L2, each ledger has 100 entries.&lt;/p&gt;

&lt;p&gt;1) all the 100 entries in L1 has been delivered and consumed.&lt;br/&gt;
2) 100 entries have been wrote to L2 but not delivered.&lt;br/&gt;
3) L1 is deleted since all its entries have been consumed.&lt;br/&gt;
4) hub server shuts down&lt;br/&gt;
5) TOPIC recovered L2 and started delivering from 101.&lt;/p&gt;

&lt;p&gt;TOPIC was expected to issue a read &lt;span class=&quot;error&quot;&gt;&amp;#91;0-3&amp;#93;&lt;/span&gt; from L2, but a read &lt;span class=&quot;error&quot;&gt;&amp;#91;100-103&amp;#93;&lt;/span&gt; was issued from the exception log, so no entries would be expected to read from L2 at &lt;span class=&quot;error&quot;&gt;&amp;#91;100-103&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;The problem of this issue is that we used 0 and 1 for the start of message id and ledger id even we had some consumed ledgers deleted.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        void processTopicLedgerRanges(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; LedgerRanges ranges, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Version version) {
            Iterator&amp;lt;LedgerRange&amp;gt; lrIterator = ranges.getRangesList().iterator();
            TopicInfo topicInfo = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TopicInfo();

            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; startOfLedger = 1;

            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (lrIterator.hasNext()) {
                LedgerRange range = lrIterator.next();

                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (range.hasEndSeqIdIncluded()) {
                    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; means it was a valid and completely closed ledger
&lt;/span&gt;                    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; endOfLedger = range.getEndSeqIdIncluded().getLocalComponent();
                    topicInfo.ledgerRanges.put(endOfLedger, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InMemoryLedgerRange(range,           startOfLedger));                             startOfLedger = endOfLedger + 1;
                    &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
                }        

                &lt;span class=&quot;code-comment&quot;&gt;// If it doesn&apos;t have a valid end, it must be the last ledger
&lt;/span&gt;                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lrIterator.hasNext()) {
                    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Ledger-id: &quot;&lt;/span&gt; + range.getLedgerId() + &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; topic: &quot;&lt;/span&gt; + topic.       toStringUtf8()                                            + &lt;span class=&quot;code-quote&quot;&gt;&quot; is not the last one but still does not have an end seq-id&quot;&lt;/span&gt;;
                    logger.error(msg);
                    cb.operationFailed(ctx, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PubSubException.UnexpectedConditionException(msg));
                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;                }

                &lt;span class=&quot;code-comment&quot;&gt;// The last ledger does not have a valid seq-id, lets &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// find it out
&lt;/span&gt;                recoverLastTopicLedgerAndOpenNewOne(range.getLedgerId(), version, topicInfo);
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; prevLedgerEnd = topicInfo.ledgerRanges.isEmpty() ? 0 : topicInfo.   ledgerRanges
                                                 .lastKey();
                            LedgerRange lr = LedgerRange.newBuilder().setLedgerId(ledgerId)
                                             .setEndSeqIdIncluded(lastMessage.getMsgId()).build();
                            topicInfo.ledgerRanges.put(lr.getEndSeqIdIncluded().getLocalComponent(),
                                    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InMemoryLedgerRange(lr, prevLedgerEnd + 1, lh));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12612647">BOOKKEEPER-439</key>
            <summary>No more messages delivered after deleted consumed ledgers.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hustlmsp">Sijie Guo</assignee>
                                    <reporter username="hustlmsp">Sijie Guo</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Oct 2012 11:08:27 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:55 +0000</updated>
                            <resolved>Fri, 26 Oct 2012 14:17:45 +0100</resolved>
                                    <version>4.1.0</version>
                    <version>4.2.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>hedwig-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13479927" author="hustlmsp" created="Fri, 19 Oct 2012 11:10:26 +0100"  >&lt;p&gt;the fix would be quite simple, we just need to compute the right start seq id of the topic. Besides that, hedwig console have same issue to print right range about topic&apos;s persistence info.&lt;/p&gt;</comment>
                            <comment id="13480618" author="i0exception" created="Sat, 20 Oct 2012 04:28:02 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; How about persisting this in Zookeeper? &lt;/p&gt;</comment>
                            <comment id="13480816" author="yx3zhu@gmail.com" created="Sat, 20 Oct 2012 20:45:25 +0100"  >&lt;p&gt;I have a patch ready and tested, since we encountered this issue in our production system.&lt;br/&gt;
Trying to figure out how to enlist to the repository to rebase my patch. &lt;/p&gt;</comment>
                            <comment id="13481216" author="hustlmsp" created="Mon, 22 Oct 2012 07:48:26 +0100"  >&lt;p&gt;Ah, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yx3zhu%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yx3zhu@gmail.com&quot;&gt;Yixue (Andrew) Zhu&lt;/a&gt; I missed your comment last friday. I had a patch when I created this jira but forgot to attach it interrupted by other things. I would attach it here for review to see whether it works for you or not.&lt;/p&gt;</comment>
                            <comment id="13481231" author="hustlmsp" created="Mon, 22 Oct 2012 08:21:01 +0100"  >&lt;p&gt;Attach a patch to address the issue. The main idea is to open first ledger to get num entries to compute right start seq id.&lt;/p&gt;

&lt;p&gt;but it could not resolve a case (a test case I added in the patch testScanMessagesOnEmptyLedgerAfterDeleteLedger).&lt;/p&gt;

&lt;p&gt;1) published 2 messages into a topic.&lt;br/&gt;
2) release/acquire topic to force a new ledger&lt;br/&gt;
3) consumed published messages, so the previous ledger is deleted, but no messages are in current ledger.&lt;br/&gt;
4) release/acquire topic, the ledger created in 2) will be pruned due to there is no ledgers in it. a new ledger is created to serving new messages.&lt;br/&gt;
5) publish 2 more messages.&lt;/p&gt;

&lt;p&gt;the expected message ids published in 5) would be 3 and 4. but we had no knowledge about start seq id, so messages would assigned seq id with 1 and 2.&lt;/p&gt;

&lt;p&gt;in order to fix this case, I improve protocol of LedgerRanges to add a field &apos;startSeqId&apos;.&lt;/p&gt;

&lt;p&gt;Besides these two fixes, I added 3 test cases to verify them.&lt;/p&gt;</comment>
                            <comment id="13481233" author="hustlmsp" created="Mon, 22 Oct 2012 08:22:32 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=i0exception&quot; class=&quot;user-hover&quot; rel=&quot;i0exception&quot;&gt;Aniruddha&lt;/a&gt; I added &apos;startSeqId&apos; in LedgerRanges to address an issue I described in above comment. Could you take a look at the patch to see whether it works for you or not?&lt;/p&gt;</comment>
                            <comment id="13481361" author="hustlmsp" created="Mon, 22 Oct 2012 14:41:41 +0100"  >&lt;p&gt;update a patch to cover another case when failed to update ledger ranges.&lt;/p&gt;

&lt;p&gt;1) suppose T has L1, L2.&lt;br/&gt;
2) consumeUntil to delete L1 and L2.&lt;br/&gt;
3) delete ledger L1 and updateLedgerRange to remove L1 range. update failed.&lt;br/&gt;
4) delate ledger L2 and updateLedgerRange to remove L2 range. update succeed.&lt;br/&gt;
5) topic is acquired again, but there is range L1 existed (L2 has been removed). so message seq id is assigned starting from last seq id of L1, which is duplicated with consumed L2.&lt;/p&gt;

&lt;p&gt;the fix is to update delete ledgers in batch to avoid gap existed in ledger ranges.&lt;/p&gt;</comment>
                            <comment id="13481498" author="yx3zhu@gmail.com" created="Mon, 22 Oct 2012 17:53:25 +0100"  >&lt;p&gt;Sijie,&lt;/p&gt;

&lt;p&gt;In my patch, startSeqId is added inside LedgerRange itself. (I was told that it is ok to introduce breaking change).&lt;br/&gt;
It should be simpler.&lt;/p&gt;</comment>
                            <comment id="13481578" author="yx3zhu@gmail.com" created="Mon, 22 Oct 2012 19:21:33 +0100"  >&lt;p&gt;Added my patch.&lt;/p&gt;</comment>
                            <comment id="13481582" author="yx3zhu@gmail.com" created="Mon, 22 Oct 2012 19:25:53 +0100"  >&lt;p&gt;Sijie,&lt;br/&gt;
I feel that my patch is simpler. Could you take a look?&lt;/p&gt;</comment>
                            <comment id="13481919" author="hustlmsp" created="Tue, 23 Oct 2012 00:21:24 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yx3zhu%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yx3zhu@gmail.com&quot;&gt;Yixue (Andrew) Zhu&lt;/a&gt; your patch looks simpler. but there are several issues that the patch doesn&apos;t fix.&lt;/p&gt;

&lt;p&gt;1) the patch break backward compatibility. the patch could not process the metadata introduced in previous building (4.1.0).&lt;/p&gt;

&lt;p&gt;2) the patch doesn&apos;t address the gap of ledger ranges introduced by deleted consumed ledgers. there was still gap existed in ledger ranges when deleting consumed ledgers, which would introduce duplicated sequence id, those messages have duplicated sequence id would not be delivered to consumer since their sequence id is smaller than consume ptr although they are newly published messages.&lt;/p&gt;

&lt;p&gt;my patch focused on fixing the above 2 issues.&lt;/p&gt;

&lt;p&gt;Either adding startSeqId in LedgerRange or in LedgerRanges could not resolve 2). We need to change ConsumedUntilOp to avoid gap introduced ledger ranges. If there is no gap could be introduced in LedgerRanges, I think we just only need to add startSeqId in LedgerRanges. I don&apos;t feel strong where to add startSeqId. I just want to clarify my changes for this issue is not just adding startSeqId.&lt;/p&gt;</comment>
                            <comment id="13481939" author="yx3zhu@gmail.com" created="Tue, 23 Oct 2012 00:45:52 +0100"  >&lt;p&gt;Hi Sijie,&lt;/p&gt;

&lt;p&gt;Thanks for your comment -&lt;br/&gt;
As to 1), As stated in &quot;comment - 22/Oct/12 09:53&quot;, it is Ok to introduce breaking change in hedwig per folks in our team.&lt;br/&gt;
As to 2), the gap of ledger ranges are Ok, as you may observe, anytime we delete consumed ledgers, we always add current-ledger-range in the ledger metadata, which carries the start-seq-id in itself.&lt;br/&gt;
Your patch to fix 2) is due to the usage of start-seq-id only in LedgerRanges, which lack this kind of information.&lt;/p&gt;

&lt;p&gt;let me know if you see any issues.&lt;br/&gt;
Best Regards&lt;/p&gt;</comment>
                            <comment id="13481941" author="yx3zhu@gmail.com" created="Tue, 23 Oct 2012 00:46:57 +0100"  >&lt;p&gt;Sijie,&lt;br/&gt;
I can add the unit-test you introduced.&lt;/p&gt;</comment>
                            <comment id="13481947" author="i0exception" created="Tue, 23 Oct 2012 00:53:48 +0100"  >&lt;p&gt;To clarify (1), I believe there have been a few breaking changes introduced in Hedwig that are not compatible with 4.1.0 (Storing topic ownership information/storing hub load information etc.) I feel it should be okay to introduce breaking changes in a major version update. &lt;/p&gt;</comment>
                            <comment id="13481960" author="hustlmsp" created="Tue, 23 Oct 2012 01:06:32 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=i0exception&quot; class=&quot;user-hover&quot; rel=&quot;i0exception&quot;&gt;Aniruddha&lt;/a&gt; I don&apos;t think topic ownership info and hub load info break compatibility. All compatibilities are introduced by features like message filter, message bound, which are documented in TestBackward. I think for metadata, we need to take care of it, since there are already systems running using old version. It is not a good idea to ask users to delete their metadata and use new package directly.&lt;/p&gt;</comment>
                            <comment id="13481980" author="hustlmsp" created="Tue, 23 Oct 2012 01:26:41 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yx3zhu%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yx3zhu@gmail.com&quot;&gt;Yixue (Andrew) Zhu&lt;/a&gt; Ur right about 2) adding startSeqId in ledger range. You could add unit tests (in order to pass unit tests, you need include changes in bookkeeper-server to throw BKNoSuchLedgerExistsException when delete non-existed ledger and catch it when deleteLedger otherwise that ledger range entry would never removed from ledger ranges).&lt;/p&gt;</comment>
                            <comment id="13481999" author="hustlmsp" created="Tue, 23 Oct 2012 01:54:13 +0100"  >&lt;p&gt;More points added for ConsumeUntilOp changes:&lt;br/&gt;
1) I changed deleteLedger from synchronous call to asynchronous call, so it would not block other requests in topic queuer.&lt;br/&gt;
2) Batching removed deleted ledgers would reduce number of UpdateLedgerOp in topic queuer, while UpdateLedgerOp is asynchronous op, which also block other requests in topic queuer.&lt;/p&gt;</comment>
                            <comment id="13482002" author="i0exception" created="Tue, 23 Oct 2012 01:59:29 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; Well, the metadata that they&apos;re currently running with is inconsistent so I&apos;m assuming they would want to clear state and get into a correct state. I&apos;d prefer storing the start sequence ID with LedgerRange instead of LedgerRanges. One way to keep BC would be to make this an optional field and as we invoke UpdateLedgerOp, update this lazily. &lt;/p&gt;</comment>
                            <comment id="13482025" author="yx3zhu@gmail.com" created="Tue, 23 Oct 2012 02:40:39 +0100"  >&lt;p&gt;Sijie,&lt;br/&gt;
The async and batching can be tracked as a separate task.&lt;br/&gt;
I will add unit-test and update the patch.&lt;/p&gt;</comment>
                            <comment id="13482048" author="hustlmsp" created="Tue, 23 Oct 2012 03:09:08 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=i0exception&quot; class=&quot;user-hover&quot; rel=&quot;i0exception&quot;&gt;Aniruddha&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, the metadata that they&apos;re currently running with is inconsistent so I&apos;m assuming they would want to clear state and get into a correct state. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The problem here is a scan on wrong entry id so continuous message would not be delivered. it just needs to fix the computation of offset.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&apos;d prefer storing the start sequence ID with LedgerRange instead of LedgerRanges.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would change startSeqId to LedgerRange, since you already have it. I would attach a patch moving startSeqId from LedgerRanges to LedgerRange, since my patch already addressed BC issue, which would be easy to do the change.&lt;/p&gt;</comment>
                            <comment id="13482100" author="yx3zhu@gmail.com" created="Tue, 23 Oct 2012 05:26:16 +0100"  >&lt;p&gt;Sijie,&lt;br/&gt;
Just fixing the computation wont adress the already-wrong metadata, where all closed ranges GCed.&lt;br/&gt;
I understand that you have worked on it, but I am not sure if your patch is closer to the solution, rather the other way around.&lt;br/&gt;
To be clear, I started with adding startSeqId in LedgerRanges, the switch is non-trivial work.&lt;/p&gt;</comment>
                            <comment id="13482114" author="hustlmsp" created="Tue, 23 Oct 2012 06:01:34 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Just fixing the computation wont adress the already-wrong metadata, where all closed ranges GCed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At least, the new code needs to read 1) correct old version metadata, 2) the metadata described in #testScanMessagesOnClosedLedgerAfterDeleteLedger and #testScanMessagesOnUnclosedLedgerAfterDeleteLedger (in my patch).&lt;/p&gt;

&lt;p&gt;The ledger ranges introduced gap like #testScanMessagesOnEmptyLedgerAfterDeleteLedger and #failedToDeleteLedgersTest. The sequence is already wrong as you described but it would not block delivering continuous messages if future published messages fill up the gap. The only bad part of these topics would be missing the messages in this gap.&lt;/p&gt;

&lt;p&gt;I think my patch works same as your patch to address this issue. the only difference between your patch with mine is different place to put start seq id, it introduced different LedgerRanges metadata. since you already had a metadata change, I am OK to align with your changes putting startSeqId in LedgerRange rather than LedgerRanges, which would not break your running system.&lt;/p&gt;

&lt;p&gt;I had a patch ready now, but needs to run the tests before attaching it. You could take a look at it after that.&lt;/p&gt;</comment>
                            <comment id="13482177" author="hustlmsp" created="Tue, 23 Oct 2012 08:38:09 +0100"  >&lt;p&gt;Attach a new patch to move startSeqId from LedgerRanges to LedgerRange while keeping the code to maintain BC.&lt;/p&gt;</comment>
                            <comment id="13484087" author="ikelly" created="Thu, 25 Oct 2012 13:55:28 +0100"  >&lt;p&gt;Why are you changing the return code for delete?&lt;/p&gt;

&lt;p&gt;You never close the ledger opened in getStartSeqIdToProcessTopicLedgerRanges()&lt;br/&gt;
You never close the ledger in recoverLastTopicLedgerAndOpenNewOne()&lt;/p&gt;

&lt;p&gt;in getStartSeqIdToProcessTopicLedgerRanges, for&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!range.hasEndSeqIdIncluded()) {
    &lt;span class=&quot;code-comment&quot;&gt;// process topic ledger ranges directly
&lt;/span&gt;    processTopicLedgerRanges(rangesList, version, START_SEQ_ID);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;add a comment that, as the ledger will be recovered, the start seq id will be discovered at that point.&lt;/p&gt;

&lt;p&gt;for the NoSuchLedgerExistsException case in getStartSeqIdToProcessTopicLedgerRanges(),&lt;br/&gt;
shouldn&apos;t we try the next ledger in this case? what if the next ledger is also missing the start id?&lt;/p&gt;

&lt;p&gt;In UpdateLedgerOp#run, doRemove is a confusing name, I expected it to be used later on to decide whether the update was done, and it was only when i looked at the later code that i realised that keysToRemove.empty() was what was used. I would rename it to foundUnconsumedLedger.&lt;/p&gt;

&lt;p&gt;It would be good to have a backwards compat test for this.&lt;/p&gt;</comment>
                            <comment id="13484593" author="hustlmsp" created="Fri, 26 Oct 2012 01:03:27 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Why are you changing the return code for delete?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Delete ledger doesn&apos;t throw the right exception according to the returned rc. So when you delete a non-existent ledger, you will got ZKException rather than NoSuchLedgerExistsException.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You never close the ledger opened in getStartSeqIdToProcessTopicLedgerRanges()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ur right. will close ledger handle in next patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You never close the ledger in recoverLastTopicLedgerAndOpenNewOne()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The ledger handle could not be closed, since it passed to InMemoryLedgerRanges to future reading.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;for the NoSuchLedgerExistsException case in getStartSeqIdToProcessTopicLedgerRanges(),&lt;br/&gt;
shouldn&apos;t we try the next ledger in this case? what if the next ledger is also missing the start id?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, we don&apos;t need to. Because the end seq id of current ledger plus 1 would be the the start id of next ledger id, it could be calculated using previous one&apos;s ledger id.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I would rename it to foundUnconsumedLedger.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will update it in next patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It would be good to have a backwards compat test for this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I did it on TestBookKeeperPersistenceManager. I removed start seq id in LedgerRanges to test reading old version metadata.&lt;/p&gt;</comment>
                            <comment id="13484839" author="hustlmsp" created="Fri, 26 Oct 2012 11:44:44 +0100"  >&lt;p&gt;Update a new patch addressing Ivan&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13484905" author="ikelly" created="Fri, 26 Oct 2012 14:17:45 +0100"  >&lt;p&gt;Committed r1402501. Good work Sijie.&lt;/p&gt;</comment>
                            <comment id="13484987" author="hudson" created="Fri, 26 Oct 2012 16:18:40 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #776 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/776/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/776/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-439&quot; title=&quot;No more messages delivered after deleted consumed ledgers.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-439&quot;&gt;&lt;del&gt;BOOKKEEPER-439&lt;/del&gt;&lt;/a&gt;: No more messages delivered after deleted consumed ledgers. (sijie via ivank) (Revision 1402501)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/admin/HedwigAdmin.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/admin/console/ReadTopic.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/persistence/BookkeeperPersistenceManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12613433">BOOKKEEPER-442</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12550947" name="BOOKKEEPER-439.diff" size="75026" author="hustlmsp" created="Fri, 26 Oct 2012 11:44:44 +0100"/>
                            <attachment id="12550421" name="BOOKKEEPER-439.diff" size="74385" author="hustlmsp" created="Tue, 23 Oct 2012 08:38:09 +0100"/>
                            <attachment id="12550271" name="BOOKKEEPER-439.diff" size="63767" author="hustlmsp" created="Mon, 22 Oct 2012 14:41:41 +0100"/>
                            <attachment id="12550252" name="BOOKKEEPER-439.diff" size="47651" author="hustlmsp" created="Mon, 22 Oct 2012 08:21:01 +0100"/>
                            <attachment id="12550318" name="TopicMetadataAddStartSeqId.patch" size="46529" author="yx3zhu@gmail.com" created="Mon, 22 Oct 2012 19:21:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 20 Oct 2012 03:28:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249896</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4hkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>60003</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>