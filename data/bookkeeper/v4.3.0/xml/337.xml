<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:26:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-337/BOOKKEEPER-337.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-337] Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-337</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Scenario:&lt;br/&gt;
========&lt;br/&gt;
Start Five BK&apos;s&lt;br/&gt;
Write ledger&apos;s with ensemble three and quroum size=2&lt;br/&gt;
while write inprogress down two bookies(Bookies should be in ensemble)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12598377">BOOKKEEPER-337</key>
            <summary>Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rakeshr">Rakesh R</assignee>
                                    <reporter username="brahmareddy">Brahma Reddy Battula</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Jul 2012 15:03:38 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:50 +0000</updated>
                            <resolved>Tue, 28 Aug 2012 09:52:13 +0100</resolved>
                                    <version>4.0.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13411538" author="brahmareddy" created="Wed, 11 Jul 2012 15:09:50 +0100"  >&lt;p&gt;I had faced this in HDFS-HA,where ANN got shutdown by throwing following..Here availoble bookies are seven even then addentry failed because continuous fail bookie fail which are in ensemble&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2012-07-11 04:02:50,445 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Invoked callback method: 1058
2012-07-11 04:02:50,445 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Could not write request for adding entry: 1058 ledger-id: 364 bookie: /HOST****.168:3183
2012-07-11 04:02:50,445 WARN hidden.bkjournal.org.apache.bookkeeper.client.PendingAddOp: Write did not succeed: 364, 1058
2012-07-11 04:02:50,445 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Invoked callback method: 1058
2012-07-11 04:02:50,445 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Unexpected add response received from bookie: /HOST****.168:3183 for ledger: 364, entry: 1058 , ignoring
2012-07-11 04:02:50,445 ERROR hidden.bkjournal.org.apache.bookkeeper.proto.PerChannelBookieClient: Unexpected add response received from bookie: /HOST****.168:3182 for ledger: 364, entry: 1058 , ignoring
2012-07-11 04:02:50,981 ERROR hidden.bkjournal.org.apache.bookkeeper.client.LedgerHandle: Could not resolve ledger metadata conflict while changing ensemble to: [/HOST****.20:3181, /HOST****.168:3181, /10.18.52.55:3187], old meta data is 
BookieMetadataFormatVersion	1
2
3
0
0	HOST****.168:3183	HOST****.168:3181	HOST****.168:3182
, new meta data is 
BookieMetadataFormatVersion	1
2
3
0
0	HOST****.168:3183	HOST****.168:3181	HOST****.168:3182
1058	HOST****.168:3183	HOST****.168:3181	10.18.52.55:3187
 ,closing ledger
2012-07-11 04:02:51,366 FATAL org.apache.hadoop.hdfs.server.namenode.FSEditLog: Error: flush failed for required journal (JournalAndStream(mgr=org.apache.hadoop.contrib.bkjournal.BookKeeperJournalManager@f73f2c5, stream=org.apache.hadoop.contrib.bkjournal.BookKeeperEditLogOutputStream@5476b70))
java.io.IOException: Failed to write to bookkeeper; Error is (-9) Error while using ZooKeeper
	at org.apache.hadoop.contrib.bkjournal.BookKeeperEditLogOutputStream.flushAndSync(BookKeeperEditLogOutputStream.java:141)
	at org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream.flush(EditLogOutputStream.java:105)
	at org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalSetOutputStream$8.apply(JournalSet.java:460)
	at org.apache.hadoop.hdfs.server.namenode.JournalSet.mapJournalsAndReportErrors(JournalSet.java:319)
	at org.apache.hadoop.hdfs.server.namenode.JournalSet.access$200(JournalSet.java:50)
	at org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalSetOutputStream.flush(JournalSet.java:456)
	at org.apache.hadoop.hdfs.server.namenode.FSEditLog.logSync(FSEditLog.java:550)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2007)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:471)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:292)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java:42676)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:427)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:916)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1692)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1688)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1232)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:1686)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13412531" author="rakeshr" created="Thu, 12 Jul 2012 06:42:16 +0100"  >&lt;p&gt;I just tried the following test case by putting break points in the AbstractZkLedgerManager.writeLedgerMetadata()&lt;/p&gt;

&lt;p&gt;Consider the case, where added 5 entries and now the writer is idle.&lt;br/&gt;
Ledger metadata as follows: 0 - A B C&lt;br/&gt;
Say bookies A and B got shutdown. Now, when the writer tries to add more entries it will try reforming the ensemble for A in first pass:&lt;br/&gt;
0  - A B C&lt;br/&gt;
5 - F B C&lt;br/&gt;
Then in the second pass when tries to reform the ensemble for B, it is throwing ZK BadVersionException and not able to resolve the conflicts.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;cite&gt;I think the cause is simple, &lt;ins&gt;due to the async setdata&lt;/ins&gt;, on handleBookieFailure() its just passing the request to zk and moving to process next ChannelBookieClient response. As the zk callback didn&apos;t responsed, this client response seeing the previous zkVersion and is causing the trouble.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;AbstractZkLedgerManager.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void writeLedgerMetadata(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; LedgerMetadata metadata,
                                    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; cb) {
        &lt;span class=&quot;code-comment&quot;&gt;//.....
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;//.....
&lt;/span&gt;        zk.setData(getLedgerPath(ledgerId),
                   metadata.serialize(), zv.getZnodeVersion(),
                   &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StatCallback() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It would be great to know the opinion from others also.&lt;/p&gt;</comment>
                            <comment id="13412604" author="hustlmsp" created="Thu, 12 Jul 2012 09:23:38 +0100"  >&lt;p&gt;yup, ur right. the confliction occurred due to there are more than two changing-same-ensemble requests sending on-the-fly. but LedgerMetadata#resolveConflict doesn&apos;t handle this case. so it threw the MetadataVersionException. &lt;/p&gt;

&lt;p&gt;I think the simple fix would be improve LedgerMetadata#resolveConflict to handle this case. I attached a draft about it and also add some logging messages to inform users that there are more than two changing-same-ensemble requests are processing.&lt;/p&gt;

&lt;p&gt;but I don&apos;t think the fix is best. since it introduced overhead to maintain confliction cases that we need to handle in LedgerMetadata#resolveConflict. for long term plan, seems that we need to find better solution to resolve confliction. &lt;/p&gt;</comment>
                            <comment id="13413703" author="rakeshr" created="Fri, 13 Jul 2012 14:06:10 +0100"  >&lt;p&gt;@Sijie&lt;br/&gt;
Is there any chance of multiple-thread execution in the following snippet? (I&apos;m just doubting, since all these callbacks are getting invoked upon netty server notifications)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;BookieClient.addEntry(args....){
&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; PerChannelBookieClient client = lookupClient(addr);
        client.connectIfNeededAndDoOp(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;() {
            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; result) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != BKException.Code.OK) {
                    cb.writeComplete(rc, ledgerId, entryId, addr, ctx);
                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
                }
                client.addEntry(ledgerId, masterKey, entryId, toSend, cb, ctx, options);
            }
        });
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assume we have ensemble like 0 A B C D E&lt;br/&gt;
Say, A B C are down in a row and now reached the callback of A&apos;s failure, sametime B&apos;s connect failure, then sametime C&apos;s connect failure?&lt;br/&gt;
If yes, all three guys will do modifying the ledger metadata(ensemble) at the sametime and will clash eachother. Any thoughts?&lt;/p&gt;</comment>
                            <comment id="13413778" author="rakeshr" created="Fri, 13 Jul 2012 15:30:18 +0100"  >&lt;p&gt;Attached the test case to reproduce the issue.&lt;/p&gt;</comment>
                            <comment id="13413835" author="ikelly" created="Fri, 13 Jul 2012 16:51:15 +0100"  >&lt;p&gt;The solution has to be at the handleBookieFailure level and not the resolveConflict level, because otherwise it could try replace both failed bookie with the same new bookie. I think it&apos;s quite straightforward though. &lt;/p&gt;

&lt;p&gt;Suggested fix attached.&lt;/p&gt;</comment>
                            <comment id="13414637" author="hustlmsp" created="Sun, 15 Jul 2012 15:05:32 +0100"  >&lt;p&gt;yup, Ivan&apos;s patch is quite simple and straightforward. but as Rakesh mentioned in previous comment, #handleBookieFailure would be called concurrently to recover same ensemble. so metadata.currentEnsemble would be changed several times before the write callback executed.&lt;/p&gt;

&lt;p&gt;suppose, we had ensemble [ A, B, C, D, E ]. A, B, C are down, F, G, H is available.&lt;br/&gt;
A -&amp;gt; handleBookieFailure to replace A with F. &lt;span class=&quot;error&quot;&gt;&amp;#91;F, B, C, D, E&amp;#93;&lt;/span&gt;. write request 1 is sent to zookeeper.&lt;br/&gt;
B -&amp;gt; handleBookieFailure to replace B with G. &lt;span class=&quot;error&quot;&gt;&amp;#91;F, G, C, D, E&amp;#93;&lt;/span&gt;. write request 2 is sent to zookeeper.&lt;br/&gt;
C -&amp;gt; handleBookieFailure to replace C with H. &lt;span class=&quot;error&quot;&gt;&amp;#91;F, G, H, D, E&amp;#93;&lt;/span&gt;. write request 3 is sent to zookeeper.&lt;/p&gt;

&lt;p&gt;write request 1 is back. succeed.&lt;br/&gt;
write request 2 should fail due to metadata version conflict. so it would call #handleBookieFailure again, but its current ensemble is &lt;span class=&quot;error&quot;&gt;&amp;#91;F, G, H, D, E&amp;#93;&lt;/span&gt;, there is no other bookie could be picked up to replace G.&lt;/p&gt;

&lt;p&gt;the problem here is we don&apos;t have any synchronization on metadata.currentEnsemble. so we got confused when metadata version conflicts. so we had to have synchronized on metadata.currentEnsemble to avoid correct bookie replacement is modified by wrong replacement. also we not only check new metadata&apos;s currentEnsemble but also need to check current metadata&apos;s currentEnsemble to see whether that bookie has been replaced before. if it has been replaced before, we should not do #handleBookieFailure again.&lt;/p&gt;

&lt;p&gt;attach a new patch based on Ivan&apos;s patch and Rakesh&apos;s test case.&lt;/p&gt;</comment>
                            <comment id="13430870" author="rakeshr" created="Wed, 8 Aug 2012 06:06:11 +0100"  >&lt;p&gt;@Ivan @Sijie&lt;br/&gt;
Thanks a lot for your thoughts. I&apos;ve modified the logic little bit, please review.&lt;/p&gt;

&lt;p&gt;Latest patch contains:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;synchronized block while replacing the failed bookie in the ensemble. This is done to avoid concurrent ensemble modification (same as mentioned in the above discussion threads)&lt;/li&gt;
	&lt;li&gt;When there is a zversion conflict,&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;first would check the metadata state, return false and throws exception if the state mismatches&lt;/li&gt;
	&lt;li&gt;update znode version&lt;/li&gt;
	&lt;li&gt;then if my changes doesn&apos;t exists in zk, writeLedgerConfig(), otw again back to handleFailure&lt;/li&gt;
	&lt;li&gt;return success and continue with write req, if in-memory structure is insync with zk.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;@Sijie&lt;br/&gt;
I&apos;m thinking the resolveconflicts() would not required to have the currentStartEntryId checks. Instead it can be generic by only checking the states. Any thoughts?&lt;/p&gt;</comment>
                            <comment id="13430880" author="hustlmsp" created="Wed, 8 Aug 2012 06:32:20 +0100"  >&lt;p&gt;seems that the patch is based my last patch just changing currentStartEntryId check to state check, right? &lt;/p&gt;

&lt;p&gt;state check is missed in my last patch, which is necessary. as you described, there would be only one ensemble used to write at that time, checking currentStartEntryId is trivial. so I am OK with this change.&lt;/p&gt;
</comment>
                            <comment id="13430884" author="rakeshr" created="Wed, 8 Aug 2012 06:44:51 +0100"  >&lt;p&gt;@Sijie&lt;br/&gt;
Thanks for your time and review.&lt;br/&gt;
Yup, I&apos;ve rebased the patch as mentioned in my above comments. Also added one more test case with async writes.&lt;/p&gt;</comment>
                            <comment id="13434057" author="rakeshr" created="Tue, 14 Aug 2012 12:37:09 +0100"  >&lt;p&gt;@Ivan &lt;br/&gt;
It would be great if you could also review the proposed changes and push the issue in.&lt;/p&gt;</comment>
                            <comment id="13436832" author="ikelly" created="Fri, 17 Aug 2012 17:23:03 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Update ledger metadata in zk, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; in-memory metadata doesn&apos;t contains
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// the failed bookie.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!metadata.currentEnsemble.get(bookieIndex).equals(addr)) {
    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Resolve ledger metadata conflict &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; changing ensemble to: &quot;&lt;/span&gt;
             + newEnsemble + &lt;span class=&quot;code-quote&quot;&gt;&quot;, old meta data is \n&quot;&lt;/span&gt;
             + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(metadata.serialize())
             + &lt;span class=&quot;code-quote&quot;&gt;&quot;\n, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; meta data is \n&quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(newMeta.serialize()));
    writeLedgerConfig(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ChangeEnsembleCb());
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    handleBookieFailure(addr, bookieIndex);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t think the else part of this can ever be reached. Could you give an example of how it could be?&lt;/p&gt;

&lt;p&gt;Also, it would be good to move define the callback for rereadMetadata in the same way as ChangeEnsembleCb as the nesting is going a bit too deep.&lt;/p&gt;</comment>
                            <comment id="13438490" author="rakeshr" created="Tue, 21 Aug 2012 07:45:22 +0100"  >&lt;p&gt;Thanks a lot Ivan for the reviews.&lt;/p&gt;

&lt;p&gt;@Ivan&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t think the else part of this can ever be reached. Could you give an example of how it could be?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah you&apos;re correct, there is no straight away scenario. What I referred is, LedgerHandle#recover() is directly replacing &quot;metadata = newMeta;&quot;. (Will come only if recovery and write calls from same bkclient)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void recover(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; cb) {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, LedgerMetadata newMeta) {
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != BKException.Code.OK) {
         cb.operationComplete(rc, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
     } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
         metadata = newMeta;
         recover(cb);
      }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, I know its a very corner case and I just included it as defensive coding.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, it would be good to move define the callback for rereadMetadata in the same way as ChangeEnsembleCb as the nesting is going a bit too deep&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure. I&apos;ll refactor it.&lt;/p&gt;</comment>
                            <comment id="13440970" author="rakeshr" created="Fri, 24 Aug 2012 06:44:13 +0100"  >&lt;p&gt;Hi Sijie,&lt;/p&gt;

&lt;p&gt;Its great and will help us to shape our thoughts on the following case. I hope you were also thinking about handlingBookieFailure?&lt;br/&gt;
Also, could you please check my previous comment to get more on my view.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t think the else part of this can ever be reached.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!metadata.currentEnsemble.get(bookieIndex).equals(addr)) {

} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    handleBookieFailure(addr, bookieIndex);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Rakesh&lt;/p&gt;</comment>
                            <comment id="13441888" author="rakeshr" created="Sat, 25 Aug 2012 14:17:58 +0100"  >&lt;p&gt;Hi Ivan,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t think the else part of this can ever be reached. Could you give an example of how it could be?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If I understood your point, you are saying an optimistic approach of resolveConflicts. &lt;br/&gt;
As I mentioned in the above &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-337?focusedCommentId=13438490&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13438490&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;comments&lt;/a&gt;,  I could see only the close/recovery logic can concurrently do the metadata modifications. Anyway in that scenario, after the ensemble change while sendWrite() request this guy will get fenced exception. So I agree with you to remove the &quot;else block&quot; as part of this issue.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached new patch with the following changes:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;removed the else part&lt;/li&gt;
	&lt;li&gt;refactored the deep callbacks&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;Could you please look at the new patch.&lt;/p&gt;</comment>
                            <comment id="13443035" author="ikelly" created="Tue, 28 Aug 2012 09:52:13 +0100"  >&lt;p&gt;Committed r1378023. Good work Rakesh.&lt;/p&gt;</comment>
                            <comment id="13443040" author="hudson" created="Tue, 28 Aug 2012 10:13:05 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #676 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/676/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/676/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-337&quot; title=&quot;Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-337&quot;&gt;&lt;del&gt;BOOKKEEPER-337&lt;/del&gt;&lt;/a&gt;: Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures (rakeshr via ivank) (Revision 1378023)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12536389" name="BOOKKEEPER-337-testtoreproduce.patch" size="6691" author="rakeshr" created="Fri, 13 Jul 2012 15:30:18 +0100"/>
                            <attachment id="12536188" name="BOOKKEEPER-337-try.patch" size="3753" author="hustlmsp" created="Thu, 12 Jul 2012 09:23:38 +0100"/>
                            <attachment id="12536553" name="BOOKKEEPER-337-try2.patch" size="13916" author="hustlmsp" created="Sun, 15 Jul 2012 15:06:00 +0100"/>
                            <attachment id="12539578" name="BOOKKEEPER-337.1.patch" size="16077" author="rakeshr" created="Tue, 7 Aug 2012 15:49:38 +0100"/>
                            <attachment id="12542409" name="BOOKKEEPER-337.2.patch" size="20778" author="rakeshr" created="Sat, 25 Aug 2012 13:58:42 +0100"/>
                            <attachment id="12536400" name="BOOKKEEPER-337.diff" size="1993" author="ikelly" created="Fri, 13 Jul 2012 16:51:15 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Jul 2012 05:42:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>293553</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyn6lb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169255</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>