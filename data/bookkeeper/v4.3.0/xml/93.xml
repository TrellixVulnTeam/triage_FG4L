<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:27:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-93/BOOKKEEPER-93.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-93] bookkeeper doesn&apos;t work correctly on OpenLedgerNoRecovery</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-93</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;1) bookkeeper hang when openLedgerNoRecovery, since LedgerOpenOp didn&apos;t trigger callback when opening ledger no recovery.&lt;/p&gt;

&lt;p&gt;2) race condition in ReadLastConfirmOp&lt;/p&gt;

&lt;p&gt;ReadLastConfirmOp callback on readEntryComplete.&lt;br/&gt;
a) first decrement numResponsePending&lt;br/&gt;
b) then increment validResponses&lt;br/&gt;
c) check validResponses to callback with OK&lt;br/&gt;
b) check numResponsePending to callback with LedgerRecoveryException&lt;/p&gt;

&lt;p&gt;support two callbacks returns on readEntryComplete: A, B. (quorum/ensemble size : 2)&lt;/p&gt;

&lt;p&gt;a) A first decrement numResponsePending from 2 to 1.&lt;br/&gt;
b) A increment validResponses from 0 to 1.&lt;br/&gt;
c) B then decrement numResponsePending from 1 to 0.&lt;br/&gt;
d) A check numResponsePending before B check validResponse, A found the numResponsePending is 0 now. A will callback with exception. But the right action is B check validResponse and callback with OK.&lt;/p&gt;

&lt;p&gt;3) if an LegerHandle is opened by openLedgerNoRecovery, the lastAddConfirmed will be set to -1. so all read requests will be failed since readEntry id &amp;gt; lastAddConfirmed.&lt;/p&gt;

&lt;p&gt;so I suggested that if an LegerHandle is opened by openLegerNoRecovery, the ledgerHandle is under unsafeRead mode. close/write operations will be failed, read operations should not check condition entry_id &amp;gt; lastAddConfirmed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12528680">BOOKKEEPER-93</key>
            <summary>bookkeeper doesn&apos;t work correctly on OpenLedgerNoRecovery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="hustlmsp">Sijie Guo</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Oct 2011 15:44:46 +0100</created>
                <updated>Thu, 2 May 2013 03:29:45 +0100</updated>
                            <resolved>Thu, 27 Oct 2011 17:53:24 +0100</resolved>
                                    <version>4.0.0</version>
                                    <fixVersion>4.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13135159" author="ikelly" created="Tue, 25 Oct 2011 16:44:56 +0100"  >&lt;p&gt;1) Yikes, that&apos;s a big oversight. There is actually a test for it, BookieReadWriteTest#testReadFromOpenLedger, but the @Test annotation is missing from it so it never gets run. Also, the actual checking code seems to be wrong, as it tries to read from lh, not lhOpen (line 861). Could you break the fix for this problem into a single patch along with the fix for the test and ill commit that as &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-91&quot; title=&quot;Bookkeeper and hedwig clients should not use log4j directly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-91&quot;&gt;&lt;del&gt;BOOKKEEPER-91&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;2) This is unrelated to 1) so should be in a separate JIRA. Also, im unsure the race you describe can occur. ReadLastConfirmedOp#readEntryComplete is already synchronized.&lt;/p&gt;

&lt;p&gt;3) Actually this could go into &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-91&quot; title=&quot;Bookkeeper and hedwig clients should not use log4j directly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-91&quot;&gt;&lt;del&gt;BOOKKEEPER-91&lt;/del&gt;&lt;/a&gt;. However, I think a better solution may be to do a ReadLastConfirmedOp in the else part of LedgerOpenOp#processResult. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!unsafe) {
            lh.recover(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;() {
            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; result) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != BKException.Code.OK) {
                    cb.openComplete(BKException.Code.LedgerRecoveryException, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, LedgerOpenOp.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ctx);
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    cb.openComplete(BKException.Code.OK, lh, LedgerOpenOp.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ctx);
                }
            }
       } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
           lh.asyncReadLastConfirmed(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReadLastConfirmedCallback() {
               void readLastConfirmedComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastConfirmed, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx) {
                   lh.lastAddConfirmed = lh.lastAddPushed = lastConfirmed;
                   cb.complete(rc, LedgerOpenOp.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ctx);
               }
           });
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way, a non recovery ledger will be able to read entries up to the point it was opened and no further. I think this should be correct behaviour, as otherwise it could be possible for the ledger to read an entry which hasn&apos;t been confirmed to the writer. If it hasn&apos;t been confirmed to the writer and the writer closes at that point. Which means the reader can read more than the writer, which I don&apos;t think affects correctness, but is a little ugly.&lt;/p&gt;</comment>
                            <comment id="13135611" author="hustlmsp" created="Wed, 26 Oct 2011 02:40:02 +0100"  >&lt;p&gt;Ivan,&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) This is unrelated to 1) so should be in a separate JIRA. Also, im unsure the race you describe can occur. ReadLastConfirmedOp#readEntryComplete is already synchronized.&lt;/p&gt;

&lt;p&gt;You are right. readEntryComplete is synchronized, no race condition on it.&lt;/p&gt;

&lt;p&gt;the issue is that readLastConfirmedComplete will be triggered twice.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;ReadLastConfirmedOp.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// other &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; codes dont count as valid responses
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((validResponses &amp;gt;= lh.metadata.quorumSize) &amp;amp;&amp;amp;
                notComplete) {
            notComplete = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Read Complete with enough validResponses&quot;&lt;/span&gt;);
            }
            cb.readLastConfirmedComplete(BKException.Code.OK, maxAddConfirmed, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ctx);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
        }

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (numResponsesPending == 0) {
            &lt;span class=&quot;code-comment&quot;&gt;// Have got all responses back but was still not enough, just fail the operation
&lt;/span&gt;            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;While readLastConfirmed ledger: &quot;&lt;/span&gt; + ledgerId + &lt;span class=&quot;code-quote&quot;&gt;&quot; did not hear success responses from all quorums&quot;&lt;/span&gt;);
            cb.readLastConfirmedComplete(BKException.Code.LedgerRecoveryException, maxAddConfirmed, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.ctx);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last one will trigger readLastConfirmedComplete no matter there is enough valid responses or not.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2011-10-26 09:34:48,874 - DEBUG - &lt;span class=&quot;error&quot;&gt;&amp;#91;pool-174-thread-1:ReadLastConfirmedOp@90&amp;#93;&lt;/span&gt; - Read Complete with enough validResponses&lt;br/&gt;
2011-10-26 09:34:48,874 - ERROR - &lt;span class=&quot;error&quot;&gt;&amp;#91;pool-174-thread-1:ReadLastConfirmedOp@97&amp;#93;&lt;/span&gt; - While readLastConfirmed ledger: 1 did not hear success responses from&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13135632" author="hustlmsp" created="Wed, 26 Oct 2011 03:13:54 +0100"  >&lt;p&gt;Thanks for Ivan&apos;s suggestions.&lt;/p&gt;

&lt;p&gt;fixes:&lt;/p&gt;

&lt;p&gt;1) avoid two callbacks when readLastConfirmedOp&lt;/p&gt;

&lt;p&gt;2) readLastConfirmedOp to set lastAddConfirmed when opening ledger no recovery. so the entries be read will all confirmed by writter.&lt;/p&gt;

&lt;p&gt;3) add unsafeRead in LedgerHandle to avoid close/write on it.&lt;/p&gt;</comment>
                            <comment id="13135844" author="ikelly" created="Wed, 26 Oct 2011 11:08:29 +0100"  >&lt;p&gt;I see you created &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-94&quot; title=&quot;Double callbacks in readLastConfirmedOp which fails readLastConfirmed operation even received enough valid responses.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-94&quot;&gt;&lt;del&gt;BOOKKEEPER-94&lt;/del&gt;&lt;/a&gt; for the test change. That change should actually be part of this JIRA. It&apos;s part 1) (The two callback changes) which should be in the other JIRA, as it&apos;s unrelated, whereas 2) &amp;amp; 3) and the fix to testing is all the same thing.&lt;/p&gt;

&lt;p&gt;Regarding 2 &amp;amp; 3, these changes look good. However, I&apos;d change the unsafeRead flag to be called readOnly. Also, add a logging line before the addComplete in asyncAddEntry saying that the client tried to write on a read only ledger handle.&lt;/p&gt;</comment>
                            <comment id="13135846" author="ikelly" created="Wed, 26 Oct 2011 11:12:51 +0100"  >&lt;p&gt;My previous comment was incomplete. The changes should be tested also. The whole reason the bug exists is a lack of testing in the first place. The easiest thing is to simply extend the BookieReadWriteTest for his case to ensure that add fails on lhOpen, and that the ledger metadata isn&apos;t closed after lhOpen is called.&lt;/p&gt;

&lt;p&gt;Im still confused by the callback issue on readLastConfirmedOp. The only scenario where the callback can be called twice is where it recieves more responses than it has requests made. This discussion should continue on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-94&quot; title=&quot;Double callbacks in readLastConfirmedOp which fails readLastConfirmed operation even received enough valid responses.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-94&quot;&gt;&lt;del&gt;BOOKKEEPER-94&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13135950" author="hustlmsp" created="Wed, 26 Oct 2011 14:23:11 +0100"  >&lt;p&gt;attach new patch.&lt;/p&gt;

&lt;p&gt;add testing close/write on read only LedgerHandle on BookieReadWriteTest#testReadFromOpenLedger &lt;/p&gt;</comment>
                            <comment id="13137278" author="ikelly" created="Thu, 27 Oct 2011 17:53:11 +0100"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Committed as r1189867, Thanks Sijie.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12528801">BOOKKEEPER-94</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12526315">BOOKKEEPER-77</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12500688" name="bookkeeper-93.patch" size="12028" author="hustlmsp" created="Tue, 25 Oct 2011 16:14:34 +0100"/>
                            <attachment id="12500807" name="bookkeeper-93_v2.patch" size="7811" author="hustlmsp" created="Wed, 26 Oct 2011 03:13:54 +0100"/>
                            <attachment id="12500879" name="bookkeeper-93_v3.patch" size="7893" author="hustlmsp" created="Wed, 26 Oct 2011 14:23:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Oct 2011 15:44:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>214540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hynzlz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>173956</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>