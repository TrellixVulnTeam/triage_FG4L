<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:32:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-300/BOOKKEEPER-300.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-300] Create Bookie format command</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-300</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Provide a bookie format command. Then the admin would just have to run the command on each machine, which will prepare the bookie env&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Zookeeper paths (znodes):&lt;/ins&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ledger&apos;s root path&lt;/li&gt;
	&lt;li&gt;bookie&apos;s available path&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;ins&gt;Directories:&lt;/ins&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Journal directories&lt;/li&gt;
	&lt;li&gt;Ledger directories&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12595055">BOOKKEEPER-300</key>
            <summary>Create Bookie format command</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vinayrpet">Vinayakumar B</assignee>
                                    <reporter username="rakeshr">Rakesh R</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Jun 2012 07:30:29 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:43 +0000</updated>
                            <resolved>Fri, 7 Sep 2012 06:05:25 +0100</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13396547" author="rakeshr" created="Tue, 19 Jun 2012 07:33:44 +0100"  >&lt;p&gt;Format command would be similar as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bookkeeper-server/bin/bookkeeper bookie -format 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Discussion Thread as follows: &lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/zookeeper-bookkeeper-dev/201206.mbox/%3CC2496325850AA74C92AAF83AA9662D2630DE1B56@szxeml531-mbx.china.huawei.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/zookeeper-bookkeeper-dev/201206.mbox/%3CC2496325850AA74C92AAF83AA9662D2630DE1B56@szxeml531-mbx.china.huawei.com%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13413634" author="vinayrpet" created="Fri, 13 Jul 2012 11:23:13 +0100"  >&lt;p&gt;Attaching the patch for bookkeeper format&lt;/p&gt;

&lt;p&gt;Following command should be used to execute the format&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;bookkeeper-server/bin/bookkeeper bookie --format&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Following are the behaviours of the format.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Create the JournalDir and ledger dirs if not exists.&lt;/li&gt;
	&lt;li&gt;If Journal directories exist and its not empty, then it will ask for the user confirmation. On Confirmation it will format all contents of Journal directories and ledger directories, and recreate the directories.
	&lt;ul&gt;
		&lt;li&gt;Here confirmation will be asked only for the journal directory. If journal directory is empty or not exists, it will format ledger directory contents even though its not empty. Because Bookie will never have non-empty ledger directory with empty journal directory.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Now it will go ahead for formatting the zookeeper nodes. If /ledgers (zk root path) exists then it will ask for confirmation, otherwise it will just simply create /ledgers and /ledgers/available nodes. On confirmation it will delete all nodes present under /ledgers and re-create /ledgers and /ledgers/available nodes.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13413880" author="umamaheswararao" created="Fri, 13 Jul 2012 18:14:47 +0100"  >&lt;p&gt;Thanks a lot, Vinay for the patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
	&lt;li&gt;Create the JournalDir and ledger dirs if not exists.&lt;/li&gt;
	&lt;li&gt;If Journal directories exist and its not empty, then it will ask for the user confirmation. On Confirmation it will format all contents of Journal directories and ledger directories, and recreate the directories.&lt;/li&gt;
&lt;/ol&gt;


&lt;ul&gt;
	&lt;li&gt;Here confirmation will be asked only for the journal directory. If journal directory is empty or not exists, it will format ledger directory contents even though its not empty. Because Bookie will never have non-empty ledger directory with empty journal directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think format should just take care of metadata. Storage directories anyway will be cleaned if there is no metadata presents related to that data.&lt;/p&gt;

&lt;p&gt;Going to each bookie and executing format command may be a pain for the admins when we have more BookKeeper nodes in the cluster ( as it is scalable).&lt;br/&gt;
In any BookKeeper node, if admin execute format command, it should just clean metadata of BookKeeper Server by prompting for the confirmation like how you did now.&lt;/p&gt;

&lt;p&gt;What about others opinion?&lt;/p&gt;


&lt;p&gt;And other requirement for format from NameNode is:&lt;br/&gt;
 JournalManager implementation should support formatting of its respective storage. Currently NameNode is just skipping the sharedstorage format as there is no interface defined yet in JournalManager. Aaron and me Discussed some time back to provide that interface to support format. So, soon we will add that in JournalManager interface.&lt;/p&gt;

&lt;p&gt;So, when namenode calls format, it will call the JournalManager&apos;s format implementation. In the BookKeeper shared storage case, I think we should have the implementation in BookKeeperJournalManager class. It should be like, check the metadata in ZK and format it.&lt;br/&gt;
This part of implementation should go in BKJM. &lt;/p&gt;

&lt;p&gt;Whether BookKeeper client will expose API for format and BKJM will just call it? &lt;br/&gt;
(or)&lt;/p&gt;

&lt;p&gt; let BKJM handle it completely as BKJM already holding the zk instance? &lt;/p&gt;

&lt;p&gt;We can file the separate JIRA for this case based on the opinions from others.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Uma&lt;/p&gt;</comment>
                            <comment id="13414320" author="vinayrpet" created="Sat, 14 Jul 2012 09:23:11 +0100"  >&lt;p&gt;Thanks Uma for taking look at this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think format should just take care of metadata. Storage directories anyway will be cleaned if there is no metadata presents related to that data.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we clean only zookeeper nodes, then bookie itself will not start. In each and every storage directory, cookie file will be present. If that information present in storage dir and not in storage directory, then bookie will not start.&lt;/p&gt;

&lt;p&gt;One thing we can do here. We can delete the only Ledger nodes in zookeeper, leaving other nodes ( cookies, LAYOOUT ) as it is. In this case,  storage directories will be automatically deleted once the metadata for ledgers not available.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Whether BookKeeper client will expose API for format and BKJM will just call it? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Regarding this, I think API should be provided in both sides BKJM as well as BookKeeper.&lt;br/&gt;
Let BookKeeper take care of formatting the ledger details in zk. i.e. ledgers under /ledgers node.&lt;br/&gt;
BKJM can format its own nodes such as inprogress node, edit log segment nodes, etc.&lt;/p&gt;

&lt;p&gt;One question I have here.&lt;br/&gt;
&lt;b&gt;Format should be implememted as API in server side or Client side.?&lt;/b&gt;&lt;br/&gt;
If BKJM also want to call format, which needs to format only ledger details in zk, then it would be better to implement at client side. i.e. in BookKeeper class.&lt;/p&gt;
</comment>
                            <comment id="13414322" author="vinayrpet" created="Sat, 14 Jul 2012 09:31:26 +0100"  >&lt;p&gt;I forgot to mention here..&lt;br/&gt;
Intention of this Jira is to create the zk nodes /ledgers and /ledgers/available which will not be done automatically. Anyway creating the journaldir and ledger directories will be done by bookie if not exists.&lt;br/&gt;
This should be called by admin before any server starts.&lt;/p&gt;
</comment>
                            <comment id="13414475" author="umamaheswararao" created="Sat, 14 Jul 2012 19:58:16 +0100"  >&lt;p&gt;Check the similar discussion about DN format in HDFS. &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-107&quot; title=&quot;Data-nodes should be formatted when the name-node is formatted.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-107&quot;&gt;HDFS-107&lt;/a&gt;. &lt;br/&gt;
If you see, DN also can not start, if you format namenode due to incompatible namespace IDs. In that case, Admins carefully, have to clean their storage directories.&lt;br/&gt;
We have decided that just have to provide the automation script to delete the storage directories. &lt;/p&gt;

&lt;p&gt;Now, by looking at your patch, you are doing both the jobs in format. Actually metadata formation is not required to do in all the nodes. That will be just one time job if I understand your idea correctly. In one node, you will create metadata directories and from other nodes again you will recreate them and continue the same in remaining nodes? &lt;/p&gt;

&lt;p&gt;Do we need to separate this jobs cleanly? Otherwise someone need to give the metadata format confirmation for first node and should skip for remaining. This may not quit correct right?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;leaving other nodes ( cookies, LAYOOUT ) as it is&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sijie can give thoughts on this. &lt;/p&gt;

&lt;p&gt;I guess LAYOUT files may contain some version related stuff as well. So, take a case, I have formatted the cluster and installed the newer version of BKs and trying to start the cluster. Then we may get incompatible format issues because LAYOUT may have older version related stuff right? Since I have formatted cluster, I should not have any active info which is related to older. &lt;/p&gt;

&lt;p&gt;Hi All, could you also please participate in the discussion for better ideas?&lt;/p&gt;</comment>
                            <comment id="13414586" author="hustlmsp" created="Sun, 15 Jul 2012 09:09:31 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I think format should just take care of metadata. Storage directories anyway will be cleaned if there is no metadata presents related to that data.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If we clean only zookeeper nodes, then bookie itself will not start. In each and every storage directory, cookie file will be present. If that information present in storage dir and not in storage directory, then bookie will not start.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the bookies would still start because there is no cookie existed in ZooKeeper. bookies would treat it as a new environment and create its cookie node.&lt;/p&gt;

&lt;p&gt;but there is an inconsistent issue if we just clean metadata. there is a time period before all old data was cleaned by GC thread. so those data might be introduced in the system again due some corner cases.&lt;/p&gt;

&lt;p&gt;so if we want to introduce format here for BookKeeper, we need to introduce a mechanism to distinguish  bookies between current format and previous formats first. the initial idea is to generate an INSTANCE-ID (could be timestamp, uuid) for bookkeeper during formatting. all bookies join this instance of bookkeeper would generate cookie based on INSTANCE-ID and recorded them in local directories. if a bookie server join bookkeeper using different INSTANCE-ID, it should fail to start.&lt;/p&gt;

&lt;p&gt;after introducing such mechanism, we could avoid bookie server starts with old data between different bookkeeper format.&lt;/p&gt;

&lt;p&gt;so the format progress would contains two parts, one is metadata format, the other one is bookie format.&lt;/p&gt;

&lt;p&gt;metadata format: could be run in either bookie server and run only once. it takes the responsibility on cleaning metadata. after cleaning old metadata, it would generate a new INSTANCE-ID for new bookkeeper instance.&lt;/p&gt;

&lt;p&gt;bookie format: be run each bookie server. it takes the responsibility on cleaning old data.&lt;/p&gt;

&lt;p&gt;if a bookie server doesn&apos;t run &apos;bookie-format&apos; after the metadata is formatted. it should fail to start due to providing different INSTANCE-ID. so admin guys could run &apos;bookie -format&apos; to clean local bookie data.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;leaving other nodes ( cookies, LAYOOUT ) as it is&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;as Uma mentioned, &apos;format&apos; means there is no old info introduced to new environment. so cookies and LAYOUT should be also removed.&lt;/p&gt;

&lt;p&gt;before removing LAYOUT, you should not remove ledgers znode directly. LAYOUT introduced is for different ledger metadata management. in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-203&quot; title=&quot;improve ledger manager interface to remove zookeeper dependency on metadata operations.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-203&quot;&gt;&lt;del&gt;BOOKKEEPER-203&lt;/del&gt;&lt;/a&gt;, we had a zk-independent LedgerManager interface to handle metadata management for bookkeeper. so a possible way to handle metadata formatting is to provide a &apos;format&apos; interface in LedgerManager. and different LedgerManager implementation should provide a way to format their metadata.&lt;/p&gt;

&lt;p&gt;so the metadata format progress would be:&lt;/p&gt;

&lt;p&gt;1) reading LAYOUT to instantiate a LedgerManager.&lt;br/&gt;
2) call LedgerManager#format to format its metadata layout.&lt;br/&gt;
3) remove LAYOUT znode.&lt;br/&gt;
3) remove cookie znodes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Format should be implememted as API in server side or Client side.?&lt;br/&gt;
If BKJM also want to call format, which needs to format only ledger details in zk, then it would be better to implement at client side. i.e. in BookKeeper class.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;for metadata format, it might be better to put it in BookKeeperAdmin. for local data format, you could put it in Bookie.&lt;/p&gt;







</comment>
                            <comment id="13414863" author="vinayrpet" created="Mon, 16 Jul 2012 06:59:35 +0100"  >&lt;p&gt;Thanks Siji for the detailed information and suggestion. I will look into this. &lt;/p&gt;</comment>
                            <comment id="13415081" author="vinayrpet" created="Mon, 16 Jul 2012 14:07:31 +0100"  >&lt;p&gt;One small doubt here. Since we are adding one more field INSTANCEID to Cookie, do we need to change the Cookie layout version.? If yes, to what version.?&lt;br/&gt;
Using this we can consider the backward compatibility.&lt;/p&gt;</comment>
                            <comment id="13415129" author="hustlmsp" created="Mon, 16 Jul 2012 14:56:55 +0100"  >&lt;p&gt;@Vinay, &lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; Cookie&lt;/p&gt;

&lt;p&gt;It would be better to encode Cookie in protobuf for future extension. And you need to resolve original cookie format and protobuf encoded format for backward compatibility. (may be you could refer the changes on LedgerMetadata in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-303&quot; title=&quot;LedgerMetadata should serialized using protobufs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-303&quot;&gt;&lt;del&gt;BOOKKEEPER-303&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;And for my proposal, there is two changes need for bookie format. I think it would be two subtasks to handle it, which make things clearly. one is instance-id and cookie format improvement, the other one is providing format interface in LedgerManager.&lt;/p&gt;

&lt;p&gt;but before implemented it, I think it would be better to see others&apos; comments first. &lt;/p&gt;

&lt;p&gt;@Flavio, could you take a look at this jira?&lt;/p&gt;</comment>
                            <comment id="13436006" author="vinayrpet" created="Thu, 16 Aug 2012 15:47:23 +0100"  >&lt;p&gt;Attaching the patch with for initial review,&lt;br/&gt;
With,&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Cookies being serialized using protobuf,&lt;/li&gt;
	&lt;li&gt;Metadata Format using BKAdmin,&lt;/li&gt;
	&lt;li&gt;bookie format in bookie server&lt;/li&gt;
	&lt;li&gt;LedgerManager with format api&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13437896" author="hustlmsp" created="Mon, 20 Aug 2012 15:26:54 +0100"  >&lt;p&gt;@Vinay, thanks for the patch. please check my comments as below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+        &amp;amp;&amp;amp; (c.layoutVersion == 3 || (instanceId != null &amp;amp;&amp;amp; c.instanceId&lt;br/&gt;
+                .equals(instanceId))))) {&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;for layoutVersion 3, should not have instanceId. if there is instanceId, it would needs to throw InvalidCookieException.&lt;br/&gt;
And you don&apos;t check c.instanceId is null or not before calling equals. you&apos;d better change it to &apos;instanceId.equals(c.instanceId)&apos;&lt;/p&gt;

&lt;p&gt;For layoutVersion 4, should we fail it if there is no instanceId?&lt;/p&gt;

&lt;p&gt;If an invalid cookie contains a different instance id, it would provide more detail information in the InvalidCookieException.&lt;br/&gt;
so users could know how to do it when encountering it.&lt;/p&gt;

&lt;p&gt;BTW, it would be better to provide test cases in CookieTest for different layout versions and compatibility.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+    private static void loadConfFile(AbstractConfiguration conf, String confFile)&lt;br/&gt;
+            throws IllegalArgumentException {&lt;br/&gt;
+            try &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+                conf.loadConf(new File(confFile).toURI().toURL());
+            }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; catch (MalformedURLException e) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+                LOG.error(&amp;quot;Could not open configuration file}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; catch (ConfigurationException e) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+                LOG.error(&amp;quot;Malformed configuration file}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+            LOG.info(&quot;Using configuration file &quot; + confFile);&lt;br/&gt;
+        }&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;the indent is not right.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+    public boolean format() {&lt;br/&gt;
+        final AtomicInteger successResults = new AtomicInteger();&lt;br/&gt;
+        try {&lt;br/&gt;
+            Set&amp;lt;Long&amp;gt; zkLedgers = getLedgersInSingleNode(ledgerRootPath);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;the format logic doesn&apos;t work correctly for HierarchicalLedgerManager. actually you could use the asyncProcessLedgers to delete the ledgers. For HierarchicalLedgerManagers, you also need to delete hierarchical znodes.&lt;/p&gt;

&lt;p&gt;but I am doubting why not use ZKUtils.deleteRecusive?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+            boolean ledgersFormatted = bkc.ledgerManager.format();&lt;br/&gt;
+            if (!ledgersFormatted) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+                LOG.error(&amp;quot;Error in formatting ledgers&amp;quot;);
+                return false;
+            }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+            bkc.ledgerManagerFactory.format(conf, zk);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it should only have one format method for per ledger manager factory. the format method takes the responsibility of removing ledgers metadata (not only ledgers but also znode for id generation and hierarchical znodes) and its layout data. The format is not only delete old ledger metadatas, but it also needs to create necessary znodes for new system. you missed it in this patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+    public static void main(String[] args) throws IOException,&lt;br/&gt;
+            InterruptedException, KeeperException {&lt;br/&gt;
+        AbstractConfiguration conf = null;&lt;br/&gt;
+        try &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+            conf = parseArgs(args);
+        }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; catch (ParseException e) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+            LOG.error(&amp;quot;Error parsing command line arguments }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually there is a tool class BookKeeperTools in util package for bookie recovery which also uses BKAdmin. I am guessing it would be better to leverage it to support different admin commands like what BookieShell does for bookie side. BTW, for Bookie format, it would better to put it in BookieShell to put all bookie commands together.&lt;/p&gt;




</comment>
                            <comment id="13438503" author="vinayrpet" created="Tue, 21 Aug 2012 08:14:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;for layoutVersion 3, should not have instanceId. if there is instanceId, it would needs to throw InvalidCookieException.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;of-course, for layoutVersion 3 instanceId will not be present, because it will be added only in layoutVersion 4 (current patch) onwards. So no need to check for it instanceId in version 3. &lt;br/&gt;
instanceId must be present for further versions.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;And you don&apos;t check c.instanceId is null or not before calling equals. you&apos;d better change it to &apos;instanceId.equals(c.instanceId)&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I got this, will update in next patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If an invalid cookie contains a different instance id, it would provide more detail information in the InvalidCookieException.&lt;br/&gt;
so users could know how to do it when encountering it.&lt;br/&gt;
BTW, it would be better to provide test cases in CookieTest for different layout versions and compatibility.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah.. I was also thinking same. I will add this information.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the format logic doesn&apos;t work correctly for HierarchicalLedgerManager. actually you could use the asyncProcessLedgers to delete the ledgers. For HierarchicalLedgerManagers, you also need to delete hierarchical znodes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok will check this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but I am doubting why not use ZKUtils.deleteRecusive?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the first patch, I have used the same to delete all znodes under /ledgers. After that we had discussion and comes with an interface in LedgerManager.format().&lt;br/&gt;
I couldn&apos;t see any usage of providing LedgerManager.format() if we are directly deleting through &apos;ZKUtils.deleteRecusive()&apos;, since there is no separation between Flat and Hierarchial.&lt;br/&gt;
You&apos;re trying to suggest me to still have LedgerManager.format() and in the abstract format should use &apos;ZKUtils.deleteRecusive()&apos;..?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it should only have one format method for per ledger manager factory. the format method takes the responsibility of removing ledgers metadata (not only ledgers but also znode for id generation and hierarchical znodes) and its layout data.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean to say, implement complete format() in &apos;ledger manager factory&apos; itself instead of implementing under &apos;ledger manager&apos;..?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The format is not only delete old ledger metadatas, but it also needs to create necessary znodes for new system. you missed it in this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These will be automatically created when &lt;tt&gt;LedgerManagerFactory.newLedgerManagerFactory(..)&lt;/tt&gt; is called. Do you think we need to call this after format..?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Actually there is a tool class BookKeeperTools in util package for bookie recovery which also uses BKAdmin. I am guessing it would be better to leverage it to support different admin commands like what BookieShell does for bookie side.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think, we can add one more command in BookieShell as &quot;bkadmin&quot;, which can take the arguments &quot;recover&quot; or &quot;formatZk&quot; and corresponding additional arguments if required. In that case BookKeeperTools may not be required anymore.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;BTW, for Bookie format, it would better to put it in BookieShell to put all bookie commands together&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I will check this.&lt;/p&gt;</comment>
                            <comment id="13438729" author="hustlmsp" created="Tue, 21 Aug 2012 14:42:42 +0100"  >&lt;blockquote&gt;
&lt;p&gt;of-course, for layoutVersion 3 instanceId will not be present, because it will be added only in layoutVersion 4 (current patch) onwards. So no need to check for it instanceId in version 3. &lt;br/&gt;
instanceId must be present for further versions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What happened if a version 3 cookie access version 4 bookkeeper? the code is used to validate cookie, you need to cover the cases, I assumed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You&apos;re trying to suggest me to still have LedgerManager.format() and in the abstract format should use &apos;ZKUtils.deleteRecusive()&apos;..?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;you could use asyncProcessLedgers or ZKUtils.deleteRecursive. either is OK.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You mean to say, implement complete format() in &apos;ledger manager factory&apos; itself instead of implementing under &apos;ledger manager&apos;..?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These will be automatically created when LedgerManagerFactory.newLedgerManagerFactory(..) is called. Do you think we need to call this after format..?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;format means cleaning old data and creating a new one. so I think creating a new one would be needed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think, we can add one more command in BookieShell as &quot;bkadmin&quot;, which can take the arguments &quot;recover&quot; or &quot;formatZk&quot; and corresponding additional arguments if required. In that case BookKeeperTools may not be required anymore.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it is OK.&lt;/p&gt;</comment>
                            <comment id="13439272" author="rakeshr" created="Wed, 22 Aug 2012 05:53:49 +0100"  >&lt;p&gt;@Sijie&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;BTW, for Bookie format, it would better to put it in BookieShell to put all bookie commands together.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Sijie for the suggestion. I&apos;m having following doubts about the BookieShell, would be great if you give more on this.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;BookieShell javadoc is saying &quot;Bookie Shell to read/check bookie files.&quot;&lt;/li&gt;
	&lt;li&gt;Also, one more I&apos;ve observed is, presently the commands in the shell are like: readledger, readlog, readjournal etc. I feel, all these are having readonly behaviours. But the format command is a kind of write permission. Are we designed the BookieShell to keep only readonly cmds?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Is it ok to keep the &apos;format&apos; command in the shell. Any thoughts? If yes, it would be good to look at and modify/update the javadocs also while creating the format patch. Thanks&lt;/p&gt;</comment>
                            <comment id="13439405" author="vinayrpet" created="Wed, 22 Aug 2012 11:57:33 +0100"  >&lt;p&gt;Hi @Sijie,&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What happened if a version 3 cookie access version 4 bookkeeper? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If cookie is of previous version, and Running Code is of version 4, then we should support that cookie because of backward compatibility right..?&lt;br/&gt;
If we add strict version check, then backward compatibility will be broken. Am I missing something..?&lt;/p&gt;


&lt;p&gt;Others comments I will try to implement. Thanks&lt;/p&gt;</comment>
                            <comment id="13439429" author="hustlmsp" created="Wed, 22 Aug 2012 12:35:46 +0100"  >&lt;blockquote&gt;
&lt;p&gt;If cookie is of previous version, and Running Code is of version 4, then we should support that cookie because of backward compatibility right..?&lt;br/&gt;
If we add strict version check, then backward compatibility will be broken. Am I missing something..?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think it is compatibility. Compatibility means your new code could read old cookie format and do the right thing.&lt;/p&gt;

&lt;p&gt;if there is instanceid existed in ZooKeeper, which means it is format using bookie.format, so all the old data has been removed. if you using an old cookie (version 3) to access a new instance (same as you use a old instance id access a new instance id), why not fail it?&lt;/p&gt;</comment>
                            <comment id="13439432" author="hustlmsp" created="Wed, 22 Aug 2012 12:44:36 +0100"  >&lt;blockquote&gt;
&lt;p&gt;BookieShell javadoc is saying &quot;Bookie Shell to read/check bookie files.&quot;&lt;br/&gt;
Also, one more I&apos;ve observed is, presently the commands in the shell are like: readledger, readlog, readjournal etc. I feel, all these are having readonly behaviours. But the format command is a kind of write permission. Are we designed the BookieShell to keep only readonly cmds?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;BookieShell is added for BookkKeeper, which is similar as HedwigConsole added for Hedwig. It is designed to put utilities for admin guys to operate/admin the cluster. I think it is OK to put utilities for administration in it.&lt;/p&gt;

&lt;p&gt;I don&apos;t have strong feel on it. But I think putting utilities for administration together would help maintenance. &lt;/p&gt;</comment>
                            <comment id="13439436" author="vinayrpet" created="Wed, 22 Aug 2012 12:51:38 +0100"  >&lt;p&gt;You mean to say, if instanceid present in zookeeper, then we need to do strict checking of version. I agree with this.&lt;/p&gt;

&lt;p&gt;Problem may come in case of upgrade cookie version 3 to cookie version 4.&lt;br/&gt;
Say current cluster is running with cookie version 3. In this case instanceid will not be present in zookeeper.&lt;br/&gt;
Now, without doing format, if the cluster is upgraded to bookie which are having cookie version 4, in this case should allow cookie version 3. Right..?&lt;/p&gt;

&lt;p&gt;Please check whether below conditions work for above cases&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c.layoutVersion &amp;lt; 3 &amp;amp;&amp;amp; c.layoutVersion != layoutVersion) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Cookie is of too old version &quot;&lt;/span&gt; + c.layoutVersion;
            LOG.error(errMsg);
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookieException.InvalidCookieException(errMsg);
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(c.layoutVersion &amp;gt;= 3 &amp;amp;&amp;amp; c.bookieHost.equals(bookieHost)
                &amp;amp;&amp;amp; c.journalDir.equals(journalDir)
                &amp;amp;&amp;amp; c.ledgerDirs.equals(ledgerDirs)
        &lt;span class=&quot;code-comment&quot;&gt;// check instance id only &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; layoutVersion 4 onwards
&lt;/span&gt;        &amp;amp;&amp;amp; ((c.layoutVersion == 3 &amp;amp;&amp;amp; instanceId == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) || (instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; instanceId
                .equals(c.instanceId))))) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Cookie [&quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;] is not matching with [&quot;&lt;/span&gt; + c
                    + &lt;span class=&quot;code-quote&quot;&gt;&quot;]&quot;&lt;/span&gt;;
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookieException.InvalidCookieException(errMsg);
        }&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13439598" author="hustlmsp" created="Wed, 22 Aug 2012 16:15:52 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; instanceId = getInstanceId(zk);
             &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; newEnv = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
             Cookie masterCookie = Cookie.generateCookie(conf);
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != instanceId) {
+                masterCookie.setInstanceId(instanceId);
+            }
             &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                 Cookie zkCookie = Cookie.readFromZooKeeper(zk, conf);
                 masterCookie.verify(zkCookie);
...

             journalCookie.verify(masterCookie)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from the patch, first getInstanceId from zookeeper and set it into masterCookie. then verify zkCookie and journalCookie.&lt;/p&gt;

&lt;p&gt;since journalCookie/zkCookie is parsed from existed cookie data (which is version 3), so the checking condition would be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// the existed cookie (journalCookie/zkCookie) is old, but the cluster has instanceid (which is &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; and formatted).
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// so you should failed it.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c.layoutVersion == 3 &amp;amp;&amp;amp; instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookieException.InvalidCookieException(...);
}
&lt;span class=&quot;code-comment&quot;&gt;// the existed cookie (journalCookie/zkCookie) is &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; format. to compare instanceid.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c.layoutVersion == 4) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((instanceId == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; c.instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) ||
        (instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !instanceId.equals(c.instanceId))) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookieException.InvalidCookieException(...);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does it make sense?&lt;/p&gt;


</comment>
                            <comment id="13439623" author="hustlmsp" created="Wed, 22 Aug 2012 16:47:31 +0100"  >&lt;p&gt;ah, I think we don&apos;t need to check layoutVersion when comparing instanceId. we just compare them directly, just to ensure the instanceid are same.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((instanceId == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; c.instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) ||
        (instanceId != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !instanceId.equals(c.instanceId))) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookieException.InvalidCookieException(...);
    }
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13439639" author="vinayrpet" created="Wed, 22 Aug 2012 17:15:58 +0100"  >&lt;p&gt;Thanks Sijie. I got it. Just need to make sure in any case instanceId should be same whether null or has some value.&lt;/p&gt;

&lt;p&gt;I will make necessary changes and post a new patch with all mentioned changes.&lt;/p&gt;</comment>
                            <comment id="13440274" author="vinayrpet" created="Thu, 23 Aug 2012 14:20:17 +0100"  >&lt;p&gt;Attaching the updated patch with all comment fixes. Please review&lt;/p&gt;</comment>
                            <comment id="13440315" author="hustlmsp" created="Thu, 23 Aug 2012 15:26:44 +0100"  >&lt;p&gt;thanks Vinay. the patch looks good. I have several minor comments, after that I think it is ready to be in. please check as below:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; format(ServerConfiguration conf,
+            &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isInteractive, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; force) {
+        File journalDir = conf.getJournalDir();

+        File[] ledgerDirs = conf.getLedgerDirs();
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File dir : ledgerDirs) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is not a good idea to remove journalDir and ledgerDirs directly. since at most of cases, journalDir and ledgerDirs might be mount points for separated disks. It would be better to just remove files under these directories. FileSystemUpgrade is the example you could refer.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// In &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; of format we will create BK instance later
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!conf.getBoolean(&lt;span class=&quot;code-quote&quot;&gt;&quot;bookkeeper.format&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;)) {
+            &lt;span class=&quot;code-comment&quot;&gt;// Create the BookKeeper client instance
&lt;/span&gt;+            bkc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookKeeper(conf, zk);
+            &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lfr = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LedgerFragmentReplicator(bkc);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t think you need such a variable, since you would construct a bookkeeper instance again. so why not keep it clean, so we don&apos;t have two much branch conditions and additional setting.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+            zk.create(conf.getZkLedgersRootPath(), &quot;&quot;.getBytes(),
+                    Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        }
+
+        &lt;span class=&quot;code-comment&quot;&gt;// Create available path &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not exists
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+            zk.create(conf.getZkAvailableBookiesPath(), &quot;&quot;.getBytes(),
+                    Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (KeeperException.NodeExistsException e) {
+            LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;available node already exists.&quot;&lt;/span&gt;);
+        }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seems that these two lines are doing same thing. why not make it easy. if there is an old instance, we clean it first, then fall into same path to create it.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// Recreate the BookKeeper Client to recreate the Ledger Layout
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// information
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != bkc) {
+            bkc.close();
+        }
+        bkc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BookKeeper(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf, zk);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the ledger layout could be created when calling LedgerManagerFactory#format. so all ledger manager related meta are handled by ledger manage factory itself, not scatter the code over files.&lt;br/&gt;
BookKeeperAdmin takes the responsibility of removing cookies and instanceid.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        HierarchicalLedgerManager ledgerManager = (HierarchicalLedgerManager) newLedgerManager();
+        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ledgersRootPath = conf.getZkLedgersRootPath();
+        List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; children = zk.getChildren(ledgersRootPath, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; child : children) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ledgerManager.isSpecialZnode(child)) {
+                &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
+            }
+            ZKUtil.deleteRecursive(zk, ledgersRootPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt; + child);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need to delete idgen znode also.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        BKAdminCmd() {
+            &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(CMD_BKADMIN);
+            bkadminOpts.addOption(&lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;recover&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;,
+                    &lt;span class=&quot;code-quote&quot;&gt;&quot;Recover the bookie failure. &amp;lt;arg&amp;gt; refers to &amp;lt;bookieSrc&amp;gt; and [bookieDest], where [bookieDest] is optional&quot;&lt;/span&gt;);
+            bkadminOpts.addOption(&lt;span class=&quot;code-quote&quot;&gt;&quot;fzk&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;formatZk&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;,
+                    &lt;span class=&quot;code-quote&quot;&gt;&quot;Format the bookkeeper metadata from zookeeper&quot;&lt;/span&gt;);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;since recover and &apos;formatZk&apos; would be never used together. so why not just let them be two separated shell commands, one is &apos;formatZk&apos;, the other one is &apos;recover&apos;, which makes the shell clear?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+ * Bookie Shell to read/check bookie files and execute admin commands.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How about &apos;Bookie Shell is to provide utilities for users to admin a bookkeeper cluster.&apos;?&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; tests&lt;/p&gt;

&lt;p&gt;It would be better to test an old version cookie to access new formatted cluster. You could add it in TestBackwardCompat, which uses an old version bookie.&lt;/p&gt;</comment>
                            <comment id="13441796" author="vinayrpet" created="Sat, 25 Aug 2012 07:47:27 +0100"  >&lt;p&gt;Attaching the latest patch with above comments fixed.&lt;/p&gt;</comment>
                            <comment id="13441797" author="vinayrpet" created="Sat, 25 Aug 2012 07:50:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;It would be better to test an old version cookie to access new formatted cluster. You could add it in TestBackwardCompat, which uses an old version bookie.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I have added the test in TestBackwardCompat.&lt;br/&gt;
But, any way if the bookie started with old version cookie and old version code itself, then we cannot avoid it accessing the cluster. Right..?&lt;/p&gt;</comment>
                            <comment id="13442444" author="hustlmsp" created="Mon, 27 Aug 2012 15:45:29 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
But, any way &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the bookie started with old version cookie and old version code itself, then we cannot avoid it accessing the cluster. Right..?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;yes. we could do nothing with this case. admin guys need to take care of it. It might be better to add notes writing the documentation for format command. but it would be in another jira to do it.&lt;/p&gt;

&lt;p&gt;the patch looks good to me. +1.&lt;/p&gt;</comment>
                            <comment id="13442956" author="vinayrpet" created="Tue, 28 Aug 2012 05:54:47 +0100"  >&lt;p&gt;@Sijie, thanks for the review.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It might be better to add notes writing the documentation for format command. but it would be in another jira to do it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, we will add in doc.&lt;/p&gt;</comment>
                            <comment id="13447289" author="hustlmsp" created="Mon, 3 Sep 2012 15:13:33 +0100"  >&lt;p&gt;ah, seems the patch has been a bit older. it conflicts with the latest branch, due to &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-376&quot; title=&quot;LedgerManagers should consider &amp;#39;underreplication&amp;#39; node as a special Znode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-376&quot;&gt;&lt;del&gt;BOOKKEEPER-376&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;@Vinay, could you help rebase it to latest trunk? After that, I think it is ready to be in. sorry to make you inconvenient.&lt;/p&gt;</comment>
                            <comment id="13447478" author="vinayrpet" created="Tue, 4 Sep 2012 05:23:04 +0100"  >&lt;p&gt;Yes Sijie,&lt;br/&gt;
I will post the re-based patch in sometime.&lt;/p&gt;</comment>
                            <comment id="13447499" author="vinayrpet" created="Tue, 4 Sep 2012 06:57:22 +0100"  >&lt;p&gt;Attaching the re-based patch.&lt;/p&gt;</comment>
                            <comment id="13447580" author="umamaheswararao" created="Tue, 4 Sep 2012 10:25:12 +0100"  >&lt;p&gt;Thank a lot, Vinay for the patch.&lt;br/&gt;
Please give me some time, I am also reviewing this patch, if I can find some points.&lt;/p&gt;</comment>
                            <comment id="13447592" author="umamaheswararao" created="Tue, 4 Sep 2012 11:02:40 +0100"  >&lt;p&gt;I have had gone through the patch.&lt;br/&gt;
I have few minor comments to address.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;       metaformat   [-nonInteractive] [-force]&quot;&lt;/span&gt;);
+        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;       bookieformat [-nonInteractive] [-force]&quot;&lt;/span&gt;);
+        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;       recover      &amp;lt;bookieSrc&amp;gt; [bookieDest]&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we have to document this options right? Do you mind raising a separate JIRA and link here?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 File journalDir = conf.getJournalDir();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (journalDir.exists() &amp;amp;&amp;amp; journalDir.isDirectory()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 File[] ledgerDirs = conf.getLedgerDirs();
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (File dir : ledgerDirs) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think, it may be good to have prechecks to ensure LedgerDirs &amp;amp; JournalDir are configured, otherwise it may endup with NPEs right?&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; bkRecovery(BookKeeperAdmin bkAdmin, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args)
                &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think here throws clause should not be a generic exception. Lets throw only specific ones.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 ZooKeeper zkc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ZooKeeper(conf.getZkServers(), conf.getZkTimeout(),
                &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        BookKeeper bkc = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we already has Zk creation code in admin constructor, which handle the case of connection establishment timeouts.&lt;br/&gt;
Otherwise we may get connectionloss exceptions right. Let&apos;s reuse the similar stuff.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            factoryClass = conf.getLedgerManagerFactoryClass();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed to get ledger manager factory class from configuration : &quot;&lt;/span&gt;, e);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t see a reason why you handled generic Exception here?&lt;/p&gt;

&lt;p&gt;in createNewLMFactory&lt;br/&gt;
getLedgerManagerType is deprecated instead, please use getLedgerManagerFactoryClass&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            lmFactory = ReflectionUtils.newInstance(factoryClass);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(
                    &lt;span class=&quot;code-quote&quot;&gt;&quot;Fail to instantiate ledger manager factory class : &quot;&lt;/span&gt;
                            + factoryClass, t);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I feel unnecessary handling.&lt;/p&gt;

&lt;p&gt;To be clean, remove dead store variables from the test&lt;/p&gt;

&lt;p&gt;BTW, good work Vinay and great efforts from Sijie to get into this shape&lt;/p&gt;</comment>
                            <comment id="13447607" author="vinayrpet" created="Tue, 4 Sep 2012 11:48:23 +0100"  >&lt;p&gt;Hi Uma,&lt;br/&gt;
Thanks for the Review and Suggestions for the optimized and good looking code.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-388&quot; title=&quot;Document bookie format command&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-388&quot;&gt;&lt;del&gt;BOOKKEEPER-388&lt;/del&gt;&lt;/a&gt; has been raised to document the usage of bookie format command.&lt;/p&gt;</comment>
                            <comment id="13447620" author="hustlmsp" created="Tue, 4 Sep 2012 12:18:53 +0100"  >&lt;blockquote&gt;
&lt;p&gt;in createNewLMFactory&lt;br/&gt;
getLedgerManagerType is deprecated instead, please use getLedgerManagerFactoryClass&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Uma, please note the getLedgerManagerType is used for backward compatibility. so it would be better to keep it there.  The caller of createNewLMFactory has called getLedgerManagerFactoryClass before.&lt;/p&gt;</comment>
                            <comment id="13447623" author="umamaheswararao" created="Tue, 4 Sep 2012 12:23:16 +0100"  >&lt;p&gt;Yes, Sijie. Just seen the comment above to that line in code. Its for BWC. Vinay also discussed the same with me Just few mins back. He is taking care of this in his next patch. Thanks for noticing.&lt;/p&gt;</comment>
                            <comment id="13447624" author="vinayrpet" created="Tue, 4 Sep 2012 12:24:31 +0100"  >&lt;p&gt;Hi Uma, here are some of the clarifications on above comments.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I think, it may be good to have prechecks to ensure LedgerDirs &amp;amp; JournalDir are configured, otherwise it may endup with NPEs right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If journalDir and ledgerDirs are not configured, then Configuration will return default values /tmp/bk-txn and /tmp/bk-data. So Null check not required.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;in createNewLMFactory&lt;br/&gt;
getLedgerManagerType is deprecated instead, please use getLedgerManagerFactoryClass&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;getLedgerManagerFactoryClass(..) also used before calling createNewLMFactory(..). But for backward compatibility,  getLedgerManagerType() is used. This code was present earlier. I just extracted to common method. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Other comments I will fix and post a new patch soon....&lt;/p&gt;</comment>
                            <comment id="13447648" author="vinayrpet" created="Tue, 4 Sep 2012 13:13:17 +0100"  >&lt;p&gt;Attaching the patch with comment fixes.&lt;/p&gt;</comment>
                            <comment id="13448028" author="umamaheswararao" created="Tue, 4 Sep 2012 21:37:57 +0100"  >&lt;p&gt;Thanks a lot, Vinay for incorporating the comments.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
zk = ZkUtils.getNewZookeeperClient(conf.getZkServers(),
+                conf.getZkTimeout(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Watcher() {
+                    @Override
+                    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void process(WatchedEvent event) {
+                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
+                            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Process&lt;/span&gt;: &quot;&lt;/span&gt; + event.getType() + &lt;span class=&quot;code-quote&quot;&gt;&quot; &quot;&lt;/span&gt;
+                                    + event.getPath());
+                        }
+                    }
+                });
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You added this watcher just for logging purpose? can&apos;t we make use of util watcher alone?&lt;/p&gt;</comment>
                            <comment id="13448530" author="vinayrpet" created="Wed, 5 Sep 2012 08:04:03 +0100"  >&lt;p&gt;Attaching the patch addressing Uma&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13448553" author="umamaheswararao" created="Wed, 5 Sep 2012 08:47:15 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != watcher) {
+                    watcher.process(event);
+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;still you are taking watcher from outside. is it necessary?&lt;/p&gt;</comment>
                            <comment id="13448568" author="vinayrpet" created="Wed, 5 Sep 2012 09:28:11 +0100"  >&lt;p&gt;This is required, in future, if someone uses same utility, and wants to handle its own events. For Ex: Bookie may want to handle expired event.&lt;/p&gt;</comment>
                            <comment id="13448615" author="hustlmsp" created="Wed, 5 Sep 2012 11:28:30 +0100"  >&lt;p&gt;I don&apos;t like the style to pass a watcher in #getNewZookeeperClient. Actually ZooKeeper has provided #register method to overwrite with a new watcher. I would prefer to keep an utility function  simpler. How about let ZkUtil#getNewZookeeperClient just takes the responsibility of returning a connected zookeeper instance? use a different name like &apos;createConnectedZooKeeperClient&apos;?&lt;/p&gt;</comment>
                            <comment id="13448636" author="vinayrpet" created="Wed, 5 Sep 2012 12:05:04 +0100"  >&lt;p&gt;Attaching the patch addressing above comments&lt;/p&gt;</comment>
                            <comment id="13448740" author="umamaheswararao" created="Wed, 5 Sep 2012 14:55:01 +0100"  >&lt;p&gt;@Vinay,&lt;br/&gt;
some minor stuff:&lt;br/&gt;
 looks like you forgot to change to new method in ZookeeperUtil.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ZkUtils.getNewZookeeperClient
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think we can remove that method completely in ZookeeperUtil right? you can make use of it from ZKUtils dierectly?&lt;/p&gt;

&lt;p&gt;Other than that Patch looks great. Good work Vinay.&lt;br/&gt;
I think once you change this, it is almost ready to go.&lt;/p&gt;

&lt;p&gt;+1 on addressing the above comments.&lt;/p&gt;</comment>
                            <comment id="13449155" author="vinayrpet" created="Wed, 5 Sep 2012 22:25:24 +0100"  >&lt;p&gt;Oops!!! I didn&apos;t check it, trusting the eclipse.!! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Thanks Uma for finding it out.&lt;/p&gt;

&lt;p&gt;Anyway.. Here is the corrected patch.&lt;/p&gt;</comment>
                            <comment id="13449515" author="vinayrpet" created="Thu, 6 Sep 2012 09:21:15 +0100"  >&lt;p&gt;Attaching one more patch. Removes the unnecessary method in ZookeeperUtil. Directly using createConnectedZkClient(..) instead.&lt;/p&gt;</comment>
                            <comment id="13449531" author="umamaheswararao" created="Thu, 6 Sep 2012 09:51:25 +0100"  >&lt;p&gt;+1 for the patch, thanks Vinay for incorporating all the comments.&lt;/p&gt;

&lt;p&gt;@Sijie, could you please take a look and push this in, if you like?&lt;/p&gt;</comment>
                            <comment id="13450343" author="hustlmsp" created="Fri, 7 Sep 2012 06:05:25 +0100"  >&lt;p&gt;committed as r1381870. good work, thanks Vinay. thanks Uma for reviewing.&lt;/p&gt;</comment>
                            <comment id="13450373" author="hudson" created="Fri, 7 Sep 2012 06:41:23 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #695 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/695/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/695/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-300&quot; title=&quot;Create Bookie format command&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-300&quot;&gt;&lt;del&gt;BOOKKEEPER-300&lt;/del&gt;&lt;/a&gt;: Create Bookie format command (Vinay via sijie) (Revision 1381870)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
sijie : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/bin/bookkeeper&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/AbstractZkLedgerManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/FlatLedgerManagerFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/HierarchicalLedgerManagerFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/LedgerLayout.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/LedgerManagerFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/DataFormats.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/IOUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/proto/DataFormats.proto&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestReplicationWorker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ZooKeeperUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13452915" author="vinayrpet" created="Tue, 11 Sep 2012 12:05:40 +0100"  >&lt;p&gt;Thanks, Sijie for the review and commit, also Uma for the review.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12544013" name="BOOKKEEPER-300.patch" size="82903" author="vinayrpet" created="Thu, 6 Sep 2012 09:21:15 +0100"/>
                            <attachment id="12543916" name="BOOKKEEPER-300.patch" size="79415" author="vinayrpet" created="Wed, 5 Sep 2012 22:25:24 +0100"/>
                            <attachment id="12543838" name="BOOKKEEPER-300.patch" size="79411" author="vinayrpet" created="Wed, 5 Sep 2012 12:05:04 +0100"/>
                            <attachment id="12543819" name="BOOKKEEPER-300.patch" size="79600" author="vinayrpet" created="Wed, 5 Sep 2012 08:04:03 +0100"/>
                            <attachment id="12543659" name="BOOKKEEPER-300.patch" size="79506" author="vinayrpet" created="Tue, 4 Sep 2012 13:13:17 +0100"/>
                            <attachment id="12543622" name="BOOKKEEPER-300.patch" size="74085" author="vinayrpet" created="Tue, 4 Sep 2012 06:57:22 +0100"/>
                            <attachment id="12542398" name="BOOKKEEPER-300.patch" size="74751" author="vinayrpet" created="Sat, 25 Aug 2012 07:47:27 +0100"/>
                            <attachment id="12542116" name="BOOKKEEPER-300.patch" size="65354" author="vinayrpet" created="Thu, 23 Aug 2012 14:20:17 +0100"/>
                            <attachment id="12541224" name="BOOKKEEPER-300.patch" size="57904" author="vinayrpet" created="Thu, 16 Aug 2012 15:47:23 +0100"/>
                            <attachment id="12536363" name="BOOKKEEPER-300.patch" size="9738" author="vinayrpet" created="Fri, 13 Jul 2012 11:23:12 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Jul 2012 10:23:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>293540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyn69z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169204</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>