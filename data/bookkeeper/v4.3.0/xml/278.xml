<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:26:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-278/BOOKKEEPER-278.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-278] Ability to disable auto recovery temporarily</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-278</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Administrators will need to do rolling upgrades of bookies. If auto recovery is enabled during a rolling upgrade, there will be a lot of thrashing of ledgers as they recovery gets kicked off. Therefore we need a way to temporarily disable it.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12558622">BOOKKEEPER-278</key>
            <summary>Ability to disable auto recovery temporarily</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12553925">BOOKKEEPER-237</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rakeshr">Rakesh R</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 May 2012 16:31:05 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:56 +0000</updated>
                            <resolved>Thu, 4 Oct 2012 11:42:52 +0100</resolved>
                                    <version>4.0.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-auto-recovery</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13395852" author="rakeshr" created="Mon, 18 Jun 2012 13:18:47 +0100"  >&lt;p&gt;I&apos;m thinking to provide new configuration item &apos;enableAutoRecovery=true&apos; in the bk_server.conf file. &lt;br/&gt;
By default this feature will be disabled.&lt;/p&gt;

&lt;p&gt;Also this will be added in the ServerConfiguration.java as follows:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * Is Auto recovery enabled
     * 
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; is statistics enabled
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isAutoRecoveryEnabled() {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getBoolean(ENABLE_AUTORECOVERY, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    }

    /**
     * Turn on/off Auto recovery
     * 
     * @param enabled
     *            Whether auto recovery enabled or not.
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; server configuration
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ServerConfiguration setAutoRecoveryEnabled(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; enabled) {
        setProperty(ENABLE_AUTORECOVERY, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.toString(enabled));
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13395878" author="ikelly" created="Mon, 18 Jun 2012 14:25:36 +0100"  >&lt;p&gt;It also needs to be possible to disable it temporarily during runtime. For example, if you have 5 bookies, and want to upgrade them without taking down the whole system, you need to upgrade one at a time, so that there will always be enough bookies up for clients to form an ensemble. In this case, you don&apos;t want autorereplication to occur when you take the bookie down to upgrade it.&lt;/p&gt;</comment>
                            <comment id="13400133" author="rakeshr" created="Sun, 24 Jun 2012 12:34:09 +0100"  >&lt;p&gt;@Ivan&lt;br/&gt;
Yeah, its a good scenario.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking to provide an admin command which will pass the info(bookie:IP) to the /auditor znode through zookeeper. So that the present auditor can ignore this and dont consider as a failed bookie. &lt;br/&gt;
When the bookie starts back it will do cleaning his bookie:IP from /auditor node.&lt;/p&gt;</comment>
                            <comment id="13400378" author="ikelly" created="Mon, 25 Jun 2012 10:41:19 +0100"  >&lt;p&gt;I think it would be better to globally disable it for the duration of a rolling upgrade. The administrator sets a flag (by running a command etc), which creates a /ledgers/rereplication/disable znode. Before running any rereplication, the recovery worker checks if this znode exists. If it does it waits until it disappears to do any work.&lt;/p&gt;</comment>
                            <comment id="13400389" author="umamaheswararao" created="Mon, 25 Jun 2012 11:00:58 +0100"  >&lt;p&gt;What about the currently running Replication tasks? Admin should wait for some time to complete all currently initiated replications.&lt;/p&gt;</comment>
                            <comment id="13400390" author="ikelly" created="Mon, 25 Jun 2012 11:06:21 +0100"  >&lt;p&gt;The disable mechanism is to avoid false rereplication processes from happening when a bookie is taken down for upgrade. Valid rereplication tasks still need to run, which is fine. We can let them continue. They may fail due to the bookie being rereplicated being taken down for upgrade, but it&apos;s ok because the admin should run a health check on the cluster after upgrading all bookies anyhow.&lt;/p&gt;</comment>
                            <comment id="13400404" author="rakeshr" created="Mon, 25 Jun 2012 11:52:39 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think it would be better to globally disable it for the duration of a rolling upgrade&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok, I got it. Its simple approach, disable globally. Hope we will not have any usecase of disabling rereplication of a single bookie?&lt;/p&gt;</comment>
                            <comment id="13447605" author="rakeshr" created="Tue, 4 Sep 2012 11:44:19 +0100"  >&lt;p&gt;Thanks a lot Ivan, Uma for the suggestions.&lt;/p&gt;

&lt;p&gt;I&apos;ve prepared initial patch to discuss the api design. Script changes are pending and has to be done by exposing &apos;disable&apos; command. &lt;br/&gt;
I&apos;m thinking &apos;disable&apos; command can be written in the admin class&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-319&quot; title=&quot;Manage auditing and replication processes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-319&quot;&gt;&lt;del&gt;BOOKKEEPER-319&lt;/del&gt;&lt;/a&gt; which is to manage the whole replica process.&lt;/p&gt;

&lt;p&gt;Could you please review the proposed changes.&lt;/p&gt;</comment>
                            <comment id="13450732" author="ikelly" created="Fri, 7 Sep 2012 16:52:57 +0100"  >&lt;p&gt;This patch won&apos;t actually disable the rereplication, it&apos;ll just delay it. Using this the admin would disbale the replication workers, but the auditor would continue to see bookie&apos;s dropping off, and marking all the ledgers as underreplicated. Then once reenabled, the replication workered would go about rereplicating everything. They probably wouldn&apos;t actually rereplicate much, because the check at the start wouldn&apos;t show much many missing segments, but still, it&apos;s not a side effect we want. It would be better to disable at the auditor level. &lt;/p&gt;

&lt;p&gt;On a side note, checking the ledgers after a rolling upgrade is a good idea, but I get the impression it wasn&apos;t intentional here.&lt;/p&gt;</comment>
                            <comment id="13451787" author="rakeshr" created="Mon, 10 Sep 2012 07:46:42 +0100"  >&lt;p&gt;Hi Ivan, Thanks for the reviews.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be better to disable at the auditor level.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I just confused by looking your comments. Its doing the disabling at Auditor level as well as RW level also. Could you please give more details.&lt;/p&gt;

&lt;p&gt;The proposed patch is a kind of delaying/waiting the replication processes(Auditor and RW) by using a CountDownLatch. The logic what I&apos;ve followed is:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Admin is calling disable call, then creats the &apos;disable&apos; znode in /underreplication root node.&lt;/li&gt;
	&lt;li&gt;When Auditor recieved any failure notification, it will get lost bookie/ledgers and during &quot;markLedgerUnderreplicated&quot; seeing &quot;disable&quot; znode then add a znode watcher and enters to WAITING state.&lt;/li&gt;
	&lt;li&gt;Also RW, if he tries to &apos;getLedgerToRereplicate&apos; seeing &quot;disable&quot; znode then add a znode watcher and enters to WAITING state.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;CountDownLatch makes blocking wait and will internally suspending both the Auditor, RW processes. On disabling both Auditor/RW will continue with the previous populated data.&lt;/p&gt;


&lt;p&gt;Enters to waiting state:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != zkc.exists(basePath + &apos;/&apos; + DISABLE_NODE, w)) {
  LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Automatic ledger re-replication is disabled &quot;&lt;/span&gt;
       + &lt;span class=&quot;code-quote&quot;&gt;&quot;by Administrator!. So waiting until its enabled.&quot;&lt;/span&gt;)
  changedLatch.await();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Comes out from the infinite waiting and only after &quot;disable&quot; node deletion:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e.getType() == Watcher.Event.EventType.NodeDeleted) {
      changedLatch.countDown();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13454727" author="rakeshr" created="Thu, 13 Sep 2012 09:21:58 +0100"  >&lt;p&gt;Hi Ivan, Could you please go through my above comments and would like to know your opinion on this.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Rakesh&lt;/p&gt;</comment>
                            <comment id="13458532" author="ikelly" created="Wed, 19 Sep 2012 10:50:57 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; sorry for taking so long to get back to you on this one.&lt;/p&gt;


&lt;p&gt;Consider the following.&lt;br/&gt;
There&apos;s three bookies, A B C, with ledgers on all three, 1 2 3 4 5.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;The disable Znode is set.&lt;/li&gt;
	&lt;li&gt;A is taken down for upgrade.&lt;/li&gt;
	&lt;li&gt;The auditor sees that bookie A is down.&lt;/li&gt;
	&lt;li&gt;The auditor builds a list of the ledgers on bookie A, which are 1, 2, 3, 4 &amp;amp; 5&lt;/li&gt;
	&lt;li&gt;The auditor starts marking these ledgers as underreplicated, enters into WAITING.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now the upgrade of all bookies continues as expected. Once finished.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;the disable ZNode is unset&lt;/li&gt;
	&lt;li&gt;auditor exits the waiting state. marks 1, 2, 3, 4 &amp;amp; 5 as underreplicated&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now this isn&apos;t a huge problem, as the replication worker will see that there are in fact no fragments unavailable, but it toes induce an extra check implicitly. &lt;/p&gt;

&lt;p&gt;It would be better for the auditor to check is auto recovery is enabled after seeing a bookie drop, and only build the index, mark the ledgers, if it is enabled.&lt;/p&gt;</comment>
                            <comment id="13458537" author="umamaheswararao" created="Wed, 19 Sep 2012 11:05:45 +0100"  >&lt;p&gt;Hi Ivan,&lt;/p&gt;

&lt;p&gt;From above Rakesh comments, I think it is doing what you are expecting right?&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
	&lt;li&gt;When Auditor recieved any failure notification, it will get lost bookie/ledgers and during &quot;markLedgerUnderreplicated&quot; seeing &quot;disable&quot; znode then add a znode watcher and enters to WAITING state.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;from the above order,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.The disable Znode is set.&lt;br/&gt;
2.A is taken down for upgrade.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;first it added the disable Znode, so, markLedgerUnderreplicated call from Auditor will check for disable Znode existence as per Rakesh comments.&lt;br/&gt;
So, it seems to me that, you both are in the same lines here right?&lt;br/&gt;
I have not looked at patch yet, So, you pointed something wrong in the patch which are leading for this comments?&lt;br/&gt;
@Rakesh, Ivan, Please correct me, if I understood wrongly about your comments.&lt;/p&gt;</comment>
                            <comment id="13458564" author="ikelly" created="Wed, 19 Sep 2012 12:02:24 +0100"  >&lt;p&gt;Not quite. What is happening in the patch, and in the way Rakesh described, is that the markLedgerUnderreplicated is blocking, but there will be a number call calls to it queued up once it is unblocked.&lt;/p&gt;</comment>
                            <comment id="13459490" author="umamaheswararao" created="Thu, 20 Sep 2012 10:59:47 +0100"  >&lt;p&gt;Yes, Ivan. I got your point now.&lt;/p&gt;

&lt;p&gt;Auditor should not go till markLedgerUnderreplicated itself once it disabled. Otherwise it will publish many ledgers even though they started correctly now. This is because of the calls waiting at markLedgerUnderreplicated.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It would be better for the auditor to check is auto recovery is enabled after seeing a bookie drop, and only build the index, mark the ledgers, if it is enabled.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;if it disabled it will just ignore or wait?&lt;br/&gt;
I think there might be small race here if we ignore silently BK failure notifications when it is in disabled state.&lt;br/&gt;
ex:&lt;br/&gt;
Admin added disable Znode.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;restarted some Bookies&lt;/li&gt;
	&lt;li&gt;Before admin enable that Autorecovery, some restarted/fresh BKs failed. Now they are real failures.&lt;br/&gt;
then admin enabled it.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If we ignore the BK failure notifications when it was in disabled state, it may miss this valid notifications, which may need to process once re-replication enabled right?&lt;/p&gt;

&lt;p&gt;Do you think we have to rebuild complete index once it enabled? or simply we can queue the calls and process them, once it enabled. Need to check this case.&lt;/p&gt;</comment>
                            <comment id="13459582" author="rakeshr" created="Thu, 20 Sep 2012 14:09:08 +0100"  >&lt;p&gt;Thanks Ivan and Uma for your time and responses. Could you please go through the following and would like to know the opinion.&lt;/p&gt;

&lt;p&gt;@Ivan&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;is that the markLedgerUnderreplicated is blocking&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yup, its a blocking call and latch enters into infinite waiting state if it sees a &apos;disable&apos; znode.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but there will be a number call calls to it queued up once it is unblocked.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hope you are pointing me to: the multiple bookie failure notifictions which are queuing into &apos;bookieNotifications&apos; queue.&lt;/p&gt;

&lt;p&gt;As we know Auditor is recieving the bookie failure notifications only through the getChildren() watcher. When Auditor enters into the waiting state, it will be in a blocking call at markLedgerUnderreplicated() and consequently run() method also will not be finished unless recieved &apos;enable&apos; notification. Since Auditor has only registered one getChildren() zk watcher before enters to waiting state, at max he will recieve only one bookie failure notification and will not see further failures(because watcher is already fired and not doing the reregistration of it). After enabling, anyway he is getting available bookies and will recalculate lost bookies...and continue the cycle. Am I missing anything?&lt;/p&gt;

&lt;p&gt;Its good scenario, I will add one more test case: &quot;behaviour of multiple bookie failures in disable mode&quot;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be better for the auditor to check is auto recovery is enabled after seeing a bookie drop, and only build the index, mark the ledgers, if it is enabled.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree to place the disable checks just before processing bookie failure. In that case, once it started generating index, will finish the publishing/cycle of ledgers. Then, only on the next bookie failure notification he will enter into the waiting state. Does this sound good to you?&lt;/p&gt;</comment>
                            <comment id="13460440" author="rakeshr" created="Fri, 21 Sep 2012 13:08:23 +0100"  >&lt;p&gt;Hi Ivan, &lt;/p&gt;

&lt;p&gt;I&apos;ve refactored the patch. Now the auditor is checking the enable/disable znode after seeing a bookie drop, and only build the index, mark the ledgers, if it is enabled.&lt;/p&gt;

&lt;p&gt;Could you please review the latest patch.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Rakesh&lt;/p&gt;</comment>
                            <comment id="13460557" author="ikelly" created="Fri, 21 Sep 2012 16:28:23 +0100"  >&lt;p&gt;New patch looks good. isEnabledLedgerReplication should be split into two calls though. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isLedgerReplicationEnabled();
void notifyLedgerReplicationEnabled(GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt; cb);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13461682" author="rakeshr" created="Mon, 24 Sep 2012 09:46:50 +0100"  >&lt;p&gt;Thanks Ivan for the review. I&apos;ve splitted the logic accordingly, could you please look at the latest patch.&lt;/p&gt;</comment>
                            <comment id="13469282" author="ikelly" created="Thu, 4 Oct 2012 11:42:52 +0100"  >&lt;p&gt;New patch is good. +1&lt;/p&gt;

&lt;p&gt;Committed as r1393983. Thanks Rakesh&lt;/p&gt;</comment>
                            <comment id="13469330" author="hudson" created="Thu, 4 Oct 2012 13:39:51 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #737 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/737/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/737/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-278&quot; title=&quot;Ability to disable auto recovery temporarily&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-278&quot;&gt;&lt;del&gt;BOOKKEEPER-278&lt;/del&gt;&lt;/a&gt;: Ability to disable auto recovery temporarily (rakeshr via ivank) (Revision 1393983)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/LedgerUnderreplicationManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/ZkLedgerUnderreplicationManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationEnableCb.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12546032" name="BOOKKEEPER-278.1.patch" size="23725" author="rakeshr" created="Fri, 21 Sep 2012 13:04:06 +0100"/>
                            <attachment id="12546270" name="BOOKKEEPER-278.2.patch" size="24847" author="rakeshr" created="Mon, 24 Sep 2012 09:42:58 +0100"/>
                            <attachment id="12543649" name="BOOKKEEPER-278.patch" size="18947" author="rakeshr" created="Tue, 4 Sep 2012 11:33:46 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 18 Jun 2012 12:18:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239990</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxuptb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3001</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>