<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:26:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-101/BOOKKEEPER-101.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-101] Add Fencing to Bookkeeper</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-101</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests. &lt;/p&gt;

&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error. &lt;/p&gt;

&lt;p&gt;We fence a ledger whenever it is opened by another client using BookKeeper#openLedger. BookKeeper#openLedgerNoRecovery will not fence.&lt;br/&gt;
The opening client marks the ledger as fenced in zookeeper, and then sends a readEntry message to a all of bookies with the DO_FENCING flag set. Once at least 1 bookie in each possible quorum of bookies have responded, we can proceed with opening the ledger. Any subsequent attempt to write to the ledger will fail as it will not be able to write to a quorum without one of the bookie in the quorum responding with a ledger fenced error. The client will also be unable to change the quorum without seeing that the ledger has been marked as fenced in zookeeper.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529052">BOOKKEEPER-101</key>
            <summary>Add Fencing to Bookkeeper</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Oct 2011 15:08:05 +0100</created>
                <updated>Wed, 7 Dec 2011 15:56:13 +0000</updated>
                            <resolved>Wed, 16 Nov 2011 16:06:31 +0000</resolved>
                                                    <fixVersion>4.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13138219" author="dhruba" created="Fri, 28 Oct 2011 12:00:19 +0100"  >&lt;p&gt;+1, it will be great to have an api for this one. is the NN failover the primary target for this requirement?&lt;/p&gt;</comment>
                            <comment id="13138311" author="ikelly" created="Fri, 28 Oct 2011 14:06:05 +0100"  >&lt;p&gt;Yes, mostly. There wont be an explicit API for it though. What will happen is, if you open a ledger it will block all future writes to it. If you &lt;em&gt;don&apos;t&lt;/em&gt; want this to happen, you use the LedgerHandle#openLedgerNoRecovery api.&lt;/p&gt;
</comment>
                            <comment id="13138565" author="ikelly" created="Fri, 28 Oct 2011 18:24:20 +0100"  >&lt;p&gt;First drop of this code. Its working, but I need to clean up some of the flags on the server side and add more testing.&lt;/p&gt;</comment>
                            <comment id="13138567" author="jiraposter@reviews.apache.org" created="Fri, 28 Oct 2011 18:25:32 +0100"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;

&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java affffb6 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java eea81b9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestFencing.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13144173" author="ikelly" created="Fri, 4 Nov 2011 17:11:55 +0000"  >&lt;p&gt;This patch implements fencing on the bookie server and bookkeeper client. &lt;/p&gt;</comment>
                            <comment id="13144201" author="jiraposter@reviews.apache.org" created="Fri, 4 Nov 2011 17:42:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-04 17:40:53.862350)&lt;/p&gt;


&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;

&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13145287" author="jiraposter@reviews.apache.org" created="Mon, 7 Nov 2011 08:45:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3073&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3073&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6861&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6861&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since in bookie server, LedgerFencedException is -101. It would be better to use same number.&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6862&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6862&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    now we have 3 flag in enum set. if we want to add another flag in future, it would be 0x11. then (0x11 &amp;amp; BookieProtocol.FLAG_DO_FENCING) would also be greater than 0.&lt;/p&gt;

&lt;p&gt;    so I suggest that we defined FLAG in constant values instead of a EnumSet. then explicitly check values, e.g. flags &amp;amp; BookieProtocol.FLAG_DO_FENCING == BookieProtocol.FLAG_DO_FENCING. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sijie&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13145310" author="jiraposter@reviews.apache.org" created="Mon, 7 Nov 2011 09:53:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3074&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3074&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6863&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6863&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good point, i&apos;ll change it&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6864&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6864&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The next flag will be 0x4, then 0x8, then 0x10 and so on. It would be clearer with java 7, which has binary literals. &lt;/p&gt;

&lt;p&gt;    So, this code is safe. &lt;/p&gt;

&lt;p&gt;    The server side flags are actually defined as constants (in BookieProtocol.java). It&apos;s only on the client side that a EnumSet is used. &lt;/p&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146348" author="jiraposter@reviews.apache.org" created="Tue, 8 Nov 2011 15:09:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3103&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3103&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Great job, Ivan! I just have one question and one comment. The comment is about documentation. Shouldn&apos;t we add some documentation for this feature?&lt;/p&gt;

&lt;p&gt;I also ran the tests, and they pass fine for me.&lt;/p&gt;


&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6911&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6911&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What&apos;s the goal of setting &quot;in recovery&quot; in zookeeper? Is it to prevent the writer from closing the ledger? I also wonder if we can miss complete writes in the closed ledger if we writer to zookeeper before fencing bookies off.  &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fpj&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146351" author="jiraposter@reviews.apache.org" created="Tue, 8 Nov 2011 15:13:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 15:08:05, fpj wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Great job, Ivan! I just have one question and one comment. The comment is about documentation. Shouldn&apos;t we add some documentation for this feature?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I also ran the tests, and they pass fine for me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We should add some doc on the website for sure. I&apos;d prefer to get this into the codebase first though, and create another JIRA for documenting it, as otherwise this could rot.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 15:08:05, fpj wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java, line 655&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56357#file56357line655&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56357#file56357line655&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What&apos;s the goal of setting &quot;in recovery&quot; in zookeeper? Is it to prevent the writer from closing the ledger? I also wonder if we can miss complete writes in the closed ledger if we writer to zookeeper before fencing bookies off.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We have to mark the ledger as &quot;in recovery&quot; so that the writing client can&apos;t change the ensemble under our feet. &lt;/p&gt;

&lt;p&gt;We wont miss complete writes, because the recovery process will still run copy any entry&apos;s greater than lastAddConfirmed to a quorum of ledgers.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3103&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3103&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146455" author="jiraposter@reviews.apache.org" created="Tue, 8 Nov 2011 18:23:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3113&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3113&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6922&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6922&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we pl get some javadoc here that specifies the precise semantics of the two new flags. Looking at the code actually makes me understand the semantics, but it will be better if we can create a javadoc here, especially since this is a public api, isn&apos;t it?&lt;/p&gt;




&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6924&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6924&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I have a major question here: suppose client A is executing a Bookie.addEntry(), it first checked that handle is not  fencedout and is about to go ahead to write the entry into the log. It is about to execute handle.addEntry().&lt;/p&gt;

&lt;p&gt;    Now another client B issued a Bookie.addEntry(enableFencing=true). This client sets the fecing flag in the handle and then finishes doing the handle.addEntry() for its own entry. It now returns to the client and client B thinks that it has successfully  fenced out other clients.&lt;/p&gt;

&lt;p&gt;    Now the first thread that was processing the request for client A wakes up and finishes the handle.addEntry() call. Can this happen? If so, then we have a problem.&lt;/p&gt;





&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6925&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    is there a use-case why we need the enableFencing call for both addEntry() and readEntry()? Isn&apos;t it enough to have this flag only for readEntry() call?&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6926&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6926&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is it easy to print which client (client identifier, ip address, etc) has fenced off? This helps debugging.&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6923&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6923&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe we should use the volatile keyword here?&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6927&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Some java doc here would be really realyl helpful&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6928&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6928&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    some javadocs on the meaning of &quot;options&quot; would be nice.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Dhruba&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146460" author="jiraposter@reviews.apache.org" created="Tue, 8 Nov 2011 18:39:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 561&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line561&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line561&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we pl get some javadoc here that specifies the precise semantics of the two new flags. Looking at the code actually makes me understand the semantics, but it will be better if we can create a javadoc here, especially since this is a public api, isn&apos;t it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The client api is in org.apache.bookkeeper.client. This is serverside, so not really public. Some javadoc here would be useful for developers though.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 570&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line570&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line570&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I have a major question here: suppose client A is executing a Bookie.addEntry(), it first checked that handle is not  fencedout and is about to go ahead to write the entry into the log. It is about to execute handle.addEntry().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Now another client B issued a Bookie.addEntry(enableFencing=true). This client sets the fecing flag in the handle and then finishes doing the handle.addEntry() for its own entry. It now returns to the client and client B thinks that it has successfully  fenced out other clients.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Now the first thread that was processing the request for client A wakes up and finishes the handle.addEntry() call. Can this happen? If so, then we have a problem.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah, thanks for reminding me of this. It isn&apos;t a problem now, as this part of the bookie is single threaded, but its best to address this now, than having to scrabble to fix it if/when we move to multithreaded bookies.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java, line 268&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56354#file56354line268&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56354#file56354line268&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Some java doc here would be really realyl helpful&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java, line 74&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56364#file56364line74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56364#file56364line74&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     some javadocs on the meaning of &quot;options&quot; would be nice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java, line 46&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56352#file56352line46&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56352#file56352line46&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     maybe we should use the volatile keyword here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add. As I said above, this part is single threaded, so it shouldn&apos;t make a difference, but no harm in future proofing.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java, line 69&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56351#file56351line69&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56351#file56351line69&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is it easy to print which client (client identifier, ip address, etc) has fenced off? This helps debugging.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The client identifier of who fenced it? It would require modifications to the LedgerDescriptor. Perhaps we could log a message when the ledger itself gets fenced, and the person debugging could match it up.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 18:22:42, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 590&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line590&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     is there a use-case why we need the enableFencing call for both addEntry() and readEntry()? Isn&apos;t it enough to have this flag only for readEntry() call?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There shouldn&apos;t be. I think I added it to addEntry because I was thinking I could get away with just one flag for fencing and recovery add, which I couldn&apos;t. I don&apos;t think there&apos;s any case were addEntry could actually fence, because by the time we get to it, readEntry() should have have hit the bookie. I need to think about this a little more.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3113&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3113&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146463" author="dhruba" created="Tue, 8 Nov 2011 18:41:51 +0000"  >&lt;p&gt;Thanks for your reply Ivan.&lt;/p&gt;</comment>
                            <comment id="13146640" author="jiraposter@reviews.apache.org" created="Tue, 8 Nov 2011 23:15:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3120&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment6936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment6936&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ivan, just to confirm, the readEntry you say should have hit the bookie first is the one that reads the last confirmed?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fpj&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13146882" author="jiraposter@reviews.apache.org" created="Wed, 9 Nov 2011 09:27:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-08 23:15:23, fpj wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 590&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/2/?file=56350#file56350line590&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Ivan, just to confirm, the readEntry you say should have hit the bookie first is the one that reads the last confirmed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, its the readEntry from LedgerRecoveryOp#initiate&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3120&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-04 17:40:53, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-04 17:40:53)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java 07639aa &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java ebb17d2 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13147133" author="fpj" created="Wed, 9 Nov 2011 16:18:23 +0000"  >&lt;p&gt;Canceling patch until comments are sorted out.&lt;/p&gt;</comment>
                            <comment id="13147211" author="ikelly" created="Wed, 9 Nov 2011 18:34:28 +0000"  >&lt;p&gt;I cleaned up all the options and flags and boolean parameter stuff in this patch. Boolean parameters on methods are ugly. It should be easy to understand what the methods are doing. I added javadoc to some also.&lt;/p&gt;

&lt;p&gt;Now, the fencing flag is only sent with the initial readEntry from RecoveryOp. Recovery (ledger recovery) op now uses a package private asyncRecoveryAddEntry to add entries to the ledger. &lt;/p&gt;

&lt;p&gt;Bookie recovery uses BookieClient directly so it doesn&apos;t need to use this. &lt;/p&gt;
</comment>
                            <comment id="13147213" author="jiraposter@reviews.apache.org" created="Wed, 9 Nov 2011 18:35:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-09 18:35:12.600808)&lt;/p&gt;


&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;

&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java e0743bb &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13147611" author="ikelly" created="Thu, 10 Nov 2011 11:14:00 +0000"  >&lt;p&gt;Added javadoc for create and open ledger. Also removed the readOnly flag from ledger handle and created ReadOnlyLedgerHandle, which extends LedgerHandle and disables all destructive operations. &lt;/p&gt;</comment>
                            <comment id="13147612" author="jiraposter@reviews.apache.org" created="Thu, 10 Nov 2011 11:14:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-10 11:14:47.245758)&lt;/p&gt;


&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;

&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java PRE-CREATION &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java e0743bb &lt;br/&gt;
  bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;br/&gt;
  bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;br/&gt;
  hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ivan&lt;/p&gt;
</comment>
                            <comment id="13150275" author="dhruba" created="Tue, 15 Nov 2011 07:18:12 +0000"  >&lt;p&gt;The patch looks good, I will post a few minot comments in review board.&lt;/p&gt;

&lt;p&gt;Two related questions:&lt;/p&gt;

&lt;p&gt;1. There is an api openLendger() that will trigger recovery if needed and open the ledger for readin. There is another api openLedgerNoRecovery() which will not trigger any recovery. Does it make sense to swap the semantics of these two calls? Intuitively, it makes more sense that a openLedger() call is kinda a non-destructive &amp;amp; idempotent call and will not trigger any state change on the servers. But a intelligent client (e.g. namenode) can invoke openLendgerWithRecovery() call to fence off ios from the original writer and make the replicas in sync.&lt;/p&gt;

&lt;p&gt;2. Suppose there were three namenodes in the group. The active one is writing to a ledger. Suppose the primary namenode goes into a GC pause. Both the two standbys invoke openLedgerWithRecovery() on the same ledger. is this usecase supported? will both the clients now start to execute the code to recover the ledger? The reason I ask this question is because the server does not record which client has fenced off Io to the ledger.&lt;/p&gt;</comment>
                            <comment id="13150276" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 07:19:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3245&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3245&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment7274&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment7274&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Just a minor nit: maybe rename addEntryToLedger to addEntryInternal() just to distinguish public methods from private methods. No big deal anyways!&lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment7275&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment7275&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is called when a client is trying to do recovery. In this case, should this call first assert that the fenced flag is already set in the handle? something like:&lt;/p&gt;

&lt;p&gt;    if (!handle.isFeenced()) &lt;/p&gt;
{
      throw Exception()
    }



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment7276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment7276&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I like this simple api to fence. Maybe the javadoc can specify that even if the handle is already fenced, invoking this api is ok and keeps the fencing flag still set. &lt;/p&gt;



&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/#comment7273&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#comment7273&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A handle, once fenced, can never be set to an &apos;unfenced&apos; state, am I correct?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Dhruba&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-10 11:14:47, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-10 11:14:47)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java e0743bb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150621" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 17:24:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 07:18:20, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 583&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line583&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line583&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Just a minor nit: maybe rename addEntryToLedger to addEntryInternal() just to distinguish public methods from private methods. No big deal anyways!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 07:18:20, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 602&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line602&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line602&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is called when a client is trying to do recovery. In this case, should this call first assert that the fenced flag is already set in the handle? something like:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     if (!handle.isFeenced()) {
bq.  &amp;gt;       throw Exception()
bq.  &amp;gt;     }&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;we don&apos;t always fence the ledger before recovery. In the case of bookie recovery, we want to replicate all active ledgers to ensure full replication. Some may be open, some may be. In this case we use a recovery add, to ensure we can add. All adds will be of entries read from the same ledger, on another bookie.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 07:18:20, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 639&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line639&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I like this simple api to fence. Maybe the javadoc can specify that even if the handle is already fenced, invoking this api is ok and keeps the fencing flag still set.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 07:18:20, Dhruba Borthakur wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java, line 642&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line642&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff/4/?file=57330#file57330line642&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A handle, once fenced, can never be set to an &apos;unfenced&apos; state, am I correct?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, fencing is permanent.  &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ivan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2594/#review3245&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/#review3245&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-10 11:14:47, Ivan Kelly wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-10 11:14:47)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for bookkeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;BookKeeper is designed for use as a Write ahead log. In systems with a primary/backup architecture, the primary will write state updates to the WAL. If the primary dies the backup comes online, reads the WAL to get the latest state and starts serving requests. However, if the primary was only partitioned from the network, or stuck in a long GC, a split brain occurs. Both primary and backup can service client requests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Fencing(&lt;a href=&quot;http://en.wikipedia.org/wiki/Fencing_%28computing%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Fencing_%28computing%29&lt;/a&gt;) ensures that this cannot happen. With fencing, the backup can close the WAL of the primary, and cause any subsequent attempt by the primary to write to the WAL to give an error.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-101&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java d651894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java 292617e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java 024cac3 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java d7c8f67 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java a1fbab7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java b3eb5b9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java 6f72e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java 8c2a54f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java 328c7ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java a68856c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java 7465c52 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java eddd760 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java 385b16c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java c2d4cee &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java d70ae27 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java 873dafe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java f1b3ad9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java e0743bb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java 2cd4de8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java f6cd8c9 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java 6bac569 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java 97dc2ab &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java ac54d9a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java 85822bf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java 18319d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2594/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2594/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ivan&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150629" author="ikelly" created="Tue, 15 Nov 2011 17:52:23 +0000"  >&lt;p&gt;Addressed Dhruba&apos;s comments&lt;/p&gt;</comment>
                            <comment id="13150647" author="ikelly" created="Tue, 15 Nov 2011 18:09:32 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1. There is an api openLendger() that will trigger recovery if needed and open the ledger for readin. There is another api openLedgerNoRecovery() which will not trigger any recovery. Does it make sense to swap the semantics of these two calls? Intuitively, it makes more sense that a openLedger() call is kinda a non-destructive &amp;amp; idempotent call and will not trigger any state change on the servers. But a intelligent client (e.g. namenode) can invoke openLendgerWithRecovery() call to fence off ios from the original writer and make the replicas in sync.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Naming the non-recovery case #openLedger will invite people to use the non-recovery case normally, which is bad. openLedgerNoRecovery is unsafe, as it is possible that two reading clients will read a different sequence of entries (one being a prefix of the other), as the ledger isn&apos;t closed. This is why we put it out of the way. This was discussed a bit on &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-11&quot; title=&quot;Read from open ledger&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-11&quot;&gt;&lt;del&gt;BOOKKEEPER-11&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
2. Suppose there were three namenodes in the group. The active one is writing to a ledger. Suppose the primary namenode goes into a GC pause. Both the two standbys invoke openLedgerWithRecovery() on the same ledger. is this usecase supported? will both the clients now start to execute the code to recover the ledger? The reason I ask this question is because the server does not record which client has fenced off Io to the ledger. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Both will attempt to fence off the ledger. One will fail because once it has figured out the last entry, it will try to close the ledger, and see that the other has got there before it. The #openLedger call will fail on one and succeed on the other. &lt;/p&gt;

&lt;p&gt;In terms of performance, recovering the ledger is not very heavy. We get the lastAddConfirmed and read forward until we get to the end. The difference between lastAddConfirmed and the end will be less than ensemble size. So the number of entries read and replicated will be about 4 or 5. &lt;/p&gt;

&lt;p&gt;In the case where both try to recover and one finishes before the other starts, the second will see the ledger and closed and open it without error. In this case, the namenodes will compete for write access to the BK journal manager. &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-234&quot; title=&quot;Integration with BookKeeper logging system&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-234&quot;&gt;&lt;del&gt;HDFS-234&lt;/del&gt;&lt;/a&gt; solves this with a distributed lock and a znode called inprogress, which records the current ledger.&lt;/p&gt;</comment>
                            <comment id="13150745" author="dhruba" created="Tue, 15 Nov 2011 20:27:27 +0000"  >&lt;p&gt;Sounds good to me, +1 for the patch.&lt;/p&gt;</comment>
                            <comment id="13151287" author="ikelly" created="Wed, 16 Nov 2011 16:06:31 +0000"  >&lt;p&gt;Committed as r1202758&lt;/p&gt;</comment>
                            <comment id="13151315" author="hudson" created="Wed, 16 Nov 2011 16:47:23 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #219 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/219/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/219/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt; : Add Fencing to Bookkeeper (ivank)&lt;/p&gt;

&lt;p&gt;ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13151406" author="hudson" created="Wed, 16 Nov 2011 18:35:25 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #220 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/220/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/220/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-101&quot; title=&quot;Add Fencing to Bookkeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-101&quot;&gt;&lt;del&gt;BOOKKEEPER-101&lt;/del&gt;&lt;/a&gt; : Add Fencing to Bookkeeper (ivank)&lt;/p&gt;

&lt;p&gt;ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerCreateOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerOpenOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerRecoveryOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadLastConfirmedOp.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/hedwig-server/src/main/java/org/apache/hedwig/server/benchmark/BookieBenchmark.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12503775" name="BOOKKEEPER-101.diff" size="94300" author="ikelly" created="Tue, 15 Nov 2011 17:52:23 +0000"/>
                            <attachment id="12503191" name="BOOKKEEPER-101.diff" size="94167" author="ikelly" created="Thu, 10 Nov 2011 11:14:00 +0000"/>
                            <attachment id="12503111" name="BOOKKEEPER-101.diff" size="87026" author="ikelly" created="Wed, 9 Nov 2011 18:34:28 +0000"/>
                            <attachment id="12502486" name="BOOKKEEPER-101.diff" size="87606" author="ikelly" created="Fri, 4 Nov 2011 17:11:54 +0000"/>
                            <attachment id="12501326" name="BOOKKEEPER-101.diff" size="61855" author="ikelly" created="Fri, 28 Oct 2011 18:24:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Oct 2011 11:00:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>214912</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hynzp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>173970</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>