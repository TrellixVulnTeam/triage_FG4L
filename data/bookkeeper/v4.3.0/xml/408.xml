<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:28:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-408/BOOKKEEPER-408.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-408] BookieReadWriteTest will enter the endless loop and will not leave out</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-408</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;When I run the tests of BookKeeper, I found that the test running forever and cannot be finished. The log has the exception that is &quot;junit.framework.AssertionFailedError: Return code is not OK: -6&quot;. &lt;/p&gt;

&lt;p&gt;I thought this issuse might be come from the synchronization mechanism used by the BookieReadWriteTest.&lt;/p&gt;

&lt;p&gt;for example in BookieReadWriteTest.TestReadWriteAsyncSingleClient()&lt;br/&gt;
1. when called the function lh.asyncAddEntry(entry.array(), this ,sync), the call back function is addComplete(int, LedgerHandle, long, Object)&lt;br/&gt;
2. we can see that in addComplete(..) the function will be fail when rc != BKException.Code.OK, and the x.counter++ will not be called never.&lt;br/&gt;
3. we assume that the function addComplete(..) is fail. so, in TestReadWriteAsyncSingleClient(), the while loop enter endless loop because sync.counter &amp;lt; numEntriesToWrite is right forever.&lt;/p&gt;
</description>
                <environment>&lt;p&gt;SUSE System&lt;br/&gt;
ZooKeeper server&lt;br/&gt;
three BookKeepers&lt;/p&gt;</environment>
        <key id="12607880">BOOKKEEPER-408</key>
            <summary>BookieReadWriteTest will enter the endless loop and will not leave out</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="liuyang@huawei">liuyang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Sep 2012 10:28:39 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:27 +0000</updated>
                            <resolved>Thu, 13 Dec 2012 17:34:35 +0000</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13456929" author="hustlmsp" created="Mon, 17 Sep 2012 11:32:49 +0100"  >&lt;p&gt;-6 means NotEnoughBookiesException. Did you have any other log statements about the bookie failure, which causes not enough bookies.&lt;/p&gt;

&lt;p&gt;BTW, I am assuming &apos;fail()&apos; of a unit test would stop the process, not sure why it doesn&apos;t quit.&lt;/p&gt;</comment>
                            <comment id="13456944" author="ikelly" created="Mon, 17 Sep 2012 12:06:27 +0100"  >&lt;p&gt;fail() only works if it&apos;s called in the junit thread. In this case it&apos;ll be run by the bookkeeper callback thread. These calls to fail are all broken, and need to be rejigged. It would be interesting to see why there aren&apos;t enough bookies though.&lt;/p&gt;</comment>
                            <comment id="13456976" author="hustlmsp" created="Mon, 17 Sep 2012 13:50:06 +0100"  >&lt;p&gt;ah, got it. thanks Ivan for explanation.&lt;/p&gt;</comment>
                            <comment id="13457536" author="liuyang@huawei" created="Tue, 18 Sep 2012 02:56:53 +0100"  >&lt;p&gt;when we cannot get enough bookies, the operation about add entry will throw exception, then &apos;fail()&apos; will be called, the callback function will be done. So, the &apos;counter&apos; cannot be increment, that cause the while loop enter endless loop.&lt;/p&gt;

&lt;p&gt;we must guarantee the test case will be end although we cannot get enough bookies.&lt;/p&gt;</comment>
                            <comment id="13457542" author="umamaheswararao" created="Tue, 18 Sep 2012 03:07:50 +0100"  >&lt;p&gt;The question here is, why there are bookie failures inside?&lt;br/&gt;
Any logs regarding to that failures?&lt;/p&gt;

&lt;p&gt;BTW, if you are running it throw eclipse, you just add the below property in eclipse src/test/resource/log4j.properties file. So, that logs will come on eclipse console.&lt;/p&gt;

&lt;p&gt;log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE&lt;/p&gt;</comment>
                            <comment id="13457544" author="umamaheswararao" created="Tue, 18 Sep 2012 03:10:56 +0100"  >&lt;p&gt;Instead of using some syncCounter and increment on each entry write callback, if we use ContDownLatch and set the wait timeout, then test will fail if we are not getting the response in time as well right?&lt;/p&gt;</comment>
                            <comment id="13457551" author="umamaheswararao" created="Tue, 18 Sep 2012 03:20:33 +0100"  >&lt;p&gt;or, change it to timed waits and add assertion as expected after that to ensure, loop exited only after counter reaches expected entries, otherwise assertion will fail.&lt;br/&gt;
But we have to figure out why there are Bookie failure in your tests.&lt;/p&gt;</comment>
                            <comment id="13457580" author="i0exception" created="Tue, 18 Sep 2012 04:40:41 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=umamahesh&quot; class=&quot;user-hover&quot; rel=&quot;umamahesh&quot;&gt;Uma Mahesh&lt;/a&gt; How about using junit test timeouts @Test(timeout=X)? &lt;/p&gt;</comment>
                            <comment id="13457590" author="liuyang@huawei" created="Tue, 18 Sep 2012 05:17:15 +0100"  >&lt;p&gt;The warn log show that may be ReadTimeOutException, I am looking the reason why could not connect bookkeeper server frequently? &lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the partial log information about the error&lt;br/&gt;
*/&lt;br/&gt;
WARN  - &lt;span class=&quot;error&quot;&gt;&amp;#91;Hashed wheel timer #4:PerChannelBookieClient@488&amp;#93;&lt;/span&gt; - Couldn&apos;t connect to bookkeeper server&lt;br/&gt;
     org.jboss.netty.handler.timeout.ReadTimeoutException&lt;br/&gt;
	at org.jboss.netty.handler.timeout.ReadTimeoutHandler.&amp;lt;clinit&amp;gt;(ReadTimeoutHandler.java:84)&lt;br/&gt;
	at org.apache.bookkeeper.proto.PerChannelBookieClient.getPipeline(PerChannelBookieClient.java:450)&lt;br/&gt;
	at org.jboss.netty.bootstrap.ClientBootstrap.connect(ClientBootstrap.java:212)&lt;br/&gt;
	at org.jboss.netty.bootstrap.ClientBootstrap.connect(ClientBootstrap.java:188)&lt;br/&gt;
	at org.apache.bookkeeper.proto.PerChannelBookieClient.connect(PerChannelBookieClient.java:135)&lt;br/&gt;
	at org.apache.bookkeeper.proto.PerChannelBookieClient.connectIfNeededAndDoOp(PerChannelBookieClient.java:203)&lt;br/&gt;
	at org.apache.bookkeeper.proto.BookieClient.addEntry(BookieClient.java:108)&lt;br/&gt;
	at org.apache.bookkeeper.client.PendingAddOp.sendWriteRequest(PendingAddOp.java:76)&lt;br/&gt;
	at org.apache.bookkeeper.client.PendingAddOp.initiate(PendingAddOp.java:117)&lt;br/&gt;
	at org.apache.bookkeeper.client.LedgerHandle$2.safeRun(LedgerHandle.java:539)&lt;br/&gt;
	at org.apache.bookkeeper.util.SafeRunnable.run(SafeRunnable.java:31)&lt;br/&gt;
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)&lt;br/&gt;
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&lt;br/&gt;
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:662)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13457591" author="umamaheswararao" created="Tue, 18 Sep 2012 05:17:49 +0100"  >&lt;p&gt;Can do it. That will be one good practice, to ensure no tests will block due to flaky behaviours in tests. I used to follow in my tests, ex: see zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestReplicationWorker.java&lt;br/&gt;
At the same time, we should not depend 100% depend on that, untill unless we don&apos;t have option for proper assertion. Otherwise we may loose the track where we exactly test hanged. If we have an option to track that, we can assert and throw out with the problem.&lt;/p&gt;</comment>
                            <comment id="13457611" author="umamaheswararao" created="Tue, 18 Sep 2012 06:30:57 +0100"  >&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;testOpenException                        =11.381s
testStreamingClients                     =9.793s
testReadWriteAsyncSingleClient           =7.660s
testReadWriteRangeAsyncSingleClient      =6.944s
testReadWriteAsyncSingleClientThrottle   =94.505s
testSyncReadAsyncWriteStringsSingleClient=10.330s
testReadWriteSyncSingleClient            =57.973s
testReadWriteZero                        =75.294s
testMultiLedger                          =128.302s
testReadWriteAsyncLength                 =6.218s
testShutdown                             =899.927s
testReadFromOpenLedger                   =32.631s
testReadFromOpenLedgerOpenOnce           =13.526s
testReadFromOpenLedgerZeroAndOne         =2.478s
testLastConfirmedAdd                     =67.694s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the info ragarding time taken by each test in my local env.&lt;/p&gt;</comment>
                            <comment id="13529854" author="ikelly" created="Wed, 12 Dec 2012 11:25:45 +0000"  >&lt;p&gt;Removed fail() calls from callbacks as they do nothing there.&lt;/p&gt;</comment>
                            <comment id="13530728" author="hustlmsp" created="Thu, 13 Dec 2012 06:32:20 +0000"  >&lt;p&gt;the new patch looks good for me. +1&lt;/p&gt;</comment>
                            <comment id="13530729" author="hustlmsp" created="Thu, 13 Dec 2012 06:32:42 +0000"  >&lt;p&gt;resubmit the patch to trigger pre-commit job.&lt;/p&gt;</comment>
                            <comment id="13531221" author="ikelly" created="Thu, 13 Dec 2012 17:32:32 +0000"  >&lt;p&gt;Jenkins has been down for a couple of days, I&apos;ve run manually with bin/test-patch --jira=&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-408&quot; title=&quot;BookieReadWriteTest will enter the endless loop and will not leave out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-408&quot;&gt;&lt;del&gt;BOOKKEEPER-408&lt;/del&gt;&lt;/a&gt; --reset-scm and it comes out clean. Committing&lt;/p&gt;</comment>
                            <comment id="13531223" author="ikelly" created="Thu, 13 Dec 2012 17:34:35 +0000"  >&lt;p&gt;Committed as r1421401. Thanks for reviewing Sijie.&lt;/p&gt;</comment>
                            <comment id="13532101" author="hudson" created="Fri, 14 Dec 2012 06:51:27 +0000"  >&lt;p&gt;Integrated in bookkeeper-trunk #860 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/860/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/860/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-408&quot; title=&quot;BookieReadWriteTest will enter the endless loop and will not leave out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-408&quot;&gt;&lt;del&gt;BOOKKEEPER-408&lt;/del&gt;&lt;/a&gt;: BookieReadWriteTest will enter the endless loop and will not leave out (ivank) (Revision 1421401)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieReadWriteTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13533869" author="yians" created="Mon, 17 Dec 2012 11:37:38 +0000"  >&lt;p&gt;Good revision. I find the BookieWriteLedgerTest also has the problem. Maybe another jira is needed to clean all the problems.&lt;/p&gt;

&lt;p&gt;The source code:&lt;br/&gt;
    @Override&lt;br/&gt;
    public void addComplete(int rc, LedgerHandle lh, long entryId, Object ctx) {&lt;br/&gt;
        if (rc != BKException.Code.OK)&lt;br/&gt;
            fail(&quot;Return code is not OK: &quot; + rc);&lt;/p&gt;</comment>
                            <comment id="13534851" author="yians" created="Tue, 18 Dec 2012 12:30:15 +0000"  >&lt;p&gt;BookieFailureTest also has same problem.&lt;/p&gt;

&lt;p&gt;like this:&lt;br/&gt;
    public void addComplete(int rc, LedgerHandle lh, long entryId, Object ctx) {&lt;br/&gt;
        if (rc != 0)&lt;br/&gt;
            fail(&quot;Failed to write entry: &quot; + entryId);&lt;br/&gt;
        SyncObj x = (SyncObj) ctx;&lt;br/&gt;
        synchronized &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;
{
            x.counter++;
            x.notify();
        }
&lt;p&gt;    }&lt;/p&gt;</comment>
                            <comment id="13534854" author="umamaheswararao" created="Tue, 18 Dec 2012 12:35:45 +0000"  >&lt;p&gt;Do you mind rising a separate JIRA as this is already closed? Thanks for noticing them.&lt;/p&gt;</comment>
                            <comment id="13539156" author="yians" created="Mon, 24 Dec 2012 02:24:15 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=umamaheswararao&quot; class=&quot;user-hover&quot; rel=&quot;umamaheswararao&quot;&gt;Uma Maheswara Rao G&lt;/a&gt;, I don&apos;t know whether it is necessary to do this, cause there are many jiras like this, as &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-523&quot; title=&quot;Every test should have a timeout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-523&quot;&gt;&lt;del&gt;BOOKKEEPER-523&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Anyway, using the &apos;Junit Assert&apos; in callback is not a good way. It must be revised through all the test project. The jira is created as &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-525&quot; title=&quot;Should not using Junit Assert in CallBack method in BK test.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-525&quot;&gt;BOOKKEEPER-525&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12625161">BOOKKEEPER-525</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12560543" name="0001-BOOKKEEPER-408-BookieReadWriteTest-will-enter-the-en.patch" size="13653" author="ikelly" created="Wed, 12 Dec 2012 11:25:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Sep 2012 10:32:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249288</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy415j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57343</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>