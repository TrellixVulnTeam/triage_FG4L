<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:27:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-610/BOOKKEEPER-610.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-610] Make SyncThread use an executor</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-610</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Currently we have a bunch of boolean variables to control the lifecycle of the SyncThread. We&apos;re effectively replicating what an Executor does, so we should just use an executor.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646991">BOOKKEEPER-610</key>
            <summary>Make SyncThread use an executor</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="ikelly">Ivan Kelly</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 May 2013 10:45:22 +0100</created>
                <updated>Sat, 20 Jul 2013 19:06:54 +0100</updated>
                            <resolved>Sat, 20 Jul 2013 19:06:54 +0100</resolved>
                                                    <fixVersion>4.3.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13653674" author="ikelly" created="Fri, 10 May 2013 10:49:34 +0100"  >&lt;p&gt;Added a bunch of tests for the syncthread also.&lt;/p&gt;</comment>
                            <comment id="13653678" author="hadoopqa" created="Fri, 10 May 2013 11:21:45 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12582597/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Fri May 10 09:51:00 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 840&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/337/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/337/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13655612" author="rakeshr" created="Sun, 12 May 2013 20:06:36 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ivank%40yahoo-inc.com&quot; class=&quot;user-hover&quot; rel=&quot;ivank@yahoo-inc.com&quot;&gt;Ivan Kelly&lt;/a&gt; for the patch and nice improvement work. &lt;br/&gt;
Please see the following comments.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Please correct the &apos;getLogger(BookieJournalTest.class)&apos;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestSyncThread {
+    &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Logger LOG = LoggerFactory.getLogger(BookieJournalTest.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Please add timeout to the below testcases.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    @Test
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testSyncThreadDisksFull() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

+    @Test
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testSyncThreadShutdownOnError() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Pass exception object to the logger, would be useful when debugging.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;No writeable ledger directories&quot;&lt;/span&gt;, e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Please remove unused variable &apos;flushFailed&apos;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void checkpoint(Checkpoint checkpoint) {
        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; flushFailed = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Just a suggestion :&lt;br/&gt;
flush() is getting called on shutdown(). I could see zk is already closed before this call and here if enters to &apos;dirsListener.allDisksFull();&apos; &lt;br/&gt;
will always throws unnecessary zk exceptions. IMO, flush() doesn&apos;t required to handle any exceptions, just throw back to the callee. Whats do you say?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void flush() {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            .....
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NoWritableLedgerDirException e) {
            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;No writeable ledger directories&quot;&lt;/span&gt;);
            dirsListener.allDisksFull();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Exception flushing ledgers&quot;&lt;/span&gt;, e);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-Rakesh&lt;/p&gt;</comment>
                            <comment id="13655860" author="ikelly" created="Mon, 13 May 2013 10:09:39 +0100"  >&lt;p&gt;New patch addresses all comments but the last. I don&apos;t quite understand what you&apos;re suggesting with this. allDisksFull never throws exceptions, so even if zk has gone away, it won&apos;t affect the execution path.&lt;/p&gt;</comment>
                            <comment id="13655874" author="hadoopqa" created="Mon, 13 May 2013 10:41:54 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12582903/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Mon May 13 09:11:07 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 846&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/338/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/338/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13656156" author="rakeshr" created="Mon, 13 May 2013 18:46:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;allDisksFull never throws exceptions, so even if zk has gone away, it won&apos;t affect the execution path.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its trying to mark the bookie as r-o mode using zk. Since zk is already closed, will throw connection exception.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void allDisksFull() {
    &lt;span class=&quot;code-comment&quot;&gt;// Transition to readOnly mode on all disks full
&lt;/span&gt;    transitionToReadOnlyMode();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13656158" author="hustlmsp" created="Mon, 13 May 2013 18:47:08 +0100"  >&lt;p&gt;I don&apos;t see any strong benefits using an executor. One downside that I could see is that using an executor, you could not actually stop scheduling the checkpointing tasks when a bookie encountered critical exceptions, you silenced the exceptions.&lt;/p&gt;

&lt;p&gt;I prefer the original implementation, since it makes the flow clearer than using an executor.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        executor.scheduleAtFixedRate(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Runnable&lt;/span&gt;() {
+                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
+                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+                        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (suspensionLock) {
+                            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (suspended) {
+                                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+                                    suspensionLock.wait();
+                                } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+                                    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
+                                    &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
+                                }
+                            }
+                        }
+                        checkpoint(checkpointSource.newCheckpoint());
+                    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) {
+                        LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Exception in SyncThread&quot;&lt;/span&gt;, t);
+                        dirsListener.fatalError();
+                    }
+                }
+            }, flushInterval, flushInterval, TimeUnit.MILLISECONDS);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another problem in your exception handling is a bit difference from the original implementation and these exceptions handling are also hidden from the ledger dirs listener. it was a bit difficult to find an issue, especially for the cases, e.g. shutting down.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
+            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Exception flushing ledgers&quot;&lt;/span&gt;, e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why you just log exceptions when caught IOException.&lt;/p&gt;
</comment>
                            <comment id="13656907" author="ikelly" created="Tue, 14 May 2013 09:55:25 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Its trying to mark the bookie as r-o mode using zk. Since zk is already closed, will throw connection exception.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; Unless the exception is a runtime exception, it&apos;s not getting past allDisksFull() as allDisksFull throws nothing.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
One downside that I could see is that using an executor, you could not actually stop scheduling the checkpointing tasks when a bookie encountered critical exceptions, you silenced the exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;When a fatal exception occurs, the bookie calls shutdown on the sync thread, which calls shutdown on the executor. This stops any new checkpoint tasks being scheduled.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I prefer the original implementation, since it makes the flow clearer &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Of course this is fully subjective, but I completely disagree. The original code has a bunch of boolean flags which control the flow through the #checkpoint() and #run() methods, &apos;running&apos;, &apos;flushFailed&apos;, &apos;flushing&apos;. If you get a stacktrace from that code, you can&apos;t see that the values of these flags are, and therefore it&apos;s hard to see what path has lead up to the current stacktrace.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;br/&gt;
Another problem in your exception handling is a bit difference from the original implementation and these exceptions handling are also hidden from the ledger dirs listener. it was a bit difficult to find an issue, especially for the cases, e.g. shutting down. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ah, there is a change in the exception handling i missed. Will fix.&lt;/p&gt;</comment>
                            <comment id="13656978" author="hadoopqa" created="Tue, 14 May 2013 12:41:03 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12583102/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Tue May 14 11:10:04 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 846&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/339/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/339/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13657203" author="ikelly" created="Tue, 14 May 2013 17:55:27 +0100"  >&lt;p&gt;In fact, the current SyncThread implementation doesn&apos;t necessarily run flush on shutdown. Most likely it will not be called. The only time flush can be called is if shutdown() is called between the flushing.compareAndSet and the call to checkpoint. Otherwise it will break out of the thread.&lt;/p&gt;</comment>
                            <comment id="13657796" author="hustlmsp" created="Wed, 15 May 2013 02:36:40 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
When a fatal exception occurs, the bookie calls shutdown on the sync thread, which calls shutdown on the executor. This stops any &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; checkpoint tasks being scheduled.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;this would be a deadlock when shutting down, a executor task is running to shutdown bookie and the shutdown process needs to shutdown executor itself, which needs to wait until task is finished. There was a bug before related to this issue.&lt;/p&gt;

&lt;p&gt;in original implementation, it is easy to figure out what happened when you got the stacktrace, even it used boolean flag, since the stacktrace would show different branches of the code that it executed. it is not bad as you said.&lt;/p&gt;

&lt;p&gt;I don&apos;t feel strongly about this part. If the comment could be addressed and other people has +1 on it, I am OK with that.&lt;/p&gt;</comment>
                            <comment id="13659174" author="rakeshr" created="Thu, 16 May 2013 04:18:37 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly&quot; class=&quot;user-hover&quot; rel=&quot;ikelly&quot;&gt;Ivan Kelly&lt;/a&gt; oh, seems that I don&apos;t explain clearly at my previous comment.&lt;/p&gt;

&lt;p&gt;Assume bookie is shutting down and invoked syncThread.shutdown(). Say ledgerStorage.flush(); throws NoWritableLedgerDirException, now this would&lt;br/&gt;
call dirsListener.allDisksFull();. Here it would do zk calls to Bookie#transitionToReadOnlyMode(), since zk is closed previosly, would get the following KeeperException. On KeeperException, we have logic to Bookie#triggerBookieshutdown() and this would again call Bookie.this.shutdown() on a new Thread and enters to deadlock situation.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:127)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1021)
	at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1049)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bookie#transitionToReadOnlyMode() exception handling.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) {
            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error in transition to ReadOnly Mode.&quot;&lt;/span&gt;
                    + &lt;span class=&quot;code-quote&quot;&gt;&quot; Shutting down&quot;&lt;/span&gt;, e);
            triggerBookieShutdown(ExitCode.BOOKIE_EXCEPTION);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
        } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    void triggerBookieShutdown(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; exitCode) {
        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; shutdownThread = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;() {
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
                Bookie.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.shutdown(exitCode);
            }
        };
        shutdownThread.start();
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            shutdownThread.join();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
            &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;InterruptedException &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; shutdown. Not a problem!!&quot;&lt;/span&gt;);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13659571" author="ikelly" created="Thu, 16 May 2013 15:23:20 +0100"  >&lt;p&gt;The new patch addresses the shutdown deadlock. Shutdown is on the SyncThread is only ever called from the bookie. If it is called from a bookie callback (such as in the listener) it goes through triggerBookieShutdown(), which spawns a separate thread to do it. I&apos;ve changed triggerBookieShutdown to start the thread, but not to join it. joining the new thread makes no sense. You are effectively calling shutdown() directly if you join the thread. The thread will clean up after itself once run is finished.&lt;/p&gt;

&lt;p&gt;I also changed the order of cleanup in shutdown to match the dependencies between the components. I don&apos;t close zk until everything that uses it is also shutdown. Finally, i&apos;ve put a check in transitionToReadOnlyMode to only do so if the bookie is not shutting down.&lt;/p&gt;</comment>
                            <comment id="13659611" author="hadoopqa" created="Thu, 16 May 2013 16:09:12 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12583486/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Thu May 16 14:21:00 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;-1 TESTS&lt;/font&gt; - patch does not compile, cannot run testcases&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;b&gt;-1 Overall result, please check the reported -1(s)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/342/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/342/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13660554" author="ikelly" created="Fri, 17 May 2013 12:00:20 +0100"  >&lt;p&gt;Last patch had some synchronization issues. Fixed.&lt;/p&gt;</comment>
                            <comment id="13660574" author="hadoopqa" created="Fri, 17 May 2013 12:31:45 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12583642/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Fri May 17 11:01:00 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 846&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/343/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/343/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13662232" author="rakeshr" created="Mon, 20 May 2013 19:16:09 +0100"  >&lt;p&gt;Thanks Ivan. &lt;br/&gt;
Latest patch looks fine, +1 from me.&lt;/p&gt;</comment>
                            <comment id="13664956" author="ikelly" created="Thu, 23 May 2013 08:51:50 +0100"  >&lt;p&gt;I&apos;ll submit this friday(23rd) if there are no objections.&lt;/p&gt;</comment>
                            <comment id="13665393" author="hustlmsp" created="Thu, 23 May 2013 18:36:29 +0100"  >&lt;p&gt;you removed #join, which might cause spawning lots of threads to shutdown bookies at a higher add throughput encountering NoWritableLedgerDir. I don&apos;t know what is the side effects. since this is a minor change not blocking other tasks, I would suggest holding pushing it. &lt;/p&gt;</comment>
                            <comment id="13666491" author="ikelly" created="Fri, 24 May 2013 18:37:00 +0100"  >&lt;p&gt;Added a check so that triggerShutdown can only be called once.&lt;/p&gt;</comment>
                            <comment id="13666596" author="hadoopqa" created="Fri, 24 May 2013 20:40:00 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12584726/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Fri May 24 19:09:12 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 846&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/346/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/346/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13683968" author="hadoopqa" created="Sat, 15 Jun 2013 01:31:26 +0100"  >&lt;p&gt;Testing JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-610&quot; title=&quot;Make SyncThread use an executor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-610&quot;&gt;&lt;del&gt;BOOKKEEPER-610&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Patch &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12584726/0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch&lt;/a&gt; downloaded at Sat Jun 15 00:04:32 UTC 2013&lt;/p&gt;

&lt;p&gt;----------------------------&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 PATCH_APPLIES&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 CLEAN&lt;/font&gt;&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAW_PATCH_ANALYSIS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any @author tags&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any tabs&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any trailing spaces&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not introduce any line longer than 120&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does adds/modifies 1 testcase(s)&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 RAT&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new RAT warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 JAVADOC&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Javadoc warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 COMPILE&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; HEAD compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; patch compiles&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new javac warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 FINDBUGS&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; the patch does not seem to introduce new Findbugs warnings&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 TESTS&lt;/font&gt;&lt;br/&gt;
.    Tests run: 852&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;+1 DISTRO&lt;/font&gt;&lt;br/&gt;
.    &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; distro tarball builds with the patch &lt;/p&gt;

&lt;p&gt;----------------------------&lt;br/&gt;
&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1 Overall result, good!, no -1s&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;The full output of the test-patch run is available at&lt;/p&gt;

&lt;p&gt;.   &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/371/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk-precommit-build/371/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13714492" author="hustlmsp" created="Sat, 20 Jul 2013 19:04:52 +0100"  >&lt;p&gt;+1 for the patch. committing &lt;/p&gt;</comment>
                            <comment id="13714494" author="hustlmsp" created="Sat, 20 Jul 2013 19:06:54 +0100"  >&lt;p&gt;committed as r1505175. thanks Ivan.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12584726" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="24466" author="ikelly" created="Fri, 24 May 2013 18:37:00 +0100"/>
                            <attachment id="12583642" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="24249" author="ikelly" created="Fri, 17 May 2013 12:00:20 +0100"/>
                            <attachment id="12583486" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="24480" author="ikelly" created="Thu, 16 May 2013 15:18:40 +0100"/>
                            <attachment id="12583102" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="21126" author="ikelly" created="Tue, 14 May 2013 10:04:31 +0100"/>
                            <attachment id="12582903" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="20774" author="ikelly" created="Mon, 13 May 2013 10:08:18 +0100"/>
                            <attachment id="12582597" name="0001-BOOKKEEPER-610-Make-SyncThread-use-an-executor.patch" size="20618" author="ikelly" created="Fri, 10 May 2013 10:49:15 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 May 2013 10:21:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327348</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzebnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327692</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>