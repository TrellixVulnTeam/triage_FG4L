<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:25:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-345/BOOKKEEPER-345.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-345] Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-345</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;This jira to detect IOExceptions in &quot;EntryLogger&quot;, and will iterate over all the configured ledger(s) on IOException. Finally if no writable dirs available, will move bookie to r-o mode(if this mode is enabled). &lt;/p&gt;

&lt;p&gt;By default(r-o mode will be disabled) the bookie will shutdown if no writable disk available.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12599088">BOOKKEEPER-345</key>
            <summary>Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12548815">BOOKKEEPER-199</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vinayrpet">Vinayakumar B</assignee>
                                    <reporter username="rakeshr">Rakesh R</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Jul 2012 09:59:21 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:23 +0000</updated>
                            <resolved>Thu, 18 Oct 2012 15:41:53 +0100</resolved>
                                    <version>4.1.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13416038" author="vinayrpet" created="Tue, 17 Jul 2012 10:20:41 +0100"  >&lt;p&gt;Following changes I have done regarding this jira.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;On addEntry failure
	&lt;ul&gt;
		&lt;li&gt;Checking the disk full. If current disk is full, then moving to next disk and create another entry log and add entry again.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;On Flush failure of entry log,
	&lt;ul&gt;
		&lt;li&gt;Keep all the entries in a list till the flush is called.&lt;/li&gt;
		&lt;li&gt;On successfull flush clear the list&lt;/li&gt;
		&lt;li&gt;On flush failure, create new entry log and re-add all entries.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I will create a patch and upload in some time.&lt;/p&gt;</comment>
                            <comment id="13417070" author="vinayrpet" created="Wed, 18 Jul 2012 14:25:55 +0100"  >&lt;p&gt;Attaching the patch &lt;/p&gt;</comment>
                            <comment id="13417076" author="vinayrpet" created="Wed, 18 Jul 2012 14:29:30 +0100"  >&lt;p&gt;Patch contains following changes.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Detecting the IOExceptions in entrylogger during addEntry and flush.&lt;/li&gt;
	&lt;li&gt;Maintaining ledger dirs list in bookie, and referred from here in all other places&lt;/li&gt;
	&lt;li&gt;On all ledger dirs full, converting to read-only mode.&lt;/li&gt;
	&lt;li&gt;Utility to check for the disk problems.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13431723" author="hustlmsp" created="Thu, 9 Aug 2012 11:38:43 +0100"  >&lt;p&gt;thanks Vinay, the main flow of the patch looks good. please refer my comments as below:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EntryLogger(ServerConfiguration conf) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.dirs = Bookie.getCurrentDirectories(conf.getLedgerDirs());
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EntryLogger(ServerConfiguration conf, Bookie bookie) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bookie = bookie;

-        ledgerStorage = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InterleavedLedgerStorage(conf, activeLedgerManager);
+        ledgerStorage = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InterleavedLedgerStorage(conf, activeLedgerManager, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
         handles = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HandleFactoryImpl(ledgerStorage);
         &lt;span class=&quot;code-comment&quot;&gt;// instantiate the journal
&lt;/span&gt;-        journal = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Journal(conf);
+        journal = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Journal(conf, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we had removed bookie reference from EntryLogger, InterleavedLedgerStorage, Journal in previous jiras, to make the dependencies clear. now you added it back gain &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I think what you want is a place to manage all the directories for a bookie. So how about creating a separated class, like &apos;DirectoriesManager&apos; (may be you would have a better name for it), which takes the responsibility of managing all directories.(NoWritableLedgerDirException would be an exception of it) And the directories manager instance could be passed for EntryLogger, LedgerStorage to use. Does it make clearer?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class DiskChecker
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is not a good idea to let is be a static utility. You could remove static from all those methods. For a directories manager, it construct a DiskChecker instance, and read a threshold from configuration. Then the directories manager use it to check disks when exception happened. BTW, the threshold would be a percentage number not a size number.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        void shutdown() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
+        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void shutdown() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why changing it to synchronized?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.readOnlyModeEnabled = conf
+                .getBoolean(&lt;span class=&quot;code-quote&quot;&gt;&quot;readOnlyModeEnabled&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It would be better to add this setting in ServerConfiguration and also put it in conf/bk_server.conf.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void convertToReadOnlyMode() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don&apos;t think &apos;convert&apos; is a better verbose. how about &apos;turnIntoReadOnlyMode&apos;? I am not very sure about it, because I am not a native English speaker &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// Triggering the Bookie shutdown in separate thread.
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// because that will shutdown sync thread also.
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void triggerBookieShutdown(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; exitCode) {
+        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; shutdownThread = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;() {
+            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
+                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!Bookie.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.shuttingdown) {
+                    Bookie.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.shutdown(exitCode);
+                }
+            }
+        };
+        shutdownThread.start();
+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+            shutdownThread.join();
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+            &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
+            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;InterruptedException &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; shutdown. Not a problem!!&quot;&lt;/span&gt;);
+        }
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you don&apos;t need to check &apos;!Bookie.this.shuttingdown&apos;. since shutdown is synchronized.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// During disk full, some of the contents flush may fail.
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// Exception also will not be thrown.
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bc.position() != &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.position) {
+            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(
+                    &lt;span class=&quot;code-quote&quot;&gt;&quot;Error during flushing. All contents not flushed&quot;&lt;/span&gt;);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why need it? I remembered FileChannel would throw IOException if disk is full. please correct me if I am wrong.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!flushing) {
+            entriesDuplicateList.add(entry.duplicate());
+        }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think it would buffer too much entries, if the flushing interval is long. But I don&apos;t have a better idea now. Need to see others&apos; comments.&lt;/p&gt;

</comment>
                            <comment id="13431724" author="hustlmsp" created="Thu, 9 Aug 2012 11:40:44 +0100"  >&lt;p&gt;BTW, could you put the patch on review board when you generated next patch? for minor changes, it is OK to attach the patch here. but for a bigger change, it would be better to put it on review board for comments and reviews.&lt;/p&gt;</comment>
                            <comment id="13431766" author="vinayrpet" created="Thu, 9 Aug 2012 13:17:00 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hustlmsp&quot; class=&quot;user-hover&quot; rel=&quot;hustlmsp&quot;&gt;Sijie Guo&lt;/a&gt; for taking a look here.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;why need it? I remembered FileChannel would throw IOException if disk is full. please correct me if I am wrong&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I also thought same way, but during testing I encountered a problem where, FileChannel was not throwing exception sometimes on disk full and all contents was not flushed properly.&lt;br/&gt;
And during reading that entry log was corrupted, and was not able to read entres. After adding this check, same problem did not occur.&lt;/p&gt;

&lt;p&gt;Regarding other comments, I will try to fix and post a patch soon on review board.&lt;/p&gt;</comment>
                            <comment id="13431814" author="vinayrpet" created="Thu, 9 Aug 2012 14:59:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;BTW, the threshold would be a percentage number not a size number.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I feel if threshold is a size number, then regardless of disk capacity, we will be looking for the minimum disk space required for bookie.&lt;/p&gt;</comment>
                            <comment id="13431820" author="hustlmsp" created="Thu, 9 Aug 2012 15:07:32 +0100"  >&lt;p&gt;capacity might diff from different directories mounted on different disks. setting a size number doesn&apos;t make sense.&lt;/p&gt;</comment>
                            <comment id="13431835" author="vinayrpet" created="Thu, 9 Aug 2012 15:28:16 +0100"  >&lt;blockquote&gt;&lt;p&gt;capacity might diff from different directories mounted on different disks. setting a size number doesn&apos;t make sense.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If I use threshold as percent, then it always depend on the disk capacity. As you told different directories can have different capacity.&lt;br/&gt;
But If I use threshold as constant, such as 100MB, then this will be the minimum free space bookie expects in all configured directories. So this threshold will be independent of disk&apos;s capacity.&lt;/p&gt;</comment>
                            <comment id="13436008" author="vinayrpet" created="Thu, 16 Aug 2012 15:48:25 +0100"  >&lt;p&gt;Attaching the patch with comments fixed.&lt;/p&gt;</comment>
                            <comment id="13436778" author="hustlmsp" created="Fri, 17 Aug 2012 16:18:51 +0100"  >&lt;p&gt;thanks, Vinay. the patch is pretty good. my comments are as below:&lt;/p&gt;


&lt;p&gt;the patch is compiled failure due to you passed ledgerDirsManager to LedgerCacheImpl. I am guessing it is introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-346&quot; title=&quot;Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-346&quot;&gt;&lt;del&gt;BOOKKEEPER-346&lt;/del&gt;&lt;/a&gt;. could you fix it?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+    public boolean isReadonly() &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+        return readonly;
+    }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;I am just guessing, if a bookie is readOnly, should we reject following write requests? But I don&apos;t see any place use this variable. If no one use it, please remove it. If someone use it, shall we mark it as volatile?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+        // During disk full, some of the contents flush may fail.&lt;br/&gt;
+        // Exception also will not be thrown.&lt;br/&gt;
+        if (bc.position() != this.position) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
+            throw new IOException(
+                    &amp;quot;Error during flushing. All contents not flushed&amp;quot;);
+        }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;it introduced a findbugs error, &apos;position&apos; is 50% synchronized.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;     public ReadOnlyEntryLogger(ServerConfiguration conf) throws IOException &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
-        super(conf);
+        super(conf, null);
     }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;d better construct a LedgerDirsManager using the conf. Since ledgerDirsManager not only used in those write-only methods.&lt;/p&gt;


&lt;p&gt;For testcase, I think you need two more test cases, one is about rollLog, the other is about setLastLogId. You&apos;d better test them to. Also, you added code to turn bookie server to readonly mode. But there is no test case to test about it. I think you need to add one to check whether the bookie is actually put it readonly.&lt;/p&gt;</comment>
                            <comment id="13436785" author="hustlmsp" created="Fri, 17 Aug 2012 16:23:57 +0100"  >&lt;p&gt;BTW, I am just thinking is percentage a better threshold for disk usage checking than plain disk size.&lt;/p&gt;</comment>
                            <comment id="13436923" author="vinayrpet" created="Fri, 17 Aug 2012 19:00:15 +0100"  >&lt;p&gt;Thanks for the review and comments, Sijie. &lt;/p&gt;

&lt;p&gt;Please give your opinion about &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-199?focusedCommentId=13436659&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13436659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/BOOKKEEPER-199?focusedCommentId=13436659&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13436659&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will reduce the code changes done in current patch.&lt;br/&gt;
I will consider your above comments, before posting a new patch.&lt;/p&gt;</comment>
                            <comment id="13439553" author="vinayrpet" created="Wed, 22 Aug 2012 15:14:38 +0100"  >&lt;p&gt;Attaching the latest patch with new deamon thread for disk scanning.&lt;/p&gt;</comment>
                            <comment id="13443038" author="vinayrpet" created="Tue, 28 Aug 2012 10:09:59 +0100"  >&lt;p&gt;Attaching the latest patch with fixes of comments given by Ivan in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-346&quot; title=&quot;Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-346&quot;&gt;&lt;del&gt;BOOKKEEPER-346&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13445092" author="ikelly" created="Thu, 30 Aug 2012 17:56:15 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vinayrpet&quot; class=&quot;user-hover&quot; rel=&quot;vinayrpet&quot;&gt;Vinayakumar B&lt;/a&gt; I&apos;ve taken a look at the patch. Generally the change is good, but there&apos;s one architectural issue I&apos;d like you to sort out (the coupling). Also, when you put up a new patch could you mark it as patch available. It makes it easier to see which patchs are ready for review. &lt;/p&gt;

&lt;p&gt;In Bookie#shutdown() When catching interrupted exception you should interrupt the current thread.&lt;/p&gt;

&lt;p&gt;getAllLegderDirs -&amp;gt; typo, should be getAllLedgerDirs&lt;/p&gt;

&lt;p&gt;comment on triggerBookieShutdown isn&apos;t clear. You should state that it needs to be in it&apos;s own thread, because it can be called from the sync thread, which would be interrupted by this call.&lt;/p&gt;

&lt;p&gt;isReadonly() -&amp;gt; typo, should be isReadOnly()&lt;/p&gt;

&lt;p&gt;myNode is will always be the same as zkBookieRegPath. zkBookieRegPath is a better name, so make it a final  member field of Bookie, and create it in the constructor instead of in registerBookie.&lt;/p&gt;

&lt;p&gt;Use an AtomicBoolean for readonly. Rename readonly to readOnly;&lt;/p&gt;

&lt;p&gt;I don&apos;t like the fact that bookie is passed to LedgerDirsManager. It creates too much coupling between the two, which we already see in BookieShell, when you have pass a null parameter. It would be better to define an interface, DiskFailureListener such as ...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; DiskFailureListener {
  void diskFailed(File disk);
  void diskFull(File disk);
  void fatalError();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LedgerDirsManager should maintain a list of this listeners, and trigger them on a disk failure. Bookie would register a listener with the LedgerDirsManager. When triggered it could then call transitionToReadOnly.&lt;/p&gt;

&lt;p&gt;LedgerDirsManager#addToFilledDirs should be private&lt;/p&gt;

&lt;p&gt;I think LedgerDirsManager#getFilledDir would be better as LedgerDirsManaager#isDirFull(File dir)&lt;/p&gt;

&lt;p&gt;getDiskChecker should be private&lt;/p&gt;

&lt;p&gt;LedgerDirsManager#shouldCreateNewEntryLog and LedgerDirsManager#setRelocateIndexFile are state that belong to the EntryLogger &amp;amp; LedgerCache respectively. They shouldn&apos;t be in the LedgerDirsManager. Again, it&apos;s coupling. These can be implemented by having EntryLogger and LedgerCache register listeners.&lt;/p&gt;

&lt;p&gt;Why not put NoWritableLedgerDirException in BookieException?&lt;/p&gt;

&lt;p&gt;BookieServer#getBookie() why not add the @VisibleForTesting annotation from guava, since we&apos;re using guava now.&lt;/p&gt;

&lt;p&gt;DiskChecker#mkdirsWithExistsChecks should be private. Also static. Also, what happens if a crash happens half away through creating /foo/bar/boo? /foo/bar will exist, so no future call to mkdirsWithExistsChecks will succeed.&lt;/p&gt;

&lt;p&gt;DiskChecker#setDiskSpaceThreshold and getDiskSpaceThreshold should be marked as @visibleForTesting. Also, they should be package private.&lt;/p&gt;</comment>
                            <comment id="13445729" author="vinayrpet" created="Fri, 31 Aug 2012 07:54:07 +0100"  >&lt;p&gt;Thanks Ivan for the detailed review and valuable comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be better to define an interface, DiskFailureListener such as ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, this is nice. I will define like this. But some small modification i need in this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; LedgerDirsListener {
  void diskFailed(File disk);
  void diskFull(File disk);
  void allDiskFull();
  void fatalError();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;Why not put NoWritableLedgerDirException in BookieException?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wanted to extend IOException instead of Exception as in BookieException, to avoid so many method signature changes. I followed Bookie.NoLedgerException&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;BookieServer#getBookie() why not add the @VisibleForTesting annotation from guava, since we&apos;re using guava now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. I will add the guava to pom.xml also.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;what happens if a crash happens half away through creating /foo/bar/boo? /foo/bar will exist, so no future call to mkdirsWithExistsChecks will succeed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This should not be problem. First it will check /foo/bar/boo, if not able to create and exists call also fails, then it will check for the parent and canonical file for /foo/bar/boo again.&lt;br/&gt;
The call will fail, only if creation of  /foo/bar/boo fails even after trying with canonical file(Since /foo/bar already exists). If able to create then this will succeed.&lt;/p&gt;


&lt;p&gt;Other comments I will fix and post a new patch in sometime.&lt;/p&gt;
</comment>
                            <comment id="13445760" author="ikelly" created="Fri, 31 Aug 2012 09:12:56 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I wanted to extend IOException instead of Exception as in BookieException, to avoid so many method signature changes. I followed Bookie.NoLedgerException&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, thats fine with me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ok. I will add the guava to pom.xml also.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For some reason I thought we were already depending on guava. Since this is not the case, just mark it visible for testing in the comment.&lt;/p&gt;</comment>
                            <comment id="13445882" author="vinayrpet" created="Fri, 31 Aug 2012 13:52:36 +0100"  >&lt;p&gt;Attaching the latest patch with all above comment fixes.&lt;/p&gt;</comment>
                            <comment id="13448442" author="vinayrpet" created="Wed, 5 Sep 2012 05:02:26 +0100"  >&lt;p&gt;Marking PA again for visibility.&lt;/p&gt;</comment>
                            <comment id="13452870" author="hustlmsp" created="Tue, 11 Sep 2012 11:08:25 +0100"  >&lt;p&gt;thanks Vinay for new patch. please check my comments as below.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    void transitionToReadOnlyMode() {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (readOnly.get()) {
+            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
+        }
+        readOnly.set(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the code could not prevent two callers to call the function at the same time. you need to use &apos;compareAndSet&apos;.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; == zk.exists(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bookieRegistrationPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;readonly&quot;&lt;/span&gt;,
+                    &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;)) {

+            &lt;span class=&quot;code-comment&quot;&gt;// Create the readonly node
&lt;/span&gt;+            zk.create(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bookieRegistrationPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;readonly&quot;&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;
+                    + getMyId(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[0], Ids.OPEN_ACL_UNSAFE,
+                    CreateMode.EPHEMERAL);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it would be better to define &apos;readonly&apos; as constant string.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; == zk.exists(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bookieRegistrationPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;readonly&quot;&lt;/span&gt;,
+                    &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;)) {
+                zk.create(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bookieRegistrationPath + &lt;span class=&quot;code-quote&quot;&gt;&quot;readonly&quot;&lt;/span&gt;,
+                        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;you should catch NodeExistsException for the creation. if others created &apos;readonly&apos; znode, you could continue the logic to enter readonly mode.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void recoveryAddEntry(ByteBuffer entry, WriteCallback cb, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] masterKey) 
             &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, BookieException {
-        LedgerDescriptor handle = getLedgerForEntry(entry, masterKey);
-        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (handle) {
-            addEntryInternal(handle, entry, cb, ctx);
+        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+            LedgerDescriptor handle = getLedgerForEntry(entry, masterKey);
+            &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (handle) {
+                addEntryInternal(handle, entry, cb, ctx);
+            }
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NoWritableLedgerDirException e) {
+            transitionToReadOnlyMode();
+            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(e.getMessage(), e);
         }
     }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why not &apos;throw new IOException(e)&apos;? since you just use the error message from underlying exception. same issue in addEntry.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (logChannel.position() + entry.remaining() + 4 &amp;gt; logSizeLimit) {
+        &lt;span class=&quot;code-comment&quot;&gt;// Create &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; log &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; logSizeLimit reached or current disk is full
&lt;/span&gt;+        &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; createNewLog = shouldCreateNewEntryLog.get();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (createNewLog
+                || (logChannel.position() + entry.remaining() + 4 &amp;gt; logSizeLimit)) {
             createNewLog();
+
+            &lt;span class=&quot;code-comment&quot;&gt;// Reset the flag
&lt;/span&gt;+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (createNewLog) {
+                shouldCreateNewEntryLog.set(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+            }
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If it happens to following case, does it make the entry log corrupted?&lt;br/&gt;
the case is: there is no enough space to store an entry, but the ledgerDirsManager doesn&apos;t find that the disk is out-of-usage. (user configure a larger enough threshold).&lt;/p&gt;


&lt;p&gt;It is a bit heavier here to operate the writableLedgerDirectories. why not make writableLedgerDirectories, filledDirs as volatile, and change them when addToFilledDirs. so the getWritableLedgerDirs would be simple.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;File&amp;gt; getWritableLedgerDirs()
+            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; NoWritableLedgerDirException {
         List&amp;lt;File&amp;gt; dirs = writableLedgerDirectories;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (dirs.isEmpty()) {
+            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;All ledger directories are non writable&quot;&lt;/span&gt;;
+            NoWritableLedgerDirException e = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; NoWritableLedgerDirException(
+                    errMsg);
+            LOG.error(errMsg, e);
+            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
+        }
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; dirs;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    /**
+     * The server is running as read-only mode
+     */
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; READONLY = 105;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;since all the error codes are prefixed with &apos;E&apos;, it would be better to keep naming consistent. And I think it would be better to add a specific exception for writes to readonly bookie in client-side.&lt;/p&gt;</comment>
                            <comment id="13452872" author="hustlmsp" created="Tue, 11 Sep 2012 11:11:32 +0100"  >&lt;p&gt;I forgot one thing that seems you changed the constructor of LedgerCacheImpl.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        ledgerCache = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LedgerCacheImpl(conf, activeLedgerManager, ledgerDirsManager);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but the changes are not included in this patch. I guessed you put it in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-346&quot; title=&quot;Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-346&quot;&gt;&lt;del&gt;BOOKKEEPER-346&lt;/del&gt;&lt;/a&gt;. when next time you generate the patch, could you help including it?&lt;/p&gt;</comment>
                            <comment id="13452885" author="vinayrpet" created="Tue, 11 Sep 2012 11:29:47 +0100"  >&lt;p&gt;Thanks Sijie, for review.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the case is: there is no enough space to store an entry, but the ledgerDirsManager doesn&apos;t find that the disk is out-of-usage. (user configure a larger enough threshold).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes you are right. It can corrupt the entry log. This I had considered in the initial patch, with some extra synchronization and storing the duplicate entries. Since after introducing the disk checker daemon, I thought this is not required, because daemon will check disk every 10 seconds  by default and it will detect the disk usage above threshold well ahead before actually gets to that stage of corruption. I think here we need to recommend user to use default of 95% of threshold.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And I think it would be better to add a specific exception for writes to readonly bookie in client-side.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, these changes will be available as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-347&quot; title=&quot; Provide mechanism to detect r-o bookie by the bookie clients&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-347&quot;&gt;&lt;del&gt;BOOKKEEPER-347&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other comments I will address and post a new patch soon.&lt;/p&gt;</comment>
                            <comment id="13471551" author="vinayrpet" created="Mon, 8 Oct 2012 14:54:44 +0100"  >&lt;p&gt;Attaching the latest patch with above comment fixes &lt;/p&gt;</comment>
                            <comment id="13474152" author="hustlmsp" created="Thu, 11 Oct 2012 14:40:43 +0100"  >&lt;p&gt;the new patch looks good to me. +1 thanks Vinay.&lt;/p&gt;</comment>
                            <comment id="13478051" author="ikelly" created="Wed, 17 Oct 2012 18:19:22 +0100"  >&lt;p&gt;New patch looks good. Fails the tests though. There&apos;s one error in EntryLogTest, a NPE. Also, findbugs fails. Once these two things are resolved, I&apos;ll push in the patch.&lt;/p&gt;</comment>
                            <comment id="13478893" author="vinayrpet" created="Thu, 18 Oct 2012 11:36:33 +0100"  >&lt;p&gt;Attaching the latest patch with comment fixes&lt;/p&gt;</comment>
                            <comment id="13479044" author="ikelly" created="Thu, 18 Oct 2012 15:41:53 +0100"  >&lt;p&gt;Committed r1399680. Thanks Vinay&lt;/p&gt;</comment>
                            <comment id="13479652" author="vinayrpet" created="Fri, 19 Oct 2012 07:03:08 +0100"  >&lt;p&gt;Thanks Ivan for the Reviews and commit.&lt;br/&gt;
Also Thanks Uma, Rakesh and Sijie for the reviews.&lt;/p&gt;</comment>
                            <comment id="13479912" author="hudson" created="Fri, 19 Oct 2012 10:36:02 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #761 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/761/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/761/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-345&quot; title=&quot;Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-345&quot;&gt;&lt;del&gt;BOOKKEEPER-345&lt;/del&gt;&lt;/a&gt;: Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any) (Vinay via ivank) (Revision 1399680)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/conf/bk_server.conf&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/ReadOnlyEntryLogger.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtocol.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/DiskChecker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ReadOnlyBookieTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/util&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/util/TestDiskChecker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12599089">BOOKKEEPER-346</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12549663" name="BOOKKEEPER-345.patch" size="62861" author="vinayrpet" created="Thu, 18 Oct 2012 11:36:33 +0100"/>
                            <attachment id="12548232" name="BOOKKEEPER-345.patch" size="67982" author="vinayrpet" created="Mon, 8 Oct 2012 14:54:44 +0100"/>
                            <attachment id="12543257" name="BOOKKEEPER-345.patch" size="62289" author="vinayrpet" created="Fri, 31 Aug 2012 13:52:36 +0100"/>
                            <attachment id="12542736" name="BOOKKEEPER-345.patch" size="59316" author="vinayrpet" created="Tue, 28 Aug 2012 10:09:59 +0100"/>
                            <attachment id="12541968" name="BOOKKEEPER-345.patch" size="58457" author="vinayrpet" created="Wed, 22 Aug 2012 15:14:38 +0100"/>
                            <attachment id="12541225" name="BOOKKEEPER-345.patch" size="59249" author="vinayrpet" created="Thu, 16 Aug 2012 15:48:24 +0100"/>
                            <attachment id="12536983" name="BOOKKEEPER-345.patch" size="51033" author="vinayrpet" created="Wed, 18 Jul 2012 14:25:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 17 Jul 2012 09:20:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245556</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0667:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34818</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>