<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:30:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-315/BOOKKEEPER-315.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-315] Ledger entries should be replicated sequentially instead of parallel.</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-315</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;p&gt;Currently BookKeeperAdmin will copy the entries parallel.&lt;/p&gt;

&lt;p&gt;This may create more load on the servers. To avoid that, we can refactor the BKAdmin code to copy the entries sequential.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12595788">BOOKKEEPER-315</key>
            <summary>Ledger entries should be replicated sequentially instead of parallel.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12553925">BOOKKEEPER-237</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="umamaheswararao">Uma Maheswara Rao G</assignee>
                                    <reporter username="umamaheswararao">Uma Maheswara Rao G</reporter>
                        <labels>
                    </labels>
                <created>Mon, 25 Jun 2012 14:32:38 +0100</created>
                <updated>Wed, 13 Feb 2013 15:46:59 +0000</updated>
                            <resolved>Fri, 5 Oct 2012 15:27:40 +0100</resolved>
                                    <version>4.2.0</version>
                                    <fixVersion>4.2.0</fixVersion>
                                    <component>bookkeeper-auto-recovery</component>
                    <component>bookkeeper-client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13400470" author="fpj" created="Mon, 25 Jun 2012 14:35:52 +0100"  >&lt;p&gt;Hi Uma, Sequentially as in a chain? Or sequentially meaning one at a time?&lt;/p&gt;</comment>
                            <comment id="13400565" author="umamaheswararao" created="Mon, 25 Jun 2012 17:05:32 +0100"  >&lt;p&gt;Actually this point is a Review comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-299&quot; title=&quot;Provide LedgerFragmentReplicator which should replicate the fragments found from LedgerChecker&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-299&quot;&gt;&lt;del&gt;BOOKKEEPER-299&lt;/del&gt;&lt;/a&gt; from Ivan.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-299?focusedCommentId=13400393&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13400393&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;See my analysis comment &lt;/a&gt; I am thinking currently, Call backs can be there as a chain from Ledger to Frgment and Feragment to Entry. At the stage of entry we can think for making it one by one.&lt;/p&gt;</comment>
                            <comment id="13447969" author="umamaheswararao" created="Tue, 4 Sep 2012 20:18:55 +0100"  >&lt;p&gt;Seems like, for this JIRA, changes required to change from BookKeeperAdmin, nothing to do with auto-recovery code.&lt;br/&gt;
Marking it to top level issue.&lt;/p&gt;</comment>
                            <comment id="13447976" author="umamaheswararao" created="Tue, 4 Sep 2012 20:21:11 +0100"  >&lt;p&gt;Once we see the real overhead on Replication worker nodes, will start work on this.&lt;/p&gt;</comment>
                            <comment id="13450517" author="ikelly" created="Fri, 7 Sep 2012 11:44:36 +0100"  >&lt;p&gt;Currently, when we recover the entries from a bookie, we basically send all the read requests to the other bookies at the same time. While this is fine for small bookies, I think this could fall down for ledgers with many millions of entries. So really, we should only read in batches of limited size.&lt;/p&gt;</comment>
                            <comment id="13453885" author="umamaheswararao" created="Wed, 12 Sep 2012 11:19:02 +0100"  >&lt;p&gt;I got your concern, Even though we are replicating fragment by fragment, ledger may have single fragment and can contain with  many millions of entries. Let me take a look for ensuring at least for autoreplication part, as that is important to it.&lt;/p&gt;</comment>
                            <comment id="13456126" author="umamaheswararao" created="Fri, 14 Sep 2012 21:48:32 +0100"  >&lt;p&gt;I will make this to work for Auto replication part.&lt;br/&gt;
What I am thinking is that, as Ivan suggested above, if ledger fragment has more entries in it, then I can partition that fragment into smaller fragments say each one contains 100/configured entries and then replicate all that fragments. Once all such fragments replicated, then update the ensemble info by pointing to new bookie.&lt;/p&gt;</comment>
                            <comment id="13456924" author="umamaheswararao" created="Mon, 17 Sep 2012 11:18:11 +0100"  >&lt;p&gt;Attached a patch with the batching approach with out modifying much to BKAdmin older functionality side.&lt;br/&gt;
Whole refactoring also I did, But it turns to me that huge changes. So, I felt, that should not be the target now, as we concerned mainly about auto replication part as that will run automatically and should not put more load on other servers due replication work. &lt;/p&gt;

&lt;p&gt;Also added a config item maxAllowedEntriesPerFragmentInRereplication (can suggest better name)&lt;br/&gt;
Added 2 tests to check that this changes does not effect any fuctionality.&lt;/p&gt;

&lt;p&gt;Please take a look and give me your opinion on this.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Uma&lt;/p&gt;</comment>
                            <comment id="13458621" author="ikelly" created="Wed, 19 Sep 2012 13:16:38 +0100"  >
&lt;p&gt;splitToSubFragments is incorrect.&lt;br/&gt;
+        long numberOfEntriesToReplicate = lastEntryId - firstEntryId; &lt;br/&gt;
should be (lastEntryId - firstEntryId) + 1&lt;/p&gt;

&lt;p&gt;typo in maxAllowedEntriesInLogicalFrgament. name is too long anyhow. entriesPerSubFragment is better&lt;/p&gt;

&lt;p&gt;getMaxAllowedEtriesPerFragmentInRereplication has a typo and is too long. Change to getReplicationBatchSize()&lt;/p&gt;

&lt;p&gt;In general, I think this splitting should be in LedgerFragmentReplicator, rather than BookKeeperAdmin. This way you could avoid the need to expose the update of ledger metadata. It will make control flow a little more complex as you&apos;ll have to initiate replication on the next subfragment from the callback of the current, but i think it would encapsulate things a bit better.&lt;/p&gt;</comment>
                            <comment id="13459054" author="umamaheswararao" created="Wed, 19 Sep 2012 21:25:42 +0100"  >&lt;p&gt;Hi Ivan,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+ long numberOfEntriesToReplicate = lastEntryId - firstEntryId; &lt;br/&gt;
should be (lastEntryId - firstEntryId) + 1&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You are right, both side entries has to be considered. Thank a lot for noticing it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In general, I think this splitting should be in LedgerFragmentReplicator, rather than BookKeeperAdmin. This way you could avoid the need to expose the update of ledger metadata. It will make control flow a little more complex as you&apos;ll have to initiate replication on the next subfragment from the callback of the current, but i think it would encapsulate things a bit better.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, in general, all the split logic should be in LFR. I might pushed that code to BKAdmin because, I don&apos;t want to disturb admin key flow much, which will go through LFR.&lt;br/&gt;
Now anyway, I moved that logic, still not disturbing BKAdmin key flows in anyway.&lt;/p&gt;

&lt;p&gt;Attached a patch, which addresses the comments.&lt;/p&gt;

&lt;p&gt;Also to give more confidence on split fragment scenarios, I have added multiple boundary cases for FragmentSplit.&lt;/p&gt;

&lt;p&gt;Thanks a lot, Ivan for your nice reviews!&lt;/p&gt;
</comment>
                            <comment id="13460534" author="umamaheswararao" created="Fri, 21 Sep 2012 15:47:31 +0100"  >&lt;p&gt;Hi Ivan, Could you please take a look on this latest patch?&lt;/p&gt;</comment>
                            <comment id="13460583" author="ikelly" created="Fri, 21 Sep 2012 17:04:12 +0100"  >&lt;p&gt;Hi Uma, &lt;br/&gt;
In ReplicationWorker, the setEntries.. is redundant, as it should have already been copied in the constructor in the first line.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        ClientConfiguration clientConf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ClientConfiguration(conf);
+        clientConf.setEntriesPerSubFragmentInRereplication(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf
+                .getEntriesPerSubFragmentInRereplication());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;ENTRIES_PER_SUB_FRAGMENT_IN_REREPLICATION = &lt;span class=&quot;code-quote&quot;&gt;&quot;entriesPerSubFragmentInRereplication&quot;&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; is too long/wordy.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;REREPLICATION_ENTRY_BATCH_SIZE = &lt;span class=&quot;code-quote&quot;&gt;&quot;rereplicationEntryBatchSize&quot;&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; is clearer. Also, we don&apos;t want to expose the concept of fragments/subfragments to the users. The less high level concepts we expose, the easier it is for them to reason about what bookkeeper is doing.&lt;/p&gt;

&lt;p&gt;Also, there&apos;s an inconsistency as to when splitting it occurring. Splitting should happen for every fragment above the batch size. So the only entry point to LedgerFragmentReplicator should be #replicate, and it should do the splitting and replicating. You can pretty much do this by renaming #splitAndReplicateFragment to #replicate, and #replicate to #replicateBatch, but #replicate should be an async method still.&lt;/p&gt;</comment>
                            <comment id="13460608" author="umamaheswararao" created="Fri, 21 Sep 2012 17:40:21 +0100"  >&lt;p&gt;Thanks a lot Ivan, for the comments.&lt;/p&gt;

&lt;p&gt;one clarification: are you suggesting something like below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void replicateBatch(LedgerHandle lh, LedgerFragment lf,
            InetSocketAddress targetBookieAddress) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SyncCounter syncCounter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SyncCounter();
        ResultCallBack resultCallBack = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ResultCallBack(syncCounter);
        syncCounter.inc();
        replicate(lh, lf, resultCallBack, targetBookieAddress);
        syncCounter.block(0);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;replicateBatch, replicate are like, one will be sync call and other is async?&lt;/p&gt;

&lt;p&gt;or you are suggesting that replicateBatch itself can be async?&lt;/p&gt;

&lt;p&gt;Could you please clarify on this?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Uma&lt;/p&gt;</comment>
                            <comment id="13460610" author="umamaheswararao" created="Fri, 21 Sep 2012 17:42:08 +0100"  >&lt;p&gt;Thanks a lot Ivan, for the comments.&lt;/p&gt;

&lt;p&gt;one clarification: are you suggesting something like below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void replicateBatch(LedgerHandle lh, LedgerFragment lf,
            InetSocketAddress targetBookieAddress) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SyncCounter syncCounter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SyncCounter();
        ResultCallBack resultCallBack = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ResultCallBack(syncCounter);
        syncCounter.inc();
        replicate(lh, lf, resultCallBack, targetBookieAddress);
        syncCounter.block(0);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;replicateBatch, replicate are like, one will be sync call and other is async?&lt;/p&gt;

&lt;p&gt;or you are suggesting that replicateBatch itself can be async?&lt;/p&gt;

&lt;p&gt;Could you please clarify on this?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Uma&lt;/p&gt;</comment>
                            <comment id="13460676" author="umamaheswararao" created="Fri, 21 Sep 2012 19:31:32 +0100"  >&lt;p&gt;Anyway I addressed your comments, please take a look at new patch.&lt;br/&gt;
Thanks for the reviews!&lt;/p&gt;</comment>
                            <comment id="13469284" author="ikelly" created="Thu, 4 Oct 2012 11:45:17 +0100"  >&lt;p&gt;Sorry about taking so long to look at this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;one clarification: are you suggesting something like below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void replicateBatch(LedgerHandle lh, LedgerFragment lf,
            InetSocketAddress targetBookieAddress) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; SyncCounter syncCounter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SyncCounter();
        ResultCallBack resultCallBack = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ResultCallBack(syncCounter);
        syncCounter.inc();
        replicate(lh, lf, resultCallBack, targetBookieAddress);
        syncCounter.block(0);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;replicateBatch, replicate are like, one will be sync call and other is async?&lt;/p&gt;

&lt;p&gt;or you are suggesting that replicateBatch itself can be async?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In fact, it would be better to have a LedgerFragmentReplicator#replicateNextBatch rather than replicateBatch which works on a iterator of fragments.&lt;/p&gt;

&lt;p&gt;There&apos;s no need for a sync #replicate method, though the current #replicate impl should be moved to #replicateFragmentInternal and the others should be something like the following.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
void replicate(LedgerHandle lh, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; LedgerFragment ledgerFragment,
               VoidCallback ledgerFragmentCb, InetSocketAddress addr) {
    Set&amp;lt;LedgerFragment&amp;gt; fragments = splitIntoSubFragment(ledgerFragment, lh, batchSize);
    replicateNextBatch(lh, fragments, ledgerFragmentCb);
}

void replicateNextBatch(LedgerHandle lh, Iterator&amp;lt;LedgerFragment&amp;gt; fragments,
                        VoidCallback finishedCallback, InetSocketAddress addr) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fragments.hasNext()) {
        replicateFragmentInternal(lh, fragments.next(), addr,
             &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; VoidCallback() {
                 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; v, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx) {
                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != OK) {
                         finishedCallback.operationComplete(rc, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
                     } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                         replicateNextBatch(lh, fragments, finishedCallback, addr);
                     }
                 }
             });
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        finishedCallback.operationComplete(OK, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    }
}

&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void replicateFragmentInternal(LedgerHandle lh, LedgerFragment fragment,
                                       InetSocketAddress addr, VoidCallback cb) {
    ....
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, the order of the parameters in splitIntoSubFragment is inconsistent with replicate(), they should be the same&lt;/p&gt;

</comment>
                            <comment id="13469565" author="umamaheswararao" created="Thu, 4 Oct 2012 19:06:52 +0100"  >&lt;p&gt;Thanks a lot, Ivan for the review!&lt;br/&gt;
I have attached a patch which addresses your comments.&lt;/p&gt;</comment>
                            <comment id="13470351" author="ikelly" created="Fri, 5 Oct 2012 15:27:40 +0100"  >&lt;p&gt;Committed as r1394542. Good work Uma&lt;/p&gt;</comment>
                            <comment id="13470803" author="hudson" created="Sat, 6 Oct 2012 01:04:30 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #742 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/742/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/742/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-315&quot; title=&quot;Ledger entries should be replicated sequentially instead of parallel.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-315&quot;&gt;&lt;del&gt;BOOKKEEPER-315&lt;/del&gt;&lt;/a&gt;: Ledger entries should be replicated sequentially instead of parallel. (umamahesh via ivank) (Revision 1394542)&lt;/p&gt;

&lt;p&gt;     Result = UNSTABLE&lt;br/&gt;
ivank : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragment.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragmentReplicator.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerFragmentReplication.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestReplicationWorker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                            <outwardlinks description="contains">
                                        <issuelink>
            <issuekey id="12610365">BOOKKEEPER-419</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12610365">BOOKKEEPER-419</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12547793" name="BOOKKEEPER-315.patch" size="29699" author="umamaheswararao" created="Thu, 4 Oct 2012 19:06:52 +0100"/>
                            <attachment id="12546073" name="BOOKKEEPER-315.patch" size="27821" author="umamaheswararao" created="Fri, 21 Sep 2012 19:28:40 +0100"/>
                            <attachment id="12545795" name="BOOKKEEPER-315.patch" size="27912" author="umamaheswararao" created="Wed, 19 Sep 2012 21:17:26 +0100"/>
                            <attachment id="12545391" name="BOOKKEEPER-315.patch" size="22378" author="umamaheswararao" created="Mon, 17 Sep 2012 11:12:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Jun 2012 13:35:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240034</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxuq4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3052</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>