<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat May 16 23:30:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/BOOKKEEPER-258/BOOKKEEPER-258.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[BOOKKEEPER-258] CompactionTest failed</title>
                <link>https://issues.apache.org/jira/browse/BOOKKEEPER-258</link>
                <project id="12311293" key="BOOKKEEPER">Bookkeeper</project>
                    <description>&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;-------------------------------------------------------------------------------
Test set: org.apache.bookkeeper.bookie.CompactionTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 32.557 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testCompactionSmallEntryLogs(org.apache.bookkeeper.bookie.CompactionTest)  Time elapsed: 6.507 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.apache.bookkeeper.client.BKException$BKBookieHandleNotAvailableException
        at org.apache.bookkeeper.client.BKException.create(BKException.java:62)
        at org.apache.bookkeeper.client.LedgerHandle.readEntries(LedgerHandle.java:347)
        at org.apache.bookkeeper.bookie.CompactionTest.verifyLedger(CompactionTest.java:128)
        at org.apache.bookkeeper.bookie.CompactionTest.testCompactionSmallEntryLogs(CompactionTest.java:317)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at junit.framework.TestCase.runTest(TestCase.java:168)
        at junit.framework.TestCase.runBare(TestCase.java:134)
        at junit.framework.TestResult$1.protect(TestResult.java:110)
        at junit.framework.TestResult.runProtected(TestResult.java:128)
        at junit.framework.TestResult.run(TestResult.java:113)
        at junit.framework.TestCase.run(TestCase.java:124)
        at junit.framework.TestSuite.runTest(TestSuite.java:232)
        at junit.framework.TestSuite.run(TestSuite.java:227)
        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
        at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
        at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:78)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12555249">BOOKKEEPER-258</key>
            <summary>CompactionTest failed</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ikelly">Ivan Kelly</assignee>
                                    <reporter username="fpj">Flavio Junqueira</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 May 2012 00:11:52 +0100</created>
                <updated>Mon, 22 Oct 2012 15:50:18 +0100</updated>
                            <resolved>Sat, 26 May 2012 18:17:46 +0100</resolved>
                                                    <fixVersion>4.1.0</fixVersion>
                                    <component>bookkeeper-server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13275147" author="hustlmsp" created="Tue, 15 May 2012 03:48:46 +0100"  >&lt;p&gt;@Flavio, from the exception seems that there is no available bookies to connect. I tried to reproduce this issue by running &apos; while [ $? = 0 ]; do mvn test -Dtest=CompactionTest; done &apos;. but there is no failure for 15 minutes. I will try to run it longer time. &lt;/p&gt;

&lt;p&gt;in additional to it, could you provide more details about this, for example any logs?&lt;/p&gt;</comment>
                            <comment id="13275160" author="fpj" created="Tue, 15 May 2012 04:50:40 +0100"  >&lt;p&gt;Hi Sijie, I got it while checking &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-145&quot; title=&quot;Put notice and license file for distributed binaries in SVN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-145&quot;&gt;&lt;del&gt;BOOKKEEPER-145&lt;/del&gt;&lt;/a&gt;, but I don&apos;t think it is related to the patch. Unfortunately, I was not logging so I only had the exception. I&apos;ll also see if I can reproduce it.&lt;/p&gt;</comment>
                            <comment id="13275181" author="hustlmsp" created="Tue, 15 May 2012 06:10:44 +0100"  >&lt;p&gt;I have reproduced the issue by running &apos;while [ $? = 0 ]; do mvn test -Dtest=CompactionTest; done &apos; with logging. but I failed to upload the error log seems that the jira system has some problems. I attached parts of logging infos as below.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-05-15 12:53:16,530 - INFO  - [Hashed wheel timer #5:PerChannelBookieClient@438] - Disconnected from bookie: /10.82.129.91:5000
2012-05-15 12:53:16,531 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 5 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,566 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 5 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,567 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 0 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,567 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 0 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,567 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 1 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,567 - INFO  - [main:BookKeeperClusterTestCase@92] - TearDown
2012-05-15 12:53:16,567 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 1 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,568 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 2 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,568 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 2 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,568 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 3 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,568 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 3 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,568 - ERROR - [pool-28-thread-1:PerChannelBookieClient$5@352] - Could not write  request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: 4 ledger-id: 4 bookie: /10.82.129.91:5000
2012-05-15 12:53:16,569 - ERROR - [pool-28-thread-1:PendingReadOp@114] - Error: Bookie handle is not available &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; reading entry: 4 ledgerId: 4 from bookie: /10.  82.129.91:5000
2012-05-15 12:53:16,575 - INFO  - [ProcessThread(sid:0 cport:-1)::PrepRequestProcessor@466] - Processed session termination &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sessionid: 0x1374ed7ba800001
2012-05-15 12:53:16,576 - INFO  - [main:ZooKeeper@679] - Session: 0x1374ed7ba800001 closed
2012-05-15 12:53:16,576 - INFO  - [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1000] - Closed socket connection &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; client /fe80:0:0:0:0:0:0:1%1:58923   which had sessionid 0x1374ed7ba800001
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13275194" author="hustlmsp" created="Tue, 15 May 2012 06:41:45 +0100"  >&lt;p&gt;looked at the logging messages, seems that it is a race in channel timeout (which is introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-23&quot; title=&quot;Timeout requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-23&quot;&gt;&lt;del&gt;BOOKKEEPER-23&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void readEntry(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ledgerId, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; entryId, ReadEntryCallback cb, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; ctx) {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CompletionKey key = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompletionKey(ledgerId, entryId);
        readCompletions.put(key, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReadCompletion(cb, ctx));

        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; totalHeaderSize = 4 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the length of the packet
&lt;/span&gt;                              + 4 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; request type
&lt;/span&gt;                              + 8 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; ledgerId
&lt;/span&gt;                              + 8; &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; entryId
&lt;/span&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;{
            ChannelBuffer tmpEntry = channel.getConfig().getBufferFactory().getBuffer(totalHeaderSize);
            tmpEntry.writeInt(totalHeaderSize - 4); 

            tmpEntry.writeInt(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PacketHeader(BookieProtocol.CURRENT_PROTOCOL_VERSION,
                                               BookieProtocol.READENTRY, BookieProtocol.FLAG_NONE).toInt());
            tmpEntry.writeLong(ledgerId);
            tmpEntry.writeLong(entryId);

            ChannelFuture &lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt; = channel.write(tmpEntry);
            &lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt;.addListener(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ChannelFutureListener() {
                @Override
                &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(ChannelFuture &lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;future&lt;/span&gt;.isSuccess()) {
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                            LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Successfully wrote request &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reading entry: &quot;&lt;/span&gt; + entryId + &lt;span class=&quot;code-quote&quot;&gt;&quot; ledger-id: &quot;&lt;/span&gt;
                                                            + ledgerId + &lt;span class=&quot;code-quote&quot;&gt;&quot; bookie: &quot;&lt;/span&gt; + channel.getRemoteAddress());
                        }
                    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                        errorOutReadKey(key);
                    }
                }
            });
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(Throwable e) {
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Read entry operation failed&quot;&lt;/span&gt;, e);
            errorOutReadKey(key);
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in PerChannelBookieClient#readEntry, it first added CompletionKey and ReadCompletion in readCompletions queue and then write the request to bookie server.&lt;/p&gt;

&lt;p&gt;If the channel timeout happened (in CompactionTest there is a time period waiting for compaction finished, so there are no activities in that channel, a timeout would happen), it will try to error out all pending requests.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Disconnected from bookie: &quot;&lt;/span&gt; + addr);
        errorOutOutstandingEntries(); &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;-- here to error all pending requests.
&lt;/span&gt;        channel.close();
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;) {
            state = ConnectionState.DISCONNECTED;
        }

        &lt;span class=&quot;code-comment&quot;&gt;// we don&apos;t want to reconnect right away. If someone sends a request to
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; address, we will reconnect.
&lt;/span&gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;did a summary of this issue, the read operations are failed due to a channel timeout. the channel timeout is because there is no activities on the channel.&lt;/p&gt;</comment>
                            <comment id="13275203" author="hustlmsp" created="Tue, 15 May 2012 07:02:30 +0100"  >&lt;p&gt;the timeout mechanism deployed in &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-23&quot; title=&quot;Timeout requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-23&quot;&gt;&lt;del&gt;BOOKKEEPER-23&lt;/del&gt;&lt;/a&gt; is to use Netty&apos;s ReadTimeoutHandler, which monitors a connection rather than an individual messages. this mechanism is quite simple and useful when the traffic is continuous. but the side-effect of such mechanism is if the traffic arrives per timeout interval. these requests would be failed by mistake when connection timeout.&lt;/p&gt;

&lt;p&gt;I don&apos;t think we have good idea to handle it using ReadTimeoutHandler unless employing new timeout mechanism for individual messages like in Hedwig Client. Because the channel timeout behavior is in Netty, we have no control on it. If the connection timeouts, the channel would be closed by Netty.&lt;/p&gt;

&lt;p&gt;From the Netty mailist ( &lt;a href=&quot;http://lists.jboss.org/pipermail/netty-users/2010-August/003088.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lists.jboss.org/pipermail/netty-users/2010-August/003088.html&lt;/a&gt; ), modifying pipeline is relatively an expensive operation, so it is expensive to set a new ReadTimeoutHandler for every single write to avoid the above issue.&lt;/p&gt;

&lt;p&gt;So I suggested that we added a configuration setting to disable readTimeout for the test, and we needed a new jira to discuss a more robust timeout mechanism. &lt;/p&gt;</comment>
                            <comment id="13275484" author="ikelly" created="Tue, 15 May 2012 11:36:29 +0100"  >&lt;p&gt;Why does the connection timing out cause a problem though? It should reconnect the next time a request comes in. This error indicates to me that the read request itself is timing out, which means the client is making a request and of receiving a response for the length of the readTimeout. This is bad, and indicates that the serverside is hung. Does the compaction block client requests from completing?&lt;/p&gt;</comment>
                            <comment id="13276593" author="hustlmsp" created="Wed, 16 May 2012 09:35:26 +0100"  >&lt;p&gt;I did set readTimeout to a large value to disable readTimeout during testing. and I ran &quot; while [ $? = 0 ]; do mvn test -Dtest=CompactionTest &amp;gt;&amp;gt; compaction.log; done &quot; for several hours, it doesn&apos;t reproduce the issue.&lt;/p&gt;</comment>
                            <comment id="13276601" author="ikelly" created="Wed, 16 May 2012 09:44:05 +0100"  >&lt;p&gt;This indicates that compaction is causing big GC waits though, or something similar, which is bad. We should run this test with profiling on to see what GC is doing.&lt;/p&gt;</comment>
                            <comment id="13276607" author="hustlmsp" created="Wed, 16 May 2012 09:53:38 +0100"  >&lt;p&gt;@Ivan&lt;/p&gt;

&lt;p&gt;to explain why readTimeout cause this issue. we had to clarify two things, 1) how readTimeout works? 2) how the test runs.&lt;/p&gt;

&lt;p&gt;for first thing, from Netty documents (&lt;a href=&quot;http://docs.jboss.org/netty/3.1/api/org/jboss/netty/handler/timeout/ReadTimeoutHandler.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.jboss.org/netty/3.1/api/org/jboss/netty/handler/timeout/ReadTimeoutHandler.html&lt;/a&gt;). The timeout happened when no data was read within a certain of period time.&lt;/p&gt;

&lt;p&gt;for second thing, CompactionTest#testCompactionSmallEntryLogs ran as below:&lt;br/&gt;
1) add several messages to bookkeeper. (so the connection will be established to bookie server)&lt;br/&gt;
2) delete ledgers and sleep to wait for GC. the sleep interval is &lt;/p&gt;
{MajorCompactionInterval + GcWaitTime}
&lt;p&gt;, which is 5 seconds, equals to ReadTimeout (is also 5 seconds). so during 5 seconds, there is no activities. The channel might be time out after the sleep interval.&lt;br/&gt;
3) read entries to verify them.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

        client.connectIfNeededAndDoOp(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericCallback&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;&amp;gt;() {
            @Override
            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void operationComplete(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rc, &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; result) {

                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != BKException.Code.OK) {
                    cb.readEntryComplete(rc, ledgerId, entryId, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, ctx);
                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
                }   
                client.readEntry(ledgerId, entryId, cb, ctx);
            }   
        }); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the code indicated above, the channel is only checked when calling client.connectIfNeededAndDoOp. If  the channel is not set to disconnected, the client.readEntry will be called to send requests. After client.readEntry put the completion keys in completion pending queue, the channel timeout happened (there is no data read from channel, and the time has been up to 5 seconds due to sleep), all those requests would be error out.&lt;/p&gt;


&lt;p&gt;For continuous traffic, it is OK because there is data to read on the channel. But if the traffic arrives in readtimeout interval, there is no data to read for readtimeout interval, the channel has to be closed due to readtimeout.&lt;/p&gt;

&lt;p&gt;For more, the timeout callback is triggered by Netty. so we have no idea that when the timeout callback will be triggered. So it is difficult to guarantee the readEntry/addEntry operations be executed atomically before/after timeout callback.  &lt;/p&gt;</comment>
                            <comment id="13276615" author="ikelly" created="Wed, 16 May 2012 10:21:23 +0100"  >&lt;p&gt;ah, so it&apos;s a race between the check of connection state and the timeout. If the timeout occurs between the check for being connected, and the op being done, then we get this error.&lt;/p&gt;

&lt;p&gt;Im not sure how to fix this nicely. I need to think about it.&lt;/p&gt;</comment>
                            <comment id="13277883" author="ikelly" created="Thu, 17 May 2012 16:14:41 +0100"  >&lt;p&gt;This patch takes a different approach. I keep track of whether there has been any request on the channel when we receive a read timeout. If there is no unacked request, do not disconnect, if I timeout waiting for a response, disconnect (the bookie is down or unresponsive).&lt;/p&gt;</comment>
                            <comment id="13277894" author="ikelly" created="Thu, 17 May 2012 16:34:58 +0100"  >&lt;p&gt;This is still failing after about 30 minutes of running. Fix must be incomplete.&lt;/p&gt;</comment>
                            <comment id="13278416" author="hustlmsp" created="Fri, 18 May 2012 00:54:23 +0100"  >&lt;p&gt;the problem of the new patch here is there is no synchronization between calling ctx.getChannel().disconnect() and channlDisconnected() is called. so the read operations would have chances to be executed after you called ctx.getChannel().diconnect().&lt;/p&gt;</comment>
                            <comment id="13278713" author="ikelly" created="Fri, 18 May 2012 11:52:39 +0100"  >&lt;p&gt;Another new approach. Now I don&apos;t timeout the whole channel, just the individual requests on the channel. This means that a timeout can&apos;t kill the channel half way through a request. &lt;/p&gt;</comment>
                            <comment id="13278791" author="ikelly" created="Fri, 18 May 2012 14:09:32 +0100"  >&lt;p&gt;After running for 2 hours, no failures, so i&apos;d consider this last fix to be good.&lt;/p&gt;</comment>
                            <comment id="13279983" author="hustlmsp" created="Mon, 21 May 2012 07:39:44 +0100"  >&lt;p&gt;@Ivan, the patch seems good to me. I was thinking that is there any side effects in this approach. You don&apos;t close the channel when first read timeout. If another &lt;/p&gt;
{readTimeout}
&lt;p&gt; seconds goes again and no read activities came in, will the readTimeout be triggered again? should we add another test case for such case?&lt;/p&gt;
</comment>
                            <comment id="13280839" author="ikelly" created="Tue, 22 May 2012 10:35:00 +0100"  >&lt;p&gt;The ReadTimeoutHandler sets the timeout again after triggering the exceptionCaught callback.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.grepcode.com/file/repo1.maven.org/maven2/org.jboss.netty/netty/3.2.4.Final/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.grepcode.com/file/repo1.maven.org/maven2/org.jboss.netty/netty/3.2.4.Final/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In terms of sideeffects, there shouldn&apos;t be any. The Channel will stay around, but any ledger handle using it will stop using it, once write or read requests have been timed out. The channel will eventually go away. At this point, there&apos;ll be no outstanding requests, so nothing will happen to the client. If there are outstanding requests, they&apos;ll simply be errored out. &lt;/p&gt;
</comment>
                            <comment id="13282155" author="hustlmsp" created="Thu, 24 May 2012 04:19:13 +0100"  >&lt;p&gt;Thanks Ivan for explanation. The patch looks good to me. +1&lt;/p&gt;

&lt;p&gt;@Flavio, could you take a look at this patch and give your opinion on it?&lt;/p&gt;</comment>
                            <comment id="13282285" author="fpj" created="Thu, 24 May 2012 12:29:43 +0100"  >&lt;p&gt;I don&apos;t fully understand the consequences of removing &quot;ctx.getChannel().disconnect();&quot; in this patch. Can we get sockets lingering over if we don&apos;t call disconnect? Could you guys please clarify?&lt;/p&gt;</comment>
                            <comment id="13282598" author="ikelly" created="Thu, 24 May 2012 17:25:03 +0100"  >&lt;p&gt;The removal of the disconnect means that the channel will not immediately be closed on a read timeout. If anything is subsequently written to the socket, it will timeout. Se 4.2.3.5 of &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;. From a quick test I did of this on one of our clusters, the retransmits are exhausted after about 15 minutes. &lt;/p&gt;

&lt;p&gt;So the upshot of this is that the channel may stick around for 15 minutes after failure, even though any requests to the socket will be failed after readTimeout. In practice, after the read timeout occurs on the socket, no new requests will be sent to the socket, as it should have been removed from the ensemble of the writing ledger. &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://tools.ietf.org/html/rfc1122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tools.ietf.org/html/rfc1122&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13282694" author="fpj" created="Thu, 24 May 2012 21:52:37 +0100"  >&lt;p&gt;I&apos;m a bit confused about the semantics of that exception. This page:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.jboss.org/netty/3.2/api/org/jboss/netty/handler/timeout/ReadTimeoutHandler.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.jboss.org/netty/3.2/api/org/jboss/netty/handler/timeout/ReadTimeoutHandler.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;says: Raises a ReadTimeoutException when no data was read within a certain period of time. We don&apos;t do heartbeats, so the absence of data to read does not necessarily imply that the bookie is gone.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If anything is subsequently written to the socket, it will timeout.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not sure how you&apos;re drawing this conclusion, Ivan.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;even though any requests to the socket will be failed after readTimeout. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Same here, I&apos;m not sure how we can guarantee this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In practice, after the read timeout occurs on the socket, no new requests will be sent to the socket, as it should have been removed from the ensemble of the writing ledger.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is it guaranteed that after a read timeout exception, a new attempt to write to the socket will fail? The description of the read timeout exception does not seem to imply that the socket has gone broken once such an exception is thrown.  &lt;/p&gt;</comment>
                            <comment id="13283213" author="ikelly" created="Fri, 25 May 2012 09:25:54 +0100"  >&lt;blockquote&gt;&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;If anything is subsequently written to the socket, it will timeout. &lt;/p&gt;&lt;/blockquote&gt; I&apos;m not sure how you&apos;re drawing this conclusion, Ivan.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Section 4.2.3.5 of the TCP rfc&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; states this. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c)  When the number of transmissions of the same segment&lt;br/&gt;
     reaches a threshold R2 greater than R1, close the&lt;br/&gt;
     connection.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;R2 &amp;amp; R1 are defined by the kernel. they are 15 &amp;amp; 3 respectively on the machines I tested on.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;even though any requests to the socket will be failed after readTimeout. &lt;/p&gt;&lt;/blockquote&gt; Same here, I&apos;m not sure how we can guarantee this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The requests on the sockets are stored in addCompletions and readCompletions. This patch errors out the completions on receiving a ReadTimeoutException.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;blockquote&gt;&lt;p&gt; In practice, after the read timeout occurs on the socket, no new requests will be sent to the socket, as it should have been removed from the ensemble of the writing ledger. &lt;/p&gt;&lt;/blockquote&gt; Is it guaranteed that after a read timeout exception, a new attempt to write to the socket will fail? The description of the read timeout exception does not seem to imply that the socket has gone broken once such an exception is thrown. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The ReadTimeoutException is simply a notification that nothing has been read from the channel in the timeout period. It does nothing to modify the state of the channel/socket&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://tools.ietf.org/html/rfc1122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tools.ietf.org/html/rfc1122&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.grepcode.com/file/repo1.maven.org/maven2/org.jboss.netty/netty/3.2.4.Final/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.grepcode.com/file/repo1.maven.org/maven2/org.jboss.netty/netty/3.2.4.Final/org/jboss/netty/handler/timeout/ReadTimeoutHandler.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13283249" author="hustlmsp" created="Fri, 25 May 2012 10:35:58 +0100"  >&lt;p&gt;&amp;gt; says: Raises a ReadTimeoutException when no data was read within a certain period of time. We don&apos;t do heartbeats, so the absence of data to read does not necessarily imply that the bookie is gone.&lt;/p&gt;

&lt;p&gt;yes. you are right.&lt;/p&gt;

&lt;p&gt;as Ivan indicated in the previous comment, the ReadTimeoutException is a simple notification to tell the client that there is no data read in the timeout period. And this readTimeout notification is running periodically every $&lt;/p&gt;
{readTimeout}
&lt;p&gt; seconds when there is no data read from channel. (the channel would still be alive.)&lt;/p&gt;

&lt;p&gt;the issue to do &apos;ctx.getChannel().disconnect()&apos; when read timeout happened is that it would fail those requests issued right at that time by mistake. Checking the request time when read timeout instead of killing the channel would avoid this mistake.&lt;/p&gt;

</comment>
                            <comment id="13283492" author="fpj" created="Fri, 25 May 2012 15:43:10 +0100"  >&lt;p&gt;Ivan and I discussed offline and Ivan proposed to disconnect from BookieWatcher once the client determines that a bookie has failed (through ZooKeeper). Cancelling this patch until Ivan uploads a new one.&lt;/p&gt;</comment>
                            <comment id="13283570" author="ikelly" created="Fri, 25 May 2012 17:17:21 +0100"  >&lt;p&gt;Same as before, but closes channels when it sees bookies go away in /ledgers/available&lt;/p&gt;</comment>
                            <comment id="13283571" author="ikelly" created="Fri, 25 May 2012 17:18:21 +0100"  >&lt;p&gt;Forgot to rebase before old patch. This one has rebase&lt;/p&gt;</comment>
                            <comment id="13283596" author="fpj" created="Fri, 25 May 2012 17:55:58 +0100"  >&lt;p&gt;+1, it is good for me. I have also verified that tests run fine.&lt;/p&gt;

&lt;p&gt;Sijie, what do you say?&lt;/p&gt;</comment>
                            <comment id="13283866" author="hustlmsp" created="Sat, 26 May 2012 02:27:09 +0100"  >&lt;p&gt;new patch looks good to me too. closing channels when bookies go away is a good idea. +1&lt;/p&gt;</comment>
                            <comment id="13284019" author="hustlmsp" created="Sat, 26 May 2012 18:17:05 +0100"  >&lt;p&gt;committed as r1342933.&lt;/p&gt;</comment>
                            <comment id="13284021" author="hustlmsp" created="Sat, 26 May 2012 18:17:46 +0100"  >&lt;p&gt;Thanks Ivan for the work.&lt;/p&gt;</comment>
                            <comment id="13284024" author="hudson" created="Sat, 26 May 2012 18:37:31 +0100"  >&lt;p&gt;Integrated in bookkeeper-trunk #529 (See &lt;a href=&quot;https://builds.apache.org/job/bookkeeper-trunk/529/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/bookkeeper-trunk/529/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/BOOKKEEPER-258&quot; title=&quot;CompactionTest failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;BOOKKEEPER-258&quot;&gt;&lt;del&gt;BOOKKEEPER-258&lt;/del&gt;&lt;/a&gt;: CompactionTest failed (ivank via sijie) (Revision 1342933)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
sijie : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestProtoVersions.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12529739" name="BOOKKEEPER-258.diff" size="6980" author="ikelly" created="Fri, 25 May 2012 17:18:21 +0100"/>
                            <attachment id="12529738" name="BOOKKEEPER-258.diff" size="30008" author="ikelly" created="Fri, 25 May 2012 17:17:21 +0100"/>
                            <attachment id="12528036" name="BOOKKEEPER-258.diff" size="3148" author="ikelly" created="Fri, 18 May 2012 11:52:39 +0100"/>
                            <attachment id="12527846" name="BOOKKEEPER-258.diff" size="4320" author="ikelly" created="Thu, 17 May 2012 16:14:41 +0100"/>
                            <attachment id="12527591" name="BOOKKEEPER-258.diff" size="750" author="hustlmsp" created="Wed, 16 May 2012 09:35:26 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 May 2012 02:48:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>250345</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy4rx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61679</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>