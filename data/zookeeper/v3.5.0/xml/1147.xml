<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:45:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1147/ZOOKEEPER-1147.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1147] Add support for local sessions</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1147</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;This improvement is in the bucket of making ZooKeeper work at a large scale. We are planning on having about a 1 million clients connect to a ZooKeeper ensemble through a set of 50-100 observers. Majority of these clients are read only - ie they do not do any updates or create ephemeral nodes.&lt;/p&gt;

&lt;p&gt;In ZooKeeper today, the client creates a session and the session creation is handled like any other update. In the above use case, the session create/drop workload can easily overwhelm an ensemble. The following is a proposal for a &quot;local session&quot;, to support a larger number of connections.&lt;/p&gt;

&lt;p&gt;1.       The idea is to introduce a new type of session - &quot;local&quot; session. A &quot;local&quot; session doesn&apos;t have a full functionality of a normal session.&lt;br/&gt;
2.       Local sessions cannot create ephemeral nodes.&lt;br/&gt;
3.       Once a local session is lost, you cannot re-establish it using the session-id/password. The session and its watches are gone for good.&lt;br/&gt;
4.       When a local session connects, the session info is only maintained on the zookeeper server (in this case, an observer) that it is connected to. The leader is not aware of the creation of such a session and there is no state written to disk.&lt;br/&gt;
5.       The pings and expiration is handled by the server that the session is connected to.&lt;/p&gt;

&lt;p&gt;With the above changes, we can make ZooKeeper scale to a much larger number of clients without making the core ensemble a bottleneck.&lt;/p&gt;

&lt;p&gt;In terms of API, there are two options that are being considered&lt;br/&gt;
1. Let the client specify at the connect time which kind of session do they want.&lt;br/&gt;
2. All sessions connect as local sessions and automatically get promoted to global sessions when they do an operation that requires a global session (e.g. creating an ephemeral node)&lt;/p&gt;

&lt;p&gt;Chubby took the approach of lazily promoting all sessions to global, but I don&apos;t think that would work in our case, where we want to keep sessions which never create ephemeral nodes as always local. Option 2 would make it more broadly usable but option 1 would be easier to implement.&lt;/p&gt;

&lt;p&gt;We are thinking of implementing option 1 as the first cut. There would be a client flag, IsLocalSession (much like the current readOnly flag) that would be used to determine whether to create a local session or a global session.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12517954">ZOOKEEPER-1147</key>
            <summary>Add support for local sessions</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thawan">Thawan Kooburat</assignee>
                                    <reporter username="vishal.k">Vishal Kathuria</reporter>
                        <labels>
                            <label>api-change</label>
                            <label>scaling</label>
                    </labels>
                <created>Thu, 4 Aug 2011 20:06:30 +0100</created>
                <updated>Tue, 24 Dec 2013 00:10:40 +0000</updated>
                            <resolved>Wed, 9 Oct 2013 22:19:52 +0100</resolved>
                                    <version>3.3.3</version>
                                    <fixVersion>3.5.0</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>16</watches>
                                    <timeoriginalestimate seconds="3024000">840h</timeoriginalestimate>
                            <timeestimate seconds="3024000">840h</timeestimate>
                                        <comments>
                            <comment id="13135609" author="vishal.k" created="Wed, 26 Oct 2011 02:39:29 +0100"  >&lt;p&gt;I am just starting working on this for 3.5, so seeking comments. &lt;br/&gt;
I am defining the proposed changes in terms of the C library, but they can easily be translated into corresponding Java library changes. The only change to the API is that you have to request this new optimization while creating your client (since I wanted to not change the behavior for existing clients). The optimization will delay the creation of the persistent (or global) session until this client creates an ephemeral node for the first time.&lt;/p&gt;

&lt;p&gt;1. zoo_init will take a flag indicating delayed persistent session creation.&lt;br/&gt;
2. Server will look at this flag and create a session that is local to the server and not send a request to the leader.&lt;br/&gt;
3. Server will expose a new operation - upgradeToPersistent - that will upgrade a local session to a persistent session. This is the first time that the leader will become aware of this session (assuming the client is connected to a follower)&lt;br/&gt;
4. If there is a zoo_create with ephemeral node, the client will send a upgradeToPersistent request to the server before sending the create ephemeral node request. This request would be async, so I don&apos;t expect it to delay the creation of ephemeral node much.&lt;/p&gt;

&lt;p&gt;We can extend the behavior to be similar to chubby by having the client or the server execute upgradeToPersistent after a random time interval.&lt;/p&gt;
</comment>
                            <comment id="13534673" author="fanster.z" created="Tue, 18 Dec 2012 05:44:41 +0000"  >&lt;p&gt;This is great, create session is costly in zookeeper.&lt;br/&gt;
if there is any progress on the feature.&lt;/p&gt;</comment>
                            <comment id="13535264" author="thawan" created="Tue, 18 Dec 2012 20:16:52 +0000"  >&lt;p&gt;This will be the next item that we are going to push upstream after &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1504&quot; title=&quot;Multi-thread NIOServerCnxn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1504&quot;&gt;ZOOKEEPER-1504&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1505&quot; title=&quot;Multi-thread CommitProcessor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1505&quot;&gt;&lt;del&gt;ZOOKEEPER-1505&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13536939" author="fanster.z" created="Thu, 20 Dec 2012 10:52:43 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;quote&amp;#93;&lt;/span&gt;&lt;br/&gt;
1. zoo_init will take a flag indicating delayed persistent session creation.&lt;br/&gt;
2. Server will look at this flag and create a session that is local to the server and not send a request to the leader.&lt;br/&gt;
3. Server will expose a new operation - upgradeToPersistent - that will upgrade a local session to a persistent session. This is the first time that the leader will become aware of this session (assuming the client is connected to a follower)&lt;br/&gt;
4. If there is a zoo_create with ephemeral node, the client will send a upgradeToPersistent request to the server before sending the create ephemeral node request. This request would be async, so I don&apos;t expect it to delay the creation of ephemeral node much.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;quote&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;There is a problem I can see.&lt;br/&gt;
If A is a local session, now A wants to create a ephemeral node. A sends upgradeToPersistent async and create /eph_1 to server 1, then A is disconnected with server 1, and try to renew session on server 2. If leader receives the message as follows: renew,  upgradeToPersistent, create /eph_1&#65292;then A will first get a session timeout, and finally /eph_1 is created which is unexpected. &lt;/p&gt;</comment>
                            <comment id="13537705" author="thawan" created="Fri, 21 Dec 2012 06:08:06 +0000"  >&lt;p&gt;What we actually implemented and being used in our production is slightly different than what was described previously.&lt;/p&gt;

&lt;p&gt;1. There is no new client-side interface.  All session are created as local session by default (no CreateSession request is sent to the leader). &lt;br/&gt;
2. When client try to create an ephemeral node. The follower/leader will upgrade this session to a global session by issuing CreateSession request before issuing create ephemeral node. &lt;br/&gt;
3. The client retains the same sessionId when upgrading from local to global session. Each server use serverId as sessionId prefix.  &lt;/p&gt;

&lt;p&gt;We found only a few cases that the application really need global session by default. We either instruct the programmer to create ephemeral node on connection establish or turn off this feature on the server-side if possible. &lt;/p&gt;

&lt;p&gt;Jacky007, I think the system still behave correctly in the scenario that you described, since that ephemeral node will eventually get removed after the session timeout.    &lt;/p&gt;
</comment>
                            <comment id="13537719" author="fanster.z" created="Fri, 21 Dec 2012 07:08:43 +0000"  >&lt;p&gt;Yeah, this is the best way to implement this. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1. There is no new client-side interface. All session are created as local session by default (no CreateSession request is sent to the leader). &lt;br/&gt;
2. When client try to create an ephemeral node. The follower/leader will upgrade this session to a global session by issuing CreateSession request before issuing create ephemeral node. &lt;br/&gt;
3. The client retains the same sessionId when upgrading from local to global session. Each server use serverId as sessionId prefix.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But I think it has the problem I have mentioned.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;since that ephemeral node will eventually get removed after the session timeout&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ephemeral node /eph_1 will get removed finally, but for A, it will get a session expire firstly. It is different form the original semantics which says when I get a session expire the ephemeral nodes have been removed already.&lt;/p&gt;</comment>
                            <comment id="13539402" author="fanster.z" created="Tue, 25 Dec 2012 14:11:07 +0000"  >&lt;p&gt;Did I misunderstanding your description, please let me know &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13542673" author="thawan" created="Thu, 3 Jan 2013 02:49:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fanster.z&quot; class=&quot;user-hover&quot; rel=&quot;fanster.z&quot;&gt;Jacky007&lt;/a&gt;, your understanding is correct. The semantic is broken only for A due to race condition, but the rest of the system will see a valid ordering of A events. &lt;/p&gt;

&lt;p&gt;I don&apos;t think this impose much of a problem since the ephemeral node will eventually get removed. Any applications (eg. leader election, distributed locking) will make progress as long as that property hold. &lt;/p&gt;

&lt;p&gt;Let me know if I overlooked some usage scenarios. We have migrated a lot of our internal applications to use deployment with local session and we haven&apos;t seen incompatibility issue caused by the specific problem that you pointed out yet.   &lt;/p&gt;

</comment>
                            <comment id="13551797" author="thawan" created="Sat, 12 Jan 2013 04:14:02 +0000"  >&lt;p&gt;The patch is very close to our internal branch.  The main different is that we fixed &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1496&quot; title=&quot;Ephemeral node not getting cleared even after client has exited&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1496&quot;&gt;&lt;del&gt;ZOOKEEPER-1496&lt;/del&gt;&lt;/a&gt; is a slightly different way and a lot of synchronized method was removed in our internal branch.&lt;/p&gt;</comment>
                            <comment id="13551804" author="thawan" created="Sat, 12 Jan 2013 04:28:06 +0000"  >&lt;p&gt;Review board: &lt;a href=&quot;https://reviews.apache.org/r/8935/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8935/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13551810" author="hadoopqa" created="Sat, 12 Jan 2013 04:59:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12564551/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12564551/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1427034.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1332//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13553582" author="mahadev" created="Tue, 15 Jan 2013 08:06:52 +0000"  >&lt;p&gt;I started reviewing through the patch but I think we will need to add a little more details on the design to make further progress on this. There are quite a few cases that come up when we think about this, so a little more details on the design will go a long way.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt; can we add some comments on the design (dont want to make too laborious an effort) but something which explains the whole end to end design - things like:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;when is the session created&lt;/li&gt;
	&lt;li&gt;does the create of ephemeral node wait on the return for create session (at the follower)&lt;/li&gt;
	&lt;li&gt;what happens if the create for session is sent at server A and the client disconnects to some other server B which ends up sending it again and then disconnects and connects back to server A.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;what happens to the local session once the global session is created?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Would you be able to write a short design for this (couple of paragraphs should suffice as a comment on the jira)?&lt;/p&gt;</comment>
                            <comment id="13554488" author="thawan" created="Tue, 15 Jan 2013 23:01:31 +0000"  >&lt;p&gt;Session creation flow:&lt;br/&gt;
The flow for local session creation is similar to global session flow. As part of processing ConnectionRequest, a new sessionId is generated and added to local session tracker right away.  The local create session request is then send down the request pipeline.   Because this is marked as local session request, it wasn&#8217;t send to the leader and it only gets processed locally. Similar to global session, when the request reaches the final request processor, the session added to session tracker and ConnectResponse is sent back to the client to finish session initialization. &lt;/p&gt;

&lt;p&gt;Session Upgrading:&lt;br/&gt;
Follower/Leader/Observer RequestProcessor intercepts a client request before entering the pipeline. If it is a request to create an ephemeral node, it will generate a create session request and push it into the pipeline before the create node request without waiting for the create session request to complete. The session is considered a global session right away on that machine, so a subsequent create ephemeral node request won&#8217;t trigger upgrade sequence &lt;/p&gt;

&lt;p&gt;Session Validation:&lt;br/&gt;
When client try to reconnect, if the server found that it existing in the local session tracker, the client will reconnect right away. Otherwise, the follower/observer will have to send a revalidate packet to the leader to validate against global session. &lt;/p&gt;

&lt;p&gt;Answer to specific question:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When is the session created&lt;br/&gt;
In a current implementation it will try to create a local session when processing ConnectRequest and when createSession request reach FinalRequestProcessor.  The later one probably result in noop, but I am not sure about the reason behind this design.  &lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What happens if the create for session is sent at server A and the client disconnects to some other server B which ends up sending it again and then disconnects and connects back to server A.&lt;br/&gt;
When a client reconnects to B, its sessionId won&#8217;t exist in B&#8217;s local session tracker. So B will send validation packet. If CreateSession issued by A is committed before validation packet arrive the client will be able to connect. Otherwise, the client will get session expired because the quorum hasn&#8217;t know about this session yet. &lt;br/&gt;
If the client also tries to connect back to A again, the session is already removed from local session tracker. So A will need to send a validation packet to the leader. The outcome should be the same as B depending on the timing of the request. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Other note:&lt;br/&gt;
From our experience so far, application that use local session will see higher rate of session expire.  This is because automatic session failover is no longer available. So the application need to handle this graceful and recreate ZooKeeper handle. &lt;/p&gt;

&lt;p&gt;If the application don&apos;t want to do that, it can easily create an ephemeral node in order to upgrade to global session and get the automatic session failover like before. &lt;/p&gt;
</comment>
                            <comment id="13554819" author="mahadev" created="Wed, 16 Jan 2013 07:43:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt; this helps. Thanks for the information. I still have a couple of more questions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Will a read only client always get a session expiration if a disconnect happens even though its not tried all the other servers?&lt;/li&gt;
	&lt;li&gt;Is the local session id the same as global session id when its created (I mean as the long value)? If its the same I think we have a problem with the shifting of client between servers..&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;When a client reconnects to B, its sessionId won&#8217;t exist in B&#8217;s local session tracker. So B will send validation packet. If CreateSession issued by A is committed before validation packet arrive the client will be able to connect. Otherwise, the client will get session expired because the quorum hasn&#8217;t know about this session yet. If the client also tries to connect back to A again, the session is already removed from local session tracker. So A will need to send a validation packet to the leader. The outcome should be the same as B depending on the timing of the request.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13555673" author="thawan" created="Thu, 17 Jan 2013 00:37:18 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Will a read only client always get a session expiration if a disconnect happens even though its not tried all the other servers?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This could be future enhancement. Since we don&#8217;t change client library behavior, the client will see session expired when it connect to other servers within the quorum since the quorum don&apos;t know about this session. The optimization is that the client should try to reconnect back to the original server first if it know that it is a local session. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Is the local session id the same as global session id when its created?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Yes, a session retains the same ID when it is upgraded from local session to global session.  I think this is desirable. Can you elaborate why this may cause problem? &lt;/p&gt;</comment>
                            <comment id="13556316" author="mahadev" created="Thu, 17 Jan 2013 15:38:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes, a session retains the same ID when it is upgraded from local session to global session. I think this is desirable. Can you elaborate why this may cause problem?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes its desirable. Before I comment on what I think might be wrong, when does the server who has the local sessionid remove it from its data structures? Is it when it gets a create session in final request processor? Until then the session is  a local session? &lt;/p&gt;</comment>
                            <comment id="13556493" author="thawan" created="Thu, 17 Jan 2013 19:21:01 +0000"  >&lt;p&gt;I think I know where you are leading to. When a server try to upgrade a local session, it remove the session from local session list and add it to the global session list right away (Even before the CreateSession request is sent to the leader). So this server will know about this session while it is being upgraded. I am not sure if this design is intentional or a result of other bug fixes. From the perspective of this issue, a better way would be to add additional state when session is being upgraded (like isClosing()).  &lt;/p&gt;</comment>
                            <comment id="13557012" author="mahadev" created="Fri, 18 Jan 2013 07:16:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt; I thin the above scenario is ok. The only issue I think we have is the sensitive local sessions. Since we have had too many issues with disconnects and session expiry I think this might cause more issues than we already have. Is there something we can do here? I cant seem to find a way around it without doing client side changes.&lt;/p&gt;</comment>
                            <comment id="13557617" author="thawan" created="Fri, 18 Jan 2013 21:19:37 +0000"  >&lt;p&gt;Can you elaborate on the concern regarding disconnect and session expiry that local session may introduce?&lt;/p&gt;

&lt;p&gt;From my current perspective, the correctness of system is still preserve with the introduction of local sessions. The problem is that client behavior is not optimal at the moment for local session. For example, if a client know that it is only a local session,  it only need to retry to connect to the original server in the event of disconnect. If it is not successful, it can deliver session expire to application right away since no other servers will know about this session.  &lt;/p&gt;

&lt;p&gt;Without this optimization, client probably going to get session expired without be able to restore the session if the root cause of the disconnect is just a temporal network failure or operation timeout on the server side. However, for local session which doesn&apos;t have ephemeral nodes associated with the session, restoring the session isn&apos;t critical for most applications.       &lt;/p&gt;



&lt;p&gt;After more internal discussion regarding the session creation flow. We felt the current flow is probably not the right way to do it. However, the feature is very stable for several months now ,so making a major change may introduce a new bug. So we will let you guys decide which approach we want to take.   &lt;/p&gt;</comment>
                            <comment id="13579626" author="phunt" created="Sat, 16 Feb 2013 00:18:03 +0000"  >&lt;p&gt;My initial thoughts after a quick first pass:&lt;/p&gt;

&lt;p&gt;We should add docs as part of the patch.&lt;/p&gt;

&lt;p&gt;What&apos;s the reason for having the config option to disable local session upgrade? Did you see a specific need for this?&lt;/p&gt;

&lt;p&gt;Given some of the discussion above (more frequent expiry), it seems to me that we should make sessions global by default and provide an option to ZooKeeper(...) to enable local session usage. On the flip side making sessions local by default will result in everyone seeing an improvement w/o need for code changes (client side I&apos;m saying). That said, it seems that for most people global vs local session is not an issue. For the small subset of users where it is an issue they could enable the local session support via a parameter, a very simple code change for users on the client. Thoughts?&lt;/p&gt;

&lt;p&gt;The timeouts in the tests are too low in my experience. Use org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT unless there&apos;s some reason not to? (some of the hardware we run testing on is virtualized, can make things very slow)&lt;/p&gt;

&lt;p&gt;The change to watchertest - move this to it&apos;s own jira. We can can get that reviewed/committed quickly. Likely we need this for more than just trunk.&lt;/p&gt;</comment>
                            <comment id="13579629" author="hadoopqa" created="Sat, 16 Feb 2013 00:22:14 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12564551/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12564551/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1389//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13579681" author="thawan" created="Sat, 16 Feb 2013 02:24:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;What&apos;s the reason for having the config option to disable local session upgrade? Did you see a specific need for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In our largest deployment where we have a very large number of clients, we know that clients connecting via the observers is supposed to be local session only. So this is more like a safeguard against someone accidentally create lots of ephemeral nodes and global sessions.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Given some of the discussion above (more frequent expiry), it seems to me that we should make sessions global by default and provide an option to ZooKeeper(...) to enable local session usage. On the flip side making sessions local by default will result in everyone seeing an improvement w/o need for code changes (client side I&apos;m saying). That said, it seems that for most people global vs local session is not an issue. For the small subset of users where it is an issue they could enable the local session support via a parameter, a very simple code change for users on the client. Thoughts?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Vast majority of our applications works fine when they migrated onto our deployment that have local session enabled by default. However, explaining the subtle difference between local and global session to users is bit tricky. So I think for general use, local session can be disabled by default. &lt;/p&gt;

&lt;p&gt;I agree that it will be nice to have an explicit interface to request for global or local session. We didn&apos;t have immediate need to add this because the current workload is sufficient and doesn&apos;t impact performance that much. The current mechanism also backward compatible with older clients.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The timeouts in the tests are too low in my experience. Use org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT unless there&apos;s some reason not to? (some of the hardware we run testing on is virtualized, can make things very slow)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can increase that&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The change to watchertest - move this to it&apos;s own jira. We can can get that reviewed/committed quickly. Likely we need this for more than just trunk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Someone told me that there is a flag to disable random test order in junit. Anyway, I can move that into a separate jira. &lt;/p&gt;</comment>
                            <comment id="13579682" author="thawan" created="Sat, 16 Feb 2013 02:26:45 +0000"  >&lt;p&gt;nit: the current workload -&amp;gt; the current workaround&lt;/p&gt;</comment>
                            <comment id="13580927" author="thawan" created="Tue, 19 Feb 2013 00:47:00 +0000"  >&lt;p&gt;Rebase and fix comments&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use ConcurrentMap instead of ConccurentHashMap&lt;/li&gt;
	&lt;li&gt;Move WatcherTest fix to a separate patch&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13580929" author="hadoopqa" created="Tue, 19 Feb 2013 00:52:43 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12569875/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12569875/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1446831.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 31 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1393//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1393//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13580931" author="thawan" created="Tue, 19 Feb 2013 00:57:38 +0000"  >&lt;p&gt;Fix patch file creation&lt;/p&gt;</comment>
                            <comment id="13580949" author="hadoopqa" created="Tue, 19 Feb 2013 01:33:08 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12569877/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12569877/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1446831.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1395//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13581745" author="thawan" created="Tue, 19 Feb 2013 23:26:03 +0000"  >&lt;p&gt;use ClientBase.CONNECTION_TIMEOUT for connection timeout when possible. &lt;/p&gt;

&lt;p&gt;Only for LocalSessionRequestTest still use low connection timeout (4 seconds). This is because we need to wait until local session is expired by the server. Long session timeout will make this test run for a much longer time (2 mins vs 30 secs) &lt;/p&gt;</comment>
                            <comment id="13581777" author="hadoopqa" created="Wed, 20 Feb 2013 00:00:12 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570024/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570024/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1447621.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1399//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13581877" author="thawan" created="Wed, 20 Feb 2013 02:18:23 +0000"  >&lt;p&gt;Upload the correct file, and fix additional find bugs warnings &lt;/p&gt;</comment>
                            <comment id="13581903" author="hadoopqa" created="Wed, 20 Feb 2013 02:50:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570056/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570056/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1447982.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1401//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13591496" author="thawan" created="Sat, 2 Mar 2013 20:10:22 +0000"  >&lt;p&gt;Regarding checkSession() and setOwner() for LearnerSessionTracker. After read through the code again, I think the original intention is to be able to reject in-flight requests when local session expired. Currently, it is possible for in-flight request for an expired local session to go to the leader. However, this should not affect the correctness of the system since local session can only modify persistent znodes. &lt;/p&gt;

&lt;p&gt;So I think we should keep those logics in LearnerSessionTracker, then we can fix it in a separate jira.  &lt;/p&gt;</comment>
                            <comment id="13591510" author="hadoopqa" created="Sat, 2 Mar 2013 20:40:42 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571753/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571753/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1448007.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1416//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13595294" author="thawan" created="Wed, 6 Mar 2013 23:41:42 +0000"  >&lt;p&gt;Fixed a recently found bug that cause duplicate CreateSession request to be issued when local session upgrade was made by the learner. This doesn&apos;t affect the correctness but cause the quorum to see more txns than necessary.&lt;/p&gt;

&lt;p&gt;The root cause is that the request from the follower enter leader pipeline via ZooKeeperServer.submitRequest(). This cause the leader to perform session upgrade again. &lt;/p&gt;

&lt;p&gt;The fix is to submit request from the learner directly to PrepRequestProcessor. The session upgrade logic is moved to LeaderRequestProcessor.  Only the requests that the leader received directly from the clients will go through this processor.  &lt;/p&gt;</comment>
                            <comment id="13595385" author="hadoopqa" created="Thu, 7 Mar 2013 01:09:36 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12572440/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12572440/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1448007.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1424//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13638796" author="thawan" created="Tue, 23 Apr 2013 06:24:39 +0100"  >&lt;p&gt;Is there any additional change request for this patch other than the latest set of requests from Edward?. So I can create another revision and hopefully we can commit it. I would like to close this JIRA before moving on to other pending JIRA which is assigned to me.  &lt;/p&gt;</comment>
                            <comment id="13639947" author="thawan" created="Wed, 24 Apr 2013 02:30:22 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Rebase with current trunk (merge with dynamic config patch)&lt;/li&gt;
	&lt;li&gt;Address comments provided by Edward&lt;/li&gt;
	&lt;li&gt;Change error code due to conflict with trunk&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13639988" author="hadoopqa" created="Wed, 24 Apr 2013 03:07:24 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580207/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580207/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1463329.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1465//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13684025" author="rgs" created="Sat, 15 Jun 2013 03:02:11 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt;: how is this meant to work with a rolling update when enabling local sessions? If the leader doesn&apos;t have local sessions enabled then all writes from local sessions will fail with SessionExpired (because they&apos;ll be unknown to the leader) - right?&lt;/p&gt;

&lt;p&gt;The only way I could get a rolling update to work is with (something like) this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.itevenworks.net/~rgs/patches/0001-Add-support-to-enable-disable-sessions-validations.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.itevenworks.net/~rgs/patches/0001-Add-support-to-enable-disable-sessions-validations.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I.e.: adding a way to temporarily disable sessions validations whilst you are enabling local sessions on the cluster.&lt;br/&gt;
We should add some documentation about the right way to this. Thoughts? It would be nice to get this merged.&lt;/p&gt;</comment>
                            <comment id="13690011" author="thawan" created="Fri, 21 Jun 2013 05:21:33 +0100"  >&lt;p&gt;Ah...  Thanks for catching this.  We never have to perform upgrade on ensemble that use local session or the upgrade was short enough that we didn&apos;t noticed the problem. As you proposed, the upgrade path will require 2 rolling restarts to enable this feature.&lt;/p&gt;

&lt;p&gt;The patch that you proposed should work. I think it should be possible to just modify PrepRequestProcessor so that we can use local session validation path without actually turning on local session. This should make the patch smaller.  &lt;/p&gt;

&lt;p&gt;For additional safety, it might be better to use Java property to control this parameter. So the value survive server restarts in case there is a leader election during the upgrade.   &lt;/p&gt;
</comment>
                            <comment id="13697996" author="rgs" created="Tue, 2 Jul 2013 18:13:52 +0100"  >&lt;p&gt;fwiw, we are using this patch in prod at Twitter so it would be awesome to have this merged. Besides what I mentioned in my previous comment (having a way to do rolling upgrades to enable local sessions) is there anything else that&apos;s left to get this merged?&lt;/p&gt;</comment>
                            <comment id="13703085" author="fpj" created="Tue, 9 Jul 2013 10:23:51 +0100"  >&lt;p&gt;A few people have reviewed this patch in the past, so if anyone could +1 it, we can consider committing it. Otherwise, I&apos;ll review it as soon as I have a chance. I&apos;d like to have a look at it anyway before it gets in, but one or more +1 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mahadev&quot; class=&quot;user-hover&quot; rel=&quot;mahadev&quot;&gt;Mahadev konar&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro&quot; class=&quot;user-hover&quot; rel=&quot;eribeiro&quot;&gt;Edward Ribeiro&lt;/a&gt; would be helpful.&lt;/p&gt;</comment>
                            <comment id="13708569" author="hadoopqa" created="Mon, 15 Jul 2013 16:53:45 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12580207/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12580207/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1503101.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1517//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13762695" author="rgs" created="Tue, 10 Sep 2013 04:44:59 +0100"  >&lt;p&gt;ping? any progress to get this merged?&lt;/p&gt;</comment>
                            <comment id="13788987" author="mahadev" created="Tue, 8 Oct 2013 08:03:11 +0100"  >&lt;p&gt;Thawan/others,&lt;br/&gt;
 Sorry abt the delay on this patch. Just spent sometime reviewing the patch. It looks good to me. There is minor issues with applying the patch - just fixed that. We can run through hudson once and commit. &lt;/p&gt;</comment>
                            <comment id="13788989" author="mahadev" created="Tue, 8 Oct 2013 08:05:40 +0100"  >&lt;p&gt;Minor conflict with the current patch fails on applying with QuorumPeerMain.java - attaching a new one which fixes the conflict.&lt;/p&gt;</comment>
                            <comment id="13788991" author="mahadev" created="Tue, 8 Oct 2013 08:06:27 +0100"  >&lt;p&gt;The difference in size with the prev patch is mostly because of using git to generate the patch.&lt;/p&gt;</comment>
                            <comment id="13788998" author="mahadev" created="Tue, 8 Oct 2013 08:11:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj&quot; class=&quot;user-hover&quot; rel=&quot;fpj&quot;&gt;Flavio Junqueira&lt;/a&gt; looks like the patch is ready to get in. You want to look through before we commit? &lt;/p&gt;</comment>
                            <comment id="13789018" author="hadoopqa" created="Tue, 8 Oct 2013 08:44:51 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12607325/ZOOKEEPER-1147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12607325/ZOOKEEPER-1147.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1530166.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 33 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1655//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13790569" author="fpj" created="Wed, 9 Oct 2013 17:19:33 +0100"  >&lt;p&gt;This looks great, +1.&lt;/p&gt;</comment>
                            <comment id="13790823" author="thawan" created="Wed, 9 Oct 2013 21:23:21 +0100"  >&lt;p&gt;Committed to trunk. Thanks a lot everyone.&lt;/p&gt;</comment>
                            <comment id="13790871" author="fpj" created="Wed, 9 Oct 2013 22:18:44 +0100"  >&lt;p&gt;Committed revision: 1530781&lt;/p&gt;</comment>
                            <comment id="13790872" author="mahadev" created="Wed, 9 Oct 2013 22:19:52 +0100"  >&lt;p&gt;Nice!! Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt; Incredible work!&lt;/p&gt;</comment>
                            <comment id="13790913" author="phunt" created="Wed, 9 Oct 2013 23:08:14 +0100"  >&lt;p&gt;Kudos! Great feature addition.&lt;/p&gt;</comment>
                            <comment id="13791405" author="hudson" created="Thu, 10 Oct 2013 12:38:04 +0100"  >&lt;p&gt;SUCCESS: Integrated in ZooKeeper-trunk #2084 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/2084/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/2084/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1147&quot; title=&quot;Add support for local sessions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1147&quot;&gt;&lt;del&gt;ZOOKEEPER-1147&lt;/del&gt;&lt;/a&gt;. Add support for local sessions (Jay Shrauner, thawan via thawan) (thawan: &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1530781&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1530781&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/include/zookeeper.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/KeeperException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/cli/CreateCommand.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/Request.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LeaderRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LocalSessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ProposalRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/DuplicateLocalSessionUpgradeTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LeaderSessionTrackerTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LocalSessionRequestTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LocalSessionsOnlyTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumBase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumUtil.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReadOnlyModeTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SessionTrackerCheckTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SessionUpgradeTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12686229">ZOOKEEPER-1851</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12551766">HBASE-5843</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12632912">ZOOKEEPER-1648</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12673080">ZOOKEEPER-1787</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12625095">ZOOKEEPER-1607</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12607325" name="ZOOKEEPER-1147.patch" size="151828" author="mahadev" created="Tue, 8 Oct 2013 08:05:40 +0100"/>
                            <attachment id="12580207" name="ZOOKEEPER-1147.patch" size="146934" author="thawan" created="Wed, 24 Apr 2013 02:30:22 +0100"/>
                            <attachment id="12572440" name="ZOOKEEPER-1147.patch" size="145097" author="thawan" created="Wed, 6 Mar 2013 23:41:42 +0000"/>
                            <attachment id="12571753" name="ZOOKEEPER-1147.patch" size="136795" author="thawan" created="Sat, 2 Mar 2013 20:01:31 +0000"/>
                            <attachment id="12570056" name="ZOOKEEPER-1147.patch" size="138316" author="thawan" created="Wed, 20 Feb 2013 02:18:23 +0000"/>
                            <attachment id="12570024" name="ZOOKEEPER-1147.patch" size="138456" author="thawan" created="Tue, 19 Feb 2013 23:26:03 +0000"/>
                            <attachment id="12569877" name="ZOOKEEPER-1147.patch" size="138456" author="thawan" created="Tue, 19 Feb 2013 00:57:38 +0000"/>
                            <attachment id="12569875" name="ZOOKEEPER-1147.patch" size="138456" author="thawan" created="Tue, 19 Feb 2013 00:47:00 +0000"/>
                            <attachment id="12564551" name="ZOOKEEPER-1147.patch" size="139295" author="thawan" created="Sat, 12 Jan 2013 04:11:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Dec 2012 05:44:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2404</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1esf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>42047</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>