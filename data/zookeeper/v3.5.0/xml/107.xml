<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:41:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-107/ZOOKEEPER-107.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-107] Allow dynamic changes to server cluster membership</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-107</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Currently cluster membership is statically defined, adding/removing hosts to/from the server cluster dynamically needs to be supported.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12401266">ZOOKEEPER-107</key>
            <summary>Allow dynamic changes to server cluster membership</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shralex">Alexander Shraer</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jul 2008 22:02:56 +0100</created>
                <updated>Wed, 10 Dec 2014 20:25:18 +0000</updated>
                            <resolved>Fri, 29 Mar 2013 15:30:03 +0000</resolved>
                                                    <fixVersion>3.5.0</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>28</votes>
                                    <watches>88</watches>
                                                                                                            <comments>
                            <comment id="12617955" author="phunt" created="Tue, 29 Jul 2008 22:03:31 +0100"  >&lt;p&gt;Submitted to me by a user. This describes a change both for servers and for clients. Currently servers &lt;br/&gt;
share a configuration file that statically defines the cluster members (servers). Additionally clients are statically &lt;br/&gt;
configured with a list of accessible servers.&lt;/p&gt;

&lt;p&gt;&quot;Instead of every client&lt;br/&gt;
maintaining a list of zookeeper servers, the servers should maintain&lt;br/&gt;
that info (e.g in a special &apos;node&apos;) and handle updates via the&lt;br/&gt;
server-to-server protcol. Then the client just needs to know the&lt;br/&gt;
server:port of &lt;b&gt;one&lt;/b&gt; zookeeper server (or a bunch of &apos;forwarding&lt;br/&gt;
zookeepers&apos; for redundancy) that it talks to and the servers take it&lt;br/&gt;
from there. &lt;/p&gt;

&lt;p&gt;If one server gets added to the collective, the server-to-server&lt;br/&gt;
protocol should propagate it among all servers and all servers update&lt;br/&gt;
their maps. Same if a zookeeper server gets moved out of rotation, there&lt;br/&gt;
should be an internal protocol to handle this and have all servers&lt;br/&gt;
update their maps. &quot;&lt;/p&gt;</comment>
                            <comment id="12618885" author="jghoman" created="Thu, 31 Jul 2008 23:29:45 +0100"  >&lt;p&gt;I thought I had along this line was to create an additional constructor that takes a URL rather than string for the host.  The constructor could then access that URL and get the list of servers from there.  So, assuming the URL pointed to an http page, the page returned would just be &quot;hostA:port,hostB:port,etc&quot; and the client could proceed with that information.  Or, the URL could point to a local file if the server membership wasn&apos;t expected to change often.  This would eliminate the need for the clients to have any idea ahead of time of where to get the hosts.  Particularly if the information were served via http, this would move server location to being a DNS/virtualhost problem - the DNS for the server-info location could be changed if the server providing the info died.  This would go a ways toward adding a restful interface to the configuration of the cluster.&lt;/p&gt;

&lt;p&gt;So, the client would instantiate with &lt;br/&gt;
zk = new Zookeeper(new URL(&quot;http://zkhostinfo:7552&quot;), 1000, this);, &lt;br/&gt;
receive the list of hosts and work from there.  &lt;/p&gt;

&lt;p&gt;This would address (though not solve) the issue of adding servers, as new servers could be added to the list returned to new clients.&lt;/p&gt;

&lt;p&gt;As a corollary, the zk servers could of course serve the list of hosts as an optional part of their operation, or this function could be provided by another application, directory-style.  This would allow clients to connect to different clusters on start-up, if the directory could identify and differentiate clients by ip addr or such, and direct them to the appropriate zk group.&lt;/p&gt;

&lt;p&gt;If this sounds (reasonable &amp;amp;&amp;amp; interesting), I can open a JIRA and work on a patch to add the new constructor and client functionality.&lt;/p&gt;</comment>
                            <comment id="12619035" author="breed" created="Fri, 1 Aug 2008 16:08:07 +0100"  >&lt;p&gt;+1 I like the idea. You can currently use DNS for this functionality: make zookeeper.acme.com resolve to 5 different IP addresses and then specify new ZooKeeper(&quot;zookeeper.acme.com:3233&quot;, 1000, this), but DNS is hard to modify. A replicate webserver would be much easier to update.&lt;/p&gt;</comment>
                            <comment id="12619070" author="phunt" created="Fri, 1 Aug 2008 17:45:06 +0100"  >&lt;p&gt;Obviously it would be great if we supported reading from a ZooKeeper cluster!&lt;/p&gt;

&lt;p&gt;This just reminded me of another comment I got recently on this. The suggestion was to use a URI (similar to jdbc for example) rather than a host/port list.&lt;/p&gt;

&lt;p&gt;Perhaps we should have some sort of plugin architecture here, where the uri would be provided and each registered plugin would map the host/port mapping based on the scheme.&lt;/p&gt;</comment>
                            <comment id="12619106" author="chirino" created="Fri, 1 Aug 2008 20:42:04 +0100"  >&lt;p&gt;I personally think that this needs to stay decoupled so that group membership can be controlled via different implementations.  In other words,  I think that the QuorumPeer should not have to have any constructor args for it to know it&apos;s peers.  It should persistently store/remember what the list of peers are part of the group since it last started.&lt;/p&gt;

&lt;p&gt;Not sure if it makes sense to keep that list in the ZK db or not.&lt;/p&gt;

&lt;p&gt;When a node that is not part of a cluster first starts up, it needs to know if it&apos;s starting a new cluster or if it is joining an existing cluster.  Therefore, I think the QuorumPeer class needs methods like the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/** 
 * Contacts a ZK server in the cluster, adds &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer to the cluster and gets a listing of the &lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt; of the peers in 
 * the cluster.
 *
 * Optional: is slaveOnly is &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, then &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer should never be elected master.
 *
 * Throws an error &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer is already part of a cluster.
 */ 
void joinCluster( URI server, bool slaveOnly )

/**
 * Starts &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer as the first node in the cluster and makes him the master.
 *
 * Throws an error &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer is already part of a cluster.
 */
void createCluster()

/**
 * Removes &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer from the peer list maintained by the cluster.
 *
 * Throws an error &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; peer is not part of a cluster.
 */
void leaveCluster()

/**
 * Gets a list of peers in the cluser.
 *
 * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not part of a cluster yet.
 */
List&amp;lt;URI&amp;gt; getClusterPeers()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If methods like the above are available, then an administrator can dynamically manage adding/removing nodes on an existing ZooKeeper cluster.  or some automated agent could do it.  Note that the peer list needs to get replicated to all cluster members and persisted to avoid split brain issues on peer restart.  Operations like joinCluster(), leaveCluster(), getClusterPeers() would block until a master is elected in the cluster.  &lt;/p&gt;

&lt;p&gt;Please note the &apos;nice to have feature&apos; where you have the ability to designate some peers as NOT being eligible to become a master.  This would allow you to support using heterogeneous peers, and enforce only allowing the higher end machines to become the masters.&lt;/p&gt;
</comment>
                            <comment id="12619109" author="breed" created="Fri, 1 Aug 2008 20:51:23 +0100"  >&lt;p&gt;I think there are two issues here: 1) adding/removing servers to a ZooKeeper cluster and 2) letting clients know about the change. We should probably separate them. I like the URL idea for dealing with 1) (especially when used in conjunction with the other idea in this Jira of defining a URL scheme for ZooKeeper). For 2) I agree with Hiram that it should be stored persistently at each replica and changed via the replication protocol.&lt;/p&gt;</comment>
                            <comment id="12619118" author="mahadev" created="Fri, 1 Aug 2008 21:29:52 +0100"  >&lt;p&gt;+1 for using URI&apos;s on the client side to get a list of zookeeper servers . We can always update the zookeeper client periodically by fetching from the URI .... &lt;/p&gt;</comment>
                            <comment id="12619119" author="phunt" created="Fri, 1 Aug 2008 21:38:05 +0100"  >&lt;p&gt;In my comment &quot;URI rather than a host/port list&quot; I was specifically referring to the client&apos;s host/port list used to specify the servers to which the client should connect. Probably a good idea to use something like this on the servers as well.&lt;/p&gt;

&lt;p&gt;Regarding the idea of join/leave a cluster, this sounds good. How does this mesh with the common case of starting up a set of 5 servers forming a new cluster? Specifically the idea of operations blocking (hiram&apos;s comment) until master is elected. Not sure I see how this works...&lt;/p&gt;</comment>
                            <comment id="12705192" author="henryr" created="Sat, 2 May 2009 01:10:53 +0100"  >&lt;p&gt;This is something I&apos;d be willing to work on.&lt;/p&gt;

&lt;p&gt;Just to sum up my current understanding of the requirements:&lt;/p&gt;

&lt;p&gt;1. Must support off-cluster getPeers operation for a recovering peer to bootstrap itself (can cache in its own persistent storage, but that could potentially be out of date by recovery time). This is probably best realised with the URI idea as before.&lt;/p&gt;

&lt;p&gt;2. Support for join and leave operation. With a quiescent cluster, join is probably as simple as a sync followed by a commit of the new peer&apos;s id to all followers (if nothing else, this ensures that if one of them should be elected the master, they know how big the quorum should be). Leaves are similar, without the sync obviously. If a peer leaves before the Leave( ) operation completes, it will look like a crash. &lt;/p&gt;

&lt;p&gt;3. If joining / leaving a cluster that doesn&apos;t have a currently elected master, block until one exists. If the cluster is currently failed due to f+1 failures, it might be necessary to timeout in order to prevent being permanently blocked if this is in the middle of a code path.&lt;/p&gt;

&lt;p&gt;4. However, if joining / leaving a cluster that has never bootstrapped it&apos;s important to do something different so as to allow the cluster to achieve a quorum. One solution is for a node to check if its id is in the list of peers at the cluster URI which will tell it if it was ever a member of the cluster previously (or part of the initial membership) and then participate in master elections. This places a requirement on the peer list to be kept reasonably accurate (but this could only affect liveness, not safety, I think).&lt;/p&gt;

&lt;p&gt;Please chime in with comments / stuff that I&apos;ve missed / bugs, otherwise I&apos;ll work on fleshing this out.&lt;/p&gt;
</comment>
                            <comment id="12705794" author="breed" created="Mon, 4 May 2009 23:31:03 +0100"  >&lt;p&gt;sounds great henry! it would be great if you could work on this.&lt;/p&gt;

&lt;p&gt;i think we have two strategies:&lt;/p&gt;

&lt;p&gt;1) have the cluster agree on a list of servers and use the atomic broadcast to agree on changes. (this might be a bit more difficult with the flexible quorum configuration. right flavio?) this is mostly in line with your first three points. btw, i don&apos;t think you need to quiesce for this or even do the sync. i think you can do a conditional update.&lt;/p&gt;

&lt;p&gt;2) use some external resource file indicated by a URL to define the machines that make up a cluster. this is in line with your last point and you hint at this with your first point.&lt;/p&gt;

&lt;p&gt;i think the first approach is safer and more reliable. the second is easier to implement and easier to see what is going on, but i during transition time you have a problem as the resource file propagates through the cluster. (you could have different members with different views.)&lt;/p&gt;

&lt;p&gt;the thing i was thinking of for the first option is exposing the cluster config through a znode &apos;/.zookeeper/ensemble&apos; or something like that. then changing the configuration would be as &quot;simple&quot; as conditionally setting a new version of that file. the tricky part is that you could only commit the change if you have a quorum of followers in both the old and the new configuration. this seems to be in line with what you are thinking correct?&lt;/p&gt;</comment>
                            <comment id="12705822" author="zkuser" created="Tue, 5 May 2009 00:25:59 +0100"  >&lt;p&gt;Using a URL for obtaining a list of servers may not be acceptable in all environments. The URL will have to highly available otherwise the clients won&apos;t connect after a restart. It applies to ZK peers as well, a peer won&apos;t be able to restart if the URL is down at the time of peer restart. So I believe (1) is a better choice here &amp;#8211; the cluster needs to be self-contained.&lt;/p&gt;

&lt;p&gt;IIUC, using a ZK node to expose the cluster config would mean that the cluster can&apos;t be created unless the cluster config is pre-populated? We need to first create a log file that contains a config node that has the initial cluster members, copy them to all the nodes and power them on to create the cluster? Once the cluster is formed, new nodes can be admitted to the cluster by having a quorum commit the new server name in the cluster config. &lt;/p&gt;

&lt;p&gt;Another alternative would be to have a single node come up first (with the log file pre-populated to contain a single server in the cluster config node) and then have all other servers join one at a time? This sounds a bit weird to me in that the first node will have to form a single node cluster in the beginning, which is an oxymoron &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12706097" author="breed" created="Tue, 5 May 2009 17:52:45 +0100"  >&lt;p&gt;i agree with everything you are saying and yes to all the questions. it&apos;s not as strange as it sounds. today we have to pre-populate the cluster config. it would just be that now rather than creating a file with vi we would need to use a utility to create an initial snapshot that has the config in it. i think this would also help with some deployment errors by tightly tying the data with the cluster config. the previously mentioned utility would also allow you to avoid having to start with a single node cluster and growing from there.&lt;/p&gt;</comment>
                            <comment id="12706122" author="mahadev" created="Tue, 5 May 2009 18:48:09 +0100"  >&lt;p&gt;Henry,&lt;br/&gt;
 one thing I would like to point out is that please post a concrete proposal  (since this invloves the core internals of zookeeper) before you start working on this, so that their is agreement and no wasted effort... &lt;/p&gt;</comment>
                            <comment id="12706219" author="henryr" created="Tue, 5 May 2009 22:51:41 +0100"  >&lt;p&gt;I agree with pretty much everything I&apos;ve read here, (in particular, the importance of getting consensus!), but wanted to clarify my initial comment a bit.&lt;/p&gt;

&lt;p&gt;Rather than choose between strategies 1 and 2 as outlined by Benjamin, I think there&apos;s a hybrid approach needed. &lt;/p&gt;

&lt;p&gt;If a node is a member of a quorate cluster, then the most up to date membership information should be available to it in a znode. I think this is the most elegant approach, and is trivially achieved by pushing join/leave requests through the atomic broadcast pipeline.&lt;/p&gt;

&lt;p&gt;If a node is joining the cluster, it needs to be able to bootstrap the location of the cluster from somewhere. There therefore needs to be a externally available resource containing a list of machines in the cluster that is at least accurate for one machine (as a joining node will try all servers in that list in turn). When I say available at some URI, this is what I mean. Currently, this information is kept statically at a URI that addresses conf/zoo.cfg on the local filesystem. I suggest generalising that to a general URI. One nice property is that it then does not tie a cluster to a particular machine, as the URI provides a level of indirection.&lt;/p&gt;

&lt;p&gt;It is then the cluster administrator&apos;s responsibility to keep this URI up-to-date (although of course this should be automated), possibly via a client that just pulls membership information from the cluster periodically. As I said earlier, it&apos;s only important for the contents of this list to have one node in common with the true membership of the cluster, so it&apos;s allowed to get a bit out of sync. We can certainly easily imagine ways that ZK can help here. Of course the URI must be highly available, but it also has to exist, otherwise we could have &apos;orphaned&apos; clusters that are running on machines whose identity we don&apos;t necessarily know. The URI can be a front for almost any scheme we like - periodic heartbeating of live nodes is one. &lt;/p&gt;

&lt;p&gt;The format of this file can be anything at all - from a serialised snapshot to a list of ip:port pairs, as long as it contains enough information for a client to find the cluster. Personally I would prefer human readable, simple formats.&lt;/p&gt;

&lt;p&gt;To talk about recovery for a moment: when a node recovers from a crash and rejoins the cluster, it can help the cluster elect a master if the cluster is current non-quorate. This is because it was originally part of the cluster, and therefore the protocol guarantees that a quorum of nodes including the recovering one will have seen all committed proposals (this is important to correctness).&lt;/p&gt;

&lt;p&gt;If the node was not originally a member of the cluster, it must not help get a master elected as it cannot be part of a quorum. Similarly, a node cannot query the cluster to find out if it was originally a member because the quorum required to do so might not exist. Therefore every node that ever successfully joins a cluster must store this fact in its own persistent storage, as only it can know whether it is permitted to help run the election. &lt;/p&gt;

&lt;p&gt;Finally, the startup problem. Given a URI, nodes can bootstrap themselves onto a cluster simply by being told to start in startup mode. Alternatively, a single node can be distinguished (again, in the URI contents perhaps) which will start in single-node mode and process join requests one-by-one. &lt;/p&gt;</comment>
                            <comment id="12706320" author="breed" created="Wed, 6 May 2009 08:09:05 +0100"  >&lt;p&gt;the information needed for bootstrapping is the same as the information needed for a normal zookeeper client, so it could either use the standard string that is a list of host:port pairs, or it could use the scheme proposed in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-390&quot; title=&quot;zookeeper url scheme&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-390&quot;&gt;ZOOKEEPER-390&lt;/a&gt;. with that URL it could fetch /.zookeeper/ensemble and grab the configuration information that it needs. conf/zoo.cfg isn&apos;t really a good URI for this purpose since is doesn&apos;t really have the needed client ports. plus there is information in zoo.cfg that is particular to a given server. for example, the data and log directories may be different on all the machines. the client port should also probably stay in the zoo.cfg. the server lists and probably the timing variables should probably be stored in a znode and maintained with the atomic broadcast.&lt;/p&gt;

&lt;p&gt;recovery is a bit more than you mention, but at the same time simpler. first off, to change quorum configuration you must commit the change in both the old quorum configuration and in the new quorum configuration. for example, if you have the configuration A, B, C and you are changing to A, B, C, D, E you must be able to get quorum in both the old and new configuration for the change to work. if only A and B are up or A, D, and E are up you cannot commit the change. this means that the leader should check the new configuration carefully before proposing it, because we always roll the proposals forward, we never rollback.&lt;/p&gt;

&lt;p&gt;so really a zookeeper server doesn&apos;t know whether he is able to participate or not, the election will sort it out. a simple example is an ensemble A, B, C, D, E. E goes down. the last zxid it saw was &amp;lt;57,3&amp;gt;. while it is down the quorum configuration gets changed to A, B, C by &amp;lt;57,52&amp;gt;. lets say there is a leadership change and at &amp;lt;58,6&amp;gt; the power goes out and comes back on. E now tries to vote (it thinks it is permitted to participate), but it won&apos;t win any election since its zxid is too low. A, B, and C will ignore E&apos;s votes anyway because they know that E has been removed from the ensemble.&lt;/p&gt;</comment>
                            <comment id="12706697" author="zkuser" created="Thu, 7 May 2009 03:07:21 +0100"  >&lt;p&gt;I think there are some corner cases that may make the leader election impossible during a node addition. Say the current config is A,B,C and the new config is A,B,C,D. When the leader is trying to commit the new configuration, the power goes out and comes back on when only A and B have logged the new configuration. Peer count in &amp;lt;A,B,C,D&amp;gt; = &amp;lt;4,4,3,3&amp;gt; now. An election is not possible if C is down because A and B think the majority is 3 peers and D can&apos;t participate in the election since it hasn&apos;t joined the cluster yet. &lt;/p&gt;

&lt;p&gt;It sounds like some out of band communication between an existing peer and a new peer is needed to make this thing work. If a peer restarts or notices quorum loss and if the last logged update is a node addition, the peer should try to contact the newly added server so that it can push it&apos;s log to the new peer (if the new peer doesn&apos;t already have an up to date log) and ask the new peer to restart. Until A or B do that in the above case, an election may not be possible.&lt;/p&gt;</comment>
                            <comment id="12707463" author="breed" created="Fri, 8 May 2009 19:46:41 +0100"  >&lt;p&gt;i don&apos;t think your example is a problem. it looks like transaction 4 is the one that added D. there is nothing that prevents D from participating in leader election. if C was up, it wouldn&apos;t nominate D, but A and B will, so either A or B will get elected and both recognize D as a valid member.&lt;/p&gt;

&lt;p&gt;while we are talking about corner cases, problems do come when you go the other way: you have A, B, C, and D, and you want to delete D, but C and D are down. you can get quorum in the new configuration with A and B, but you can&apos;t get quorum from the old configuration since C and D are down. for this you need manual intervention since there is no safe way (without risking future split brain) to remove D with C down.&lt;/p&gt;

&lt;p&gt;i think it radical cases like the last one, manual reconfiguration and bouncing the cluster is the best option. we do not want it to be easy since it risks having problems in the future.&lt;/p&gt;</comment>
                            <comment id="12718682" author="zkuser" created="Fri, 12 Jun 2009 01:33:00 +0100"  >&lt;p&gt;Folks, I have attached a high level write up on how we can implement dynamic configuration changes in a ZK ensemble. Please comment on this and let me know if you think this approach makes sense. Since I just came up with this, there could be corner cases that I may need to handle.&lt;/p&gt;

&lt;p&gt;Please note that this write-up doesn&apos;t focus on how we can make the configuration details available to the clients using a URI. I believe that can be dealt separately.&lt;/p&gt;</comment>
                            <comment id="12719641" author="henryr" created="Mon, 15 Jun 2009 17:56:27 +0100"  >&lt;p&gt;Hi - &lt;/p&gt;

&lt;p&gt;Thanks for the proposal - it does a really good job of framing the important questions. &lt;/p&gt;

&lt;p&gt;I am in favour of a solution that uses ZAB and the existing consensus framework for dynamic group membership. I believe this can be achieved without an out-of-band protocol or significant changes to the way the current protocols work; this has the advantage of keeping things simple. &lt;/p&gt;

&lt;p&gt;I&apos;m not certain I&apos;ve read your proposal correctly, but it seems that step 6 has followers commit the CONFIGCHANGE proposal on receipt, rather than waiting for a COMMIT message. By my understanding of ZAB, this means there is a possibility where fewer than a quorum of followers will commit this proposal, if the leader fails halfway through sending the proposal messages, leading to the possibility of divergent histories at followers. &lt;/p&gt;

&lt;p&gt;The tool approach is one way of wrapping up the authentication required if an ensemble wishes to restrict those nodes that can join it. Currently there is some implicit authentication done as the leader only establishes connections with followers that belong to the static membership. However there&apos;s certainly a need, as a result of this JIRA, for a better authentication mechanism inside ZK. I see this as orthogonal to the mechanisms required to do dynamic membership.&lt;/p&gt;

&lt;p&gt;I suggest that we simply augment the current ZooKeeper protocol with four new proposals: NEWVIEW, GETVIEW, JOIN and LEAVE. NEWVIEW proposes an entirely new view, and may aggregate many JOIN or LEAVE proposals into one. Since NEWVIEW likely requires knowledge of the current view, GETVIEW returns the current view and its version. JOIN and LEAVE incrementally change the current view, whatever it is, and so do not require a GETVIEW call to establish the current view. &lt;/p&gt;

&lt;p&gt;All proposals go through the usual ZAB two-phase protocol, except for the fact that the leader coordinating the current ZAB instance must wait for acknowledgements from quorums in both the current and new view before committing the change. &lt;/p&gt;

&lt;p&gt;It&apos;s possible that this can lead to the proposal blocking if a quorum cannot be assembled in either view. Although it might seem an error that the proposal will block even if a quorum in the current view can be established, the same behaviour would be observed even if the proposal could be committed - all subsequent proposals would require a quorum from the new view and would block. &lt;/p&gt;

&lt;p&gt;If an ensemble is currently blocked due to the failure of n/2 + 1 nodes, it is not possible to resume progress by issuing a LEAVE on behalf of the failed nodes; however in general failed nodes may both JOIN and LEAVE the ensemble. &lt;/p&gt;

&lt;p&gt;If a leader election is required during a proposal, there are no correctness issues assuming the current required invariants of ZAB leader election hold. In particular, as long as the new leader has seen the most recent proposals then the view change proposal will be committed once the new leader is elected. This property will be maintained without changes to the current leader election protocols - as the view change proposal will have been seen by a quorum from the current view, the new leader is guaranteed to have a record of the proposal. &lt;/p&gt;

&lt;p&gt;A node that fails after it has issued a join proposal, but before it hears of its success must be able to find the status of the proposal once it recovers. There are several ways to do this. &lt;/p&gt;

&lt;p&gt;I have some sketches of correctness proofs for this and could produce a more detailed design document if required - however, if there&apos;s consensus that this is the right approach I&apos;d rather get coding &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; It turns out after much agonising that ZK&apos;s existent invariants are already pretty much strong enough to build this protocol. The only extension is the requirement to listen for two different sets of quorum acknowledgements.&lt;/p&gt;

&lt;p&gt;I&apos;ve deliberately avoided the issue of exposing the view to the outside world (although this requires attention, as new nodes need to be able to find the ensemble!) - I have outlined some ideas earlier in this JIRA and I know other people have good suggestions, but I think we can solve both issues independently. &lt;/p&gt;

&lt;p&gt;Would love to hear comments, things that I&apos;ve missed, errors in logic etc.&lt;/p&gt;</comment>
                            <comment id="12719823" author="breed" created="Mon, 15 Jun 2009 23:28:12 +0100"  >&lt;p&gt;Raghu, i think henry is correct that you must get an ack from quorums in both the old and new views before committing the change. otherwise you get split brain which could result in multiple leaders. henry, i think we are thinking along the same lines, but i&apos;m a bit skeptical of JOIN and LEAVE. in some sense they are a bit of an optimization that can be implemented with GETVIEW and NEWVIEW. it would be nice to make the mechanism as simple as possible. it also seems like you would also require a GETVIEW to be done before doing a NEWVIEW, just for sanity. (require an expected version on NEWVIEW and not allow a -1.) i was thinking that we would just push NEWVIEW through Zab making sure we get acks from quorums in both the old and new views.&lt;/p&gt;

&lt;p&gt;to help mitigate the case where proposing the NEWVIEW leads to a case where the system freezes up when the NEWVIEW proposal goes out and there isn&apos;t a quorum in the new view, the leader should probably make sure that it currently has quorum of followers in the new view before proposing the request. if it doesn&apos;t, it should error out the request. even with this we can still freeze up if we lose quorum in the new view after issuing the proposal, but that would happen anyway (as you point out), but it would prevent us from doing something that has no chance of working.&lt;/p&gt;</comment>
                            <comment id="12719831" author="fpj" created="Mon, 15 Jun 2009 23:42:12 +0100"  >&lt;p&gt;In general I like Henry&apos;s solution, and I think it works. However, I&apos;m not entirely convinced that we need to augment the protocol with messages such as JOIN and LEAVE. I believe we can make it work by simply writing to a special znode and reading from it, which we need to do anyway if we want to use the mechanisms we have in place for durability. Of course, the leader has to follow changes to this znode and adapt its behavior accordingly (e.g., when sending proposals and commits). Followers, as far as I can tell, only need to register the changes to the znode as they make no use of such information, only for leader election&lt;/p&gt;

&lt;p&gt;I also agree that there is an authentication problem as we don&apos;t want some arbitrary machine trying to join an ensemble.&lt;/p&gt;

&lt;p&gt;If you&apos;re willing to share your proof sketches, I would be pleased to take a look at them. &lt;/p&gt;</comment>
                            <comment id="12719841" author="mahadev" created="Mon, 15 Jun 2009 23:56:37 +0100"  >&lt;p&gt;updated the wrong jira! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="12719856" author="henryr" created="Tue, 16 Jun 2009 00:38:09 +0100"  >&lt;p&gt;Great comments, thanks very much.&lt;/p&gt;

&lt;p&gt;@Benjamin:&lt;/p&gt;

&lt;p&gt;You&apos;re right that JOIN and LEAVE are special cases of GETVIEW / NEWVIEW. They exist only to allow easy expression of what I reckon will be a common pattern: &quot;add my node to whatever the current cluster is&quot;, otherwise as you say you need a GETVIEW for sanity. &lt;/p&gt;

&lt;p&gt;There&apos;s an optimisation that would allow JOIN requests to always be committed even though the joiner might have failed - the leader can take it as read that the joiner implicitly acknowledges the JOIN proposal and can therefore push through the commit without requiring an explicit ack from it (you can show that, at least for majority quorums, the only way to have a quorum in an old view but not in the new under a JOIN is for the joiner to fail). However, since the ensemble would be failed immediately afterwards it wouldn&apos;t be much of a win.&lt;/p&gt;

&lt;p&gt;I agree that simple is better; JOIN makes the client programming simpler at the expense of the server (and saves the client a round-trip), but functionally it&apos;s subsumed by the getview-&amp;gt;newview pattern. &lt;/p&gt;

&lt;p&gt;I like erroring out when NEWVIEW won&apos;t result in a live ensemble, or at least having that as an option.&lt;/p&gt;

&lt;p&gt;@Flavio:&lt;/p&gt;

&lt;p&gt;I definitely agree that the persisted state should be in a znode (and should therefore be exposable through watches - important for externalising membership data for bootstrapping). However, since these operations require a very slightly different protocol to normal ZAB, I&apos;m in favour of using the opcode to tell the leader to use a protocol variant rather than the identity of the znode - this means that the arguments to &apos;set&apos; or whatever are kept opaque to the Leader. This is a matter of taste however - I&apos;m not totally committed to JOIN et. al.&lt;/p&gt;</comment>
                            <comment id="12720174" author="fpj" created="Tue, 16 Jun 2009 16:00:19 +0100"  >&lt;p&gt;I think having the messages explicitly in the protocol helps to convey the implemented abstraction, making it easier to read and understand. However, it is bad for backward compatibility, although it might be the case that we silently ignore unknown messages. &lt;/p&gt;</comment>
                            <comment id="12720313" author="zkuser" created="Tue, 16 Jun 2009 20:34:10 +0100"  >&lt;p&gt;Henry, et al. thanks for the feedback on my proposal.&lt;/p&gt;

&lt;p&gt;To explain a bit more on the proposal &amp;#8211; I felt that keeping the data and configuration separate, like it is today, would keep the implementation simple and non intrusive for core ZK code while ensuring correctness. The issue I see with storing config in a znode is that the joiner needs to participate in NEWVIEW ZAB message even when it is not part of the cluster and it needs to have the latest log before it can commit the NEWVIEW  proposal since it requires writing to the log. At the same time, the leader has to make sure that it blocks all proposals in between syncing the joiner and executing NEWVIEW. I felt this could be too intrusive (may be I shouldn&apos;t have worried about this while thinking about a higher level proposal?).  Let me know if my understanding is incorrect.&lt;/p&gt;

&lt;p&gt;I don&apos;t think my proposal would result in a split brain. I believe there is no need for two phase during changing cluster configuration as long each attempt to modify the configuration generates a new version number and the cluster configuration divergence is reconciled during leader election (peers go with the configuration with the highest version number). Having a two phase is no better, since there is no guarantee that all/majority peers have committed the new configuration and there could be diverged view of cluster configuration during election. Let me know if I am missing something.&lt;/p&gt;

&lt;p&gt;I do believe Henry&apos;s proposal would work. I don&apos;t have a strong preference for how we would like to do this, as long as we get it right.&lt;/p&gt;
</comment>
                            <comment id="12720321" author="breed" created="Tue, 16 Jun 2009 21:03:49 +0100"  >&lt;p&gt;i think i agree with flavio about using setData instead of NEWVIEW. (to be honest we had talked about this approach a while back in private.) we have already reserved the /zookeeper namespace (by convention). so if we use /zookeeper/ensemble to store the ensembles, then we can just use setData and getData to implement NEWVIEW and GETVIEW. This has two nice properties: 1) we don&apos;t need to touch the protocol code at all. 2) we can use standard clients to administer the view changes. for example, you could use the cli to get and manipulate the views.&lt;/p&gt;

&lt;p&gt;@raghu: here is the scenario for split brain: you have an ensemble of A, B, C, D, and E. Your new view will be made up of B, C, D, E, and F. if your update only hits D, E, and F, you can have two working ZooKeeper instances: A, B, C and D, E, F, thus giving your split brain.&lt;/p&gt;</comment>
                            <comment id="12720323" author="breed" created="Tue, 16 Jun 2009 21:05:23 +0100"  >&lt;p&gt;just a caveat to my last comment. for point 1) we actually do need to touch the protocol code a bit to ensure that the setData that changes the view commits in both the old and new views.&lt;/p&gt;</comment>
                            <comment id="12720334" author="zkuser" created="Tue, 16 Jun 2009 21:32:00 +0100"  >&lt;p&gt;Ben, to be honest, I wasn&apos;t thinking batch addition/deletion. I was thinking we will allow only one node to join or leave the cluster at a time, in which case we won&apos;t end up in a split brain.&lt;/p&gt;

&lt;p&gt;One thing I am still missing is, how do we plan to reconcile the divergence in conifguration info during leader election if we use ZAB? With ZAB, we go ahead and write to the log as soon as a PROPOSAL is sent. COMMIT is used only to notify the servers that the a majority have logged the update and the clients can start reading the new update. So I am not really seeing how this will help configuration change. Now in the example that you bring up, if D, E and F have logged the new view and all the nodes are brought up after a power cycle, a split brain could still occur, no? Should we allow only one node to be added/deleted at a time?&lt;/p&gt;</comment>
                            <comment id="12720380" author="breed" created="Tue, 16 Jun 2009 23:16:37 +0100"  >&lt;p&gt;so if you do one at a time without using Zab, without working through the details&lt;br/&gt;
1) start with A, B, C, D&lt;br/&gt;
2) A is the leader and proposes LEAVE D and fails where only A and C get it.&lt;br/&gt;
3) B is the leader and proposes LEAVE C and fails where only B and D get it because of a complete power outage.&lt;br/&gt;
4) everything comes back up&lt;br/&gt;
5) A is elected leader by C&lt;br/&gt;
6) B is elected leader by D&lt;/p&gt;

&lt;p&gt;if we use ZAB split brain will not occur because we do not use the configuration until it has been committed. since it has been accepted by both the old and new quorums, we will eventually converge on the new configuration. (that is my conjecture, still needs to be proven)&lt;/p&gt;</comment>
                            <comment id="12720411" author="zkuser" created="Wed, 17 Jun 2009 00:14:42 +0100"  >&lt;p&gt;Ben, I still believe the split brain won&apos;t occur:&lt;/p&gt;

&lt;p&gt;A. After (2), A and C have config verion X + 1, B and D are at X&lt;br/&gt;
B. After A dies, a leader election is not possible without C. During LE, B and D discover that C is at X + 1. This will force B and D to update their configuration to X + 1 and restart the election. This is what I refer to when I say &quot;reconciling configuration divergence&quot; in my write up. D now leaves the cluster since it just learnt that it was deleted.&lt;br/&gt;
C. A new quorum is formed with B and C.&lt;br/&gt;
D. When A comes back, config version of A B and C are the same. A will simply join the leader. If A were still at X, then it will first update it&apos;s configuration to X + 1 when it starts an election and then restart the election.&lt;/p&gt;</comment>
                            <comment id="12720790" author="breed" created="Wed, 17 Jun 2009 18:52:02 +0100"  >&lt;p&gt;oh right. you are correct. i guess it is more of a liveness/correctness issue:&lt;/p&gt;

&lt;p&gt;1) start with A, B, C, D&lt;br/&gt;
2) B is down and A is the leader and proposes LEAVE C and fails where only D gets it.&lt;br/&gt;
3) C and D cannot get quorum since C has an older view.&lt;br/&gt;
4) D fails&lt;br/&gt;
5) A and B come back up and B is elected leader.&lt;br/&gt;
6) B proposes LEAVE A and C gets it before B fails.&lt;/p&gt;

&lt;p&gt;Now what happens? we cannot get quorum with just A and C since A has the old view. even if D comes up it will not elect C because it does not believe C is part of the ensemble. if they all come up either C or D can be elected leader, but if C is elected you end up with conflicting views: A thinks (B, C, D), B thinks (B, C, D), C thinks (B, C, D), and D thinks (A, B, D), so both A and D will effectively be out of the ensemble and you can&apos;t tolerate any failures.&lt;/p&gt;
</comment>
                            <comment id="12721543" author="zkuser" created="Fri, 19 Jun 2009 00:11:20 +0100"  >&lt;p&gt;Right, that&apos;s a problem, that rules out using my proposal.&lt;/p&gt;

&lt;p&gt;Now some logistics related:&lt;/p&gt;

&lt;p&gt;@henry,&lt;/p&gt;

&lt;p&gt;We need this feature pretty desperately and it will be great if you tell me how we want to go about designing and implementing this. IOW, would you like to own the design and implementation of this? If yes, will be really great if you could let me know the timeframe. Please don&apos;t get me wrong, just trying to figure out the timeframe here. If you can&apos;t get to this in the short term, I can chip in. Thanks.&lt;/p&gt;

</comment>
                            <comment id="12721547" author="henryr" created="Fri, 19 Jun 2009 00:22:35 +0100"  >&lt;p&gt;Yes, I&apos;d like to take ownership of implementing this. &lt;/p&gt;

&lt;p&gt;I&apos;d like to have a patch available within one to two weeks. There are some implementation issues to work through which might take time (for example, how do we manage the connections between joining followers and the current leader - who connects to whom?). I see the initial version of the patch simply as adding functionality to the core protocol. Adding any extensions to the client APIs would come in a second revision. Ironing out the kinks in the first patch will also doubtless take some time.&lt;/p&gt;

&lt;p&gt;Does that sound ok? You can go with an unstable implementation as soon as the patch is released.&lt;/p&gt;</comment>
                            <comment id="12721554" author="zkuser" created="Fri, 19 Jun 2009 00:32:46 +0100"  >&lt;p&gt;That sounds great! I know this is a complex task and lot of work, can live with the kinks in the beginning. &lt;/p&gt;</comment>
                            <comment id="12721566" author="zkuser" created="Fri, 19 Jun 2009 00:55:44 +0100"  >&lt;p&gt;Henry, the JIRA is unassigned. You might want to assign it to yourself.&lt;/p&gt;</comment>
                            <comment id="12721608" author="zkuser" created="Fri, 19 Jun 2009 02:46:08 +0100"  >&lt;p&gt;Henry, just a question out of curiosity - how do you think the cluster will be created on day one? Would a 2/3 node cluster be built initially by powering on the servers using pre-populated configuration and then nodes are added/deleted dynamically? Or a cluster will be built incrementally using dynamic configuration change, starting with a single node?&lt;/p&gt;</comment>
                            <comment id="12721697" author="fpj" created="Fri, 19 Jun 2009 09:49:17 +0100"  >&lt;p&gt;I suggest that the system starts as a standalone instance and the other replicas join by contacting the standalone replica using the new dynamic membership mechanism. This way we avoid pre-loading a configuration. An important observation is that there will be a transition from standalone to ensemble, which I think won&apos;t be difficult to deal with in the code, but we have to make sure that this observation is correct. &lt;/p&gt;</comment>
                            <comment id="12722063" author="breed" created="Fri, 19 Jun 2009 23:21:14 +0100"  >&lt;p&gt;i think if we use the notion of observers it helps: an observer can sync with a leader, but it doesn&apos;t get to vote. i think this makes it easy because the leader can then determine that it can commit with both the active followers and active observers if needed: for example start with A, B, C and move to A, B, D, E, F. if A and C are active followers and E and F are observers then the leader will propose the new configuration.&lt;/p&gt;</comment>
                            <comment id="12722153" author="fpj" created="Sat, 20 Jun 2009 09:58:36 +0100"  >&lt;p&gt;+1, I think it is a good idea to use observers (&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-368&quot; title=&quot;Observers: core functionality &quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-368&quot;&gt;&lt;del&gt;ZOOKEEPER-368&lt;/del&gt;&lt;/a&gt;). This way we make sure that once the new configuration is committed the new active member is in sync with the leader. &lt;/p&gt;

&lt;p&gt;I have a slightly different idea of how to make it work, though. I was thinking that once the observer finsihes synchronizing with the leader, it can simply submit a setData. This way we have no special code path for this operation. Only when finalizing the setData operation we have to update all appropriate data structures.&lt;/p&gt;</comment>
                            <comment id="12722245" author="henryr" created="Sat, 20 Jun 2009 20:05:47 +0100"  >&lt;p&gt;As it turns out, I&apos;ve pretty much implemented Observers in all but name already - they go through the same connection logic as normal followers, and therefore sync, but are disbarred from sending Leader.REQUEST packets to the leader. Similarly, when a leader is sending a proposal packet it only gets sent to those followers which are in the current view. Since the logic is very similar, and we will be able to distinguish observers from followers by whether they are members of the current view, I haven&apos;t duplicated code into Observer* classes.&lt;/p&gt;

&lt;p&gt;I added this when finding that any new follower can join an existing ensemble and issue proposals to it, even if the static configuration of the ensemble does not contain it. This seemed to deadlock the ensemble pretty quickly &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Edit: of course, this means that Observers can&apos;t actually see the payload of a transaction, as per the note on ZK-368. Either the leader sends special packets (INFORM, perhaps) to Observers containing the transaction payload, or the Observers must know not to participate in voting. That said, the Leader will ignore the votes of Observers, but we want to cut down on traffic. &lt;/p&gt;
</comment>
                            <comment id="12722314" author="fpj" created="Sun, 21 Jun 2009 09:34:31 +0100"  >&lt;p&gt;That&apos;s a great catch, Henry, the one related to having any new (perhaps invalid) follower being able to submit requests. When you start a new follower not in the configuration, do you run it  as a regular replica and let it find its way or you explicitly tell the follower to connect to the leader?&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if we should discuss detail of the observer here or in the other jira, but I&apos;m wondering how an observer is able to find the leader to connect. The default leader election uses identifiers to connect and form quorums, so I&apos;m not sure a server not in the configuration would be able to determine which replica is the leader. I think we can do it with leader election 0, though, if a leader has been elected and is running&lt;/p&gt;

&lt;p&gt;Are you planning on having observers as a separate feature, as per ZK-368? It would be great to have it, since you are going through the effort of implementing it already.&lt;/p&gt;

&lt;p&gt;As for the message to observers containing the transaction, the advantage of having a special message (e.g., INFORM) is that we cut down the number of messages to observers: INFORM is essentially a COMMIT containing the request. If we don&apos;t change the protocol, then we can just have the leader sending a PROPOSAL to everyone, including the observers. As observers will receive the COMMIT as well, we have higher message complexity. For now, I&apos;m good either way. &lt;/p&gt;</comment>
                            <comment id="12722368" author="henryr" created="Sun, 21 Jun 2009 16:16:35 +0100"  >&lt;p&gt;I think the issue of how to locate an ensemble whose makeup has changed needs to be discussed separately. I&apos;ve got an idea for how I&apos;d suggest doing it, but will leave that until I&apos;ve got the view change stuff working. Once a new leader has been elected, it will need to publish this somewhere (probably both internal to ZK in /zookeeper/ensemble and externally). Observers can use one of those routes to find the leader.&lt;/p&gt;

&lt;p&gt;At the moment, Observers are just followers that a) can&apos;t make most mutable proposals b) don&apos;t get either PROPOSE or COMMIT messages, just INFORM ones with the payload and c) can propose view changes, not necessarily to include themselves. So an Observer attaches to a leader, syncs and maybe listens in on the proposal stream for a while and then upgrades itself by issuing a view change request.&lt;/p&gt;
</comment>
                            <comment id="12728300" author="breed" created="Tue, 7 Jul 2009 20:02:18 +0100"  >&lt;p&gt;sorry to jump in late here. rather than adding the inform, why don&apos;t we just send the PROPOSE and COMMIT to the Observer as normal, and just make the Observer not send ACKs? That way we change as little code as possible with minimum overhead. It also makes switching from Observer to Follower as easy as turning on the ACKs. I also think Observers should be able to issue proposals. One use case for observers are remote data centers that basically proxy clients that connect to ZooKeeper. This means an Observer is just a Follower that doesn&apos;t vote (ACK).&lt;/p&gt;</comment>
                            <comment id="12728429" author="henryr" created="Wed, 8 Jul 2009 00:57:23 +0100"  >&lt;p&gt;That&apos;s definitely one way to do it. The other side to that argument is to keep the message complexity down, especially if we can envisage use cases with lots of Observers. A connection to a remote Observer might be more likely to violate the FIFO requirement of ZK connections; having a single-message protocol makes it easier to deal with this case (not a correctness issue of Observers, just annoying if PROPOSALs arrive after COMMITs for some reason). I think that&apos;s a marginal issue though. My preference is for INFORM messages as this completely separates Observer logic from Follower logic and doesn&apos;t add much complexity to the code. &lt;/p&gt;

&lt;p&gt;The Observer also has to take care not to participate in leader elections. I think Observers also need to announce themselves as such to the Leader, to enable the case where a Follower wishes to connect as an Observer temporarily (otherwise the Leader will think the Observer to be a Follower and use it as part of a quorum). Also if the leader can distinguish between followers and observers then it can treat both differently (e.g. through batching multiple INFORMs or allowing observers to lag by prioritising follower traffic). &lt;/p&gt;

&lt;p&gt;Keeping Observers as special-case Followers would simplify the code for the observers patch (I&apos;ve got a new version nearly ready to submit, just fixing some tests). However, it would mean that Observers are harder to customise - for example, there&apos;s no persistence requirement for an Observer and so some of the RequestProcessors can be optionally removed or replaced by something that only asynchronously writes to disk. Keeping them lightweight has been a goal. My feeling was that I was introducing too many &apos;if (amObserver()) &lt;/p&gt;
{...}
&lt;p&gt;&apos; branches to an already fairly hard to follow bit of code (in particular Follower.followLeader). Breaking the functionality into two separate classes seems to have made things cleaner.&lt;/p&gt;

&lt;p&gt;Regarding Observers being able to issue proposals; I don&apos;t have a problem with that, should be reasonably easy to add. &lt;/p&gt;</comment>
                            <comment id="12728589" author="fpj" created="Wed, 8 Jul 2009 10:50:02 +0100"  >&lt;p&gt;I think this discussion is really interesting, but we can we move the discussion on the behavior of the observer to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-368&quot; title=&quot;Observers: core functionality &quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-368&quot;&gt;&lt;del&gt;ZOOKEEPER-368&lt;/del&gt;&lt;/a&gt;? I&apos;ll add my comments on the last set of comments there.&lt;/p&gt;</comment>
                            <comment id="12730384" author="zkuser" created="Mon, 13 Jul 2009 16:47:58 +0100"  >&lt;p&gt;Sorry to jump around bit, I thought I will mention this if we haven&apos;t already talked about it. How do we plan to deal with a situation when a set of nodes can form a majority but  can&apos;t form an ensemble because one or more peers have a grossly outdated configuration? Say an ensemble of ABCDE moved to EFGHI while E was offline and only EFG are up? They form a majority but can&apos;t form an ensemble since E doesn&apos;t know about any of the other servers yet?&lt;/p&gt;

&lt;p&gt;One way to address this is to implement an out of band synchronization mechanism in which E will realize that the ensemble has changed when F and G try to connect to E and have one them synchronize E&apos;s logs since their last know zxids are ahead of E&apos;s. E can then attempt to restart an election. Also, it is possible that F and G could see different ensembles (F is a bit out dated, G is the most up to date), in which case E might first sync up form F and then both E and F sync up form G if G comes online a bit later.&lt;/p&gt;

&lt;p&gt;Any simpler solutions?&lt;/p&gt;</comment>
                            <comment id="12730414" author="henryr" created="Mon, 13 Jul 2009 18:32:07 +0100"  >&lt;p&gt;Raghu:&lt;/p&gt;

&lt;p&gt;Your solution is essentially what will happen. F and G will contact E while they are trying to elect a leader. During this process they can all exchange the most recent view that they saw so that E realises the current view. If EFG form a quorum in any view then we can see that either a) it is the latest view or b) at least one of them will know about a later view. Therefore there&apos;s also no concern about resurrecting old views.&lt;/p&gt;


</comment>
                            <comment id="12731056" author="phunt" created="Tue, 14 Jul 2009 20:06:28 +0100"  >&lt;p&gt;I&apos;ve only been following this a bit, and I see bits/pieces in the comments but not sure I follow it all &amp;#8211; some questions around the plan wrt manageability:&lt;/p&gt;

&lt;p&gt;1) adding removing servers, server itself needs to be configured, any changes needed to config on existing ensemble? I see Raghu has similar comment on this&lt;br/&gt;
2) JMX - what&apos;s the plan? what additional properties/actions will be supported?&lt;br/&gt;
3) 4letter words - same issues as jmx&lt;br/&gt;
4) debug-ability - ensure adequate logging (log4j) on ensemble&lt;/p&gt;

&lt;p&gt;5) security - will an ensemble allow any server to connect to it? today we have ensemble participants hardwired into the config of each of the servers right?&lt;/p&gt;

&lt;p&gt;testing and b/w compat &amp;#8211; are we ensuring b/w compat btw this version and previous versions? (I&apos;m probably going to look at beefing up unit &amp;amp; systest next, esp around b/w compat, so would be good to have a better idea where this is headed). IMO this patch must include unit as well as systest before it is committed.&lt;/p&gt;

&lt;p&gt;documentation will be needed as well.&lt;/p&gt;


&lt;p&gt;Perhaps a wiki &quot;proposal&quot; page should be created that will capture the &quot;current proposal&quot; for easy review of this feature? This JIRA can capture ongoing discussion, with agreed upon results capture in the wiki design/functional document. I know it would help me alot.&lt;/p&gt;</comment>
                            <comment id="12731776" author="zkuser" created="Thu, 16 Jul 2009 04:02:21 +0100"  >&lt;p&gt;@henry,&lt;/p&gt;

&lt;p&gt;Sorry if this sounds like a repeat, thought I will summarize the error handling during view change. Could you comment if this makes sense?&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;1. Configuration change succeeds if the change is successfully committed in both the old view and the new view. An observer is promoted to a follower only after it receives a COMMIT for the new view.&lt;/p&gt;

&lt;p&gt;2. Each peer could have two views of the cluster &amp;#8211; the last committed view and the last proposed view (which is created after a VIEWCHANGE proposal is received). The latter can be NULL if there is no view change attempt in progress.&lt;br/&gt;
    2.A. Each peer will always attempt an election with the last committed view. Proposed views will be converted to committed views (or deleted) post leader election.&lt;br/&gt;
    2.B. The proposal record of a peer contains (in addition to last logged ZXID and server ID) the last committed view of the peer&lt;/p&gt;

&lt;p&gt;3. During election, if the last committed view of the peer with the smaller ZXID (P(ZXLOW)) is different from the last committed view of the peer with the higher ZXID (P(ZXHIGH), then P(ZXLOW) adapts P(ZXHIGH)&apos;s last committed view and broadcasts the adapted view to all other peers.&lt;br/&gt;
	3.A. Two nodes with the same ZXID should have the same committed views&lt;br/&gt;
	3.B. If the last committed views of P(ZXLOW) and P(ZXHIGH) are the same, but P(ZXHIGH) has a proposed new view (not committed yet though), that view will not be considered by both the peers during election. Similarly, if the N(ZXLOW) has a proposed view, that will not be considered either.&lt;br/&gt;
	3.C. If P(ZXLOW) adapts P(ZXHIGH)&apos;s last committed view and that view doesn&apos;t include P(ZXLOW), P(ZXLOW) drops out of election (should it self destruct??)&lt;/p&gt;

&lt;p&gt;4. Once a leader is elected, it will sync up the logs of the followers that are lagging behind just like it&apos;s done today:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If there is a follower who&apos;s last committed view is different from the leader&apos;s, log synchronization will make sure follower&apos;s last committed view gets updated to be in sync with the leader&apos;s. Follower doesn&apos;t do anything when its last committed view changes (the new view MUST have the follower since 3.C prevents a follower that is not in the leading candidate&apos;s committed view from successfully completing an election)&lt;/li&gt;
	&lt;li&gt;If there is an observer who upon log synchronization learns that the committed view includes the observer, the observer will promote itself to a follower&lt;/li&gt;
	&lt;li&gt;If a follower with a proposed view joins an already established leader who doesn&apos;t know about that proposed view, the follower&apos;s proposed view will be erased when the leader synchronizes the followers log&lt;/li&gt;
	&lt;li&gt;If the leader has a proposed new view in its log, the leader will send a COMMIT for the new view after majority peers in the old view and the new view have synced their log to the leader&apos;s log&lt;br/&gt;
		4.A. The view change COMMIT doesn&apos;t mean much for the followers that are not impacted by the view change&lt;br/&gt;
		4.B. The observer that gets view change COMMIT will promote itself to a follower if the new view includes the observer&lt;br/&gt;
		4.C. The follower that gets the view change will drop out of the cluster if the new view doesn&apos;t include the follower &lt;br/&gt;
		4.D. The leader will drop out of the cluster once COMMIT is delivered locally if the new view doesn&apos;t include the leader. This will result in a new election.&lt;br/&gt;
		4.E. The leader will adjust the quorum size as per the new view otherwise.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12851420" author="quintonh" created="Tue, 30 Mar 2010 15:50:07 +0100"  >&lt;p&gt;Any progress on this issue?  It seems to have gone very quiet.  We have this precise requirement, and will have to solve it one way or another in the coming months.&lt;/p&gt;</comment>
                            <comment id="12851426" author="quintonh" created="Tue, 30 Mar 2010 15:58:55 +0100"  >&lt;p&gt;OK, not to worry.  I just found the answer to my question here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mail-archive.com:80/zookeeper-dev@hadoop.apache.org/msg07382.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com:80/zookeeper-dev@hadoop.apache.org/msg07382.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12863359" author="vishalmlst" created="Mon, 3 May 2010 15:21:52 +0100"  >&lt;p&gt;Hi Henry,&lt;/p&gt;

&lt;p&gt;We are using ZK for one the projects at VMware. We are very much interested in having dynamic membership managment. I went through the dev mailing list above . I would like to contribute and develop this feature. It sounds like a fun project.&lt;/p&gt;

&lt;p&gt;Can you please provide an update regarding how far we are with this and any documentation that you may have? I will start off a separte discussion thread regarding this on the dev mailing list instead of having it over the jira.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
-Vishal&lt;/p&gt;</comment>
                            <comment id="12869554" author="andraz" created="Thu, 20 May 2010 11:36:15 +0100"  >&lt;p&gt;Has anything happened with this feature?&lt;/p&gt;

&lt;p&gt;There was some talk about what the most important use cases are on the mailing list. We&apos;re thinking of migrating home-grown solution to Zookeeper, but can&apos;t do it without dynamic addition/removal of the servers. If it helps, here&apos;s the use case:&lt;/p&gt;

&lt;p&gt;We&apos;re having fully cloudy solution. Every server that we put into the cluster runs a set of services that make themselves available to a local &quot;resource manager&quot; that shares the list of resources with all other servers in the cluster. When we do upgrades we simply fire up new servers with new versions of the services and connect their resource managers to the old ones into the same cluster. Then we simply shut down the old servers. Beside adding/removing servers when upgrading, we also do the same thing when we need to temporarily scale - we fire up a few more servers and connect their resource managers to the cluster to make the services available to the cluster. &lt;br/&gt;
We never know how many servers there are going to be in the cluster and we don&apos;t assign any dns entries to them (just another point of failure).&lt;br/&gt;
The clients that need to know about resources connect to any of the &quot;resource managers&quot; and get a list of all resources available and also about other &quot;resource managers&quot;. As servers move around they also can connect to different &quot;resource manager&quot;.&lt;/p&gt;

&lt;p&gt;This is a bit unusual configuration since cloud practically lives on its own without any kind of static addresses. As long as you are able to connect to it at one point in time, you can keep up with it &apos;motion&apos;. &lt;/p&gt;

&lt;p&gt;So the idea was to migrate the above system to Zookeeper. Every service would connect to local Zookeeper and create ephemeral node announcing it. So every server would run its own Zookeeper node connected to the Zookeeper cloud. However without dynamic addition/removal of the servers all this becomes infeasible.&lt;/p&gt;

&lt;p&gt;Ideally we&apos;d like to have a situation where we just start a Zookeeper node by giving it a list of known other Zookeeper nodes in the cloud. And then it should take on to the life of its own.&lt;/p&gt;

&lt;p&gt;Hope that the use case helps. I am really looking forward to this!&lt;/p&gt;
</comment>
                            <comment id="12874234" author="fpj" created="Tue, 1 Jun 2010 21:55:39 +0100"  >&lt;p&gt;I have started a wiki page to discuss the design of this feature: &lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/ClusterMembership&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/ClusterMembership&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is not supposed to replace this jira, but instead to have a more organized way of working on the design of this feature. Please consider contributing. &lt;/p&gt;</comment>
                            <comment id="13004982" author="shralex" created="Thu, 10 Mar 2011 07:05:19 +0000"  >&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/ClusterMembership&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/ClusterMembership&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13004983" author="shralex" created="Thu, 10 Mar 2011 07:08:57 +0000"  >&lt;p&gt;I&apos;ve added a proposed algorithm and some discussion here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/ZOOKEEPER/ClusterMembership&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/ZOOKEEPER/ClusterMembership&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13006565" author="vishalmlst" created="Mon, 14 Mar 2011 18:43:24 +0000"  >

&lt;p&gt;Great! Thanks for the design. I have a few suggestions/questions below.&lt;/p&gt;

&lt;p&gt;A. Bootstrapping the cluster&lt;br/&gt;
    The algorithm assumes that a leader exists prior to doing a reconfig.&lt;br/&gt;
So it looks like the reconfig() API is not intended to use for bootstrapping&lt;br/&gt;
the cluster. How about we define a API for initializing the cluster? &lt;/p&gt;

&lt;p&gt;Instead of relying on the current method of setting the initial configuration&lt;br/&gt;
in the config file, we should probably also have to define a join(M) (or&lt;br/&gt;
init(M)) API. When a peer receives this request, it will try to connect to the&lt;br/&gt;
specified peers.  During bootstrap peers will connect to each other (as they do&lt;br/&gt;
now) and elect a leader.&lt;/p&gt;

&lt;p&gt;B. Storing membership in znode and updating client (a tangential topic to this&lt;br/&gt;
design).&lt;br/&gt;
    Earlier &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt; proposed of using a URI based approach for the&lt;br/&gt;
clients to fetch server list. I am not opposed to the URI based approach,&lt;br/&gt;
however, that shouldn&apos;t be our only approach. URI based approach requires extra&lt;br/&gt;
resources (e.g., fault tolerant web service or shared storage for file, etc).&lt;br/&gt;
In certain environments it may not be feasible to have such a resource.&lt;br/&gt;
Instead, can we use a mechanism similar to ZooKeeper watchpoints for this?&lt;br/&gt;
Store the membership information in a znode and let the ZooKeeper server inform&lt;br/&gt;
the clients of the changed configuration.&lt;/p&gt;

&lt;p&gt;C. Locating most recent config on servers&lt;br/&gt;
    The URI based approach will be more helpful to servers. For example, if&lt;br/&gt;
A was down when M=&lt;/p&gt;
{A, B, C}
&lt;p&gt; was changed to M&apos;=&lt;/p&gt;
{A, D, E}
&lt;p&gt;, then when A comes&lt;br/&gt;
online it won&apos;t be able to locate the most recent config. In this case, A can&lt;br/&gt;
query the URI. Second approach is to ask the leader to try to periodically&lt;br/&gt;
send the membership (at least to nodes that are down).&lt;/p&gt;

&lt;p&gt;D. &quot;Send a message to all members(M&#8217;) instructing them to connect to leader(M).&quot;&lt;br/&gt;
    leader(M) can potentially change after sending this message. Should&lt;br/&gt;
this be &quot;Send a messages to all members(M&apos;) to connect to members(M)? See&lt;br/&gt;
point G. below.&lt;/p&gt;

&lt;p&gt;Also, in step 7, why do you send leader(M&apos;) along with &amp;lt;activate-config&amp;gt;message&amp;gt;?&lt;/p&gt;

&lt;p&gt;E. &quot;3. Submit a reconfig(M&#8217;) operation to leader(M)&quot;&lt;br/&gt;
    What if leader(M) fails after receiving the request, but before&lt;br/&gt;
informing any other peer? How will the administrative client know whether to&lt;br/&gt;
retry or not?  Should s retry if leader fails and should the client API retry&lt;br/&gt;
if s fails? &lt;/p&gt;

&lt;p&gt;F. Regarding 3.a and 3.b.&lt;/p&gt;

&lt;p&gt;The algorithm mentions:&lt;/p&gt;

&lt;p&gt;&quot;3. Otherwise:&lt;br/&gt;
   a. Designate the most up-to-date server in connected quorum of M&apos; to be leader(M)&lt;br/&gt;
   b. Stop processing new operations, return failure for any further ops received&quot;&lt;/p&gt;

&lt;p&gt;Why do we need to change the leader if leader(M) is not in M&apos;? How about we let&lt;br/&gt;
the leader perform the reconfig and at the end of phase 3 (while processing&lt;br/&gt;
retire) the leader will give up leadership. This will cause a new leader&lt;br/&gt;
election and one of the peer in M&apos; will become the leader. Similarly, after the&lt;br/&gt;
second phase, members(M&apos;) will stop following leader(M) if leader(M) is not in&lt;br/&gt;
M&apos;. I think this will be simpler.&lt;/p&gt;

&lt;p&gt;G. Online VS offline&lt;/p&gt;

&lt;p&gt;    In your &quot;Online vs offline&quot; section, you mentioned that the offline&lt;br/&gt;
strategy is preferred. I think we can do reconfiguration online.&lt;br/&gt;
I pictured M&apos; as modified OBSERVERS till the time the reconfiguration is complete.&lt;/p&gt;

&lt;p&gt;a. Let new members(M&apos;) join the cluster as OBSERVERS. Based on the current&lt;br/&gt;
implementation, M&apos; will essentially sync with the leader after becoming&lt;br/&gt;
OBSERVERS and it will be easier to leverage the RequestProcessor pipeline for&lt;br/&gt;
reconfig.&lt;/p&gt;

&lt;p&gt;b. Once a majority of M&apos; join the leader, the leader executes phase 1 as you&lt;br/&gt;
described.&lt;/p&gt;

&lt;p&gt;c. After phase 1., the leader changes the transaction logic a bit. Every&lt;br/&gt;
transaction after this point (including reconfig-start) will be sent to M and&lt;br/&gt;
M&apos;.  Leader then waits for quorum(M) and quorum(M&apos;) to ack the transaction. So&lt;br/&gt;
M&apos; are not pure OBSERVERS as we think today. However, only a member of M can&lt;br/&gt;
become a leader until reconfig succeeds.  Also, M&apos; - (M n M&apos;) cannot serve&lt;br/&gt;
client requests until reconfiguration is complete. By doing a transaction on&lt;br/&gt;
both M and M&apos; and waiting for the quorum of each set to ack, we keep transfering&lt;br/&gt;
the state to both the configurations.&lt;/p&gt;

&lt;p&gt;d. After receiving ack for phase 2, the leader sends &amp;lt;switch-to-new-config&amp;gt;&lt;br/&gt;
transaction to M and M&apos; (instead of sending retire just to M).&lt;/p&gt;

&lt;p&gt;After receiving this message, M&apos; will close connections with (and reject&lt;br/&gt;
connections from) members not in M&apos;.  Members that are supposed to leave the&lt;br/&gt;
cluster will shutdown QuorumPeer. If leader(M) is not in M&apos;, then a new&lt;br/&gt;
leader(M&apos;) will be elected.&lt;/p&gt;

&lt;p&gt;Let me know what you think about this.&lt;/p&gt;

&lt;p&gt;H. What happens if a majority of M&apos; keep failing during reconfig?&lt;/p&gt;

&lt;p&gt;M=&lt;/p&gt;
{A, B}
&lt;p&gt;, M&apos;=&lt;/p&gt;
{A, C, D, E}
&lt;p&gt;. What if D, E fail?&lt;/p&gt;

&lt;p&gt;Failure of a majority of M&apos; will permanently stall reconfig. While this is&lt;br/&gt;
less likely to happen, I think ZooKeeper should handle this&lt;br/&gt;
automatically. After a few retries, we should abort reconfig.  Otherwise, we&lt;br/&gt;
could disrupt a running cluster and we will never be able to recover without&lt;br/&gt;
manual intervention. If the majority fails after phase 1, then this would mean&lt;br/&gt;
sending a &amp;lt;abort-reconfig, version(M), M&apos;&amp;gt; to M.&lt;/p&gt;

&lt;p&gt;Of course, one can argue - what if majority of M&apos; fail after phase 3? So not&lt;br/&gt;
sure if this is an overkill, but I feel we should handle this case.&lt;/p&gt;

&lt;p&gt;I. &quot;Old reconfiguration request&quot;&lt;/p&gt;

&lt;p&gt;a. We should use ZAB&lt;br/&gt;
b. A side note - I think &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt; needs to be resolved for reconfig to&lt;br/&gt;
work. This bug causes logs to diverge if ZK leader fails before sending&lt;br/&gt;
PROPOSALs to followers (see&lt;br/&gt;
&lt;a href=&quot;http://www.mail-archive.com/zookeeper-user@hadoop.apache.org/msg00403.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com/zookeeper-user@hadoop.apache.org/msg00403.html&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Because of this bug we could run into the following scenario:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A peer B that was leader when reconfig(M&apos;) was issued will have reconfig M&apos;&lt;br/&gt;
  in its transaction log.&lt;/li&gt;
	&lt;li&gt;A peer C that became leader after B&apos;s failure, can have reconfig(M&apos;&apos;) in its&lt;br/&gt;
  log.&lt;/li&gt;
	&lt;li&gt;Now, if B and C fail (say both reboot), then the outcome of reconfig will&lt;br/&gt;
  depend on which node takes leadership. If B becomes a leader, then out come&lt;br/&gt;
is M&apos;. If C becomes a leader, then outcome is M&apos;&apos;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;J. Policies/ sanity checks&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should we allow removal of a peer in a 3 node configuration? How about in a&lt;br/&gt;
2-node configuration?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can you please add section numbers to the design paper? It will be easier to&lt;br/&gt;
refer to the text by numbers.&lt;/p&gt;

&lt;p&gt;Thanks again for working on this. We are about to release the first version of&lt;br/&gt;
our product using ZooKeeper, which uses static configuration. Our next version&lt;br/&gt;
is heavily dependent on dynamic membership. We will be happy to chip in from our&lt;br/&gt;
side to help with the implementation.&lt;/p&gt;</comment>
                            <comment id="13006716" author="shralex" created="Mon, 14 Mar 2011 23:24:33 +0000"  >&lt;p&gt;Hi Vishal,&lt;/p&gt;

&lt;p&gt;Thanks a lot for your comments and for offering to help. I have some experience with reconfigurable solutions however&lt;br/&gt;
I&apos;m new to the ZooKeeper project and your help will be very appreciated. I suggest to start by figuring out what we&apos;d &lt;br/&gt;
like to do and then we can decide who does what. &lt;/p&gt;

&lt;p&gt;As you suggested I numbered the sections so it&apos;s easier to refer to. Some of the things you point out are very important but I think they are separate from the core design so we can address them separately.&lt;/p&gt;

&lt;p&gt;A. I agree that bootstrapping the cluster should probably be done this way, but this seems like a separate issue - in this case the reconfiguration is very simple since the state is empty and we can block until the configuration connects. One related thing - in my proposal I suggested that the server that gets the reconfig request from a client sends a message to members(M&apos;) instructing them to connect to leader(M). This can be done by invoking a join(M) command on the servers.&lt;/p&gt;

&lt;p&gt;B. This is an important issue and I definitely agree we should discuss this, but I think this is also orthogonal to any solution we choose now.&lt;/p&gt;

&lt;p&gt;C. Agree, second approach looks good (leader periodically broadcasts membership, or at least the configuration id).&lt;/p&gt;

&lt;p&gt;D. The purpose of connecting is only to begin state transfer, so only connecting to the leader matters. For example, there is no need&lt;br/&gt;
for members(M) to detect failure of new servers that are trying to connect. If the leader fails then the new leader can be responsible for establishing connections to members(M&apos;) as part of completing the reconfiguration (see first step in Section 4.2).&lt;/p&gt;

&lt;p&gt;&amp;gt; Also, in step 7, why do you send leader(M&apos;) along with &amp;lt;activate-config&amp;gt; message?&lt;/p&gt;

&lt;p&gt;The idea is that there is no need to explicitly run leader election in M&apos; - the old leader can appoint one of members(M&apos;) to be the new leader (the new leader should be chosen s.t. it is up-to-date with M). This way leader election in M&apos; is only required if the designated leader fails. Including leader(M&apos;) in the phase-3 message instructs it to start acting as leader of M&apos;.&lt;/p&gt;

&lt;p&gt;E. This is very related to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt; (how does a client know whether its operation has been executed if the leader failed) ?&lt;br/&gt;
In this case though, it should be easy to detected whether the reconfiguration was completed or not - the recovery procedure will have the property that when a new leader is established then either the new leader has observed the reconfiguration attempt and completed it or no further leader will (if we fix &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;).  &lt;/p&gt;

&lt;p&gt;We should provide a way to query for the current configuration, both for the issue you mention and also for non-incremental reconfig API (I suggest that a client invoking a reconfig request should include the version of the current config in the request and if this config is no longer the current its request should be aborted, Section 4.3).&lt;/p&gt;

&lt;p&gt;F. This is exactly what I meant - I think you didn&apos;t notice the &quot;&#8217;&quot; (it says &quot;to be leader(M&#8217;)&quot;).&lt;/p&gt;

&lt;p&gt;G. I agree that online would be better. I initially thought that it&apos;s not possible in this case, but now I think there&apos;s a way.&lt;/p&gt;

&lt;p&gt;&amp;gt; a. Let new members(M&apos;) join the cluster as OBSERVERS. Based on the&lt;br/&gt;
&amp;gt; current implementation, M&apos; will essentially sync with the leader after becoming&lt;br/&gt;
&amp;gt; OBSERVERS and it will be easier to leverage the RequestProcessor pipeline for reconfig.&lt;/p&gt;

&lt;p&gt;This was also my intention - to let them connect to the leader and perform state transfer before the leader is requested to reconfigure.&lt;/p&gt;

&lt;p&gt;&amp;gt; b. Once a majority of M&apos; join the leader, the leader executes phase 1 as you described.&lt;/p&gt;

&lt;p&gt;I think a reconfig operations should be sent to the leader only after a majority of M&apos; has connected to it. This way we avoid waiting&lt;br/&gt;
for this to happen in the leader code. The leader can check whether a majority is connected and not too far behind with regard to&lt;br/&gt;
state transfer and abort otherwise (line 1 in the algorithm).&lt;/p&gt;

&lt;p&gt;&amp;gt; c. After phase 1., the leader changes the transaction logic a bit. Every transaction after this point (including reconfig-start) will be sent to M and M&apos;.  &lt;br/&gt;
&amp;gt; Leader then waits for quorum(M) and quorum(M&apos;) to ack the transaction. So M&apos; are not pure OBSERVERS as we think today. However, only a member of&lt;br/&gt;
&amp;gt; M can become a leader until reconfig succeeds.  Also, M&apos; - (M n M&apos;) cannot serve client requests until reconfiguration is complete. By doing a&lt;br/&gt;
&amp;gt; transaction on both M and M&apos; and waiting for the quorum of each set to ack, we keep transferring the state to both the configurations.&lt;br/&gt;
&amp;gt; d. After receiving ack for phase 2, the leader sends &amp;lt;switch-to-new-config&amp;gt; transaction to M and M&apos; (instead of sending retire just to M).&lt;br/&gt;
&amp;gt; After receiving this message, M&apos; will close connections with (and reject connections from) members not in M&apos;.  Members that are supposed to&lt;br/&gt;
&amp;gt; leave the cluster will shutdown QuorumPeer. &lt;/p&gt;

&lt;p&gt;Here are some issues that I see with your proposal:&lt;/p&gt;

&lt;p&gt;1. Suppose that leader(M) fails while sending phase-3 messages and all phase-3 messages arrive to members(M) but none arrive to members(M&apos;). Now the system is stuck: M&apos; - (M n M&apos;) cannot serve client requests whereas members(M) are no longer in the system.&lt;br/&gt;
This is why I think before garbage-collecting M we must make sure that M&apos; is operational by itself. &lt;/p&gt;

&lt;p&gt;2. In my proposal members(M&apos;) can accept operations as soon as they get the phase-2 message, which is the purpose of phase 2. &lt;br/&gt;
I don&apos;t see why phase-2 is needed in your proposal. I suggest to stick with 3 phases s.t. phase-2 message allows M&apos; to be independent.&lt;/p&gt;

&lt;p&gt;3. Because of Global Primary Order property of ZAB we can&apos;t allow a commit message to arrive from leader(M) to members(M&apos;) after they are allowed to process&lt;br/&gt;
messages independently in M&apos;. Your solution handles this because members(M&apos;) close connections to leader(M) as soon as they&apos;re allowed to process messages independently, but then its not clear how the outstanding ops get committed. In order to commit these operations nevertheless so I suggest that this would be the task of leader(M&apos;). &lt;/p&gt;

&lt;p&gt;Here&apos;s what I suggest:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;after leader(M) sends phase-1 message to members(M) it starts sending every received new op to both members(M) and members(M&apos;) (treating them as followers). Commit messages must not be sent to members(M&apos;) by leader(M) and sending such messages to members(M) does not hurt but is not necessary. In any case, clients are not acked regarding these ops.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;As soon as enough acks are received for the phase-1 message from members(M), leader(M) sends a phase-2 message to members(M&apos;) and from this moment doesn&apos;t accept new ops (unless leader(M) is also in M&apos; and therefore acts also as leader(M&apos;)).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When members(M&apos;) receive the phase-2 message from leader(M) they send an ack both to leader(M) and to leader(M&apos;) - in practice it can send an ack to leader(M) first, then disconnect from it and then connect to leader(M&apos;) and send an ack to it but it doesn&apos;t matter for correctness. When leader(M&apos;) receives this ack from a quorum of members(M&apos;) (as well as the phase-2 message from leader(M)) it can commit all preceding ops in M&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The thing is, until &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt; is fixed the fact that we&apos;re processing ops in M&apos; doesn&apos;t really help since the clients won&apos;t be able to know that the ops got committed.&lt;/p&gt;

&lt;p&gt;H.  I agree - it&apos;s an overkill &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  We can make sure that a quorum of M&apos; is connected when the reconfiguration starts.&lt;/p&gt;

&lt;p&gt;I.  I agree - it is important to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt; (as well as &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;J. As long as a quorum of the old and the new config are up during the reconfig it seems like we can do the reconfig (e.g., the majority of 2 is 2). Currently a warning is issued if there are 2 nodes in a configuration, we can do that too. Actually, we need to define liveness more carefully, it&apos;s on my ToDo list &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Best Regards,&lt;br/&gt;
Alex&lt;/p&gt;
</comment>
                            <comment id="13007297" author="shralex" created="Wed, 16 Mar 2011 00:30:50 +0000"  >&lt;p&gt;I updated the algorithm and section 4.1, and added some points for discussion as section 4.7&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/ZOOKEEPER/ClusterMembership&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/ZOOKEEPER/ClusterMembership&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13011450" author="vishalmlst" created="Fri, 25 Mar 2011 22:12:39 +0000"  >&lt;p&gt;Hi Alex,&lt;/p&gt;

&lt;p&gt;Thanks for the updated design. Some comments below. Some of these might be&lt;br/&gt;
repetition of what we discussed earlier. I am adding them here so that we&lt;br/&gt;
have it on the jira.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;D. The purpose of connecting is only to begin state transfer, so only&lt;br/&gt;
connecting to the leader matters.  for members(M) to detect failure of new&lt;br/&gt;
servers that are trying to connect. If the leader fails then the new leader can&lt;br/&gt;
be responsible for establishing connections to members(M&apos;) as part of&lt;br/&gt;
completing the reconfiguration (see first step in Section 4.2).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What will M&apos; do if the leader(M) fails? We could run into a scenario where M&apos;&lt;br/&gt;
don&apos;t know about leader(M) and leader(M) may not know about M&apos;. So it might&lt;br/&gt;
be easier to ask M&apos; to connect to M. Essentially, we need a way to figure out&lt;br/&gt;
who the current leader is. We could potentially run the virtual IP based&lt;br/&gt;
approach that I mentioned earlier. Let the leader runs a &quot;cluster IP&quot; and&lt;br/&gt;
anyone (including ZK clients) that wants to get cluster/leader information can&lt;br/&gt;
send query to this IP.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the old leader can appoint one of members(M&apos;) to be the new leader (the new leader&lt;br/&gt;
should be chosen s.t. it is up-to-date with M). This way leader election in M&apos;&lt;br/&gt;
is only required if the designated leader fails.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I am not in favor of this approach. May I suggest that from implementation&lt;br/&gt;
perspective, we leave this&lt;br/&gt;
in future work/ improvements section? It certainly is a good optimization, but&lt;br/&gt;
I don&apos;t see it giving us significant benefits. IMHO, it seems a bit counter&lt;br/&gt;
intuitive for node x to designate node y as a leader in a distributed protocol&lt;br/&gt;
that is designed to elect leaders. I find it easier to think &quot;elect a leader if&lt;br/&gt;
you need one&quot;. I am also concerned that this is going to make the&lt;br/&gt;
implementation prone to strange corner cases and more complex (to test as well).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;E. This is very related to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt; (how does a client know whether its&lt;br/&gt;
operation has been executed if the leader failed) ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed. However, the client library attempts to reconnect to the servers.&lt;br/&gt;
Also, the application can verify if the transaction is done when it&lt;br/&gt;
reconnects next time.  We may have to do something similar as well. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;reconfiguration attempt and completed it or no further leader will (if we fix&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt; )&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why should we not fix &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt;? Won&apos;t the log divergence cause&lt;br/&gt;
unpredictable outcome of reconfiguration? log of A has M&apos; and log of B has M&apos;&apos;.&lt;br/&gt;
Depending upon who wins election the configuration will be either M&apos; or M&apos;&apos;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think a reconfig operations should be sent to the leader only after a&lt;br/&gt;
majority of M&apos; has connected to it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, though (as you pointed out) this is not strictly necessary for the&lt;br/&gt;
correctness of the protocol.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here are some issues that I see with your proposal:&lt;/p&gt;

&lt;p&gt;1. Suppose that leader(M) fails while sending phase-3 messages and all phase-3 messages arrive to members(M) but none arrive to members(M&apos;). Now the system is stuck: M&apos; - (M n M&apos;) cannot serve client requests whereas members(M) are no longer in the system.&lt;br/&gt;
This is why I think before garbage-collecting M we must make sure that M&apos; is operational by itself.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Could this be fixed by sending the message to M&apos; first and then sending to M&lt;br/&gt;
after receiving ack from majority of M&apos;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2. In my proposal members(M&apos;) can accept operations as soon as they get the phase-2 message, which is the purpose of phase 2.&lt;br/&gt;
I don&apos;t see why phase-2 is needed in your proposal. I suggest to stick with 3 phases s.t. phase-2 message allows M&apos; to be independent.&lt;/p&gt;

&lt;p&gt;3. Because of Global Primary Order property of ZAB we can&apos;t allow a commit message to arrive from leader(M) to members(M&apos;) after they are allowed to process&lt;br/&gt;
messages independently in M&apos;. Your solution handles this because members(M&apos;) close connections to leader(M) as soon as they&apos;re allowed to process messages independently, but then its not clear how the outstanding ops get committed. In order to commit these operations nevertheless so I suggest that this would be the task of leader(M&apos;).&lt;/p&gt;

&lt;p&gt;Here&apos;s what I suggest:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;after leader(M) sends phase-1 message to members(M) it starts sending every received new op to both members(M) and members(M&apos;) (treating them as followers). Commit messages must not be sent to members(M&apos;) by leader(M) and sending such messages to members(M) does not hurt but is not necessary. In any case, clients are not acked regarding these ops.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;As soon as enough acks are received for the phase-1 message from members(M), leader(M) sends a phase-2 message to members(M&apos;) and from this moment doesn&apos;t accept new ops (unless leader(M) is also in M&apos; and therefore acts also as leader(M&apos;)).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When members(M&apos;) receive the phase-2 message from leader(M) they send an ack both to leader(M) and to leader(M&apos;) - in practice it can send an ack to leader(M) first, then disconnect from it and then connect to leader(M&apos;) and send an ack to it but it doesn&apos;t matter for correctness. When leader(M&apos;) receives this ack from a quorum of members(M&apos;) (as well as the phase-2 message from leader(M)) it can commit all preceding ops in M&apos;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are subtle differences between the protocol that I suggested and your&lt;br/&gt;
proposal. I am not fully convinced if the changes are necessary. I might be&lt;br/&gt;
missing something here. I will get in touch with you offline for further&lt;br/&gt;
clarification. &lt;/p&gt;

&lt;p&gt;There are a few problems in the revised protocol posted on the wiki:&lt;/p&gt;

&lt;p&gt;1. leader(M) does not wait for confirmation of ongoing transactions from&lt;br/&gt;
majority of M&apos; (during phase 1). How do you guarantee that once M&apos; starts&lt;br/&gt;
leader election all the transactions that are committed to M are also committed&lt;br/&gt;
to M? A majority of M&apos; might be lagging behind and one of them might end up&lt;br/&gt;
becoming the leader(M&apos;).&lt;/p&gt;

&lt;p&gt;2. Why is Step 8. (&quot;Stop processing new operations, return failure for any&lt;br/&gt;
further ops received&quot;) necessary? The protocol that I suggested does not reject&lt;br/&gt;
any transactions from the clients. In the most common case of reconfiguration,&lt;br/&gt;
only a subset (very likely 1) of the peers would be added/removed. So ZK&lt;br/&gt;
client library can reconnect to one of the other ZK servers using the same&lt;br/&gt;
code that it does today. As a result, the application will not even notice that&lt;br/&gt;
a reconfiguration has happened (other than potentially receiving notifications&lt;br/&gt;
about the new configuration).  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;H. I agree - it&apos;s an overkill We can make sure that a quorum of M&apos; is connected&lt;br/&gt;
when the reconfiguration starts.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What should we tell the administrator to do if majority of M&apos; fail during&lt;br/&gt;
reconfiguration? During normal operations, if a majority of nodes fail, then&lt;br/&gt;
the admin has a choice to copy the DB from one of the live nodes to rest of the&lt;br/&gt;
nodes and get the cluster going immediately. There is a risk of loosing some&lt;br/&gt;
transactions, but there is also a chance that the one of the node has&lt;br/&gt;
reasonably up-to-date copy of the data tree.  However, during reconfiguration&lt;br/&gt;
if majority of M&apos; fail the cluster is unrecoverable even if majority of M are&lt;br/&gt;
online. Are going to assume that the admin needs to take a backup before doing&lt;br/&gt;
the reconfig?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;br/&gt;
-Vishal&lt;/p&gt;</comment>
                            <comment id="13011513" author="shralex" created="Sat, 26 Mar 2011 00:17:05 +0000"  >&lt;p&gt;Hi Vishal,&lt;/p&gt;

&lt;p&gt;Thanks for the comments.&lt;/p&gt;

&lt;p&gt;&amp;gt; What will M&apos; do if the leader(M) fails? &lt;/p&gt;

&lt;p&gt;It depends at what stage. Before phase 2, M&apos; does nothing - M will elect a new leader and that leader&lt;br/&gt;
will either complete the reconfiguration if it find traces of it stored by phase-1 in M, or otherwise will &lt;br/&gt;
abandon it (in which case s or the client will perhaps re-submit it). As part of the recovery protocol (see twiki),&lt;br/&gt;
the new leader instructs members(M&apos;) to connect to it, similarly to the way s originally instructed them to connect to &lt;br/&gt;
the old leader(M).&lt;/p&gt;

&lt;p&gt;If leader(M) fails after a phase-2 message arrived to some process in M&apos;, that process will forward the message&lt;br/&gt;
to the rest of M&apos;. If this process fails before/during forwarding, this means that M still has a quorum and we&apos;re in the same&lt;br/&gt;
case as described above. Otherwise, members(M&apos;) will get this message and run leader election. According to what&lt;br/&gt;
I suggested, leader election will not be run if the appointed leader(M&apos;) is up. Anyway, I think that after getting the&lt;br/&gt;
Phase-2 (activation) message, a process in M&apos; will not agree to connect to M, instead it tries to convince the rest of M&apos; to start running.&lt;/p&gt;

&lt;p&gt;&amp;gt; appointing a leader&lt;/p&gt;

&lt;p&gt;This seems like an important optimization that can be easily done since the leader has a quorum of responsive members from M&apos;, he can just pick one of them and save leader election. All this means is that before running leader election in M&apos; a process will attempt to connect to the appointed leader(M&apos;), and if this fails they&apos;ll still run the leader election. Admittedly, I don&apos;t yet fully understand the code,&lt;br/&gt;
so I might be wrong and this might in fact turn out to be too complicated.&lt;/p&gt;

&lt;p&gt;&amp;gt; clients &lt;/p&gt;

&lt;p&gt;We were discussing this point with Flavio a bit, and there are some initial ideas. In any case we need some sort of DNS as a fallback, for clients that were disconnected during the reconfiguration - when they wake up there might no longer be anyone from M alive.&lt;/p&gt;

&lt;p&gt;&amp;gt; Why should we not fix &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;We should, but I&apos;m currently focusing on the main reconfiguration stuff. &lt;br/&gt;
If you can work on this bug of course that would be great.&lt;/p&gt;

&lt;p&gt;&amp;gt; Could this be fixed by sending the message to M&apos; first and then sending&lt;br/&gt;
&amp;gt; to M after receiving ack from majority of M&apos;&lt;/p&gt;

&lt;p&gt;Yes, and this is exactly how the algorithm in the twiki is structured - phase 2 contacts M&apos;&lt;br/&gt;
and only after a quorum acks, (the optional) phase 3 garbage-collects M&lt;/p&gt;

&lt;p&gt;&amp;gt; I will get in touch with you offline for further clarification.&lt;/p&gt;

&lt;p&gt;Sure.&lt;/p&gt;

&lt;p&gt;&amp;gt; 1. leader(M) does not wait for confirmation of ongoing transactions&lt;br/&gt;
&amp;gt; from majority of M&apos; (during phase 1). How do you guarantee that once M&apos;&lt;br/&gt;
&amp;gt; starts leader election all the transactions that are committed to M are also&lt;br/&gt;
&amp;gt; committed to M? A majority of M&apos; might be lagging behind and one of them might&lt;br/&gt;
&amp;gt; end up becoming the leader(M&apos;).&lt;/p&gt;

&lt;p&gt;Because of FIFO and since M&apos; are connected as followers from the beginning of the reconfiguration,&lt;br/&gt;
every process in M&apos; that gets the activation message from leader(M) had previously received all the transactions from leader(M). &lt;br/&gt;
The first thing that leader(M&apos;) does when a quorum of M&apos; connects to it is commit all these transactions in M&apos;.&lt;br/&gt;
So I think my proposal is correct. Having said that, we might want to commit the transactions in M&apos; if we want to &lt;br/&gt;
transfer clients to M&apos; gradually, as suggested by Flavio.&lt;/p&gt;


&lt;p&gt;&amp;gt; 2. Why is Step 8. (&quot;Stop processing new operations, return failure for&lt;br/&gt;
&amp;gt; any further ops received&quot;) necessary? &lt;/p&gt;

&lt;p&gt;In the general case we cannot process operations in M once M&apos; was activated as leader(M&apos;) may  &lt;br/&gt;
process operations in the new configuration M&apos; (otherwise we may get split-brain). &lt;br/&gt;
Of course, if leader(M) is in M&apos; there is no need to stop processing operations.&lt;/p&gt;

&lt;p&gt;&amp;gt; What should we tell the administrator to do if majority of M&apos; fail&lt;br/&gt;
&amp;gt; during&lt;br/&gt;
&amp;gt; reconfiguration? During normal operations, if a majority of nodes fail,&lt;br/&gt;
&amp;gt; then&lt;br/&gt;
&amp;gt; the admin has a choice to copy the DB from one of the live nodes to&lt;br/&gt;
&amp;gt; rest of the&lt;br/&gt;
&amp;gt; nodes and get the cluster going immediately. There is a risk of loosing&lt;br/&gt;
&amp;gt; some&lt;br/&gt;
&amp;gt; transactions, but there is also a chance that the one of the node has&lt;br/&gt;
&amp;gt; reasonably up-to-date copy of the data tree.  However, during&lt;br/&gt;
&amp;gt; reconfiguration&lt;br/&gt;
&amp;gt; if majority of M&apos; fail the cluster is unrecoverable even if majority of&lt;br/&gt;
&amp;gt; M are&lt;br/&gt;
&amp;gt; online. Are going to assume that the admin needs to take a backup&lt;br/&gt;
&amp;gt; before doing&lt;br/&gt;
&amp;gt; the reconfig?&lt;/p&gt;

&lt;p&gt;I didn&apos;t really understand why the cluster is unrecoverable even if majority of M are online. &lt;br/&gt;
I think it depends when the crash happens. If a quorum of M&apos; cannot connect before reconfiguration begins,&lt;br/&gt;
we can abort the reconfiguration. If they fail during phase-1, we can continue in M and shouldn&apos;t start M&apos; until quorum M&apos; is up.&lt;br/&gt;
If they fail during phase-2, leader(M) will not be able to complete phase-2, so M will not be garbage-collected, although the system is stuck. If phase-2 completes then M&apos; is active and a quorum of M&apos; has all the state, and M can be garbage-collected. Here, I don&apos;t see the difference from a normal execution without reconfigurations. &lt;/p&gt;

&lt;p&gt;Best Regards,&lt;br/&gt;
Alex&lt;/p&gt;</comment>
                            <comment id="13012561" author="vishalmlst" created="Tue, 29 Mar 2011 18:19:26 +0100"  >&lt;blockquote&gt;
&lt;p&gt;We were discussing this point with Flavio a bit, and there are some initial ideas. In any case we need some sort of DNS as a fallback, for clients that were disconnected during the reconfiguration - when they wake up there might no longer be anyone from M alive.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;servers will need it too. A peer may be part of M&apos;, but may not know about it.&lt;/p&gt;

&lt;p&gt;The mechanism for this should be internal to the cluster. If this requires making entries in DNS, then in practice no administrator will allow that. To run something internal to the cluster, you will need a fail safe way to access that central resource. As we discussed, using cluster IP (&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1031&quot; title=&quot;Introduce virtual cluster IP and start that cluster IP on the host running ZK leader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1031&quot;&gt;ZOOKEEPER-1031&lt;/a&gt;) and running the resource on the node with cluster ip will help in this scenario. We shouldn&apos;t rely on the ip to be running to bootsrap the cluster (to form a quorum) for obvious reasons.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;process operations in the new configuration M&apos; (otherwise we may get split-brain). &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Earlier when I had implemented a membership change algorithm, I rejected reconfig(M&apos;) if a majority of M did not belong to majority of M&apos;. In short, change at most a majority - 1 number of nodes in one reconfig. It is not a strict requirement here, but I think it is worth a thought.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Because of FIFO and since M&apos; are connected as followers from the beginning of the reconfiguration,&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah! this was the missing link. So M&apos; are considered as followers. I missed that in our description on the twiki. From &quot;New operations (received by leader(M) during phase-1) will be sent to both M and M&apos;&quot; it looked like the leader is just sending messages to M&apos;, but not waiting for a majority to ack.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Having said that, we might want to commit the transactions in M&apos; if we want to&lt;br/&gt;
transfer clients to M&apos; gradually, as suggested by Flavio.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thats a good point. One simple way to do this is to let s use incremental API if there are too many clients. Replacing one by one will result in gradual transfer of clients.&lt;/p&gt;

&lt;p&gt;Also, after step 7 of the algorithm (before phase 2) how about we ask leader(M) to do a transactions using zab (or consider reconfig-start as that transaction) to write out M&apos; in zookeeper tree. Each server can then send a notification to its clients to indicate a change in progress. Clients can disconnect from M and start connecting to M&apos;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here, I don&apos;t see the difference from a normal execution without reconfigurations. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13012848" author="quintonh" created="Wed, 30 Mar 2011 06:38:05 +0100"  >&lt;p&gt;Yup, thanks, I&apos;m also on this thread.  Need to catch up on some reading though ;-&lt;/p&gt;

&lt;p&gt;Q&lt;/p&gt;


</comment>
                            <comment id="13017636" author="vishalmlst" created="Fri, 8 Apr 2011 21:47:04 +0100"  >&lt;p&gt;Hi Alex,&lt;/p&gt;

&lt;p&gt;Getting back to logistics, can you please set target date for the availability of this feature? It need not be bullet proof and a simpler version that will enable us to add/delete a peer will also be a big step forward.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;br/&gt;
-Vishal&lt;/p&gt;</comment>
                            <comment id="13048531" author="harivishnu" created="Mon, 13 Jun 2011 12:59:12 +0100"  >&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;Considering &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-646&quot; title=&quot;Namespace partitioning in ZK &quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-646&quot;&gt;ZOOKEEPER-646&lt;/a&gt;, where it tries to bring the write throughput (although the issue is also not in progress), dynamically adding ZK Server to cluster got one more usecase - Increase the write throughput of your cluster dynamically which may be very interesting for a Consistent Data Storage. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Hari&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13066805" author="yogesh" created="Mon, 18 Jul 2011 07:32:26 +0100"  >&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;Can any1 update the current status of the solution to this issue and how much progress has been done?&lt;/p&gt;</comment>
                            <comment id="13066823" author="shralex" created="Mon, 18 Jul 2011 08:08:35 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;m working on this feature and hope to get it into the 3.5.0 release. The main functionality already works, I intend to update the twiki with details soon.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13066857" author="yogesh" created="Mon, 18 Jul 2011 09:42:57 +0100"  >&lt;p&gt;Thanx for reply, Alex. Hope to get the update soon...&lt;/p&gt;</comment>
                            <comment id="13096225" author="marshall" created="Fri, 2 Sep 2011 20:23:36 +0100"  >&lt;p&gt;Alex, Curious what the status is of this now that a couple more months have gone by. The company I work for would really love to have dynamic cluster membership and we&apos;re willing to help out in any way we can to get this across the finish line. I wrote all the ZKMulti code so I&apos;m pretty familiar with zookeeper internals. I&apos;d love to pitch in and help out in any way possible to get this implemented as soon as possible. Or if you need any help testing or debugging I&apos;d be happy to assist there as well.  Let me know what you think... &lt;/p&gt;

&lt;p&gt;--Marshall&lt;/p&gt;</comment>
                            <comment id="13096289" author="shralex" created="Fri, 2 Sep 2011 21:46:16 +0100"  >&lt;p&gt;Hi Marshall,&lt;/p&gt;

&lt;p&gt;I&apos;m pretty much done with the server-side implementation and changed the client java &amp;amp; C API and shells. I would definitely appreciate any help in writing tests for this.  I can send you a patch with all my changes and I also have some preliminary writeup explaining the changes. I&apos;m currently doing some testing trying to see the performance impact of reconfiguration (there is no impact unless it is actually invoked). There is still some work needed on the client-side of reconfiguration, but I don&apos;t think we fully converged on what we want to do yet (there were some discussions between Vishal K., Ben, Flavio and myself). &lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Alex&lt;/p&gt;</comment>
                            <comment id="13096430" author="mahadev" created="Fri, 2 Sep 2011 23:20:08 +0100"  >&lt;p&gt;alex,&lt;br/&gt;
 I&apos;d suggest uploading the preliminary patch on the jira. This way folks can try it out and also give early feedback. I suspect this will be a huge change and the more eyes on it will make it better.&lt;/p&gt;</comment>
                            <comment id="13096447" author="phunt" created="Fri, 2 Sep 2011 23:49:06 +0100"  >&lt;p&gt;Uploading the patch to reviews.apache.org would enable more feedback as well.&lt;/p&gt;</comment>
                            <comment id="13098090" author="marshall" created="Tue, 6 Sep 2011 16:31:08 +0100"  >&lt;p&gt;Alex, That&apos;s awesome news! Really glad to see that you&apos;re pretty much done with the server-side implementation. I would be extremely happy to help with writing tests and help fix any server or client side bugs that crop up. My company is extremely interested in this and they look to me to be the zookeeper expert...so I definitely want to get involved in this as soon as possible to flush out all the details and get it integrated into our environment and start doing extensive testing.&lt;/p&gt;

&lt;p&gt;Please do send me a patch and any preliminary write-up you have and I&apos;ll dive in and start testing the hell out of it. &lt;/p&gt;

&lt;p&gt;Or as Patrick suggests, upload the patch to this issue so others can look at it as well.&lt;/p&gt;</comment>
                            <comment id="13098496" author="shralex" created="Wed, 7 Sep 2011 01:21:01 +0100"  >&lt;p&gt;Thanks all for the suggestions. I hope to upload a patch later this week.&lt;/p&gt;</comment>
                            <comment id="13102416" author="shralex" created="Mon, 12 Sep 2011 05:34:04 +0100"  >&lt;p&gt;patch for preliminary review&lt;/p&gt;</comment>
                            <comment id="13102419" author="hadoopqa" created="Mon, 12 Sep 2011 05:42:18 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493985/zoo_replicated1.members&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493985/zoo_replicated1.members&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1166970.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/522//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/522//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13102421" author="shralex" created="Mon, 12 Sep 2011 05:54:20 +0100"  >&lt;p&gt;in the patch, configuration file was split to 2 parts - attached are sample files zoo_replicated1.members and zoo_replicated1.cfg.&lt;/p&gt;

&lt;p&gt;the cfg file points to the members file, and the members file has all information about membership and ports. You must specify all client ports in that file - this info is separated by &quot;;&quot; from the usual server info (client ports were made part of the configuration info so that when clients find out about new configurations they know how to connect to the servers). The cfg file can still include client ports (or hostname and port, but if given they must be the same as in the members file.&lt;/p&gt;

&lt;p&gt;There are 2 new commands - &quot;config&quot; that gets the new configuration and &quot;reconfig&quot; that changes the configuration. config has just one option &quot;-c&quot; which returns just the version of the configuration and connection string interesting to clients. reconfig has many options and you can change all ports and server roles in the members file. For example in the ZK shell:&lt;/p&gt;

&lt;p&gt;&amp;gt; reconfig -remove 1 -add 5=localhost:1234:1235:observer;1236&lt;br/&gt;
&amp;gt; reconfig -file new.members&lt;br/&gt;
&amp;gt; reconfig -remove 3 -from 123456   (reconfigure only if the current config is 123456)&lt;/p&gt;

&lt;p&gt;By doing &quot;-add &quot; and giving different ports/role to a server that is already in the cluster, you&apos;ll change its ports/role. &lt;/p&gt;

&lt;p&gt;Clients can subscribe to membership changes (membership is stored in a special znode, ZooDefs.CONFIG_NODE), and update the Zookeeper handle by executing &lt;br/&gt;
&quot;zk.updateServerList(hostList);&quot; See src/java/systest/ReconfigClient.java or GenerateLoad.java for an example.&lt;/p&gt;

&lt;p&gt;I intend to update the algorithm to get better load balancing when new servers are added to the system (current method spreads load well only when a servers are removed).&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;
</comment>
                            <comment id="13102425" author="hadoopqa" created="Mon, 12 Sep 2011 06:02:23 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493987/zookeeper-dev-fatjar.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493987/zookeeper-dev-fatjar.jar&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1166970.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 390 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/523//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/523//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13102445" author="marshall" created="Mon, 12 Sep 2011 06:59:08 +0100"  >&lt;p&gt;Alex - AWESOME!! So glad to see a patch posted here. I&apos;ve been very anxiously awaiting this and the company I work for is very eager to start working on integrating this into our environment and start testing it. I&apos;ll start working on integrating this and working on some unit tests this week. Very nice job. Only looked over the code in the patch briefly but it looks very very promising. So glad to see this finally coming together. Be in touch soon regarding testing...&lt;/p&gt;

&lt;p&gt;-Marshall&lt;/p&gt;</comment>
                            <comment id="13103117" author="hadoopqa" created="Mon, 12 Sep 2011 23:12:14 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12494127/zookeeper-reconfig-sep12.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12494127/zookeeper-reconfig-sep12.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1166970.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 54 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 11 javac compiler warnings (more than the trunk&apos;s current 10 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 16 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/529//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13106943" author="phunt" created="Sat, 17 Sep 2011 01:16:57 +0100"  >&lt;p&gt;cancelling the patch for now based on QA bot&apos;s found issues.&lt;/p&gt;</comment>
                            <comment id="13171100" author="ekoontz" created="Fri, 16 Dec 2011 17:53:00 +0000"  >&lt;p&gt;Would be great to have both &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1045&quot; title=&quot;Quorum Peer mutual authentication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1045&quot;&gt;ZOOKEEPER-1045&lt;/a&gt; working together: new servers would be able to mutually authenticate with an existing quorum upon joining it.&lt;/p&gt;</comment>
                            <comment id="13213256" author="marshall" created="Wed, 22 Feb 2012 04:06:02 +0000"  >&lt;p&gt;Any chance there&apos;s an updated version of this patch against the latest zookeeper 3.4.3 ?&lt;/p&gt;

&lt;p&gt;I&apos;ve finally been given time to get this integrated into our product at the company I work for and am anxious to finally pick it up and work on zookeeper again...Would appreciate an updated patch if anyone has one.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13214064" author="shralex" created="Wed, 22 Feb 2012 22:35:19 +0000"  >&lt;p&gt;Marshall, that&apos;s great!!&lt;/p&gt;

&lt;p&gt;I&apos;ll prepare a patch later today or tomorrow. There&apos;s also the ZK-1355 patch, which is part of this feature. In general the plan is to break this ZK-107 patch into several smaller ones and integrate them separately, starting with ZK-1355. One thing you could help with is the C client change for ZK-1355 - this is a very self contained thing you could do if you have the time (the Java version is already there, there&apos;s only a small change to it I intend to make following a comment from Flavio). There are other things you could help with if you have time.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13214155" author="marshall" created="Thu, 23 Feb 2012 01:13:10 +0000"  >&lt;p&gt;Alex, if you can get a patch for ZK-107 and ZK-1355 that apply cleanly to zookeeper-3.4.3, I&apos;ll absolutely commit to doing the C Client changes for ZK-1355. I&apos;ve done a ton of work in the C client so know it inside and out (I did the multi-op support).&lt;/p&gt;

&lt;p&gt;Looking forward to a new patch and I&apos;ll get started.&lt;/p&gt;</comment>
                            <comment id="13218586" author="shralex" created="Tue, 28 Feb 2012 20:27:41 +0000"  >&lt;p&gt;This is not intended for inclusion at this point, just the current version that people &lt;br/&gt;
can play with. &lt;/p&gt;</comment>
                            <comment id="13218782" author="hadoopqa" created="Wed, 29 Feb 2012 00:54:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516482/ZOOKEEPER-107-28-Feb.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516482/ZOOKEEPER-107-28-Feb.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1294000.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 42 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/968//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/968//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/968//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/968//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13218818" author="hadoopqa" created="Wed, 29 Feb 2012 01:43:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516486/ZOOKEEPER-107-29-Feb.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516486/ZOOKEEPER-107-29-Feb.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1294000.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 42 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/969//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220548" author="shralex" created="Fri, 2 Mar 2012 00:48:13 +0000"  >&lt;p&gt;not for inclusion. &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added backward compatibility mode for configuration files: the feature generally requires that the config file points to a separate membership file (where the server, group and weight definitions are supposed to be), but will now also work with a  standard single config file. In that case, if a reconfiguration happens, we create a membership file and edit the config file to point to the new membership file. Otherwise the config file remains unchanged.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed small problem in C client&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13220570" author="hadoopqa" created="Fri, 2 Mar 2012 01:13:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516769/ZOOKEEPER-107-1-Mar.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516769/ZOOKEEPER-107-1-Mar.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1294000.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 42 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/970//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220667" author="marshall" created="Fri, 2 Mar 2012 04:43:08 +0000"  >&lt;p&gt;Latest Patch (1 Mar) applies cleanly for me and resolved the issues we discussed earlier. Thanks Alex.&lt;/p&gt;</comment>
                            <comment id="13234179" author="marshall" created="Wed, 21 Mar 2012 07:00:16 +0000"  >&lt;p&gt;Alex, below are some comments I have on the C code only. &lt;/p&gt;

&lt;p&gt;1. Use C naming conventions. Specifically:&lt;/p&gt;

&lt;p&gt;zhandle_t &lt;b&gt;zh,  char **joiningServers, int numJoiners, char **leavingServers, int numLeaving, char *newMembers, int newMembersLen, int64_t fromConfig, char *buffer, int&lt;/b&gt; buffer_len&lt;/p&gt;

&lt;p&gt;This should be:&lt;/p&gt;

&lt;p&gt;zhandle_t &lt;b&gt;zh,  char **joining_servers, int num_joiners, char **leaving_servers, int num_leaving, char *new_members, int new_membersLen, int64_t from_config, char *buffer, int&lt;/b&gt; buffer_len&lt;/p&gt;

&lt;p&gt;2. The C code tries very hard to keep the line lengths at 80 characters. A lot of your code does not.&lt;/p&gt;

&lt;p&gt;3. I think that joiningServers and leavingServers should be const as certainly you aren&apos;t changing these in the C code. And it wouldn&apos;t make sense for the contract of these functions if you ever needed to. It also makes it easier to call from C++ code where I can create a vector then pass it&apos;s contents into the C code without having to const-cast things.&lt;/p&gt;

&lt;p&gt;4. newMembers is badly named since it&apos;s a FILE. Should be e.g. newMembershipFile or something&lt;/p&gt;

&lt;p&gt;5. newMembersLen is also badly named as it&apos;s the length of the &lt;b&gt;filename&lt;/b&gt; not the length of the new members themselves.&lt;/p&gt;

&lt;p&gt;6. fromConfig should have more meaningful name like old_version.&lt;/p&gt;

&lt;p&gt;7. I totally don&apos;t understand the purpose of buffer and buffer_len arguments. Why would they ever be anything other than the list I provided? This seems unecessary. Moreover, I don&apos;t see why you&apos;d expose the raw contents of this buffer to the caller.&lt;/p&gt;

&lt;p&gt;8. What&apos;s the purpose of the stat argument? Not sure I understand the use case for why I&apos;d want the stat structure of the underlying /zookeeper/config path. Or is this just for getting the version of that znode?&lt;/p&gt;

&lt;p&gt;9. I find the combination of the non-incremental and incremental arguments into the same function overly complicated. Specifically if you&apos;re giving the &quot;newMembership&quot; arguments the rest are ignored (or must be NULL) but if you&apos;re in incremental mode, the non-incremental args must be NULL. Easy to get that wrong or at least be confused by this. I think it&apos;d be cleaner to have a separate interface for the nonincremental mode... perhaps a zoo_reconfig and a zoo_reconfig_nonincremental or zoo_reconfig_fromfile or some such.&lt;/p&gt;

&lt;p&gt;Since I&apos;m doing a lot of improvements to the C code already, let me know your thoughts on the above and I&apos;ll make the necessary changes.&lt;/p&gt;</comment>
                            <comment id="13234416" author="shralex" created="Wed, 21 Mar 2012 15:19:28 +0000"  >&lt;p&gt;Hi Marshall,&lt;/p&gt;

&lt;p&gt;Thanks for the comments. Regarding 7 - zoo_getconfig was made to be very similar to zoo_get, except that it doesn&apos;t get a path as parameter and reads the special configuration znode. As the comments in the code say, the buffer holds the configuration returned by the server and buffer_len is the size of the &quot;returned&quot; buffer. Similarly the answer to 8 is that it was made to be similar to zoo_get. The configuration version is actually part of the returned config data itself, although (if I remember correctly) it should be identical to the znode version. Its something that is also stored in the membership file and used for comparing configs, so its always part of the config.&lt;/p&gt;

&lt;p&gt;I would be happy if you fix the other issues you raised. Would you like to update the last patch here and upload it ?&lt;br/&gt;
I&apos;d actually be happy to pass the C part to you entirely, I&apos;m just not sure how that could work in JIRA.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Alex&lt;/p&gt;

&lt;p&gt;P.S. this JIRA is not for inclusion. Once 1411 gets in I&apos;d like to open another JIRA with the part in the 107 patch missing from 1411 (the actual reconfiguration algorithm)&lt;/p&gt;</comment>
                            <comment id="13235324" author="marshall" created="Thu, 22 Mar 2012 04:03:10 +0000"  >&lt;p&gt;Thanks for the clarification Alex. After your explanations I agree with everything you&apos;ve said.&lt;/p&gt;

&lt;p&gt;I&apos;ll make the agreed upon changes and upload a new patch some time tomorrow.&lt;/p&gt;

&lt;p&gt;I&apos;m happy to maintain and work on the C part regardless of how things look in JIRA. I can always just download your latest changes, and add any necessary C changes, then re-upload the patch.&lt;/p&gt;</comment>
                            <comment id="13259443" author="shralex" created="Mon, 23 Apr 2012 08:54:13 +0100"  >&lt;p&gt;I removed the contents of ZK-1411 (which is now in trunk) from the 107 patch. The current patch applies to new trunk, but requires more work (partly to make sure that I use Commons CLI correctly for reconfig / config commands). &lt;/p&gt;

&lt;p&gt;Notice that to refer to the dynamic configuration file from the static one you should write &quot;dynamicConfigFile=...&quot; and not &quot;membershipFile=...&quot; as with the previous patches posted here.&lt;/p&gt;</comment>
                            <comment id="13259456" author="hadoopqa" created="Mon, 23 Apr 2012 09:25:22 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12523765/ZOOKEEPER-107-22-Apr.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12523765/ZOOKEEPER-107-22-Apr.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1328991.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1048//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13267094" author="shralex" created="Thu, 3 May 2012 02:45:45 +0100"  >&lt;p&gt;Attaching a paper about this work that will appear in USENIX Annual Technical Conference 2012.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13267096" author="hadoopqa" created="Thu, 3 May 2012 02:52:36 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525379/zkreconfig-usenixatc-final.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525379/zkreconfig-usenixatc-final.pdf&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1331246.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1058//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1058//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13419597" author="shralex" created="Fri, 20 Jul 2012 22:44:43 +0100"  >&lt;p&gt;org.apache.zookeeper.test.ReconfigTest includes a lot of reconfiguration tests. There are still a few tests I need to add.&lt;/p&gt;</comment>
                            <comment id="13419627" author="hadoopqa" created="Fri, 20 Jul 2012 23:18:10 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537416/ZOOKEEPER-107-20-July.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537416/ZOOKEEPER-107-20-July.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1362660.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 38 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1141//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13419890" author="hadoopqa" created="Sat, 21 Jul 2012 18:38:05 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537463/ZOOKEEPER-107-21-July.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537463/ZOOKEEPER-107-21-July.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1362660.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 26 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1143//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13420966" author="fpj" created="Mon, 23 Jul 2012 22:16:12 +0100"  >&lt;p&gt;About the test failure, it seems to be interpreting a file as a directory:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;directory /tmp/test8632392252062014508dir/version-2/currentEpoch.tmp listFiles returned null&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve seen a few complaints online here and there about isFile() not evaluating correctly, but unclear on why it is not correct in this case. It doesn&apos;t seem to have unusual characters or anything. I can&apos;t tell why it is failing just for this patch. Is there anything special you&apos;re doing with that currentEpoch file, Alex?&lt;/p&gt;</comment>
                            <comment id="13421153" author="shralex" created="Tue, 24 Jul 2012 04:54:43 +0100"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;I haven&apos;t touched currentEpoch. But seems like this file shouldn&apos;t exist at all. If I&apos;m not mistaken it is created in QuorumPeer.writeLongToFile (a recent addition that writes atomically) called from QuorumPeer.setCurrentEpoch and in the comments there its says that the tmp file will exists only if the atomic write failed. I&apos;m not sure why this happens and actually I couldn&apos;t find the corresponding error message in the hudson execution logs (maybe I wasn&apos;t looking in the right place).&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13426104" author="phunt" created="Tue, 31 Jul 2012 21:48:39 +0100"  >&lt;p&gt;the listFiles is probably related to this? &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1522&quot; title=&quot;intermittent failures in Zab test due to NPE in recursiveDelete test function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1522&quot;&gt;&lt;del&gt;ZOOKEEPER-1522&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;likely a timing issue where the file/directory is deleted out from under you.&lt;/p&gt;</comment>
                            <comment id="13426117" author="fpj" created="Tue, 31 Jul 2012 21:57:42 +0100"  >&lt;p&gt;Pat, Check my last comment. For some reasons it thinks that currentEpoch.tmp (which I believe is a file) is a directory and tries to list the files. If not that, then I don&apos;t understand this output message:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;directory /tmp/test8632392252062014508dir/version-2/currentEpoch.tmp listFiles returned null
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13426129" author="phunt" created="Tue, 31 Jul 2012 22:08:56 +0100"  >&lt;p&gt;Flavio, here&apos;s what I think is happening. listFiles returns null when the File doesn&apos;t exist. Also check isFile - it returns true iif the File is a file and it exists. So in this case the file existed, then deleted out from under the thread, which called isFile which returned false, so then it tried to listFiles which returns null because there is no File. See my patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1522&quot; title=&quot;intermittent failures in Zab test due to NPE in recursiveDelete test function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1522&quot;&gt;&lt;del&gt;ZOOKEEPER-1522&lt;/del&gt;&lt;/a&gt; which addresses this issue.&lt;/p&gt;</comment>
                            <comment id="13438441" author="hadoopqa" created="Tue, 21 Aug 2012 05:04:07 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12541707/ZOOKEEPER-107-Aug-20.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12541707/ZOOKEEPER-107-Aug-20.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1373156.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 35 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1163//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13438464" author="hadoopqa" created="Tue, 21 Aug 2012 06:21:42 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12541712/ZOOKEEPER-107-Aug-20-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12541712/ZOOKEEPER-107-Aug-20-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1373156.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 35 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1164//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13438476" author="shralex" created="Tue, 21 Aug 2012 07:21:07 +0100"  >&lt;p&gt;I&apos;m not sure why these 3 tests fail, seems like some timing issue. They pass locally for me.&lt;/p&gt;</comment>
                            <comment id="13442053" author="shralex" created="Sun, 26 Aug 2012 08:11:01 +0100"  >&lt;p&gt;minor refactoring&lt;/p&gt;</comment>
                            <comment id="13442057" author="hadoopqa" created="Sun, 26 Aug 2012 08:54:04 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12542444/ZOOKEEPER-107-Aug-25.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12542444/ZOOKEEPER-107-Aug-25.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1373156.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 33 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1171//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13460874" author="breed" created="Fri, 21 Sep 2012 23:08:10 +0100"  >&lt;p&gt;looks good. a couple of small comments:&lt;/p&gt;

&lt;p&gt;1) you need a testcase for async reconfig. it appears that ReconfigCallback is not used.&lt;br/&gt;
2) need to comment backward compatibility processing in FastLeaderElection.&lt;br/&gt;
3) the check for short packet in the run() of FastLeaderElection needs to be moved up before any packet processing takes place.&lt;br/&gt;
4) in LearnerHandler some of the info messages should be debug&lt;br/&gt;
5) in LearnerHandler, newLeaderData was changed to be 12 bytes, but only first 4 are used like before. why?&lt;br/&gt;
6) in Leader, it doesn&apos;t look like SHUTDOWN is fully there, we should remove it&lt;br/&gt;
7) there are warns and errors in Leader and QuorumPeer that looks like it needs to be a debug&lt;br/&gt;
8) add comment in processAck to explain why multiple outstanding proposals may be ready to commit after reconfig&lt;br/&gt;
9) In QuorumUtil, please put a comment with the jira number which relates to the JMX broken code&lt;/p&gt;

&lt;p&gt;great set of tests! i think we have excellent coverage of scenarios. we just need to do a simple test for 1) to make sure it works.&lt;/p&gt;</comment>
                            <comment id="13461631" author="shralex" created="Mon, 24 Sep 2012 07:48:14 +0100"  >&lt;p&gt;Hi Ben,&lt;/p&gt;

&lt;p&gt;thanks a lot for reviewing the patch!&lt;br/&gt;
I uploaded a new patch with a test for async reconfig as well as all your other comments addressed.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13461632" author="hadoopqa" created="Mon, 24 Sep 2012 07:52:42 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12546251/ZOOKEEPER-107-23-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12546251/ZOOKEEPER-107-23-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1386496.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 37 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1187//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1187//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1187//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1187//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13461658" author="hadoopqa" created="Mon, 24 Sep 2012 09:07:13 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12546253/ZOOKEEPER-107-23-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12546253/ZOOKEEPER-107-23-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1386496.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 37 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1188//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13466339" author="hadoopqa" created="Sat, 29 Sep 2012 23:13:44 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547130/ZOOKEEPER-107-29-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547130/ZOOKEEPER-107-29-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1194//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13466407" author="hadoopqa" created="Sun, 30 Sep 2012 05:49:26 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547144/ZOOKEEPER-107-29-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547144/ZOOKEEPER-107-29-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1195//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13466427" author="shralex" created="Sun, 30 Sep 2012 07:55:57 +0100"  >&lt;p&gt;Locally all tests pass for me. The failing tests on hudson are different each time, and no line number is shown. &lt;/p&gt;</comment>
                            <comment id="13466434" author="hadoopqa" created="Sun, 30 Sep 2012 08:43:58 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547153/ZOOKEEPER-107-29-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547153/ZOOKEEPER-107-29-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1196//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13466531" author="hadoopqa" created="Sun, 30 Sep 2012 18:53:47 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547167/ZOOKEEPER-107-29-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547167/ZOOKEEPER-107-29-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1197//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13466666" author="hadoopqa" created="Mon, 1 Oct 2012 07:26:39 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547194/ZOOKEEPER-107-29-SEP.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547194/ZOOKEEPER-107-29-SEP.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1200//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13467846" author="hadoopqa" created="Tue, 2 Oct 2012 17:46:54 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547399/ZOOKEEPER-107-3-Oct.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547399/ZOOKEEPER-107-3-Oct.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1205//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13472151" author="fanster.z" created="Tue, 9 Oct 2012 06:34:56 +0100"  >&lt;p&gt;The result is same in my environment&#12290;As I see&#65292;&lt;br/&gt;
In testRemoveAddOne method&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;            String configStr = reconfig(zk1, null, leavingServers, null, -1);
            testServerHasConfig(zk2, null, leavingServers);
            testNormalOperation(zk2, zk1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When i = 1 in the for loop, it is probability that testServerHasConfig hang at zk.getConfig(false, new Stat()).&lt;br/&gt;
It is very strange to understand.&lt;/p&gt;</comment>
                            <comment id="13472153" author="fanster.z" created="Tue, 9 Oct 2012 06:40:23 +0100"  >&lt;p&gt;When this happens, the servers are inconsistent. &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;~$echo srvr | nc 127.0.0.1 11238
Zookeeper version: 3.5.0-1395456, built on 10/08/2012 06:12 GMT
Latency min/avg/max: 0/0/1
Received: 25
Sent: 24
Connections: 2
Outstanding: 0
Zxid: 0x200000000
Mode: leader
Node count: 6
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;~$echo srvr | nc 127.0.0.1 11241
Zookeeper version: 3.5.0-1395456, built on 10/08/2012 06:12 GMT
Latency min/avg/max: 0/0/1
Received: 25
Sent: 24
Connections: 2
Outstanding: 0
Zxid: 0x10000000b
Mode: follower
Node count: 6
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;~$echo srvr | nc 127.0.0.1 11244
Zookeeper version: 3.5.0-1395456, built on 10/08/2012 06:12 GMT
Latency min/avg/max: 0/0/1
Received: 25
Sent: 24
Connections: 2
Outstanding: 0
Zxid: 0x10000000b
Mode: follower
Node count: 6
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13472632" author="shralex" created="Tue, 9 Oct 2012 19:54:28 +0100"  >&lt;p&gt;Thanks a lot Jacky! I&apos;ll try to reproduce this during the weekend.&lt;/p&gt;</comment>
                            <comment id="13473117" author="fanster.z" created="Wed, 10 Oct 2012 10:18:29 +0100"  >&lt;p&gt;Hi Alexander Shraer, it is a bug of the java client.&lt;br/&gt;
In the doIO method of ClientCnxnSocketNIO&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; if (p != null) {
                    outgoingQueue.removeFirstOccurrence(p);
                    updateLastSend();
                    if ((p.requestHeader != null) &amp;amp;&amp;amp;
                            (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
                            (p.requestHeader.getType() != OpCode.auth)) {
                        p.requestHeader.setXid(cnxn.getXid());
                    }
                    p.createBB();
                    ByteBuffer pbb = p.bb;
                    sock.write(pbb);
                    if (!pbb.hasRemaining()) {
                        sentCount++;
                        if (p.requestHeader != null
                                &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.ping
                                &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.auth) {
                            pending.add(p);
                        }
                    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remove packet before the sock.write() line will cause some request wait forever. We should do that after the sock.write() line.&lt;br/&gt;
Should we open a new jira for this?&lt;/p&gt;</comment>
                            <comment id="13473429" author="shralex" created="Wed, 10 Oct 2012 19:13:30 +0100"  >&lt;p&gt;Hi Jacky, &lt;/p&gt;

&lt;p&gt;great catch! it does seem that it would be better to first try to send the packet and only if&lt;br/&gt;
it was completely sent to remove it from the outgoingQueue. I wonder if we should also throw an&lt;br/&gt;
exception if pbb.hasRemaining() ? &lt;/p&gt;

&lt;p&gt;&amp;gt; Should we open a new jira for this?&lt;/p&gt;

&lt;p&gt;that would be great, thanks!&lt;/p&gt;

&lt;p&gt;Do the reconfiguration tests pass for you when this bug is solved ? I wonder why &lt;br/&gt;
of all tests the reconfiguration tests were the ones hitting this bug... maybe because of &lt;br/&gt;
the many leader/follower shutdowns that they do, not sure.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Alex&lt;/p&gt;

</comment>
                            <comment id="13473924" author="fanster.z" created="Thu, 11 Oct 2012 08:48:42 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Do the reconfiguration tests pass for you when this bug is solved ? I wonder why &lt;br/&gt;
of all tests the reconfiguration tests were the ones hitting this bug... maybe because of &lt;br/&gt;
the many leader/follower shutdowns that they do, not sure.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, all tests pass here.&lt;/p&gt;

&lt;p&gt;If the server is restarting when we send a getReconfig(getData) request,  the bug will happen.&lt;/p&gt;</comment>
                            <comment id="13473926" author="fanster.z" created="Thu, 11 Oct 2012 08:50:15 +0100"  >&lt;p&gt;opened an new jira &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1561&quot; title=&quot;Zookeeper client may hang on a server restart&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1561&quot;&gt;&lt;del&gt;ZOOKEEPER-1561&lt;/del&gt;&lt;/a&gt; for it.&lt;/p&gt;</comment>
                            <comment id="13475988" author="marshall" created="Mon, 15 Oct 2012 06:50:08 +0100"  >&lt;p&gt;This version changes both the Java and C APIs to use comma-separated strings for all three arguments of joiningServers, leavingServers and newMembers.&lt;/p&gt;

&lt;p&gt;This approach drastically simplifies the C code in particular, and also simplifies the serialize/deserialize of the jute code as now it&apos;s just a string instead of a vector of strings.&lt;/p&gt;

&lt;p&gt;Note that in particular the newMembers is just a string now and not a char**. This also greatly simplifies the job of applications sitting on top of the C bindings.&lt;/p&gt;

&lt;p&gt;Also modified both Java and C Cli&apos;s to support this new format.&lt;/p&gt;</comment>
                            <comment id="13475991" author="hadoopqa" created="Mon, 15 Oct 2012 06:58:11 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549110/ZOOKEEPER-107-14-Oct.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549110/ZOOKEEPER-107-14-Oct.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1226//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476000" author="hadoopqa" created="Mon, 15 Oct 2012 08:16:16 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549111/ZOOKEEPER-107-15-Oct.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549111/ZOOKEEPER-107-15-Oct.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1227//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476216" author="marshall" created="Mon, 15 Oct 2012 16:45:57 +0100"  >&lt;p&gt;fixed joinStrings.&lt;/p&gt;</comment>
                            <comment id="13476240" author="hadoopqa" created="Mon, 15 Oct 2012 17:19:08 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549155/ZOOKEEPER-107-15-Oct-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549155/ZOOKEEPER-107-15-Oct-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1228//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476257" author="hadoopqa" created="Mon, 15 Oct 2012 17:52:27 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549162/ZOOKEEPER-107-15-Oct-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549162/ZOOKEEPER-107-15-Oct-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1229//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1229//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1229//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1229//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476315" author="hadoopqa" created="Mon, 15 Oct 2012 19:05:41 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549165/ZOOKEEPER-107-15-Oct-ver3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549165/ZOOKEEPER-107-15-Oct-ver3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1230//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476346" author="marshall" created="Mon, 15 Oct 2012 19:53:47 +0100"  >&lt;p&gt;This latest failure looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1561&quot; title=&quot;Zookeeper client may hang on a server restart&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1561&quot;&gt;&lt;del&gt;ZOOKEEPER-1561&lt;/del&gt;&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="13476591" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 01:05:47 +0100"  >&lt;p&gt;I wonder if patch v7 from &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1560&quot; title=&quot;Zookeeper client hangs on creation of large nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1560&quot;&gt;&lt;del&gt;ZOOKEEPER-1560&lt;/del&gt;&lt;/a&gt; would help prevent such test failure.&lt;br/&gt;
Will combine the two patches and run these two tests locally.&lt;/p&gt;</comment>
                            <comment id="13476603" author="ekoontz" created="Tue, 16 Oct 2012 01:25:46 +0100"  >&lt;p&gt;I was thinking the same thing, Ted. Thanks for investigating.&lt;/p&gt;</comment>
                            <comment id="13476702" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 04:53:17 +0100"  >&lt;p&gt;ReconfigTest hung with combined patch.&lt;br/&gt;
Test output is quite long (25MB).&lt;br/&gt;
I am not familiar with ReconfigTest so am not sure what to look for in test output.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Couldn&apos;t write &quot;&lt;/span&gt; + expectedSize + &lt;span class=&quot;code-quote&quot;&gt;&quot; bytes, &quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I verified that the above log which I added in patch v7 for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1560&quot; title=&quot;Zookeeper client hangs on creation of large nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1560&quot;&gt;&lt;del&gt;ZOOKEEPER-1560&lt;/del&gt;&lt;/a&gt; didn&apos;t appear in test output.&lt;/p&gt;</comment>
                            <comment id="13476762" author="shralex" created="Tue, 16 Oct 2012 06:40:49 +0100"  >&lt;p&gt;Please ignore this patch - its another test to see if the bug is related to ZK-1561&lt;/p&gt;</comment>
                            <comment id="13476788" author="hadoopqa" created="Tue, 16 Oct 2012 07:23:01 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549264/ZOOKEEPER-107-bug1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549264/ZOOKEEPER-107-bug1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1231//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476819" author="shralex" created="Tue, 16 Oct 2012 08:13:49 +0100"  >&lt;p&gt;running &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;-bug1.patch verified that ZK-1561 is happening in the failing test. I&apos;m not sure this is the reason it hangs. New patch dequeues p after the write completes.&lt;/p&gt;</comment>
                            <comment id="13476845" author="hadoopqa" created="Tue, 16 Oct 2012 09:05:40 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12549273/ZOOKEEPER-107-bug2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12549273/ZOOKEEPER-107-bug2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1232//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492169" author="shralex" created="Wed, 7 Nov 2012 07:01:44 +0000"  >&lt;p&gt;trying again, now that 1560 is fixed&lt;/p&gt;</comment>
                            <comment id="13492181" author="hadoopqa" created="Wed, 7 Nov 2012 07:43:57 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12552426/ZOOKEEPER-107-6-NOV-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12552426/ZOOKEEPER-107-6-NOV-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1404288.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 40 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1254//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492516" author="shralex" created="Wed, 7 Nov 2012 17:16:51 +0000"  >&lt;p&gt;this time including Marshall&apos;s latest changes&lt;/p&gt;</comment>
                            <comment id="13492539" author="hadoopqa" created="Wed, 7 Nov 2012 17:52:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12552495/ZOOKEEPER-107-7-NOV.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12552495/ZOOKEEPER-107-7-NOV.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1404288.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1255//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492656" author="hadoopqa" created="Wed, 7 Nov 2012 20:00:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12552523/ZOOKEEPER-107-7-NOV-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12552523/ZOOKEEPER-107-7-NOV-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1404288.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1256//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492921" author="shralex" created="Thu, 8 Nov 2012 03:17:33 +0000"  >&lt;p&gt;small fix in QuorumCnxManager&lt;/p&gt;</comment>
                            <comment id="13492977" author="hadoopqa" created="Thu, 8 Nov 2012 05:57:54 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12552608/ZOOKEEPER-107-7-NOV-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12552608/ZOOKEEPER-107-7-NOV-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1404288.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1257//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13492985" author="shralex" created="Thu, 8 Nov 2012 06:06:53 +0000"  >&lt;p&gt;Interesting, all tests actually passed, and yet it says -1 core tests!&lt;/p&gt;</comment>
                            <comment id="13506241" author="shralex" created="Thu, 29 Nov 2012 06:06:40 +0000"  >&lt;p&gt;Removed tabs and some trailing spaces&lt;/p&gt;</comment>
                            <comment id="13506244" author="hadoopqa" created="Thu, 29 Nov 2012 06:12:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12555318/ZOOKEEPER-107-28-NOV.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12555318/ZOOKEEPER-107-28-NOV.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1414566.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1276//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1276//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1276//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1276//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13506250" author="hadoopqa" created="Thu, 29 Nov 2012 06:22:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12555320/ZOOKEEPER-107-28-NOV-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12555320/ZOOKEEPER-107-28-NOV-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1414566.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1277//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1277//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1277//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1277//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13506272" author="hadoopqa" created="Thu, 29 Nov 2012 07:03:09 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12555321/ZOOKEEPER-107-28-NOV-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12555321/ZOOKEEPER-107-28-NOV-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1414566.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1278//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13506275" author="shralex" created="Thu, 29 Nov 2012 07:09:29 +0000"  >&lt;p&gt;Again, all tests passed but the report says &quot;-1 core tests&quot;. Anyone knows why this is happening ?&lt;/p&gt;</comment>
                            <comment id="13506277" author="marshall" created="Thu, 29 Nov 2012 07:15:59 +0000"  >&lt;p&gt;The &quot;core tests&quot; includes both the Java tests and the C tests. If you look only at the java section, you&apos;ll think all the tests passed. In this case, if you click on the full output, you&apos;ll see:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/c/tests/TestReconfig.cc:571: Assertion: assertion failed &lt;span class=&quot;error&quot;&gt;&amp;#91;Expression: numClientsPerHost.at(i) &amp;gt;= lowerboundClientsPerServer(numClients, numServers)&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; Failures !!!&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; Run: 38   Failure total: 1   Failures: 1   Errors: 0&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;      &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; make: *** &lt;span class=&quot;error&quot;&gt;&amp;#91;run-check&amp;#93;&lt;/span&gt; Error 1&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; &lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; BUILD FAILED&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/build.xml:1262: The following error occurred while executing this line:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/build.xml:1272: exec returned: 2&lt;/p&gt;</comment>
                            <comment id="13506287" author="shralex" created="Thu, 29 Nov 2012 07:32:57 +0000"  >&lt;p&gt;Ah, you&apos;re right.&lt;/p&gt;

&lt;p&gt;Looking at this line (committed as part of our 1355), this is testing&lt;br/&gt;
initial distribution of clients across servers, even before any&lt;br/&gt;
rebalancing algorithm is invoked. Perhaps some random number generator&lt;br/&gt;
problems ?&lt;/p&gt;

&lt;p&gt;On Wed, Nov 28, 2012 at 11:17 PM, Marshall McMullen (JIRA)&lt;/p&gt;</comment>
                            <comment id="13507109" author="marshall" created="Fri, 30 Nov 2012 05:28:05 +0000"  >&lt;p&gt;I&apos;ve created a separate jira to address this test failure since it has nothing to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt; directly but is part of the already committed &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1355&quot; title=&quot;Add zk.updateServerList(newServerList) &quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1355&quot;&gt;&lt;del&gt;ZOOKEEPER-1355&lt;/del&gt;&lt;/a&gt;. The new Jira is &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-1594&lt;/a&gt;, which I assigned to myself.&lt;/p&gt;</comment>
                            <comment id="13553403" author="shralex" created="Tue, 15 Jan 2013 01:59:57 +0000"  >&lt;p&gt;patch for trunk. two test cases are not working - these are related to client port reconfiguration and are broken since the code needs to be adjusted following changes in zk-1504&lt;/p&gt;</comment>
                            <comment id="13553431" author="hadoopqa" created="Tue, 15 Jan 2013 02:46:12 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12564847/ZOOKEEPER-107-14-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12564847/ZOOKEEPER-107-14-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1427034.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1337//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13555775" author="hadoopqa" created="Thu, 17 Jan 2013 02:52:39 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565247/ZOOKEEPER-107-16-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565247/ZOOKEEPER-107-16-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1433651.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1338//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1338//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13556501" author="thawan" created="Thu, 17 Jan 2013 19:26:48 +0000"  >&lt;p&gt;I was looking at the patch direct so I might miss understood some of the detail. I think you still need to close the selector when destroying the old acceptor thread (and possibly joining with the thread as well).   reconfiguring flag is part of NIOConnectionFactory? then you will have to set it back to false when reconfiguration is done as well. &lt;/p&gt;</comment>
                            <comment id="13556512" author="shralex" created="Thu, 17 Jan 2013 19:34:34 +0000"  >&lt;p&gt;&amp;gt; I think you still need to close the selector when destroying the old acceptor thread (and possibly joining with the thread as well)&lt;/p&gt;

&lt;p&gt;yes, agreed about both.&lt;/p&gt;

&lt;p&gt;&amp;gt; reconfiguring flag is part of NIOConnectionFactory? then you will have to set it back to false when reconfiguration is done as well.&lt;/p&gt;

&lt;p&gt;yes, I do that                 &lt;br/&gt;
                if (!reconfiguring) &lt;/p&gt;
{
                    closeSelector();
                    NIOServerCnxnFactory.this.stop();
                }
&lt;p&gt;                else reconfiguring = false;&lt;br/&gt;
but as you said I&apos;ll have to move the closeSelector out, since a new one is going to be opened by the new acceptorThread&lt;/p&gt;
</comment>
                            <comment id="13556532" author="thawan" created="Thu, 17 Jan 2013 19:55:37 +0000"  >&lt;p&gt;You can make reconfiguring flag as part of the AcceptThread, since it is not used elsewhere and you don&apos;t have to worry about setting the value back or raise condition. &lt;/p&gt;</comment>
                            <comment id="13556540" author="shralex" created="Thu, 17 Jan 2013 20:02:12 +0000"  >&lt;p&gt;sounds good. thanks!&lt;/p&gt;</comment>
                            <comment id="13556861" author="shralex" created="Fri, 18 Jan 2013 01:24:27 +0000"  >&lt;p&gt;Patch includes Thawan&apos;s suggestion and C client changes that were missing from previous couple of patches by mistake.&lt;/p&gt;</comment>
                            <comment id="13556890" author="hadoopqa" created="Fri, 18 Jan 2013 02:03:49 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565414/ZOOKEEPER-107-17-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565414/ZOOKEEPER-107-17-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1434978.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13556899" author="shralex" created="Fri, 18 Jan 2013 02:16:21 +0000"  >&lt;p&gt;Thawan, any ideas why it still fails on &quot;too many open files&quot; here ? &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//testReport/org.apache.zookeeper.test/ReconfigTest/testQuorumSystemChange/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1342//testReport/org.apache.zookeeper.test/ReconfigTest/testQuorumSystemChange/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13557359" author="hadoopqa" created="Fri, 18 Jan 2013 17:11:39 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565494/ZOOKEEPER-107-18-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565494/ZOOKEEPER-107-18-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1434978.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 35 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1344//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13557557" author="hadoopqa" created="Fri, 18 Jan 2013 20:15:12 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565541/ZOOKEEPER-107-18-Jan-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565541/ZOOKEEPER-107-18-Jan-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1434978.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 35 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1346//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13557743" author="phunt" created="Fri, 18 Jan 2013 23:23:31 +0000"  >&lt;p&gt;Have you tested backward compatibility at all? e.g. test running a server in an ensemble with 3.4 servers. Also rolling upgrade.&lt;/p&gt;</comment>
                            <comment id="13557747" author="shralex" created="Fri, 18 Jan 2013 23:28:36 +0000"  >&lt;p&gt;I haven&apos;t, I&apos;d appreciate some help with that...&lt;/p&gt;

&lt;p&gt;I also have a question about the flaky test above (passed in the first patch I submitted today, failed in the second). &lt;br/&gt;
Sometimes (also on my local machine) in testTrancationLogCorruption zk1 goes from Connecting to CLOSED. Any idea on what could cause this ?&lt;/p&gt;</comment>
                            <comment id="13557896" author="shralex" created="Sat, 19 Jan 2013 02:43:06 +0000"  >&lt;p&gt;It seems that testTransactionLogCorruption is very flaky with ZK-107, but also without it, for example here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk-jdk7/502/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk-jdk7/502/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13558539" author="shralex" created="Mon, 21 Jan 2013 05:14:44 +0000"  >&lt;p&gt;A few fixes related to backward compatibility. &lt;/p&gt;</comment>
                            <comment id="13558549" author="hadoopqa" created="Mon, 21 Jan 2013 05:52:02 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12565731/ZOOKEEPER-107-20-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12565731/ZOOKEEPER-107-20-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1434978.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1347//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13559311" author="michim" created="Tue, 22 Jan 2013 02:39:43 +0000"  >&lt;p&gt;Alex and I worked on writing C tests for this. We have working skeleton. I&apos;ll clean up the patch, and post it here some time this week. &lt;/p&gt;

&lt;p&gt;--Michi&lt;/p&gt;</comment>
                            <comment id="13559339" author="marshall" created="Tue, 22 Jan 2013 03:16:29 +0000"  >&lt;p&gt;Awesome job Alex and Michi. Sorry I couldn&apos;t have helped with this one but way too much on my plate right now. Will definitely review the patch and offer suggestions where I can.&lt;/p&gt;</comment>
                            <comment id="13562526" author="shralex" created="Fri, 25 Jan 2013 07:52:08 +0000"  >&lt;p&gt;Edward&apos;s comments addressed.&lt;/p&gt;</comment>
                            <comment id="13562536" author="hadoopqa" created="Fri, 25 Jan 2013 08:30:42 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12566478/ZOOKEEPER-107-24-Jan.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12566478/ZOOKEEPER-107-24-Jan.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1438375.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 26 release audit warnings (more than the trunk&apos;s current 24 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1364//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13566886" author="marshall" created="Wed, 30 Jan 2013 20:49:22 +0000"  >&lt;p&gt;We just wanted to give some support for this patch. &lt;/p&gt;

&lt;p&gt;It has been extremely helpful to our Zookeeper deployment strategy.  We (www.solidfire.com) use Zookeeper as our database for a distributed scale-out block storage system.  We deploy fully automated clusters from 3 to 25+ nodes that must be able to self heal ensemble issues after inevitable node failures.  We maintain an ensemble of 3 or 5 nodes, so if one of these ensemble nodes fails we require another node in the cluster to assume its duties as quickly as possible.  Prior to this patch, the only way to reconfigure the ensemble was to do a typical &quot;rolling restart&quot; of the Zookeeper process on each of the nodes after modifying the local configuration file, but manually adjusting the ensemble wasn&apos;t an option.  Automating this was a challenge though since Zookeeper also contained our authoritative node list (chicken and egg), which meant that cascading failures could easily lead to inconsistencies in configuration files and then the ensemble could get easily confused.  Additionally, the re-connection events caused by restarting servers complicated the centralized logic that was coordinating the reconfiguration.&lt;/p&gt;

&lt;p&gt;This is where Zookeeper-107 has been a life saver.  We integrated this patch into our production version of Zookeeper-3.5.0 about a year ago and have been running with it since.  The simplicity of the interface and the reliability it has shown have made handling ensemble node failures significantly easier.  We exclusively use the c-client and have not had any problems with it.  Currently we only use the &quot;full reconfiguration&quot; functionality rather than the &quot;incremental&quot; reconfiguration.  In integrating this functionality with our coordination code, all of the problems we ran into were &lt;b&gt;ours&lt;/b&gt; and the patch showed solid resilience to the many error scenarios we&apos;ve thrown at it. Furthermore, Alex was super helpful and responsive in helping us integrate this into our environment. Eventually we want to write up a small white paper on exactly how we manage our ensemble, but we don&apos;t have the time right now.&lt;/p&gt;

&lt;p&gt;Just to give some perspective on the amount of stress this patch has gotten in our codebase, here are some stats.  The reconfiguration code has ran 10,000+ times within our integration testing and product qualification environments.  The sorts of tests we have in our integration testing environment are heavily focused on reconfiguring the ensemble while there are concurrent operations in flight simultaneously with the reconfiguration operation. We&apos;ve never seen an operation fail or get missed in any way during the reconfiguration. We also have an extensive set of tests which essentially create a three node ensemble and then add two more nodes and grow the ensemble to 5. The test has two different Zookeeper clients &amp;#8211; one connected to the original set of 3 and one connected to the new set of 2 that is joining the ensemble. While we are reconfiguring the ensemble to grow from 3 to 5 we hammer the original 3 nodes with write operations. Once the reconfiguration is complete, we validate that the new 2 nodes see all the operations submitted to the original 3 nodes. We&apos;ve never seen any problems with any of our tests!&lt;/p&gt;

&lt;p&gt;Given its stability in house, we are now actively deploying Zookeeper-3.5.0 with this patch to several customers running production environments (and many more running test environments), which combined with our internal test environment means we have this software running on 200+ nodes in 25-50+ clusters at any one time.  Our website shows the importance these customers place on our software, so you can be sure we&apos;ve tested it extensively in hundreds of different reconfiguration scenarios, and we haven&apos;t had to file a single jira yet.&lt;/p&gt;</comment>
                            <comment id="13567098" author="fpj" created="Wed, 30 Jan 2013 23:40:10 +0000"  >&lt;p&gt;Thanks for sharing your experience, Marshall. I find it useful to hear that the patch was tested in a real production setting.  I also want to see this in very much, not only because it is a very useful feature, but also because it is blocking other patches. &lt;/p&gt;

&lt;p&gt;Is anyone looking at the -1 for core tests and release audit from the last jenkins run?&lt;/p&gt;</comment>
                            <comment id="13567182" author="shralex" created="Thu, 31 Jan 2013 00:52:14 +0000"  >&lt;p&gt;The core test failure is due to C compilation errors. Michi fixed these and is adding C tests, which he&apos;ll probably upload this week.&lt;/p&gt;</comment>
                            <comment id="13569700" author="michim" created="Sun, 3 Feb 2013 03:43:36 +0000"  >&lt;p&gt;By the way, you don&apos;t need to rename the patch when you upload a new one. You can use the same name (e.g &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;.patch), and jira automatically highlight the latest patch. It&apos;s getting pretty hard to figure out which one the latest patch is &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;--Michi&lt;/p&gt;</comment>
                            <comment id="13570034" author="hadoopqa" created="Mon, 4 Feb 2013 07:22:11 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567810/ZOOKEEPER-107-3-Feb.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567810/ZOOKEEPER-107-3-Feb.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1378//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1378//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1378//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1378//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13570056" author="hadoopqa" created="Mon, 4 Feb 2013 08:10:23 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567812/ZOOKEEPER-107-3-Feb-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567812/ZOOKEEPER-107-3-Feb-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 27 release audit warnings (more than the trunk&apos;s current 26 warnings).&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1379//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13570082" author="hadoopqa" created="Mon, 4 Feb 2013 09:21:43 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567820/ZOOKEEPER-107-3-Feb-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567820/ZOOKEEPER-107-3-Feb-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1380//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13570800" author="hadoopqa" created="Tue, 5 Feb 2013 00:41:40 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567912/ZOOKEEPER-107-4-Feb.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567912/ZOOKEEPER-107-4-Feb.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1382//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13570810" author="phunt" created="Tue, 5 Feb 2013 00:56:39 +0000"  >&lt;p&gt;The latest patch introduces a (new) dependency on python to the build system. We should not do this. I strongly recommend we convert it to a bash script, or drive it from C/C++ similar to all of our other c client tests.&lt;/p&gt;</comment>
                            <comment id="13570841" author="hadoopqa" created="Tue, 5 Feb 2013 01:32:06 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567917/ZOOKEEPER-107-4-Feb-ver1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567917/ZOOKEEPER-107-4-Feb-ver1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1383//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13570872" author="marshall" created="Tue, 5 Feb 2013 02:12:32 +0000"  >&lt;p&gt;I agree with Patrick that we should not introduce dependency on python for the unit tests. There are lots of automated build/test regression suites that build zookeeper and don&apos;t necessary have or want a python dependency (mine included). &lt;/p&gt;

&lt;p&gt;Is there a reason you guys deviated from using the C++ test-drive infrastructure?&lt;/p&gt;</comment>
                            <comment id="13570878" author="shralex" created="Tue, 5 Feb 2013 02:20:21 +0000"  >&lt;p&gt;It was just much much easier to write a script that uses the C CLI than to write (or even understand) ZooKeeper&apos;s C++ tests. After looking at the tests, we were not even sure that there are currently tests that are sufficiently close to what we need to do. &lt;br/&gt;
In addition, this way we also test the C CLI. Michi is working on converting the script to bash.&lt;/p&gt;</comment>
                            <comment id="13571037" author="hadoopqa" created="Tue, 5 Feb 2013 04:44:17 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567949/ZOOKEEPER-107-4-Feb-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567949/ZOOKEEPER-107-4-Feb-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1441922.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 27 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1384//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13572606" author="breed" created="Wed, 6 Feb 2013 17:40:44 +0000"  >&lt;p&gt;great work you guys! can you comment on why FdLeakTest was removed? also, i think we should have added LearnerInfoVX, where X is the protocol number rather than changing LearnerInfo. (we did bump the protocol. right?)&lt;/p&gt;</comment>
                            <comment id="13572665" author="shralex" created="Wed, 6 Feb 2013 18:57:06 +0000"  >&lt;p&gt;thanks Ben! the test was removed by mistake - great catch! I&apos;ll fix it in the next patch I upload.&lt;/p&gt;

&lt;p&gt;we did not bump the protocol version - I suggest that if this is needed we do that as a separate patch as this may affect other areas in the code besides the ones I touched (and may break other things unrelated to reconfiguration &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;LearnerInfo was already changed once without bumping the protocol, so we will still have the &quot;if&quot; statement there as we do now.&lt;br/&gt;
But if we bump the version we could do what you suggest and get rid of the last part of the &quot;if&quot; that I&apos;ve added.&lt;/p&gt;


&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13591624" author="shralex" created="Sun, 3 Mar 2013 03:45:05 +0000"  >&lt;p&gt;Michi completed the C client tests, they are included in the attached patch.&lt;/p&gt;</comment>
                            <comment id="13591630" author="hadoopqa" created="Sun, 3 Mar 2013 04:25:22 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571782/ZOOKEEPER-107-2-Mar.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571782/ZOOKEEPER-107-2-Mar.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1448007.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 46 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1418//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13591631" author="shralex" created="Sun, 3 Mar 2013 04:34:14 +0000"  >&lt;p&gt;I think that this patch is ready to be committed. &lt;/p&gt;

&lt;p&gt;With this patch, upgrade to 3.5.0 will have to be through 3.4.6 (see &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1633&quot; title=&quot;Introduce a protocol version to connection initiation message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1633&quot;&gt;&lt;del&gt;ZOOKEEPER-1633&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;
</comment>
                            <comment id="13592804" author="shralex" created="Mon, 4 Mar 2013 23:42:11 +0000"  >&lt;p&gt;Small fix to reconfig java CLI command&lt;/p&gt;</comment>
                            <comment id="13592847" author="hadoopqa" created="Tue, 5 Mar 2013 00:21:22 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571991/ZOOKEEPER-107-5-Mar.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571991/ZOOKEEPER-107-5-Mar.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1448007.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 49 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1422//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13592898" author="hadoopqa" created="Tue, 5 Mar 2013 01:25:00 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12572003/ZOOKEEPER-107-5-Mar-ver2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12572003/ZOOKEEPER-107-5-Mar-ver2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1448007.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 50 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1423//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13594396" author="breed" created="Wed, 6 Mar 2013 05:45:20 +0000"  >&lt;p&gt;+1 awesome work you guys! looks ready to me. any objections?&lt;/p&gt;</comment>
                            <comment id="13594408" author="eyang" created="Wed, 6 Mar 2013 06:10:03 +0000"  >&lt;p&gt;+1 non-binding.  Thank you for the great work.&lt;/p&gt;</comment>
                            <comment id="13595583" author="breed" created="Thu, 7 Mar 2013 06:03:24 +0000"  >&lt;p&gt;Committed revision 1453693.&lt;br/&gt;
great work everyone!&lt;/p&gt;</comment>
                            <comment id="13595776" author="hudson" created="Thu, 7 Mar 2013 11:01:27 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1855 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1855/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1855/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;. Allow dynamic changes to server cluster membership (Alex Shraer via breed) (Revision 1453693)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
breed : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1453693&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1453693&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/.gitignore&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/build.xml&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/Makefile.am&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/README&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/include/proto.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/include/zookeeper.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/src/cli.c&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/src/zookeeper.c&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/TestReconfigServer.cc&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/ZooKeeperQuorumServer.cc&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/ZooKeeperQuorumServer.h&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/KeeperException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooDefs.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/cli/GetConfigCommand.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/cli/ReconfigCommand.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/common/StringUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NettyServerCnxnFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/Request.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZKDatabase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Follower.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Observer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumBean.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/ReconfigRecoveryTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumMajorityTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumUtil.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReconfigTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/zookeeper.jute&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13598460" author="fournc" created="Mon, 11 Mar 2013 01:09:22 +0000"  >&lt;p&gt;This hasn&apos;t yet passed Jenkins and someone needs to look at why the build is failing with this change. I notice that precommit builds are also failing since we put this change in and I&apos;m concerned this has caused larger problems. Can someone take a look?&lt;/p&gt;</comment>
                            <comment id="13598465" author="shralex" created="Mon, 11 Mar 2013 01:18:09 +0000"  >&lt;p&gt;The Jenkins failures so far were caused by two bugs: first one addressed by &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1662&quot; title=&quot;Fix to two small bugs in ReconfigTest.testPortChange()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1662&quot;&gt;&lt;del&gt;ZOOKEEPER-1662&lt;/del&gt;&lt;/a&gt; (needs to be committed), second one is in C tests and Michi is looking into it (he wrote the C tests).&lt;/p&gt;</comment>
                            <comment id="13598477" author="fournc" created="Mon, 11 Mar 2013 01:59:17 +0000"  >&lt;p&gt;OK. I&apos;m not a fan of closing tickets until they get through at least one successful build once they&apos;ve been checked in, which we haven&apos;t seen yet for this ticket. Definitely ok with considering disabling the truncate test until it gets fixed, but I wish we weren&apos;t claiming this work done when it&apos;s left us in a broken state as far as the build is concerned. Let&apos;s see if we can&apos;t at least get truncate test disabled and 1662 committed, to see if that will fix the build.&lt;/p&gt;</comment>
                            <comment id="13598481" author="shralex" created="Mon, 11 Mar 2013 02:13:08 +0000"  >&lt;p&gt;Camille, I&apos;m not claiming it done, I definitely want to see the problems resolved. I&apos;ve also opened two related jiras (updating documentation, which I&apos;m doing, and JMX support which I hope someone else that is familiar with JMX can take).&lt;/p&gt;

&lt;p&gt;1662 is one problem but the build will still fail until the C tests are fixed. Hopefully we&apos;ll figure out that bug soon. &lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Alex&lt;/p&gt;</comment>
                            <comment id="13598483" author="fournc" created="Mon, 11 Mar 2013 02:15:38 +0000"  >&lt;p&gt;Didn&apos;t mean to imply you were Alex! I will try to see what I can do with the truncate test stuff tomorrow so we can get 1662 in. We&apos;ll get this finished up, it&apos;s a great feature.&lt;/p&gt;</comment>
                            <comment id="13598556" author="michim" created="Mon, 11 Mar 2013 05:47:44 +0000"  >&lt;p&gt;Modified the c++ reconfig test to wait for the cluster to start by polling the server status every second for 10 seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12573026/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12573026/ZOOKEEPER-107.patch&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13598572" author="hadoopqa" created="Mon, 11 Mar 2013 06:24:59 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12573026/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12573026/ZOOKEEPER-107.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1453693.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1428//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13599583" author="fournc" created="Tue, 12 Mar 2013 01:47:22 +0000"  >&lt;p&gt;Looks good Michi, I am checking this fix in.&lt;/p&gt;</comment>
                            <comment id="13599614" author="hudson" created="Tue, 12 Mar 2013 02:21:08 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1860 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1860/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1860/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;. Allow dynamic changes to server cluster membership, small bugfix (michi via camille) (Revision 1455387)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1455387&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1455387&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/TestReconfigServer.cc&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/ZooKeeperQuorumServer.cc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13599629" author="fournc" created="Tue, 12 Mar 2013 02:41:36 +0000"  >&lt;p&gt;Michi looks like this still isn&apos;t reliably fixing the ZooKeeperQuorumServer test. Any other ideas?&lt;/p&gt;</comment>
                            <comment id="13599658" author="michim" created="Tue, 12 Mar 2013 03:32:53 +0000"  >&lt;p&gt;One possibility is that something is already running on port 4000, and zookeeper server is not able to bind to the port. Would it be possible for me to get access to the buildbot? It would be much easier to debug. If not, I can try changing the port to something else.&lt;/p&gt;

&lt;p&gt;--Michi&lt;/p&gt;</comment>
                            <comment id="13599688" author="breed" created="Tue, 12 Mar 2013 04:23:52 +0000"  >&lt;p&gt;it passed jenkins right before the commit. how did that happen? is jenkins not running properly or do we have a race condition?&lt;/p&gt;</comment>
                            <comment id="13600047" author="fournc" created="Tue, 12 Mar 2013 13:57:31 +0000"  >&lt;p&gt;I was wondering that myself. What is different about our precommit builds that makes them seem less likely to fail?&lt;br/&gt;
Michi, you&apos;ll have to email builds@apache and ask about buildbot access I think.&lt;/p&gt;</comment>
                            <comment id="13600124" author="fournc" created="Tue, 12 Mar 2013 15:57:38 +0000"  >&lt;p&gt;Some updates on the cpp failures:&lt;/p&gt;

&lt;p&gt;When I run the tests as written on my work machine, I get them to fail with these errors:&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/cfournier/zookeeper/zookeeper-trunkclean/src/c/tests/TestReconfigServer.cc:287: Assertion: equality assertion failed &lt;span class=&quot;error&quot;&gt;&amp;#91;Expected: 4000, Actual  : 0&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/cfournier/zookeeper/zookeeper-trunkclean/src/c/tests/TestReconfigServer.cc:161: Assertion: equality assertion failed &lt;span class=&quot;error&quot;&gt;&amp;#91;Expected: 100000002, Actual  : 100000003&amp;#93;&lt;/span&gt;&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt; /home/cfournier/zookeeper/zookeeper-trunkclean/src/c/tests/TestOperations.cc:472: Assertion: equality assertion failed &lt;span class=&quot;error&quot;&gt;&amp;#91;Expected: 0, Actual  : -9, ZOK != rc&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;If I reorder the TestReconfigServer tests to run in the order:&lt;br/&gt;
  CPPUNIT_TEST(testRemoveConnectedFollower);&lt;br/&gt;
    CPPUNIT_TEST(testRemoveFollower);&lt;br/&gt;
    CPPUNIT_TEST(testNonIncremental);&lt;/p&gt;

&lt;p&gt;They pass.&lt;/p&gt;

&lt;p&gt;This leads me to believe that these tests are not fully cleaning up after themselves and causing problems, but I&apos;m at the limit of my C++ code skimming skills at this point so I am leaving this to Michi to debug more thoroughly. &lt;/p&gt;</comment>
                            <comment id="13601539" author="michim" created="Wed, 13 Mar 2013 19:41:07 +0000"  >&lt;p&gt;The server failed to start because it couldn&apos;t find some class. Have you guys seen this error before?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/ws/trunk/build/test/test-cppunit/data0/zookeeper.out&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/ws/trunk/build/test/test-cppunit/data0/zookeeper.out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;CLOVER&amp;#93;&lt;/span&gt; FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? (class java.lang.NoClassDefFoundError:com_cenqua_clover/CloverVersionInfo)&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: com_cenqua_clover/CoverageRecorder&lt;br/&gt;
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:75)&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: com_cenqua_clover.CoverageRecorder&lt;br/&gt;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)&lt;br/&gt;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)&lt;br/&gt;
	... 1 more&lt;/p&gt;</comment>
                            <comment id="13604897" author="michim" created="Mon, 18 Mar 2013 06:28:38 +0000"  >&lt;p&gt;Include clover.jar in the classpath.&lt;/p&gt;</comment>
                            <comment id="13604898" author="michim" created="Mon, 18 Mar 2013 06:32:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12574116/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12574116/ZOOKEEPER-107.patch&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13604915" author="hadoopqa" created="Mon, 18 Mar 2013 07:04:58 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574116/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574116/ZOOKEEPER-107.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1455387.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 1 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1431//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13605990" author="hadoopqa" created="Tue, 19 Mar 2013 03:24:53 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574302/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574302/ZOOKEEPER-107.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1455387.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 1 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1433//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13606431" author="fournc" created="Tue, 19 Mar 2013 15:53:55 +0000"  >&lt;p&gt;+1 this looks good, I&apos;m checking it in to see if we finally get the trunk build working.&lt;/p&gt;</comment>
                            <comment id="13606472" author="hudson" created="Tue, 19 Mar 2013 16:26:15 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1870 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1870/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1870/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;. Allow dynamic changes to server cluster membership. Small C++ build file fixes (michim via camille) (Revision 1458356)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1458356&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1458356&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/Makefile.am&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13615544" author="michim" created="Wed, 27 Mar 2013 17:50:33 +0000"  >&lt;p&gt;This patch makes the reconfig tests wait until the client gets connected to the server. I tried the patch on asf008 and the test passed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12575735/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12575735/ZOOKEEPER-107.patch&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13615595" author="hadoopqa" created="Wed, 27 Mar 2013 18:25:28 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12575735/ZOOKEEPER-107.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12575735/ZOOKEEPER-107.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1458648.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1440//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13616326" author="fournc" created="Thu, 28 Mar 2013 15:03:41 +0000"  >&lt;p&gt;OK This also causes tests that fail to pass on my local box, although so have other patches so it&apos;s not the most reliable signal. +1, I will check this in and I hope we will finally put this to bed.&lt;/p&gt;</comment>
                            <comment id="13616935" author="hudson" created="Fri, 29 Mar 2013 01:09:43 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1881 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1881/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1881/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt;. Allow dynamic changes to server cluster membership. C++ test  fixes (michim via camille) (Revision 1462141)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1462141&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1462141&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/tests/TestReconfigServer.cc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13617429" author="fournc" created="Fri, 29 Mar 2013 15:29:50 +0000"  >&lt;p&gt;Finally, as of build 1884, the build is passing! I&apos;m closing this now. Alex we should still look into the intermittent failures in the truncate test but now we can feel ok having other patches come in also.&lt;/p&gt;</comment>
                            <comment id="14240429" author="john.jian.fang" created="Wed, 10 Dec 2014 00:52:31 +0000"  >&lt;p&gt;Does anyone know when 3.5.0 will be released? I like to use this new feature in production very soon.&lt;/p&gt;</comment>
                            <comment id="14240602" author="egli" created="Wed, 10 Dec 2014 03:48:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;I like to use this new feature in production very soon.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 (same here)&lt;/p&gt;</comment>
                            <comment id="14240720" author="phunt" created="Wed, 10 Dec 2014 06:37:24 +0000"  >&lt;p&gt;3.5.0 is already released - see &lt;a href=&quot;http://zookeeper.apache.org/releases.html#news&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zookeeper.apache.org/releases.html#news&lt;/a&gt; we&apos;ve starting talking about 3.5.1.&lt;/p&gt;</comment>
                            <comment id="14240728" author="john.jian.fang" created="Wed, 10 Dec 2014 06:47:34 +0000"  >&lt;p&gt;Cool. But seems 3.5.0 does not exist in Maven central repository yet.&lt;/p&gt;</comment>
                            <comment id="14240735" author="john.jian.fang" created="Wed, 10 Dec 2014 06:51:40 +0000"  >&lt;p&gt;Also, your link only includes 3.5.0-alpha, not the official 3.5.0 release.&lt;/p&gt;</comment>
                            <comment id="14241403" author="hdeng" created="Wed, 10 Dec 2014 17:19:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=john.jian.fang&quot; class=&quot;user-hover&quot; rel=&quot;john.jian.fang&quot;&gt;Jian Fang&lt;/a&gt;&lt;br/&gt;
Yes. 3.5.0 is an alpha release. 3.5.X release process will gradually go to beta and stable.&lt;/p&gt;</comment>
                            <comment id="14241453" author="john.jian.fang" created="Wed, 10 Dec 2014 17:54:24 +0000"  >&lt;p&gt;Perhaps you guys have good reasons to choose the release as 3.5.0-alpha. But personally, I think it is not consistent with the past zookeeper release name conversion and some time confusing. Anyway, I will use 3.5.0-alpha then.&lt;/p&gt;

&lt;p&gt;Is there any projected release date for the first stable 3.5.x? Thanks.&lt;/p&gt;</comment>
                            <comment id="14241670" author="phunt" created="Wed, 10 Dec 2014 20:25:18 +0000"  >&lt;p&gt;This jira is not a good place to discuss the release process. If you want to be involved with releases and influence them please participate on the dev list. (also see this for more background: &lt;a href=&quot;http://markmail.org/message/ymxliy2rrwjc2pmo&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://markmail.org/message/ymxliy2rrwjc2pmo&lt;/a&gt;)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12628429">ZOOKEEPER-1625</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                            <outwardlinks description="contains">
                                        <issuelink>
            <issuekey id="12503324">ZOOKEEPER-1044</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12512390">ZOOKEEPER-1113</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12640320">ZOOKEEPER-1682</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12606827">ZOOKEEPER-1549</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12735645">ZOOKEEPER-2014</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12503562">ZOOKEEPER-1045</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12422157">ZOOKEEPER-368</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12424618">ZOOKEEPER-390</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12611304">ZOOKEEPER-1561</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12537824">ZOOKEEPER-1355</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12534519">ZOOKEEPER-1324</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12629968">ZOOKEEPER-1633</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12545750">ZOOKEEPER-1411</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12627591">ZOOKEEPER-1620</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12635741">ZOOKEEPER-1660</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12635739">ZOOKEEPER-1659</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12410443" name="SimpleAddition.rtf" size="6599" author="zkuser" created="Fri, 12 Jun 2009 01:33:00 +0100"/>
                            <attachment id="12516769" name="ZOOKEEPER-107-1-Mar.patch" size="270533" author="shralex" created="Fri, 2 Mar 2012 00:48:13 +0000"/>
                            <attachment id="12564847" name="ZOOKEEPER-107-14-Jan.patch" size="285410" author="shralex" created="Tue, 15 Jan 2013 01:59:57 +0000"/>
                            <attachment id="12549110" name="ZOOKEEPER-107-14-Oct.patch" size="222391" author="marshall" created="Mon, 15 Oct 2012 06:50:08 +0100"/>
                            <attachment id="12549155" name="ZOOKEEPER-107-15-Oct-ver1.patch" size="222290" author="marshall" created="Mon, 15 Oct 2012 16:45:57 +0100"/>
                            <attachment id="12549162" name="ZOOKEEPER-107-15-Oct-ver2.patch" size="222329" author="marshall" created="Mon, 15 Oct 2012 17:35:43 +0100"/>
                            <attachment id="12549165" name="ZOOKEEPER-107-15-Oct-ver3.patch" size="222339" author="marshall" created="Mon, 15 Oct 2012 18:03:14 +0100"/>
                            <attachment id="12549111" name="ZOOKEEPER-107-15-Oct.patch" size="222319" author="marshall" created="Mon, 15 Oct 2012 07:02:55 +0100"/>
                            <attachment id="12565247" name="ZOOKEEPER-107-16-Jan.patch" size="286526" author="shralex" created="Thu, 17 Jan 2013 02:43:30 +0000"/>
                            <attachment id="12565414" name="ZOOKEEPER-107-17-Jan.patch" size="315863" author="shralex" created="Fri, 18 Jan 2013 01:24:27 +0000"/>
                            <attachment id="12565541" name="ZOOKEEPER-107-18-Jan-ver2.patch" size="319769" author="shralex" created="Fri, 18 Jan 2013 19:39:47 +0000"/>
                            <attachment id="12565494" name="ZOOKEEPER-107-18-Jan.patch" size="319666" author="shralex" created="Fri, 18 Jan 2013 16:32:32 +0000"/>
                            <attachment id="12571782" name="ZOOKEEPER-107-2-Mar.patch" size="366787" author="shralex" created="Sun, 3 Mar 2013 03:45:05 +0000"/>
                            <attachment id="12565731" name="ZOOKEEPER-107-20-Jan.patch" size="319816" author="shralex" created="Mon, 21 Jan 2013 05:14:44 +0000"/>
                            <attachment id="12537416" name="ZOOKEEPER-107-20-July.patch" size="277584" author="shralex" created="Fri, 20 Jul 2012 22:44:43 +0100"/>
                            <attachment id="12537463" name="ZOOKEEPER-107-21-July.patch" size="214631" author="shralex" created="Sat, 21 Jul 2012 18:07:10 +0100"/>
                            <attachment id="12523765" name="ZOOKEEPER-107-22-Apr.patch" size="182035" author="shralex" created="Mon, 23 Apr 2012 08:54:11 +0100"/>
                            <attachment id="12546253" name="ZOOKEEPER-107-23-SEP.patch" size="218061" author="shralex" created="Mon, 24 Sep 2012 08:01:32 +0100"/>
                            <attachment id="12566478" name="ZOOKEEPER-107-24-Jan.patch" size="322129" author="shralex" created="Fri, 25 Jan 2013 07:52:08 +0000"/>
                            <attachment id="12516482" name="ZOOKEEPER-107-28-Feb.patch" size="265981" author="shralex" created="Wed, 29 Feb 2012 00:48:54 +0000"/>
                            <attachment id="12516391" name="ZOOKEEPER-107-28-Feb.patch" size="265981" author="shralex" created="Tue, 28 Feb 2012 20:27:41 +0000"/>
                            <attachment id="12555321" name="ZOOKEEPER-107-28-NOV-ver2.patch" size="318041" author="shralex" created="Thu, 29 Nov 2012 06:28:16 +0000"/>
                            <attachment id="12516486" name="ZOOKEEPER-107-29-Feb.patch" size="268475" author="shralex" created="Wed, 29 Feb 2012 01:11:57 +0000"/>
                            <attachment id="12547399" name="ZOOKEEPER-107-3-Oct.patch" size="218810" author="shralex" created="Tue, 2 Oct 2012 17:00:15 +0100"/>
                            <attachment id="12567917" name="ZOOKEEPER-107-4-Feb-ver1.patch" size="336383" author="shralex" created="Tue, 5 Feb 2013 01:00:11 +0000"/>
                            <attachment id="12567949" name="ZOOKEEPER-107-4-Feb-ver2.patch" size="348649" author="shralex" created="Tue, 5 Feb 2013 04:08:08 +0000"/>
                            <attachment id="12567933" name="ZOOKEEPER-107-4-Feb-ver2.patch" size="348649" author="michim" created="Tue, 5 Feb 2013 01:58:49 +0000"/>
                            <attachment id="12567912" name="ZOOKEEPER-107-4-Feb.patch" size="336376" author="shralex" created="Tue, 5 Feb 2013 00:00:42 +0000"/>
                            <attachment id="12572003" name="ZOOKEEPER-107-5-Mar-ver2.patch" size="345956" author="shralex" created="Tue, 5 Mar 2013 00:43:34 +0000"/>
                            <attachment id="12571991" name="ZOOKEEPER-107-5-Mar.patch" size="345190" author="shralex" created="Mon, 4 Mar 2013 23:42:10 +0000"/>
                            <attachment id="12552426" name="ZOOKEEPER-107-6-NOV-2.patch" size="221185" author="shralex" created="Wed, 7 Nov 2012 07:01:44 +0000"/>
                            <attachment id="12552523" name="ZOOKEEPER-107-7-NOV-ver1.patch" size="221575" author="shralex" created="Wed, 7 Nov 2012 19:24:05 +0000"/>
                            <attachment id="12552608" name="ZOOKEEPER-107-7-NOV-ver2.patch" size="221735" author="shralex" created="Thu, 8 Nov 2012 03:17:33 +0000"/>
                            <attachment id="12552495" name="ZOOKEEPER-107-7-NOV.patch" size="221576" author="shralex" created="Wed, 7 Nov 2012 17:16:51 +0000"/>
                            <attachment id="12541712" name="ZOOKEEPER-107-Aug-20-ver1.patch" size="234608" author="shralex" created="Tue, 21 Aug 2012 05:13:23 +0100"/>
                            <attachment id="12541707" name="ZOOKEEPER-107-Aug-20.patch" size="234608" author="shralex" created="Tue, 21 Aug 2012 04:19:04 +0100"/>
                            <attachment id="12542444" name="ZOOKEEPER-107-Aug-25.patch" size="226767" author="shralex" created="Sun, 26 Aug 2012 08:11:01 +0100"/>
                            <attachment id="12575735" name="ZOOKEEPER-107.patch" size="2269" author="michim" created="Wed, 27 Mar 2013 17:47:53 +0000"/>
                            <attachment id="12574302" name="ZOOKEEPER-107.patch" size="581" author="michim" created="Tue, 19 Mar 2013 02:48:22 +0000"/>
                            <attachment id="12574116" name="ZOOKEEPER-107.patch" size="581" author="michim" created="Mon, 18 Mar 2013 06:28:38 +0000"/>
                            <attachment id="12573026" name="ZOOKEEPER-107.patch" size="1793" author="michim" created="Mon, 11 Mar 2013 05:42:38 +0000"/>
                            <attachment id="12568789" name="ZOOKEEPER-107.patch" size="364396" author="michim" created="Mon, 11 Feb 2013 05:16:53 +0000"/>
                            <attachment id="12525379" name="zkreconfig-usenixatc-final.pdf" size="544830" author="shralex" created="Thu, 3 May 2012 02:45:45 +0100"/>
                            <attachment id="12493984" name="zoo_replicated1.cfg" size="161" author="shralex" created="Mon, 12 Sep 2011 05:38:42 +0100"/>
                            <attachment id="12493985" name="zoo_replicated1.members" size="136" author="shralex" created="Mon, 12 Sep 2011 05:38:43 +0100"/>
                            <attachment id="12493986" name="zookeeper-3.4.0.jar" size="1325432" author="shralex" created="Mon, 12 Sep 2011 05:55:05 +0100"/>
                            <attachment id="12493987" name="zookeeper-dev-fatjar.jar" size="3475489" author="shralex" created="Mon, 12 Sep 2011 05:55:38 +0100"/>
                            <attachment id="12493982" name="zookeeper-reconfig-sep11.patch" size="282332" author="shralex" created="Mon, 12 Sep 2011 05:35:04 +0100"/>
                            <attachment id="12494127" name="zookeeper-reconfig-sep12.patch" size="281109" author="shralex" created="Mon, 12 Sep 2011 22:37:59 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12503324">ZOOKEEPER-1044</subtask>
                            <subtask id="12463601">ZOOKEEPER-762</subtask>
                            <subtask id="12512390">ZOOKEEPER-1113</subtask>
                            <subtask id="12545750">ZOOKEEPER-1411</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Jul 2008 22:29:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>60343</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxulsf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2349</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>