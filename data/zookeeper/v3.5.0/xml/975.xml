<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:44:50 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-975/ZOOKEEPER-975.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-975] new peer goes in LEADING state even if ensemble is online</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-975</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Scenario:&lt;br/&gt;
1. 2 of the 3 ZK nodes are online&lt;br/&gt;
2. Third node is attempting to join&lt;br/&gt;
3. Third node unnecessarily goes in &quot;LEADING&quot; state&lt;br/&gt;
4. Then third goes back to LOOKING (no majority of followers) and finally goes to FOLLOWING state.&lt;/p&gt;


&lt;p&gt;While going through the logs I noticed that a peer C that is trying to&lt;br/&gt;
join an already formed cluster goes in LEADING state. This is because&lt;br/&gt;
QuorumCnxManager of A and B sends the entire history of notification&lt;br/&gt;
messages to C. C receives the notification messages that were&lt;br/&gt;
exchanged between A and B when they were forming the cluster.&lt;/p&gt;

&lt;p&gt;In FastLeaderElection.lookForLeader(), due to the following piece of&lt;br/&gt;
code, C quits lookForLeader assuming that it is supposed to lead.&lt;/p&gt;

&lt;p&gt;740                             //If have received from all nodes, then terminate&lt;br/&gt;
741                             if ((self.getVotingView().size() == recvset.size()) &amp;amp;&amp;amp;&lt;br/&gt;
742                                     (self.getQuorumVerifier().getWeight(proposedLeader) != 0))&lt;/p&gt;
{
743                                 self.setPeerState((proposedLeader == self.getId()) ?
744                                         ServerState.LEADING: learningState());
745                                 leaveInstance();
746                                 return new Vote(proposedLeader, proposedZxid);
747
748                             }
&lt;p&gt; else if (termPredicate(recvset,&lt;/p&gt;


&lt;p&gt;This can cause:&lt;br/&gt;
1.  C to unnecessarily go in LEADING state and wait for tickTime * initLimit and then restart the FLE.&lt;/p&gt;

&lt;p&gt;2. C waits for 200 ms (finalizeWait) and then considers whatever&lt;br/&gt;
notifications it has received to make a decision. C could potentially&lt;br/&gt;
decide to follow an old leader, fail to connect to the leader, and&lt;br/&gt;
then restart FLE. See code below.&lt;/p&gt;

&lt;p&gt;752                             if (termPredicate(recvset,&lt;br/&gt;
753                                     new Vote(proposedLeader, proposedZxid,&lt;br/&gt;
754                                             logicalclock))) {&lt;br/&gt;
755 &lt;br/&gt;
756                                 // Verify if there is any change in the proposed leader&lt;br/&gt;
757                                 while((n = recvqueue.poll(finalizeWait,&lt;br/&gt;
758                                         TimeUnit.MILLISECONDS)) != null){&lt;br/&gt;
759                                     if(totalOrderPredicate(n.leader, n.zxid,&lt;br/&gt;
760                                             proposedLeader, proposedZxid))&lt;/p&gt;
{
761                                         recvqueue.put(n);
762                                         break;
763                                     }
&lt;p&gt;764                                 }&lt;/p&gt;



&lt;p&gt;In general, this does not affect correctness of FLE since C will&lt;br/&gt;
eventually go back to FOLLOWING state (A and B won&apos;t vote for&lt;br/&gt;
C). However, this delays C from joining the cluster. This can in turn&lt;br/&gt;
affect recovery time of an application.&lt;/p&gt;


&lt;p&gt;Proposal: A and B should send only the latest notification (most&lt;br/&gt;
recent) instead of the entire history. Does this sound reasonable?&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12495589">ZOOKEEPER-975</key>
            <summary>new peer goes in LEADING state even if ensemble is online</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vishalmlst">Vishal Kher</assignee>
                                    <reporter username="vishalmlst">Vishal Kher</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Jan 2011 12:29:33 +0000</created>
                <updated>Wed, 23 Nov 2011 19:22:03 +0000</updated>
                            <resolved>Fri, 29 Apr 2011 17:13:46 +0100</resolved>
                                    <version>3.3.2</version>
                                    <fixVersion>3.4.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12983299" author="breed" created="Tue, 18 Jan 2011 18:14:42 +0000"  >&lt;p&gt;moved to 3.4&lt;/p&gt;</comment>
                            <comment id="12983331" author="fpj" created="Tue, 18 Jan 2011 18:57:40 +0000"  >&lt;p&gt;Thanks for bringing this up, Vishal. This is not a new observation, although I can&apos;t remember if we discussed it in a jira or not. In general, I&apos;m lukewarm about this change. It is certainly not an issue to avoid the server going into LEADING before it goes correctly into LOOKING, but I&apos;m not entirely comfortable with manipulating the queues of notifications. Being able to have two servers concurrently thinking they are leading is a situation supported by our protocols, and such a modification would be an optimization to avoid the unnecessary LEADING step. &lt;/p&gt;

&lt;p&gt;Regarding application recovery time, we don&apos;t have a load balance scheme at this point, which could be quite useful, so bringing a new follower up does not guarantee that clients will move their sessions to the new follower. Note that this situation occurs only if there is an ensemble running and a server joins or recovers.&lt;/p&gt;</comment>
                            <comment id="12984722" author="vishalmlst" created="Fri, 21 Jan 2011 12:41:21 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;What is the motivation to send the history of notifications to the&lt;br/&gt;
joining peer? Shouldn&apos;t the most recent notification (or just the&lt;br/&gt;
current state) be enough?  I understand this&lt;br/&gt;
is a performance issue. However, I think it is a sizeable hole.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There could have been multiple leader&lt;br/&gt;
elections while the node is down and the node could end up hopping&lt;br/&gt;
across leaders until it gets to the correct leader.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Suppose, we have a 3 node cluster. I have a simple client which&lt;br/&gt;
connects to A and creates a znode_A to indicate that A (and the&lt;br/&gt;
client) is online. The leader A disconnects from B and C and causes C&lt;br/&gt;
to take leadership. Now, when A is trying to join the cluster, it can&lt;br/&gt;
be unnecessarily delayed due to this bug. If I have an application that&lt;br/&gt;
takes some action if znode_A is unavailable, then this bug can&lt;br/&gt;
unnecessarily trigger that action. We are facing this problem in our application.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think it will be a small change to QCM. What do you think?&lt;/p&gt;</comment>
                            <comment id="12986259" author="vishalmlst" created="Tue, 25 Jan 2011 07:31:36 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Heres a simple fix that I think does the trick. Let me know what you think.&lt;/p&gt;</comment>
                            <comment id="12987494" author="fpj" created="Thu, 27 Jan 2011 10:59:59 +0000"  >&lt;p&gt;Hi VIshal, The main problem I see is that the patch you propose removes lastMessageSent( &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-481&quot; title=&quot;Add lastMessageSent to QuorumCnxManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-481&quot;&gt;&lt;del&gt;ZOOKEEPER-481&lt;/del&gt;&lt;/a&gt;), which was inserted to deal with a problem observed in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-475&quot; title=&quot;FLENewEpochTest failed on nightly builds.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-475&quot;&gt;&lt;del&gt;ZOOKEEPER-475&lt;/del&gt;&lt;/a&gt;, and also discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-480&quot; title=&quot;FLE should perform leader check when node is not leading and add vote of follower&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-480&quot;&gt;&lt;del&gt;ZOOKEEPER-480&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12987517" author="vishalmlst" created="Thu, 27 Jan 2011 12:13:25 +0000"  >&lt;p&gt;Hi Flavio, &lt;/p&gt;

&lt;p&gt;Do you think that this will be a problem even after we have the patch  for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-932&quot; title=&quot;Move blocking read/write calls to SendWorker and RecvWorker Threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-932&quot;&gt;ZOOKEEPER-932&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;This is what &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-475&quot; title=&quot;FLENewEpochTest failed on nightly builds.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-475&quot;&gt;&lt;del&gt;ZOOKEEPER-475&lt;/del&gt;&lt;/a&gt; describes:&lt;br/&gt;
----------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Replica 1 sends a message to itself and to Replica 2 stating that its current&lt;br/&gt;
vote is for replica 1;&lt;/li&gt;
	&lt;li&gt;Replica 2 sends a message to itself and to Replica 1 stating that its current&lt;br/&gt;
vote is for replica 2;&lt;/li&gt;
	&lt;li&gt;Replica 1 updates its vote, and sends a message to itself stating that its&lt;br/&gt;
current vote is for replica 2;&lt;/li&gt;
	&lt;li&gt;Since replica 1 has two votes for 2 in a an ensemble of 3 replicas, replica 1&lt;br/&gt;
decides to follow 2.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The problem is that replica 2 does not receive a message from 1 stating that it &lt;br/&gt;
changed its vote to 2, which prevents 2 from becoming a leader. Now looking &lt;br/&gt;
more carefully at why that happened, you can see that when 1 tries to send a &lt;br/&gt;
message to 2, QuorumCnxManager in 1 is both shutting down a connection to 2 at &lt;br/&gt;
the same time that it is trying to open a new one. The incorrect &lt;br/&gt;
synchronization prevents the creation of a new connection, and 1 and 2 end up &lt;br/&gt;
not connected.   &lt;br/&gt;
----------&lt;/p&gt;

&lt;p&gt;We  no longer have incorrect synchronization. We can have QCM in 1  shutting down the connection to 2 while it is trying to send a notification to 2. However, the only time 1 will shutdown a connection to 2 is when it receives a new connection request from 2 (or when something is wrong with the connection). A new connection request is received when 2 is trying to send a notification to 1. As a result, 1 will end up sending a notification to 2 saying that it is following 2. Do you agree?&lt;/p&gt;</comment>
                            <comment id="12990064" author="vishalmlst" created="Thu, 3 Feb 2011 11:40:17 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Can you describe to me this problem? I will see if the problem still exists if this patch is applied after applying patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-932&quot; title=&quot;Move blocking read/write calls to SendWorker and RecvWorker Threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-932&quot;&gt;ZOOKEEPER-932&lt;/a&gt;. Thanks.&lt;/p&gt;</comment>
                            <comment id="12990955" author="fpj" created="Sat, 5 Feb 2011 11:23:13 +0000"  >&lt;p&gt;Hi Vishal, This is a general concurrency issue that arises when using TCP connections, and I&apos;m not sure we can avoid it even though our protocol is in principle resilient to such message losses. Back to the TCP issue I was mentioning, we remove the message from the queue of messages to send, and send it with a write call to the socket. However, it is not guaranteed that the message will get through, since the destination might drop the connection while the message is in transit. The sender has no way to know if it really got through, unless we have an acknowledgment scheme on top of TCP, which sounds overkill. The way we found to avoid the case in one of the jiras I mentioned above was to resend the last message the peer dequeued for a given destination. This is exactly the mechanism you&apos;re proposing to remove.    &lt;/p&gt;</comment>
                            <comment id="12991288" author="vishalmlst" created="Mon, 7 Feb 2011 07:09:32 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;ok, I will re-add lastMessage. How about before sending lastMessage() we check if the send queue is empty? If it is empty, then we send lastMesseage, otherwise, we send the message from the queue. This will avoid sending stale messages to the peer.&lt;/p&gt;

&lt;p&gt;So the final fix will:&lt;br/&gt;
1. Change CAPACITY to 1.&lt;br/&gt;
2. send lastMessage to A only if the send queue for A is empty. &lt;/p&gt;

&lt;p&gt;This will ensure that we send the most recent notification and we also handle lost message as before.&lt;/p&gt;

&lt;p&gt;Does this sound ok?&lt;/p&gt;</comment>
                            <comment id="12991486" author="fpj" created="Mon, 7 Feb 2011 17:29:02 +0000"  >&lt;p&gt;Hi Vishal, Sounds like a good way to patch it.&lt;/p&gt;</comment>
                            <comment id="12991939" author="vishalmlst" created="Tue, 8 Feb 2011 11:17:40 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Re-adding lastMessage results in the delay reported in this bug. When node 2 attempts to join a cluster of node 1 and 0, nodes 1 and 0 send a &quot;LOOKING&quot; notification followed by a &quot;FOLLOWING&quot;/&quot;LEADING&quot; notification. After receiving the first pair of LOOKING notifications, 2 goes in the LEADING state.&lt;/p&gt;

&lt;p&gt;I think I have a better idea. Instead of sending lastMessage, how about we send the notification for the current state of the peer (just like we do in FastLeaderElection.java)? I think this will resolve both the problems.&lt;/p&gt;</comment>
                            <comment id="12993428" author="vishalmlst" created="Fri, 11 Feb 2011 10:02:21 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Do you agree that sending the current state is a better approach?&lt;/p&gt;

&lt;p&gt;I as looking at the code to add a method createNotificationMessage() that will return a notification message based on the current state of the server. QCM can call this method and send the notification message at the place where we send lastMessage. However, adding it to FastLeaderElection only wont be enough since there are other leader election algorithms as well. The Election interface is very minimal. Should we add this method to this interface? Which leader election algorithms do we support and is it ok to make this change only for the supported algorithms?&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
-Vishal&lt;/p&gt;</comment>
                            <comment id="12993551" author="fpj" created="Fri, 11 Feb 2011 16:00:19 +0000"  >&lt;p&gt;Hi Vishal, I&apos;m under the impression that getting the current state only works for LEADING or FOLLOWING. While looking, we would need to return the latest vote, yes? Overall, it is sound to return the current state instead of keeping the latest message.&lt;/p&gt;

&lt;p&gt;About maintenance, we have some time back talked about maintaining only the TCP version of FLE (FLE+QCM). There was never some real pressure to eliminate the others, and in fact previously some users were still using LE. I&apos;m all for maintaining only FLE, but we need to hear the opinion of others.&lt;/p&gt;

&lt;p&gt;More thoughts?&lt;/p&gt;</comment>
                            <comment id="13004273" author="vishalmlst" created="Tue, 8 Mar 2011 22:58:02 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;I have a patch for this, but I have it on the top of the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-932&quot; title=&quot;Move blocking read/write calls to SendWorker and RecvWorker Threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-932&quot;&gt;ZOOKEEPER-932&lt;/a&gt;. We have 932 applied to our ZK code since we need it. Until &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-932&quot; title=&quot;Move blocking read/write calls to SendWorker and RecvWorker Threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-932&quot;&gt;ZOOKEEPER-932&lt;/a&gt; is reviewed and committed, I will have to keep back porting patches (and do double testing). I will port my changes to trunk if someone requires a fix for the bug. Since this is not a blocker, I am going to hold off the patch until 932 is reviewed. That will reduce my testing and porting overhead. Does that sound ok?&lt;/p&gt;

&lt;p&gt;The patch I have is good only for FLE.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;About maintenance, we have some time back talked about maintaining only the TCP version of FLE (FLE+QCM). There was never some real pressure to eliminate the others, and in fact previously some users were still using LE. I&apos;m all for maintaining only FLE, but we need to hear the opinion of others. More thoughts?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The documentation says: &quot;The implementations of leader election 1 and 2 are currently not supported, and we have the intention of deprecating them in the near future. Implementations 0 and 3 are currently supported, and we plan to keep supporting them in the near future. To avoid having to support multiple versions of leader election unecessarily, we may eventually consider deprecating algorithm 0 as well, but we will plan according to the needs of the community.&quot;&lt;/p&gt;

&lt;p&gt;Is there a significant advantage of using LE 0 vs LE 3?&lt;/p&gt;</comment>
                            <comment id="13010515" author="vishalmlst" created="Wed, 23 Mar 2011 23:26:35 +0000"  >&lt;p&gt;I am attaching the patch for review only. This patch is not for final&lt;br/&gt;
submission.&lt;/p&gt;

&lt;p&gt;I have not written a test yet. I will add a test and resubmit the&lt;br/&gt;
patch. This patch is well tested along with patch for 932.  But I need&lt;br/&gt;
need to do more testing after separating these changes from 932. All&lt;br/&gt;
junit tests pass.&lt;/p&gt;

&lt;p&gt;Main changes done:&lt;br/&gt;
FastLeaderElection.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed erroneous exit conditions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;QuorumCnxManager.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Restrict send queue size to 1 so that we don&apos;t&lt;br/&gt;
send too many stale messages&lt;/li&gt;
	&lt;li&gt;Added functions to add to&lt;br/&gt;
ArrayBlockingQueue without blocking while inserting in the&lt;br/&gt;
queue if the queue is full.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13010516" author="vishalmlst" created="Wed, 23 Mar 2011 23:27:37 +0000"  >&lt;p&gt;patch for review only.&lt;/p&gt;</comment>
                            <comment id="13010520" author="hadoopqa" created="Wed, 23 Mar 2011 23:31:33 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12474451/ZOOKEEPER-975.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12474451/ZOOKEEPER-975.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1082362.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/195//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/195//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13010522" author="vishalmlst" created="Wed, 23 Mar 2011 23:45:25 +0000"  >&lt;p&gt;Note there may be another problem in FLE unreleated to this bug. Originally, in QCM instead of sending lastMessage I wanted to send a notification with current state. But I noticed that a peer does not send its real current state in FastLeaderElection.java even when it is not LOOKING.&lt;br/&gt;
Heres the relevant code:&lt;br/&gt;
                                /*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If this server is not looking, but the one that sent the ack&lt;/li&gt;
	&lt;li&gt;is looking, then send back what it believes to be the leader.&lt;br/&gt;
                                 */&lt;br/&gt;
                                Vote current = self.getCurrentVote();&lt;br/&gt;
                                if(ackstate == QuorumPeer.ServerState.LOOKING)
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {                                    if(LOG.isDebugEnabled()){
                                        LOG.debug(&quot;Sending new notification. My id =  &quot; +
                                                self.getId() + &quot;, Recipient = &quot; +
                                                response.sid + &quot; zxid =&quot; +
                                                current.zxid + &quot; leader=&quot; +
                                                current.id);
                                    }                                    ToSend notmsg = new ToSend(                                            ToSend.mType.notification,                                            current.id,                                            current.zxid,&amp;lt;============ zxid of current vote                                            logicalclock,                                            self.getPeerState(),                                            response.sid);                                    sendqueue.offer(notmsg);                                }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It sends zxid of the current vote and not the current zxid seen by the server. The zxid of the vote can be stale. So I dropped that change from QCM changed the size of sendQueue to 1. I think fixing the above code is a separate issue and should be done later, if needed.&lt;/p&gt;</comment>
                            <comment id="13010689" author="fpj" created="Thu, 24 Mar 2011 14:29:07 +0000"  >&lt;p&gt;Hi Vishal, I&apos;ll have a look at the patch once you generate a new one that applies. &lt;/p&gt;

&lt;p&gt;On the last comment you posted, I wonder why you think it would be better to update the last zxid according to the state of the server. One problem I see is that only the leader can really maintain its own last zxid up to date. The other servers don&apos;t really know how far the leader has gone. &lt;/p&gt;

&lt;p&gt;Also, the idea of maintaining the last vote intact is to keep the pair used to decide upon the current leader, and currently we don&apos;t use the zxid field to determine leadership if the notification says LEADING or FOLLOWING. Is there anything I&apos;m missing?   &lt;/p&gt;</comment>
                            <comment id="13010965" author="vishalmlst" created="Thu, 24 Mar 2011 22:22:43 +0000"  >&lt;p&gt;patch failed.&lt;/p&gt;</comment>
                            <comment id="13010975" author="vishalmlst" created="Thu, 24 Mar 2011 22:32:08 +0000"  >&lt;p&gt;Attaching patch on trunk for review./comments.&lt;/p&gt;</comment>
                            <comment id="13010976" author="vishalmlst" created="Thu, 24 Mar 2011 22:32:59 +0000"  >&lt;p&gt;Submitting patch on trunk.&lt;/p&gt;</comment>
                            <comment id="13010989" author="hadoopqa" created="Thu, 24 Mar 2011 23:03:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12474564/ZOOKEEPER-975.patch2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12474564/ZOOKEEPER-975.patch2&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1082362.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/199//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13011244" author="fpj" created="Fri, 25 Mar 2011 15:39:26 +0000"  >&lt;p&gt;Hi Vishal, Here are two high-level comments:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;It does not have a test, but I&apos;m not entirely convinced we should try to implement one, since it might be complex. We should think about it, though;&lt;/li&gt;
	&lt;li&gt;I don&apos;t understand why you&apos;re removing the outofelection data structure. I believe the notifications from peers that are FOLLOWING/LEADING should be treated separately from the the ones of peers that are LOOKING. If a peer obtains notifications from a quorum saying that the peers are LEADING/FOLLOWING, then it should follow the leader they point to. If a peer obtains notifications from a quorum of FOLLOWING peers, then it should follow the protocol to select a leader. Consequently, the notifications should be treated separately.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13011330" author="vishalmlst" created="Fri, 25 Mar 2011 18:25:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;   1. It does not have a test, but I&apos;m not entirely convinced we should try to implement one, since it might be complex. We should think about it, though;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I didn&apos;t include a test. We should have a test, but I don&apos;t think I can get to it in the next couple of days or so. I was thinking of feeding the recvQueue with dummy Notifications for scenarios that we wanted to test and then call FastLeaderElection.lookForLeader() and verify the outcome. The tricky part is to come-up with the right sequence of Notifications to test all corner cases.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;   2. I don&apos;t understand why you&apos;re removing the outofelection data structure&lt;br/&gt;
. I believe the notifications from peers that are FOLLOWING/LEADING should be treated separately from the the ones of peers that are LOOKING. If a peer obtains notifications from a quorum saying that the peers are LEADING/FOLLOWING, then it should follow the leader they point to. If a peer obtains notifications from a quorum of FOLLOWING peers, then it should follow the protocol to select a leader. Consequently, the notifications should be treated separately.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was sure about that change either. I don&apos;t mind reintroducing outofelection. But I couldn&apos;t think of scenarios where inserting Notification in recvset instead of outofelection will be a problem. Considering that termPredicate verifies that majority vote for same &amp;lt;epoch, sid, zxid&amp;gt;, can you describe a scenario where this change could cause a problem?&lt;/p&gt;</comment>
                            <comment id="13011331" author="vishalmlst" created="Fri, 25 Mar 2011 18:26:44 +0000"  >&lt;p&gt;correction: &quot;I wasn&apos;t sure about that change either&quot;&lt;/p&gt;</comment>
                            <comment id="13011639" author="fpj" created="Sat, 26 Mar 2011 14:50:54 +0000"  >&lt;p&gt;The problem I see with mixing notifications from LOOKING peers and FOLLOWING/LEADING peers is the following. Peers that are either LEADING or FOLLOWING won&apos;t change their leader state based on new notifications. If a peer receives notifications from a quorum and one of the notifications says FOLLOWING/LEADING, then the peer cannot count on the sender of the notification to move to a new leader. The election will fail and the peer (perhaps along with others) will have to start over. &lt;/p&gt;

&lt;p&gt;Also, in the case a peer gets disconnected and comes back, if there is a quorum following a leader when the peer comes back, it needs to be able to determine who the leader is even if its leader election round is higher than the others. In this case, it has to follow a leader based on FOLLOWING/LEADING notifications, without comparing the votes in the notifications.  &lt;/p&gt;

&lt;p&gt;For these reasons, we have kept FOLLOWING/LEADING notifications in a separate data structure. It is true, though, that we could keep all of them in the same structure and simply filter based on the state field when processing.&lt;/p&gt;</comment>
                            <comment id="13012161" author="vishalmlst" created="Mon, 28 Mar 2011 19:03:44 +0100"  >&lt;p&gt;Thanks for the clarification. I will reintroduce separate data structure for LEADING/FOLLOWING notifications. &lt;/p&gt;</comment>
                            <comment id="13012196" author="vishalmlst" created="Mon, 28 Mar 2011 20:46:24 +0100"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;I think a peer should check whether the received notification originated from a cluster member. This check is done for LOOKING notifications, but after modifying proposedLeader, xid and epoch. The verification is not performed for leading/following.&lt;/p&gt;

&lt;p&gt;I am planning to add this check at the very beginning:&lt;/p&gt;

&lt;p&gt;                else if(self.getVotingView().containsKey(n.sid)) {&lt;br/&gt;
                    switch (n.state) &lt;/p&gt;
{
                    case LOOKING:
                     [...]
                }

&lt;p&gt;Do you see any issues with this (especially while using OBSERVER_ID)?&lt;/p&gt;


</comment>
                            <comment id="13012578" author="vishalmlst" created="Tue, 29 Mar 2011 18:50:07 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added outofelection&lt;/li&gt;
	&lt;li&gt;small additional change to drop notifications that do not come peers in voting view.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Testing done:&lt;br/&gt;
junit&lt;br/&gt;
systest&lt;br/&gt;
rebooted peers several times&lt;/p&gt;</comment>
                            <comment id="13012598" author="hadoopqa" created="Tue, 29 Mar 2011 19:24:00 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12474906/ZOOKEEPER-975.patch3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12474906/ZOOKEEPER-975.patch3&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1082362.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/209//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13012666" author="fpj" created="Tue, 29 Mar 2011 21:13:42 +0100"  >&lt;p&gt;Hi Vishal, In the run() method of WorkReceiver we perform a check already:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;                        /*
                         * If it is from an observer, respond right away.
                         * Note that the following predicate assumes that
                         * if a server is not a follower, then it must be
                         * an observer. If we ever have any other type of
                         * learner in the future, we&apos;ll have to change the
                         * way we check for observers.
                         */
                        if(!self.getVotingView().containsKey(response.sid)){
                            Vote current = self.getCurrentVote();
                            ToSend notmsg = new ToSend(ToSend.mType.notification,
                                    current.id,
                                    current.zxid,
                                    logicalclock,
                                    self.getPeerState(),
                                    response.sid);

                            sendqueue.offer(notmsg);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll been reviewing your patch shortly.&lt;/p&gt;</comment>
                            <comment id="13014532" author="fpj" created="Fri, 1 Apr 2011 13:14:34 +0100"  >&lt;p&gt;Hi Vishal, Apart from not having a test, it is +1 for me. Looks good.&lt;/p&gt;</comment>
                            <comment id="13015975" author="vishalmlst" created="Tue, 5 Apr 2011 17:05:30 +0100"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Do you think we need a test for this? I was looking through the code to see how we can write a test. What we can do is insert notifications in recvqueue for a peer, then call lookForLeader(), and monitor the state/proposdZxid/proposedLeader/ect. This will let us feed whatever notifications we want to FLE. The other peers should just ignore the notifications (or send notifications that we want them to send). &lt;/p&gt;

&lt;p&gt;However, for this we will have to make changes to FastLeaderElection so that one can overload its Messenger, modify recvqueue, set proposedLeader, propsedZxid, etc from the test. I think this will be a good change in general so that we can feed notifications to a peer and test for corner cases, but a bit time consuming. I am not sure how much that will help for this particular bug though. What do you think?&lt;/p&gt;

&lt;p&gt;-Vishal&lt;/p&gt;</comment>
                            <comment id="13017172" author="fpj" created="Thu, 7 Apr 2011 22:51:43 +0100"  >&lt;p&gt;Hi Vishal, What if we have a test with 3 servers with ids 1, 2, and 3. We start 1 and 2, and let 2 be elected. Once 2 is elected, we start 3. With the current trunk code, 3 should declare itself LEADING, since it will receive the initial notifications of the other two processes. With your patch, this situation shouldn&apos;t happen.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;</comment>
                            <comment id="13019114" author="vishalmlst" created="Wed, 13 Apr 2011 00:44:35 +0100"  >&lt;p&gt;Attaching patch with test.&lt;/p&gt;</comment>
                            <comment id="13019115" author="vishalmlst" created="Wed, 13 Apr 2011 00:45:18 +0100"  >&lt;p&gt;patch + test&lt;/p&gt;</comment>
                            <comment id="13019118" author="hadoopqa" created="Wed, 13 Apr 2011 00:51:31 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12476190/ZOOKEEPER-975.patch4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12476190/ZOOKEEPER-975.patch4&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1091314.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/225//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/225//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/225//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/225//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13019316" author="vishalmlst" created="Wed, 13 Apr 2011 14:30:20 +0100"  >&lt;p&gt;don&apos;t know what happened there. Canceling patch.&lt;/p&gt;</comment>
                            <comment id="13019413" author="vishalmlst" created="Wed, 13 Apr 2011 17:23:46 +0100"  >&lt;p&gt;Resubmitting the patch. Verifed the patch works on the trunk and all unit tests pass.&lt;/p&gt;</comment>
                            <comment id="13019415" author="vishalmlst" created="Wed, 13 Apr 2011 17:24:19 +0100"  >&lt;p&gt;patch available on trunk&lt;/p&gt;</comment>
                            <comment id="13019429" author="hadoopqa" created="Wed, 13 Apr 2011 17:53:26 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12476255/ZOOKEEPER-975.patch5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12476255/ZOOKEEPER-975.patch5&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1091841.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/226//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13024622" author="fpj" created="Sun, 24 Apr 2011 14:26:17 +0100"  >&lt;p&gt;Hi Vishal, The patch is +1 for me, expect for the findbugs warning it is generating. There are two findbugs reports, but I think only one is due to your patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;JLM 	Synchronization performed on java.util.concurrent.ArrayBlockingQueue in org.apache.zookeeper.server.quorum.QuorumCnxManager.addToRecvQueue(QuorumCnxManager$Message
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;It sounds like you&apos;d have to synchronize the block in addToRecvQueue using another object to get findbugs not to complain. &lt;/p&gt;</comment>
                            <comment id="13024899" author="vishalmlst" created="Mon, 25 Apr 2011 19:30:47 +0100"  >&lt;p&gt;fixed findbugs warning&lt;/p&gt;</comment>
                            <comment id="13024901" author="vishalmlst" created="Mon, 25 Apr 2011 19:31:12 +0100"  >&lt;p&gt;patch for trunk with fix for findbugs&lt;/p&gt;</comment>
                            <comment id="13024913" author="hadoopqa" created="Mon, 25 Apr 2011 20:13:01 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12477322/ZOOKEEPER-975.patch6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12477322/ZOOKEEPER-975.patch6&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1091841.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/232//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13024915" author="vishalmlst" created="Mon, 25 Apr 2011 20:19:34 +0100"  >&lt;p&gt;the findbugs failure here is due to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1052&quot; title=&quot;Findbugs warning in QuorumPeer.ResponderThread.run()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1052&quot;&gt;&lt;del&gt;ZOOKEEPER-1052&lt;/del&gt;&lt;/a&gt; as pointed out by Flavio.&lt;/p&gt;</comment>
                            <comment id="13024920" author="fpj" created="Mon, 25 Apr 2011 20:32:51 +0100"  >&lt;p&gt;Does anyone know why we are getting this javadoc warning? &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1052&quot; title=&quot;Findbugs warning in QuorumPeer.ResponderThread.run()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1052&quot;&gt;&lt;del&gt;ZOOKEEPER-1052&lt;/del&gt;&lt;/a&gt; also got -1 on javadoc, and I&apos;m not sure what the problem is. Any hint would be welcome.&lt;/p&gt;</comment>
                            <comment id="13025877" author="fpj" created="Wed, 27 Apr 2011 17:26:15 +0100"  >&lt;p&gt;The problem is not with the patch according to the console output:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[javadoc] javadoc: warning - Error fetching URL: http://java.sun.com/javase/6/docs/api/package-list
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so it is +1 for me. If no one has anything against it, I&apos;ll commit it later.&lt;/p&gt;

&lt;p&gt;Thanks, Vishal.&lt;/p&gt;</comment>
                            <comment id="13027057" author="fpj" created="Fri, 29 Apr 2011 17:13:46 +0100"  >&lt;p&gt;Committed revision 1097865.&lt;/p&gt;

&lt;p&gt;Thanks again, Vishal.&lt;/p&gt;</comment>
                            <comment id="13027316" author="hudson" created="Sat, 30 Apr 2011 11:55:06 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1168 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/ZooKeeper-trunk/1168/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/ZooKeeper-trunk/1168/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-975&quot; title=&quot;new peer goes in LEADING state even if ensemble is online&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-975&quot;&gt;&lt;del&gt;ZOOKEEPER-975&lt;/del&gt;&lt;/a&gt;. new peer goes in LEADING state even if ensemble is online. (vishal via fpj)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12474451" name="ZOOKEEPER-975.patch" size="24177" author="vishalmlst" created="Wed, 23 Mar 2011 23:26:35 +0000"/>
                            <attachment id="12469254" name="ZOOKEEPER-975.patch" size="6188" author="vishalmlst" created="Tue, 25 Jan 2011 07:31:36 +0000"/>
                            <attachment id="12474564" name="ZOOKEEPER-975.patch2" size="24248" author="vishalmlst" created="Thu, 24 Mar 2011 22:32:08 +0000"/>
                            <attachment id="12474906" name="ZOOKEEPER-975.patch3" size="29311" author="vishalmlst" created="Tue, 29 Mar 2011 18:50:07 +0100"/>
                            <attachment id="12476190" name="ZOOKEEPER-975.patch4" size="32997" author="vishalmlst" created="Wed, 13 Apr 2011 00:44:35 +0100"/>
                            <attachment id="12476255" name="ZOOKEEPER-975.patch5" size="32997" author="vishalmlst" created="Wed, 13 Apr 2011 17:23:46 +0100"/>
                            <attachment id="12477322" name="ZOOKEEPER-975.patch6" size="33259" author="vishalmlst" created="Mon, 25 Apr 2011 19:30:47 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Jan 2011 18:14:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47524</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxztov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32794</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>