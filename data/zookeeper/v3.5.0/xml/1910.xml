<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:45:07 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1910/ZOOKEEPER-1910.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1910] RemoveWatches wrongly removes the watcher if multiple watches exists on a path</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1910</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Consider a case where zkclient has added 2 data watchers(say &apos;w1&apos; and &apos;w2&apos;) on &apos;/node1&apos;.&lt;/p&gt;

&lt;p&gt;Now user has removed w1, but this is deleting the &apos;CnxnWatcher&apos; in ZK server against the &quot;/node1&quot; path. This will affect other data watchers(if any) of same client on same path. In our case &apos;w2&apos; would not be notified.&lt;/p&gt;

&lt;p&gt;Note: please see the attached test case to understand more.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12707895">ZOOKEEPER-1910</key>
            <summary>RemoveWatches wrongly removes the watcher if multiple watches exists on a path</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rakeshr">Rakesh R</assignee>
                                    <reporter username="rakeshr">Rakesh R</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Apr 2014 09:08:12 +0100</created>
                <updated>Tue, 29 Apr 2014 03:31:19 +0100</updated>
                            <resolved>Tue, 29 Apr 2014 03:31:19 +0100</resolved>
                                                    <fixVersion>3.5.0</fixVersion>
                                    <component>java client</component>
                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13968266" author="rakeshr" created="Mon, 14 Apr 2014 12:41:45 +0100"  >&lt;p&gt;In server, its keeping single watcher reference against an znode. Now the difficulty here is server needs to decide when it can remove the watcher reference.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WatchManager.java

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HashSet&amp;lt;Watcher&amp;gt;&amp;gt; watchTable =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HashSet&amp;lt;Watcher&amp;gt;&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For example: &lt;/p&gt;

&lt;p&gt;In my tests I have two watchers defined in the client side &quot;/node1&quot; - w1, w2. As we know in the server it will have only one &apos;watcher reference&apos; for each client like, &apos;/node1&apos; vs zkClient1. Now if user call removeWatcher(&quot;/node1&quot;, w1), presently it is removing the &apos;watcher reference&apos; from the server. Here w2 is not taken into consideration at the server side and later the &apos;zkClient1&apos; won&apos;t get any watch notifications.&lt;/p&gt;

&lt;p&gt;Simple way to fix is, server shouldn&apos;t remove the &apos;watcher reference&apos; on RemoveWatch request, remove it only when expiring or triggering time. But this will have the overhead of unnecessarily holding the refernce even after all the watchers are removed successfully for a path.&lt;/p&gt;

&lt;p&gt;Second approach is to have a counter at the server side and which will decr it after every RemoveWatch request from the client. When it reaches zero, now server can do the cleanup like,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HashMap&amp;lt;Watcher, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt; watchTable =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, HashMap&amp;lt;Watcher, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here I could see an over head of keeping one additional parameter and will increase the memory utilization.&lt;/p&gt;</comment>
                            <comment id="13968271" author="rakeshr" created="Mon, 14 Apr 2014 12:45:23 +0100"  >&lt;p&gt;Could someone help me to choose a better way to go ahead. Also, welcome fresh ideas. Thanks in advance.&lt;/p&gt;</comment>
                            <comment id="13968543" author="rgs" created="Mon, 14 Apr 2014 18:24:27 +0100"  >&lt;p&gt;Yeah I was thinking about this same thing while implementing RemoveWatches support in Kazoo (see 0 below). My, unpolished, thought is that the current removeWatches() API for the Java impl conflates two distinct actions:&lt;/p&gt;

&lt;p&gt;a) removing the watch set on the Server&lt;br/&gt;
b) unregister a given watcher or set of watchers&lt;/p&gt;

&lt;p&gt;Since 3.5.0 isn&apos;t out yet, are we still on time for changing our API? If so, how would you feel about having removeWatches &lt;b&gt;only&lt;/b&gt; deal with the server-side part (i.e.: unregistering the watch from the data tree) and having something like unregisterWatcher() deal with the watchers known by the client?&lt;/p&gt;

&lt;p&gt;So presumably you would have to remove your watch and unregister your watchers in separate steps. More calls, but better defined contracts. And, on top of this, you could always build convenience wrappers. Surely it means expanding the surface of our public API, but I think it might save us from confusing bugs given that as things are now we have weird corner cases.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;

&lt;p&gt;0) &lt;a href=&quot;https://github.com/python-zk/kazoo/pull/189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/python-zk/kazoo/pull/189&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13969354" author="rakeshr" created="Tue, 15 Apr 2014 10:01:23 +0100"  >&lt;blockquote&gt;
&lt;p&gt;a) removing the watch set on the Server&lt;br/&gt;
b) unregister a given watcher or set of watchers&lt;/p&gt;

&lt;p&gt;Since 3.5.0 isn&apos;t out yet, are we still on time for changing our API? If so, how would you feel about having removeWatches &lt;b&gt;only&lt;/b&gt; deal with the server-side part (i.e.: unregistering the watch from the data tree) and having something like unregisterWatcher() deal with the watchers known by the client?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt;. I think  &apos;zk#unregister(watcher)&apos; api name will confuse with the existing zk#register(watcher), which is actually meant for connection watchers. So I&apos;ve tried to do some refinement, kindly see the below section for more details and would like to know the comments.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;removeWatches - The difference with the earlier api is,&lt;br/&gt;
(1)this won&apos;t remove the given watcher from the server set even if the watcher set is empty, but it will remove the reference from the zkclient. This api will invoke a call to server and maintain orderly execution as earlier. IMHO sending to server is required to handle packet in-flight cases.&lt;br/&gt;
(2)null watcher is not allowed, client will validate and throw IllegalArgumentException.&lt;/li&gt;
	&lt;li&gt;removeAllWatches - This is new api which is meant for clearing all the watchers both client and server set. Will provide both sync &amp;amp; async api versions&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * For the given znode path, removes the specified watcher of given
     * watcherType.
     * &amp;lt;p&amp;gt;
     * Watcher shouldn&apos;t be &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;. A successful call guarantees that, the 
     * removed watcher won&apos;t be triggered.
     * &amp;lt;p&amp;gt;
     * @param path - the path of the node
     * @param watcher
     *            - a concrete watcher or &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; to remove all watchers &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the
     *            given path and watcherType
     * @param watcherType - the type of watcher to be removed
     * @param local
     *            - whether the watcher can be removed locally when there is no
     *            server connection
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the server transaction is interrupted.
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException.NoWatcher
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; no watcher exists that match the specified parameters
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the server signals an error with a non-zero error code.
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; an invalid path is specified
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the watcher is &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
     * @since 3.5.0
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void removeWatches(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path, Watcher watcher, WatcherType watcherType, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; local)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * For the given znode path, removes all the watchers of given watcherType.
     * &amp;lt;p&amp;gt;
     * A successful call guarantees that, the removed watcher won&apos;t be triggered.
     * &amp;lt;p&amp;gt;
     * @param path - the path of the node
     * @param watcherType  - the type of watcher to be removed
     * @param local
     *            - whether the watcher can be removed locally when there is no
     *            server connection
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the server transaction is interrupted.
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException.NoWatcher
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; no watcher exists that match the specified parameters
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the server signals an error with a non-zero error code.
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException
     *             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; an invalid path is specified
     * @since 3.5.0
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void removeAllWatches(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path, WatcherType watcherType, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; local)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13970490" author="rakeshr" created="Wed, 16 Apr 2014 07:28:47 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt; it would be great to if you can add your thoughts when you get sometime. Actually we have to refine the existing removeWatches api contract. Thanks!&lt;/p&gt;</comment>
                            <comment id="13970519" author="michim" created="Wed, 16 Apr 2014 08:00:47 +0100"  >&lt;p&gt;Rakesh, your proposal sounds good to me.&lt;/p&gt;</comment>
                            <comment id="13972854" author="hadoopqa" created="Thu, 17 Apr 2014 12:39:53 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12640611/ZOOKEEPER-1910.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12640611/ZOOKEEPER-1910.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1588141.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2048//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13972923" author="hadoopqa" created="Thu, 17 Apr 2014 14:22:55 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12640629/ZOOKEEPER-1910.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12640629/ZOOKEEPER-1910.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1588141.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2049//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13972929" author="rakeshr" created="Thu, 17 Apr 2014 14:31:06 +0100"  >&lt;p&gt;I&apos;ve attached latest patch, where I have splitted the removeWatches api. Please have a look at it. Thanks&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removeWatches(path, watcher, watcherType, local);&lt;/li&gt;
	&lt;li&gt;removeAllWatches(path, watcherType, local);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Review Ticket : &lt;a href=&quot;https://reviews.apache.org/r/20448/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/20448/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13976404" author="rgs" created="Tue, 22 Apr 2014 06:22:16 +0100"  >&lt;p&gt;Hmm, added some nits to the RB but overall I am not convinced about this approach. Why do we need to send a RemoveWatches request to the server with remove=false if that is essentially a no-op? Just to check if the watch stills exists in the server before we remove it on the client? It could still race, so I think that if all we want to do is unregister a watcher locally we should do it without paying a round-trip to the server. &lt;/p&gt;

&lt;p&gt;Also, about the naming, do you think that renaming removeWatches to removeWatchers would still be confusing?&lt;/p&gt;</comment>
                            <comment id="13976512" author="rakeshr" created="Tue, 22 Apr 2014 08:55:41 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; for the comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why do we need to send a RemoveWatches request to the server with remove=false if that is essentially a no-op? Just to check if the watch stills exists in the server before we remove it on the client? It could still race, so I think that if all we want to do is unregister a watcher locally we should do it without paying a round-trip to the server. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;IMHO sending request to the server will help to do an orderly execution and will help in handling the packets in-flight cases. Anyway we can&apos;t completely avoid server call, so I think better to do a call to server with remove=false rather than having a logic to check watcher exists in server and remove it from the client. In another way if we see removeWatches() api, it is also doing the watcher check in the server right. Does this make sense to you ?&lt;/p&gt;

&lt;p&gt;Actually I was thinking to remove the pre-valiadtion check before sending the packet, because we already have server side validation. If agrees, I&apos;ll remove this pre-validation when preparing another patch.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// Validating the existence of watcher.
&lt;/span&gt;        watchManager.containsWatcher(clientPath, watcher, watcherType);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;Also, about the naming, do you think that renaming removeWatches to removeWatchers would still be confusing?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I feel removeWatches api name is OK. I referred &lt;a href=&quot;https://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html#ch_zkWatches&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html#ch_zkWatches&lt;/a&gt;. Probably &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt; can help us&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13977159" author="rgs" created="Tue, 22 Apr 2014 19:23:16 +0100"  >&lt;p&gt;Sounds reasonable, thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13977163" author="rgs" created="Tue, 22 Apr 2014 19:25:11 +0100"  >&lt;p&gt;Just to elaborate a bit more on my change of mind &#8212; even though having a RemoveWatches request with a remove field looks a bit strange at first, I do think that moving the validation to the server is good plan. Specially because it reduces the probability of behavior mismatch between different client implementations. &lt;/p&gt;</comment>
                            <comment id="13977838" author="rakeshr" created="Wed, 23 Apr 2014 05:59:15 +0100"  >&lt;p&gt;OK got it. I could see an alternative approach using different opcodes - checkWatches &amp;amp; removeWatches. Any thoughts ?&lt;/p&gt;

&lt;p&gt;zk#removeWatches() api will send &apos;opCode.checkWatches&apos; request to the server and returns errCode, now the client will see errCode and remove watches locally.&lt;br/&gt;
zk#removeAllWatches() api will send &apos;opCode.removeWatches&apos; request to the server, this will remove watches from server and client as well.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ZooDefs.OpCode.checkWatches &lt;span class=&quot;code-comment&quot;&gt;// check watches exists in server and &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; errCode
&lt;/span&gt;CheckWatchesRequest &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Record{
     &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path
     &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; type
}

ZooDefs.OpCode.removeWatches &lt;span class=&quot;code-comment&quot;&gt;// remove watches from server and &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; errCode
&lt;/span&gt;RemoveWatchesRequest &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Record{
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; path
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; type
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13978768" author="rgs" created="Wed, 23 Apr 2014 20:43:08 +0100"  >&lt;p&gt;I like this much better! Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13980610" author="rakeshr" created="Fri, 25 Apr 2014 02:40:00 +0100"  >&lt;p&gt;Attaching new patch addressing the comments given in RB. Thanks again &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc&quot; class=&quot;user-hover&quot; rel=&quot;fournc&quot;&gt;Camille Fournier&lt;/a&gt; for the reviews.&lt;/p&gt;</comment>
                            <comment id="13980630" author="hadoopqa" created="Fri, 25 Apr 2014 03:24:46 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12641854/ZOOKEEPER-1910.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12641854/ZOOKEEPER-1910.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1588584.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2061//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13980645" author="rgs" created="Fri, 25 Apr 2014 03:45:59 +0100"  >&lt;p&gt;+1, thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;. Once we are settled with this I&apos;ll get to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1919&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-1919&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13982342" author="fournc" created="Sun, 27 Apr 2014 15:36:05 +0100"  >&lt;p&gt;This failed the TestWatchers c test. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt; it looks like this is failing other places, do you think this is unrelated?&lt;/p&gt;</comment>
                            <comment id="13982345" author="fournc" created="Sun, 27 Apr 2014 15:43:14 +0100"  >&lt;p&gt;To clarify: It looks like that test is failing in other unrelated patch builds, but I&apos;d like someone familiar with the cpp side to take a look before this is committed.&lt;/p&gt;</comment>
                            <comment id="13983268" author="rakeshr" created="Mon, 28 Apr 2014 18:37:58 +0100"  >&lt;p&gt;I could see &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1914&quot; title=&quot;TestWatchers.cc failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1914&quot;&gt;ZOOKEEPER-1914&lt;/a&gt; talking about similar scenario. Anything extra requires to do here in this JIRA.&lt;/p&gt;</comment>
                            <comment id="13983764" author="michim" created="Tue, 29 Apr 2014 01:10:13 +0100"  >&lt;p&gt;+1 The failure doesn&apos;t seem related to this patch. &lt;/p&gt;</comment>
                            <comment id="13983768" author="fournc" created="Tue, 29 Apr 2014 01:13:28 +0100"  >&lt;p&gt;OK I will check it in unless you&apos;re on it &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13983776" author="michim" created="Tue, 29 Apr 2014 01:20:06 +0100"  >&lt;p&gt;Please go ahead and check it in. Thanks Camille!&lt;/p&gt;</comment>
                            <comment id="13983881" author="hudson" created="Tue, 29 Apr 2014 03:14:22 +0100"  >&lt;p&gt;FAILURE: Integrated in ZooKeeper-trunk #2305 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/2305/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/2305/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1910&quot; title=&quot;RemoveWatches wrongly removes the watcher if multiple watches exists on a path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1910&quot;&gt;&lt;del&gt;ZOOKEEPER-1910&lt;/del&gt;&lt;/a&gt;. RemoveWatches wrongly removes the watcher if multiple watches &lt;br/&gt;
  exists on a path (Rakesh R via camille) (camille: &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1590850&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1590850&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooDefs.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/cli/RemoveWatchesCommand.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/Request.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/WatchManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZKDatabase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/RemoveWatchesTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/zookeeper.jute&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12710481">ZOOKEEPER-1919</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12641854" name="ZOOKEEPER-1910.patch" size="35245" author="rakeshr" created="Fri, 25 Apr 2014 02:39:12 +0100"/>
                            <attachment id="12640629" name="ZOOKEEPER-1910.patch" size="28640" author="rakeshr" created="Thu, 17 Apr 2014 13:32:44 +0100"/>
                            <attachment id="12640611" name="ZOOKEEPER-1910.patch" size="28004" author="rakeshr" created="Thu, 17 Apr 2014 11:59:49 +0100"/>
                            <attachment id="12639754" name="ZOOKEEPER-1910.patch" size="2389" author="rakeshr" created="Fri, 11 Apr 2014 09:10:04 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Apr 2014 17:24:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386218</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzodzb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386483</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>