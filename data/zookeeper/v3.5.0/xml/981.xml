<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:50:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-981/ZOOKEEPER-981.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-981] Hang in zookeeper_close() in the multi-threaded C client</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-981</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;I saw a hang once when my C++ application called the zookeeper_close() method of the multi-threaded Zookeeper client library.  The stack trace of the hung thread was the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thread 8 (Thread 5644):&lt;br/&gt;
#0  0x00007f5d7bb5bbe4 in __lll_lock_wait () from /lib/libpthread.so.0&lt;br/&gt;
#1  0x00007f5d7bb59ad0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib/libpthread.so.0&lt;br/&gt;
#2  0x00007f5d793628f6 in unlock_completion_list (l=0x32b4d68) at .../zookeeper/src/c/src/mt_adaptor.c:66&lt;br/&gt;
#3  0x00007f5d79354d4b in free_completions (zh=0x32b4c80, callCompletion=1, reason=-116) at .../zookeeper/src/c/src/zookeeper.c:1069&lt;br/&gt;
#4  0x00007f5d79355008 in cleanup_bufs (zh=0x32b4c80, callCompletion=1, rc=-116) at .../thirdparty/zookeeper/src/c/src/zookeeper.c:1125&lt;br/&gt;
#5  0x00007f5d79353200 in destroy (zh=0x32b4c80) at .../thirdparty/zookeeper/src/c/src/zookeeper.c:366&lt;br/&gt;
#6  0x00007f5d79358e0e in zookeeper_close (zh=0x32b4c80) at .../zookeeper/src/c/src/zookeeper.c:2326&lt;br/&gt;
#7  0x00007f5d79356d18 in api_epilog (zh=0x32b4c80, rc=0) at .../zookeeper/src/c/src/zookeeper.c:1661&lt;br/&gt;
#8  0x00007f5d79362f2f in adaptor_finish (zh=0x32b4c80) at .../zookeeper/src/c/src/mt_adaptor.c:205&lt;br/&gt;
#9  0x00007f5d79358c8c in zookeeper_close (zh=0x32b4c80) at .../zookeeper/src/c/src/zookeeper.c:2297 &lt;br/&gt;
...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The omitted part of the stack trace is entirely within my application, and contains no other calls to/from the Zookeeper client.  In particular, I am not calling zookeeper_close() from within a completion handler or any of the library&apos;s threads.&lt;/p&gt;

&lt;p&gt;I haven&apos;t been able to reproduce this, and when I encountered this I wasn&apos;t capturing logging from the client library, so unfortunately I don&apos;t have any more information at this time.  But I will update this JIRA if I see it again.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Debian Squeeze, Linux 2.6.32-5, x86_64&lt;/p&gt;</environment>
        <key id="12497380">ZOOKEEPER-981</key>
            <summary>Hang in zookeeper_close() in the multi-threaded C client</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="strib">Jeremy Stribling</assignee>
                                    <reporter username="strib">Jeremy Stribling</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Feb 2011 20:23:01 +0000</created>
                <updated>Wed, 23 Nov 2011 19:22:00 +0000</updated>
                            <resolved>Wed, 14 Sep 2011 05:10:37 +0100</resolved>
                                    <version>3.3.2</version>
                                    <fixVersion>3.4.0</fixVersion>
                                    <component>c client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="12989741" author="breed" created="Wed, 2 Feb 2011 18:48:51 +0000"  >&lt;p&gt;we have seen this happen when zookeeper functions, including zookeeper_close(), are called on handles that have already been closed. (aka double free.) is it possible that you had previously called zookeeper_close() on the handle?&lt;/p&gt;</comment>
                            <comment id="12989752" author="strib" created="Wed, 2 Feb 2011 19:07:25 +0000"  >&lt;p&gt;Not in any way that I can see.  The only code in my app that calls zookeeper_close() looks like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;  if (_zk_handle != NULL) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
    // assume for now that there is only a single zookeeper client instance
    assert(_closing_zh == NULL);
    _closing_zh = _zk_handle;
    ...
    zookeeper_close(_zk_handle);
    _zk_handle = NULL;
    ...
  }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;In order to call zookeeper_close() twice on the same handle, it would have to pass through that assert, which would have failed.  (The app uses non-preemptive cooperative threading, so there shouldn&apos;t be any races there.)&lt;/p&gt;</comment>
                            <comment id="12989753" author="strib" created="Wed, 2 Feb 2011 19:09:44 +0000"  >&lt;p&gt;Oops, sorry.  Here&apos;s the code again:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (_zk_handle != NULL) {
    &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt;(_closing_zh == NULL);
    _closing_zh = _zk_handle;
    ...
    zookeeper_close(_zk_handle);
    _zk_handle = NULL;
    ...
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12989773" author="breed" created="Wed, 2 Feb 2011 20:09:15 +0000"  >&lt;p&gt;do you also set _closing_zh to null after the close? is it possible that this block is invoked concurrently by two different threads? or is it protected by a mutex? (i don&apos;t mean to pry, just a sanity check &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12989776" author="strib" created="Wed, 2 Feb 2011 20:13:36 +0000"  >&lt;p&gt;Yes, sorry, _closing_zh is set to NULL after the if block.&lt;/p&gt;

&lt;p&gt;And I mentioned above that we use cooperative threading, so concurrency races shouldn&apos;t be an issue.&lt;/p&gt;</comment>
                            <comment id="12996260" author="tsulin" created="Fri, 18 Feb 2011 06:57:45 +0000"  >&lt;p&gt;I have the same problem.&lt;/p&gt;

&lt;p&gt;It may be reproduced by the following steps:&lt;br/&gt;
1 create two zk handle A and B&lt;br/&gt;
2 use A to create an ephemeral node under path P&lt;br/&gt;
3 use B to getchild of P and set a watcher&lt;br/&gt;
4 in the watcher function, getchild of P and set the watcher&lt;br/&gt;
5 close A&lt;br/&gt;
6 close B&lt;/p&gt;

&lt;p&gt;It will be reproduced in a probability of about 10%.&lt;/p&gt;

&lt;p&gt;I found zookeeper_close is called three times when closing B. destroy is called twice, one of which is called from do_completion.&lt;/p&gt;

&lt;p&gt;I think there is a race condition in  zookeeper_close.&lt;/p&gt;

&lt;p&gt;int zookeeper_close(zhandle_t *zh)&lt;br/&gt;
{&lt;br/&gt;
    int rc=ZOK;&lt;br/&gt;
    if (zh==0)&lt;br/&gt;
        return ZBADARGUMENTS;&lt;/p&gt;

&lt;p&gt;    zh-&amp;gt;close_requested=1;&lt;br/&gt;
    if (inc_ref_counter(zh,0)!=0) &lt;/p&gt;
{
	/* Signal any syncronous completions before joining the threads */
        enter_critical(zh);
        free_completions(zh,1,ZCLOSING);
        leave_critical(zh);

        adaptor_finish(zh); // If do_completion is finished before here, zookeeper_close will be called twice. Once in do_completion, another in adaptor_finish.
        return ZOK;
    }
&lt;p&gt;    if(zh-&amp;gt;state==ZOO_CONNECTED_STATE){&lt;/p&gt;

</comment>
                            <comment id="12996265" author="tsulin" created="Fri, 18 Feb 2011 07:12:07 +0000"  >&lt;p&gt;sorry, code again&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
int zookeeper_close(zhandle_t *zh)
{
    int rc=ZOK;
    if (zh==0)
        return ZBADARGUMENTS;

    zh-&amp;gt;close_requested=1;
    if (inc_ref_counter(zh,0)!=0) {
	/* Signal any syncronous completions before joining the threads */
        enter_critical(zh);
        free_completions(zh,1,ZCLOSING);
        leave_critical(zh);

        adaptor_finish(zh);// If do_completion is finished before here, zookeeper_close will be called twice. Once in do_completion, another in adaptor_finish.
        return ZOK;
    }
    if(zh-&amp;gt;state==ZOO_CONNECTED_STATE){
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12996473" author="tsulin" created="Fri, 18 Feb 2011 15:54:28 +0000"  >&lt;p&gt;test codes to reproduce this bug&lt;/p&gt;</comment>
                            <comment id="12996497" author="tsulin" created="Fri, 18 Feb 2011 16:27:15 +0000"  >&lt;p&gt;sorry for upload many times. my network sucks.&lt;/p&gt;

&lt;p&gt;stack trace:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
#1  0x0000003e75a0b0c0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#2  0x00002ad3f8a504c1 in unlock_completion_list () from /usr/lib/libzookeeper_mt.so.2
#3  0x00002ad3f8a46f47 in free_completions () from /usr/lib/libzookeeper_mt.so.2
#4  0x00002ad3f8a47152 in cleanup_bufs () from /usr/lib/libzookeeper_mt.so.2
#5  0x00002ad3f8a471b5 in destroy () from /usr/lib/libzookeeper_mt.so.2
#6  0x00002ad3f8a4731c in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2
#7  0x00002ad3f8a474e8 in api_epilog () from /usr/lib/libzookeeper_mt.so.2
#8  0x00002ad3f8a47370 in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2
#9  0x0000000000401aed in zookeeper_client::~zookeeper_client() ()
#10 0x0000000000401744 in main ()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
#1  0x0000003e75a0b0c0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#2  0x00002ad98e6a485a in adaptor_finish () from /usr/lib/libzookeeper_mt.so.2
#3  0x00002ad98e69b370 in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2
#4  0x0000000000401ae5 in zookeeper_client::~zookeeper_client() ()
#5  0x000000000040173b in main ()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13002911" author="strib" created="Sat, 5 Mar 2011 02:48:02 +0000"  >&lt;p&gt;Attached is an interim patch for this bug that solves the problems exhibited by tsulin&apos;s test on my system.&lt;/p&gt;</comment>
                            <comment id="13002912" author="strib" created="Sat, 5 Mar 2011 02:52:07 +0000"  >&lt;p&gt;When I run tsulin&apos;s test under valgrind on my system with Zookeeper 3.3.3, after only 5 iterations I see double-free errors of the type&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;==10430== Invalid read of size 8
==10430==    at 0x405823: free_completions (zookeeper.c:1066)
==10430==    by 0x405B4F: cleanup_bufs (zookeeper.c:1125)
==10430==    by 0x403D47: destroy (zookeeper.c:366)
==10430==    by 0x409961: zookeeper_close (zookeeper.c:2327)
==10430==    by 0x40785F: api_epilog (zookeeper.c:1661)
==10430==    by 0x413A82: adaptor_finish (mt_adaptor.c:205)
==10430==    by 0x4097DF: zookeeper_close (zookeeper.c:2298)
==10430==    by 0x4036AC: zookeeper_client::~zookeeper_client() (ZOOKEEPER-981.cpp:54)
==10430==    by 0x403325: main (ZOOKEEPER-981.cpp:112)
==10430==  Address 0x5b5c0e8 is 296 bytes inside a block of size 728 free&apos;d
==10430==    at 0x4C240FD: free (vg_replace_malloc.c:366)
==10430==    by 0x409979: zookeeper_close (zookeeper.c:2329)
==10430==    by 0x40785F: api_epilog (zookeeper.c:1661)
==10430==    by 0x414083: do_completion (mt_adaptor.c:335)
==10430==    by 0x4E2F8B9: start_thread (pthread_create.c:300)
==10430==    by 0x58C002C: clone (clone.S:112)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, when I run with the above attached patch, I was able to run over 100 times without any valgrind errors.&lt;/p&gt;

&lt;p&gt;The patch itself probably isn&apos;t good enough as it is &amp;#8211; it&apos;s a mismatch of inc_ref_counter and api_epilog.  But I thought I&apos;d post it here until a more knowledgeable ZK developer can make a proper one.&lt;/p&gt;</comment>
                            <comment id="13049624" author="mahadev" created="Wed, 15 Jun 2011 06:58:25 +0100"  >&lt;p&gt;Looks like we should get this into 3.4. &lt;/p&gt;</comment>
                            <comment id="13066474" author="mahadev" created="Sat, 16 Jul 2011 18:43:51 +0100"  >&lt;p&gt;Reuploading to run the patch via hudson.&lt;/p&gt;</comment>
                            <comment id="13066475" author="mahadev" created="Sat, 16 Jul 2011 18:44:56 +0100"  >&lt;p&gt;Ben, &lt;br/&gt;
  Would you be able to review this patch? &lt;/p&gt;</comment>
                            <comment id="13066486" author="hadoopqa" created="Sat, 16 Jul 2011 19:15:46 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1146961.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13068003" author="strib" created="Tue, 19 Jul 2011 22:49:35 +0100"  >&lt;p&gt;Patrick, sorry if this is a dense question, but why is this issue assigned back to me?  My understanding is that it&apos;s waiting for a review from Ben.&lt;/p&gt;

&lt;p&gt;Feel free to assign back to me if I&apos;m misunderstanding the assignee protocol.&lt;/p&gt;</comment>
                            <comment id="13082902" author="hadoopqa" created="Thu, 11 Aug 2011 05:25:51 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1152141.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13082906" author="mahadev" created="Thu, 11 Aug 2011 05:32:46 +0100"  >&lt;p&gt;Jeremy,&lt;br/&gt;
 The jira is usually assigned to the person who uploads the patch and has done work on it. The patch assignment does not change if it needs reviews. Hope that helps.&lt;/p&gt;</comment>
                            <comment id="13082908" author="mahadev" created="Thu, 11 Aug 2011 05:33:33 +0100"  >&lt;p&gt;ben,&lt;br/&gt;
 Can you review this?&lt;/p&gt;</comment>
                            <comment id="13095525" author="breed" created="Thu, 1 Sep 2011 19:49:19 +0100"  >&lt;p&gt;do you think we could incorporate the test in the tar file into the patch? it should easily convert to a cppunit test.&lt;/p&gt;</comment>
                            <comment id="13095805" author="helei" created="Fri, 2 Sep 2011 07:54:09 +0100"  >&lt;p&gt;I saw the same problem. Maybe ref_counter should be increased before we free zh&lt;/p&gt;</comment>
                            <comment id="13096290" author="breed" created="Fri, 2 Sep 2011 21:50:15 +0100"  >&lt;p&gt;helei are you saying that you see the problem even with this patch applied?&lt;/p&gt;</comment>
                            <comment id="13104231" author="mahadev" created="Wed, 14 Sep 2011 05:10:37 +0100"  >&lt;p&gt;I just committed this to trunk. The change looks good to me. Ben we can probably add a testcase in a different jira.&lt;/p&gt;</comment>
                            <comment id="13105265" author="hudson" created="Thu, 15 Sep 2011 11:56:35 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1304 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1304/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1304/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-981&quot; title=&quot;Hang in zookeeper_close() in the multi-threaded C client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-981&quot;&gt;&lt;del&gt;ZOOKEEPER-981&lt;/del&gt;&lt;/a&gt;. Hang in zookeeper_close() in the multi-threaded C client. (Jeremy Stribling via mahadev)&lt;/p&gt;

&lt;p&gt;mahadev : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1170430&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1170430&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/c/src/zookeeper.c&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13152858" author="helei" created="Fri, 18 Nov 2011 13:31:46 +0000"  >&lt;p&gt;Sorry for not response in time. I saw another problem with this patch applied. Hang in zookeeper_close() again. here is the stack:&lt;br/&gt;
(gdb) bt&lt;br/&gt;
#0  0x000000302b80adfb in __lll_mutex_lock_wait () from /lib64/tls/libpthread.so.0&lt;br/&gt;
#1  0x000000302b1307a8 in main_arena () from /lib64/tls/libc.so.6&lt;br/&gt;
#2  0x000000302b910230 in stack_used () from /lib64/tls/libpthread.so.0&lt;br/&gt;
#3  0x000000302b808dde in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/tls/libpthread.so.0&lt;br/&gt;
#4  0x00000000006b4ce8 in adaptor_finish (zh=0x6902060) at src/mt_adaptor.c:217&lt;br/&gt;
#5  0x00000000006b0fd0 in zookeeper_close (zh=0x6902060) at src/zookeeper.c:2297&lt;br/&gt;
(gdb) p zh-&amp;gt;ref_counter &lt;br/&gt;
$5 = 1&lt;br/&gt;
(gdb) p zh-&amp;gt;close_requested &lt;br/&gt;
$6 = 1&lt;br/&gt;
(gdb) p *zh&lt;br/&gt;
$7 = {fd = 110112576, hostname = 0x6903620 &quot;&quot;, addrs = 0x0, addrs_count = 1, &lt;br/&gt;
  watcher = 0x62e5dc &amp;lt;doris::meta_register_mgr_t::register_mgr_watcher(_zhandle*, int, int, char const*, void*)&amp;gt;, last_recv = &lt;/p&gt;
{tv_sec = 1321510694, 
    tv_usec = 552835}
&lt;p&gt;, last_send = &lt;/p&gt;
{tv_sec = 1321510694, tv_usec = 552886}
&lt;p&gt;, last_ping = &lt;/p&gt;
{tv_sec = 1321510685, tv_usec = 774869}
&lt;p&gt;, next_deadline = &lt;/p&gt;
{
    tv_sec = 1321510704, tv_usec = 547831}
&lt;p&gt;, recv_timeout = 30000, input_buffer = 0x0, to_process = {head = 0x0, last = 0x0, lock = {__m_reserved = 0, &lt;br/&gt;
      __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, to_send = {head = 0x0, last = 0x0, lock = {&lt;br/&gt;
      __m_reserved = 0, __m_count = 0, __m_owner = 0x0, __m_kind = 1, __m_lock = {__status = 0, __spinlock = 0}}}, sent_requests = {head = 0x0, last = 0x0, &lt;br/&gt;
    cond = {__c_lock = {_&lt;em&gt;status = 1, __spinlock = -1}, __c_waiting = 0x0, __padding = &apos;\0&apos; &amp;lt;repeats 15 times&amp;gt;, __align = 0}, lock = {&lt;/em&gt;_m_reserved = 0, &lt;br/&gt;
      __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, completions_to_process = {head = 0x2aefbff800, &lt;br/&gt;
    last = 0x2af0e05f40, cond = {__c_lock = {__status = 592705486850, __spinlock = -1}, __c_waiting = 0x45, &lt;br/&gt;
      _&lt;em&gt;padding = &quot;E\000\000\000\000\000\000\000\220\006\000\000\000&quot;, __align = 296352743424}, lock = {&lt;/em&gt;_m_reserved = 1, __m_count = 0, &lt;br/&gt;
      __m_owner = 0x1000026ca, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, connect_index = 0, client_id = &lt;/p&gt;
{client_id = 86551148676999146, 
    passwd = &quot;G&#25077;&#25792;\233\213\f&#38380;202&#31604;\002&#37674;\034&quot;}
&lt;p&gt;, last_zxid = 82057372, outstanding_sync = 0, primer_buffer = &lt;/p&gt;
{buffer = 0x6902290 &quot;&quot;, len = 40, 
    curr_offset = 44, next = 0x0}
&lt;p&gt;, primer_storage = &lt;/p&gt;
{len = 36, protocolVersion = 0, timeOut = 30000, sessionId = 86551148676999146, passwd_len = 16, 
    passwd = &quot;G&#25077;&#25792;\233\213\f&#38380;202&#31604;\002&#37674;\034&quot;}
&lt;p&gt;, &lt;br/&gt;
  primer_storage_buffer = &quot;\000\000\000$\000\000\000\000\000\000u0\0013}&#24796;&#34229;&#38380;000\000\000\020G&#25077;&#25792;\233\213\f&#38380;202&#31604;\002&#37674;\034&quot;, state = 0, context = 0x0, &lt;br/&gt;
  auth_h = {auth = 0x0, lock = {__m_reserved = 0, __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, &lt;br/&gt;
  ref_counter = 1, close_requested = 1, adaptor_priv = 0x0, socket_readable = &lt;/p&gt;
{tv_sec = 0, tv_usec = 0}
&lt;p&gt;, active_node_watchers = 0x6901520, &lt;br/&gt;
  active_exist_watchers = 0x69015d0, active_child_watchers = 0x6902ef0, chroot = 0x0}&lt;br/&gt;
I think the ref_counter is suposed to be 2 or 3 here. 1 seems not correct. thanks again&lt;/p&gt;</comment>
                            <comment id="13152962" author="phunt" created="Fri, 18 Nov 2011 16:55:53 +0000"  >&lt;p&gt;@helei please enter a new JIRA with this issue, reference this jira in your description. thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12486732" name="ZOOKEEPER-981-v1.patch" size="1167" author="mahadev" created="Sat, 16 Jul 2011 18:43:51 +0100"/>
                            <attachment id="12471413" name="ZOOKEEPER-981.tar.gz" size="1449" author="tsulin" created="Fri, 18 Feb 2011 16:08:39 +0000"/>
                            <attachment id="12472730" name="zookeeper-981.patch" size="1153" author="strib" created="Sat, 5 Mar 2011 02:48:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Feb 2011 18:48:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47522</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxztnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32790</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>