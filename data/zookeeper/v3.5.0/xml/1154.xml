<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:49:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1154/ZOOKEEPER-1154.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1154] Data inconsistency when the node(s) with the highest zxid is not present at the time of leader election</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1154</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;If a participant with the highest zxid (lets call it A) isn&apos;t present during leader election, a participant with a lower zxid (say B) might be chosen as a leader. When A comes up, it will replay the log with that higher zxid. The change that was in that higher zxid will only be visible to the clients connecting to the participant A, but not to other participants.&lt;/p&gt;

&lt;p&gt;I was able to reproduce this problem by&lt;br/&gt;
1. connect debugger to B and C and suspend them, so they don&apos;t write anything&lt;br/&gt;
2. Issue an update to the leader A.&lt;br/&gt;
3. After a few seconds, crash all servers (A,B,C)&lt;br/&gt;
4. Start B and C, let the leader election take place&lt;br/&gt;
5. Start A.&lt;br/&gt;
6. You will find that the update done in step 2 is visible on A but not on B,C, hence the inconsistency.&lt;/p&gt;

&lt;p&gt;Below is a more detailed analysis of what is happening in the code.&lt;/p&gt;


&lt;p&gt;Initial Condition&lt;br/&gt;
1.	Lets say there are three nodes in the ensemble A,B,C with A being the leader&lt;br/&gt;
2.	The current epoch is 7. &lt;br/&gt;
3.	For simplicity of the example, lets say zxid is a two digit number, with epoch being the first digit.&lt;br/&gt;
4.	The zxid is 73&lt;br/&gt;
5.	All the nodes have seen the change 73 and have persistently logged it.&lt;/p&gt;

&lt;p&gt;Step 1&lt;br/&gt;
Request with zxid 74 is issued. The leader A writes it to the log but there is a crash of the entire ensemble and B,C never write the change 74 to their log.&lt;/p&gt;

&lt;p&gt;Step 3&lt;br/&gt;
B,C restart, A is still down&lt;br/&gt;
B,C form the quorum&lt;br/&gt;
B is the new leader. Lets say  B minCommitLog is 71 and maxCommitLog is 73&lt;br/&gt;
epoch is now 8, zxid is 80&lt;br/&gt;
Request with zxid 81 is successful. On B, minCommitLog is now 71, maxCommitLog is 81&lt;/p&gt;

&lt;p&gt;Step 4&lt;br/&gt;
A starts up. It applies the change in request with zxid 74 to its in-memory data tree&lt;br/&gt;
A contacts B to registerAsFollower and provides 74 as its ZxId&lt;br/&gt;
Since 71&amp;lt;=74&amp;lt;=81, B decides to send A the diff. B will send to A the proposal 81.&lt;/p&gt;


&lt;p&gt;Problem:&lt;br/&gt;
The problem with the above sequence is that A&apos;s data tree has the update from request 74, which is not correct. Before getting the proposals 81, A should have received a trunc to 73. I don&apos;t see that in the code. If the maxCommitLog on B hadn&apos;t bumped to 81 but had stayed at 73, that case seems to be fine.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12518902">ZOOKEEPER-1154</key>
            <summary>Data inconsistency when the node(s) with the highest zxid is not present at the time of leader election</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vishal.k">Vishal Kathuria</assignee>
                                    <reporter username="vishal.k">Vishal Kathuria</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Aug 2011 18:36:07 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:45 +0000</updated>
                            <resolved>Mon, 5 Sep 2011 21:04:21 +0100</resolved>
                                    <version>3.3.3</version>
                                    <fixVersion>3.3.4</fixVersion>
                    <fixVersion>3.4.0</fixVersion>
                                    <component>quorum</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="1814400">504h</timeoriginalestimate>
                            <timeestimate seconds="1814400">504h</timeestimate>
                                        <comments>
                            <comment id="13085216" author="fpj" created="Mon, 15 Aug 2011 19:00:10 +0100"  >&lt;p&gt;Vishal, I haven&apos;t gone through the code to confirm it, but there is one point I don&apos;t understand. In your recipe to reproduce the problem, waiting a few seconds should be more than sufficient to make sure that all servers have received the update, no? &lt;/p&gt;</comment>
                            <comment id="13085239" author="vishal.k" created="Mon, 15 Aug 2011 19:20:17 +0100"  >&lt;p&gt;I connected the debugger to B and C and paused all threads to make sure B and C don&apos;t get a chance to log the request before they crash. I waited a few secs to give A enough time to log the request though.&lt;/p&gt;</comment>
                            <comment id="13085272" author="vishal.k" created="Mon, 15 Aug 2011 20:23:23 +0100"  >&lt;p&gt;Thanks for taking a look at this Flavio.&lt;/p&gt;

&lt;p&gt;I have been thinking of a solution and sharing my thoughts here.&lt;br/&gt;
The leader should keep track of the last committed zxid for n epochs previous to the current epoch.&lt;br/&gt;
If a follower tries to join and the leader has the last committed zxid of the follower&apos;s persisted epoch, the leader first asks the follower to truncate its log to the last committed zxid before starting to send a diff.&lt;/p&gt;

&lt;p&gt;If the (current epoch - follower&apos;s persisted epoch &amp;gt; n), then the follower cannot get a diff and will have to get a snap instead. &lt;/p&gt;

&lt;p&gt;Looking forward to your comments.&lt;br/&gt;
thanks&lt;br/&gt;
Vishal&lt;/p&gt;</comment>
                            <comment id="13085568" author="breed" created="Tue, 16 Aug 2011 07:46:24 +0100"  >&lt;p&gt;yes, you are correct vishal. i think n=1 is easy to implement and should catch the common cases. the fix should be pretty easy: we just hook into the committedLog processing where the minCommittedLog and maxCommittedLog are maintained (it&apos;s just one place in ZKDatabase.java) to track the last zxid for each epoch in the committedLog (or just the prevEpoch if n=1). then we use that in the FollowerHandler to decide when to truncate.&lt;/p&gt;

&lt;p&gt;the harder part might be writing the test cases.&lt;/p&gt;</comment>
                            <comment id="13085886" author="vishal.k" created="Tue, 16 Aug 2011 19:22:47 +0100"  >&lt;p&gt;Thanks Ben,&lt;/p&gt;

&lt;p&gt;Yes, n=1 should be easy to implement but I was worried it would lead to more frequent sending of snaps instead of diffs. This could be a problem for ZK installations with large data (some of which are several GB). &lt;/p&gt;

&lt;p&gt;Looking at the code to see the best way to implement this for the general case - I should have an update soon.&lt;/p&gt;

&lt;p&gt;thanks!&lt;/p&gt;</comment>
                            <comment id="13086060" author="mahadev" created="Wed, 17 Aug 2011 01:21:52 +0100"  >&lt;p&gt;Good catch Vishal. I agree with Ben. n = 1 should be good enough. It&apos;d be the most common case. &lt;/p&gt;</comment>
                            <comment id="13086409" author="fpj" created="Wed, 17 Aug 2011 16:53:30 +0100"  >&lt;p&gt;-0, given all the bugs we have been able to find in the protocol implementation recently, I prefer an approach that is perhaps less efficient but easier to read and interpret. Instead of keeping one or more variables and performing more checks, we should simply send a snapshot if the leader has committed anything other than NEWLEADER in the new epoch.   &lt;/p&gt;</comment>
                            <comment id="13086592" author="vishal.k" created="Wed, 17 Aug 2011 22:03:21 +0100"  >&lt;p&gt;Flavio, &lt;br/&gt;
Although I agree that code can be made easier to read and interpret, I don&apos;t think the bug was there because of poor code readability.&lt;/p&gt;

&lt;p&gt;Here is how I hit upon this bug - I started with an academic exercise to compare Paxos and ZooKeeper protocol. My premise was that, if there are any differences, I should &lt;/p&gt;

&lt;p&gt;a. either be able to attribute it to use of TCP and choosing of server with highest zxid as the leader&lt;br/&gt;
b. or I should be able to find a bug. This is how I identified this bug.&lt;/p&gt;

&lt;p&gt;So my strategy to gaining confidence that the ZK protocol has no bugs, is to review the code (and convince a couple of other folks as well to do the same) and make sure it is equivalent to Paxos modulo above mentioned optimizations &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;We could make the protocol simpler but it would certainly be less efficient. Snapshots, when you have several GB of data are quite expensive. If we don&apos;t even fix it for the case of n=1, it would increase the probability of the snapshot transfers.&lt;/p&gt;

&lt;p&gt;I have the fix for the general case (n&amp;gt;1) coded and the test written (as Ben said, the test took longer than the fix itself &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;While testing the fix, it looks like I hit another bug in truncate code path. The passed in zxid should be in the truncated log but it isn&apos;t. I should be able to send a patch out soon after I have figured that one out.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

</comment>
                            <comment id="13086603" author="fpj" created="Wed, 17 Aug 2011 22:19:36 +0100"  >&lt;p&gt;Hi Vishal, We&apos;ve had discussions about Zab not being equivalent to Paxos in the mailing list of ZooKeeper, and we have a paper at DSN 2011 discussing how they differ.&lt;/p&gt;

&lt;p&gt;About the code, I didn&apos;t mean to imply that the bug was there because of poor readability. Frankly, I have no idea why that bug is there. I thought we were truncating in a certain way, and you&apos;ve shown that we were not doing what I thought we were doing. Thanks for the observation!&lt;/p&gt;

&lt;p&gt;Now one real problem I see is that we were not testing if we were truncating in the scenario is described, which we should, and so I think that tests are indeed an important contribution here. And, I still don&apos;t feel comfortable fixing in the way you&apos;re proposing, for simplicity.&lt;/p&gt;</comment>
                            <comment id="13087857" author="vishal.k" created="Fri, 19 Aug 2011 19:23:38 +0100"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;Looking forward to reading your paper. I looked online and found the slide deck but couldn&apos;t find a link to the pdf. Could you please forward the link to me?&lt;/p&gt;

&lt;p&gt;I agree us not testing all the scenarios is a serious problem - it can let regressions slip through and them not getting caught for several years (as it happened with &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1156&quot; title=&quot;Log truncation truncating log too much - can cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1156&quot;&gt;&lt;del&gt;ZOOKEEPER-1156&lt;/del&gt;&lt;/a&gt;, which has been there in the code for 2 years).&lt;/p&gt;

&lt;p&gt;I fully understand your concern around simplicity. When I submit the patch, please let me know what you think. I found a way to do this without maintaining additional state/variables. The idea is that if the follower has a zxid that the leader doesn&apos;t have a matching committed proposal for, the leader asks the follower to truncate to the zxid for which the leader does have a committed proposal and starts sending diffs from that.&lt;/p&gt;

&lt;p&gt;My new test is passing with the fix. Interestingly I am seeing JVM crashes in the hammer tests, so I need to investigate that before I can submit the patch.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13088066" author="vishal.k" created="Sat, 20 Aug 2011 00:28:37 +0100"  >&lt;p&gt;The key change is in LearnerHandler.java&lt;/p&gt;

&lt;p&gt;If the follower has a zxid that the leader doesn&apos;t have a matching committed proposal for, the leader asks the follower to truncate to the highest zxid &amp;lt; peerZxid and starts sending diffs from that.&lt;/p&gt;</comment>
                            <comment id="13088075" author="hadoopqa" created="Sat, 20 Aug 2011 00:47:33 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12491016/ZOOKEEPER-1154.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12491016/ZOOKEEPER-1154.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1159432.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/469//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13088124" author="fournc" created="Sat, 20 Aug 2011 05:14:48 +0100"  >&lt;p&gt;I think you have more problems than the failing hammer tests. Look at the logs in FollowerResyncConcurrencyTest, I see a huge number of errors like:&lt;/p&gt;

&lt;p&gt;2011-08-19 23:38:42,392 &lt;span class=&quot;error&quot;&gt;&amp;#91;myid:&amp;#93;&lt;/span&gt; - WARN  [QuorumPeer&lt;span class=&quot;error&quot;&gt;&amp;#91;myid=1&amp;#93;&lt;/span&gt;/0:0:0:0:0:0:0:0:11221:DataTree@909] - Failed: Create transaction for /mybar0000004091&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.DataTree.createNode(DataTree.java:483)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:799)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.persistence.FileTxnSnapLog.processTransaction(FileTxnSnapLog.java:197)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:150)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:223)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:413)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.quorum.QuorumPeer.getLastLoggedZxid(QuorumPeer.java:538)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.quorum.Learner.registerWithLeader(Learner.java:257)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:72)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:716)&lt;/p&gt;
</comment>
                            <comment id="13088125" author="fournc" created="Sat, 20 Aug 2011 05:20:02 +0100"  >&lt;p&gt;I suspect btw that the random crashes are caused by these lines you added into Learner:&lt;br/&gt;
 try &lt;/p&gt;
{
          sock.close();
        }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
          // Ignore any exceptions
        }
&lt;p&gt;        sock = null;&lt;/p&gt;</comment>
                            <comment id="13088127" author="fournc" created="Sat, 20 Aug 2011 05:38:16 +0100"  >&lt;p&gt;// Committer: This comment is for your review. Please remove this comment before committing.&lt;br/&gt;
            // This should not be needed. In case of a SNAP, the snapshot should already have this value.&lt;br/&gt;
            // If we set it here, it could end up&lt;br/&gt;
            // setting the value back since some changes might get committed on the leader&lt;br/&gt;
            // between when the leader reads this value from data tree and when the snap&lt;br/&gt;
            // is serialized on the leader. In case of DIFF, the COMMIT messages should set it right.&lt;br/&gt;
            // In case of TRUNC, it should correctly get set as part&lt;br/&gt;
            // of the truncate call above.&lt;br/&gt;
//            zk.getZKDatabase().setlastProcessedZxid(qp.getZxid());&lt;/p&gt;


&lt;p&gt;This is incorrect for SNAP. The way we deserialize snapshots from a SNAP request does not set the lastProcessedZXid from the leader, the snapshot does not contain this information at all. It must be sent from the leader to be set correctly.&lt;/p&gt;</comment>
                            <comment id="13088156" author="vishal.k" created="Sat, 20 Aug 2011 08:49:18 +0100"  >&lt;p&gt;Thanks for reviewing the changes Camille.&lt;/p&gt;

&lt;p&gt;Sorry about the test failures - because of the JVM failure, the test log was getting wiped out on my machine, so I couldn&apos;t tell what was going on. I regret having ignored the JVM failures.&lt;/p&gt;

&lt;p&gt;You are right about your observation about the SNAP (my bad). After seeing the errors in FollowerResyncConcurrencyTest in the jenkins test report, I suspected that and checked the code too. Since the changes in Learner.java are not necessary for the fix for this problem, I&apos;ll remove them from my patch. I need to do further investigation of the issue I suspected there and I will file a separate Jira if I find anything. &lt;/p&gt;

&lt;p&gt;With the new patch (without Learner.java changes), I am not seeing the JVM crashes any more, although I see timeouts still. I&apos;ll submit the new patch as soon as I&apos;ve figured out the  solution to the timeout issue and get a completely clean test run.&lt;/p&gt;

&lt;p&gt;Thanks! &lt;/p&gt;</comment>
                            <comment id="13089544" author="vishal.k" created="Tue, 23 Aug 2011 16:37:20 +0100"  >&lt;p&gt;Submitting an updated patch. &lt;/p&gt;

&lt;p&gt;This patch includes the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1156&quot; title=&quot;Log truncation truncating log too much - can cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1156&quot;&gt;&lt;del&gt;ZOOKEEPER-1156&lt;/del&gt;&lt;/a&gt; as well, since it is necessary for getting the tests to pass.&lt;/p&gt;

&lt;p&gt;All tests are passing on this new patch.&lt;/p&gt;</comment>
                            <comment id="13089634" author="hadoopqa" created="Tue, 23 Aug 2011 19:13:29 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12491350/ZOOKEEPER-1154.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12491350/ZOOKEEPER-1154.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1159929.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/472//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13094524" author="fournc" created="Wed, 31 Aug 2011 14:35:20 +0100"  >&lt;p&gt;Doing a code review, one general comment: Please don&apos;t use assertTrue with equality checks and without a message. If it is an equality check you want to do, use assertEquals, and leave a message telling me what the assert is checking. I would appreciate it if you would upload the patch with this fixed in the tests. Other than that it looks good, I&apos;ll apply with that minor fix. Also if we want this to go into the 3.3.3 branch please upload a patch against that branch..&lt;/p&gt;</comment>
                            <comment id="13096143" author="vishal.k" created="Fri, 2 Sep 2011 18:15:13 +0100"  >&lt;p&gt;Thanks for reviewing the patch and your feedback Camille. I have made the changes you suggested to the test. Please let me know in case you have any further feedback.&lt;/p&gt;
</comment>
                            <comment id="13096158" author="hadoopqa" created="Fri, 2 Sep 2011 18:44:01 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12492776/ZOOKEEPER-1154.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12492776/ZOOKEEPER-1154.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1164632.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/488//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13096342" author="fournc" created="Fri, 2 Sep 2011 22:44:43 +0100"  >&lt;p&gt;Looks great Vishal, thanks! Will commit this soon.&lt;/p&gt;</comment>
                            <comment id="13096456" author="fournc" created="Sat, 3 Sep 2011 00:08:08 +0100"  >&lt;p&gt;Committed to trunk r1164758&lt;/p&gt;</comment>
                            <comment id="13096459" author="fournc" created="Sat, 3 Sep 2011 00:17:28 +0100"  >&lt;p&gt;I want to put this in 3.3.4, and I need to modify the tests to work with the old test stuff. Will close when I fix that and get it checked in.&lt;/p&gt;</comment>
                            <comment id="13096465" author="fournc" created="Sat, 3 Sep 2011 00:21:42 +0100"  >&lt;p&gt;a patch on 3.3.3&lt;/p&gt;</comment>
                            <comment id="13096467" author="fournc" created="Sat, 3 Sep 2011 00:22:41 +0100"  >&lt;p&gt;If anyone wants to look this over before I check it in, the src tree changes are untouched but I had to modify QuorumPeerTestBase to get the test to run properly. Took some but not all of the changes to this class from trunk.&lt;/p&gt;</comment>
                            <comment id="13096469" author="hadoopqa" created="Sat, 3 Sep 2011 00:31:55 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12492846/ZOOKEEPER-1154.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12492846/ZOOKEEPER-1154.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1164758.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/493//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/493//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13096632" author="hudson" created="Sat, 3 Sep 2011 11:56:03 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1293 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1293/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1293/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1154&quot; title=&quot;Data inconsistency when the node(s) with the highest zxid is not present at the time of leader election&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1154&quot;&gt;&lt;del&gt;ZOOKEEPER-1154&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1156&quot; title=&quot;Log truncation truncating log too much - can cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1156&quot;&gt;&lt;del&gt;ZOOKEEPER-1156&lt;/del&gt;&lt;/a&gt;: &lt;br/&gt;
Data inconsistency when the node(s) with the highest zxid is not present at the time of leader election&lt;br/&gt;
Log truncation truncating log too much - can cause data loss&lt;/p&gt;

&lt;p&gt;Vishal Kathuria via camille&lt;/p&gt;

&lt;p&gt;camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1164758&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1164758&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12492846" name="ZOOKEEPER-1154.patch" size="15182" author="fournc" created="Sat, 3 Sep 2011 00:21:42 +0100"/>
                            <attachment id="12492776" name="ZOOKEEPER-1154.patch" size="12204" author="vishal.k" created="Fri, 2 Sep 2011 18:15:13 +0100"/>
                            <attachment id="12491350" name="ZOOKEEPER-1154.patch" size="11805" author="vishal.k" created="Tue, 23 Aug 2011 16:37:20 +0100"/>
                            <attachment id="12491016" name="ZOOKEEPER-1154.patch" size="13592" author="vishal.k" created="Sat, 20 Aug 2011 00:22:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 15 Aug 2011 18:00:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzt1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>