<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:51:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-63/ZOOKEEPER-63.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-63] Race condition in client close() operation</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-63</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;There is a race condition in the java close operation on ZooKeeper.java.&lt;/p&gt;

&lt;p&gt;Client is sending a disconnect request to the server. Server will close any open connections with the client when it receives this. If the client has not yet shutdown it&apos;s subthreads (event/send threads for example) these threads may consider the condition an error. We see this alot in the tests where the clients output error logs because they are unaware that a disconnection has been requested by the client.&lt;/p&gt;

&lt;p&gt;Ben mentioned: perhaps we just have to change state to closed (on client) before sending disconnect request.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12399322">ZOOKEEPER-63</key>
            <summary>Race condition in client close() operation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="phunt">Patrick Hunt</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jun 2008 23:08:36 +0100</created>
                <updated>Sun, 26 Oct 2008 01:10:40 +0000</updated>
                            <resolved>Thu, 28 Aug 2008 00:39:25 +0100</resolved>
                                    <version>3.0.0</version>
                                    <fixVersion>3.0.0</fixVersion>
                                    <component>java client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12616136" author="jstrachan" created="Wed, 23 Jul 2008 17:04:33 +0100"  >&lt;p&gt;I wonder if I&apos;ve seen this too - I can reliably get a hung test when trying to close a client (though the server is still up at the point if the hang).&lt;/p&gt;

&lt;p&gt;I&apos;m thinking the close() method should not wait() forever on the disconnect packet, just a closeTimeout length - say a few seconds. Afterall blocking and forcing a reconnect just to redeliver the disconnect packet seems a bit silly - when the server has to deal with clients which just have their sockets fail anyway &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12616151" author="jstrachan" created="Wed, 23 Jul 2008 17:35:53 +0100"  >&lt;p&gt;BTW here&apos;s the hang I seem to be able to get quite easily using the test case WriteLockTest in the &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78&quot; title=&quot;added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-78&quot;&gt;&lt;del&gt;ZOOKEEPER-78&lt;/del&gt;&lt;/a&gt; patch (you need to set workAroundClosingLastZNodeFails to false to make it hang)&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   [junit] &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=5 tid=0x01001710 nid=0xb0801000 in
&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0xb07ff000..0xb0800148]
   [junit]     at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
   [junit]     - waiting on &amp;lt;0x096105e0&amp;gt; (a
org.apache.zookeeper.ClientCnxn$Packet)
   [junit]     at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:474)
   [junit]     at
org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:822)
   [junit]     - locked &amp;lt;0x096105e0&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
   [junit]     at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:329)
   [junit]     - locked &amp;lt;0x0bd54108&amp;gt; (a org.apache.zookeeper.ZooKeeper)
   [junit]     at
org.apache.zookeeper.protocols.ZooKeeperFacade.close(ZooKeeperFacade.java:99)
   [junit]     at
org.apache.zookeeper.protocols.WriteLockTest.tearDown(WriteLockTest.java:146)
   [junit]     at junit.framework.TestCase.runBare(TestCase.java:140)
   [junit]     at junit.framework.TestResult$1.protect(TestResult.java:110)
   [junit]     at junit.framework.TestResult.runProtected(TestResult.java:128)
   [junit]     at junit.framework.TestResult.run(TestResult.java:113)
   [junit]     at junit.framework.TestCase.run(TestCase.java:124)
   [junit]     at junit.framework.TestSuite.runTest(TestSuite.java:232)
   [junit]     at junit.framework.TestSuite.run(TestSuite.java:227)
   [junit]     at
org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)
   [junit]     at
junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:36)
   [junit]     at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:421)
   [junit]     at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:912)
   [junit]     at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:766)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12616156" author="jstrachan" created="Wed, 23 Jul 2008 17:48:36 +0100"  >&lt;p&gt;about to attach a patch&lt;/p&gt;</comment>
                            <comment id="12616159" author="jstrachan" created="Wed, 23 Jul 2008 17:50:30 +0100"  >&lt;p&gt;This patch avoids the close() method blocking forever. It waits just once, up to the closeTimeout so if the socket is blocked or some other strangeness is going on, the calling thread will only wait up to the timeout (which defaults to 2 seconds).&lt;/p&gt;

&lt;p&gt;BTW this patch fixes the hang I was having in the test case to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78&quot; title=&quot;added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-78&quot;&gt;&lt;del&gt;ZOOKEEPER-78&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12616219" author="phunt" created="Wed, 23 Jul 2008 19:48:43 +0100"  >&lt;p&gt;Correct me if I&apos;m wrong but I don&apos;t believe this &quot;fixes&quot; anything, it merely ignores the problem. &lt;/p&gt;

&lt;p&gt;1) there is still the stated race condition&lt;br/&gt;
2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1&lt;/p&gt;

&lt;p&gt;3) if the timeout is reached a warning should be issued in the log&lt;/p&gt;

&lt;p&gt;My current vote is -1 &lt;/p&gt;</comment>
                            <comment id="12616426" author="jstrachan" created="Thu, 24 Jul 2008 11:00:51 +0100"  >&lt;p&gt;So this patch does not attempt to fix the race condition problem, apologies if I gave that impression &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;What it does do though is act as a workaround so that if a client is not able to properly send a disconnect packet to the server for &lt;b&gt;any reason at all&lt;/b&gt; such as&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;a hung socket (which can be quite common)&lt;/li&gt;
	&lt;li&gt;no servers available&lt;/li&gt;
	&lt;li&gt;a race condition in the ZK client code of some kind (which we definitely have now)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;to not hang the client application forever - as its trying to close and shut down anyway &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. So its a side benefit that it acts as a band aid until someone fixes all the possible race conditions and potential socket hangs.&lt;/p&gt;

&lt;p&gt;Let me put it another way. Given that the client is closing; is it really correct to leave it potentially hanging around forever just because it cannot be sure if the disconnect packet was received and properly processed by the server? If the socket is dead before the call to close(), is it really correct to block until a connection can be re-established, just so it can be properly closed - when the code will effectively close the hung socket without sending a disconnect packet anyway &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ? &lt;/p&gt;

&lt;p&gt;The server has to detect and timeout failed sessions; whether it receives an explicit disconnect packet or not (as a process could just hang). So do we really need to be super strict on the client side, forcing clients to block when trying to shut down if they can&apos;t do so cleanly within some time period?&lt;/p&gt;

&lt;p&gt;I totally agree that we should fix the race condition though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I just wanted a work around to avoid my ZK test cases hanging forever due to the race condition &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="12616643" author="phunt" created="Thu, 24 Jul 2008 21:34:23 +0100"  >&lt;p&gt;I agree with your comments, in addition the patch should address:&lt;/p&gt;

&lt;p&gt;1) there is still the stated race condition&lt;br/&gt;
2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1&lt;/p&gt;

&lt;p&gt;3) if the timeout is reached a warning should be issued in the log&lt;/p&gt;</comment>
                            <comment id="12619041" author="breed" created="Fri, 1 Aug 2008 16:23:17 +0100"  >&lt;p&gt;-1 The submitRequest logic should not be duplicated. (It will cause maintenance problems futher down the line.) The original submitRequest should be changed to call submitRequest(h, request, response, watchRegistration, 0)&lt;/p&gt;</comment>
                            <comment id="12619050" author="breed" created="Fri, 1 Aug 2008 16:42:54 +0100"  >&lt;p&gt;I&apos;ve fixed the patch to not duplicate the logic in submitRequest&lt;/p&gt;</comment>
                            <comment id="12619065" author="phunt" created="Fri, 1 Aug 2008 17:34:59 +0100"  >&lt;p&gt;-1 on the patch, still have the stated unresolved issues with this change:&lt;/p&gt;

&lt;p&gt;1) there is still the stated race condition&lt;br/&gt;
2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1&lt;/p&gt;

&lt;p&gt;3) if the timeout is reached a warning should be issued in the log&lt;/p&gt;

&lt;p&gt;I suspect we should split this patch out to it&apos;s own jira and make it blocked by this, perhaps that would make it more clear.&lt;/p&gt;</comment>
                            <comment id="12619117" author="breed" created="Fri, 1 Aug 2008 21:29:35 +0100"  >&lt;p&gt;You are correct. The patch itself is good, but it does not fix the stated issue.&lt;/p&gt;</comment>
                            <comment id="12620386" author="phunt" created="Wed, 6 Aug 2008 20:12:06 +0100"  >&lt;p&gt;SessionTest testReuse test is intermittently failing seeming due to this issue. &lt;/p&gt;</comment>
                            <comment id="12620396" author="phunt" created="Wed, 6 Aug 2008 20:26:57 +0100"  >&lt;p&gt;Assigning to myself - I&apos;ve cleaned up the tests as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-111&quot; title=&quot;significant cleanup of existing tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-111&quot;&gt;&lt;del&gt;ZOOKEEPER-111&lt;/del&gt;&lt;/a&gt; (this was blocking progress on this issue). I&apos;ll dig into this issue now.&lt;/p&gt;

&lt;p&gt;Looking at the code for zk close it seems to me that the issue is related to how the client send/event threads manage state. In particular these threads look &quot;out/up&quot; at the parent (zookeeper.state) rather than managing state internally and having operations for code  (zk client) to make changes to that state. &lt;/p&gt;

&lt;p&gt;There is a race condition in the close where sendthread thinks that the connection is still open (not closed) and retries the server connection rather than shutting down.&lt;/p&gt;

&lt;p&gt;I will probably have to have significant changes to how send/event threads are managed - they need to manage their own internal state and take updates from zookeeper client.... we&apos;ll see.&lt;/p&gt;</comment>
                            <comment id="12625228" author="stuhood" created="Sun, 24 Aug 2008 23:58:30 +0100"  >&lt;p&gt;I believe this bug will eventually cause a client to run out of file handles if they connect and disconnect often enough, so it is a pretty serious issue.&lt;/p&gt;

&lt;p&gt;The attached modification to the ClientTest testcase causes it to fail by running out of file handles, and we are seeing this behaviour in our application.&lt;/p&gt;</comment>
                            <comment id="12625561" author="phunt" created="Tue, 26 Aug 2008 01:13:23 +0100"  >&lt;p&gt;Stu, thanks for the test! I&apos;ll update ClientTest to include this, pretty ugly.&lt;/p&gt;

&lt;p&gt;Just wondering, why are you frequently connecting/disconnecting a client? Could you establish a connection and keep it open for a long(er) period of time? Session establishment by a particular client is an expense that needs to be paid by all servers in a quorum, so minimizing will generally improve your overall zk cluster performance.&lt;/p&gt;</comment>
                            <comment id="12625619" author="stuhood" created="Tue, 26 Aug 2008 05:15:11 +0100"  >&lt;p&gt;We had a non-daemon thread that needed to have its own ephemerals, so we let it create its own connection/session. During one of our unit tests, the thread gets created a few hundred times, and we noticed the issue. In the real world, the work the thread will be performing will take a few order of magnitude longer, but we still would rather not leak any file handles =)&lt;/p&gt;

&lt;p&gt;We&apos;ve modified our code to maintain a single connection for that thread: you&apos;re right about the session management. Thanks Patrick!&lt;/p&gt;</comment>
                            <comment id="12625877" author="phunt" created="Tue, 26 Aug 2008 22:29:20 +0100"  >&lt;p&gt;This patch:&lt;/p&gt;

&lt;p&gt;1) fixes the close race condition&lt;br/&gt;
2) fixes a resource issue where close operation was not causing the selector to be closed (leak)&lt;/p&gt;

&lt;p&gt;3) updated tests to look for resource leak testClientCleanup (thanks Stu)&lt;/p&gt;

&lt;p&gt;4) updated tests to better verify close operation successful&lt;/p&gt;

&lt;p&gt;The only real change is in ClientCnxn - setting a &quot;closing&quot; latch that keeps the send thread from re-establishing a broken connection &amp;#8211; but allows the client to continue communication with server (necessary to send the session disconnect message).&lt;/p&gt;</comment>
                            <comment id="12625880" author="phunt" created="Tue, 26 Aug 2008 22:32:19 +0100"  >&lt;p&gt;Stu, it turned out there were two problem here - the close race but also the client connection close was not closing the selector which was causing resources to leak. This patch fixes both.&lt;/p&gt;</comment>
                            <comment id="12625881" author="phunt" created="Tue, 26 Aug 2008 22:32:51 +0100"  >&lt;p&gt;Please review &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-63&quot; title=&quot;Race condition in client close() operation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-63&quot;&gt;&lt;del&gt;ZOOKEEPER-63&lt;/del&gt;&lt;/a&gt;.patch file and commit.&lt;/p&gt;</comment>
                            <comment id="12626359" author="breed" created="Thu, 28 Aug 2008 00:25:52 +0100"  >&lt;p&gt;+1 Great work Pat. I&apos;ll commit.&lt;/p&gt;</comment>
                            <comment id="12626367" author="breed" created="Thu, 28 Aug 2008 00:39:25 +0100"  >&lt;p&gt;Committed revision 689668.   &lt;/p&gt;</comment>
                            <comment id="12626541" author="hudson" created="Thu, 28 Aug 2008 13:32:04 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #67 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/67/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/67/&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12631021" author="stuhood" created="Mon, 15 Sep 2008 14:33:20 +0100"  >&lt;p&gt;Great work Patrick! Thanks a bunch for looking into it.&lt;/p&gt;</comment>
                            <comment id="12631506" author="phunt" created="Tue, 16 Sep 2008 19:58:23 +0100"  >&lt;p&gt;Thank you for taking the time to report the issue. Regards.&lt;/p&gt;</comment>
                            <comment id="12642695" author="phunt" created="Sun, 26 Oct 2008 01:10:40 +0000"  >&lt;p&gt;3.0.0 has been released, closing issues.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12403118">ZOOKEEPER-126</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12400845">ZOOKEEPER-86</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12388953" name="ZOOKEEPER-63.patch" size="42242" author="phunt" created="Tue, 26 Aug 2008 22:29:20 +0100"/>
                            <attachment id="12388823" name="client-test-fail.diff" size="2242" author="stuhood" created="Sun, 24 Aug 2008 23:58:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jul 2008 16:04:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48076</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzwgv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33244</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>