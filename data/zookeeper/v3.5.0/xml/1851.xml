<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:50:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1851/ZOOKEEPER-1851.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1851] Follower and Observer Request Processors Do Not Forward create2 Requests</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1851</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Recent changes to the Observer and Follower Request Processors switch on the request opcode, but create2 is left out. This leads to a condition where the create2 request is passed to the CommitProcessor, but the leader never gets the request, the CommitProcessor can&apos;t find a matching request, so the client gets disconnected.&lt;/p&gt;

&lt;p&gt;Added tests as well.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12686229">ZOOKEEPER-1851</key>
            <summary>Follower and Observer Request Processors Do Not Forward create2 Requests</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cchen">Chris Chen</assignee>
                                    <reporter username="cchen">Chris Chen</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Mon, 23 Dec 2013 23:23:17 +0000</created>
                <updated>Sat, 19 Jul 2014 12:24:16 +0100</updated>
                            <resolved>Fri, 18 Jul 2014 18:49:28 +0100</resolved>
                                    <version>3.5.0</version>
                                    <fixVersion>3.5.0</fixVersion>
                                    <component>quorum</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13856015" author="cchen" created="Mon, 23 Dec 2013 23:24:31 +0000"  >&lt;p&gt;diff --git a/src/java/main/org/apache/zookeeper/server/TraceFormatter.java b/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;br/&gt;
index 70a63d1..582383d 100644&lt;br/&gt;
&amp;#8212; a/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;br/&gt;
+++ b/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;br/&gt;
@@ -35,6 +35,8 @@ public class TraceFormatter {&lt;br/&gt;
             return &quot;notification&quot;;&lt;br/&gt;
         case OpCode.create:&lt;br/&gt;
             return &quot;create&quot;;&lt;br/&gt;
+        case OpCode.create2:&lt;br/&gt;
+            return &quot;create2&quot;;&lt;br/&gt;
         case OpCode.delete:&lt;br/&gt;
             return &quot;delete&quot;;&lt;br/&gt;
         case OpCode.exists:&lt;br/&gt;
diff --git a/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java b/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;br/&gt;
index f45e871..04cb772 100644&lt;br/&gt;
&amp;#8212; a/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;br/&gt;
+++ b/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;br/&gt;
@@ -129,6 +129,7 @@ public class CommitProcessor extends Thread implements RequestProcessor {&lt;br/&gt;
     protected boolean needCommit(Request request) {&lt;br/&gt;
         switch (request.type) {&lt;br/&gt;
             case OpCode.create:&lt;br/&gt;
+            case OpCode.create2:&lt;br/&gt;
             case OpCode.delete:&lt;br/&gt;
             case OpCode.setData:&lt;br/&gt;
             case OpCode.reconfig:&lt;br/&gt;
diff --git a/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java b/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;br/&gt;
index 79b2b05..23cbb2b 100644&lt;br/&gt;
&amp;#8212; a/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;br/&gt;
+++ b/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;br/&gt;
@@ -81,6 +81,7 @@ public class FollowerRequestProcessor extends Thread implements&lt;br/&gt;
                     zks.getFollower().request(request);&lt;br/&gt;
                     break;&lt;br/&gt;
                 case OpCode.create:&lt;br/&gt;
+                case OpCode.create2:&lt;br/&gt;
                 case OpCode.delete:&lt;br/&gt;
                 case OpCode.setData:&lt;br/&gt;
                 case OpCode.reconfig:&lt;br/&gt;
diff --git a/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java b/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;br/&gt;
index a9857ca..ce421af 100644&lt;br/&gt;
&amp;#8212; a/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;br/&gt;
+++ b/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;br/&gt;
@@ -90,6 +90,7 @@ public class ObserverRequestProcessor extends Thread implements&lt;br/&gt;
                     zks.getObserver().request(request);&lt;br/&gt;
                     break;&lt;br/&gt;
                 case OpCode.create:&lt;br/&gt;
+                case OpCode.create2:&lt;br/&gt;
                 case OpCode.delete:&lt;br/&gt;
                 case OpCode.setData:&lt;br/&gt;
                 case OpCode.reconfig:&lt;br/&gt;
diff --git a/src/java/test/org/apache/zookeeper/server/quorum/QuorumRequestPipelineTest.java b/src/java/test/org/apache/zookeeper/server/quorum/QuorumRequestPipelineTest.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..0106cc9&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/src/java/test/org/apache/zookeeper/server/quorum/QuorumRequestPipelineTest.java&lt;br/&gt;
@@ -0,0 +1,173 @@&lt;br/&gt;
+package org.apache.zookeeper.server.quorum;&lt;br/&gt;
+&lt;br/&gt;
+import java.util.Arrays;&lt;br/&gt;
+import java.util.Collection;&lt;br/&gt;
+import java.util.HashSet;&lt;br/&gt;
+import java.util.Set;&lt;br/&gt;
+import java.util.concurrent.CountDownLatch;&lt;br/&gt;
+import java.util.concurrent.TimeUnit;&lt;br/&gt;
+&lt;br/&gt;
+import org.junit.After;&lt;br/&gt;
+import org.junit.Assert;&lt;br/&gt;
+import org.junit.Before;&lt;br/&gt;
+import org.junit.Test;&lt;br/&gt;
+import org.junit.runner.RunWith;&lt;br/&gt;
+import org.junit.runners.Parameterized;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.zookeeper.AsyncCallback.VoidCallback;&lt;br/&gt;
+import org.apache.zookeeper.CreateMode;&lt;br/&gt;
+import org.apache.zookeeper.TestableZooKeeper;&lt;br/&gt;
+import org.apache.zookeeper.ZooDefs.Ids;&lt;br/&gt;
+import org.apache.zookeeper.data.Stat;&lt;br/&gt;
+import org.apache.zookeeper.server.quorum.QuorumPeer.ServerState;&lt;br/&gt;
+import org.apache.zookeeper.test.QuorumBase;&lt;br/&gt;
+&lt;br/&gt;
+@RunWith(Parameterized.class)&lt;br/&gt;
+public class QuorumRequestPipelineTest extends QuorumBase {&lt;br/&gt;
+  protected ServerState serverState;&lt;br/&gt;
+  protected final CountDownLatch callComplete = new CountDownLatch(1);&lt;br/&gt;
+  protected boolean complete = false;&lt;br/&gt;
+  protected final static String PARENT_PATH = &quot;/foo&quot;;&lt;br/&gt;
+  protected final static Set&amp;lt;String&amp;gt; CHILDREN = new HashSet(Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;));&lt;br/&gt;
+  protected final static String AUTH_PROVIDER = &quot;digest&quot;;&lt;br/&gt;
+  protected final static byte[] AUTH = &quot;hello&quot;.getBytes();&lt;br/&gt;
+  protected final static byte[] DATA = &quot;Hint Water&quot;.getBytes();&lt;br/&gt;
+&lt;br/&gt;
+  protected TestableZooKeeper zkClient;&lt;br/&gt;
+&lt;br/&gt;
+  @Parameterized.Parameters&lt;br/&gt;
+  public static Collection&amp;lt;Object[]&amp;gt; data() {&lt;br/&gt;
+    return Arrays.asList(&lt;br/&gt;
+        new Object[][] {&lt;br/&gt;
+            &lt;/p&gt;
{ServerState.LEADING}
&lt;p&gt;,&lt;br/&gt;
+            &lt;/p&gt;
{ServerState.FOLLOWING}
&lt;p&gt;,&lt;br/&gt;
+            {ServerState.OBSERVING}});&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  public QuorumRequestPipelineTest(ServerState state) &lt;/p&gt;
{
+    this.serverState = state;
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Before&lt;br/&gt;
+  public void setUp() throws Exception &lt;/p&gt;
{
+    CountdownWatcher clientWatch = new CountdownWatcher();
+    super.setUp(true);
+    zkClient = createClient(clientWatch, getPeersMatching(serverState));
+    zkClient.addAuthInfo(AUTH_PROVIDER, AUTH);
+    clientWatch.waitForConnected(CONNECTION_TIMEOUT);
+  }
&lt;p&gt;+&lt;br/&gt;
+  @After&lt;br/&gt;
+  public void tearDown() throws Exception &lt;/p&gt;
{
+    zkClient.close();
+    super.tearDown();
+  }
&lt;p&gt;+&lt;br/&gt;
+  private Stat create2EmptyNode(TestableZooKeeper zkClient, String path) throws Exception &lt;/p&gt;
{
+    Stat stat = new Stat();
+    zkClient.create(path, null, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, stat);
+    return stat;
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testCreate() throws Exception &lt;/p&gt;
{
+    zkClient.create(PARENT_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+    Assert.assertArrayEquals(
+        String.format(&quot;%s Node created (create) with expected value&quot;, serverState),
+        DATA,
+        zkClient.getData(PARENT_PATH, false, null));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testCreate2() throws Exception &lt;/p&gt;
{
+    zkClient.create(PARENT_PATH, DATA, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, null);
+    Assert.assertArrayEquals(
+        String.format(&quot;%s Node created (create2) with expected value&quot;, serverState),
+        DATA,
+        zkClient.getData(PARENT_PATH, false, null));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testDelete() throws Exception &lt;/p&gt;
{
+    create2EmptyNode(zkClient, PARENT_PATH);
+    zkClient.delete(PARENT_PATH, -1);
+    Assert.assertNull(
+        String.format(&quot;%s Node no longer exists&quot;, serverState),
+        zkClient.exists(PARENT_PATH, false));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testExists() throws Exception &lt;/p&gt;
{
+    Stat stat = create2EmptyNode(zkClient, PARENT_PATH);
+    Assert.assertEquals(
+        String.format(&quot;%s Exists returns correct node stat&quot;, serverState),
+        stat,
+        zkClient.exists(PARENT_PATH, false));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSetAndGetData() throws Exception &lt;/p&gt;
{
+    create2EmptyNode(zkClient, PARENT_PATH);
+    zkClient.setData(PARENT_PATH, DATA, -1);
+    Assert.assertArrayEquals(
+        String.format(&quot;%s Node updated with expected value&quot;, serverState),
+        DATA,
+        zkClient.getData(PARENT_PATH, false, null));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSetAndGetACL() throws Exception &lt;/p&gt;
{
+    create2EmptyNode(zkClient, PARENT_PATH);
+    Assert.assertEquals(
+        String.format(&quot;%s Node has open ACL&quot;, serverState),
+        Ids.OPEN_ACL_UNSAFE,
+        zkClient.getACL(PARENT_PATH, new Stat()));
+    zkClient.setACL(PARENT_PATH, Ids.READ_ACL_UNSAFE, -1);
+    Assert.assertEquals(
+        String.format(&quot;%s Node has world read-only ACL&quot;, serverState),
+        Ids.READ_ACL_UNSAFE,
+        zkClient.getACL(PARENT_PATH, new Stat()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSetAndGetChildren() throws Exception {&lt;br/&gt;
+    create2EmptyNode(zkClient, PARENT_PATH);&lt;br/&gt;
+    for (String child : CHILDREN) &lt;/p&gt;
{
+      create2EmptyNode(zkClient, PARENT_PATH + &quot;/&quot; + child);
+    }&lt;br/&gt;
+    Assert.assertEquals(&lt;br/&gt;
+        String.format(&quot;%s Parent has expected children&quot;, serverState),&lt;br/&gt;
+        CHILDREN,&lt;br/&gt;
+        new HashSet(zkClient.getChildren(PARENT_PATH, false)));&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSetAndGetChildren2() throws Exception {&lt;br/&gt;
+    create2EmptyNode(zkClient, PARENT_PATH);&lt;br/&gt;
+    for (String child : CHILDREN) {
+      create2EmptyNode(zkClient, PARENT_PATH + &quot;/&quot; + child);
+    }
&lt;p&gt;+    Assert.assertEquals(&lt;br/&gt;
+        String.format(&quot;%s Parent has expected children&quot;, serverState),&lt;br/&gt;
+        CHILDREN,&lt;br/&gt;
+        new HashSet(zkClient.getChildren(PARENT_PATH, false, null)));&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSync() throws Exception {&lt;br/&gt;
+    complete = false;&lt;br/&gt;
+    create2EmptyNode(zkClient, PARENT_PATH);&lt;br/&gt;
+    VoidCallback onSync = new VoidCallback() {&lt;br/&gt;
+      @Override&lt;br/&gt;
+      public void processResult(int rc, String path, Object ctx) &lt;/p&gt;
{
+        complete = true;
+        callComplete.countDown();
+      }
&lt;p&gt;+    };&lt;br/&gt;
+    zkClient.sync(PARENT_PATH, onSync, null);&lt;br/&gt;
+    callComplete.await(1, TimeUnit.SECONDS);&lt;br/&gt;
+    Assert.assertTrue(&lt;br/&gt;
+        String.format(&quot;%s Sync completed&quot;, serverState),&lt;br/&gt;
+        complete);&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/src/java/test/org/apache/zookeeper/test/QuorumBase.java b/src/java/test/org/apache/zookeeper/test/QuorumBase.java&lt;br/&gt;
index c846c45..e32844f 100644&lt;br/&gt;
&amp;#8212; a/src/java/test/org/apache/zookeeper/test/QuorumBase.java&lt;br/&gt;
+++ b/src/java/test/org/apache/zookeeper/test/QuorumBase.java&lt;br/&gt;
@@ -43,6 +43,8 @@ import org.junit.Test;&lt;br/&gt;
 public class QuorumBase extends ClientBase {&lt;br/&gt;
     private static final Logger LOG = LoggerFactory.getLogger(QuorumBase.class);&lt;/p&gt;

&lt;p&gt;+    private static final String LOCALADDR = &quot;127.0.0.1&quot;;&lt;br/&gt;
+&lt;br/&gt;
     File s1dir, s2dir, s3dir, s4dir, s5dir;&lt;br/&gt;
     QuorumPeer s1, s2, s3, s4, s5;&lt;br/&gt;
     protected int port1;&lt;br/&gt;
@@ -136,29 +138,29 @@ public class QuorumBase extends ClientBase {&lt;br/&gt;
         int syncLimit = 3;&lt;br/&gt;
         HashMap&amp;lt;Long,QuorumServer&amp;gt; peers = new HashMap&amp;lt;Long,QuorumServer&amp;gt;();&lt;br/&gt;
         peers.put(Long.valueOf(1), new QuorumServer(1, &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, port1 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portLE1 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portClient1),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, port1 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portLE1 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portClient1),&lt;br/&gt;
                 LearnerType.PARTICIPANT));&lt;br/&gt;
         peers.put(Long.valueOf(2), new QuorumServer(2, &lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, port2 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portLE2 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portClient2),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, port2 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portLE2 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portClient2),&lt;br/&gt;
                 LearnerType.PARTICIPANT));&lt;br/&gt;
         peers.put(Long.valueOf(3), new QuorumServer(3, &lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, port3 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portLE3 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portClient3),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, port3 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portLE3 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portClient3),&lt;br/&gt;
                 LearnerType.PARTICIPANT));&lt;br/&gt;
         peers.put(Long.valueOf(4), new QuorumServer(4, &lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, port4 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portLE4 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portClient4),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, port4 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portLE4 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portClient4),&lt;br/&gt;
                 LearnerType.PARTICIPANT));&lt;br/&gt;
         peers.put(Long.valueOf(5), new QuorumServer(5, &lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, port5 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portLE5 + 1000),&lt;/li&gt;
	&lt;li&gt;new InetSocketAddress(&quot;127.0.0.1&quot;, portClient5),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, port5 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portLE5 + 1000),&lt;br/&gt;
+                new InetSocketAddress(LOCALADDR, portClient5),&lt;br/&gt;
                 LearnerType.PARTICIPANT));&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         if (withObservers) {&lt;br/&gt;
@@ -262,6 +264,17 @@ public class QuorumBase extends ClientBase &lt;/p&gt;
{
       return -1;
     }

&lt;p&gt;+    public String getPeersMatching(ServerState state) {&lt;br/&gt;
+      StringBuilder hosts = new StringBuilder();&lt;br/&gt;
+      for (QuorumPeer p : getPeerList()) {&lt;br/&gt;
+        if (p.getPeerState() == state) &lt;/p&gt;
{
+          hosts.append(String.format(&quot;%s:%d,&quot;, LOCALADDR, p.getClientAddress().getPort()));
+        }
&lt;p&gt;+      }&lt;br/&gt;
+      LOG.info(&quot;getPeersMatching ports are {}&quot;, hosts);&lt;br/&gt;
+      return hosts.toString();&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
     public ArrayList&amp;lt;QuorumPeer&amp;gt; getPeerList() {&lt;br/&gt;
         ArrayList&amp;lt;QuorumPeer&amp;gt; peers = new ArrayList&amp;lt;QuorumPeer&amp;gt;();&lt;br/&gt;
         peers.add(s1);&lt;br/&gt;
@@ -290,29 +303,29 @@ public class QuorumBase extends ClientBase &lt;/p&gt;
{
             peers = new HashMap&amp;lt;Long,QuorumServer&amp;gt;();
 
             peers.put(Long.valueOf(1), new QuorumServer(1, 
-                new InetSocketAddress(&quot;127.0.0.1&quot;, port1 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portLE1 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portClient1),
+                new InetSocketAddress(LOCALADDR, port1 + 1000),
+                new InetSocketAddress(LOCALADDR, portLE1 + 1000),
+                new InetSocketAddress(LOCALADDR, portClient1),
                 LearnerType.PARTICIPANT));
             peers.put(Long.valueOf(2), new QuorumServer(2, 
-                new InetSocketAddress(&quot;127.0.0.1&quot;, port2 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portLE2 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portClient2),
+                new InetSocketAddress(LOCALADDR, port2 + 1000),
+                new InetSocketAddress(LOCALADDR, portLE2 + 1000),
+                new InetSocketAddress(LOCALADDR, portClient2),
                 LearnerType.PARTICIPANT));
             peers.put(Long.valueOf(3), new QuorumServer(3, 
-                new InetSocketAddress(&quot;127.0.0.1&quot;, port3 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portLE3 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portClient3),
+                new InetSocketAddress(LOCALADDR, port3 + 1000),
+                new InetSocketAddress(LOCALADDR, portLE3 + 1000),
+                new InetSocketAddress(LOCALADDR, portClient3),
                 LearnerType.PARTICIPANT));
             peers.put(Long.valueOf(4), new QuorumServer(4, 
-                new InetSocketAddress(&quot;127.0.0.1&quot;, port4 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portLE4 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portClient4),
+                new InetSocketAddress(LOCALADDR, port4 + 1000),
+                new InetSocketAddress(LOCALADDR, portLE4 + 1000),
+                new InetSocketAddress(LOCALADDR, portClient4),
                 LearnerType.PARTICIPANT));
             peers.put(Long.valueOf(5), new QuorumServer(5, 
-                new InetSocketAddress(&quot;127.0.0.1&quot;, port5 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portLE5 + 1000),
-                new InetSocketAddress(&quot;127.0.0.1&quot;, portClient5),
+                new InetSocketAddress(LOCALADDR, port5 + 1000),
+                new InetSocketAddress(LOCALADDR, portLE5 + 1000),
+                new InetSocketAddress(LOCALADDR, portClient5),
                 LearnerType.PARTICIPANT));
         }

&lt;p&gt;@@ -409,4 +422,9 @@ public class QuorumBase extends ClientBase &lt;/p&gt;
{
         CountdownWatcher watcher = new CountdownWatcher();
         return createClient(watcher, hp);
     }
&lt;p&gt;+&lt;br/&gt;
+    protected TestableZooKeeper createClient(CountdownWatcher watcher, ServerState state)&lt;br/&gt;
+        throws IOException, InterruptedException &lt;/p&gt;
{
+      return createClient(watcher, getPeersMatching(state));
+    }
&lt;p&gt; }&lt;/p&gt;</comment>
                            <comment id="13856019" author="hadoopqa" created="Mon, 23 Dec 2013 23:32:45 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12620284/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12620284/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1552946.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1861//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1861//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13856989" author="cchen" created="Thu, 26 Dec 2013 18:33:02 +0000"  >&lt;p&gt;Re-formatted. Apparently git diffs don&apos;t fly here.&lt;/p&gt;</comment>
                            <comment id="13857011" author="hadoopqa" created="Thu, 26 Dec 2013 19:15:54 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12620524/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12620524/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1552946.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1864//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13881641" author="thawan" created="Sat, 25 Jan 2014 03:43:00 +0000"  >&lt;p&gt;Thanks for the fix, this is my bad. I will take a look and commit it.  It is quite strange that none of the existing unit test catch this&lt;/p&gt;</comment>
                            <comment id="14043775" author="rgs" created="Wed, 25 Jun 2014 18:21:16 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan&quot; class=&quot;user-hover&quot; rel=&quot;thawan&quot;&gt;Thawan Kooburat&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim&quot; class=&quot;user-hover&quot; rel=&quot;michim&quot;&gt;Michi Mutsuzaki&lt;/a&gt;: ping?&lt;/p&gt;</comment>
                            <comment id="14043854" author="hadoopqa" created="Wed, 25 Jun 2014 19:13:36 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12620524/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12620524/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1605509.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2148//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14044455" author="rakeshr" created="Thu, 26 Jun 2014 09:22:48 +0100"  >&lt;p&gt;Hi Chris Chen,&lt;/p&gt;

&lt;p&gt;Nice test cases.&lt;/p&gt;

&lt;p&gt;Just few comments to improve  &apos;QuorumRequestPipelineTest.java&apos; test class.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Please add Apache License Header to it.&lt;/li&gt;
	&lt;li&gt;Indent should be four spaces per level, presently its with two spaces. Please refer &lt;a href=&quot;https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HowToContribute&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Please use bigger value (30secs ?) allComplete.await(1, TimeUnit.SECONDS); to make it more reliable. If the h/w is slow still give the test a chance to pass.&lt;/li&gt;
	&lt;li&gt;Suggestion, please modify the HashSet usage by making it generic type HashSet&amp;lt;String&amp;gt;&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14048179" author="cchen" created="Mon, 30 Jun 2014 22:21:14 +0100"  >&lt;p&gt;Updated tests, fixed formatting.&lt;/p&gt;</comment>
                            <comment id="14048229" author="hadoopqa" created="Mon, 30 Jun 2014 23:04:38 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12653240/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12653240/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1606841.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2166//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14048613" author="rakeshr" created="Tue, 1 Jul 2014 09:01:44 +0100"  >&lt;p&gt;Chris Chen Thanks for the update, now it looks better.&lt;/p&gt;

&lt;p&gt;For the Point-4, I was thinking to make HashSet generic. Following places we could use like,&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
 &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; CHILDREN = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(Arrays.asList(&lt;span class=&quot;code-quote&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;3&quot;&lt;/span&gt;));

 &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(zkClient.getChildren(PARENT_PATH, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;))

 &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(zkClient.getChildren(PARENT_PATH, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14049134" author="cchen" created="Tue, 1 Jul 2014 19:07:22 +0100"  >&lt;p&gt;Change HashSet creation.&lt;/p&gt;</comment>
                            <comment id="14049241" author="hadoopqa" created="Tue, 1 Jul 2014 20:49:23 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12653431/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12653431/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1606841.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2168//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14052010" author="cchen" created="Fri, 4 Jul 2014 00:45:21 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; anything else you need?&lt;/p&gt;</comment>
                            <comment id="14052089" author="rakeshr" created="Fri, 4 Jul 2014 03:03:53 +0100"  >&lt;p&gt;Thanks Chris Chen, +1 latest patch looks nice.&lt;/p&gt;</comment>
                            <comment id="14065157" author="rakeshr" created="Thu, 17 Jul 2014 18:17:26 +0100"  >&lt;p&gt;Hi All, I&apos;d like to get one more +1 to commit given the criticality of the bug. Anyone have a chance to see this. Thanks!&lt;/p&gt;</comment>
                            <comment id="14065223" author="rgs" created="Thu, 17 Jul 2014 18:50:38 +0100"  >&lt;p&gt;+1, patch lgtm plus we&apos;ve had it in prod internally for quite some time. Thanks for the review, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14065899" author="rakeshr" created="Fri, 18 Jul 2014 03:04:33 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; for the feedback.&lt;/p&gt;

&lt;p&gt;Attaching the patch again to get latest QA report. I&apos;ll commit if there is no findbug problems related to this patch.&lt;/p&gt;</comment>
                            <comment id="14065937" author="hadoopqa" created="Fri, 18 Jul 2014 03:48:25 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12656415/ZOOKEEPER-1851.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12656415/ZOOKEEPER-1851.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1611516.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 87 new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2197//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14066622" author="rakeshr" created="Fri, 18 Jul 2014 18:50:47 +0100"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cchen&quot; class=&quot;user-hover&quot; rel=&quot;cchen&quot;&gt;Chris Chen&lt;/a&gt; for the patch.&lt;/p&gt;

&lt;p&gt;Committed to trunk : &lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1611732&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1611732&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14067485" author="hudson" created="Sat, 19 Jul 2014 12:24:16 +0100"  >&lt;p&gt;SUCCESS: Integrated in ZooKeeper-trunk #2378 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/2378/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/2378/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1851&quot; title=&quot;Follower and Observer Request Processors Do Not Forward create2 Requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1851&quot;&gt;&lt;del&gt;ZOOKEEPER-1851&lt;/del&gt;&lt;/a&gt;. Follower and Observer Request Processors Do Not Forward create2 Requests (Chris Chen via rakeshr) (rakeshr: &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1611732&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1611732&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/TraceFormatter.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumRequestPipelineTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12531129">ZOOKEEPER-1297</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12517954">ZOOKEEPER-1147</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12656415" name="ZOOKEEPER-1851.patch" size="17205" author="rakeshr" created="Fri, 18 Jul 2014 03:04:33 +0100"/>
                            <attachment id="12653431" name="ZOOKEEPER-1851.patch" size="17205" author="cchen" created="Tue, 1 Jul 2014 19:07:22 +0100"/>
                            <attachment id="12653240" name="ZOOKEEPER-1851.patch" size="17181" author="cchen" created="Mon, 30 Jun 2014 22:21:14 +0100"/>
                            <attachment id="12620524" name="ZOOKEEPER-1851.patch" size="15897" author="cchen" created="Thu, 26 Dec 2013 18:33:02 +0000"/>
                            <attachment id="12620284" name="ZOOKEEPER-1851.patch" size="15943" author="cchen" created="Mon, 23 Dec 2013 23:26:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 23 Dec 2013 23:32:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>365202</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzkskn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>365507</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>