<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:44:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-510/ZOOKEEPER-510.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-510] zkpython lumps all exceptions as IOError, needs specialized exceptions for KeeperException types</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-510</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;The current zkpython bindings always throw &quot;IOError(&quot;text&quot;)&quot; exceptions, even for ZK specific exceptions such as NODEEXISTS. This makes it difficult (error prone) to handle exceptions in python code. You can&apos;t easily pickup a connection loss vs a node exists for example. Of course you could match the error string, but this seems like a bad idea imo.&lt;/p&gt;

&lt;p&gt;We need to add specific exception types to the python binding that map directly to KeeperException/java types. It would also be useful to include the information provided by the KeeperException (like path in some cases), etc... as part of the error thrown to the python code. Would probably be a good idea to stay as close to java api as possible wrt mapping the errors.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433511">ZOOKEEPER-510</key>
            <summary>zkpython lumps all exceptions as IOError, needs specialized exceptions for KeeperException types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="henryr">Henry Robinson</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 22:13:42 +0100</created>
                <updated>Fri, 26 Mar 2010 17:25:00 +0000</updated>
                            <resolved>Wed, 14 Oct 2009 01:14:27 +0100</resolved>
                                    <version>3.2.0</version>
                                    <fixVersion>3.2.2</fixVersion>
                    <fixVersion>3.3.0</fixVersion>
                                    <component>contrib-bindings</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12758811" author="henryr" created="Wed, 23 Sep 2009 19:12:55 +0100"  >&lt;p&gt;(Just got back from a long vacation, hence apologies for being slow to pick this up!)&lt;/p&gt;

&lt;p&gt;Yes, this is bad. zkpython needs to mirror the set of Java exceptions as closely as possible, and it shouldn&apos;t be hard to do. &lt;/p&gt;

&lt;p&gt;There are some special cases for when exceptions should be raised - checking for ret != ZOK doesn&apos;t always work. I&apos;m thinking of exists, which (in ZooKeeper) special cases NONODE and returns null instead of a KeeperException. This seems sensible to me - just wanted to explicitly acknowledge that I&apos;m using ZooKeeper.java as the reference for how a client API should behave since the API docs are vague on exactly when an exception is raised.&lt;/p&gt;
</comment>
                            <comment id="12758815" author="phunt" created="Wed, 23 Sep 2009 19:16:31 +0100"  >&lt;p&gt;sounds good. I didn&apos;t mean/intend that python had to mirror java exactly, just that the closer it is the easier for ppl to transition. Obv we&lt;br/&gt;
should &quot;pythonize&quot; so that we fit std idioms, etc....&lt;/p&gt;

&lt;p&gt;(glad to have you back! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="12761413" author="henryr" created="Fri, 2 Oct 2009 00:47:36 +0100"  >&lt;p&gt;This patch adds all the exceptions that the Java client has, and replaces all the IOErrors with zookeeper.ZooKeeperException or direct descendants.&lt;/p&gt;</comment>
                            <comment id="12761644" author="phunt" created="Fri, 2 Oct 2009 18:04:02 +0100"  >&lt;p&gt;this patch is the same as previous, except:&lt;/p&gt;

&lt;p&gt;1) fixes log output of test to goto trunk/build/contrib heirarchy&lt;/p&gt;

&lt;p&gt;2) adds a test for NodeExistsException&lt;/p&gt;

&lt;p&gt;Unfortunately this test fails.&lt;/p&gt;

&lt;p&gt;Henry, could you take a look? Am I doing something wrong here?&lt;/p&gt;</comment>
                            <comment id="12761729" author="phunt" created="Fri, 2 Oct 2009 22:18:09 +0100"  >&lt;p&gt;updated patch, same as before, except that you need to add the exception to the module (not just create it)&lt;/p&gt;

&lt;p&gt;now passes the test I added&lt;/p&gt;</comment>
                            <comment id="12761730" author="henryr" created="Fri, 2 Oct 2009 22:22:12 +0100"  >&lt;p&gt;Hah, I&apos;d just made the same patch. Good catch, thanks. Let me fix up some more tests and I&apos;ll upload patch for committing. &lt;/p&gt;</comment>
                            <comment id="12761736" author="phunt" created="Fri, 2 Oct 2009 22:44:18 +0100"  >&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; well what I did works, but plz double check that it&apos;s right. thanks.&lt;/p&gt;</comment>
                            <comment id="12762473" author="henryr" created="Tue, 6 Oct 2009 01:47:31 +0100"  >&lt;p&gt;This patch adds exceptions, and expands the test suite to cover some commonly thrown exception cases. &lt;/p&gt;

&lt;p&gt;At the same time, it also includes a patch for the segfault issue when reusing a closed handle (since getting the exceptions right here requires fixing that issue, and fixing that issue requires proper exception testing). &lt;/p&gt;

&lt;p&gt;There were a couple of other bugs discovered during this process which this patch hopefully also squashes. &lt;/p&gt;</comment>
                            <comment id="12762474" author="henryr" created="Tue, 6 Oct 2009 01:49:38 +0100"  >&lt;p&gt;I should mention that the segfault issue is already reported at &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-540&quot; title=&quot;zkpython needs better tracking of handle validity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-540&quot;&gt;&lt;del&gt;ZOOKEEPER-540&lt;/del&gt;&lt;/a&gt; - this patch should fix that issue and this one. &lt;/p&gt;</comment>
                            <comment id="12762804" author="hadoopqa" created="Tue, 6 Oct 2009 23:25:14 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12421360/ZOOKEEPER-510.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12421360/ZOOKEEPER-510.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 822065.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 25 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/19/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12763743" author="mahadev" created="Fri, 9 Oct 2009 00:03:48 +0100"  >&lt;p&gt;the patch looks good ...&lt;br/&gt;
henry, do we have a test case for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-540&quot; title=&quot;zkpython needs better tracking of handle validity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-540&quot;&gt;&lt;del&gt;ZOOKEEPER-540&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;
</comment>
                            <comment id="12763749" author="henryr" created="Fri, 9 Oct 2009 00:15:02 +0100"  >&lt;p&gt;Yes - see testconnection in connection_test.py&lt;/p&gt;

&lt;p&gt;Two cases: trying to close an already closed handle, and trying to issue commands on an already closed handle. Both should raise exceptions. &lt;/p&gt;</comment>
                            <comment id="12763754" author="mahadev" created="Fri, 9 Oct 2009 00:32:28 +0100"  >&lt;p&gt;great... missed it... my bad... &lt;/p&gt;</comment>
                            <comment id="12763768" author="mahadev" created="Fri, 9 Oct 2009 01:42:45 +0100"  >&lt;p&gt;I just committed this. thanks henry!&lt;/p&gt;</comment>
                            <comment id="12763833" author="phunt" created="Fri, 9 Oct 2009 05:38:18 +0100"  >&lt;p&gt;Unless I&apos;m missing something there&apos;s a problem with this patch, the following is incorrect according to the python manual:&lt;/p&gt;

&lt;p&gt;+#define ADD_EXCEPTION&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; x = PyErr_NewException(&quot;zookeeper.&quot;#x, ZooKeeperException, NULL); \&lt;br/&gt;
+  PyModule_AddObject(module, #x, x);&lt;/p&gt;

&lt;p&gt;specifically the ref is not being incremented.&lt;/p&gt;

&lt;p&gt;see this example in the following python man page:&lt;br/&gt;
&lt;a href=&quot;http://docs.python.org/extending/extending.html#intermezzo-errors-and-exceptions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.python.org/extending/extending.html#intermezzo-errors-and-exceptions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    SpamError = PyErr_NewException(&quot;spam.error&quot;, NULL, NULL);&lt;br/&gt;
    Py_INCREF(SpamError);&lt;br/&gt;
    PyModule_AddObject(m, &quot;error&quot;, SpamError);&lt;/p&gt;
</comment>
                            <comment id="12763835" author="phunt" created="Fri, 9 Oct 2009 05:40:04 +0100"  >&lt;p&gt;I suggest creating an additional patch on this jira to address. Is this testable? the script could clear the exception from the module (it would be gc&apos;d) then cause the code to raise the exception should cause seg fault?&lt;/p&gt;</comment>
                            <comment id="12763901" author="henryr" created="Fri, 9 Oct 2009 09:06:01 +0100"  >&lt;p&gt;Hm, I had interpreted the Python documentation differently, by analogy with PyModule_AddIntConstant. I also tested but couldn&apos;t force a GC error. This is what I just tried:&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; import zookeeper&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; import gc&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; gc.collect()&lt;br/&gt;
0&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; zookeeper.set(0,&quot;/&quot;,&quot;test&quot;)&lt;br/&gt;
Traceback (most recent call last):&lt;br/&gt;
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;&lt;br/&gt;
zookeeper.ZooKeeperException: zhandle out of range&lt;/p&gt;

&lt;p&gt;I also tried removing the reference from the module before doing the gc, via del zookeeper.ZooKeeperException. &lt;/p&gt;

&lt;p&gt;However, I think you&apos;re right, by looking at other usage examples. I think it&apos;s acceptable to take the examples in the Python manual as canonical, so I support reinstating that line. &lt;/p&gt;

&lt;p&gt;The patch is simple, but I&apos;m not sure how best to test it.  Perhaps forcing an exception pointer to NULL via a C module call, but then that would pollute the object&apos;s namespace. A test module that wasn&apos;t shipped, but built for testing? &lt;/p&gt;</comment>
                            <comment id="12764329" author="hudson" created="Sat, 10 Oct 2009 11:57:23 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #493 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/493/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/493/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="12764978" author="henryr" created="Tue, 13 Oct 2009 07:58:38 +0100"  >&lt;p&gt;Here&apos;s the patch for the incref issue. Try as I might, I haven&apos;t yet got a gc collection to dispose of the exception object and therefore trigger potential segfaults when the zookeeper module raises. So I haven&apos;t included any further tests. There are tests already that should exercise the paths prone to error if the behaviour of the gc does become more aggressive in future.&lt;/p&gt;

&lt;p&gt;Like I said previously, the reference that Patrick provides appears to be authoritative and explicitly describes this situation, so I think it&apos;s clearly correct to INCREF the exception objects.&lt;/p&gt;
</comment>
                            <comment id="12765321" author="hadoopqa" created="Wed, 14 Oct 2009 01:06:14 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12421957/ZOOKEEPER-510-incref.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12421957/ZOOKEEPER-510-incref.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 824971.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/23/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12765326" author="phunt" created="Wed, 14 Oct 2009 01:14:27 +0100"  >&lt;p&gt;+1 looks good. We are testing the usual cases and implemented per the python docs, afaict there&apos;s no way to verify this further (although we have tests that cover this in general)&lt;/p&gt;</comment>
                            <comment id="12765509" author="hudson" created="Wed, 14 Oct 2009 11:57:58 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #497 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/497/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/497/&lt;/a&gt;)&lt;br/&gt;
    . zkpython lumps all exceptions as IOError, needs specialized exceptions for KeeperException types (applying the incremental patch)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421957" name="ZOOKEEPER-510-incref.patch" size="772" author="henryr" created="Tue, 13 Oct 2009 07:58:38 +0100"/>
                            <attachment id="12421360" name="ZOOKEEPER-510.patch" size="30000" author="henryr" created="Tue, 6 Oct 2009 01:47:30 +0100"/>
                            <attachment id="12421155" name="ZOOKEEPER-510.patch" size="16592" author="phunt" created="Fri, 2 Oct 2009 22:18:09 +0100"/>
                            <attachment id="12421124" name="ZOOKEEPER-510.patch" size="16530" author="phunt" created="Fri, 2 Oct 2009 18:04:02 +0100"/>
                            <attachment id="12421085" name="ZOOKEEPER-510.patch" size="11861" author="henryr" created="Fri, 2 Oct 2009 00:47:36 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Sep 2009 18:12:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47760</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzv5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33031</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>