<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:49:42 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-59/ZOOKEEPER-59.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-59] Synchronized block in NIOServerCnxn</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-59</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;There are two synchronized blocks locking on different objects, and to me they should be guarded by the same object. Here are the parts of the code I&apos;m talking about:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NIOServerCnxn.readRequest@444
...
          synchronized (this) {
                outstandingRequests++;
                // check throttling
                if (zk.getInProcess() &amp;gt; factory.outstandingLimit) {
                    disableRecv();
                    // following lines should not be needed since we are already
                    // reading
                    // } else {
                    // enableRecv();
                }
            } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NIOServerCnxn.sendResponse@740
...
         synchronized (this.factory) {
                outstandingRequests--;
                // check throttling
                if (zk.getInProcess() &amp;lt; factory.outstandingLimit
                        || outstandingRequests &amp;lt; 1) {
                    sk.selector().wakeup();
                    enableRecv();
                }
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the second one is correct, and the first synchronized block should be guarded by &quot;this.factory&quot;. &lt;/p&gt;

&lt;p&gt;This could be related to issue &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-57&quot; title=&quot;Connection times out when idle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-57&quot;&gt;&lt;del&gt;ZOOKEEPER-57&lt;/del&gt;&lt;/a&gt;, but I have no concrete indication that this is the case so far.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12399265">ZOOKEEPER-59</key>
            <summary>Synchronized block in NIOServerCnxn</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fpj">Flavio Junqueira</assignee>
                                    <reporter username="fpj">Flavio Junqueira</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jun 2008 12:20:15 +0100</created>
                <updated>Fri, 26 Mar 2010 17:24:53 +0000</updated>
                            <resolved>Tue, 9 Mar 2010 02:01:14 +0000</resolved>
                                                    <fixVersion>3.3.0</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12609206" author="fpj" created="Mon, 30 Jun 2008 12:48:22 +0100"  >&lt;p&gt;The following block might also have the wrong guard:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NIOServerCnxn.doIO@379
synchronized (this) {
                    if (outgoingBuffers.size() == 0) {
                        if (!initialized
                                &amp;amp;&amp;amp; (sk.interestOps() &amp;amp; SelectionKey.OP_READ) == 0) {
                            throw new IOException(&quot;Responded to info probe&quot;);
                        }
                        sk.interestOps(sk.interestOps()
                                &amp;amp; (~SelectionKey.OP_WRITE));
                    } else {
                        sk.interestOps(sk.interestOps()
                                        | SelectionKey.OP_WRITE);
                    }
                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12609250" author="breed" created="Mon, 30 Jun 2008 16:06:50 +0100"  >&lt;p&gt;There are actually two things to guard here: the outstandingBuffers and the selector loop.&lt;/p&gt;

&lt;p&gt;In read request, we really just need:&lt;/p&gt;

&lt;p&gt;          synchronized (this) &lt;/p&gt;
{
                outstandingRequests++;
          }

&lt;p&gt;In sendResponse we need to synchronize on this for outstandingRequests and on factory for the selector:&lt;/p&gt;

&lt;p&gt;        synchronized (this) &lt;/p&gt;
{
                outstandingRequests--;
        }

&lt;p&gt;        synchronized (this.factory) {&lt;br/&gt;
                // check throttling&lt;br/&gt;
                if (zk.getInProcess() &amp;lt; factory.outstandingLimit&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; outstandingRequests &amp;lt; 1) 
{
                    sk.selector().wakeup();
                    enableRecv();
                }
&lt;p&gt;            }&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;I don&apos;t think the synchronize block is needed in doIO. The SectionKey methods are supposed to be thread safe.&lt;/p&gt;

&lt;p&gt;I think you might have found something! If the outstandingRequests count gets messed up, bad things will happen including the server becoming unresponsive to a client.&lt;/p&gt;</comment>
                            <comment id="12611503" author="fpj" created="Tue, 8 Jul 2008 11:00:50 +0100"  >&lt;p&gt;Addresses the concurrency problems discussed.&lt;/p&gt;</comment>
                            <comment id="12611527" author="fpj" created="Tue, 8 Jul 2008 12:19:23 +0100"  >&lt;p&gt;It turns out that outstandingRequests is not the variable controlling the throttling, but ZooKeeperServer.requestsInProcess. It seems to me that we should do the increment before calling the first request processor in the following code block:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;          if (validpacket) {
                firstProcessor.processRequest(si);
                if (cnxn != null) {
                    incInProcess();
                }
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is in ZooKeeperServer@870. &lt;/p&gt;</comment>
                            <comment id="12611723" author="mahadev" created="Tue, 8 Jul 2008 19:01:38 +0100"  >&lt;p&gt;the patch wasnt filed from trunk... just attaching a patch that is svn diffed from the trunk &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="12611728" author="mahadev" created="Tue, 8 Jul 2008 19:12:27 +0100"  >&lt;p&gt;since outstandingrequests does nto control the enable and disable receive then this is just a patch to fix the counters right? This cannot be responsible for connection loss right?&lt;/p&gt;

&lt;p&gt;also &amp;#8211; just to understand the patch &amp;#8212; &lt;/p&gt;

&lt;p&gt;it makes three changes &amp;#8212; &lt;/p&gt;

&lt;p&gt;1) remove synchronized block around disable recv &lt;br/&gt;
2) consistent guard arnd incr/decr outstandingrequests&lt;br/&gt;
3) removed synchronization around sk ops in doIO() &lt;/p&gt;


&lt;p&gt;is that right?&lt;/p&gt;</comment>
                            <comment id="12611754" author="akornev" created="Tue, 8 Jul 2008 20:11:53 +0100"  >&lt;p&gt;I agree with Flavio&apos;s comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-59?focusedCommentId=12611527#action_12611527&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-59?focusedCommentId=12611527#action_12611527&lt;/a&gt; : incInProcess() should be called prior to calling first request processor. &lt;/p&gt;

&lt;p&gt;Also, getInProcess() should be a synchronized method. Even better solution would be to make requestsInProcess an atomic integer: there is really no need to synchronize on the ZooKeeper instance to update/access the variable.&lt;/p&gt;

&lt;p&gt;Having said that, I don&apos;t think this will fix the the timeout problem. From what I saw in the server logs during my investigation of a similar incident was that the server was still receiving and processing client requests (in other words, the counters we&apos;re trying to fix here didn&apos;t cause throttling). The problem was that the responses weren&apos;t being sent to the client which was causing the client to timeout.&lt;/p&gt;</comment>
                            <comment id="12611796" author="fpj" created="Tue, 8 Jul 2008 22:02:09 +0100"  >&lt;p&gt;Mahadev, Thanks for fixing the patch. My eclipse still hasn&apos;t leaned how to generate diffs appropriately. Your assessment of the patch is right, and the observation on &quot;outstandingRequests&quot; seems correct to me.&lt;/p&gt;

&lt;p&gt;Andrew, I agree with you on getInProcess(). It is probably best to make it synchronized or simply to use an atomic integer for requestsInProcess. Now, on your description of the connection problem, I think this is an important observation because when I observed the problem, the log messages did not show the server receiving anything. Also, if the server receives and we don&apos;t disable sending, then either ping requests are not going through the pipeline of request processors (once it gets to FinalRequestProcessor, the server sends a response immediately) or sendResponse is not doing its job.&lt;/p&gt;
</comment>
                            <comment id="12616691" author="phunt" created="Thu, 24 Jul 2008 23:34:37 +0100"  >&lt;p&gt;Looks like patch _2 replaces _1? Canceling the patch for now. Please resubmit after addressing.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute&lt;/a&gt;, remember that we are replacing (re-attaching with the same name) the patch.&lt;/p&gt;</comment>
                            <comment id="12616981" author="fpj" created="Fri, 25 Jul 2008 19:06:13 +0100"  >&lt;p&gt;Deleting old patches, and adding a new one that addresses all discussed points.&lt;/p&gt;</comment>
                            <comment id="12616982" author="fpj" created="Fri, 25 Jul 2008 19:06:56 +0100"  >&lt;p&gt;Have done what Pat requested... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12618561" author="phunt" created="Thu, 31 Jul 2008 00:52:56 +0100"  >&lt;p&gt;Cancelling this patch due to test failure - the vm itself is crashing. Flavio, do the tests pass for you with this patch applied?&lt;/p&gt;

&lt;p&gt;I&apos;m seeing the following after applying this patch - the mainline/HEAD code is testing fine. This is ubuntu with java 1.6.0_06.&lt;/p&gt;

&lt;p&gt;junit.run:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.server.DeserializationPerfTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 8, Failures: 0, Errors: 0, Time elapsed: 15.073 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.server.SerializationPerfTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 8, Failures: 0, Errors: 0, Time elapsed: 12.307 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.server.ZooKeeperServerTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 3, Failures: 0, Errors: 0, Time elapsed: 0.141 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.AsyncTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 2, Failures: 2, Errors: 0, Time elapsed: 108.481 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.AsyncTest FAILED&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.ClientTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.ClientTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.ClientTest FAILED (crashed)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.DataTreeTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.15 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.OOMTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.022 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.QuorumTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 5, Failures: 5, Errors: 0, Time elapsed: 201.057 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.QuorumTest FAILED&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.RecoveryTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.RecoveryTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.RecoveryTest FAILED (crashed)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.SessionTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.SessionTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.SessionTest FAILED (crashed)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.WatcherFuncTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.WatcherFuncTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Test org.apache.zookeeper.test.WatcherFuncTest FAILED (crashed)&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;br/&gt;
/home/phunt/dev/Workspaces/gitzk/build.xml:370: Tests failed!&lt;/p&gt;</comment>
                            <comment id="12618858" author="fpj" created="Thu, 31 Jul 2008 22:16:24 +0100"  >&lt;p&gt;New patch, AtomicInteger problem fixed. It now passes all tests, but AsyncTest. AsyncTest is failing even on trunk in my computer, though.&lt;/p&gt;</comment>
                            <comment id="12681129" author="phunt" created="Thu, 12 Mar 2009 01:17:14 +0000"  >&lt;p&gt;Whatever happened with this patch? Seems to have gotten dropped. re-investigate for 3.2&lt;/p&gt;</comment>
                            <comment id="12763567" author="phunt" created="Thu, 8 Oct 2009 18:11:32 +0100"  >&lt;p&gt;Hi Flavio, what&apos;s the status of this patch?&lt;/p&gt;</comment>
                            <comment id="12800933" author="mahadev" created="Fri, 15 Jan 2010 21:59:49 +0000"  >&lt;p&gt;flavio, will you be updating this patch?&lt;/p&gt;</comment>
                            <comment id="12840381" author="fpj" created="Tue, 2 Mar 2010 23:25:13 +0000"  >&lt;p&gt;I have updated the patch in the following way:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I have changed synchronization blocks to reflect the discussion of this issue. In the trunk code, there is at least one instance increment outstandingRequests that is not synchronized with &quot;this&quot;. I have also tried to make sure that all necessary blocks of code that update the SelectionKey are synchronized with factory.&lt;/li&gt;
	&lt;li&gt;I have not included the change of ZooKeeperServer that corresponds to making requestsInProcess an AtomicInteger. This is really a minor change, and not strictly necessary.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ben made this comment that the methods of SelectionKey are thread-safe. However, I believe the synchronization blocks are there to make the block of code atomic, and not because of the individual calls. As mentioned above, I have tried to make sure that all blocks are properly synchronized. I&apos;m not exactly sure, though, why some of the blocks related to SelectionKey operations are synchronized. I have the impression that they have been introduced conservatively, but I would appreciate if someone with an opinion could shed some light here.&lt;/p&gt;</comment>
                            <comment id="12840464" author="hadoopqa" created="Wed, 3 Mar 2010 05:05:00 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 915956.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12840565" author="fpj" created="Wed, 3 Mar 2010 10:23:51 +0000"  >&lt;p&gt;This patch fixes some synchronization blocks on NIOServerCnxn, and I believe it doesn&apos;t require a test, since it is not coming from the observation of bug during a run. I also think that reproducing an interleaving that can generate a problem would be extremely difficult, so my I suggest we don&apos;t have a test for it.&lt;/p&gt;

&lt;p&gt;Regarding the core test that failed, it is unrelated to this issue, and I have opened a separate jira for it &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-684&quot; title=&quot;Race in LENonTerminateTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-684&quot;&gt;&lt;del&gt;ZOOKEEPER-684&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12840566" author="fpj" created="Wed, 3 Mar 2010 10:24:14 +0000"  >&lt;p&gt;Retrying Hudson.&lt;/p&gt;</comment>
                            <comment id="12840735" author="breed" created="Wed, 3 Mar 2010 17:09:37 +0000"  >&lt;p&gt;i like how you removed the nested locking, but it looks like you missed an opportunity in the last block. don&apos;t you really want to &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;synchronized(this) {outstandingRequests--;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so that you aren&apos;t locking this and this.factory?&lt;/p&gt;</comment>
                            <comment id="12840800" author="fpj" created="Wed, 3 Mar 2010 18:59:18 +0000"  >&lt;p&gt;Good point, Ben. I haven&apos;t done it because of the predicate:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;outstandingRequests &amp;lt; 1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in that block.&lt;/p&gt;</comment>
                            <comment id="12842186" author="hadoopqa" created="Sat, 6 Mar 2010 05:07:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 919640.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12842248" author="fpj" created="Sat, 6 Mar 2010 11:59:30 +0000"  >&lt;p&gt;As I already mentioned above, I don&apos;t think it requires a test. Ben, could you please check my previous post to see if you agree?&lt;/p&gt;</comment>
                            <comment id="12842281" author="breed" created="Sat, 6 Mar 2010 17:04:02 +0000"  >&lt;p&gt;ah yes, i see what you mean, but i think i would prefer a outstandingRequests that might be stale to a possible deadlock.&lt;/p&gt;

&lt;p&gt;i agree that this doesn&apos;t need a test. this is a latent bug that is hard to be reproduced and a test would be very specific to the implementation of the bug.&lt;/p&gt;</comment>
                            <comment id="12842397" author="fpj" created="Sun, 7 Mar 2010 10:43:58 +0000"  >&lt;p&gt;Updating patch according to Ben&apos;s comment.&lt;/p&gt;</comment>
                            <comment id="12842403" author="hadoopqa" created="Sun, 7 Mar 2010 11:08:17 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12438130/ZOOKEEPER-59.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12438130/ZOOKEEPER-59.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 919706.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12842850" author="breed" created="Mon, 8 Mar 2010 23:51:09 +0000"  >&lt;p&gt;+1 looks good&lt;/p&gt;</comment>
                            <comment id="12842877" author="mahadev" created="Tue, 9 Mar 2010 02:01:14 +0000"  >&lt;p&gt;I just committed this. thanks flavio.&lt;/p&gt;</comment>
                            <comment id="12845184" author="tlipcon" created="Mon, 15 Mar 2010 05:04:51 +0000"  >&lt;p&gt;Running jcarder on ZK 3.2.2 uncovers the deadlock in this picture. Is this patch likely to fix this problem for future versions, or is it something different?&lt;/p&gt;</comment>
                            <comment id="12845343" author="fpj" created="Mon, 15 Mar 2010 15:03:46 +0000"  >&lt;p&gt;Great catch, Todd! The issue you&apos;re pointing out seems fixed to me in trunk (future 3.3.0 release). I was comparing 3.2.2 code and trunk, and in readLength, when processing four letter words, we are now only cloning cnxns inside the synchronized block that locks cnxns, so we don&apos;t have a nested synchronized block for factory. I think it would be cool to check it again on our trunk code, though.   &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12438130" name="ZOOKEEPER-59.patch" size="3605" author="fpj" created="Sun, 7 Mar 2010 10:44:27 +0000"/>
                            <attachment id="12437656" name="ZOOKEEPER-59.patch" size="3954" author="fpj" created="Tue, 2 Mar 2010 23:25:13 +0000"/>
                            <attachment id="12387315" name="ZOOKEEPER-59.patch" size="5216" author="fpj" created="Thu, 31 Jul 2008 22:17:56 +0100"/>
                            <attachment id="12438785" name="zk-deadlock.png" size="24678" author="tlipcon" created="Mon, 15 Mar 2010 05:04:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 30 Jun 2008 15:06:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48080</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzwh3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33245</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>not a blocker for 3.2, moving to 3.3</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>