<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:44:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1437/ZOOKEEPER-1437.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1437] Client uses session before SASL authentication complete</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1437</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Found issue in the context of hbase region server startup, but can be reproduced w/ zkCli alone.&lt;/p&gt;

&lt;p&gt;getData may occur prior to SaslAuthenticated and fail with NoAuth. This is not expected behavior when the client is configured to use SASL.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12548598">ZOOKEEPER-1437</key>
            <summary>Client uses session before SASL authentication complete</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ekoontz">Eugene Koontz</assignee>
                                    <reporter username="thw">Thomas Weise</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Mar 2012 03:09:53 +0100</created>
                <updated>Wed, 25 Sep 2013 10:54:38 +0100</updated>
                            <resolved>Sun, 9 Sep 2012 19:24:53 +0100</resolved>
                                    <version>3.4.3</version>
                                    <fixVersion>3.4.4</fixVersion>
                    <fixVersion>3.5.0</fixVersion>
                                    <component>java client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="13240922" author="thw" created="Thu, 29 Mar 2012 03:11:43 +0100"  >&lt;p&gt;PASSES: Interactive getData on ACL protected node:&lt;/p&gt;

&lt;p&gt;./zkCli.sh -server gsbl90247&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;zk: gsbl90247(CONNECTED) 1&amp;#93;&lt;/span&gt; ls /hbase&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;splitlog, unassigned, root-region-server, rs, draining, table, master, tokenauth, shutdown, hbaseid&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;zk: gsbl90247(CONNECTED) 2&amp;#93;&lt;/span&gt; getAcl /hbase&lt;br/&gt;
&apos;sasl,&apos;hbase&lt;br/&gt;
: cdrwa&lt;/p&gt;

&lt;p&gt;This works because by the time the ls /hbase is executed, SASL authentication is complete (WatchedEvent state:SaslAuthenticated)&lt;/p&gt;


&lt;p&gt;FAILS: When running the command immediately:&lt;/p&gt;

&lt;p&gt;./zkCli.sh -server gsbl90247 -e &quot;ls /hbase&quot;  &lt;/p&gt;

&lt;p&gt;WATCHER::&lt;/p&gt;

&lt;p&gt;WatchedEvent state:SyncConnected type:None path:null&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth for /hbase&lt;br/&gt;
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:113)&lt;br/&gt;
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1448)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1476)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:717)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:593)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:354)&lt;br/&gt;
        at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:282)&lt;/p&gt;

&lt;p&gt;WATCHER::&lt;/p&gt;

&lt;p&gt;WatchedEvent state:SaslAuthenticated type:None path:null&lt;/p&gt;


&lt;p&gt;getData occurs prior to SaslAuthenticated. &lt;/p&gt;</comment>
                            <comment id="13241514" author="ekoontz" created="Thu, 29 Mar 2012 20:00:37 +0100"  >&lt;p&gt;Hi Thomas,&lt;/p&gt;

&lt;p&gt;Thanks for diagnosing this. This problem is occuring because the client&apos;s &apos;Main&apos; thread (Main of zkCli.sh) is trying to access resources (e.g. with getData) before the sendThread has finished SASL authentication with the Zookeeper server. Thus the fix is to have the client&apos;s Main thread wait in submitRequest() for a notification from the SendThread that authentication has completed.&lt;/p&gt;

&lt;p&gt;I am working on a patch now.&lt;/p&gt;</comment>
                            <comment id="13241915" author="ekoontz" created="Fri, 30 Mar 2012 00:21:18 +0100"  >
&lt;p&gt;This patch adds an authSync object to ClientCnxn. If client is configured for SASL authentication, client&apos;s main thread will wait() on authSync. SendThread will authSync() when SASL negotiation with Zookeeper server is complete (whether successfully or not).&lt;/p&gt;

&lt;p&gt;I removed the sleep()s from SaslAuthTest and other Sasl tests which were hiding this issue : now the clients immediately attempt to create zk nodes, as with to Thomas&apos;s test case of running zkCli with an immediate get.&lt;/p&gt;

&lt;p&gt;However, because of removing the sleep()s that hid the issue, the test SaslAuthMissingClientConfigTest hangs. This is because the zooKeeperSaslClient is null because SASL configuration is intentionally bad and the SASL setup has therefore failed. This failure mode needs to be distinguished from the case where zooKeeperSaslClient is null because it hasn&apos;t been constructed yet. This remains to be done, so not marking this issue as &quot;Patch Available&quot; yet.&lt;/p&gt;</comment>
                            <comment id="13242587" author="ekoontz" created="Fri, 30 Mar 2012 18:43:07 +0100"  >&lt;p&gt;Passes test-core-java.&lt;/p&gt;</comment>
                            <comment id="13242596" author="thw" created="Fri, 30 Mar 2012 18:50:22 +0100"  >&lt;p&gt;Hi Eugene,&lt;/p&gt;

&lt;p&gt;Thanks for looking into it, I will test the patch later today. Can we get this fixed for 3.4.x?&lt;/p&gt;</comment>
                            <comment id="13242619" author="hadoopqa" created="Fri, 30 Mar 2012 19:18:49 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12520635/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12520635/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1307191.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 19 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1022//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13242748" author="ekoontz" created="Fri, 30 Mar 2012 22:11:02 +0100"  >&lt;p&gt;Fixes the two Findbugs warnings reported by last patch.&lt;/p&gt;</comment>
                            <comment id="13242778" author="hadoopqa" created="Fri, 30 Mar 2012 22:38:53 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12520671/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12520671/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1307191.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 19 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1023//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13242784" author="thw" created="Fri, 30 Mar 2012 22:42:58 +0100"  >&lt;p&gt;With the patch HBase region server will hang (similar problem in HBase shell, updated only the zookeeper client, no change to server):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver60020&quot;&lt;/span&gt; prio=10 tid=0x0846ac00 nid=0x6032 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0xaf2ad000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
        - waiting on &amp;lt;0xdf5c1e30&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:485)
        at org.apache.zookeeper.ClientCnxn.waitForAuthenticationIfNecessary(ClientCnxn.java:1344)
        - locked &amp;lt;0xdf5c1e30&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1355)
        at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1031)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:154)
        at org.apache.hadoop.hbase.zookeeper.ZKUtil.watchAndCheckExists(ZKUtil.java:226)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.start(ZooKeeperNodeTracker.java:76)
        - locked &amp;lt;0xdf5c38e8&amp;gt; (a org.apache.hadoop.hbase.MasterAddressTracker)
        at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.setupZookeeperTrackers(HConnectionManager.java:580)
        - locked &amp;lt;0xdf5b8120&amp;gt; (a org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation)
        at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.&amp;lt;init&amp;gt;(HConnectionManager.java:569)
        at org.apache.hadoop.hbase.client.HConnectionManager.getConnection(HConnectionManager.java:186)
        - locked &amp;lt;0xe064fa10&amp;gt; (a org.apache.hadoop.hbase.client.HConnectionManager$1)
        at org.apache.hadoop.hbase.catalog.CatalogTracker.&amp;lt;init&amp;gt;(CatalogTracker.java:178)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.initializeZooKeeper(HRegionServer.java:565)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.preRegistrationInitialization(HRegionServer.java:524)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:625)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:619)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13242852" author="thw" created="Sat, 31 Mar 2012 00:40:37 +0100"  >&lt;p&gt;I see this consistently happening in the hbase client also:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=10 tid=0x08061000 nid=0x5af6 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0xf741c000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
        - waiting on &amp;lt;0xf2674320&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:485)
        at org.apache.zookeeper.ClientCnxn.waitForAuthenticationIfNecessary(ClientCnxn.java:1344)
        - locked &amp;lt;0xf2674320&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1355)
        at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:1031)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:154)
        at org.apache.hadoop.hbase.zookeeper.ZKUtil.watchAndCheckExists(ZKUtil.java:226)
        at org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.start(ZooKeeperNodeTracker.java:76)
        - locked &amp;lt;0xf2675948&amp;gt; (a org.apache.hadoop.hbase.zookeeper.RootRegionTracker)
        at org.apache.hadoop.hbase.catalog.CatalogTracker.start(CatalogTracker.java:233)
        at org.apache.hadoop.hbase.client.HBaseAdmin.getCatalogTracker(HBaseAdmin.java:143)
        - locked &amp;lt;0xf3f76370&amp;gt; (a org.apache.hadoop.hbase.client.HBaseAdmin)
        at org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(HBaseAdmin.java:200)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Authentication succeeds on the server but the client waits forever.&lt;/p&gt;</comment>
                            <comment id="13242879" author="ekoontz" created="Sat, 31 Mar 2012 01:15:13 +0100"  >&lt;p&gt;Fixes two bugs in the last patch:&lt;/p&gt;

&lt;p&gt;-authSync synchronization object was being created twice&lt;/p&gt;

&lt;p&gt;-authResultNotify() was not being called in one SASL failure mode&lt;/p&gt;</comment>
                            <comment id="13242881" author="ekoontz" created="Sat, 31 Mar 2012 01:16:35 +0100"  >&lt;p&gt;Thanks Thomas for your testing. Can you please try the latest patch and see if it the client doesn&apos;t hang anymore?&lt;br/&gt;
-Eugene&lt;/p&gt;</comment>
                            <comment id="13242904" author="hadoopqa" created="Sat, 31 Mar 2012 01:59:44 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12520699/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12520699/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1307644.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 19 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1024//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13242910" author="thw" created="Sat, 31 Mar 2012 02:02:30 +0100"  >&lt;p&gt;Thanks Eugene, the last patch did it! Login synchronization works (NoAuth failures in HBase are gone and no processes hanging). I have not done any negative testing though. Nice to see secure ZK working with HBase!&lt;/p&gt;

&lt;p&gt;I have applied the patch to 3.4.x and adding it as fix version.&lt;/p&gt;</comment>
                            <comment id="13261047" author="phunt" created="Tue, 24 Apr 2012 22:34:32 +0100"  >&lt;p&gt;Sorry to come in on this late, but I&apos;ve really been swamped.&lt;/p&gt;

&lt;p&gt;From what I can see this patch only fixes synchronous operations (those that call submitrequest) and not async (which call queuepacket directly).&lt;/p&gt;

&lt;p&gt;I&apos;m wondering why approach it this way rather than checking if we are in the auth phase in &quot;doIO&quot; and then only sending auth packets until the auth phase has been finalized. (leave any non-auth packets in the queue)&lt;/p&gt;

&lt;p&gt;Perhaps rather than queuing packets at all for sasl perhaps we should generate them dynamically based on the current sendThread state and the saslclient state?&lt;/p&gt;</comment>
                            <comment id="13269239" author="ekoontz" created="Sun, 6 May 2012 16:36:55 +0100"  >&lt;p&gt;Modify doIO() so that if SASL authentication is in process, defer sending of packets in the outgoingQueue that are subject to permissions-checking until SASL authentication is complete, per Patrick&apos;s recommendation.&lt;/p&gt;</comment>
                            <comment id="13269249" author="hadoopqa" created="Sun, 6 May 2012 17:19:15 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525779/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525779/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1334548.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1062//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13269280" author="ekoontz" created="Sun, 6 May 2012 22:09:24 +0100"  >&lt;p&gt;As with patches in March, modify tests to remove now-unnecessary sleeps, and set authInitFailed = true where needed.&lt;/p&gt;</comment>
                            <comment id="13269288" author="hadoopqa" created="Sun, 6 May 2012 22:34:10 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525786/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525786/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1334548.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1063//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13269375" author="ekoontz" created="Mon, 7 May 2012 06:29:58 +0100"  >&lt;p&gt;Fix test failure, add whitespace, remove irrelevant changes from trunk.&lt;/p&gt;</comment>
                            <comment id="13269388" author="hadoopqa" created="Mon, 7 May 2012 06:57:39 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525802/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525802/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1334548.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1064//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13269963" author="ekoontz" created="Mon, 7 May 2012 21:11:35 +0100"  >&lt;p&gt;-pass simply a boolean flag to doIO() and doTransport() rather than entire Cnxn.SendThread - will be faster too, since clientTunneledAuthenticationInProgress will only be called once per doTransport() call.&lt;br/&gt;
-move operationRequiresPermissions() to ZooDefs.java and make static&lt;br/&gt;
-wrap new LOG.debug() message inside a (LOG.isDebugEnabled()) conditional.&lt;/p&gt;</comment>
                            <comment id="13269985" author="hadoopqa" created="Mon, 7 May 2012 21:48:04 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525918/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525918/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1334548.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1065//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13271832" author="phunt" created="Wed, 9 May 2012 22:33:14 +0100"  >&lt;p&gt;I don&apos;t think we should have the &quot;requires auth&quot; check. We should guarantee order. That seems dangerous to me for a couple reasons. Was there a reason you added it?&lt;/p&gt;

&lt;p&gt;I&apos;d also suggest that you latch the &quot;in progress&quot; indicator so that you don&apos;t need to constantly call that method. ie three states &quot;sasl auth pending&quot; in which you still have to check, vs &quot;sasl auth completed&quot; /&quot;no sasl auth&quot; in which case you don&apos;t.&lt;/p&gt;

&lt;p&gt;One concern is that we&apos;ll hog the cpu in this case. what I mean is. if sasl is in progress, and we just return out of doio, the &quot;write interest&quot; is still set. So the OS select will wake up immediately to allow us to write, which we won&apos;t do (still waiting), etc.... Not sure how to address that (or if it&apos;s really a problem), need to look at it a bit more. What do you think though?&lt;/p&gt;</comment>
                            <comment id="13271839" author="phunt" created="Wed, 9 May 2012 22:35:46 +0100"  >&lt;p&gt;Granted doing what I suggested (remove the &quot;requires auth&quot; check) would require you to implement my suggestion above, specifically&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Perhaps rather than queuing packets at all for sasl perhaps we should generate them dynamically based on the current sendThread state and the saslclient state?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13273580" author="apurtell" created="Fri, 11 May 2012 21:25:03 +0100"  >&lt;p&gt;I won&apos;t intrude on the design discussion, sounds good.&lt;/p&gt;

&lt;p&gt;Just want to add a datapoint that with HBase 0.92.1 + Hadoop 1.0.2 + ZooKeeper 3.4.3 enough has changed timing wise from the time of the initial SASL auth contribution to make starting HBase RegionServers problematic. When I apply the latest patch on this issue, it&apos;s much better.&lt;/p&gt;</comment>
                            <comment id="13273592" author="phunt" created="Fri, 11 May 2012 21:39:36 +0100"  >&lt;p&gt;Thanks Andrew. When you say &quot;it&apos;s much better&quot; does that mean everything works, or works better? If the latter what&apos;s broken?&lt;/p&gt;</comment>
                            <comment id="13273625" author="apurtell" created="Fri, 11 May 2012 22:17:47 +0100"  >&lt;p&gt;The RegionServers start reliably. Simple test scenarios complete ok,&lt;br/&gt;
nothing seems broken, but I haven&apos;t stressed it.&lt;/p&gt;</comment>
                            <comment id="13276413" author="ekoontz" created="Wed, 16 May 2012 04:26:17 +0100"  >&lt;p&gt;Hi Patrick,&lt;/p&gt;

&lt;p&gt;I think I understand you but I want to make sure:&lt;/p&gt;

&lt;p&gt;Your idea is that ClientCnxn:queueSaslPacket() will use a java.util.concurrent.CountDownLatch to determine when SASL authentication is complete. The client&apos;s Main thread will await() on this latch. Meanwhile, the client&apos;s SendThread will be sending and receiving SASL packets until the ZooKeeperSaslClient has finished authenticating with the server. When SASL authentication is finished (successfully or not), the Send thread will countDown() the latch, and the Main thread will be able to continue, causing its packets to be enqueued on the outgoingQueue. &lt;/p&gt;

&lt;p&gt;NIOServerCnxn::doIO() will not need any changes - it will simply send and receive packets in the outgoingQueue&apos;s natural ordering, without regard to their type. But because of the latch in ClientCnxn:queueSaslPacket(), the packets will be ordered so that no permissions-requiring packets are sent before authentication completes.&lt;/p&gt;</comment>
                            <comment id="13276958" author="ekoontz" created="Wed, 16 May 2012 19:17:52 +0100"  >&lt;p&gt;Use a CountDownLatch within ClientCnxn to control access to outgoing packet queue: non-SASL packets must wait until SASL authentication has completed.&lt;/p&gt;</comment>
                            <comment id="13276988" author="ekoontz" created="Wed, 16 May 2012 19:33:55 +0100"  >&lt;p&gt;Excuse me, I meant &quot;ClientCnxn:queuePacket()&quot;, not &quot;ClientCnxn:queueSaslPacket()&quot; in my 20:26 comment above.&lt;/p&gt;</comment>
                            <comment id="13277016" author="hadoopqa" created="Wed, 16 May 2012 19:54:47 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12527672/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12527672/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1337029.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1076//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13278983" author="antoniomau" created="Fri, 18 May 2012 18:21:59 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;In a scenario where the zookeeper server gets killed and restarted while a java zookeeper client is connected  I get the following in the log: (Please note the Error at bottom)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
[main-SendThread(localhost:60728)] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - ClientCnxn:sendSaslPacket:length=0
[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:60728] DEBUG org.apache.zookeeper.server.ZooKeeperServer  - Responding to client SASL token.
[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:60728] DEBUG org.apache.zookeeper.server.ZooKeeperServer  - Size of client SASL token: 0
[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:60728] DEBUG org.apache.zookeeper.server.ZooKeeperServer  - Size of server SASL response: 101
[main-SendThread(localhost:60728)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply sessionid:0x1376082ca4f0000, packet:: clientPath:null serverPath:null finished:false header:: 9,102  replyHeader:: 9,0,0  request::   response:: #7265616c6d3d227a6b2d7361736c2d6d6435222c6e6f6e63653d22717a485932306a56743534552f483668315837734e2b4b56656e4c335772666458716f6468336247222c636861727365743d7574662d382c616c676f726974686d3d6d64352d73657373
2012-05-18 15:14:16,908 [SyncThread:0] DEBUG org.apache.zookeeper.server.FinalRequestProcessor  - Processing request:: sessionid:0x1376082ca4f0000 type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2012-05-18 15:14:16,908 [SyncThread:0] DEBUG org.apache.zookeeper.server.FinalRequestProcessor  - sessionid:0x1376082ca4f0000 type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a

[main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - ServerSaslResponseCallback(): using empty data[] as server response (length=0)
[main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - saslToken (server) length: 0
[main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - saslClient.evaluateChallenge(len=0)
[main-EventThread] ERROR org.apache.zookeeper.client.ZooKeeperSaslClient  - An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: DIGEST-MD5: Digest-challenge format violation: algorithm directive missing) occurred when evaluating Zookeeper Quorum Member&apos;s  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
[main-EventThread] ERROR org.apache.zookeeper.client.ZooKeeperSaslClient  - SASL authentication failed using login context &apos;null&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was wondering why the &quot;empty data[]&quot; is expected since it always drives in my case to a SASL authentication failed.&lt;/p&gt;


&lt;p&gt;I know this is not the correct set up but at moment only one Zk server is set up. Not sure if this is actually causing the issue.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Just for test&lt;/b&gt; I&apos;ve applied the last patch provided on this ticket with date 16/May/12 18:17&lt;br/&gt;
and then in ClientCnxn.java:565 I&apos;ve added a null check for rsp.getToken().. and I&apos;m not getting that issue anymore.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
Index: src\java\main\org\apache\zookeeper\ClientCnxn.java
===================================================================
--- src\java\main\org\apache\zookeeper\ClientCnxn.java	(revision 95556)
+++ src\java\main\org\apache\zookeeper\ClientCnxn.java	(working copy)
@@ -563,6 +563,7 @@
                       ZooKeeperSaslClient.ServerSaslResponseCallback cb = (ZooKeeperSaslClient.ServerSaslResponseCallback) p.cb;
                       SetSASLResponse rsp = (SetSASLResponse) p.response;
                       // TODO : check rc (== 0, etc) as with other packet types.
+                      if (null != rsp.getToken()){
                       cb.processResult(rc,null,p.ctx,rsp.getToken(),null);
                       ClientCnxn clientCnxn = (ClientCnxn)p.ctx;
                       if ((clientCnxn == null) || (clientCnxn.zooKeeperSaslClient == null) ||
@@ -571,6 +572,7 @@
                           queueEvent(new WatchedEvent(EventType.None,
                                   KeeperState.AuthFailed, null));
                       }
+                      }
                   } else if (p.response instanceof GetDataResponse) {
                       DataCallback cb = (DataCallback) p.cb;
                       GetDataResponse rsp = (GetDataResponse) p.response;

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13279070" author="ekoontz" created="Fri, 18 May 2012 19:40:03 +0100"  >&lt;p&gt;Antonio, interesting results - you are finding that sending an empty SASL response to the Zookeeper server causes an authentication failure? Can you show your JAAS configuration for client and server? I see that your paths have backslashes in them - you are running the client on Microsoft Windows I assume? (not that this should be necessarily be a problem).&lt;/p&gt;</comment>
                            <comment id="13279147" author="antoniomau" created="Fri, 18 May 2012 21:17:26 +0100"  >&lt;p&gt;Hi Eugene,&lt;/p&gt;

&lt;p&gt;It&apos;s actually happening only on a linux machine. For some reasons doesn&apos;t happen on windows. But I got the impression that it&apos;s related to how fast the process goes. Perhaps a race condition somewhere?&lt;/p&gt;

&lt;p&gt;(The path is in windows style because I&apos;ve generated the diff from an eclipse running on windows)&lt;/p&gt;


&lt;p&gt; The sasl setup is the one shown on &lt;a href=&quot;https://cwiki.apache.org/ZOOKEEPER/zookeeper-and-sasl.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/ZOOKEEPER/zookeeper-and-sasl.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
Server {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       user_super=&quot;adminsecret&quot; 
       user_bob=&quot;bobsecret&quot;;
};

Client {
       org.apache.zookeeper.server.auth.DigestLoginModule required
       username=&quot;bob&quot;
       password=&quot;bobsecret&quot;;
};
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The authentication usually works. this issue happens only if I kill the server and restart it again and not all the time.&lt;/p&gt;

&lt;p&gt;What about that &quot;empty data[] as server response&quot;? is it what for?&lt;/p&gt;


&lt;p&gt;Thanks&lt;br/&gt;
Antonio&lt;/p&gt;</comment>
                            <comment id="13279224" author="zhihyu@ebaysf.com" created="Fri, 18 May 2012 22:46:36 +0100"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+                } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
+                    &lt;span class=&quot;code-comment&quot;&gt;// ignore interruption and keep waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; latch.
&lt;/span&gt;+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the interrupt state be restored in the above catch block ?&lt;/p&gt;</comment>
                            <comment id="13279272" author="ekoontz" created="Fri, 18 May 2012 23:39:35 +0100"  >&lt;p&gt;Hi Antonio, &lt;/p&gt;

&lt;p&gt;I think the empty data[] is an artifact of my development process: in my testing, I found that if I use Kerberos as the SASL metchanism, the client&apos;s ZooKeeperSaslClient::ServerSaslResponseCallback::processResult() will be supplied with a null data[] array when this method (processResult()) is called for the final time. So I had to handle this situation somehow.&lt;/p&gt;

&lt;p&gt;One could handle the null server response in a different way, as long as you avoid accessing a null pointer, of course - you could check for the null pointer in other places, as your patch does. &lt;/p&gt;

&lt;p&gt;However I don&apos;t think this is related to the problem you are seeing; or at least, I&apos;m not able to reproduce your problem myself. I wonder if you could supply a shell script that could reproduce it? Perhaps a script that kills and starts the server repeatedly to cause the client to eventually fail to authenticate?&lt;/p&gt;

&lt;p&gt;-Eugene&lt;/p&gt;</comment>
                            <comment id="13279292" author="ekoontz" created="Sat, 19 May 2012 00:03:34 +0100"  >&lt;p&gt;Restore the interrupt state when catching InterruptedException while waiting for authentication latch (thanks to Zhihong Yu).&lt;/p&gt;</comment>
                            <comment id="13279345" author="hadoopqa" created="Sat, 19 May 2012 00:50:33 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12528189/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12528189/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1337029.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1081//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13279603" author="antoniomau" created="Sat, 19 May 2012 20:05:30 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ve tested with the latest patch (released on 18/May/12 23:03) but I get the same issue:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;
2012-05-19 18:49:44,067 [main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - ServerSaslResponseCallback(): using empty data[] as server response (length=0)
2012-05-19 18:49:44,067 [main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - saslToken (server) length: 0
2012-05-19 18:49:44,067 [main-EventThread] DEBUG org.apache.zookeeper.client.ZooKeeperSaslClient  - saslClient.evaluateChallenge(len=0)
2012-05-19 18:49:44,068 [main-EventThread] ERROR org.apache.zookeeper.client.ZooKeeperSaslClient  - An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: DIGEST-MD5: Digest-challenge format violation: algorithm directive missing) occurred when evaluating Zookeeper Quorum Member&apos;s  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
2012-05-19 18:49:44,068 [SyncThread:0] DEBUG org.apache.zookeeper.server.FinalRequestProcessor  - Processing request:: sessionid:0x137666e45f70000 type:sync: cxid:0xa zxid:0xfffffffffffffffe txntype:unknown reqpath:/
2012-05-19 18:49:44,068 [main-EventThread] ERROR org.apache.zookeeper.client.ZooKeeperSaslClient  - SASL authentication failed using login context &apos;null&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Eugene, I&apos;m using as java client Curator. I can provide a junit test to reproduce the issue if it&apos;s fine with you.&lt;/p&gt;

&lt;p&gt;The easiest way to reproduce it is with Curator and the provided TestingServer (curator-test.jar) but I got same using the curator client connected to a running zookeeper server.&lt;br/&gt;
That&apos;s should be the same since the TestingServer is actually running an actual zookeeper server.&lt;/p&gt;

&lt;p&gt;Let me know and thanks.&lt;br/&gt;
Antonio&lt;/p&gt;</comment>
                            <comment id="13279631" author="ekoontz" created="Sun, 20 May 2012 00:30:19 +0100"  >&lt;p&gt;Hi Antonio, &lt;br/&gt;
(my previous post seems to have failed with a 5xx error, apologies if this is a duplicate)&lt;/p&gt;

&lt;p&gt;I encourage you to provide a unit test, either with Curator or directly with just a Zookeeper client/server setup with a shell script. I git-cloned Curator but unfortunately I get some tests failures on trunk with &lt;tt&gt;./gradelw build&lt;/tt&gt;. Nothing against Curator: I would like to learn more about it, but I think it would be best to show the problem with purely Zookeeper code as much as possible.&lt;/p&gt;</comment>
                            <comment id="13279679" author="v.himanshu" created="Sun, 20 May 2012 07:36:40 +0100"  >&lt;p&gt;In case of cross realm authentication, I once got this exception:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-05-19 20:19:43,776 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server /XXX.XX.XX.XX:2181
2012-05-19 20:19:43,776 INFO org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: The identifier of th
is process is 3544@&amp;lt;HIDDEN&amp;gt;.com
2012-05-19 20:19:43,776 INFO org.apache.zookeeper.client.ZooKeeperSaslClient: Found Login Context section
 &apos;Client&apos;: will use it to attempt to SASL-authenticate.
2012-05-19 20:19:43,776 INFO org.apache.zookeeper.client.ZooKeeperSaslClient: Client will use GSSAPI as S
ASL mechanism.
2012-05-19 20:19:43,777 INFO org.apache.zookeeper.ClientCnxn: Socket connection established to &amp;lt;hidden&amp;gt;.com XXX.XX.XXX.XX:2181, initiating session
2012-05-19 20:19:43,780 INFO org.apache.hadoop.hbase.replication.ReplicationZookeeper: Added &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; peer clu
ster 22
2012-05-19 20:19:43,783 INFO org.apache.hadoop.hbase.metrics: &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MBeanInfo
2012-05-19 20:19:43,886 INFO org.apache.zookeeper.ClientCnxn: Session establishment complete on server XXX.XX.XXX.X:2181, sessionid = 0x137683fb0680000, negotiated timeout = 40000
2012-05-19 20:19:43,903 WARN org.apache.zookeeper.ClientCnxn: Session 0x137683fb0680000 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; server  XXX.XX.XXX.X:1:2181, unexpected error, closing socket connection and attempting reconnect
java.io.IOException: Xid out of order. Got Xid 2 with err 0 expected Xid 1 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a packet with details: cli
entPath:&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; serverPath:&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; finished:&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; header:: 1,8  replyHeader:: 0,0,-4  request:: &apos;/hbase/rs,F  r
esponse:: v{}
        at org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:796)
        at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:89)
        at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:291)
        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1039)
2012-05-19 20:19:43,903 WARN org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: Possibly &lt;span class=&quot;code-keyword&quot;&gt;transient&lt;/span&gt; Z
ooKeeper exception: org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = Conne
ctionLoss &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; /hbase/rs
2012-05-19 20:19:43,903 INFO org.apache.hadoop.hbase.util.RetryCounter: The 1 times to retry  after sleep
ing 2000 ms
2012-05-19 20:19:45,125 INFO org.apache.zookeeper.ClientCnxn: Opening socket connection to server  XXX.XX.XXX.X:2181
2012-05-19 20:19:45,151 INFO org.apache.zookeeper.client.ZooKeeperSaslClient: Found Login Context section
 &apos;Client&apos;: will use it to attempt to SASL-authenticate.
2012-05-19 20:19:45,152 INFO org.apache.zookeeper.client.ZooKeeperSaslClient: Client will use GSSAPI as S
ASL mechanism.
2012-05-19 20:19:45,152 INFO org.apache.zookeeper.ClientCnxn: Socket connection established to  XXX.XX.XXX.X:2181, initiating session
2012-05-19 20:19:45,155 INFO org.apache.zookeeper.ClientCnxn: Session establishment complete on server  XXX.XX.XXX.X:2181, sessionid = 0x137683fb0680000, negotiated timeout = 40000

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Though, this happened only once, but I am pasting it here if that might be useful... as its HBase related, and its about transaction mis-ordering.&lt;/p&gt;</comment>
                            <comment id="13282822" author="phunt" created="Thu, 24 May 2012 23:56:59 +0100"  >&lt;p&gt;Sorry Eugene but I think I&apos;m making a hash of explaining myself to you. &lt;/p&gt;

&lt;p&gt;queuePacket needs to be a non-blocking call. This latest patch makes it potentially blocking and that will likely break some things for end users.&lt;/p&gt;

&lt;p&gt;see my earlier comment:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m wondering why approach it this way rather than checking if we are in the auth phase in &quot;doIO&quot; and then only sending auth packets until the auth phase has been finalized. (leave any non-auth packets in the queue)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think what we should be doing is queuing regular the packets as usual, however the &quot;doIO&quot; thread will not forward these packets to the server until the SASL auth phase is completed. SASL packets on the other hand should not be queued but generated on the fly based on the connection state (generated in doIO based on this state) Your patch from May 7 was pretty close - except for the issues I raised on May 9.&lt;/p&gt;

&lt;p&gt;Do you see my point wrt this earlier feedback? If not please lmk and I&apos;ll try to clarify specific points.&lt;/p&gt;</comment>
                            <comment id="13292593" author="ekoontz" created="Sun, 10 Jun 2012 23:51:38 +0100"  >&lt;p&gt;Hi Patrick,&lt;br/&gt;
Thanks for your patience and help with this. I am attaching a new patch and also creating a review board review for this patch.&lt;/p&gt;

&lt;p&gt;In this most recent patch, I am generating the SASL packets on the fly as you mentioned, and sending these immediately rather than queuing them. &lt;/p&gt;

&lt;p&gt;Also, there is no synchronization mechanisms (no CountDownLatch) added in this patch. This eliminates the blocking in queueing that you pointed out in your last comment.&lt;/p&gt;

&lt;p&gt;I&apos;ve moved the Xid-setting of the packets to immediately before they are sent (whether they are SASL packets or queued packets), in order to make sure that the packets&apos; Xids are always in order of their being sent. &lt;/p&gt;

&lt;p&gt;Thank you Himanshu for your testing - I believe my latest patch will prevent packets with out-of-order Xids that you experienced.&lt;/p&gt;</comment>
                            <comment id="13292595" author="ekoontz" created="Sun, 10 Jun 2012 23:56:12 +0100"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/&lt;/a&gt; is down for maintenance - will post review when it&apos;s back up.&lt;/p&gt;</comment>
                            <comment id="13292600" author="hadoopqa" created="Mon, 11 Jun 2012 00:29:11 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12531621/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12531621/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1337029.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1091//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13292604" author="ekoontz" created="Mon, 11 Jun 2012 01:16:44 +0100"  >&lt;p&gt;Fix findbugs warning introduced in last patch.&lt;/p&gt;</comment>
                            <comment id="13292609" author="hadoopqa" created="Mon, 11 Jun 2012 01:48:45 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12531625/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12531625/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1337029.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1092//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13293704" author="ekoontz" created="Tue, 12 Jun 2012 16:38:00 +0100"  >&lt;p&gt;Unfortunately I don&apos;t know when I can post a review to the reviewboard since it seems down for an indefinite period; see &lt;a href=&quot;https://issues.apache.org/jira/browse/INFRA-4888&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/INFRA-4888&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="13293835" author="apurtell" created="Tue, 12 Jun 2012 19:44:13 +0100"  >&lt;p&gt;review.cloudera.org is available.&lt;/p&gt;</comment>
                            <comment id="13293850" author="ekoontz" created="Tue, 12 Jun 2012 20:04:34 +0100"  >&lt;p&gt;Thanks Andy, using review.cloudera.org: &lt;a href=&quot;https://review.cloudera.org/r/2150/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org/r/2150/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13397899" author="ekoontz" created="Wed, 20 Jun 2012 22:39:42 +0100"  >&lt;p&gt;Latest patch fixes problem when using Kerberos as SASL mechanism, because ZK server sends a final empty SASL packet at end of authentication. Also tries to minimize changes to existing, non-SASL related files.&lt;/p&gt;</comment>
                            <comment id="13397908" author="phunt" created="Wed, 20 Jun 2012 22:46:15 +0100"  >&lt;p&gt;btw, reviews.apache.org is back now.&lt;/p&gt;</comment>
                            <comment id="13397916" author="ekoontz" created="Wed, 20 Jun 2012 22:50:28 +0100"  >&lt;p&gt;Thanks, Patrick, good to know. I&apos;ll use that in the future.&lt;/p&gt;</comment>
                            <comment id="13397932" author="hadoopqa" created="Wed, 20 Jun 2012 23:08:51 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532777/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532777/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1351541.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1102//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13397938" author="phunt" created="Wed, 20 Jun 2012 23:12:17 +0100"  >&lt;p&gt;Eugene would you mind moving it back over now? (rb) that way we can see the review updates here in the jira. Thx.&lt;/p&gt;</comment>
                            <comment id="13397975" author="phunt" created="Wed, 20 Jun 2012 23:58:25 +0100"  >&lt;p&gt;I looked through the patch, some questions.&lt;/p&gt;

&lt;p&gt;1) moving the xid is a bit concerning. &lt;/p&gt;

&lt;p&gt;Isn&apos;t there a chance that the next xid (A) will be generated, and a separate xid (B) generated, and B sent on the wire before A? Notice that getXid can be called by doio, but also by sendPacket via the event thread. Or does something else protect against this?&lt;/p&gt;

&lt;p&gt;2) I&apos;m still concerned about spinning on the write interest flag. Have you considered this?&lt;/p&gt;

&lt;p&gt;I&apos;m still looking, but those were my initial thoughts.&lt;/p&gt;</comment>
                            <comment id="13398985" author="ekoontz" created="Fri, 22 Jun 2012 00:12:44 +0100"  >&lt;p&gt;Hi Patrick,&lt;/p&gt;

&lt;p&gt;Thanks as always for your comments and help.&lt;/p&gt;

&lt;p&gt;With regard to Xids: I don&apos;t see how the event thread can call sendPacket(). It seems to me that &lt;b&gt;only&lt;/b&gt; the send thread can call getXid() or sendPacket(), and therefore, packets can only be sent in the correct order. &lt;/p&gt;

&lt;p&gt;I put some test logging in ClientCnxn::getXid():&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;getXid() being called from thread: &quot;&lt;/span&gt; + &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the logging always reports SendThread.&lt;/p&gt;

&lt;p&gt;With regard to spinning on the write interest - you are right, this was happening. I&apos;ve created a new patch that prevents spinning in doIO(). It works by calling disableWrite() in doIO() if no packet can be sent because SASL authentication is ongoing. enableWrite(), in turn, is called after SASL authentication is completed. This makes the patch a bit more complicated to follow, I&apos;m afraid, but I think I&apos;m on the right track. &lt;/p&gt;

&lt;p&gt;I&apos;m attaching the patch and opening a review on reviews.apache.org as you asked.&lt;/p&gt;</comment>
                            <comment id="13399004" author="phunt" created="Fri, 22 Jun 2012 00:43:25 +0100"  >&lt;p&gt;Hi Eugene, here&apos;s the call hierarchy from Eclipse (one of many) and the root of my concern:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.zookeeper.ClientCnxn.sendPacket(Record, Record, AsyncCallback, int)
org.apache.zookeeper.client.ZooKeeperSaslClient.sendSaslPacket(byte[], ClientCnxn)
org.apache.zookeeper.client.ZooKeeperSaslClient.respondToServer(byte[], ClientCnxn)
org.apache.zookeeper.client.ZooKeeperSaslClient.ServerSaslResponseCallback.processResult(int, String, Object, byte[], Stat)
org.apache.zookeeper.ClientCnxn.EventThread.processEvent(Object)
org.apache.zookeeper.ClientCnxn.EventThread.run()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Try doing a &quot;open call hierarchy&quot; in eclipse for getXid.&lt;/p&gt;</comment>
                            <comment id="13399006" author="hadoopqa" created="Fri, 22 Jun 2012 00:49:31 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532965/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532965/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1351541.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1106//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13399023" author="ekoontz" created="Fri, 22 Jun 2012 01:24:17 +0100"  >&lt;p&gt;Fix bug in last patch that was not sending SaslAuthenticated event after authentication finishes.&lt;/p&gt;</comment>
                            <comment id="13399027" author="ekoontz" created="Fri, 22 Jun 2012 01:31:46 +0100"  >&lt;p&gt;Hi Patrick,&lt;/p&gt;

&lt;p&gt;Thanks for the information about Eclipse. I&apos;m attaching a screenshot showing my Call Hierarchy view.&lt;/p&gt;

&lt;p&gt;The code that calls ServerSaslResponseCallback.processResult has been removed in the latest patch (as well as in the last few most recent patches). &lt;/p&gt;

&lt;p&gt;(See the section of the patch beginning with &quot;@@ -553,17 +551,6 @@ public class ClientCnxn {&quot; )&lt;/p&gt;

&lt;p&gt;So I don&apos;t think there&apos;s a possibility anymore of the EventThread creating or sending packets.&lt;/p&gt;</comment>
                            <comment id="13399031" author="phunt" created="Fri, 22 Jun 2012 01:34:13 +0100"  >&lt;p&gt;This (the patch I was using) was from a day or two ago - I&apos;ll pull the latest and let you know. thx.&lt;/p&gt;</comment>
                            <comment id="13399033" author="ekoontz" created="Fri, 22 Jun 2012 01:38:29 +0100"  >&lt;p&gt;Thanks, Patrick. Also I&apos;ve created a new review here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/5505/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5505/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-Eugene&lt;/p&gt;</comment>
                            <comment id="13399351" author="hadoopqa" created="Fri, 22 Jun 2012 15:45:19 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532977/getXidCallHierarchy.png&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532977/getXidCallHierarchy.png&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1351541.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1107//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1107//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13404300" author="mahadev" created="Sat, 30 Jun 2012 00:09:28 +0100"  >&lt;p&gt;Looked at the patch. Couple of comments on it:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;You added
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; readOnly; &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; In ClientCnxn.java Packet class which doesnt seem to be used anywhere, am I correct?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I think we are a little weak on our synchronizations in the patch. I will take a look again but looks like its using a lot of member variables which could get changed by various threads.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I think there is a race condition in ClientCnxnSocketNIO:findSendablePacket() wherein how do you make sure that the sasl packets (without header) are present in the queue before we start running the thread. What I mean to say is that is it possible that we will land up with&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    &lt;span class=&quot;code-comment&quot;&gt;// Tunnelled authentication is not in progress: just
&lt;/span&gt;                    &lt;span class=&quot;code-comment&quot;&gt;// send the first packet in the queue.
&lt;/span&gt;                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; outgoingQueue.getFirst();
                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Even though we are not done authenticating via sasl?&lt;/p&gt;</comment>
                            <comment id="13406135" author="ekoontz" created="Tue, 3 Jul 2012 23:42:34 +0100"  >&lt;p&gt;Hi Mahadev,&lt;br/&gt;
Thanks for looking at the patch and your comments. Responding to your comments:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You added&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;public boolean readOnly;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In ClientCnxn.java Packet class which doesnt seem to be used anywhere, am I correct?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This was added so that packet-serialization can be deferred until the&lt;br/&gt;
packet is actually sent: we need to save the readOnly parameter,&lt;br/&gt;
passed as an argument to the packet constructor, until it is actually&lt;br/&gt;
used in the serialization of the packet. In this patch this&lt;br/&gt;
serialization is now done in a newly-added method,&lt;br/&gt;
ClientCnxnSocketNIO::sendPacket(), which serializes the input packet&lt;br/&gt;
&apos;p&apos; by calling p.createBB(). createBB() uses the packet&apos;s &apos;readOnly&apos;&lt;br/&gt;
member variable in order to create the serialization of the packet.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think we are a little weak on our synchronizations in the&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch. I will take a look again but looks like its using a lot of&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;member variables which could get changed by various threads.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;I think there is a race condition in&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ClientCnxnSocketNIO:findSendablePacket() wherein how do you make&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;sure that the sasl packets (without header) are present in the&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;queue before we start running the thread. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think there is a race condition possible. My reasoning is that&lt;br/&gt;
the sendThread both sends packets from the outgoingQueue and manages&lt;br/&gt;
the &lt;tt&gt;zooKeeperSaslClient&lt;/tt&gt; object. Therefore it is not possible to send&lt;br/&gt;
packets from the outgoing queue (besides the initial priming packet) without the &lt;tt&gt;zooKeeperSaslClient&lt;/tt&gt; being&lt;br/&gt;
finished with authentication (whether successfully or not).&lt;/p&gt;

&lt;p&gt;In the code from the patch that you&lt;br/&gt;
cite, &lt;tt&gt;clientTunneledAuthenticationInProgress()&lt;/tt&gt; must have returned&lt;br/&gt;
false in order to get inside the {{ else{} }}. For&lt;br/&gt;
&lt;tt&gt;clientTunneledAuthenticationInProgress()&lt;/tt&gt; is false, then at least one&lt;br/&gt;
of the following must be true:&lt;/p&gt;

&lt;p&gt;1. saslAuthFailed is true, or&lt;br/&gt;
2. zooKeeperSaslClient&apos;s clientTunneledAuthenticationInProgress() is false.&lt;/p&gt;

&lt;p&gt;With regard to 1., saslAuthFailed can only be true if a &lt;tt&gt;LoginException&lt;/tt&gt; was caught within&lt;br/&gt;
&lt;tt&gt;startConnect()&lt;/tt&gt;, but &lt;tt&gt;startConnect()&lt;/tt&gt; can only be run by the sendThread.&lt;/p&gt;

&lt;p&gt;With regard to 2., this can only be false if &lt;tt&gt;gotLastPacket&lt;/tt&gt; is true,&lt;br/&gt;
and either:&lt;/p&gt;

&lt;p&gt;2.1. saslState is COMPLETE, or &lt;br/&gt;
2.2. saslState is FAILED.&lt;/p&gt;

&lt;p&gt;But &lt;tt&gt;gotLastPacket&lt;/tt&gt; is initialized to false when the sendThread creates it,&lt;br/&gt;
and can only be set to true by code run by the sendThread&lt;br/&gt;
(specifically by &lt;tt&gt;ZooKeeperSaslClient::respondToServer()&lt;/tt&gt;).&lt;/p&gt;

</comment>
                            <comment id="13413635" author="rakeshr" created="Fri, 13 Jul 2012 11:25:02 +0100"  >&lt;p&gt;Hi Eugene, Sorry to join late. BTW the patch looks great and just few suggestions.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;#1# &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SaslException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed to send SASL packet to server due &quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot;to IOException:&quot;&lt;/span&gt; + e);
LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;SASL authentication with Zookeeper Quorum member failed: &quot;&lt;/span&gt; + e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Instead of appending the exception, would be good to pass exception as an argument.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;#2# Say, client and server got partitioned. Now the &apos;respondToServer&apos; will fail and marking the state as FAILED, also &apos;gotLastPacket = true&apos;. Here I&apos;m just doubting, whether to mark &apos;gotLastPacket=true&apos; rather what about considering as authenticationInProgress and continue?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void respondToServer(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] serverToken, ClientCnxn cnxn) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(saslClient.isComplete())) {
         &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
         &lt;span class=&quot;code-comment&quot;&gt;//...
&lt;/span&gt;              sendSaslPacket(saslToken, cnxn);
         &lt;span class=&quot;code-comment&quot;&gt;//....
&lt;/span&gt;         } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SaslException e) {
             saslState = SaslState.FAILED;
             gotLastPacket = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
         }
}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; clientTunneledAuthenticationInProgress() {
          &lt;span class=&quot;code-comment&quot;&gt;//....
&lt;/span&gt;          &lt;span class=&quot;code-comment&quot;&gt;//...
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (((isComplete()) ||
                    (isFailed())) &amp;amp;&amp;amp;
                    (gotLastPacket == &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;)) {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13445300" author="ekoontz" created="Thu, 30 Aug 2012 22:11:55 +0100"  >&lt;p&gt;Hi Rakesh,&lt;/p&gt;

&lt;p&gt;Sorry to take a long time to respond to you. I&apos;ll try to be more prompt especially as folks are hoping to get this in a release soon.&lt;/p&gt;


&lt;p&gt; I see what you are asking: should we retry if there&apos;s a network error connecting to the client (in your terms, a partition)?&lt;/p&gt;

&lt;p&gt; I guess we could add some retry logic - something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!(saslClient.isComplete()) {
   &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
     sendSaslPacket(saslToken, cnxn); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; SaslException, IOException
&lt;/span&gt;   } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ne) {
     &lt;span class=&quot;code-comment&quot;&gt;// transitory network failure: keep trying to reach server
&lt;/span&gt;   } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SaslException se) {
     &lt;span class=&quot;code-comment&quot;&gt;// auth failed: nothing more we can &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;.
&lt;/span&gt;     &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
   }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is that what you had in mind? &lt;/p&gt;

&lt;p&gt;I think it would be good to test the SASL exchange in the presence of network failures - I&apos;m wondering what support there is already in Zookeeper tests for network failure and if so, can we use them to test the SASL exchange.&lt;/p&gt;</comment>
                            <comment id="13445704" author="rakeshr" created="Fri, 31 Aug 2012 06:59:31 +0100"  >&lt;p&gt;Yeah Eugene, retry logic is fine.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it would be good to test the SASL exchange in the presence of network failures - I&apos;m wondering what support there is already in Zookeeper tests for network failure and if so, can we use them to test the SASL exchange.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I could see DisconnectableZooKeeper.disconnect() has network delays/partition simulation logic. Hope this will help you to get more idea.&lt;/p&gt;</comment>
                            <comment id="13447477" author="breed" created="Tue, 4 Sep 2012 05:22:19 +0100"  >&lt;p&gt;+1 looks great for the next release. it would be nice to address the exceptions that Rakesh brought up and set the causing exception as the cause rather than embedding in the message.&lt;/p&gt;

&lt;p&gt;as for the disconnect problem. it is slightly hard to follow, but if there is a network failure, wont the connection reset and a new ZooKeeperSaslClient be created anyway? it would be great to add a test that simply drops responses to clients without closing connections. i&apos;m fine with doing it in a separate patch.&lt;/p&gt;</comment>
                            <comment id="13448031" author="ekoontz" created="Tue, 4 Sep 2012 21:44:55 +0100"  >&lt;p&gt;Hi Rakesh and Ben,&lt;/p&gt;

&lt;p&gt;I&apos;ve added &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1437&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-1437&lt;/a&gt; based on your comments. I addressed it specifically to SASL, though perhaps it is a more general issue of testing the client&apos;s coping with all kinds of dropped packets, not just SASL ones.&lt;/p&gt;</comment>
                            <comment id="13448032" author="ekoontz" created="Tue, 4 Sep 2012 21:45:25 +0100"  >&lt;p&gt;Sorry, meant to link to &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1547&quot; title=&quot;Test robustness of client using SASL in the presence of dropped requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1547&quot;&gt;ZOOKEEPER-1547&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13448035" author="ekoontz" created="Tue, 4 Sep 2012 21:48:58 +0100"  >&lt;p&gt;Merge with trunk and pass along exception as second argument of SaslException. Thanks to Rakesh for pointing it out.&lt;/p&gt;</comment>
                            <comment id="13448047" author="ekoontz" created="Tue, 4 Sep 2012 21:55:55 +0100"  >&lt;p&gt;Ben, You are right: a new ZooKeeperSaslClient will be created for each new connection, since it&apos;s a member variable of a ClientCnxn. So it doesn&apos;t seem possible for a ZooKeeperSaslClient to retry across two subsequent connections.&lt;/p&gt;</comment>
                            <comment id="13448068" author="hadoopqa" created="Tue, 4 Sep 2012 22:15:17 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12543740/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12543740/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1380130.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1176//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13448443" author="mahadev" created="Wed, 5 Sep 2012 05:02:56 +0100"  >&lt;p&gt;Eugene,&lt;br/&gt;
 Looks like there is a one last glitch - the test failed. Can you please take a look? I think the patch is ready to go (except for the  test case).&lt;/p&gt;</comment>
                            <comment id="13449004" author="ekoontz" created="Wed, 5 Sep 2012 19:57:31 +0100"  >&lt;p&gt;I see what&apos;s going on: my patch is looking for the system property &quot;java.security.auth.login.config&quot; variable, which is not defined by the test that failed (SaslAuthDesignatedServerTest). &lt;/p&gt;

&lt;p&gt;Will have a new patch up very soon.&lt;/p&gt;</comment>
                            <comment id="13449017" author="mahadev" created="Wed, 5 Sep 2012 20:08:52 +0100"  >&lt;p&gt;Thanks Eugene!&lt;/p&gt;</comment>
                            <comment id="13449257" author="ekoontz" created="Thu, 6 Sep 2012 00:27:57 +0100"  >&lt;p&gt;Fixes SaslAuthDesignatedServerTest by checking for both system property JAAS_CONF_KEY and java.security.auth.login.Configuration.getConfiguration().&lt;/p&gt;</comment>
                            <comment id="13449330" author="hadoopqa" created="Thu, 6 Sep 2012 02:08:50 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12543934/ZOOKEEPER-1437.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12543934/ZOOKEEPER-1437.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1380931.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 15 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1179//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13451643" author="mahadev" created="Sun, 9 Sep 2012 19:24:53 +0100"  >&lt;p&gt;I just committed this. This is a big one. Thanks Eugene and others who helped reviewing it.&lt;/p&gt;</comment>
                            <comment id="13451889" author="hudson" created="Mon, 10 Sep 2012 12:01:44 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1675 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1675/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1675/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1437&quot; title=&quot;Client uses session before SASL authentication complete&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1437&quot;&gt;&lt;del&gt;ZOOKEEPER-1437&lt;/del&gt;&lt;/a&gt;. Client uses session before SASL authentication complete (Eugene Koontz via mahadev) (Revision 1382555)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
mahadev : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1382555&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1382555&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocket.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthDesignatedClientTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthFailTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13475896" author="randgalt" created="Sun, 14 Oct 2012 21:38:57 +0100"  >&lt;p&gt;I&apos;m still seeing this in a 3.4.4 client connecting to a 3.3.5 ensemble:&lt;/p&gt;

&lt;p&gt;2012-10-14 20:31:34,814 INFO  org.apache.zookeeper.ZooKeeper:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Initiating client connection, connectString=localhost:2181 sessionTimeout=300000 watcher=com.netflix.curator.ConnectionState@4715dc3e&lt;br/&gt;
2012-10-14 20:31:34,825 INFO  org.apache.zookeeper.ClientCnxn:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)&lt;br/&gt;
2012-10-14 20:31:34,835 INFO  org.apache.zookeeper.ClientCnxn:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Socket connection established to localhost/127.0.0.1:2181, initiating session&lt;br/&gt;
2012-10-14 20:31:34,835 DEBUG org.apache.zookeeper.ClientCnxn:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Session establishment request sent on localhost/127.0.0.1:2181&lt;br/&gt;
2012-10-14 20:31:34,858 WARN  org.apache.zookeeper.ClientCnxnSocket:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Connected to an old server; r-o mode will be unavailable&lt;br/&gt;
2012-10-14 20:31:34,858 INFO  org.apache.zookeeper.ClientCnxn:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x13a60f640480000, negotiated timeout = 40000&lt;br/&gt;
2012-10-14 20:31:35,379 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:35,864 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:35,864 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,166 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,167 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,168 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,168 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,169 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,169 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: 0,12  replyHeader:: 0,0,0  request:: &apos;/,F  response:: v{} until SASL authentication completes.&lt;br/&gt;
2012-10-14 20:31:48,169 DEBUG org.apache.zookeeper.ClientCnxnSocketNIO:1 &lt;span class=&quot;error&quot;&gt;&amp;#91;http-0.0.0.0-7101-5-SendThread(localhost:2181)&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;log&amp;#93;&lt;/span&gt; deferring non-priming packet: clientPath:null serverPath:null finished:false header:: -2,11  replyHeader:: null request:: null response:: nulluntil SASL authentication completes.&lt;/p&gt;</comment>
                            <comment id="13483888" author="ekoontz" created="Thu, 25 Oct 2012 05:22:13 +0100"  >&lt;p&gt;Hi Jordan,&lt;/p&gt;

&lt;p&gt;What version of Java are you using to run the Java client? If it&apos;s Java 7, your problem in fact might be &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1550&quot; title=&quot;ZooKeeperSaslClient does not finish anonymous login on OpenJDK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1550&quot;&gt;&lt;del&gt;ZOOKEEPER-1550&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;-Eugene&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12552880">ZOOKEEPER-1455</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12611304">ZOOKEEPER-1561</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12550770">HBASE-5780</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12630922">HBASE-7771</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12480698">ZOOKEEPER-938</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12606149">ZOOKEEPER-1547</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552747">HADOOP-8315</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12670448">ZOOKEEPER-1764</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12543934" name="ZOOKEEPER-1437.patch" size="38904" author="ekoontz" created="Thu, 6 Sep 2012 00:27:57 +0100"/>
                            <attachment id="12543740" name="ZOOKEEPER-1437.patch" size="38127" author="ekoontz" created="Tue, 4 Sep 2012 21:48:58 +0100"/>
                            <attachment id="12532975" name="ZOOKEEPER-1437.patch" size="37653" author="ekoontz" created="Fri, 22 Jun 2012 01:24:17 +0100"/>
                            <attachment id="12532965" name="ZOOKEEPER-1437.patch" size="37422" author="ekoontz" created="Fri, 22 Jun 2012 00:12:44 +0100"/>
                            <attachment id="12532777" name="ZOOKEEPER-1437.patch" size="33434" author="ekoontz" created="Wed, 20 Jun 2012 22:39:42 +0100"/>
                            <attachment id="12531625" name="ZOOKEEPER-1437.patch" size="31223" author="ekoontz" created="Mon, 11 Jun 2012 01:16:44 +0100"/>
                            <attachment id="12531621" name="ZOOKEEPER-1437.patch" size="31111" author="ekoontz" created="Sun, 10 Jun 2012 23:53:49 +0100"/>
                            <attachment id="12528189" name="ZOOKEEPER-1437.patch" size="9272" author="ekoontz" created="Sat, 19 May 2012 00:03:34 +0100"/>
                            <attachment id="12527672" name="ZOOKEEPER-1437.patch" size="9155" author="ekoontz" created="Wed, 16 May 2012 19:17:52 +0100"/>
                            <attachment id="12525918" name="ZOOKEEPER-1437.patch" size="17976" author="ekoontz" created="Mon, 7 May 2012 21:11:35 +0100"/>
                            <attachment id="12525802" name="ZOOKEEPER-1437.patch" size="16859" author="ekoontz" created="Mon, 7 May 2012 06:29:58 +0100"/>
                            <attachment id="12525786" name="ZOOKEEPER-1437.patch" size="18915" author="ekoontz" created="Sun, 6 May 2012 22:09:24 +0100"/>
                            <attachment id="12525779" name="ZOOKEEPER-1437.patch" size="13172" author="ekoontz" created="Sun, 6 May 2012 16:36:55 +0100"/>
                            <attachment id="12520699" name="ZOOKEEPER-1437.patch" size="14592" author="ekoontz" created="Sat, 31 Mar 2012 01:15:12 +0100"/>
                            <attachment id="12520671" name="ZOOKEEPER-1437.patch" size="14845" author="ekoontz" created="Fri, 30 Mar 2012 22:11:02 +0100"/>
                            <attachment id="12520635" name="ZOOKEEPER-1437.patch" size="15162" author="ekoontz" created="Fri, 30 Mar 2012 18:43:07 +0100"/>
                            <attachment id="12520531" name="ZOOKEEPER-1437.patch" size="12780" author="ekoontz" created="Fri, 30 Mar 2012 00:21:17 +0100"/>
                            <attachment id="12532977" name="getXidCallHierarchy.png" size="160047" author="ekoontz" created="Fri, 22 Jun 2012 01:35:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Mar 2012 19:00:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>233695</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzs9b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32562</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>