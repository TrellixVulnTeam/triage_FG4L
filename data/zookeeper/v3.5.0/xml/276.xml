<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:40:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-276/ZOOKEEPER-276.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-276] Bookkeeper contribution</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-276</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;BookKeeper is a system to reliably log streams of records. In BookKeeper, servers are &quot;bookies&quot;, log streams are &quot;ledgers&quot;, and each unit of a log (aka record) is a &quot;ledger entry&quot;. BookKeeper is designed to be reliable; bookies, the servers that store ledgers can be byzantine, which means that some subset of the bookies can fail, corrupt data, discard data, but as long as there are enough correctly behaving servers the service as a whole behaves correctly; the meta data for BookKeeper is stored in ZooKeeper.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12412826">ZOOKEEPER-276</key>
            <summary>Bookkeeper contribution</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fpj">Flavio Junqueira</assignee>
                                    <reporter username="lucat">Luca Telloli</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Jan 2009 11:54:00 +0000</created>
                <updated>Fri, 13 Feb 2009 21:18:54 +0000</updated>
                            <resolved>Fri, 30 Jan 2009 19:30:58 +0000</resolved>
                                                    <fixVersion>3.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="12665412" author="lucat" created="Tue, 20 Jan 2009 11:54:26 +0000"  >&lt;p&gt;BookKeeper is a system to reliably log streams of records. In BookKeeper, servers are &quot;bookies&quot;, log streams are &quot;ledgers&quot;, and each unit of a log (aka record) is a &quot;ledger entry&quot;. BookKeeper is designed to be reliable; bookies, the servers that store ledgers can be byzantine, which means that some subset of the bookies can fail, corrupt data, discard data, but as long as there are enough correctly behaving servers the service as a whole behaves correctly; the meta data for BookKeeper is stored in ZooKeeper.&lt;/p&gt;

&lt;p&gt;The main motivation for this system comes from the namenode of the Hadoop Distributed File System (HDFS). Namenodes have to log operations in a reliable fashion so that recovery is possible in the case of failures. Currently, HDFS does write-ahead logging on its local storage. This allows the namenode to restart after a failure, but it does not allow recovery from a complete machine failure. A shared, fault-tolerant write-ahead log is needed so that the namenode can be started on another machine and recover state properly. We have found the applications for BookKeeper extend beyond HDFS. In fact, any application that uses write-ahead logging can take advantage of BookKeeper.&lt;/p&gt;

&lt;p&gt;Back to the namenode example, one potential solution is to replicate across a number of replicas, and use an agreement protocol (e.g., 3PC) to guarantee that operations hit enough replicas. This approach doesn&apos;t take full advantage of I/O parallelism that can be achieved by striping. We can also take advantage of a single writer and immutable ledger entries to simplify the protocol and obtain better performance and fault-tolerance guarantees.&lt;/p&gt;

&lt;p&gt;The approach we propose is different. We propose a highly-available system that receives entries from a client and stores it. Such a system can be used by several client systems, and not only HDFS. There are several advantages in building such a service:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;We can use hardware that is optimized for such a service. We currently believe that such a system has to be optimized only for disk I/O;&lt;/li&gt;
	&lt;li&gt;We can have a pool of servers implementing such a log system, and shared among a number of servers. BookKeeper is hence a good candidate for a cloud service;&lt;/li&gt;
	&lt;li&gt;We can have a higher degree of replication with such a pool, which makes sense if the hardware necessary for it is cheaper compared to the one the application uses.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this patch, we include the source code of BookKeeper to be included in the &quot;contrib&quot; folder of the ZooKeeper distribution. We note that this is still experimental code, but the community is free to evaluate, discuss, and hopefully contribute.&lt;/p&gt;</comment>
                            <comment id="12665430" author="lucat" created="Tue, 20 Jan 2009 14:31:38 +0000"  >&lt;p&gt;Initial contribution of BookKeeper. Please note this is still experimental code. &lt;/p&gt;</comment>
                            <comment id="12668014" author="lucat" created="Wed, 28 Jan 2009 12:39:24 +0000"  >&lt;p&gt;Last updated version&lt;/p&gt;</comment>
                            <comment id="12668193" author="mahadev" created="Wed, 28 Jan 2009 22:18:10 +0000"  >&lt;p&gt;one thing i noticed -&lt;/p&gt;

&lt;p&gt;sorry I should have pointed this out earlier -&lt;/p&gt;

&lt;p&gt;we should remove the @author tags.&lt;br/&gt;
This is just a convention that hadoop has been following (given that a file might get changed often by different people over time)&lt;/p&gt;

&lt;p&gt;example -&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      + * @author luca telloli */

      in src/contrib/bookkeeper/test/org/apache/bookkeeper/test/BookieReadWriteTest.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;also, their are no javadocs in the classes. I think it will be good to have  javadocs for some of the important classes in BookKeeper.&lt;/p&gt;

&lt;p&gt;other than that I think the contribution looks good.&lt;/p&gt;</comment>
                            <comment id="12668195" author="fpj" created="Wed, 28 Jan 2009 22:20:33 +0000"  >&lt;p&gt;Removed some calls to registerAsConcrete that were preventing me from compiling successfully.&lt;/p&gt;</comment>
                            <comment id="12668225" author="fpj" created="Wed, 28 Jan 2009 23:22:57 +0000"  >&lt;p&gt;Implemented Mahadev suggestions.&lt;/p&gt;</comment>
                            <comment id="12668228" author="fpj" created="Wed, 28 Jan 2009 23:25:11 +0000"  >&lt;p&gt;Forgot to mention that unit tests pass just fine for me.&lt;/p&gt;</comment>
                            <comment id="12668716" author="mahadev" created="Fri, 30 Jan 2009 02:40:22 +0000"  >&lt;p&gt;bookkeeper is contributed as &lt;br/&gt;
org.apache.bookkeeper package &amp;#8211; &lt;br/&gt;
shouldnt it be org.apache.zookeeper.bookkeeper.* ?&lt;/p&gt;
</comment>
                            <comment id="12668718" author="mahadev" created="Fri, 30 Jan 2009 02:50:11 +0000"  >&lt;p&gt;also ant tar on top level dir fails with  the following error - &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;compile:
     [echo] contrib: bookkeeper
    [javac] Compiling 26 source files to /Users/mahadev/workspace/zookeeper-commit-trunk/build/contrib/bookkeeper/classes
    [javac] /Users/mahadev/workspace/zookeeper-commit-trunk/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/bookie/Bookie.java:302: method does not override a method from its superclass
    [javac]         @Override
    [javac]          ^
    [javac] /Users/mahadev/workspace/zookeeper-commit-trunk/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/proto/BookieClient.java:317: method does not override a method from its superclass
    [javac]         	@Override
    [javac]                  ^
    [javac] /Users/mahadev/workspace/zookeeper-commit-trunk/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/proto/BookieServer.java:87: method does not override a method from its superclass
    [javac]     @Override
    [javac]      ^
    [javac] /Users/mahadev/workspace/zookeeper-commit-trunk/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/proto/BookieServer.java:164: method does not override a method from its superclass
    [javac]     @Override
    [javac]      ^
    [javac] /Users/mahadev/workspace/zookeeper-commit-trunk/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/util/LocalBookKeeper.java:143: method does not override a method from its superclass
    [javac] 		@Override
    [javac]                  ^
    [javac] 5 errors

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12668786" author="fpj" created="Fri, 30 Jan 2009 09:24:05 +0000"  >&lt;p&gt;On issue 1: we have checked with Patrick Hunt (and Patrick checked with Doug Cutting) that it is ok to use org.apache.bookkeeper. I also prefer it that way;&lt;/p&gt;

&lt;p&gt;On issue 2: Unfortunately my compiler doesn&apos;t complain about the override tags you mentioned (I&apos;m on macos, jvm 1.6.0), so I just removed the ones you pointed out. Please give it another try.&lt;/p&gt;</comment>
                            <comment id="12668951" author="mahadev" created="Fri, 30 Jan 2009 17:47:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;On issue 1: we have checked with Patrick Hunt (and Patrick checked with Doug Cutting) that it is ok to use org.apache.bookkeeper. I also prefer it that way;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is fine with me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On issue 2: Unfortunately my compiler doesn&apos;t complain about the override tags you mentioned (I&apos;m on macos, jvm 1.6.0), so I just removed the ones you pointed out. Please give it another try.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;. will give it a try... &lt;/p&gt;</comment>
                            <comment id="12668974" author="mahadev" created="Fri, 30 Jan 2009 18:49:20 +0000"  >&lt;p&gt;i fixed some problems in the build.&lt;/p&gt;</comment>
                            <comment id="12668986" author="mahadev" created="Fri, 30 Jan 2009 19:22:03 +0000"  >&lt;p&gt;fixed license on oen of the files... &lt;br/&gt;
and fixed bookkeeper tests ... (they had @override  tags which were nto required.)&lt;/p&gt;</comment>
                            <comment id="12668991" author="mahadev" created="Fri, 30 Jan 2009 19:27:34 +0000"  >&lt;p&gt;+1 on the patch .. &lt;/p&gt;

&lt;p&gt;the patch has tests and readme. &lt;br/&gt;
some more javadocs would be great but we can fix that later. &lt;/p&gt;

&lt;p&gt;ill commit this for now.&lt;/p&gt;</comment>
                            <comment id="12668992" author="mahadev" created="Fri, 30 Jan 2009 19:30:58 +0000"  >&lt;p&gt;I just committed this. Thanks Luca and Flavio.&lt;/p&gt;</comment>
                            <comment id="12669575" author="hudson" created="Mon, 2 Feb 2009 11:49:19 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #217 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/217/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/217/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="12671566" author="dhruba" created="Sun, 8 Feb 2009 08:51:44 +0000"  >&lt;p&gt;I have a simple question about bookkeeper ( I could not find  design doc, if there is one, please point me to it).&lt;/p&gt;

&lt;p&gt;Suppose I have a service with 3 bookies and 1 ledger. I write 1 ledger entry. When this appliction-write to the ledger entry is complete, this transaction is  successfully done on at least 2 of the bookies. Does the completion of the application-write also guarantee that this transaction is synchonously persisted on the disk on these two bookies, or does this transaction reside in memory of these two bookies and is lazily flushed? Thanks.&lt;/p&gt;</comment>
                            <comment id="12671584" author="fpj" created="Sun, 8 Feb 2009 13:33:10 +0000"  >&lt;p&gt;Dhruba, That&apos;s an excellent question. We are still to document it in detail. Regarding your question, writes are reliable: when a bookie acknowledges receipt of an entry, it is on disk.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12399150" name="ZOOKEEPER-276.patch" size="257027" author="mahadev" created="Fri, 30 Jan 2009 19:22:02 +0000"/>
                            <attachment id="12399145" name="ZOOKEEPER-276.patch" size="256295" author="mahadev" created="Fri, 30 Jan 2009 18:49:20 +0000"/>
                            <attachment id="12399109" name="ZOOKEEPER-276.patch" size="256296" author="fpj" created="Fri, 30 Jan 2009 09:24:05 +0000"/>
                            <attachment id="12399016" name="ZOOKEEPER-276.patch" size="256367" author="fpj" created="Thu, 29 Jan 2009 16:12:30 +0000"/>
                            <attachment id="12398943" name="ZOOKEEPER-276.patch" size="257275" author="fpj" created="Wed, 28 Jan 2009 23:22:57 +0000"/>
                            <attachment id="12398936" name="ZOOKEEPER-276.patch" size="254913" author="fpj" created="Wed, 28 Jan 2009 22:20:33 +0000"/>
                            <attachment id="12398898" name="ZOOKEEPER-276.patch" size="256255" author="lucat" created="Wed, 28 Jan 2009 12:39:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Jan 2009 22:18:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47926</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzy8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33531</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>