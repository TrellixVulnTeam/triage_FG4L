<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:47:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-442/ZOOKEEPER-442.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-442] need a way to remove watches that are no longer of interest</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-442</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;currently the only way a watch cleared is to trigger it. we need a way to enumerate the outstanding watch objects, find watch events the objects are watching for, and remove interests in an event.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12427650">ZOOKEEPER-442</key>
            <summary>need a way to remove watches that are no longer of interest</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12682832">ZOOKEEPER-1829</parent>
                                    <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rakeshr">Rakesh R</assignee>
                                    <reporter username="breed">Benjamin Reed</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Jun 2009 15:04:28 +0100</created>
                <updated>Sat, 25 Jan 2014 11:09:53 +0000</updated>
                            <resolved>Fri, 24 Jan 2014 06:27:42 +0000</resolved>
                                                    <fixVersion>3.5.0</fixVersion>
                                    <component>java client</component>
                    <component>server</component>
                        <due></due>
                            <votes>10</votes>
                                    <watches>21</watches>
                                                                <comments>
                            <comment id="12718467" author="breed" created="Thu, 11 Jun 2009 15:06:55 +0100"  >&lt;p&gt;there are two problematic scenarios: 1) an application that has many transient interests can register a bunch of watches which wastes memory to monitor the watches (granted it is a very small amount of memory) and it cases unnecessary processing when those watches are triggered 2) applications need to be prepared to ignore watch events that they are no longer interested in.&lt;/p&gt;</comment>
                            <comment id="12718577" author="phunt" created="Thu, 11 Jun 2009 19:27:20 +0100"  >&lt;p&gt;we must be careful to clearly define/implement the semantics of removing a watch. for example watches may have been&lt;br/&gt;
triggered and a notification delivered to the client but not yet processed by the client - it&apos;s waiting in the event queue. etc...&lt;br/&gt;
what are we removing? the trigger or both the trigger and notification(s)? what if one client has been notified but not &lt;br/&gt;
others (say two clients watch a node N, c1 is on a fast server and gets notified, c2 removes the watch on a slow server&lt;br/&gt;
before the trigger fires, ...) etc...&lt;/p&gt;

&lt;p&gt;it would be great if someone was willing to document a proposal(s) and post it on this jira for review/comment. once&lt;br/&gt;
we have something clearly defined/agreedupon it shouldn&apos;t be too hard to implement. (hah! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="12718898" author="phunt" created="Fri, 12 Jun 2009 18:02:36 +0100"  >&lt;p&gt;this is a comment I made on the mailing list:&lt;/p&gt;

&lt;p&gt;We probably want to allow the caller to specify which type of watch they want to remove - a watch on the znode itself, on children of the znode, or both.&lt;/p&gt;

&lt;p&gt;zk.removeWatch(path, watcher, wtype)&lt;br/&gt;
where:&lt;br/&gt;
path is path to the znode&lt;br/&gt;
watcher may be a specific watcher or null matching all watchers&lt;br/&gt;
wtype is enum of TYPE_CHILD, TYPE_DATA, or TYPE_ALL (something like that)&lt;/p&gt;

&lt;p&gt;We also need to be careful of the semantics since &quot;watch&quot; wraps up a couple of concepts: the trigger and the notification. What are we removing? The trigger or both? If just the trigger then you may still be notified after removeWatch is called (if notification is &quot;in flight&quot;). Perhaps removal of the watch should itself trigger the notification to all watchers, with a new notification type of &quot;watch removed&quot;? &lt;/p&gt;</comment>
                            <comment id="12718915" author="henryr" created="Fri, 12 Jun 2009 18:41:29 +0100"  >&lt;p&gt;I think if anything applications are going to use this as a local barrier, so that they can assume that no watches will be called after the disable_watch command returns, rather than a remote one that guarantees that no more notifications will be sent. &lt;/p&gt;

&lt;p&gt;It&apos;s reasonably hard to guarantee this property, however, as we cannot predict what the scheduler is going to do, and therefore outstanding watches on the client may not be scheduled until an arbitrary time after they are supposedly disabled (because the trigger point comes before the disable command on the local machine). So maybe it&apos;s better not to offer a feature that might be misunderstood? &lt;/p&gt;


</comment>
                            <comment id="13005686" author="gunnar" created="Fri, 11 Mar 2011 15:49:42 +0000"  >&lt;p&gt;I&apos;m affected by the transient scenario. It would be nice if there would be a method to remove/unregister a watch by object instance (no matter what triggers, etc.).&lt;/p&gt;</comment>
                            <comment id="13040128" author="tivv" created="Fri, 27 May 2011 09:36:30 +0100"  >&lt;p&gt;My little comment on why I need this feature to ensure my usecase will work: My application makes a job node and adds a watch on result node (unexisting, by name). After some time it may decide that a job is no longer needed (e.g. timeouted) and it removes job node and must unwatch result node. If it won&apos;t do so, there will be watch leak - this watches will never be removed as job name won&apos;t be reused and result will never be generated. Currently I issue &quot;create node/delete node&quot; commands to fire the watch, but it takes processing power and is ugly.&lt;/p&gt;</comment>
                            <comment id="13040360" author="breed" created="Fri, 27 May 2011 19:08:59 +0100"  >&lt;p&gt;yes, vitalii, the exists watch for a node that will never exist, and the process that establishes the watch knows this, is probably the most compelling use case.&lt;/p&gt;

&lt;p&gt;just a slight clarification: the watch will be removed if the session that set it is closed. in many environments there are very long sessions; it&apos;s not forever, but it approximates forever &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13058513" author="gunnar" created="Fri, 1 Jul 2011 13:07:32 +0100"  >&lt;p&gt;This is getting critical in our environment. From a heap dump we recognized that the &lt;tt&gt;HashMap&lt;/tt&gt; with all the values was very large and consumed ~70% of the heap (~3 million entries, collected over just a few days, ~8 million capacity). &lt;/p&gt;

&lt;p&gt;Our usage patter might be wrong, though. I&apos;m setting an exists watch in order to wait for a node to be deleted within a certain timeout. The watch contains a CountDownLatch which allows me to sleep until the watch triggers or the timeout triggers. in the latter case I really need to remove the watch.&lt;/p&gt;

&lt;p&gt;A workaround would be to not set a watch at all and just sleep for a while and check in a loop. However, that would increase the read traffic to ZooKeeper dramatically.&lt;/p&gt;

&lt;p&gt;Any ideas?&lt;/p&gt;</comment>
                            <comment id="13130468" author="dferro" created="Wed, 19 Oct 2011 10:32:54 +0100"  >&lt;p&gt;Are we still interested on this feature after &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1177&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ZOOKEEPER-1177&lt;/a&gt; gets integrated?&lt;/p&gt;

&lt;p&gt;I have implemented a prototype based on Patrick&apos;s suggestion. Issues:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The removal doesn&apos;t guarantee that the watcher won&apos;t trigger.&lt;/li&gt;
	&lt;li&gt;If the user can specify a concrete watcher to be removed, sometimes we only have to remove the watcher on the client&apos;s side without contacting the server. If we want the async version of the call we need a mechanism to trigger the callback directly.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13130474" author="dferro" created="Wed, 19 Oct 2011 10:44:00 +0100"  >&lt;p&gt;Prototype of synchronous API to remove watches.&lt;/p&gt;</comment>
                            <comment id="13130478" author="tivv" created="Wed, 19 Oct 2011 11:01:49 +0100"  >&lt;p&gt;I am still interesed in this ticket for two reasons:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This is a leak. Any leak must be fixed&lt;/li&gt;
	&lt;li&gt;While &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1177&quot; title=&quot;Enabling a large number of watches for a large number of clients&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1177&quot;&gt;ZOOKEEPER-1177&lt;/a&gt; fixes server-side, it does not help client-side, is it? And in client side every watch is a listener object, so this will use memory quite fast.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13130482" author="gunnar" created="Wed, 19 Oct 2011 11:09:00 +0100"  >&lt;p&gt;Same here. We need a way to remove watches &lt;em&gt;on the client&lt;/em&gt; side when they are no longer of interest. Otherwise they won&apos;t be garbage collected if they never trigger.&lt;/p&gt;</comment>
                            <comment id="13133915" author="dferro" created="Mon, 24 Oct 2011 10:12:57 +0100"  >&lt;p&gt;How should we deal with the asynchronous version of the call? I see three options:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Don&apos;t provide an async version.&lt;/li&gt;
	&lt;li&gt;Remove the Watcher parameter, effectively removing all watches on the given znode.&lt;/li&gt;
	&lt;li&gt;Find a way to trigger the callback directly from the client (could also help &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-847&quot; title=&quot;Missing acl check in zookeeper create&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-847&quot;&gt;ZOOKEEPER-847&lt;/a&gt;, where we want to throw an exception and invoke the callback)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13133928" author="gunnar" created="Mon, 24 Oct 2011 10:37:08 +0100"  >&lt;p&gt;From my point of view I need the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Remove all local references to watcher object together with all coressponsing watcher objects in server (if connection is available).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The second part should/can be done asynchronous. Especially because I&apos;m not interested in the result (other clients actually may be interested).&lt;/p&gt;</comment>
                            <comment id="13133945" author="tivv" created="Mon, 24 Oct 2011 10:53:50 +0100"  >&lt;p&gt;OK, as for me:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;On client each watcher group (grouping watchers on path) should have watcher state - e.g. &quot;normal/deleting/creating&quot;&lt;/li&gt;
	&lt;li&gt;Delete watcher message to server must be acked&lt;/li&gt;
	&lt;li&gt;If last watcher from group is removed, delete message is sent to server and watcher goes to deleting state&lt;/li&gt;
	&lt;li&gt;As soon as deletion is acked (and group is still in deletion), watcher group is removed on client&lt;/li&gt;
	&lt;li&gt;If new watcher to group is added and watcher group is new or in deleting state, &quot;watch&quot; message to server is sent and group goes to creating state&lt;/li&gt;
	&lt;li&gt;As soon as creation is acked ( and group is still in creating), watcher group goes to &quot;normal&quot;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13135857" author="dferro" created="Wed, 26 Oct 2011 11:28:31 +0100"  >&lt;p&gt;I&apos;ve attached a new patch with the asynchronous call and a mechanism to queue local callbacks on the event thread, which could also be used in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-847&quot; title=&quot;Missing acl check in zookeeper create&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-847&quot;&gt;ZOOKEEPER-847&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vitalii, I don&apos;t understand why would we need to keep track of the watcher group&apos;s state (normal/deleting/creating), could you explain?&lt;/p&gt;</comment>
                            <comment id="13135892" author="tivv" created="Wed, 26 Oct 2011 13:20:23 +0100"  >&lt;p&gt;What I worry about is :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;A group has watch X&lt;/li&gt;
	&lt;li&gt;A watch X is deleted, since it&apos;s last one - delete watch request is sent to server. Client watch list is not changed (true?) until ack is received&lt;/li&gt;
	&lt;li&gt;A watch Y is added. You must sent add watch request, but how do you know it? X is still in the list, so it&apos;s not empty.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;P.S. I must check the code to know time when client watch list is changed. This can be either request time or ack time. Both ways has it&apos;s tricky scenarios.&lt;/p&gt;</comment>
                            <comment id="13135968" author="dferro" created="Wed, 26 Oct 2011 14:32:03 +0100"  >&lt;p&gt;When you set a watch you always send the request to the server, as the watch is set through a getChildren()/exists()/... call. So I think this is not a problem.&lt;/p&gt;</comment>
                            <comment id="13136923" author="hadoopqa" created="Thu, 27 Oct 2011 10:20:47 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12500857/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12500857/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1189318.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/695//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/695//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13136936" author="hadoopqa" created="Thu, 27 Oct 2011 11:01:19 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12501063/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12501063/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1189318.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/696//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/696//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/696//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/696//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13136948" author="hadoopqa" created="Thu, 27 Oct 2011 11:32:39 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12501066/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12501066/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1189318.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/697//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13136962" author="hadoopqa" created="Thu, 27 Oct 2011 12:11:13 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12501075/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12501075/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1189318.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause tar ant target to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/699//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/699//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/699//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/699//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13136983" author="hadoopqa" created="Thu, 27 Oct 2011 13:02:25 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12501078/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12501078/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1189318.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/701//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13138329" author="dferro" created="Fri, 28 Oct 2011 14:23:50 +0100"  >&lt;p&gt;I think it is possible to guarantee that after the call finishes (or the callback gets notified) the watcher won&apos;t be triggered. I&apos;ve attached a new patch doing this, but I&apos;m not quite sure about the design, so any comment is welcomed.&lt;/p&gt;

&lt;p&gt;There is still the problem of what happens if one server receives the watch event before removing the watch, and another server afterwards. What do you think?&lt;/p&gt;</comment>
                            <comment id="13138338" author="hadoopqa" created="Fri, 28 Oct 2011 14:43:32 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12501290/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12501290/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1190073.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/718//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13164886" author="mahadev" created="Thu, 8 Dec 2011 00:54:23 +0000"  >&lt;p&gt;@Ben,&lt;br/&gt;
 Can you please take a look at this patch? &lt;/p&gt;</comment>
                            <comment id="13179151" author="breed" created="Wed, 4 Jan 2012 00:05:11 +0000"  >&lt;p&gt;daniel, i&apos;m ready to look at this. can you put it on reviews.apache.org?&lt;/p&gt;</comment>
                            <comment id="13179375" author="jiraposter@reviews.apache.org" created="Wed, 4 Jan 2012 09:42:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for zookeeper and Benjamin Reed.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added APIs to remove watches that are not needed anymore. If the removal completes successfully it is guaranteed that the watcher won&apos;t be notified.&lt;/p&gt;

&lt;p&gt;With the current semantics if two clients remove watches on a znode at the same time the watch is triggered, one could remove it successfully while the other could receive the notification first.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-442&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/java/main/org/apache/zookeeper/ClientCnxn.java 6c25e40 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/KeeperException.java 7c10d2c &lt;br/&gt;
  src/java/main/org/apache/zookeeper/Watcher.java 36c7b5b &lt;br/&gt;
  src/java/main/org/apache/zookeeper/ZooDefs.java c7f1b20 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/ZooKeeper.java e82eaa0 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/DataTree.java 757a572 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 336827a &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 1a80d74 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/Request.java c6a2249 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/WatchManager.java 0e7c815 &lt;br/&gt;
  src/java/main/org/apache/zookeeper/server/ZKDatabase.java 2842803 &lt;br/&gt;
  src/java/test/org/apache/zookeeper/test/RemoveWatchesTest.java PRE-CREATION &lt;br/&gt;
  src/zookeeper.jute d24e145 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3364/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added unit test that checks client side semantics.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Daniel&lt;/p&gt;
</comment>
                            <comment id="13179531" author="jiraposter@reviews.apache.org" created="Wed, 4 Jan 2012 14:59:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3364/#review4182&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#review4182&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This is only a first pass. Looks ok but I would like more attention to anything you&apos;re not really sure about.&lt;/p&gt;


&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9414&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9414&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Maybe collapse this to if(watchers != null &amp;amp;&amp;amp; watchers.contains(watcher)) ?&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9415&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9415&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I don&apos;t think that you should override this method to do two things based on the variables passed in, it&apos;s confusing and unnecessary. Can we have instead two methods, one for removing all watchers and one for just removing a watch if it exists?&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9416&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9416&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ??&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9417&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9417&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Let&apos;s not check in files that are just reordering of imports...&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Camille&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-04 09:41:43, Daniel G&#243;mez Ferro wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-04 09:41:43)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for zookeeper and Benjamin Reed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added APIs to remove watches that are not needed anymore. If the removal completes successfully it is guaranteed that the watcher won&apos;t be notified.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With the current semantics if two clients remove watches on a znode at the same time the watch is triggered, one could remove it successfully while the other could receive the notification first.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-442&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ClientCnxn.java 6c25e40 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/KeeperException.java 7c10d2c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/Watcher.java 36c7b5b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooDefs.java c7f1b20 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java e82eaa0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/DataTree.java 757a572 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 336827a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 1a80d74 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/Request.java c6a2249 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/WatchManager.java 0e7c815 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/ZKDatabase.java 2842803 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/test/org/apache/zookeeper/test/RemoveWatchesTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/zookeeper.jute d24e145 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3364/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added unit test that checks client side semantics.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Daniel&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13179674" author="jiraposter@reviews.apache.org" created="Wed, 4 Jan 2012 17:40:38 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3364/#review4184&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#review4184&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;As part of this patch the programmer guide needs to be updated to detail how this feature works. In particular it should detail the semantics of watch removal, any &quot;gotchas&quot; to watch out for, etc...&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Patrick&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-04 09:41:43, Daniel G&#243;mez Ferro wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-04 09:41:43)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for zookeeper and Benjamin Reed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added APIs to remove watches that are not needed anymore. If the removal completes successfully it is guaranteed that the watcher won&apos;t be notified.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With the current semantics if two clients remove watches on a znode at the same time the watch is triggered, one could remove it successfully while the other could receive the notification first.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-442&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ClientCnxn.java 6c25e40 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/KeeperException.java 7c10d2c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/Watcher.java 36c7b5b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooDefs.java c7f1b20 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java e82eaa0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/DataTree.java 757a572 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 336827a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 1a80d74 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/Request.java c6a2249 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/WatchManager.java 0e7c815 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/ZKDatabase.java 2842803 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/test/org/apache/zookeeper/test/RemoveWatchesTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/zookeeper.jute d24e145 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3364/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added unit test that checks client side semantics.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Daniel&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13179693" author="jiraposter@reviews.apache.org" created="Wed, 4 Jan 2012 17:57:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3364/#review4185&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#review4185&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9424&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9424&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This class is getting rather large, it should be refactored into it&apos;s own file.&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9426&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9426&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    all watchers &lt;em&gt;registered by this session&lt;/em&gt;, correct?&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9427&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9427&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this is confusing, what does &quot;leak&quot; mean? It might be good to move this detail from here to the programmer guide.&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9428&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9428&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    @throws?&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9425&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9425&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Update all the @since with expected release - looks like 3.5.0&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9429&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9429&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    why type vs having explicit methods?&lt;/p&gt;

&lt;p&gt;    removeChildWatches&lt;br/&gt;
    removeDataWatches&lt;/p&gt;

&lt;p&gt;    we&apos;re unlikely to add more watch types.&lt;/p&gt;

&lt;p&gt;    On second thought though, shouldn&apos;t we have a &quot;both&quot; (or &quot;alltypes&quot;, etc...) option as well? If that&apos;s the case perhaps 3 is enough to have a type...&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9432&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9432&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    since is incorrect&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9430&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9430&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    async operations don&apos;t throw keeperexception, see other async ops such as getData&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9431&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9431&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    see my comment on method signature - your intuition was correct.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Patrick&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-04 09:41:43, Daniel G&#243;mez Ferro wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-04 09:41:43)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for zookeeper and Benjamin Reed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added APIs to remove watches that are not needed anymore. If the removal completes successfully it is guaranteed that the watcher won&apos;t be notified.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With the current semantics if two clients remove watches on a znode at the same time the watch is triggered, one could remove it successfully while the other could receive the notification first.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-442&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ClientCnxn.java 6c25e40 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/KeeperException.java 7c10d2c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/Watcher.java 36c7b5b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooDefs.java c7f1b20 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java e82eaa0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/DataTree.java 757a572 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 336827a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 1a80d74 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/Request.java c6a2249 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/WatchManager.java 0e7c815 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/ZKDatabase.java 2842803 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/test/org/apache/zookeeper/test/RemoveWatchesTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/zookeeper.jute d24e145 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3364/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added unit test that checks client side semantics.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Daniel&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13179718" author="jiraposter@reviews.apache.org" created="Wed, 4 Jan 2012 18:17:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/3364/#review4186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#review4186&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9433&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    is it needed? would be good to be sure before we commit&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9435&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9435&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    it would be good to document here why we are calling the async version (that this is the only way to ensure that all pending watches have been processed before notifying that that watch was removed successfully).&lt;/p&gt;



&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/3364/#comment9434&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/#comment9434&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ditto&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Patrick&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2012-01-04 09:41:43, Daniel G&#243;mez Ferro wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3364/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2012-01-04 09:41:43)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for zookeeper and Benjamin Reed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added APIs to remove watches that are not needed anymore. If the removal completes successfully it is guaranteed that the watcher won&apos;t be notified.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With the current semantics if two clients remove watches on a znode at the same time the watch is triggered, one could remove it successfully while the other could receive the notification first.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-442&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ClientCnxn.java 6c25e40 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/KeeperException.java 7c10d2c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/Watcher.java 36c7b5b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooDefs.java c7f1b20 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/ZooKeeper.java e82eaa0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/DataTree.java 757a572 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 336827a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 1a80d74 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/Request.java c6a2249 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/WatchManager.java 0e7c815 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/main/org/apache/zookeeper/server/ZKDatabase.java 2842803 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/java/test/org/apache/zookeeper/test/RemoveWatchesTest.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/zookeeper.jute d24e145 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/3364/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3364/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added unit test that checks client side semantics.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Daniel&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13181018" author="phunt" created="Fri, 6 Jan 2012 01:13:37 +0000"  >&lt;p&gt;Cancelling pending patch update. Please update the patch, incl RB, and resubmit. thanks.&lt;/p&gt;</comment>
                            <comment id="13759179" author="fpj" created="Thu, 5 Sep 2013 17:01:01 +0100"  >&lt;p&gt;Sounds like an interesting feature if anyone is looking for a low-hanging fruit to contribute. Shall we revisit this? &lt;/p&gt;</comment>
                            <comment id="13760222" author="eribeiro" created="Fri, 6 Sep 2013 15:25:01 +0100"  >&lt;p&gt;I certainly have an interest on tackling this issue, but I need to read the patch and code to see if I am up to task already. As it&apos;s targeted to 3.5 this should give time to get up to speed, I guess.&lt;/p&gt;

&lt;p&gt;PS: But if any other person feels like trying to tackle it immediately then I can pass on the opportunity too.&lt;/p&gt;</comment>
                            <comment id="13788503" author="mahadev" created="Mon, 7 Oct 2013 20:49:03 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro&quot; class=&quot;user-hover&quot; rel=&quot;eribeiro&quot;&gt;Edward Ribeiro&lt;/a&gt; if you are interested, feel free to take it up. I&apos;d be happy to provide guidance/other help on this.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13791449" author="rakeshr" created="Thu, 10 Oct 2013 13:46:22 +0100"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mahadev&quot; class=&quot;user-hover&quot; rel=&quot;mahadev&quot;&gt;Mahadev konar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj&quot; class=&quot;user-hover&quot; rel=&quot;fpj&quot;&gt;Flavio Junqueira&lt;/a&gt;&lt;br/&gt;
Its an interesting feature and would like to take it up. I&apos;ve gone through the discussion thread and just prepared a draft doc which will help me to move on. Could you please have a look, I&apos;ll try to understand more about the existing patch and review comments.&lt;/p&gt;</comment>
                            <comment id="13791557" author="mahadev" created="Thu, 10 Oct 2013 15:51:03 +0100"  >&lt;p&gt;Thanks Rakesh. Good to see the initiative. Ill read through the doc and get back to you. &lt;/p&gt;
</comment>
                            <comment id="13791627" author="phunt" created="Thu, 10 Oct 2013 17:17:45 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; just to make sure I&apos;m understanding correctly, the document you put together is based on the current approach/patch, is that right? Or are you suggesting a different implementation? (my quick perusal indicates the former but I want to make sure I&apos;m not missing something)&lt;/p&gt;</comment>
                            <comment id="13792349" author="rakeshr" created="Fri, 11 Oct 2013 06:16:07 +0100"  >&lt;p&gt;Yes, I&apos;m following the current approach with few improvements. Before starting I just prepared doc to understand the background and the proposed apis.&lt;br/&gt;
I&apos;ll try to upload the working patch in couple of days.&lt;/p&gt;</comment>
                            <comment id="13797193" author="hadoopqa" created="Wed, 16 Oct 2013 21:08:55 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12608778/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12608778/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1532152.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1702//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13797557" author="hadoopqa" created="Thu, 17 Oct 2013 03:49:34 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12608862/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12608862/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1532152.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1703//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13797891" author="eribeiro" created="Thu, 17 Oct 2013 14:21:17 +0100"  >&lt;p&gt;The offending javadoc warning in the latest patch:&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;exec&amp;#93;&lt;/span&gt;   &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java:2326: warning - Tag @see: can&apos;t find removeWatches(String, Watcher, WatcherType, boolean) in org.apache.zookeeper.ZooKeeper&lt;/p&gt;

&lt;p&gt;The offending line seem to be this: @see #removeWatches(String, Watcher, WatcherType, boolean)&lt;/p&gt;

&lt;p&gt;Just a guess: wouldn&apos;t it be @see &lt;/p&gt;
{@link #removeWatches(String, Watcher, WatcherType, boolean)}
&lt;p&gt; ?&lt;/p&gt;

&lt;p&gt;Edward&lt;/p&gt;</comment>
                            <comment id="13798150" author="hadoopqa" created="Thu, 17 Oct 2013 18:39:20 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12608969/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12608969/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1532152.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1704//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13798159" author="rakeshr" created="Thu, 17 Oct 2013 18:43:26 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro&quot; class=&quot;user-hover&quot; rel=&quot;eribeiro&quot;&gt;Edward Ribeiro&lt;/a&gt; I&apos;ve just modified the patch and now it works fine.&lt;/p&gt;</comment>
                            <comment id="13798800" author="rakeshr" created="Fri, 18 Oct 2013 05:53:59 +0100"  >&lt;p&gt;I&apos;d appreciate any suggestions or comments about the fix and test cases. Thanks&lt;/p&gt;</comment>
                            <comment id="13814537" author="rakeshr" created="Wed, 6 Nov 2013 02:22:46 +0000"  >&lt;p&gt;Please see review request : &lt;a href=&quot;https://reviews.apache.org/r/15256/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/15256/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13839447" author="phunt" created="Wed, 4 Dec 2013 22:56:19 +0000"  >&lt;p&gt;I&apos;ve seen this issue reported by a few users now (around the resourcing issue). I think we should prioritize inclusion for 3.5.0. I&apos;ll see if I can spend some cycles on it. Thanks Rakesh.&lt;/p&gt;

&lt;p&gt;One thing I notice, it would be nice to add support to the command line shell for removing watches. Makes it easier to do ad-hoc testing.&lt;/p&gt;</comment>
                            <comment id="13839821" author="rakeshr" created="Thu, 5 Dec 2013 05:07:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt; Thank you for the interest. I created separate JIRA &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1830&quot; title=&quot;Support command line shell for removing watches&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1830&quot;&gt;&lt;del&gt;ZOOKEEPER-1830&lt;/del&gt;&lt;/a&gt; to discuss and implement the same. IMHO this will help everyone to make the patches simple and easy to implement/review.&lt;/p&gt;</comment>
                            <comment id="13839854" author="phunt" created="Thu, 5 Dec 2013 06:08:55 +0000"  >&lt;p&gt;Good idea. I&apos; d suggest a similar sub-jira for doc changes. (add remove watches detail to the programmer guide?)&lt;/p&gt;</comment>
                            <comment id="13850673" author="phunt" created="Tue, 17 Dec 2013 17:05:38 +0000"  >&lt;p&gt;I&apos;m planning to commit this soon, would be good to get more eyes on this patch as it&apos;s new functionality. Anyone? Speak now....&lt;/p&gt;</comment>
                            <comment id="13850816" author="rgs" created="Tue, 17 Dec 2013 19:33:56 +0000"  >&lt;p&gt;In:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+        private boolean removeWatches(Map&amp;lt;String, Set&amp;lt;Watcher&amp;gt;&amp;gt; watches,
+                Watcher watcher, String path, boolean local, int rc,
+                Set&amp;lt;Watcher&amp;gt; removedWatchers) {
+            // Check whether watches list contains the given watcher
+            boolean containsWatcher = contains(path, watcher, watches);
+            if (!containsWatcher) {
+                // Watcher not found for the given params
+                return false;
+            }
+
+            // Couldn&apos;t remove locally as it doesn&apos;t sees a success from server
+            if (!local &amp;amp;&amp;amp; watcher == null &amp;amp;&amp;amp; rc != Code.OK.intValue()) {
+                return containsWatcher;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;shouldn&apos;t it return false since it couldn&apos;t remove in the server? At that point containsWatcher is true...&lt;/p&gt;

&lt;p&gt;The next part looks wrong too:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+            } else if (!local &amp;amp;&amp;amp; rc != Code.OK.intValue()) {
+                Set&amp;lt;Watcher&amp;gt; watchers = watches.get(path);
+                // Couldn&apos;t remove locally as it doesn&apos;t sees a success from
+                // server
+                if (watchers.size() == 1) {
+                    return containsWatcher;
+                } else if (watchers.remove(watcher)) {
+                    // found path watcher
+                    removedWatchers.add(watcher);
+                    return containsWatcher;
+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why would watchers.size() == 1 imply that it was that the watches were removed?&lt;/p&gt;

&lt;p&gt;Also, would it make since if they API also allowed to remove all watchers for a given path? Right now it&apos;s all or nothing:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+    /**
+     * For the given znode path, removes the specified watcher.
+     * 
+     * &amp;lt;p&amp;gt;
+     * If watcher is null all watchers for the given watcherType will be
+     * removed, Otherwise only the specified watcher corresponding to the
+     * watcherType will be removed.
+     * &amp;lt;p&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think in that case it should be &lt;b&gt;for that path&lt;/b&gt;. Or, alternatively, if path is &quot;&quot; or null then go ahead and remove all watchers regardless of their path. It also makes the documentation more precise (it starts by saying &quot;for a given znode path&quot; and then it says it can actually remove all watchers regardless). &lt;/p&gt;

&lt;p&gt;The change would be minimal. &lt;/p&gt;</comment>
                            <comment id="13850825" author="rgs" created="Tue, 17 Dec 2013 19:49:34 +0000"  >&lt;p&gt;One more nit in private boolean removeWatches: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+                if (watcher == null) {
+                    Set&amp;lt;Watcher&amp;gt; pathWatchers = watches.remove(path);
+                    if (pathWatchers != null) {
+                        // found path watchers
+                        removedWatchers.addAll(pathWatchers);
+                    }
+                } else {
+                    Set&amp;lt;Watcher&amp;gt; watchers = watches.get(path);
+                    if (watcher != null) {
+                        if (watchers.remove(watcher)) {
+                            // found path watcher
+                            removedWatchers.add(watcher);
+                        }
+                    }
+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the &quot;if (watcher != null) {&quot; check is superfluous since we are already in the else block for watcher == null. It affects readability so I would drop it.  &lt;/p&gt;</comment>
                            <comment id="13858295" author="hadoopqa" created="Sun, 29 Dec 2013 09:37:41 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12620761/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12620761/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1553693.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1867//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13858297" author="rakeshr" created="Sun, 29 Dec 2013 10:12:25 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; for the comments and your time. I&apos;ve updated latest patch by addressing these comments. Could you please have a look at it.&lt;/p&gt;

&lt;p&gt;I&apos;ve done the following changes in the patch:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Modified ZKWatchManager#contains logic.&lt;/li&gt;
	&lt;li&gt;Splitted the contains check &amp;amp; removal logic into separate methods for better readability.&lt;/li&gt;
	&lt;li&gt;Done removal of the watcher after getting the server response. In previous patch it was removing and not sending to the server in few conditions. Now api will do basic contains check and send the request to the server, then waiting for the response. Upon receiving the response, it will go for watcher removal.&lt;/li&gt;
	&lt;li&gt;Added one test case for chroot scenario&lt;/li&gt;
	&lt;li&gt;Added few logs in the test cases, for marking the steps.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13867138" author="rgs" created="Thu, 9 Jan 2014 22:00:05 +0000"  >&lt;p&gt;Sorry for the late response, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;. Thanks for the update. Here are a few more comments:&lt;/p&gt;

&lt;p&gt;Perf nit in src/java/main/org/apache/zookeeper/ClientCnxn.java:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+            Set&amp;lt;Watcher&amp;gt; watchers = new HashSet&amp;lt;Watcher&amp;gt;();
+            if (materializedWatchers == null) {
+                // materialize the watchers based on the event
+                watchers = watcher.materialize(event.getState(),
+                        event.getType(), event.getPath());
+            } else {
+                watchers.addAll(materializedWatchers);
+            }
+            WatcherSetEventPair pair = new WatcherSetEventPair(watchers, event);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If materializedWatchers == null then calling watcher.materialize() will give you a new Set of watchers (overriding the previously instantiated HashSet). So you should only instantiate new HashSet&amp;lt;Watcher&amp;gt;() inside the else clause. &lt;/p&gt;

&lt;p&gt;In src/java/main/org/apache/zookeeper/ZooKeeper.java:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+        public Map&amp;lt;EventType, Set&amp;lt;Watcher&amp;gt;&amp;gt; removeWatcher(String clientPath,
+                Watcher watcher, WatcherType watcherType, boolean local, int rc)
+                throws KeeperException {
....
+            removedWatchers
+                    .put(EventType.ChildWatchRemoved, childWatchersToRem);
....
+            case Any: {
+                removedWatchers.put(EventType.ChildWatchRemoved,
+                        childWatchersToRem);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The call to removedWatchers.put(EventType.ChildWatchRemoved, childWatchersToRem) inside the Any switch clause doesn&apos;t seem to be needed, no?&lt;/p&gt;

&lt;p&gt;Nit in:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+    public void removeWatches(String path, Watcher watcher,
+            WatcherType watcherType, boolean local)
+            throws InterruptedException, KeeperException {
+        final String clientPath = path;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;why is assigning to clientPath needed? In the previous comments the path param is referred as clientPath anyway, maybe renamed it?&lt;/p&gt;

&lt;p&gt;In:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+        // Validating the existence of wacher, because there could be a case
+        // where the watcher might be triggered just before receiving the remove
+        // watch response. 
+        try {
+            watchManager.containsWatcher(clientPath, watcher, watcherType);
+        } catch (NoWatcherException nwe) {
+            LOG.error(&quot;Failed to find watcher!&quot;, nwe);
+            cb.processResult(nwe.code().intValue(), clientPath, ctx);
+            return;
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think we should just throw NoWatcherException otherwise how can the caller of this (async) method know if it failed to be scheduled? I think this is how other async methods behave when the remote call fails to be issued. They either raise an exception or return an error code instead of having their callback being called. The callback should only be called if the remote call was performed (so then it only gets server generated errors, if any).&lt;/p&gt;

&lt;p&gt;Besides these points, I am happy to give it a +1. Hope to see this merged soon! Awesome work. &lt;/p&gt;</comment>
                            <comment id="13868078" author="rakeshr" created="Fri, 10 Jan 2014 18:21:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; thanks again for the review and comments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think we should just throw NoWatcherException otherwise how can the caller of this (async) method know if it failed to be scheduled? I think this is how other async methods behave when the remote call fails to be issued. They either raise an exception or return an error code instead of having their callback being called. The callback should only be called if the remote call was performed (so then it only gets server generated errors, if any).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In that case, here we should have throws KeeperException clause for the removeWatch async api. But I couldn&apos;t see any such async api which is throwing KeeperException. This validation is just to avoid server call and do fail-fast. I think this will not see as a deviation for the async behavior. If you agree with my point, I&apos;ll leave this part alone and fix other comments ?&lt;/p&gt;</comment>
                            <comment id="13868160" author="rgs" created="Fri, 10 Jan 2014 19:19:20 +0000"  >&lt;p&gt;Thanks for the quick reply &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&apos;s an asynchronous method that throws KeeperException:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java#L1641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java#L1641&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wonder what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj&quot; class=&quot;user-hover&quot; rel=&quot;fpj&quot;&gt;Flavio Junqueira&lt;/a&gt; think. My expectation at least is that the callback doesn&apos;t get call when an async method fails before the RPC is issued.  But you are right that currently it isn&apos;t, consistently, the case for all of the async methods in the client API. &lt;/p&gt;</comment>
                            <comment id="13868320" author="fournc" created="Fri, 10 Jan 2014 21:22:43 +0000"  >&lt;p&gt;That method shouldn&apos;t throw either of those exceptions, as none of the things it is calling will throw any of those exceptions. So reconfig is in error here.&lt;/p&gt;</comment>
                            <comment id="13868351" author="rgs" created="Fri, 10 Jan 2014 21:49:26 +0000"  >&lt;p&gt;Ah, good catch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc&quot; class=&quot;user-hover&quot; rel=&quot;fournc&quot;&gt;Camille Fournier&lt;/a&gt; - mind filing a bug for that?&lt;/p&gt;

&lt;p&gt;Though it still feels weird that the callback would be call from within the async dispatcher method. A bit tangential but the C implementation does error out early when it can&apos;t dispatch async requests (as opposed to calling the callback), i.e.: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/zookeeper/blob/trunk/src/c/src/zookeeper.c#L3063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/zookeeper/blob/trunk/src/c/src/zookeeper.c#L3063&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I guess it is also true that this is the first async method that actually does some real client side validation before issuing the call? It will probably feel more natural for the caller to know right away that the call wasn&apos;t dispatched, as opposed to be informed through the callback.&lt;/p&gt;

&lt;p&gt;But this is minor so if everyone else is happy it would be very nice to see this merged!&lt;/p&gt;</comment>
                            <comment id="13868357" author="phunt" created="Fri, 10 Jan 2014 21:53:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;So reconfig is in error here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Looks like it to me too. I don&apos;t see any other async calls using it. Must have sneaked in with reconfig by accident.&lt;/p&gt;

&lt;p&gt;I&apos;m back from vacation now, so I&apos;ll try driving this again. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Based on the most recent comments are there any other changes pending? Or should we consider this ready?&lt;/p&gt;</comment>
                            <comment id="13868360" author="phunt" created="Fri, 10 Jan 2014 21:54:53 +0000"  >&lt;p&gt;FYI: while I was on vacation I had this patch (well an earlier one) running continuously on my personal CI boxes and I didn&apos;t see any issue attributable to these changes. So from a units (new and existing) it looks pretty solid to me.&lt;/p&gt;

&lt;p&gt;I&apos;ll update my setup to this latest patch now.&lt;/p&gt;</comment>
                            <comment id="13868662" author="rakeshr" created="Sat, 11 Jan 2014 05:27:48 +0000"  >&lt;p&gt;Thanks everyone for the comments&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Ah its really good finding. Please file a JIRA for reconfig correction. This feature is marked for 3.4.5 release, I feel its the right time to discuss and come to a conclusion.&lt;/p&gt;

&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;, I&apos;ll upload latest patch addressing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; comments.&lt;/p&gt;</comment>
                            <comment id="13868663" author="rakeshr" created="Sat, 11 Jan 2014 05:30:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;This feature is marked for 3.4.5 release&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Please excuse, small correction to my previous comment. Dynamic reconfig feature &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-107&quot; title=&quot;Allow dynamic changes to server cluster membership&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-107&quot;&gt;&lt;del&gt;ZOOKEEPER-107&lt;/del&gt;&lt;/a&gt; is marked for 3.5.0 release&lt;/p&gt;</comment>
                            <comment id="13868723" author="rakeshr" created="Sat, 11 Jan 2014 10:35:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;why is assigning to clientPath needed? In the previous comments the path param is referred as clientPath anyway, maybe renamed it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I modified the javadoc path param and now in sync with other api implementation.&lt;/p&gt;

&lt;p&gt;Attached latest patch addressing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; comments. Please have a look at the patch.&lt;/p&gt;</comment>
                            <comment id="13868738" author="hadoopqa" created="Sat, 11 Jan 2014 11:09:47 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12622496/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12622496/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1556976.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1875//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13868843" author="phunt" created="Sat, 11 Jan 2014 18:19:54 +0000"  >&lt;p&gt;Ok. I have this running in a continuous loop on my CI env.&lt;/p&gt;</comment>
                            <comment id="13868873" author="rgs" created="Sat, 11 Jan 2014 20:57:20 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1860&quot; title=&quot;Async versions of reconfig don&amp;#39;t actually throw KeeperException nor InterruptedException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1860&quot;&gt;&lt;del&gt;ZOOKEEPER-1860&lt;/del&gt;&lt;/a&gt; to cleanup reconfig. &lt;/p&gt;</comment>
                            <comment id="13870405" author="phunt" created="Tue, 14 Jan 2014 05:27:41 +0000"  >&lt;p&gt;I&apos;m afraid something is not quite right. I created a very simple sanity check which seems to be failing. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Please check my logic/code (note: I have some time this week and I&apos;d like to keep the momentum going on this one.)&lt;/p&gt;

&lt;p&gt;In the first case the code I created will create a watch by calling exists on a non-existent node (call it &quot;pre-removewatches&quot;). It does this in a loop. I expect the memory to become exhausted on the client. In the second case I immediately call &quot;removewatch&quot; on the just-set-watch. In the second case I expect that client to run forever (essentially). However in both cases the clients crash. I am using the latest patch applied to trunk codebase for this testing. (notice the second case does run a bit longer than the first, but still, based on the code I have it should run ess. forever):&lt;/p&gt;

&lt;p&gt;first case:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;USE_REMOVE_CALL:false
maxIter:100000
maxLoops:10000
Available free mem is 14614744
j:0
Available free mem is 12184072
j:1
Available free mem is 8827120
j:2
Available free mem is 6141912
j:3
Available free mem is 2600160
j:4
&amp;lt;OOMException&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;second case:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;USE_REMOVE_CALL:true
maxIter:100000
maxLoops:10000
Available free mem is 14613488
j:0
Available free mem is 12497584
j:1
Available free mem is 9470512
j:2
Available free mem is 7167880
j:3
Available free mem is 3841616
j:4
Available free mem is 854728
j:5
&amp;lt;OOMException&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ve posted my code to github, it&apos;s pretty simple. see:&lt;br/&gt;
&lt;a href=&quot;https://github.com/phunt/zookeeper-removewatch-ex/blob/master/src/test/java/org/phunt/zookeeper/removewatchexample/ExerciseRemoveWatchTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/phunt/zookeeper-removewatch-ex/blob/master/src/test/java/org/phunt/zookeeper/removewatchexample/ExerciseRemoveWatchTest.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice the boolean USE_REMOVE_CALL at the top of the class. You can replicate the two output scenarios above by setting this to false (no remove) and true (call remove). Then running the test via &quot;mvn test&quot; at the toplevel. (note you need to install the 3.5.0-SNAPSHOT artifacts in your local maven cache, you can do this by running &quot;ant package&quot; in ZK and copying the resulting artifacts from the build subdir dist-maven directory into your .m2 repository)&lt;/p&gt;

&lt;p&gt;Does my code make sense? It seems to me that given we&apos;re calling exists (on non-existent node), setting a watch, then immediately removing the watch, that the code should run w/o running out of memory.&lt;/p&gt;

&lt;p&gt;I suspect the issue is that we are setting up some data structures to hold the watch information, but not fully clearing that data when removing the watch&lt;/p&gt;

&lt;p&gt;any ideas? &lt;/p&gt;</comment>
                            <comment id="13870437" author="rakeshr" created="Tue, 14 Jan 2014 06:25:44 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt; for the scenario. Looks like test code is fine and I will try exeucte the same in my env.&lt;/p&gt;</comment>
                            <comment id="13870522" author="rakeshr" created="Tue, 14 Jan 2014 08:30:06 +0000"  >&lt;p&gt;Awsome test. &lt;/p&gt;

&lt;p&gt;I think I found one leak, where the map is growing even after the watcher removal, like &amp;lt;&quot;/0000000000/e-0000000000-0000000000&quot;, []&amp;gt; with empty watcher list.&lt;/p&gt;

&lt;p&gt;In the test case, exists call is keep on adding pre-watchers to the newly formed non-existed path as shown below:&lt;br/&gt;
/0000000000/e-0000000000-0000000000&lt;br/&gt;
/0000000000/e-0000000000-0000000001&lt;br/&gt;
/0000000000/e-0000000000-0000000002&lt;br/&gt;
/0000000000/e-0000000000-0000000003&lt;br/&gt;
/0000000000/e-0000000000-0000000004&lt;br/&gt;
/0000000000/e-0000000000-0000000005&lt;/p&gt;

&lt;p&gt;private final Map&amp;lt;String, Set&amp;lt;Watcher&amp;gt;&amp;gt; existWatches = new HashMap&amp;lt;String, Set&amp;lt;Watcher&amp;gt;&amp;gt;();&lt;br/&gt;
When I observe the &apos;existWatches&apos; datastructure, on every zk.exists call, it is adding one entry like: &lt;/p&gt;
{/0000000000/e-0000000000-0000000000=[org.apache.zookeeper.ExerciseRemoveWatchTest$IgnoringWatcher@10e4fd7]}

&lt;p&gt;While removing I had missed one condition where I removed the watcher and but leaving an entry in the map with empty watcher list. This is growing and is causing the trouble.&lt;/p&gt;
{/0000000000/e-0000000000-0000000000=[]}
{/0000000000/e-0000000000-0000000001=[]}
{/0000000000/e-0000000000-0000000002=[]}

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
I have to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the map cleanup when &apos;watchers.size() &amp;lt;= 0&apos; in ZKWatchManager#removeWatches
                    Set&amp;lt;Watcher&amp;gt; watchers = pathVsWatcher.get(path);
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (watchers != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (watchers.remove(watcher)) {
                            &lt;span class=&quot;code-comment&quot;&gt;// found path watcher
&lt;/span&gt;                            removedWatchers.add(watcher);
                            &lt;span class=&quot;code-comment&quot;&gt;// cleanup &amp;lt;path vs watchlist&amp;gt;
&lt;/span&gt;                            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (watchers.size() &amp;lt;= 0) {
                                pathVsWatcher.remove(path);
                            }
                            success = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
                        }
                    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13870961" author="phunt" created="Tue, 14 Jan 2014 17:47:07 +0000"  >&lt;p&gt;We just need to be careful that the concurrency control is such that no one can have one of the &quot;watchers&quot; objects in hand, about to add an entry to it, while you are checking the size. (I haven&apos;t checked for this, I&apos;m just saying we need to verify this can&apos;t happen)&lt;/p&gt;</comment>
                            <comment id="13871913" author="rakeshr" created="Wed, 15 Jan 2014 10:40:12 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;, could you please look at the latest patch. I ran the same test case in my env and seems ok till now. &lt;/p&gt;</comment>
                            <comment id="13871942" author="hadoopqa" created="Wed, 15 Jan 2014 11:20:46 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12623108/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12623108/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1557875.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1886//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13872033" author="rakeshr" created="Wed, 15 Jan 2014 13:16:17 +0000"  >&lt;p&gt;I couldn&apos;t see failures in the previous build.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
0 failures (&#177;0)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Attached new patch where I reduced timeout to improve test execution time.&lt;/p&gt;</comment>
                            <comment id="13872084" author="hadoopqa" created="Wed, 15 Jan 2014 13:54:52 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12623135/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12623135/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1557875.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1888//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13872308" author="phunt" created="Wed, 15 Jan 2014 17:38:22 +0000"  >&lt;p&gt;Looks like the failure was on the c tests (see the console, unfortunately jenkins doesn&apos;t know how to report this in the test report page)&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;     [exec]      [exec] Zookeeper_watchers::testChildWatcher1 : elapsed 105 : OK
     [exec]      [exec] Zookeeper_watchers::testChildWatcher2 : elapsed 54 : OK
     [exec]      [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/c/tests/TestReconfig.cc:183: Assertion: equality assertion failed [Expected: 1, Actual  : 0]
     [exec]      [exec] Failures !!!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don&apos;t think it&apos;s related to this though.&lt;/p&gt;</comment>
                            <comment id="13872334" author="rgs" created="Wed, 15 Jan 2014 18:01:35 +0000"  >&lt;p&gt;Sorry guys to distract you from fixing the leak and the tests but there&apos;s one small code smell (imho) in the last version of the patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+                            if (watchers.size() &amp;lt;= 0) {
+                                pathVsWatcher.remove(path);
+                            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;watchers.size() == 0 should suffice, &lt;b&gt;if&lt;/b&gt; (as pointed out by Patrick) all our access around watchers is synchronized. We don&apos;t see to be enforcing that so we might have some races around that. &lt;/p&gt;</comment>
                            <comment id="13872346" author="phunt" created="Wed, 15 Jan 2014 18:13:50 +0000"  >&lt;p&gt;Ok, thanks Rakesh. I have the latest running on my CI test harness again.&lt;/p&gt;</comment>
                            <comment id="13872348" author="phunt" created="Wed, 15 Jan 2014 18:15:07 +0000"  >&lt;p&gt;The latest patch looks like it fixed the issue I client mem issue I mentioned:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;USE_REMOVE_CALL:true
maxIter:100000
maxLoops:10000
Available free mem is 14615920
j:0
Available free mem is 15589384
j:1
Available free mem is 15582608
j:2
Available free mem is 15589824
j:3
Available free mem is 15565192
j:4
Available free mem is 15589824
j:5
Available free mem is 15589824
j:6
Available free mem is 15589824
j:7
Available free mem is 15581544
j:8
Available free mem is 15589824
j:9
Available free mem is 15589824
j:10
Available free mem is 15589824
j:11
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nice!&lt;/p&gt;</comment>
                            <comment id="13872354" author="phunt" created="Wed, 15 Jan 2014 18:16:35 +0000"  >&lt;p&gt;Please feel free to update the patch. &lt;/p&gt;

&lt;p&gt;Can you both (Rakesh/Raul) also code review the synchronization around that code?&lt;/p&gt;</comment>
                            <comment id="13872483" author="phunt" created="Wed, 15 Jan 2014 19:31:45 +0000"  >&lt;p&gt;I also tried running the same experiment while monitoring the free memory of the ZK Server. I started a standalone zk server with 15m max/initial memory and used jconsole to monitor heap usage while running the zookeeper-removewatches-ex client. With the remove watch call the heap stayed flat over time, 30 minutes or so, after an initial warm up period. (w/o the remove call the server quickly fails with oom exception)&lt;/p&gt;

&lt;p&gt;Today I plan to add a few more types of remove call scenarios to my simple client and verify things are handled properly, however things look good at the moment. I&apos;ll try and see if I can dig up my copy of yourkit as well.&lt;/p&gt;

&lt;p&gt;Only other thing I see left is to finalize the code review feedback (I hope to do additional code review later today). Anyone else that can help with this would be appreciated.&lt;/p&gt;</comment>
                            <comment id="13872964" author="rakeshr" created="Thu, 16 Jan 2014 02:08:47 +0000"  >&lt;p&gt;Thanks again &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt&quot; class=&quot;user-hover&quot; rel=&quot;phunt&quot;&gt;Patrick Hunt&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs&quot; class=&quot;user-hover&quot; rel=&quot;rgs&quot;&gt;Raul Gutierrez Segales&lt;/a&gt; for the great help.&lt;/p&gt;

&lt;p&gt;Sure, I&apos;ll once again go through the code closely and see the synchronizations/improvements(if any).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;watchers.size() == 0 should suffice, if (as pointed out by Patrick) all our access around watchers is synchronized. We don&apos;t see to be enforcing that so we might have some races around that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Raul, Are you pointing me to see the synchronization of the newly added code. &lt;br/&gt;
The new logic included to fix the leak is already inside the synchronization block as shown below, so this part of the code is safer.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (existWatches) {
+                    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; removedDataWatcher = removeWatches(existWatches,
+                            watcher, clientPath, local, rc, dataWatchersToRem);
+                    removedWatcher |= removedDataWatcher;
+                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13873080" author="phunt" created="Thu, 16 Jan 2014 06:24:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr&quot; class=&quot;user-hover&quot; rel=&quot;rakeshr&quot;&gt;Rakesh R&lt;/a&gt; I think that Raul&apos;s point was/is that checking for less than zero is not necessary. My point was just a note for reviewers - that we need to ensure the concurrency is correct. (and I hear that you are saying that it is/should be)&lt;/p&gt;

&lt;p&gt;FYI my CI environment has been running all day with the latest patch, no issues so far.&lt;/p&gt;</comment>
                            <comment id="13874170" author="rgs" created="Thu, 16 Jan 2014 23:47:25 +0000"  >&lt;p&gt;I read this again and I am happy with this in terms of handling synchronization, so +1. Nice work. &lt;/p&gt;
</comment>
                            <comment id="13875309" author="phunt" created="Fri, 17 Jan 2014 22:07:50 +0000"  >&lt;p&gt;My code review looks good. Great job - including the number/scope of the tests!&lt;/p&gt;

&lt;p&gt;Actually the tests is where I saw my only nit feedback, the user of small values for SESSION_TIME_OUT and TIME_OUT will result in similar issues as I recently raised re slow/underprovisioned hardware. I&apos;d suggest you increase these (see the existing tests, they typically use org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT).&lt;/p&gt;

&lt;p&gt;If you submit a patch to address the timeout I&apos;m +1 and ready to commit.&lt;/p&gt;</comment>
                            <comment id="13876160" author="hadoopqa" created="Mon, 20 Jan 2014 05:26:49 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12623890/ZOOKEEPER-442.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12623890/ZOOKEEPER-442.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1558950.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1893//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13876183" author="rakeshr" created="Mon, 20 Jan 2014 06:36:12 +0000"  >&lt;p&gt;Sorry for the delay, I was travelling last few days.&lt;/p&gt;

&lt;p&gt;Thanks Raul/Patrick for the reviews. I have updated the patch by using the CONNECTION_TIMEOUT. &lt;/p&gt;

&lt;p&gt;TIME_OUT is operation timeout and now in latest patch it is CONNECTION_TIMEOUT/5. &lt;/p&gt;

&lt;p&gt;How the operation timeout is being used in the tests:&lt;br/&gt;
For example: &lt;br/&gt;
case #1 : Say user is expecting to remove only WatcherType.Children type. Now will wait for CONNECTION_TIMEOUT/5 to see the result of the removal operation.&lt;br/&gt;
case #2 : Say user is expecting to remove only WatcherType.Children type. Now after seeing successful removal of child watches, test is waiting for CONNECTION_TIMEOUT/5. After timeout test will verify that whether the call didn&apos;t touch any of the Data/Exists watches.&lt;/p&gt;

&lt;p&gt;If I increase this to a high value will affect the test execution time.  Are you agreeing to keep operation timeout as CONNECTION_TIMEOUT/5 milliseconds?&lt;/p&gt;</comment>
                            <comment id="13877058" author="phunt" created="Tue, 21 Jan 2014 01:09:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are you agreeing to keep operation timeout as CONNECTION_TIMEOUT/5 milliseconds?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sounds reasonable to me. Given you are using TIME_OUT in this way, perhaps you should use a lower value? On slow machines you might miss something, but generally you won&apos;t (regular speed machines you&apos;d catch any problems). I think this is an OK tradeoff if you want to do that.&lt;/p&gt;</comment>
                            <comment id="13877091" author="rakeshr" created="Tue, 21 Jan 2014 02:08:05 +0000"  >&lt;p&gt;yeah I understood it and I&apos;ll keep an eye on the tests. Hope you are OK with the latest patch.&lt;/p&gt;</comment>
                            <comment id="13880760" author="phunt" created="Fri, 24 Jan 2014 06:27:42 +0000"  >&lt;p&gt;Committed to trunk. Thanks Rakesh, Daniel, Raul, et. al. Great new feature!&lt;/p&gt;</comment>
                            <comment id="13880773" author="rakeshr" created="Fri, 24 Jan 2014 06:58:46 +0000"  >&lt;p&gt;Happy to see it. Thanks a lot Patrick, Daniel, Raul, Camille, Ribeiro, et. al  for the good support&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13881813" author="hudson" created="Sat, 25 Jan 2014 11:09:53 +0000"  >&lt;p&gt;SUCCESS: Integrated in ZooKeeper-trunk #2195 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/2195/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/2195/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-442&quot; title=&quot;need a way to remove watches that are no longer of interest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-442&quot;&gt;&lt;del&gt;ZOOKEEPER-442&lt;/del&gt;&lt;/a&gt;. need a way to remove watches that are no longer of interest (Rakesh R, Daniel G&#243;mez Ferro via phunt) (phunt: &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1560904&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1560904&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/KeeperException.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/WatchDeregistration.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/Watcher.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooDefs.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/Request.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/WatchManager.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZKDatabase.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/RemoveWatchesTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/zookeeper.jute&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12607796" name="Remove Watch API.pdf" size="310762" author="rakeshr" created="Thu, 10 Oct 2013 13:46:22 +0100"/>
                            <attachment id="12623890" name="ZOOKEEPER-442.patch" size="69946" author="rakeshr" created="Mon, 20 Jan 2014 04:47:04 +0000"/>
                            <attachment id="12623135" name="ZOOKEEPER-442.patch" size="70163" author="rakeshr" created="Wed, 15 Jan 2014 13:14:25 +0000"/>
                            <attachment id="12623108" name="ZOOKEEPER-442.patch" size="69955" author="rakeshr" created="Wed, 15 Jan 2014 10:35:38 +0000"/>
                            <attachment id="12622496" name="ZOOKEEPER-442.patch" size="63432" author="rakeshr" created="Sat, 11 Jan 2014 10:30:13 +0000"/>
                            <attachment id="12620761" name="ZOOKEEPER-442.patch" size="63824" author="rakeshr" created="Sun, 29 Dec 2013 08:37:04 +0000"/>
                            <attachment id="12608969" name="ZOOKEEPER-442.patch" size="59849" author="rakeshr" created="Thu, 17 Oct 2013 18:01:25 +0100"/>
                            <attachment id="12608862" name="ZOOKEEPER-442.patch" size="59893" author="rakeshr" created="Thu, 17 Oct 2013 03:10:00 +0100"/>
                            <attachment id="12608778" name="ZOOKEEPER-442.patch" size="59881" author="rakeshr" created="Wed, 16 Oct 2013 19:57:53 +0100"/>
                            <attachment id="12501290" name="ZOOKEEPER-442.patch" size="44493" author="dferro" created="Fri, 28 Oct 2011 14:19:39 +0100"/>
                            <attachment id="12501078" name="ZOOKEEPER-442.patch" size="39390" author="dferro" created="Thu, 27 Oct 2011 12:30:39 +0100"/>
                            <attachment id="12501075" name="ZOOKEEPER-442.patch" size="39440" author="dferro" created="Thu, 27 Oct 2011 12:07:19 +0100"/>
                            <attachment id="12501066" name="ZOOKEEPER-442.patch" size="40834" author="dferro" created="Thu, 27 Oct 2011 11:07:02 +0100"/>
                            <attachment id="12501063" name="ZOOKEEPER-442.patch" size="38547" author="dferro" created="Thu, 27 Oct 2011 10:53:17 +0100"/>
                            <attachment id="12500857" name="ZOOKEEPER-442.patch" size="40620" author="dferro" created="Wed, 26 Oct 2011 11:21:55 +0100"/>
                            <attachment id="12499656" name="ZOOKEEPER-442.patch" size="28071" author="dferro" created="Wed, 19 Oct 2011 10:44:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Jun 2009 18:27:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>69474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy5xs7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>68466</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>