<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:48:07 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-465/ZOOKEEPER-465.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-465] Ledger size in bytes</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-465</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;It is currently easy to know how many entries a ledger has, but there is no easy way to know the total number of bytes in a ledger. The idea of this jira is to add a method that gives the number of bytes in a closed ledger. My current idea is to simply have the writer counting the number of bytes written and store it to ZooKeeper.  &lt;/p&gt;</description>
                <environment></environment>
        <key id="12430280">ZOOKEEPER-465</key>
            <summary>Ledger size in bytes</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fpj">Flavio Junqueira</assignee>
                                    <reporter username="fpj">Flavio Junqueira</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Jul 2009 21:24:41 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:27 +0000</updated>
                            <resolved>Thu, 17 Feb 2011 21:53:48 +0000</resolved>
                                                    <fixVersion>3.3.3</fixVersion>
                    <fixVersion>3.4.0</fixVersion>
                                    <component>contrib-bookkeeper</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12972590" author="dhruba" created="Fri, 17 Dec 2010 18:50:24 +0000"  >&lt;p&gt;This will ve very helpful for many applications. I am writing an application that needs this support. if somebody already has a patch to put in this API to bookkeeper, I would appreciate that a lot. Otherwise, I will do it myself in the near future and submit a patch.&lt;/p&gt;</comment>
                            <comment id="12973333" author="dhruba" created="Mon, 20 Dec 2010 19:39:52 +0000"  >&lt;p&gt;Please pardon my ignorance, but your approach works because nobody can append new entries to a ledger after it is closed, right?&lt;/p&gt;

&lt;p&gt;Also, what will be the semantics of a concurrent reader? For example, if process A is writing to a ledger while at the same time another process B wants to find the length of the ledger, Is this possible?&lt;/p&gt;</comment>
                            <comment id="12973334" author="dhruba" created="Mon, 20 Dec 2010 19:40:44 +0000"  >&lt;p&gt;&amp;gt; My current idea is to simply have the writer counting the number of bytes written and store it to ZooKeeper&lt;/p&gt;

&lt;p&gt;Does this mean that every addEntry call to the ledger will result in an additional zk call to update the ledger length?&lt;/p&gt;</comment>
                            <comment id="12973395" author="fpj" created="Mon, 20 Dec 2010 22:43:25 +0000"  >&lt;p&gt;Hi Dhruba, When I wrote the description, I think I was referring to writing to ZooKeeper once we close a ledger, so we wouldn&apos;t have to pay the price of a ZooKeeper update upon each addEntry. However, thinking again about the problem, this approach is not fault tolerant. If the client writer crashes before closing and the byte count is volatile, then we will lose it. &lt;/p&gt;

&lt;p&gt;One way I see to overcome this problem is having each bookie keep the byte count for its ledger fragment. Given the byte count B for a ledger fragment, we can obtain an estimate of the total number by computing (B * n/r), where n is the number of bookies storing the ledger and r is the replication factor of each entry. This last formula comes from the observation that each bookie stores r/n entries of a ledger. &lt;/p&gt;

&lt;p&gt;This approach, however, does not provide a good estimate if the length of entries varies significantly. A less efficient approach that doesn&apos;t have the imbalance problem is reading the byte counts from all bookies, adding them up, and dividing by the replication factor. This operation will only complete if no bookie is faulty. In the case we have a faulty bookie, we have a procedure to recover the ledger fragments of a faulty bookie.&lt;/p&gt;

&lt;p&gt;Assuming that there are bookies that have crashed and their fragments haven&apos;t been replicated to new bookies, the best I can think of at this point is taking the average over the bookies that are up and performing the same computation above.&lt;/p&gt;

&lt;p&gt;Any other option I&apos;m missing? &lt;/p&gt;</comment>
                            <comment id="12973802" author="dhruba" created="Tue, 21 Dec 2010 18:29:30 +0000"  >&lt;p&gt;Maybe a brain-dead idea: but can we write the current size of the ledger along with each entry in the ledger? So, if an application wants to find the size of a ledger, the system can internally read the last entry in the ledger and extract the length of the ledger from it.&lt;/p&gt;</comment>
                            <comment id="12973808" author="fpj" created="Tue, 21 Dec 2010 18:34:56 +0000"  >&lt;p&gt;That&apos;s a good approach. I was trying to avoid the overhead of adding a long to every entry, but it surely works. &lt;/p&gt;
</comment>
                            <comment id="12973844" author="mahadev" created="Tue, 21 Dec 2010 19:44:57 +0000"  >&lt;p&gt;+1, thats a nice idea. Is this a big change flavio? &lt;/p&gt;</comment>
                            <comment id="12973846" author="mahadev" created="Tue, 21 Dec 2010 19:45:30 +0000"  >&lt;p&gt;Marking it for 3.3.3 to see if we can have this in the next release to let folks use it.&lt;/p&gt;</comment>
                            <comment id="12974126" author="fpj" created="Wed, 22 Dec 2010 09:40:01 +0000"  >&lt;p&gt;For Dhruba&apos;s proposal, the changes would be concentrated on the DigestManager class. &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;To add the timestamp to each entry, we would have to do it here: DigestManager.computeDigestAndPackageForSending().&lt;/li&gt;
	&lt;li&gt;To remove the timestamp, we would need to modify DigestManager.verifyDigestAndReturnData().&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;One thing I noticed is that we are using this constant 24 all over the place in the DigestManager class, and it is 24 because we currently add 3 longs to an entry. It might be a good idea in this patch to name that constant and use the name instead of the value directly.  &lt;/p&gt;</comment>
                            <comment id="12975608" author="dhruba" created="Tue, 28 Dec 2010 19:47:07 +0000"  >&lt;p&gt;&amp;gt; can we write the current size of the ledger along with each entry in the ledger?&lt;/p&gt;

&lt;p&gt;This might not work very well if there are multiple clients writing to the same ledger concurrently, especially because the Bookies do not keep state for the clients. am i understanding it right?&lt;/p&gt;</comment>
                            <comment id="12975616" author="fpj" created="Tue, 28 Dec 2010 20:08:11 +0000"  >&lt;p&gt;We assume that there is a single client writing to a ledger. Do you have a use case for multiple clients writing to the same ledger? You may consider instead having multiple ledgers being written concurrently, using the same set of bookies. We have tested with up to 20,000 concurrent ledgers and we didn&apos;t notice a performance penalty on the aggregate performance. I&apos;m not sure if it suits your case, though.&lt;/p&gt;</comment>
                            <comment id="12975619" author="dhruba" created="Tue, 28 Dec 2010 20:27:05 +0000"  >&lt;p&gt;In my case, a ledger will have only one writer. Then we are still good with the approach where the client can maintain the current ledger size?&lt;/p&gt;

&lt;p&gt;Just a hypothetical question: does Bookkeeper make any assumptions that there is only one writer to a ledger? if so, then what happens if a second client starts writing to the same ledger, will it get an error?&lt;/p&gt;</comment>
                            <comment id="12975921" author="fpj" created="Wed, 29 Dec 2010 21:40:16 +0000"  >&lt;p&gt;To write to a ledger, a client must first create the ledger, and only one client can create a ledger with a given identifier. We enforce this behavior by using the sequence flag in ZooKeeper when creating the znode that will represent the newly created ledger. Bookies, however, do not enforce that a single client writes to a ledger, so we rely upon the behavior of the client.&lt;/p&gt;</comment>
                            <comment id="12978443" author="fpj" created="Thu, 6 Jan 2011 18:38:22 +0000"  >&lt;p&gt;Attaching a functional patch, including tests. The only part still missing is documentation, but otherwise it should be fine.&lt;/p&gt;</comment>
                            <comment id="12978481" author="dhruba" created="Thu, 6 Jan 2011 19:59:11 +0000"  >&lt;p&gt;Thanks Flavio for doing this. If it is not too much work for you, can you pl upload this patch in reviewboard, just makes it easier to review? &lt;a href=&quot;http://reviews.apache.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://reviews.apache.org/&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="12978562" author="fpj" created="Thu, 6 Jan 2011 23:10:28 +0000"  >&lt;p&gt;I&apos;m not being able to create a new review request and it seems to be due to moving the repository recently. I have reported to infra, so let&apos;s see what they say. &lt;/p&gt;</comment>
                            <comment id="12985842" author="breed" created="Mon, 24 Jan 2011 17:46:55 +0000"  >&lt;p&gt;sorry it took so long to review. i&apos;ve added some notes at &lt;a href=&quot;https://reviews.apache.org/r/234/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/234/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12989141" author="fpj" created="Tue, 1 Feb 2011 10:06:36 +0000"  >&lt;p&gt;This patch addresses Ben&apos;s comments. &lt;/p&gt;</comment>
                            <comment id="12989145" author="fpj" created="Tue, 1 Feb 2011 10:23:51 +0000"  >&lt;p&gt;Removed some tabs.&lt;/p&gt;</comment>
                            <comment id="12991266" author="breed" created="Mon, 7 Feb 2011 05:27:19 +0000"  >&lt;p&gt;sorry to be a pain flavio, but can i get a couple very minor changes?&lt;/p&gt;

&lt;p&gt;1) in PendingReadOp can you comment what you substract 8 on the line:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        entry.length = buffer.getLong(DigestManager.METADATA_LENGTH - 8);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) in LedgerRecoveryOp can you comment on the line:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            lh.length = entry.getLength() - (&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;) data.length;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i think it is because you are going to call add entry on that data, so it will be added back, right?&lt;/p&gt;

&lt;p&gt;3) we have been focusing a bit on the info levels of log messages and i think the following message should be debug:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;After closing length is: &quot;&lt;/span&gt; + lh.getLength());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;  </comment>
                            <comment id="12991267" author="breed" created="Mon, 7 Feb 2011 05:28:08 +0000"  >&lt;p&gt;btw, dhruba, is this what you were looking for?&lt;/p&gt;</comment>
                            <comment id="12991727" author="dhruba" created="Tue, 8 Feb 2011 00:08:07 +0000"  >&lt;p&gt;This patch looks good, +1. The client-writer is maintaining the length of the ledger till the ledger is closed.&lt;/p&gt;

&lt;p&gt;on a related note, there is something that is confusing me. suppose a client-writer is writing data to 5 bookies. If one bookie dies, the client continues to write data to the remaining 4 bookies. Then the ledger is closed. Now, bookie 5 has partial data because many writes did not make it to that node. How does a system know to ignore the data from bookie 5?&lt;/p&gt;
</comment>
                            <comment id="12992198" author="fpj" created="Tue, 8 Feb 2011 21:45:51 +0000"  >&lt;p&gt;Addressing Ben&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="12992206" author="hadoopqa" created="Tue, 8 Feb 2011 22:13:53 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12470630/ZOOKEEPER-465.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12470630/ZOOKEEPER-465.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1068067.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/125//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12992539" author="breed" created="Wed, 9 Feb 2011 15:50:57 +0000"  >&lt;p&gt;+1 looks good! thanx for making the changes.&lt;/p&gt;</comment>
                            <comment id="12992672" author="mahadev" created="Wed, 9 Feb 2011 19:20:12 +0000"  >&lt;p&gt;flavio I committed this code to trunk but the patch doesnt apply for 3.3 branch. Do you have a patch for that?&lt;/p&gt;</comment>
                            <comment id="12992784" author="fpj" created="Wed, 9 Feb 2011 23:15:30 +0000"  >&lt;p&gt;I wonder if it is worth having a 3.3 version of this patch. There are new features missing on 3.3 already, like &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt;. I wanted to have a new release of BookKeeper with these new features, but 3.4.0 seems not to be around the corner.&lt;/p&gt;</comment>
                            <comment id="12992791" author="mahadev" created="Wed, 9 Feb 2011 23:30:41 +0000"  >&lt;p&gt;flavio, I think it would be great to have it in 3.3.3 so that folks who want to get the size of the ledger (like dhruba) can start using this. I can work with you to come up with a patch for 3.3.3 branch. &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; though important but doesnt block development on top of bookkeeper but this feature might. what do you think?&lt;/p&gt;</comment>
                            <comment id="12992910" author="dhruba" created="Thu, 10 Feb 2011 07:26:21 +0000"  >&lt;p&gt;I might have to start using trunk because &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; is essential to store hdfs logs in bookkeeper, isn&apos;t it? Especially to recover from a scenario when the namenode died/killed/crashed before closing the ledger?&lt;/p&gt;</comment>
                            <comment id="12992931" author="fpj" created="Thu, 10 Feb 2011 08:24:35 +0000"  >&lt;p&gt;The bookie recovery feature (&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt;) is to recover ledger fragments upon a bookie crash. Let&apos;s say your ledger is written to 4 bookies, and later bookie number 4 crashes. To avoid having the ledger going away because of multiple bookie failures, we have this facility that enables one to recreate the ledger fragments of a faulty bookie.&lt;/p&gt;

&lt;p&gt;The feature you&apos;re referring to is ledger recovery (as opposed to bookie recovery), and it has been there for a while. Both trunk and 3.3 have it.&lt;/p&gt;</comment>
                            <comment id="12992939" author="dhruba" created="Thu, 10 Feb 2011 08:50:29 +0000"  >&lt;p&gt;Ok, got it, thanks flavio&lt;/p&gt;</comment>
                            <comment id="12992995" author="hudson" created="Thu, 10 Feb 2011 10:53:44 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1093 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1093/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1093/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-465&quot; title=&quot;Ledger size in bytes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-465&quot;&gt;&lt;del&gt;ZOOKEEPER-465&lt;/del&gt;&lt;/a&gt;. Ledger size in bytes. (flavio via mahadev)&lt;/p&gt;</comment>
                            <comment id="12993150" author="fpj" created="Thu, 10 Feb 2011 18:15:54 +0000"  >&lt;p&gt;Let me add that I&apos;m fine with having this feature without bookie recovery if this is useful for anyone. I&apos;ll produce a patch for 3.3.&lt;/p&gt;</comment>
                            <comment id="12993159" author="breed" created="Thu, 10 Feb 2011 18:39:07 +0000"  >&lt;p&gt;has anyone tried applying &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; to 3.3?&lt;/p&gt;</comment>
                            <comment id="12993602" author="fpj" created="Fri, 11 Feb 2011 17:33:09 +0000"  >&lt;p&gt;It is a good observation, I have just reopened &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; and uploaded a patch for 3.3. Could anyone please review/commit? I&apos;ll produce a patch for this jira for 3.3 once &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; gets in.&lt;/p&gt;</comment>
                            <comment id="12993612" author="mahadev" created="Fri, 11 Feb 2011 18:07:48 +0000"  >&lt;p&gt;thanks flavio, Ill review &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-712&quot; title=&quot;Bookie recovery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-712&quot;&gt;&lt;del&gt;ZOOKEEPER-712&lt;/del&gt;&lt;/a&gt; and commit.&lt;/p&gt;</comment>
                            <comment id="12996021" author="mahadev" created="Thu, 17 Feb 2011 20:03:09 +0000"  >&lt;p&gt;flavio, can you please upload a patch for 3.3 branch? &lt;/p&gt;</comment>
                            <comment id="12996104" author="fpj" created="Thu, 17 Feb 2011 21:44:22 +0000"  >&lt;p&gt;Patch for 3.3.&lt;/p&gt;</comment>
                            <comment id="12996111" author="hadoopqa" created="Thu, 17 Feb 2011 21:52:16 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12471340/ZOOKEEPER-465-3.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12471340/ZOOKEEPER-465-3.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1069169.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/137//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/137//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12996116" author="mahadev" created="Thu, 17 Feb 2011 21:53:48 +0000"  >&lt;p&gt;I committed this to 3.3 as well. thanks flavio.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12471340" name="ZOOKEEPER-465-3.3.patch" size="18596" author="fpj" created="Thu, 17 Feb 2011 21:44:22 +0000"/>
                            <attachment id="12470630" name="ZOOKEEPER-465.patch" size="18425" author="fpj" created="Tue, 8 Feb 2011 21:45:51 +0000"/>
                            <attachment id="12469911" name="ZOOKEEPER-465.patch" size="17934" author="fpj" created="Tue, 1 Feb 2011 10:23:51 +0000"/>
                            <attachment id="12469909" name="ZOOKEEPER-465.patch" size="17459" author="fpj" created="Tue, 1 Feb 2011 10:06:36 +0000"/>
                            <attachment id="12467650" name="ZOOKEEPER-465.patch" size="17315" author="fpj" created="Thu, 6 Jan 2011 18:38:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 Dec 2010 18:50:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47798</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzxtj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33463</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>