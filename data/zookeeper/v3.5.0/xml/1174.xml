<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:43:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1174/ZOOKEEPER-1174.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1174] FD leak when network unreachable</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1174</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;In the socket connection logic there are several errors that result in bad behavior.  The basic problem is that a socket is registered with a selector unconditionally when there are nuances that should be dealt with.  First, the socket may connect immediately.  Secondly, the connect may throw an exception.  In either of these two cases, I don&apos;t think that the socket should be registered.&lt;/p&gt;

&lt;p&gt;I will attach a test case that demonstrates the problem.  I have been unable to create a unit test that exhibits the problem because I would have to mock the low level socket libraries to do so.  It would still be good to do so if somebody can figure out a good way.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12522301">ZOOKEEPER-1174</key>
            <summary>FD leak when network unreachable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tdunning">Ted Dunning</assignee>
                                    <reporter username="tdunning">Ted Dunning</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Sep 2011 19:47:42 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:48 +0000</updated>
                            <resolved>Fri, 30 Sep 2011 23:02:40 +0100</resolved>
                                    <version>3.3.3</version>
                                    <fixVersion>3.3.4</fixVersion>
                    <fixVersion>3.4.0</fixVersion>
                    <fixVersion>3.5.0</fixVersion>
                                    <component>java client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13100583" author="fournc" created="Thu, 8 Sep 2011 19:56:14 +0100"  >&lt;p&gt;We&apos;d have to change drastically the try/catch logic to try to connect the socket then register it with the selector. &lt;br/&gt;
Should we just fix this by calling selector.selectNow() in the cleanup method after cancelling the sockKey? I think that might fix the leak.&lt;/p&gt;</comment>
                            <comment id="13100599" author="tdunning" created="Thu, 8 Sep 2011 20:13:52 +0100"  >&lt;p&gt;Here is a program that demonstrates the problem.  It includes a README and sample output with and without the fix.&lt;/p&gt;</comment>
                            <comment id="13100613" author="tdunning" created="Thu, 8 Sep 2011 20:22:54 +0100"  >&lt;p&gt;Here is a proposed patch.  There are a few considerations here that merit review.  &lt;/p&gt;

&lt;p&gt;First, is it safe to register sockets with a selector after the connect call?  I assert yes because select is level based rather than transition based.&lt;/p&gt;

&lt;p&gt;Secondly, is it safe to not register sockets that connect immediately?  I think, but am not sure, that the answer is yes because we have clearly already called primeConnection().&lt;/p&gt;

&lt;p&gt;Thirdly, is it OK to not rethrow the io exception from the connect call?  I am not sure here.  The immediate effect is that connection is only attempted at the timeout rate rather than the faster rate specified by some of the delays in the code.  This seems OK at first glance, but other opinions would be nice to have.&lt;/p&gt;</comment>
                            <comment id="13100621" author="fournc" created="Thu, 8 Sep 2011 20:29:42 +0100"  >&lt;p&gt;Ted, don&apos;t we still need to register the sockKey even if sock.connect returns true? &lt;/p&gt;</comment>
                            <comment id="13100624" author="fournc" created="Thu, 8 Sep 2011 20:33:37 +0100"  >&lt;p&gt;Sorry, trigger happy about reading your comments. I&apos;m not sure this is true:&lt;/p&gt;

&lt;p&gt;Secondly, is it safe to not register sockets that connect immediately? I think, but am not sure, that the answer is yes because we have clearly already called primeConnection().&lt;/p&gt;

&lt;p&gt;The documentation for sock.connect seems to indicate that you could return true even in a non-blocking mode:&lt;br/&gt;
&quot;If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns true. &quot;&lt;/p&gt;
</comment>
                            <comment id="13100635" author="tdunning" created="Thu, 8 Sep 2011 20:45:06 +0100"  >&lt;p&gt;Camille,&lt;/p&gt;

&lt;p&gt;Thanks for looking at this.  I am not sure if it my assertion is true either, but it does seem correct to me.  (happily, I expressed some doubt)&lt;/p&gt;

&lt;p&gt;The documentation for sock.connect is exactly what I base my (current) position on.  The idea is that if connect returns true, then you don&apos;t need to use select to wait for the connection and can proceed immediately with the primeConnection and light up the connection for prime time.  It is only if connect returns false that deferred actions are required.&lt;/p&gt;</comment>
                            <comment id="13100642" author="hadoopqa" created="Thu, 8 Sep 2011 20:54:26 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493648/ZOOKEEPER-1174.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493648/ZOOKEEPER-1174.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1165443.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/515//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13100677" author="fournc" created="Thu, 8 Sep 2011 21:38:20 +0100"  >&lt;p&gt;-&lt;del&gt;The documentation for sock.connect is exactly what I base my (current) position on. The idea is that if connect returns true, then you don&apos;t need to use select to wait for the connection and can proceed immediately with the primeConnection and light up the connection for prime time. It is only if connect returns false that deferred actions are required.&lt;/del&gt;-&lt;/p&gt;


&lt;p&gt;But where are you setting sockKey then? You&apos;re not setting it at all if it returns true immediately on the first time this is called.&lt;/p&gt;</comment>
                            <comment id="13100714" author="tdunning" created="Thu, 8 Sep 2011 22:29:46 +0100"  >&lt;p&gt;Correct.  Is sockKey needed if we don&apos;t register with the selector?&lt;/p&gt;</comment>
                            <comment id="13100752" author="fournc" created="Thu, 8 Sep 2011 23:29:02 +0100"  >&lt;p&gt;Well, it seems like all of the io-related calls use the sockKey; enableWrite, enableRead, cleanup, doIO. I feel like I&apos;m missing some major fundamental point.&lt;/p&gt;</comment>
                            <comment id="13100795" author="tdunning" created="Fri, 9 Sep 2011 00:43:17 +0100"  >&lt;p&gt;Here is an updated patch that maintains the sockKey even for immediate loads.  My guess is that this didn&apos;t matter in testing so far because it is rare for an async socket to connect instantly.&lt;/p&gt;

&lt;p&gt;This addresses Camille&apos;s eagle-eyed comments.&lt;/p&gt;

&lt;p&gt;I have added a few javadoc fixes and one weakening of a catch from Exception to Throwable in the general spirit of making things better when I see them.  They are unrelated to this JIRA, but are very minor so do not warrant their own bug report. &lt;/p&gt;</comment>
                            <comment id="13100800" author="hadoopqa" created="Fri, 9 Sep 2011 00:52:53 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493692/ZOOKEEPER-1174.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493692/ZOOKEEPER-1174.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1165443.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/516//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/516//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13100805" author="tdunning" created="Fri, 9 Sep 2011 01:01:25 +0100"  >&lt;p&gt;Try again with different format to please the checking script.&lt;/p&gt;</comment>
                            <comment id="13100819" author="hadoopqa" created="Fri, 9 Sep 2011 01:34:46 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493693/ZOOKEEPER-1174.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493693/ZOOKEEPER-1174.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1165443.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/517//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13100846" author="tdunning" created="Fri, 9 Sep 2011 02:39:46 +0100"  >&lt;p&gt;Here is a cheesy test.  The idea is that I injected an explicit throw of the same exception that a downed internet connection causes.&lt;/p&gt;

&lt;p&gt;Is this just toooo cheesy to stomach?&lt;/p&gt;</comment>
                            <comment id="13100847" author="hadoopqa" created="Fri, 9 Sep 2011 02:42:07 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12493712/ZOOKEEPER-1174.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12493712/ZOOKEEPER-1174.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1165443.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/518//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/518//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13101531" author="fournc" created="Fri, 9 Sep 2011 21:10:12 +0100"  >&lt;p&gt;Maybe a little cheesy. Could we do this with mocks? I&apos;m not crazy about having a random &quot;injectSocketError&quot; flag in the code just for testing.&lt;/p&gt;

&lt;p&gt;Also, should probably go ahead and log the socket connection error in the same way we do in SendThread.run, so people don&apos;t lose logging information.&lt;/p&gt;

&lt;p&gt;Also, I think you need to register the SockKey before calling primeConnection, otherwise the call in primeConnection to clientCnxnSocket.enableReadWriteOnly() will fail.&lt;/p&gt;</comment>
                            <comment id="13101642" author="tdunning" created="Sat, 10 Sep 2011 00:26:05 +0100"  >&lt;p&gt;Mocking the test sounds great.  Using this bug to bring in a mocking technology that can mock&lt;br/&gt;
static methods is a little more ambitious than I wanted it to be.&lt;/p&gt;

&lt;p&gt;I see that jmockit and powermock both claim the ability to do this.  Powermock requires another&lt;br/&gt;
mocking technology underneath.  Jmockit has the problem that it isn&apos;t available in an official&lt;br/&gt;
maven repo.&lt;/p&gt;

&lt;p&gt;My tendency is to suggest that we commit this without the unit test and open another JIRA to address&lt;br/&gt;
the testing problem in general.&lt;/p&gt;

&lt;p&gt;If I can get sign-off on that, then I will produce a final patch to verify.  The code right now stands&lt;br/&gt;
like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; immediateConnect = sock.connect(addr);
            sockKey = sock.register(selector, SelectionKey.OP_CONNECT);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (immediateConnect) {
                sendThread.primeConnection();
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
            sock.close();
        }
        initialized = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13101656" author="fournc" created="Sat, 10 Sep 2011 00:46:11 +0100"  >&lt;p&gt;Yeah, I think that sounds like a plan.&lt;/p&gt;</comment>
                            <comment id="13103890" author="phunt" created="Tue, 13 Sep 2011 19:43:30 +0100"  >&lt;p&gt;If we go wth powermock let&apos;s use the mockito variety.&lt;/p&gt;</comment>
                            <comment id="13105830" author="tdunning" created="Fri, 16 Sep 2011 04:38:14 +0100"  >&lt;p&gt;This patch should be ready to commit.  Tests are removed pending another JIRA.&lt;/p&gt;</comment>
                            <comment id="13105831" author="hadoopqa" created="Fri, 16 Sep 2011 04:42:10 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12494741/ZOOKEEPER-1174.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12494741/ZOOKEEPER-1174.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1170886.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/554//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/554//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13107952" author="phunt" created="Mon, 19 Sep 2011 17:32:52 +0100"  >&lt;p&gt;Looks like we may need to update the patch, perhaps separate patches for each branch not that branch-3.4 has been created?&lt;/p&gt;</comment>
                            <comment id="13108010" author="tdunning" created="Mon, 19 Sep 2011 18:27:24 +0100"  >&lt;p&gt;OK.&lt;/p&gt;

&lt;p&gt;Can you say specifically which branches you mean?&lt;/p&gt;</comment>
                            <comment id="13108044" author="phunt" created="Mon, 19 Sep 2011 19:33:20 +0100"  >&lt;p&gt;This jira has this set currently:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Fix Version/s: 3.3.4, 3.4.0, 3.5.0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So a patch, or patches, that would be applied to branch-3.3, branch-3.4, and trunk.&lt;/p&gt;</comment>
                            <comment id="13115159" author="mahadev" created="Tue, 27 Sep 2011 04:01:59 +0100"  >&lt;p&gt;Ted,&lt;br/&gt;
 Any update on this? Please let me know. I plan to cut a release soon and would like to get this in.&lt;/p&gt;

&lt;p&gt;thanks&lt;/p&gt;</comment>
                            <comment id="13115173" author="fournc" created="Tue, 27 Sep 2011 04:19:30 +0100"  >&lt;p&gt;I was going to put this in, but I don&apos;t have a patch that cleanly applies, so it will take some work. I&apos;ll look at it tomorrow or Wed, when are you planning on doing the release?&lt;/p&gt;</comment>
                            <comment id="13115202" author="mahadev" created="Tue, 27 Sep 2011 05:29:08 +0100"  >&lt;p&gt;Wed night my time? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13115455" author="tdunning" created="Tue, 27 Sep 2011 13:51:54 +0100"  >&lt;p&gt;No.  No update beyond that last patch.  Should be ready to roll.&lt;/p&gt;

&lt;p&gt;I talked to Camille last week and it sounded like she was on the verge of committing it.&lt;/p&gt;</comment>
                            <comment id="13115456" author="tdunning" created="Tue, 27 Sep 2011 13:53:08 +0100"  >&lt;p&gt;Hmmm... let me try to update the patch.&lt;/p&gt;

&lt;p&gt;I don&apos;t know when Wednesday night your time actually is (I am traveling to distant lands and am very confused just now).&lt;/p&gt;</comment>
                            <comment id="13115464" author="tdunning" created="Tue, 27 Sep 2011 14:03:04 +0100"  >&lt;p&gt;The old patch fails to apply because of a change introduced in the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-786&quot; title=&quot;Exception in ZooKeeper.toString&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-786&quot;&gt;&lt;del&gt;ZOOKEEPER-786&lt;/del&gt;&lt;/a&gt;.  The chance is this:&lt;/p&gt;

&lt;p&gt;@@ -185,9 +190,7 @@ public class ClientCnxnSocketNIO extends ClientCnxnSocket {&lt;br/&gt;
         sock.socket().setSoLinger(false, -1);&lt;br/&gt;
         sock.socket().setTcpNoDelay(true);&lt;br/&gt;
         sockKey = sock.register(selector, SelectionKey.OP_CONNECT);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (sock.connect(addr)) 
{
-            sendThread.primeConnection();
-        }
&lt;p&gt;+        sock.connect(addr);&lt;br/&gt;
         initialized = false;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Why was the primeConnection call deleted?  I can update the patch to account for this but that seems a bit dangerous since the commit comment on this patch doesn&apos;t refer to this change at all.&lt;/p&gt;</comment>
                            <comment id="13115510" author="fournc" created="Tue, 27 Sep 2011 14:56:19 +0100"  >&lt;p&gt;Good catch Ted, I must ask the same question myself.&lt;/p&gt;</comment>
                            <comment id="13115512" author="fournc" created="Tue, 27 Sep 2011 14:57:25 +0100"  >&lt;p&gt;Also this should apply to 3.4 which hopefully doesn&apos;t have the change from 786 in it, so I will put it in there. Did we also want to put it in 3.3.4? Are those two releases going out at the same time?&lt;/p&gt;</comment>
                            <comment id="13116036" author="tdunning" created="Wed, 28 Sep 2011 01:48:36 +0100"  >&lt;p&gt;This is a pretty serious bug if you ever wind up in the corner where it is exercised.  That proviso limits the average seriousness of the bug, but file descriptor leaks are never good.&lt;/p&gt;</comment>
                            <comment id="13116753" author="hadoopqa" created="Wed, 28 Sep 2011 21:07:53 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12496886/ZOOKEEPER-1174fix.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12496886/ZOOKEEPER-1174fix.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1176903.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/594//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13117096" author="mahadev" created="Thu, 29 Sep 2011 08:48:36 +0100"  >&lt;p&gt;Ted/Camille, Any update on this? Looks like this was committed to 3.4 branch, and probably trunk? &lt;/p&gt;</comment>
                            <comment id="13117209" author="hudson" created="Thu, 29 Sep 2011 11:50:23 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1318 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1318/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1318/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1174&quot; title=&quot;FD leak when network unreachable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1174&quot;&gt;&lt;del&gt;ZOOKEEPER-1174&lt;/del&gt;&lt;/a&gt;. FD leak when network unreachable (Ted Dunning via camille)&lt;/p&gt;

&lt;p&gt;camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1177042&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1177042&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13118482" author="hadoopqa" created="Fri, 30 Sep 2011 22:41:43 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12497223/ZOOKEEPER-1174-3.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12497223/ZOOKEEPER-1174-3.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1177432.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/600//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/600//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13141332" author="mspycher" created="Tue, 1 Nov 2011 17:09:05 +0000"  >&lt;p&gt;I&apos;ve run into a problem with this patch (version 3.3.3) on a system (Windows7) where InetAddress.getAllByName(host) returns candidate IPv4 and IPv6 addresses.&lt;/p&gt;

&lt;p&gt;The reason is that the IOException caught in SendThread.startConnect() is no longer propagated to the calling run() method. In my logs before the patch I would see:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Opening socket connection to server localhost/0:0:0:0:0:0:0:1:23233&lt;/li&gt;
	&lt;li&gt;Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect&lt;br/&gt;
java.net.SocketException: Address family not supported by protocol family: connect&lt;br/&gt;
	at sun.nio.ch.Net.connect(Native Method)&lt;br/&gt;
	at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:500)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1050)&lt;br/&gt;
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1077)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;and now I see:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Opening socket connection to server localhost/0:0:0:0:0:0:0:1:23233&lt;/li&gt;
	&lt;li&gt;Unable to open socket to localhost/0:0:0:0:0:0:0:1:23233&lt;/li&gt;
	&lt;li&gt;Client session timed out, have not heard from server in 30002ms for sessionid 0x0, closing socket connection and attempting reconnect&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the former, the exception was caught in the run() method and the startConnect() retried with the IPv4 address, which works fine. In the latter, the client times out waiting for the server instead of retrying.&lt;/p&gt;

&lt;p&gt;I would recommend rethrowing the IOException in startConnect() until there&apos;s a better way to control the InetAddresses in the client.&lt;/p&gt;
</comment>
                            <comment id="13141347" author="phunt" created="Tue, 1 Nov 2011 17:18:19 +0000"  >&lt;p&gt;Matthias - see &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1271&quot; title=&quot;testEarlyLeaderAbandonment failing on solaris - clients not retrying connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1271&quot;&gt;&lt;del&gt;ZOOKEEPER-1271&lt;/del&gt;&lt;/a&gt;, it&apos;s the same issues re handling the exception, but on solaris&lt;/p&gt;</comment>
                            <comment id="13141436" author="mspycher" created="Tue, 1 Nov 2011 18:27:53 +0000"  >&lt;p&gt;Patrick, thanks for the ref.&lt;/p&gt;</comment>
                            <comment id="13141456" author="phunt" created="Tue, 1 Nov 2011 18:48:30 +0000"  >&lt;p&gt;np, this reminds me though, we are only testing the c code on windows (CI env), not java, it would be good to add this - Matthias you interested to help? &lt;a href=&quot;https://builds.apache.org//view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-WinVS2008/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org//view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-WinVS2008/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If so please start the discussion on the ML. thanks!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12524795">ZOOKEEPER-1205</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12529327">ZOOKEEPER-1271</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12497223" name="ZOOKEEPER-1174-3.3.patch" size="2590" author="fournc" created="Fri, 30 Sep 2011 22:36:05 +0100"/>
                            <attachment id="12494741" name="ZOOKEEPER-1174.patch" size="3528" author="tdunning" created="Fri, 16 Sep 2011 04:38:14 +0100"/>
                            <attachment id="12493712" name="ZOOKEEPER-1174.patch" size="6342" author="tdunning" created="Fri, 9 Sep 2011 02:39:46 +0100"/>
                            <attachment id="12493693" name="ZOOKEEPER-1174.patch" size="2798" author="tdunning" created="Fri, 9 Sep 2011 01:01:25 +0100"/>
                            <attachment id="12493692" name="ZOOKEEPER-1174.patch" size="2822" author="tdunning" created="Fri, 9 Sep 2011 00:43:17 +0100"/>
                            <attachment id="12493648" name="ZOOKEEPER-1174.patch" size="1067" author="tdunning" created="Thu, 8 Sep 2011 20:22:54 +0100"/>
                            <attachment id="12496886" name="ZOOKEEPER-1174fix.patch" size="3013" author="fournc" created="Wed, 28 Sep 2011 15:48:48 +0100"/>
                            <attachment id="12493644" name="zk-fd-leak.tgz" size="7345" author="tdunning" created="Thu, 8 Sep 2011 20:13:52 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Sep 2011 18:56:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>167</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzszb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32679</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>