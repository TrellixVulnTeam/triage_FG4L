<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:48:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1090/ZOOKEEPER-1090.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1090] Race condition while taking snapshot can lead to not restoring data tree correctly</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1090</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;I think I have found a bug in the snapshot mechanism.&lt;/p&gt;

&lt;p&gt;The problem occurs because dt.lastProcessedZxid is not synchronized (or rather set before the data tree is modified):&lt;/p&gt;

&lt;p&gt;FileTxnSnapLog:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void save(DataTree dataTree,
            ConcurrentHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; sessionsWithTimeouts)
        &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastZxid = dataTree.lastProcessedZxid;
        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Snapshotting: &quot;&lt;/span&gt; + &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.toHexString(lastZxid));
        File snapshot=&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(
                snapDir, Util.makeSnapshotName(lastZxid));
        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshot);   &amp;lt;=== the Datatree may not have the modification &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; lastProcessedZxid
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DataTree:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ProcessTxnResult processTxn(TxnHeader header, Record txn) {
        ProcessTxnResult rc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProcessTxnResult();

        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; debug = &quot;&quot;;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            rc.clientId = header.getClientId();
            rc.cxid = header.getCxid();
            rc.zxid = header.getZxid();
            rc.type = header.getType();
            rc.err = 0;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc.zxid &amp;gt; lastProcessedZxid) {
                lastProcessedZxid = rc.zxid;
            }
            [...modify data tree...]           
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The lastProcessedZxid must be set after the modification is done.&lt;/p&gt;

&lt;p&gt;As a result, if server crashes after taking the snapshot (and the snapshot does not contain change corresponding to lastProcessedZxid) restore will not restore the data tree correctly:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; restore(DataTree dt, Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; sessions,
            PlayBackListener listener) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        snapLog.deserialize(dt, sessions);
        FileTxnLog txnLog = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileTxnLog(dataDir);
        TxnIterator itr = txnLog.read(dt.lastProcessedZxid+1); &amp;lt;=== Assumes lastProcessedZxid is deserialized
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;I have had offline discussion with Ben and Camille on this. I will be posting the discussion shortly.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12509718">ZOOKEEPER-1090</key>
            <summary>Race condition while taking snapshot can lead to not restoring data tree correctly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vishalmlst">Vishal Kher</assignee>
                                    <reporter username="vishalmlst">Vishal Kher</reporter>
                        <labels>
                            <label>persistence</label>
                            <label>server</label>
                            <label>snapshot</label>
                    </labels>
                <created>Thu, 9 Jun 2011 15:24:06 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:34 +0000</updated>
                            <resolved>Thu, 28 Jul 2011 06:50:38 +0100</resolved>
                                    <version>3.3.3</version>
                                    <fixVersion>3.4.0</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13046571" author="vishalmlst" created="Thu, 9 Jun 2011 15:29:45 +0100"  >
&lt;p&gt;yeah, you are right. I think we should make update of datatree and lastProcessedzxid look atomic.&lt;/p&gt;


&lt;p&gt;On Wed, Jun 8, 2011 at 2:14 PM, Fournier, Camille F. &lt;span class=&quot;error&quot;&gt;&amp;#91;Tech&amp;#93;&lt;/span&gt; wrote:&lt;/p&gt;

&lt;p&gt;    So we might over increment a parent cvid... What does that mean for a client? Maybe missing a seq id node number? Seems ok but should probably document.&lt;/p&gt;

&lt;p&gt;    C&lt;/p&gt;

&lt;p&gt;    From: Vishal Kher&lt;br/&gt;
    To: Fournier, Camille F. &lt;span class=&quot;error&quot;&gt;&amp;#91;Tech&amp;#93;&lt;/span&gt;&lt;br/&gt;
    Cc: Benjamin Reed&lt;br/&gt;
    Sent: Wed Jun 08 13:53:59 2011&lt;br/&gt;
    Subject: Re: Race condition while taking snapshot&lt;/p&gt;

&lt;p&gt;    This will result in datatree having latest data but lastProcessedZxid not up-to-date. So when you take snapshot.x, the file may contain data for x + 1. But I think this is ok (and this is how snpashot currently works) because during restore we will start applying transactions from x + 1. Some of them will fail (e.,g., create/delete) and we will increment only the zxid on failure.&lt;/p&gt;

&lt;p&gt;    I have not analyzed this completely yet. But I think it will be ok.&lt;/p&gt;

&lt;p&gt;    Thanks.&lt;br/&gt;
    -Vishal&lt;/p&gt;

&lt;p&gt;    On Wed, Jun 8, 2011 at 1:33 PM, Fournier, Camille F. &lt;span class=&quot;error&quot;&gt;&amp;#91;Tech&amp;#93;&lt;/span&gt; wrote:&lt;/p&gt;

&lt;p&gt;        Yes I think you are right. What do we think the implications of moving the setting of lastProcessedZxid to below the processing of the txn? Looks like not a big problem but I haven&#8217;t the mental bandwidth to think it through at the moment.&lt;/p&gt;



&lt;p&gt;        C&lt;/p&gt;</comment>
                            <comment id="13046575" author="vishalmlst" created="Thu, 9 Jun 2011 15:32:05 +0100"  >&lt;p&gt;On Thu, Jun 9, 2011 at 1:25 AM, Benjamin Reed wrote:&lt;/p&gt;

&lt;p&gt;    you should open a jira on this. (we should also be have this conversation in the context of that jira &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; i&apos;m trying to think through the possible problems. while it is true that lastZxid hasn&apos;t been applied before it is set, it may not be in the snapshot. it will be in the txnlog, so it will be recovered if a failure happens. perhaps the simplest thing would be to mark the snapshot as lastZxid-1.&lt;/p&gt;

&lt;p&gt;    the test case would be to suspend the datatree.processTxn right after lastZxid is set, and then take a snapshot followed by a crash. right?&lt;/p&gt;

&lt;p&gt;    we should make sure that we are handling it correctly, and we should also make sure to add some comments to the code to explain why we are handling it correctly &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;p&gt;    ben&lt;/p&gt;</comment>
                            <comment id="13046578" author="vishalmlst" created="Thu, 9 Jun 2011 15:35:20 +0100"  >&lt;p&gt;Vishal Kher to Benjamin, Camille  9:38 AM (54 minutes ago)&lt;/p&gt;

&lt;p&gt;Hi Ben,&lt;/p&gt;

&lt;p&gt;I was going to open a jira after checking with you guys.&lt;/p&gt;

&lt;p&gt;With your solution won&apos;t we run in into the problem that Camille pointed out by marking the snapshot for lastZxid - 1? - Peer fails after taking the snapshot. The snapshot has applied lastZxid, which created a child znode. During recovery it will apply lastZxid, which will faill with NodeExists and we will increment the Cversion of the parent (after fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1046&quot; title=&quot;Creating a new sequential node results in a ZNODEEXISTS error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1046&quot;&gt;&lt;del&gt;ZOOKEEPER-1046&lt;/del&gt;&lt;/a&gt;). So creation of sequential znodes won&apos;t be be really sequential. This is probably acceptable, but should be clearly documented. If not, then from this bug, it looks to me that patch &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1046&quot; title=&quot;Creating a new sequential node results in a ZNODEEXISTS error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1046&quot;&gt;&lt;del&gt;ZOOKEEPER-1046&lt;/del&gt;&lt;/a&gt; was also not complete. We may need to conditionally update cversion.&lt;/p&gt;

&lt;p&gt; I think we need a clear document of how snapshots are supposed to work and what to assume while taking snapshots and while recovering from snapshots. It will be very helpful for to verify the correctness of implementation and for future bug fixes.I will open a jira for this bug shortly and post our discussion as well.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;-Vishal&lt;/p&gt;
</comment>
                            <comment id="13049626" author="mahadev" created="Wed, 15 Jun 2011 07:00:35 +0100"  >&lt;p&gt;Vishal/Camille,&lt;br/&gt;
 Should this be a target for 3.4 release?&lt;/p&gt;</comment>
                            <comment id="13060177" author="vishalmlst" created="Tue, 5 Jul 2011 23:43:12 +0100"  >&lt;p&gt;Sorry for the delay. I have a bit of a catchup to do w.r.t what went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1046&quot; title=&quot;Creating a new sequential node results in a ZNODEEXISTS error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1046&quot;&gt;&lt;del&gt;ZOOKEEPER-1046&lt;/del&gt;&lt;/a&gt;. In general, I think this should be targeted for 3.4. From what I remember, the fix is quite straight forward. I can take this up after I fully understand the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1046&quot; title=&quot;Creating a new sequential node results in a ZNODEEXISTS error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1046&quot;&gt;&lt;del&gt;ZOOKEEPER-1046&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13064871" author="mahadev" created="Wed, 13 Jul 2011 22:29:15 +0100"  >&lt;p&gt;Vishal, &lt;br/&gt;
 Since you already fixed &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1046&quot; title=&quot;Creating a new sequential node results in a ZNODEEXISTS error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1046&quot;&gt;&lt;del&gt;ZOOKEEPER-1046&lt;/del&gt;&lt;/a&gt;, do you want to take a crack at this?&lt;/p&gt;</comment>
                            <comment id="13065271" author="vishalmlst" created="Thu, 14 Jul 2011 14:54:47 +0100"  >&lt;p&gt;I am working on a fix.&lt;/p&gt;</comment>
                            <comment id="13066163" author="vishalmlst" created="Fri, 15 Jul 2011 21:06:18 +0100"  >&lt;p&gt;I am attaching a patch that I think fixes this bug. &lt;/p&gt;

&lt;p&gt;The fix is really simple - change lastProcessedZxid after modifying data tree.&lt;/p&gt;

&lt;p&gt;An alternative approach would be to set zxid while taking snapshot to lastProcessedZxid -1. However, this is error prone since the caller has to remember to decrement the zxid before taking snapshot. I prefer the fix in the patch.&lt;/p&gt;</comment>
                            <comment id="13066164" author="vishalmlst" created="Fri, 15 Jul 2011 21:06:50 +0100"  >&lt;p&gt;patch available for trunk&lt;/p&gt;</comment>
                            <comment id="13066194" author="hadoopqa" created="Fri, 15 Jul 2011 21:47:06 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12486671/ZOOKEEPER-1090&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12486671/ZOOKEEPER-1090&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1146961.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/397//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13070635" author="vishalmlst" created="Mon, 25 Jul 2011 18:50:29 +0100"  >&lt;p&gt;Ben/Camille can you please review the patch? Thanks.&lt;/p&gt;</comment>
                            <comment id="13070788" author="mahadev" created="Mon, 25 Jul 2011 22:38:01 +0100"  >&lt;p&gt;Camille/Ben,&lt;br/&gt;
 Any one of you mind reviewing this? Would be great if you both can!&lt;/p&gt;</comment>
                            <comment id="13070842" author="fournc" created="Mon, 25 Jul 2011 23:53:10 +0100"  >&lt;p&gt;On vacation will try to check this pm.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1090?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=13070788#comment-13070788&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-1090?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=13070788#comment-13070788&lt;/a&gt;]&lt;br/&gt;
correctly&lt;br/&gt;
----------------------------------------------------------------------------------&lt;br/&gt;
rather set before the data tree is modified):&lt;br/&gt;
Datatree may not have the modification for lastProcessedZxid&lt;br/&gt;
snapshot does not contain change corresponding to lastProcessedZxid) restore&lt;br/&gt;
will not restore the data tree correctly:&lt;br/&gt;
lastProcessedZxid is deserialized&lt;br/&gt;
posting the discussion shortly.&lt;/p&gt;</comment>
                            <comment id="13070894" author="fournc" created="Tue, 26 Jul 2011 02:26:23 +0100"  >&lt;p&gt;Vishal, when I run the new test with or without the patch on DataTree, it succeeds. Do we expect this to fail reliably without the patch?&lt;/p&gt;</comment>
                            <comment id="13071249" author="vishalmlst" created="Tue, 26 Jul 2011 19:11:27 +0100"  >&lt;p&gt;I don&apos;t have a test that that will fail without the patch.&lt;br/&gt;
Earlier, we had a problem because snapshot.x did not contain x. Now,&lt;br/&gt;
we cannot run into that scenario because we first apply x and then&lt;br/&gt;
increment lastProcessedZxid.&lt;/p&gt;

&lt;p&gt;with the patch we can only have a scenario where we have applied x in&lt;br/&gt;
snapshot.x-1. Note - a snapshot can always contain data &amp;gt; than&lt;br/&gt;
lastProcessedZxid so the patch is not introducing a new scenario. So I&lt;br/&gt;
wrote a test to verify correctness of this scenario. Any suggestions?&lt;/p&gt;

&lt;p&gt;Can you elaborate on our comment:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rather set before the data tree is modified):&lt;br/&gt;
Datatree may not have the modification for lastProcessedZxid&lt;br/&gt;
snapshot does not contain change corresponding to lastProcessedZxid) restore&lt;br/&gt;
will not restore the data tree correctly:&lt;br/&gt;
lastProcessedZxid is deserialized&lt;br/&gt;
posting the discussion shortly.&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;After going through the code again, I think the following hypothetical&lt;br/&gt;
failure scenario could be a problem: For some reason, modification to&lt;br/&gt;
data tree fails for transactions x to x-n on one of the peer. The&lt;br/&gt;
lastProcessedZxid will still be set to x. If the peer restores after&lt;br/&gt;
snapshot, then it will not have transactions x-n to x in its data&lt;br/&gt;
tree. Now, if the modification had failed due to transient errors (say&lt;br/&gt;
out of memory), then we will not apply transactions x-n to x even if&lt;br/&gt;
we should have. The only other reason we could run into this scenario&lt;br/&gt;
(apart from runtime failures) is if we had a bug in DataTree&lt;br/&gt;
modification code path. This looks like a rare corner case.&lt;/p&gt;

&lt;p&gt;Note - the above problem is not an effect of the patch. it is present&lt;br/&gt;
in current implementation as well.&lt;/p&gt;</comment>
                            <comment id="13071458" author="fournc" created="Wed, 27 Jul 2011 01:33:54 +0100"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t have a test that that will fail without the patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I see. So the test verifies that a snapshot with a later zxid than the named zxid processes correctly, and it does. That&apos;s good.&lt;/p&gt;

&lt;p&gt;I think this is all fine. The only comment I would make is that for future reference, you should use Assert.assertEquals instead of Assert.assertTrue when asserting equality. The Assert will take care of the work of printing out &quot;expected foo but was bar&quot; for you in that case, so you don&apos;t need it in the message of the Assert statement. Just a bit easier for you to write and others to read.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;After going through the code again, I think the following hypothetical&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;failure scenario could be a problem: For some reason, modification to&lt;br/&gt;
data tree fails for transactions x to x-n on one of the peer. The&lt;br/&gt;
lastProcessedZxid will still be set to x. If the peer restores after&lt;br/&gt;
snapshot, then it will not have transactions x-n to x in its data&lt;br/&gt;
tree. Now, if the modification had failed due to transient errors (say&lt;br/&gt;
out of memory), then we will not apply transactions x-n to x even if&lt;br/&gt;
we should have. The only other reason we could run into this scenario&lt;br/&gt;
(apart from runtime failures) is if we had a bug in DataTree&lt;br/&gt;
modification code path. This looks like a rare corner case.&lt;/p&gt;

&lt;p&gt;Hmm. So if we had a bug in DataTree, we could lose transactions, yes? Well, I think it&apos;s fair to say that in general, if we have bugs we might lose data. Probably worth keeping in mind but not losing sleep over at this time.&lt;/p&gt;
</comment>
                            <comment id="13071740" author="vishalmlst" created="Wed, 27 Jul 2011 15:02:39 +0100"  >&lt;p&gt;We could run into this if the JVM is running low on memory (runtime execption) while modifying the tree. It is a very rare case. We don&apos;t need to fix it right away. It sounds like if modification to the data tree for x fails due to runtime exception (and not due to exceptions like NoNode), then before applying x+1 to the tree we should attempt to apply x first. We should change lastProcessedZxid only if modifiction to the tree succeeds. &lt;/p&gt;</comment>
                            <comment id="13072178" author="breed" created="Thu, 28 Jul 2011 05:57:55 +0100"  >&lt;p&gt;+1 great find and fix vishal&lt;/p&gt;</comment>
                            <comment id="13072180" author="breed" created="Thu, 28 Jul 2011 06:02:36 +0100"  >&lt;p&gt;oh, i also wanted to second camille&apos;s comment about Assert. Also, instead of Assert.assertTrue(&quot;message&quot;, false) you can use Assert.fail(&quot;message&quot;)&lt;/p&gt;</comment>
                            <comment id="13072182" author="fournc" created="Thu, 28 Jul 2011 06:11:41 +0100"  >&lt;p&gt;Ben, can you check this one in? Thanks!&lt;/p&gt;</comment>
                            <comment id="13072192" author="breed" created="Thu, 28 Jul 2011 06:50:38 +0100"  >&lt;p&gt;Committed revision 1151738.&lt;/p&gt;</comment>
                            <comment id="13072821" author="vishalmlst" created="Fri, 29 Jul 2011 14:42:20 +0100"  >&lt;p&gt;Ben, Camille, Thanks for the review. I will keep the comments in mind for next time.&lt;/p&gt;

&lt;p&gt;What do you think about the problem that I mentioned. It is cerainly very rare. In general, do you think we should modify lastProcssedZxid only if the modification to data tree succeeds? (there will be other problems will need to solve along with this, e.g., if x doesn&apos;t succeed should we apply x + 1, etc.)&lt;/p&gt;</comment>
                            <comment id="13082061" author="hudson" created="Wed, 10 Aug 2011 02:26:20 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1258 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1258/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1258/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1090&quot; title=&quot;Race condition while taking snapshot can lead to not restoring data tree correctly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1090&quot;&gt;&lt;del&gt;ZOOKEEPER-1090&lt;/del&gt;&lt;/a&gt;. Race condition while taking snapshot can lead to not restoring data tree correctly.&lt;/p&gt;

&lt;p&gt;breed : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1151738&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1151738&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12486671" name="ZOOKEEPER-1090" size="7139" author="vishalmlst" created="Fri, 15 Jul 2011 21:06:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Jun 2011 06:00:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47484</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzt9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32725</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>