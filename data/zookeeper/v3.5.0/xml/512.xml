<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:44:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-512/ZOOKEEPER-512.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-512] FLE election fails to elect leader</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-512</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;I was doing some fault injection testing of 3.2.1 with &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-508&quot; title=&quot;proposals and commits for DIFF and Truncate messages from the leader to followers is buggy.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-508&quot;&gt;&lt;del&gt;ZOOKEEPER-508&lt;/del&gt;&lt;/a&gt; patch applied and noticed that after some time the ensemble failed to re-elect a leader.&lt;/p&gt;

&lt;p&gt;See the attached log files - 5 member ensemble. typically 5 is the leader&lt;/p&gt;

&lt;p&gt;Notice that after 16:23:50,525 no quorum is formed, even after 20 minutes elapses w/no quorum&lt;/p&gt;

&lt;p&gt;environment:&lt;/p&gt;

&lt;p&gt;I was doing fault injection testing using aspectj. The faults are injected into socketchannel read/write, I throw exceptions randomly at a 1/200 ratio (rand.nextFloat() &amp;lt;= .005 =&amp;gt; throw IOException&lt;/p&gt;

&lt;p&gt;You can see when a fault is injected in the log via:&lt;br/&gt;
2009-08-19 16:57:09,568 - INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-74:ReadRequestFailsIntermittently@38&amp;#93;&lt;/span&gt; - READPACKET FORCED FAIL&lt;/p&gt;

&lt;p&gt;vs a read/write that didn&apos;t force fail:&lt;br/&gt;
2009-08-19 16:57:09,568 - INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-74:ReadRequestFailsIntermittently@41&amp;#93;&lt;/span&gt; - READPACKET OK&lt;/p&gt;

&lt;p&gt;otw standard code/config (straight fle quorum with 5 members)&lt;/p&gt;

&lt;p&gt;also see the attached jstack trace. this is for one of the servers. Notice in particular that the number of sendworkers != the number of recv workers.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12433522">ZOOKEEPER-512</key>
            <summary>FLE election fails to elect leader</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fpj">Flavio Junqueira</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Aug 2009 01:11:07 +0100</created>
                <updated>Fri, 26 Mar 2010 17:25:00 +0000</updated>
                            <resolved>Tue, 27 Oct 2009 21:14:23 +0000</resolved>
                                    <version>3.2.0</version>
                                    <fixVersion>3.3.0</fixVersion>
                                    <component>quorum</component>
                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12745372" author="fpj" created="Thu, 20 Aug 2009 11:18:13 +0100"  >&lt;p&gt;I&apos;m not convinced this is a bug. Right now it sounds to me that the problem is with the way you&apos;re injecting faults. More concretely, it sounds like some threads are getting IOException, but the corresponding socket is not closing. As recv and sender come in pairs, if one dies and the other doesn&apos;t, we have a problem. At the same time, I believe the current code would eventually terminate a pair of workers send/recv if the socket closes. It is true, though, that the current code assumes that if RecvWorker catches an IOException when performing an socket operation, then the corresponding SendWorker will also catch an exception when trying to write to the socket. This is where I think your framework is broken, but please correct me if I&apos;m missing anything.&lt;/p&gt;</comment>
                            <comment id="12745475" author="phunt" created="Thu, 20 Aug 2009 17:19:17 +0100"  >&lt;p&gt;Your explanation sounds reasonable, but I don&apos;t see anything in the java socket&lt;/p&gt;
{channel}
&lt;p&gt; apis that talk about this. perhaps I missed it. Do you have a pointer to something that talks about this? (I did some searches and couldn&apos;t find). Basically, why should we assume that any ioexception results in the socket being closed?&lt;/p&gt;</comment>
                            <comment id="12745628" author="phunt" created="Thu, 20 Aug 2009 21:49:25 +0100"  >&lt;p&gt;take a look at logs2, this is similar fault injection model, however I&apos;m now:&lt;/p&gt;

&lt;p&gt;sock.close()&lt;br/&gt;
throw IOException&lt;/p&gt;

&lt;p&gt;rather than just throwing the ioexception. otw basically the same test as before.&lt;/p&gt;

&lt;p&gt;Notice that 1 drops off alot earlier than the rest (seems due to it&apos;s server id being the lowest?)&lt;/p&gt;</comment>
                            <comment id="12745632" author="phunt" created="Thu, 20 Aug 2009 21:55:00 +0100"  >&lt;p&gt;sorry, to be overly clear &amp;#8211; the same problem occurs in this case (close/throw) &amp;#8211; the quorum cannot be formed after some time.&lt;/p&gt;</comment>
                            <comment id="12745870" author="fpj" created="Fri, 21 Aug 2009 10:17:50 +0100"  >&lt;p&gt;Two things:&lt;/p&gt;

&lt;p&gt;1- I&apos;m not sure what you&apos;ve been searching for, so I don&apos;t have a pointer, but the behavior I expect is that if you get an IOException upon invoking a socket operation, then the operation won&apos;t be available after that. Am I not interpreting it correctly?&lt;br/&gt;
2- Visually expecting the logs, I was able to count about 20 successful leader elections. In the previous set of logs, I think servers got stuck around 5, so I see improvement after you modified your fault injection. Also, according to server 5, a leader was elected successfully. Here is the tail of the log of 5: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2009-08-20 13:43:56,636 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:2185:QuorumPeer@508] - LEADING
2009-08-20 13:43:56,636 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:2185:ZooKeeperServer@160] - Created server
2009-08-20 13:43:56,643 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:2185:FileSnap@81] - Reading snapshot ./localhost:2185/data/version-2/snapshot.1c0000001f
2009-08-20 13:43:56,699 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:2185:FileTxnSnapLog@208] - Snapshotting: 1c0000001f
2009-08-20 13:43:56,844 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,845 - INFO  [FollowerHandler-/127.0.0.1:55253:FollowerHandler@227] - Follower sid: 4 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@1b1aa65
2009-08-20 13:43:56,845 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,845 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,846 - WARN  [FollowerHandler-/127.0.0.1:55253:FollowerHandler@302] - Sending snapshot last zxid of peer is 0x1c0000001f  zxid of leader is 0x1d00000000
2009-08-20 13:43:56,847 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,848 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,848 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,849 - INFO  [FollowerHandler-/127.0.0.1:55254:FollowerHandler@227] - Follower sid: 2 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@1ef9157
2009-08-20 13:43:56,849 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,850 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,850 - WARN  [FollowerHandler-/127.0.0.1:55254:FollowerHandler@302] - Sending snapshot last zxid of peer is 0x1c0000001f  zxid of leader is 0x1d00000000
2009-08-20 13:43:56,851 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:56,851 - WARN  [FollowerHandler-/127.0.0.1:55254:Leader@452] - Commiting zxid 0x1d00000000 from /127.0.0.1:3185 not first!
2009-08-20 13:43:56,852 - WARN  [FollowerHandler-/127.0.0.1:55254:Leader@454] - First is 0
2009-08-20 13:43:56,852 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:59,434 - INFO  [Thread-536:RequestFailsIntermittently@120] - SOCKET REQUEST OK
2009-08-20 13:43:59,434 - INFO  [Thread-536:RequestFailsIntermittently@120] - SOCKET REQUEST OK
2009-08-20 13:43:59,435 - INFO  [WorkerReceiver Thread:FastLeaderElection$Messenger$WorkerReceiver@254] - Sending new notification.
2009-08-20 13:43:59,435 - INFO  [Thread-535:RequestFailsIntermittently@120] - SOCKET REQUEST OK
2009-08-20 13:43:59,846 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:43:59,848 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:00,765 - INFO  [NIOServerCxn.Factory:2185:NIOServerCnxn@698] - Processing stat command from /127.0.0.1:38350
2009-08-20 13:44:00,766 - WARN  [NIOServerCxn.Factory:2185:NIOServerCnxn@494] - Exception causing close of session 0x0 due to java.io.IOException: Responded to info probe
2009-08-20 13:44:00,766 - INFO  [NIOServerCxn.Factory:2185:NIOServerCnxn@833] - closing session:0x0 NIOServerCnxn: java.nio.channels.SocketChannel[connected local=/127.0.0.1:2185 remote=/127.0.0.1:38350]
2009-08-20 13:44:00,846 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:00,848 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:01,847 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:01,848 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:02,847 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:02,848 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:03,847 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:03,849 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:04,847 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:04,849 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:05,847 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:05,849 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:06,849 - INFO  [FollowerHandler-/127.0.0.1:55253:RequestFailsIntermittently@91] - RECORD REQUEST OK
2009-08-20 13:44:06,849 - INFO  [FollowerHandler-/127.0.0.1:55254:RequestFailsIntermittently@91] - RECORD REQUEST OK
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inspecting the logs a little more, it is true, though, that 1 and 3 are stuck. It could be due to the challenge protocol as you suggest, so we should keep it in mind. &lt;/p&gt;</comment>
                            <comment id="12745872" author="fpj" created="Fri, 21 Aug 2009 10:23:55 +0100"  >&lt;p&gt;Pat, could you run it again and switch log debug on for QuorumCnxManager, please?&lt;/p&gt;</comment>
                            <comment id="12745887" author="fpj" created="Fri, 21 Aug 2009 11:28:47 +0100"  >&lt;p&gt;I just realized that there is a bug in the first comment I posted today. I wanted to say that: if you get an IOException upon invoking a socket operation, then the SOCKET won&apos;t be available after that. (I really miss the ability to edit comments.)&lt;/p&gt;</comment>
                            <comment id="12746050" author="phunt" created="Fri, 21 Aug 2009 17:15:18 +0100"  >&lt;p&gt;I&apos;ve been reading the Java API spec, for example:&lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/nio/channels/SocketChannel.html#read%28java.nio.ByteBuffer%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/javase/6/docs/api/java/nio/channels/SocketChannel.html#read%28java.nio.ByteBuffer%29&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;there&apos;s nothing here (nor in Socket docs) that I can find that says that an ioexception thrown by the read method&lt;br/&gt;
results in what you say you are expecting. Unless you can find otw I don&apos;t think it&apos;s prudent to assume a particular&lt;br/&gt;
behavior.&lt;/p&gt;

&lt;p&gt;The quorum was def &lt;em&gt;not&lt;/em&gt; formed when I took the log snapshot, there was no active leader..  Clients were not able to &lt;br/&gt;
connect to any server in the cluster, and running &quot;stat&quot; on the command port resulted in &quot;zookeeper server not running&quot; being&lt;br/&gt;
returned by all 5 servers. (not the typical &quot;... mode:follower....&quot; etc... stat result.)&lt;/p&gt;

&lt;p&gt;I&apos;ll re-run and attach with debug logs.&lt;/p&gt;</comment>
                            <comment id="12746063" author="phunt" created="Fri, 21 Aug 2009 17:28:59 +0100"  >&lt;p&gt;debug logs for similar situation as previous.&lt;/p&gt;</comment>
                            <comment id="12746225" author="phunt" created="Fri, 21 Aug 2009 22:08:01 +0100"  >&lt;p&gt;sample test environment. start.sh is setup to cause failures at .5% probability (each net operation)&lt;/p&gt;</comment>
                            <comment id="12746820" author="fpj" created="Mon, 24 Aug 2009 12:41:38 +0100"  >&lt;p&gt;Based on feedback I got on how to handle socket exceptions, I have added a finally block that closes the channel in RecvWorker. I haven&apos;t been able to reproduce the problem reliably yet, but I can&apos;t see any issue after applying this patch. It would be good if Pat could run it to see if the problem still manifests.&lt;/p&gt;</comment>
                            <comment id="12747072" author="phunt" created="Mon, 24 Aug 2009 22:02:57 +0100"  >&lt;p&gt;I don&apos;t see any change in behavior, still see similar issues as before.&lt;/p&gt;

&lt;p&gt;Also the patch fails to compile - close is declared to throw ioexception, a checked exception. I had to &lt;br/&gt;
wrap with a try/catch/log.warn.&lt;/p&gt;
</comment>
                            <comment id="12747234" author="mahadev" created="Tue, 25 Aug 2009 07:00:11 +0100"  >&lt;p&gt;can we move this out to 3.3? I dont think its a regression or is it? &lt;/p&gt;</comment>
                            <comment id="12747315" author="fpj" created="Tue, 25 Aug 2009 10:00:11 +0100"  >&lt;p&gt;I have finally been able to reproduce it reliably, and it is true, the ensemble stalls after a while. Looking at the logs, I realized the same as Pat: not enough votes are coming through. Soon later, however, I also realized that most processes died, and here is the cause:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2009-08-25 10:51:04,617 - FATAL [SyncThread:2:SyncRequestProcessor@131] - Severe unrecoverable error, exiting
java.net.SocketException: Socket closed
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:99)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
        at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
        at org.apache.zookeeper.server.quorum.Follower.writePacket(Follower.java:100)
        at org.apache.zookeeper.server.quorum.SendAckRequestProcessor.flush(SendAckRequestProcessor.java:52)
        at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:147)
        at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:92)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After three zookeeper processes die this way, we can&apos;t obviously form a quorum. My conclusion is that the aspects are killing the processes, and leader election cannot succeed without a quorum.&lt;/p&gt;

&lt;p&gt;I think we should still add the finally block as in the broken patch I uploaded before. It makes sense to have it, but it is probably ok if we postpone it to 3.3. &lt;/p&gt;

</comment>
                            <comment id="12747372" author="fpj" created="Tue, 25 Aug 2009 13:23:04 +0100"  >&lt;p&gt;I realized that the logs that Pat posted do not contain the same messages indicating that the processes exited. My understanding is that the finally block had some effect and now the test is exposing  a potential new issue. &lt;/p&gt;

&lt;p&gt;Just in case, I&apos;m uploading a simple patch for testing. It compiles fine for me.&lt;/p&gt;</comment>
                            <comment id="12747651" author="fpj" created="Tue, 25 Aug 2009 22:18:31 +0100"  >&lt;p&gt;New patch fixes two issues:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Adds finally block to method run of RecvWorker;&lt;/li&gt;
	&lt;li&gt;Replaces take() with poll() in SendWorker(). This fixes a race condition that can easily manifest when the system goes haywire (see Pat&apos;s aspects for examples).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This patch should apply to both 3.2 and trunk.&lt;/p&gt;
</comment>
                            <comment id="12747769" author="phunt" created="Wed, 26 Aug 2009 05:32:43 +0100"  >&lt;p&gt;I&apos;m afraid that with this latest patch I&apos;m still seeing similar to what I was seeing previously.&lt;/p&gt;

&lt;p&gt;when I drive the cluster hard (in this case 6 clients, each client connecting to each of the 5 servers&lt;br/&gt;
each session creating/getting/deleting a particular node inside a loop that runs every second (sleeps for 1 sec at end of loop)&lt;/p&gt;</comment>
                            <comment id="12747893" author="fpj" created="Wed, 26 Aug 2009 12:33:11 +0100"  >&lt;p&gt;I&apos;ve found a corner that I was not expecting but was an easy fix. Basically receiveConnection was passing an invalid server identifier to connectOne which was throwing a NPE and was propagating to the Listener. The listener would consequently die, and would stop participating in leader election. The fix is just not to proceed with the connection when that happens.&lt;/p&gt;

&lt;p&gt;This patch is working fine for my test. It is important to note, though, that if we are overwhelming servers so much (clients are hammering the system and connections are failing), then there will be periods in which there will be no leader. The important invariant to satisfy is that the system converges to a live state once it stabilizes. In my tests, I observe periods with no leader when clients are hammering the servers with requests, but they converge to a leader soon after the clients stop. Of course, if we have no injected faults, the clients requests are executed just fine (there is always a leader). This is the behavior I expect to see.&lt;/p&gt;

&lt;p&gt;At the same time, although I think it was a good idea to test such an extreme case, I&apos;m still not convinced that this test is realistic. It would be great if we could model the cases this fault injection is trying to emulate to make sure they are really expected cases. &lt;/p&gt;

&lt;p&gt;Also, I don&apos;t see a good way of introducing a unit test for such extreme cases. In fact, I&apos;m not even sure it would make sense to test only leader election under such extreme conditions. &lt;/p&gt;</comment>
                            <comment id="12748018" author="breed" created="Wed, 26 Aug 2009 17:36:01 +0100"  >&lt;p&gt;agreed. i think the problem is that under high load we don&apos;t have a period of error free operation. i think it is ok to generate errors randomly as we are doing, but we should have periods of error free operation so that things can settle down.&lt;/p&gt;</comment>
                            <comment id="12748020" author="phunt" created="Wed, 26 Aug 2009 17:45:55 +0100"  >&lt;p&gt;I&apos;m seeing 2 cases:&lt;/p&gt;

&lt;p&gt;1) the entire quorum is unstable because clients are driving and causing many network (simulated) failures, in this case I agree&lt;/p&gt;

&lt;p&gt;2) but I also see the case where the quorum is stable, but there&apos;s one server that&apos;s&lt;br/&gt;
been orphaned from the group. it is never able to reconnect, even though the clients&lt;br/&gt;
are stopped and the quorum in general is stable.&lt;/p&gt;

&lt;p&gt;eventually 3 servers become orphaned (out of 5), in which case regardless of clients are running&lt;br/&gt;
or not the quorum will never re-form. I don&apos;t agree that this is &quot;ok&quot;.&lt;/p&gt;</comment>
                            <comment id="12748298" author="fpj" created="Thu, 27 Aug 2009 09:14:26 +0100"  >&lt;p&gt;Pat, I didn&apos;t understand from your last comment if you have tried the patch I uploaded yesterday. If you did and it still doesn&apos;t work for you, I would appreciate if you could upload logs and jstack traces when you have a chance. &lt;/p&gt;</comment>
                            <comment id="12763829" author="phunt" created="Fri, 9 Oct 2009 05:23:49 +0100"  >&lt;p&gt;I tried your latest patch with the latest trunk code and I&apos;m not able to reproduce the problem. Looks like this&lt;br/&gt;
is addressing the problem.&lt;/p&gt;</comment>
                            <comment id="12763850" author="hadoopqa" created="Fri, 9 Oct 2009 06:21:30 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12417726/ZOOKEEPER-512.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12417726/ZOOKEEPER-512.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 823371.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/20/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12764086" author="fpj" created="Fri, 9 Oct 2009 17:30:29 +0100"  >&lt;p&gt;Pat, does it make sense to add your fault injection framework as a test for this patch?&lt;/p&gt;</comment>
                            <comment id="12765674" author="phunt" created="Wed, 14 Oct 2009 19:13:48 +0100"  >&lt;p&gt;I don&apos;t think we are ready for that. It&apos;s pretty straightforward to run manually, however running automatically&lt;br/&gt;
it&apos;s difficult to determine success/failure for example. I sure we can do something but&lt;br/&gt;
it will take some effort.&lt;/p&gt;</comment>
                            <comment id="12767645" author="mahadev" created="Tue, 20 Oct 2009 02:12:39 +0100"  >&lt;p&gt;flavio, the patch looks good - &lt;/p&gt;

&lt;p&gt;The following logging can be imprvoed to include which quorum server it corresponds to (for unit testing) and in general. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Leaving listener&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!shutdown)
                LOG.fatal(&lt;span class=&quot;code-quote&quot;&gt;&quot;As I&apos;m leaving the listener thread, I won&apos;t be able to participate in leader election any longer... digital life sucks&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, I can see the hatred for digital life &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, but a more useful logging message would be better ! &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;also I am having troble understanding this -&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void connectOne(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sid){
 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (senderWorkerMap.get(sid) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;){
            InetSocketAddress electionAddr;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(self.quorumPeers.containsKey(sid))
                electionAddr =
                    self.quorumPeers.get(sid).electionAddr;
            &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;{
                LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Invalid server id: &quot;&lt;/span&gt; + sid);
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;you mentioned above that connectOne was being called with a sid that wasnt in the map. Is that possible?&lt;/p&gt;</comment>
                            <comment id="12767826" author="fpj" created="Tue, 20 Oct 2009 16:10:58 +0100"  >&lt;p&gt;Bad taste humor aside, I think the message is pretty valid: the listener thread is dying and the server won&apos;t be able to participate in leader election any longer. If you want, I can definitely remove the last part.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure either how, but all those faults were causing some calls to connectOne with an invalid sid, and the calls originated from receiveConnection. The trunk code assumes that this id is always valid, and it causes some trouble if the sid is not valid.&lt;/p&gt;</comment>
                            <comment id="12767857" author="mahadev" created="Tue, 20 Oct 2009 17:16:27 +0100"  >&lt;p&gt;my idea was to atleast add the server id/ipaddress for better logging and some other information if available!&lt;/p&gt;</comment>
                            <comment id="12768309" author="mahadev" created="Wed, 21 Oct 2009 17:16:09 +0100"  >&lt;p&gt;cancelling patch for flavio to update the logging.&lt;/p&gt;</comment>
                            <comment id="12768644" author="fpj" created="Thu, 22 Oct 2009 12:05:15 +0100"  >&lt;p&gt;Fixing log message and uploading new patch.&lt;/p&gt;</comment>
                            <comment id="12768650" author="hadoopqa" created="Thu, 22 Oct 2009 12:34:23 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12422891/ZOOKEEPER-512.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12422891/ZOOKEEPER-512.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 828216.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no tests are needed for this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/36/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12768656" author="fpj" created="Thu, 22 Oct 2009 12:50:55 +0100"  >&lt;p&gt;We have been testing this patch externally with Pat&apos;s fault injection framework that uses aspectj. It is difficult at this point to introduce his framework, so we have agreed to postpone adding such tests. The patch fixes some visible problems and passes previous tests.&lt;/p&gt;</comment>
                            <comment id="12769091" author="mahadev" created="Fri, 23 Oct 2009 06:17:57 +0100"  >&lt;p&gt;flavio, the patch looks good. Just trying to understand why the following code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;((!shutdown) &amp;amp;&amp;amp; (numRetries &amp;lt; 3)){
+                &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+                    ss = ServerSocketChannel.open();
+                    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; port = self.quorumPeers.get(self.getId()).electionAddr.getPort();
+                    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;My election bind port: &quot;&lt;/span&gt; + port);
+                    ss.socket().setReuseAddress(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;); 
+                    ss.socket().bind(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InetSocketAddress(port));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;has been moved into the while loop? Why do we need to bind within a while loop? &lt;/p&gt;</comment>
                            <comment id="12769209" author="fpj" created="Fri, 23 Oct 2009 13:38:44 +0100"  >&lt;p&gt;This is for retrying. If there is a problem while listening or trying to bind to the socket, it tries again and gives up after 3 consecutive attempts. &lt;/p&gt;</comment>
                            <comment id="12770641" author="mahadev" created="Tue, 27 Oct 2009 21:11:49 +0000"  >&lt;p&gt;+1 the patch looks good.&lt;/p&gt;</comment>
                            <comment id="12770644" author="mahadev" created="Tue, 27 Oct 2009 21:14:23 +0000"  >&lt;p&gt;I just committed this. thanks flavio.&lt;/p&gt;</comment>
                            <comment id="12770894" author="hudson" created="Wed, 28 Oct 2009 10:57:40 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #511 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/511/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/511/&lt;/a&gt;)&lt;br/&gt;
    . FLE election fails to elect leader (flavio via mahadev)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12422891" name="ZOOKEEPER-512.patch" size="5381" author="fpj" created="Thu, 22 Oct 2009 12:05:15 +0100"/>
                            <attachment id="12417726" name="ZOOKEEPER-512.patch" size="5283" author="fpj" created="Wed, 26 Aug 2009 12:33:11 +0100"/>
                            <attachment id="12417662" name="ZOOKEEPER-512.patch" size="2174" author="fpj" created="Tue, 25 Aug 2009 22:18:31 +0100"/>
                            <attachment id="12417607" name="ZOOKEEPER-512.patch" size="956" author="fpj" created="Tue, 25 Aug 2009 13:23:04 +0100"/>
                            <attachment id="12417471" name="ZOOKEEPER-512.patch" size="2766" author="fpj" created="Mon, 24 Aug 2009 12:41:38 +0100"/>
                            <attachment id="12417082" name="jst.txt" size="9772" author="phunt" created="Thu, 20 Aug 2009 01:12:29 +0100"/>
                            <attachment id="12417281" name="log3_debug.tar.gz" size="839291" author="phunt" created="Fri, 21 Aug 2009 17:28:59 +0100"/>
                            <attachment id="12417083" name="logs.tar.gz" size="234446" author="phunt" created="Thu, 20 Aug 2009 01:12:29 +0100"/>
                            <attachment id="12417176" name="logs2.tar.gz" size="613322" author="phunt" created="Thu, 20 Aug 2009 21:49:24 +0100"/>
                            <attachment id="12417313" name="t5_aj.tar.gz" size="1487207" author="phunt" created="Fri, 21 Aug 2009 22:08:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Aug 2009 10:18:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47758</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzv53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33029</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>