<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:49:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1560/ZOOKEEPER-1560.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1560] Zookeeper client hangs on creation of large nodes</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1560</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;To reproduce, try creating a node with 0.5M of data using java client. The test will hang waiting for a response from the server. See the attached patch for the test that reproduces the issue.&lt;/p&gt;

&lt;p&gt;It seems that &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1437&quot; title=&quot;Client uses session before SASL authentication complete&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1437&quot;&gt;&lt;del&gt;ZOOKEEPER-1437&lt;/del&gt;&lt;/a&gt; introduced a few issues to &lt;tt&gt;ClientCnxnSocketNIO.doIO&lt;/tt&gt; that prevent &lt;tt&gt;ClientCnxnSocketNIO&lt;/tt&gt; from sending large packets that require several invocations of &lt;tt&gt;SocketChannel.write&lt;/tt&gt; to complete. The first issue is that the call to &lt;tt&gt;outgoingQueue.removeFirstOccurrence(p);&lt;/tt&gt; removes the packet from the queue even if the packet wasn&apos;t completely sent yet.  It looks to me that this call should be moved under &lt;tt&gt;if (!pbb.hasRemaining())&lt;/tt&gt; The second issue is that &lt;tt&gt;p.createBB()&lt;/tt&gt; is reinitializing &lt;tt&gt;ByteBuffer&lt;/tt&gt; on every iteration, which confuses &lt;tt&gt;SocketChannel.write&lt;/tt&gt;. And the third issue is caused by extra calls to &lt;tt&gt;cnxn.getXid()&lt;/tt&gt; that increment xid on every iteration and confuse the server.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12611273">ZOOKEEPER-1560</key>
            <summary>Zookeeper client hangs on creation of large nodes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skye">Skye Wanderman-Milne</assignee>
                                    <reporter username="imotov">Igor Motov</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Oct 2012 00:45:05 +0100</created>
                <updated>Wed, 31 Oct 2012 23:00:47 +0000</updated>
                            <resolved>Wed, 31 Oct 2012 18:44:12 +0000</resolved>
                                    <version>3.4.4</version>
                    <version>3.5.0</version>
                                    <fixVersion>3.4.5</fixVersion>
                    <fixVersion>3.5.0</fixVersion>
                                    <component>java client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13473700" author="imotov" created="Thu, 11 Oct 2012 00:47:04 +0100"  >&lt;p&gt;Test that reproduces that issue.&lt;/p&gt;</comment>
                            <comment id="13474514" author="shralex" created="Thu, 11 Oct 2012 22:10:19 +0100"  >&lt;p&gt;Please also see &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1561&quot; title=&quot;Zookeeper client may hang on a server restart&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1561&quot;&gt;&lt;del&gt;ZOOKEEPER-1561&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13474571" author="yuzhihong@gmail.com" created="Thu, 11 Oct 2012 23:37:08 +0100"  >&lt;p&gt;In doIO(), should we check the return value from:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                    sock.write(pbb);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here is jstack where testLargeNodeData hung:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=5 tid=7f9bed000800 nid=0x10c382000 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [10c380000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
	- waiting on &amp;lt;7dc1a15c0&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:485)
	at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1309)
	- locked &amp;lt;7dc1a15c0&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:781)
	at org.apache.zookeeper.test.ClientTest.testLargeNodeData(ClientTest.java:531)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we can send data in chunks if pbb.remaining() is beyond certain threshold.&lt;/p&gt;</comment>
                            <comment id="13474616" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 00:25:29 +0100"  >&lt;p&gt;Patch v1 implements the chunk&apos;ed write.&lt;/p&gt;

&lt;p&gt;ClientTest passes.&lt;/p&gt;

&lt;p&gt;Please provide your comments.&lt;/p&gt;</comment>
                            <comment id="13474617" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 00:28:06 +0100"  >&lt;p&gt;junit.run:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Running org.apache.zookeeper.test.ClientTest&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Tests run: 12, Failures: 0, Errors: 0, Time elapsed: 17.694 sec&lt;/p&gt;</comment>
                            <comment id="13474624" author="ekoontz" created="Fri, 12 Oct 2012 00:34:05 +0100"  >&lt;p&gt;Hi Ted, I think originalLimit can be final, just as CHUNK_SIZE is. Also should CHUNK_SIZE be a configurable setting, defaulting to 2000?&lt;/p&gt;</comment>
                            <comment id="13474631" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 00:42:23 +0100"  >&lt;blockquote&gt;&lt;p&gt;should CHUNK_SIZE be a configurable setting&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If I knew how to access Configuration instance from within ClientCnxnSocketNIO &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;originalLimit can be final&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. Will incorporate into next patch after I get more review comments.&lt;/p&gt;</comment>
                            <comment id="13474641" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 00:49:21 +0100"  >&lt;p&gt;Let QA run the tests&lt;/p&gt;</comment>
                            <comment id="13474645" author="ekoontz" created="Fri, 12 Oct 2012 00:55:36 +0100"  >&lt;p&gt;Hi Ted,&lt;br/&gt;
For making the chunk size configurable, I think something like this would work: (add to same file as you are patching (ClientCnxnSocketNIO.java))&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; CLIENT_WRITE_CHUNK_SIZE = &lt;span class=&quot;code-quote&quot;&gt;&quot;zookeeper.client.nio.writechunk&quot;&lt;/span&gt;;

...

&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; CHUNK_SIZE = getProperty(CLIENT_WRITE_CHUNK_SIZE,2000);

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13474656" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 01:08:24 +0100"  >&lt;p&gt;Thanks Eugene for the hint.&lt;/p&gt;

&lt;p&gt;Here is patch v2 which passed ClientTest as well.&lt;/p&gt;</comment>
                            <comment id="13474668" author="shralex" created="Fri, 12 Oct 2012 01:30:29 +0100"  >&lt;p&gt;Hi Ted,&lt;/p&gt;

&lt;p&gt;why not test for the return value of sock.write ? &lt;/p&gt;

&lt;p&gt;perhaps if it couldn&apos;t write the entire chunk size we can raise an exception.&lt;/p&gt;</comment>
                            <comment id="13474669" author="hadoopqa" created="Fri, 12 Oct 2012 01:32:43 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548823/zookeeper-1560-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548823/zookeeper-1560-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1212//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13474670" author="ekoontz" created="Fri, 12 Oct 2012 01:33:01 +0100"  >&lt;p&gt;@Ted, your patch looks good as far as configurability/final-ness.&lt;/p&gt;</comment>
                            <comment id="13474679" author="yuzhihong@gmail.com" created="Fri, 12 Oct 2012 01:42:44 +0100"  >&lt;p&gt;What exception should be raised if not all data is written ?&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13474683" author="shralex" created="Fri, 12 Oct 2012 01:47:40 +0100"  >&lt;p&gt;maybe IOException since this is what sock.write may throw anyway.&lt;/p&gt;</comment>
                            <comment id="13474709" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 02:21:30 +0100"  >&lt;p&gt;Patch v3 adds the check for number of bytes written.&lt;/p&gt;

&lt;p&gt;ClientTest passed.&lt;/p&gt;</comment>
                            <comment id="13474715" author="hadoopqa" created="Fri, 12 Oct 2012 02:31:16 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548828/zookeeper-1560-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548828/zookeeper-1560-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1213//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13474742" author="hadoopqa" created="Fri, 12 Oct 2012 03:37:45 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548839/zookeeper-1560-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548839/zookeeper-1560-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1214//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13474747" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 03:52:59 +0100"  >&lt;p&gt;I couldn&apos;t reproduce the error in test.ClientTest&lt;br/&gt;
Looking at &lt;br/&gt;
&lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/java/nio/channels/SocketChannel.html#write%28java.nio.ByteBuffer%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/javase/6/docs/api/java/nio/channels/SocketChannel.html#write%28java.nio.ByteBuffer%29&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Unless otherwise specified, a write operation will return only after writing all of the r requested bytes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the additional check in patch v3 may not be needed&lt;/p&gt;</comment>
                            <comment id="13474830" author="shralex" created="Fri, 12 Oct 2012 07:09:14 +0100"  >&lt;p&gt;Hi Ted,&lt;/p&gt;

&lt;p&gt;instead of int expectedSize = pbb.limit() - pbb.position();&lt;br/&gt;
you can use pbb.remaining().&lt;/p&gt;

&lt;p&gt;BTW, the JIRA description mentions several problems with the same block of code.&lt;br/&gt;
The first one of them (dequeuing before we know sending succeeded) also causes ZK-1561. &lt;br/&gt;
Please correct me if I&apos;m wrong but seems like the current patch doesn&apos;t address the 3 problems&lt;br/&gt;
mentioned in the description of this JIRA.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Alex&lt;/p&gt;</comment>
                            <comment id="13474981" author="fanster.z" created="Fri, 12 Oct 2012 14:11:54 +0100"  >&lt;p&gt;I think this would work for both 1560 and 1561.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; if (p != null) {
                    updateLastSend();
                    if ((p.requestHeader != null) &amp;amp;&amp;amp;
                            (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
                            (p.requestHeader.getType() != OpCode.auth)) {
                        p.requestHeader.setXid(cnxn.getXid());
                    }
                    p.createBB();
                    ByteBuffer pbb = p.bb;
          ---&amp;gt;   while (pbb.hasRemaining()) sock.write(pbb);
          ---&amp;gt;   outgoingQueue.removeFirstOccurrence(p);
                    sentCount++;
                    if (p.requestHeader != null
                            &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.ping
                            &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.auth) {
                        pending.add(p);
                    }
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13474991" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 14:53:12 +0100"  >&lt;p&gt;Patch v4 adopts what Igor and Jacky suggested.&lt;/p&gt;

&lt;p&gt;Since Packet p is guaranteed to send all bytes in its ByteBuffer, I think problem 2 no longer exists.&lt;/p&gt;

&lt;p&gt;ChrootClientTest and ClientTest both passed.&lt;/p&gt;</comment>
                            <comment id="13475014" author="hadoopqa" created="Fri, 12 Oct 2012 15:25:39 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548889/zookeeper-1560-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548889/zookeeper-1560-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13475032" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 15:46:33 +0100"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//testReport/org.apache.zookeeper.test/ClientTest/testLargeNodeData/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1215//testReport/org.apache.zookeeper.test/ClientTest/testLargeNodeData/&lt;/a&gt; :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-10-12 14:10:50,042 [myid:] - WARN  [main-SendThread(localhost:11221):ClientCnxn$SendThread@1089] - Session 0x13a555031cf0000 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; server localhost/127.0.0.1:11221, unexpected error, closing socket connection and attempting reconnect
java.io.IOException: Couldn&apos;t write 2000 bytes, 1152 bytes written
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:142)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:370)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)
2012-10-12 14:10:50,044 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@349] - caught end of stream exception
EndOfStreamException: Unable to read additional data from client sessionid 0x13a555031cf0000, likely client has closed socket
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:220)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Patch v5 adds more information to exception message.&lt;/p&gt;</comment>
                            <comment id="13475050" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 16:02:56 +0100"  >&lt;p&gt;Patch v6 changes the condition for raising IOE: if there is no progress between successive sock.write() calls.&lt;/p&gt;

&lt;p&gt;I guess socket&apos;s output buffer might be a limiting factor as to the number of bytes written in a particular sock.write() call.&lt;/p&gt;</comment>
                            <comment id="13475062" author="hadoopqa" created="Fri, 12 Oct 2012 16:15:18 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548893/zookeeper-1560-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548893/zookeeper-1560-v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1216//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13475079" author="hadoopqa" created="Fri, 12 Oct 2012 16:36:23 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548898/zookeeper-1560-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548898/zookeeper-1560-v6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    -1 core tests.  The patch failed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1217//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13475085" author="ekoontz" created="Fri, 12 Oct 2012 16:41:00 +0100"  >&lt;p&gt;It seems like in a particular iteration, 0 bytes is written:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
localhost/127.0.0.1:11222, unexpected error, closing socket connection and attempting reconnect
     [exec]     [junit] java.io.IOException: Couldn&apos;t write 2000 bytes, 0 bytes written in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; iteration and 77152 bytes written in total. Original limit: 500074
     [exec]     [junit] 	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:145)
     [exec]     [junit] 	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:375)
     [exec]     [junit] 	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)
     [exec]     [junit] 2012-10-12 15:20:42,629 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11222:NIOServerCnxn@349] - caught end of stream exception
     [exec]     [junit] EndOfStreamException: Unable to read additional data from client sessionid 0x13a55902b650001, likely client has closed socket
     [exec]     [junit] 	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:220)
     [exec]     [junit] 	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208)
     [exec]     [junit] 	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
     [exec]     [junit] 2012-10-12 15:20:42,630 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11222:NIOServerCnxn@1001] - Closed socket connection &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; client /127.0.0.1:57126 which had sessionid 0x13a55902b650001
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Seems like there&apos;s a strange resemblance among all the test failures thus far: always fails after 77152 bytes written.&lt;/p&gt;</comment>
                            <comment id="13475095" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 16:55:22 +0100"  >&lt;p&gt;Patch v7 changes the IOE to a warning.&lt;br/&gt;
Let&apos;s see if the test is able to make further progress.&lt;/p&gt;

&lt;p&gt;I wonder whether 77152 bytes would be big enough for most use cases.&lt;/p&gt;</comment>
                            <comment id="13475134" author="hadoopqa" created="Fri, 12 Oct 2012 17:39:31 +0100"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548908/zookeeper-1560-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548908/zookeeper-1560-v7.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1218//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13475146" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 17:47:31 +0100"  >&lt;p&gt;Good news was that patch v7 passed.&lt;br/&gt;
Not so good news was that I didn&apos;t find any occurrence of the warning message I added in v7.&lt;/p&gt;

&lt;p&gt;Essentially patch v7 is the same as patch v2 - we shouldn&apos;t bail if a single sock.write() call didn&apos;t make progress.&lt;/p&gt;</comment>
                            <comment id="13483426" author="skye" created="Wed, 24 Oct 2012 18:46:14 +0100"  >&lt;p&gt;A couple questions/concerns:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Is it safe to write out the whole packet in a while loop? Doing so essentially causes the thread to block until everything is written. This seems pretty dangerous to me since there&apos;s only a single SendThread &amp;#8211; I think it would be safer to take the current approach of only doing one socket write per invocation of doIO. We would still need to address issue 1 in the description (packets are being removed from the queue even if they weren&apos;t fully written).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What is the purpose of chunking the data? Why not write as much as possible?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This was commented on earlier, but what&apos;s going on with issues 2 and 3 from the description? Addressing only issue 1 seems to fix the problem of sending large packets.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13483507" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 20:35:53 +0100"  >&lt;p&gt;Thanks for the review.&lt;br/&gt;
I agree chunking is not needed.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;it would be safer to take the current approach of only doing one socket write per invocation of doIO&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we leave Packet p in the outgoingQueue if there is data pending to be written and return from doIO, would the next invocation of doIO continue writing the remaining data from the same Packet ?&lt;br/&gt;
If so, what is the benefit of one socket write per invocation ?&lt;br/&gt;
Should we remove the Packet p and enqueue it to the tail of outgoingQueue if there is data pending ?&lt;/p&gt;</comment>
                            <comment id="13483544" author="skye" created="Wed, 24 Oct 2012 21:13:20 +0100"  >&lt;p&gt;The benefit of one socket write per invocation is that it frees up the SendThread to perform other actions in between writes. For instance, it looks like the SendThread is also response for reading incoming data in doIO. I&apos;m not sure what the consequences of having the thread block until the whole packet is written are; it might be ok, but if we can avoid looping it might save us some trouble later.&lt;/p&gt;

&lt;p&gt;The next invocation of doIO should continue writing any remaining data from a previous packet (we don&apos;t want to mix up data from different packets). However, I&apos;m not sure the current code will do this correctly &amp;#8211; I think it&apos;s possible for another packet to be pushed onto the queue while another packet is in the middle of being written. I&apos;m going to look into this further.&lt;/p&gt;</comment>
                            <comment id="13483563" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 21:30:24 +0100"  >&lt;p&gt;For problem #3, I only found one call to getXid() in doIO:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                        p.requestHeader.setXid(cnxn.getXid());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which is not in a loop. Some clarification would be nice.&lt;/p&gt;</comment>
                            <comment id="13483566" author="phunt" created="Wed, 24 Oct 2012 21:32:58 +0100"  >&lt;p&gt;That&apos;s a good point, the while loop in the patch seems like it would block when the tcp buffer is full (e.g. if the server is slow to read). I don&apos;t think that&apos;s a good idea. Rather we should have the code structured similar to what it was before - write as much as possible and then use the selector to wait for the socket to become writeable again. Eventually the send buffer will drain and we can remove it from the queue.&lt;/p&gt;</comment>
                            <comment id="13483592" author="nekto0n" created="Wed, 24 Oct 2012 22:07:48 +0100"  >&lt;p&gt;If no one can prepend &lt;tt&gt;outgoingQueue&lt;/tt&gt; with packet, straightforward implementation like this should work:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;diff --git a/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java b/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
index 70d8538..457c8cc 100644
--- a/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
+++ b/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
@@ -111,17 +111,20 @@ public class ClientCnxnSocketNIO extends ClientCnxnSocket {
                         cnxn.sendThread.clientTunneledAuthenticationInProgress());
 
                 if (p != null) {
-                    outgoingQueue.removeFirstOccurrence(p);
                     updateLastSend();
-                    if ((p.requestHeader != null) &amp;amp;&amp;amp;
-                            (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
-                            (p.requestHeader.getType() != OpCode.auth)) {
-                        p.requestHeader.setXid(cnxn.getXid());
+                    if (p.bb != null) {
+                        if ((p.requestHeader != null) &amp;amp;&amp;amp;
+                                (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
+                                (p.requestHeader.getType() != OpCode.auth)) {
+                            p.requestHeader.setXid(cnxn.getXid());
+                        }
+                        p.createBB();
+                    // otherwise we&apos;re in the middle of sending packet
                     }
-                    p.createBB();
                     ByteBuffer pbb = p.bb;
                     sock.write(pbb);
                     if (!pbb.hasRemaining()) {
+                        outgoingQueue.removeFirstOccurrence(p);
                         sentCount++;
                         if (p.requestHeader != null
                                 &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.ping

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13483597" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 22:13:06 +0100"  >&lt;p&gt;Looking at createBB(), upon exit the field bb wouldn&apos;t be null.&lt;br/&gt;
I wonder why p.createBB() is enclosed in the if (p.bb != null) block above ?&lt;/p&gt;</comment>
                            <comment id="13483601" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 22:18:57 +0100"  >&lt;blockquote&gt;&lt;p&gt;similar to what it was before - write as much as possible and then use the selector to wait for the socket to become writeable again&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I looked at svn log for ClientCnxnSocketNIO.java back to 2011-04-12 and didn&apos;t seem to find the above change.&lt;br/&gt;
FYI&lt;/p&gt;</comment>
                            <comment id="13483662" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 23:26:22 +0100"  >&lt;p&gt;ClientTest normally takes 36 seconds.&lt;br/&gt;
I ran ClientTest, twice, with Nikita&apos;s change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    [junit] Running org.apache.zookeeper.test.ClientTest
    [junit] Tests run: 12, Failures: 12, Errors: 0, Time elapsed: 340.748 sec
    [junit] Test org.apache.zookeeper.test.ClientTest FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I then tried the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
===================================================================
--- src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java (revision 1401900)
+++ src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java (working copy)
@@ -111,17 +111,20 @@
                         cnxn.sendThread.clientTunneledAuthenticationInProgress());

                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-                    outgoingQueue.removeFirstOccurrence(p);
                     updateLastSend();
                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((p.requestHeader != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &amp;amp;&amp;amp;
-                            (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
-                            (p.requestHeader.getType() != OpCode.auth)) {
-                        p.requestHeader.setXid(cnxn.getXid());
+                        (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
+                        (p.requestHeader.getType() != OpCode.auth)) {
+                      p.requestHeader.setXid(cnxn.getXid());
                     }
-                    p.createBB();
+                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p.bb == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+                        p.createBB();
+                        &lt;span class=&quot;code-comment&quot;&gt;// otherwise we&apos;re in the middle of sending packet
&lt;/span&gt;+                    }
                     ByteBuffer pbb = p.bb;
                     sock.write(pbb);
                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!pbb.hasRemaining()) {
+                        outgoingQueue.removeFirstOccurrence(p);
                         sentCount++;
                         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p.requestHeader != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                                 &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.ping
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;testLargeNodeData encountered connection loss.&lt;/p&gt;</comment>
                            <comment id="13483691" author="yuzhihong@gmail.com" created="Wed, 24 Oct 2012 23:51:40 +0100"  >&lt;blockquote&gt;&lt;p&gt;Should we remove the Packet p and enqueue it to the tail of outgoingQueue if there is data pending ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The answer to my own question is no.&lt;br/&gt;
This would very likely result in connection loss / timeout when node data size is large.&lt;/p&gt;</comment>
                            <comment id="13483725" author="phunt" created="Thu, 25 Oct 2012 00:27:40 +0100"  >&lt;blockquote&gt;&lt;p&gt;PDH: similar to what it was before - write as much as possible and then use the selector to wait for the socket to become writeable again&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;Ted: I looked at svn log for ClientCnxnSocketNIO.java back to 2011-04-12 and didn&apos;t seem to find the above change. FYI&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Ted, the following is what I was referring to. This is from latest on branch-3.3, 3.4.4 has a similar (although broken) block where it&apos;s a bit less obvious what&apos;s happening. branch-3.3 is more clear.&lt;/p&gt;

&lt;p&gt;Notice that we first attempt to write, if !remaining them we remove from the queue, otw we&apos;ll wait till the next time the selector wakes us up (the final isempty check is pretty criticial here as well to set interest correctly) and retry until the buffer is drained.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;            if (sockKey.isWritable()) {
                synchronized (outgoingQueue) {
                    if (!outgoingQueue.isEmpty()) {
                        ByteBuffer pbb = outgoingQueue.getFirst().bb;
                        sock.write(pbb);
                        if (!pbb.hasRemaining()) {
                            sentCount++;
                            Packet p = outgoingQueue.removeFirst();
                            if (p.header != null
                                    &amp;amp;&amp;amp; p.header.getType() != OpCode.ping
                                    &amp;amp;&amp;amp; p.header.getType() != OpCode.auth) {
                                pendingQueue.add(p);
                            }
                        }
                    }
                }
            }
            if (outgoingQueue.isEmpty()) {
                disableWrite();
            } else {
                enableWrite();
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13483737" author="yuzhihong@gmail.com" created="Thu, 25 Oct 2012 00:49:25 +0100"  >&lt;p&gt;I got the following based on the above code snippet:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
===================================================================
--- src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java	(revision 1401904)
+++ src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java	(working copy)
@@ -111,18 +111,18 @@
                         cnxn.sendThread.clientTunneledAuthenticationInProgress());
 
                 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
-                    outgoingQueue.removeFirstOccurrence(p);
                     updateLastSend();
                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((p.requestHeader != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &amp;amp;&amp;amp;
                             (p.requestHeader.getType() != OpCode.ping) &amp;amp;&amp;amp;
                             (p.requestHeader.getType() != OpCode.auth)) {
                         p.requestHeader.setXid(cnxn.getXid());
                     }
-                    p.createBB();
+                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p.bb == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) p.createBB();
                     ByteBuffer pbb = p.bb;
                     sock.write(pbb);
                     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!pbb.hasRemaining()) {
                         sentCount++;
+                        outgoingQueue.removeFirstOccurrence(p);
                         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (p.requestHeader != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                                 &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.ping
                                 &amp;amp;&amp;amp; p.requestHeader.getType() != OpCode.auth) {
@@ -141,8 +141,12 @@
             &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(pendingQueue) {
                 pendingQueue.addAll(pending);
             }
-
         }
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outgoingQueue.isEmpty()) {
+          disableWrite();
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+            enableWrite();
+        }
     }
 
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Packet findSendablePacket(LinkedList&amp;lt;Packet&amp;gt; outgoingQueue,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I still saw testLargeNodeData fail:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Testcase: testLargeNodeData took 0.714 sec
  Caused an ERROR
KeeperErrorCode = ConnectionLoss &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; /large
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; /large
  at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)
  at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
  at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
  at org.apache.zookeeper.test.ClientTest.testLargeNodeData(ClientTest.java:61)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13483748" author="imotov" created="Thu, 25 Oct 2012 01:04:04 +0100"  >&lt;blockquote&gt;
&lt;p&gt;For problem #3, I only found one call to getXid() in doIO:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
p.requestHeader.setXid(cnxn.getXid());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which is not in a loop. Some clarification would be nice.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s in the outer loop, so to speak. If the packet is large and is sent in chunks, Xid is incremented for every chunk. Before &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1437&quot; title=&quot;Client uses session before SASL authentication complete&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1437&quot;&gt;&lt;del&gt;ZOOKEEPER-1437&lt;/del&gt;&lt;/a&gt; it was incremented for every packet. &lt;/p&gt;</comment>
                            <comment id="13483787" author="skye" created="Thu, 25 Oct 2012 01:57:54 +0100"  >&lt;p&gt;I&apos;ve created a new patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1560&quot; title=&quot;Zookeeper client hangs on creation of large nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1560&quot;&gt;&lt;del&gt;ZOOKEEPER-1560&lt;/del&gt;&lt;/a&gt;-v8.patch) that incorporates what we have so far (moving removeFirstOccurrence to after the packet is completely written, only calling createBB when a BB doesn&apos;t already exist, and only calling setXid when no xid is already set). It also modifies findSendablePacket to always choose the first packet if it is partially written. The only place that a packet is prepended to outgoingQueue is ClientCnxn.primeConnection, which should only happen at the very beginning, so a partially-written packet should remain at the beginning of the queue until it is removed. I also cleaned up some of the code so the changes look more extensive than they really are &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Posted at &lt;a href=&quot;https://reviews.apache.org/r/7730&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/7730&lt;/a&gt;. I added comments to mark the important parts (as opposed to the clean up).&lt;/p&gt;</comment>
                            <comment id="13483809" author="hadoopqa" created="Thu, 25 Oct 2012 02:29:26 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12550725/ZOOKEEPER-1560-v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12550725/ZOOKEEPER-1560-v8.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1238//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13483823" author="yuzhihong@gmail.com" created="Thu, 25 Oct 2012 03:04:16 +0100"  >&lt;p&gt;I left some minor comments on review board.&lt;br/&gt;
Nice work, Skye.&lt;/p&gt;</comment>
                            <comment id="13485273" author="skye" created="Sat, 27 Oct 2012 00:20:46 +0100"  >&lt;p&gt;syncing with review board&lt;/p&gt;</comment>
                            <comment id="13485293" author="hadoopqa" created="Sat, 27 Oct 2012 00:58:35 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551039/ZOOKEEPER-1560-v8_r3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551039/ZOOKEEPER-1560-v8_r3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1391526.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1241//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13485720" author="zhihyu@ebaysf.com" created="Sun, 28 Oct 2012 21:42:44 +0000"  >&lt;p&gt;In patch v8, I don&apos;t see special handling for cnxn.getXid()&lt;br/&gt;
FYI&lt;/p&gt;</comment>
                            <comment id="13485854" author="phunt" created="Mon, 29 Oct 2012 06:27:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;In patch v8, I don&apos;t see special handling for cnxn.getXid()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Ted, I&apos;m not clear, what do you mean by that comment?&lt;/p&gt;</comment>
                            <comment id="13486044" author="zhihyu@ebaysf.com" created="Mon, 29 Oct 2012 14:22:23 +0000"  >&lt;p&gt;It was about &apos;the third issue is caused by extra calls to cnxn.getXid() that increment xid on every iteration and confuse the server.&apos;&lt;br/&gt;
In previous patch, there was check whether Xid is 0 before calling p.requestHeader.setXid().&lt;/p&gt;</comment>
                            <comment id="13486983" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 16:15:48 +0000"  >&lt;p&gt;Skye provided the latest patch. Assigning to Skye.&lt;/p&gt;</comment>
                            <comment id="13487332" author="skye" created="Tue, 30 Oct 2012 22:51:53 +0000"  >&lt;p&gt;Rather than checking if the xid is 0, the new patch moves the xid code into the if (p.bb == null) block. We&apos;re essentially checking whether we&apos;ve already started writing the packet, and if we haven&apos;t, we call createBB and setXid. Since we always do these two actions under the same condition (i.e., when we see a new packet), there&apos;s no reason to have two separate checks.&lt;/p&gt;</comment>
                            <comment id="13487335" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 22:57:10 +0000"  >&lt;p&gt;Above explanation makes sense.&lt;/p&gt;</comment>
                            <comment id="13487525" author="phunt" created="Wed, 31 Oct 2012 04:59:52 +0000"  >&lt;p&gt;Looks good to me. +1 on the patch.&lt;/p&gt;</comment>
                            <comment id="13488002" author="skye" created="Wed, 31 Oct 2012 17:43:19 +0000"  >&lt;p&gt;Add ClientTest.testLargeNodeData to v8_r3 patch.&lt;/p&gt;</comment>
                            <comment id="13488010" author="hadoopqa" created="Wed, 31 Oct 2012 17:51:50 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551585/ZOOKEEPER-1560-v8_r4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551585/ZOOKEEPER-1560-v8_r4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1404260.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1242//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1242//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13488025" author="skye" created="Wed, 31 Oct 2012 18:01:41 +0000"  >&lt;p&gt;Can anyone figure out why QA couldn&apos;t apply the patch?&lt;/p&gt;</comment>
                            <comment id="13488034" author="zhihyu@ebaysf.com" created="Wed, 31 Oct 2012 18:08:15 +0000"  >&lt;p&gt;I think Patrick forgot to announce the integration of your prior patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
r1404260 | phunt | 2012-10-31 10:24:54 -0700 (Wed, 31 Oct 2012) | 1 line

ZOOKEEPER-1560 Zookeeper client hangs on creation of large nodes (Skye Wanderman-Milne via phunt)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13488070" author="phunt" created="Wed, 31 Oct 2012 18:36:59 +0000"  >&lt;p&gt;Things take time. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I was waiting for Skye to update the patch to include the missing test. It&apos;s failing to apply now because the most recent patch is now partially committed to trunk. Working on it.&lt;/p&gt;</comment>
                            <comment id="13488077" author="phunt" created="Wed, 31 Oct 2012 18:44:12 +0000"  >&lt;p&gt;Committed to branch-3.4 and trunk. Thanks Skye et. al. !&lt;/p&gt;</comment>
                            <comment id="13488345" author="hudson" created="Wed, 31 Oct 2012 23:00:47 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1728 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1728/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1728/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1560&quot; title=&quot;Zookeeper client hangs on creation of large nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1560&quot;&gt;&lt;del&gt;ZOOKEEPER-1560&lt;/del&gt;&lt;/a&gt; Zookeeper client hangs on creation of large nodes. Added missing test. (Skye Wanderman-Milne via phunt) (Revision 1404288)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1560&quot; title=&quot;Zookeeper client hangs on creation of large nodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1560&quot;&gt;&lt;del&gt;ZOOKEEPER-1560&lt;/del&gt;&lt;/a&gt; Zookeeper client hangs on creation of large nodes (Skye Wanderman-Milne via phunt) (Revision 1404260)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
phunt : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1404288&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1404288&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientTest.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;phunt : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1404260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1404260&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12611304">ZOOKEEPER-1561</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12550725" name="ZOOKEEPER-1560-v8.patch" size="5934" author="skye" created="Thu, 25 Oct 2012 01:57:54 +0100"/>
                            <attachment id="12551039" name="ZOOKEEPER-1560-v8_r3.patch" size="7493" author="skye" created="Sat, 27 Oct 2012 00:20:46 +0100"/>
                            <attachment id="12551585" name="ZOOKEEPER-1560-v8_r4.patch" size="8367" author="skye" created="Wed, 31 Oct 2012 17:43:19 +0000"/>
                            <attachment id="12548669" name="ZOOKEEPER-1560.patch" size="921" author="imotov" created="Thu, 11 Oct 2012 00:47:04 +0100"/>
                            <attachment id="12548823" name="zookeeper-1560-v1.txt" size="2370" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 00:25:29 +0100"/>
                            <attachment id="12548828" name="zookeeper-1560-v2.txt" size="2986" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 01:08:24 +0100"/>
                            <attachment id="12548839" name="zookeeper-1560-v3.txt" size="3285" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 02:21:30 +0100"/>
                            <attachment id="12548889" name="zookeeper-1560-v4.txt" size="4326" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 14:53:12 +0100"/>
                            <attachment id="12548893" name="zookeeper-1560-v5.txt" size="4548" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 15:46:33 +0100"/>
                            <attachment id="12548898" name="zookeeper-1560-v6.txt" size="4649" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 16:02:56 +0100"/>
                            <attachment id="12548908" name="zookeeper-1560-v7.txt" size="4636" author="zhihyu@ebaysf.com" created="Fri, 12 Oct 2012 16:55:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Oct 2012 21:10:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>247171</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1z5b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>45345</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>