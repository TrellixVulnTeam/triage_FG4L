<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:45:44 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-78/ZOOKEEPER-78.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-78] added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-78</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Here&apos;s a patch which adds a little WriteLock helper class for performing leader elections or creating exclusive locks in some directory znode. Note its an early cut; am sure we can improve it over time. The aim is to avoid folks having to use the low level ZK stuff but provide a simpler high level abstraction.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12400486">ZOOKEEPER-78</key>
            <summary>added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mahadev">Mahadev konar</assignee>
                                    <reporter username="jstrachan">james strachan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Jul 2008 16:35:42 +0100</created>
                <updated>Wed, 8 Jul 2009 21:23:56 +0100</updated>
                            <resolved>Thu, 23 Apr 2009 22:41:38 +0100</resolved>
                                    <version>3.0.0</version>
                                    <fixVersion>3.2.0</fixVersion>
                                    <component>java client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                                                            <comments>
                            <comment id="12614449" author="mahadev" created="Thu, 17 Jul 2008 18:18:08 +0100"  >&lt;p&gt;assiging this to james since he is working on this.&lt;/p&gt;</comment>
                            <comment id="12614461" author="phunt" created="Thu, 17 Jul 2008 18:41:18 +0100"  >&lt;p&gt;We should document the leader election on the recipes page first.&lt;/p&gt;</comment>
                            <comment id="12614548" author="fpj" created="Thu, 17 Jul 2008 23:20:41 +0100"  >&lt;p&gt;This is a nice implementation, James. Good job! My two comments are:&lt;/p&gt;

&lt;p&gt;1- It might be a good idea to throw the exceptions instead of trying to catch them and retry. You will end up with a cleaner code;&lt;br/&gt;
2- I&apos;m not sure if it is necessary to add the log4j configuration. Is there a particular reason for including it or it is there by accident?&lt;/p&gt;
</comment>
                            <comment id="12614703" author="jstrachan" created="Fri, 18 Jul 2008 12:51:57 +0100"  >&lt;p&gt;Thanks Flavio! &lt;/p&gt;

&lt;p&gt;Totally agreed on 1. Strictly speaking we should catch all exceptions and handle them properly (which may mean throwing some, or responding properly to others or whatever).&lt;/p&gt;

&lt;p&gt;One of the main reasons for the retry logic was to avoid errors like trying to create a znode that already exists or loosing connection to the ZK server etc - but we should go through all possible exceptions and handle them much cleaner.&lt;/p&gt;

&lt;p&gt;In particular we really need test cases that show the server closing and restarting during the process of acquiring the lock or after a lock owner has the lock etc.  &lt;/p&gt;

&lt;p&gt;I figured I&apos;d send a patch first and see if anyone else had a better implementation lying around - or knew a neater way to solve this - before I spent too much time getting it totally correct etc. &lt;/p&gt;

&lt;p&gt;For 2) I just added that so that when running the unit tests you could see INFO or DEBUG level logging etc (particularly when running in your IDE)&lt;/p&gt;</comment>
                            <comment id="12614726" author="jstrachan" created="Fri, 18 Jul 2008 14:41:01 +0100"  >&lt;p&gt;here&apos;s an updated patch which has better documentation and includes the recipe documentation linked to from the javadoc - but which could be used stand alone as well if required.&lt;/p&gt;

&lt;p&gt;I&apos;ve also included the description from &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-79&quot; title=&quot;Document jacob&amp;#39;s leader election on the wiki recipes page&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-79&quot;&gt;&lt;del&gt;ZOOKEEPER-79&lt;/del&gt;&lt;/a&gt; as well&lt;/p&gt;</comment>
                            <comment id="12614745" author="jstrachan" created="Fri, 18 Jul 2008 16:05:53 +0100"  >&lt;p&gt;Here is an improved version. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;we use more optimal comparison by using a ZNodeName object which caches the prefix &amp;amp; sequence number for ordering node names. We can also use this to order node names using different prefixes - maybe useful for read/write locks&lt;/li&gt;
	&lt;li&gt;fixed a bug and enhanced the test case so that we now test that a leader is established; then when that leader fails another leader/owner is created&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12614748" author="jstrachan" created="Fri, 18 Jul 2008 16:07:10 +0100"  >&lt;p&gt;BTW I just deleted the other 2 patches to avoid confusion; the latest patch includes the previous changes etc&lt;/p&gt;</comment>
                            <comment id="12615305" author="breed" created="Mon, 21 Jul 2008 17:53:02 +0100"  >&lt;p&gt;There is a bug in this block of code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!closed.get() &amp;amp;&amp;amp; id == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
           retryDelay(attempt++);
           &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
               id = zookeeper.create(dir + &lt;span class=&quot;code-quote&quot;&gt;&quot;/x-&quot;&lt;/span&gt;, data, acl, EPHEMERAL | SEQUENCE);
               idName = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ZNodeName(id);
               &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
                   LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Created id: &quot;&lt;/span&gt; + id);
               }
           } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e) {
               LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Caught: &quot;&lt;/span&gt; + e, e);
           } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {
               LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Caught: &quot;&lt;/span&gt; + e, e);
           }
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;zookeeper.create is not idempotent, so blindly retrying will land you into problems:&lt;/p&gt;

&lt;p&gt;1) You start the create, a connection error happens, the create completes but you don&apos;t get a response&lt;br/&gt;
2) You retry your create&lt;br/&gt;
3) You may end up waiting on the znode from step 1) which will not go away&lt;/p&gt;

&lt;p&gt;I&apos;ve been thinking of easy ways of getting around this problem and the easiest seems to be constructing the name as x-identifier-sequenceNumber. You could use the hostname or the sessionid as the identifier. When you do the retry you have to do a getChildren() to see if there are any znodes with your identifier and then use that znode if it exists.&lt;/p&gt;</comment>
                            <comment id="12615618" author="jstrachan" created="Tue, 22 Jul 2008 14:17:00 +0100"  >&lt;p&gt;Great catch Benjamin! I&apos;ve a working patch using your algorithm; am using x-sessionId-sequenceNumber and its working a treat (though its a tad hard to force ZK to fail mid-create &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;

&lt;p&gt;Am working on some unit tests to try out the server stopping/starting which I&apos;ll attach shortly once they&apos;re working a bit better...&lt;/p&gt;</comment>
                            <comment id="12615628" author="chirino" created="Tue, 22 Jul 2008 14:57:18 +0100"  >&lt;p&gt;If possible, it might be nice if the WriteLock implemented the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/locks/Lock.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Lock&lt;/a&gt; interface.&lt;/p&gt;</comment>
                            <comment id="12615737" author="jstrachan" created="Tue, 22 Jul 2008 20:00:13 +0100"  >&lt;p&gt;this modified patch includes an implementation of Benjamin&apos;s algorithm, using w-sessionId-sequenceNumber as a naming convention so that we can reuse files created for the same session if we get a connection failure.&lt;/p&gt;

&lt;p&gt;this patch also includes a unit test which tests out the WriteLock still working if we stop and start the server.&lt;/p&gt;

&lt;p&gt;also the code is refactored so that all the retry logic is in ProtocolSupport&lt;/p&gt;</comment>
                            <comment id="12615739" author="jstrachan" created="Tue, 22 Jul 2008 20:01:55 +0100"  >&lt;p&gt;this patch depends on the reconnect() method on ZooKeeper to deal with session expired exceptions&lt;/p&gt;</comment>
                            <comment id="12616118" author="jstrachan" created="Wed, 23 Jul 2008 16:27:45 +0100"  >&lt;p&gt;This patch no longer requires &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-84&quot; title=&quot;provide a mechanism to reconnect a ZooKeeper if a client receives a SessionExpiredException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-84&quot;&gt;&lt;del&gt;ZOOKEEPER-84&lt;/del&gt;&lt;/a&gt;, we now use a ZooKeeperFacade which wraps up the creation of the ZooKeeper instance and allows it to be replaced if a SessionExpiredException occurs.&lt;/p&gt;

&lt;p&gt;The test case works in the current patch. To get the test case to hang closing the 3rd client, just edit WriteLockTest and set the workAroundClosingLastZNodeFails field to a value of false. You will then get this stack dump when the test hangs (on OS X at least &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    [junit] &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=5 tid=0x01001710 nid=0xb0801000 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0xb07ff000..0xb0800148]
    [junit]     at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
    [junit]     - waiting on &amp;lt;0x096105e0&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
    [junit]     at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:474)
    [junit]     at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:822)
    [junit]     - locked &amp;lt;0x096105e0&amp;gt; (a org.apache.zookeeper.ClientCnxn$Packet)
    [junit]     at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:329)
    [junit]     - locked &amp;lt;0x0bd54108&amp;gt; (a org.apache.zookeeper.ZooKeeper)
    [junit]     at org.apache.zookeeper.protocols.ZooKeeperFacade.close(ZooKeeperFacade.java:99)
    [junit]     at org.apache.zookeeper.protocols.WriteLockTest.tearDown(WriteLockTest.java:146)
    [junit]     at junit.framework.TestCase.runBare(TestCase.java:140)
    [junit]     at junit.framework.TestResult$1.protect(TestResult.java:110)
    [junit]     at junit.framework.TestResult.runProtected(TestResult.java:128)
    [junit]     at junit.framework.TestResult.run(TestResult.java:113)
    [junit]     at junit.framework.TestCase.run(TestCase.java:124)
    [junit]     at junit.framework.TestSuite.runTest(TestSuite.java:232)
    [junit]     at junit.framework.TestSuite.run(TestSuite.java:227)
    [junit]     at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)
    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:36)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:421)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:912)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:766)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This could maybe just be an OS X based timing issue&lt;/p&gt;</comment>
                            <comment id="12616135" author="jstrachan" created="Wed, 23 Jul 2008 17:01:11 +0100"  >&lt;p&gt;Patch is now attached&lt;/p&gt;</comment>
                            <comment id="12616223" author="breed" created="Wed, 23 Jul 2008 20:01:44 +0100"  >&lt;p&gt;Fantastic work! I second Hiram&apos;s suggestion to implement the Lock interface. (You could probably throw unsupported exception for the condition method.) It would make your naming more symmetric anyway &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I love the whenOwner field! Excellent idea. I think it would be good to allow it to be passed in the constructor.&lt;/p&gt;

&lt;p&gt;I have a problem with your use of the facade. Here is the problematic scenario: your application waits for a lock and once acquired becomes the master. This master thread services clients but more importantly updates stuff in ZooKeeper. If the session expires and reconnects automatically, it is very easy for your master thread to make changes without actually being a master using the new session. If you don&apos;t use the facade, things fail properly: the connection expires, the master is no longer the master in ZooKeeper, and (most importantly) the master thread cannot do any ZooKeeper operations with the ZooKeeper object.&lt;/p&gt;

&lt;p&gt;I realize the facade may seem convenient, but I think we need to encourage safe behavior especially with the first high level primitives and since yours will be the very first I&apos;d like to make sure we get off to a safe start. (It&apos;s a great first example by the way!)&lt;/p&gt;</comment>
                            <comment id="12616391" author="jstrachan" created="Thu, 24 Jul 2008 10:03:45 +0100"  >&lt;h3&gt;&lt;a name=&quot;Movingpatchesforthisissuetosubversionforeasiertracking&quot;&gt;&lt;/a&gt;Moving patches for this issue to subversion for easier tracking&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve already submitted about five patches for this issue so far and I&apos;m sure there&apos;s gonna be loads more coming. Developing higher level protocols is a much bigger job than I previously thought &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; particularly with having tests for all the various failure scenarios and adding support for the various other higher level protocols.&lt;/p&gt;

&lt;p&gt;Its kinda time consuming creating loads of patches &amp;amp; attaching them to the same issue and deleting the old ones so its easy for commmitters to review - but more importantly, all the history of the many patches gets totally lost using the attach-patch-to-jira model - which also makes it harder for committers to watch progress on this issue.&lt;/p&gt;

&lt;p&gt;I&apos;ve never done this before on any other Apache project - and this approach is &lt;b&gt;temporary&lt;/b&gt; and only reserved for the single &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78&quot; title=&quot;added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-78&quot;&gt;&lt;del&gt;ZOOKEEPER-78&lt;/del&gt;&lt;/a&gt; issue; but I&apos;ve checked in this patch into an svn sandbox area at Apache that I have commit karma on and will continue to work on it there; so that all the history is preserved. I can then do many more frequent &amp;amp; smaller commits; any ZK committer can review and easily apply my patches whenever they feel like - and its gonna be much easier for anyone in the ZK community to track progress on this issue and see how the implementation has changed over time as some things work or I find better ways of solving the issue.&lt;/p&gt;

&lt;p&gt;This approach is totally temporary; its not an attempt to move the code outside of the ZK community or anything like that. At any point feel free to commit (actually just copy in svn which will keep all the history &amp;amp; commit comments etc) to the ZK trunk. You could even mirror the code to the ZK tree in sandbox/contrib area if you like - just like Hiram did to mirror the ZK code to the maven-patch example in the activemq sandbox.&lt;/p&gt;

&lt;p&gt;I&apos;m hoping in a few weeks my hacking on this issue will near completion and we can permanently move the code back into the ZK tree; but in the meantime its trivial to reuse it where it is or mirror it into the ZK tree as folks in the ZK community see fit. Also if I ever earn committer karma on ZK I can just move it into some ZK contrib area myself &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;h3&gt;&lt;a name=&quot;Buildingthecode&quot;&gt;&lt;/a&gt;Building the code&lt;/h3&gt;

&lt;p&gt;In terms of sandbox - I ended up reusing Hiram&apos;s sandbox area that shows the maven build working on ZK; as I prefer to use maven and it was then super easy for me to create a new maven module, zookeeper-protocols that just includes the source and test cases for the high level protocols.&lt;/p&gt;

&lt;p&gt;If you&apos;re new to maven and want to build it, I&apos;ve checked in instructions here...&lt;br/&gt;
&lt;a href=&quot;https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/BUILDING-maven.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/BUILDING-maven.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever we move this code back into the ZK trunk am sure we can hack an Ant build for it.&lt;/p&gt;</comment>
                            <comment id="12616413" author="jstrachan" created="Thu, 24 Jul 2008 10:19:05 +0100"  >&lt;p&gt;Thanks for the great comments Benjamin! Have already &lt;a href=&quot;https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/src/main/java/org/apache/zookeeper/protocols/WriteLock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;added the constructor for you&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;BTW I was pondering about switching the whenOwner from a Runnable to some kinda interface that invokes you when you become the leader/owner - or when you stop being the leader/owner. Something like &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; WhenOwnerListener {
  void whenOwner();
  void whenNotOwner();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where only znodes that are the owner would be notified with the whenOwner() method; but then if a connection fails or session times out, they&apos;d be notified with a call to whenNotOwner();&lt;/p&gt;

&lt;p&gt;Spookily - I&apos;d set myself the target today to properly implement the watches so that WriteLock gets a notification of it no longer being the leader/owner when a connection fails (which normally auto-reconnects anyway right now in the base ZooKeeper). Then I was gonna add a notification mechanism so we could notify the leader/owner is no longer the leader/owner when the session expired exception occurs.&lt;/p&gt;

&lt;p&gt;So we&apos;re absolutely on the same page; once I&apos;d grokked the proper watch code for dealing with normal connection failures &amp;amp; reconnects I was hoping to add something vaguely similar to the ZooKeeperFacade so that higher level protocols can be aware of both when ZooKeeper reconnects and when ZooKeeperFacade creates a whole new connection.&lt;/p&gt;

&lt;p&gt;Does that make sense? I totally understand your concerns at making sure the WriteLock and associated helper classes like ProtocolSupport/ZooKeeperFacade do the right thing - I want exactly the same thing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;d just not yet had the chance to go through all the different failure conditions and scenarios and make sure they all work properly &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12616416" author="jstrachan" created="Thu, 24 Jul 2008 10:33:23 +0100"  >&lt;p&gt;Just added the WhenOwnerListener interface : &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=679325&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=679325&lt;/a&gt; I just need to figure out how to add notifications of loss of owner/leader status when the connection fails or the session expires etc.&lt;/p&gt;</comment>
                            <comment id="12616446" author="jstrachan" created="Thu, 24 Jul 2008 12:12:12 +0100"  >&lt;p&gt;Benjamin I added &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-89&quot; title=&quot;invoke WhenOwnerListener.whenNotOwner() when the ZK connection fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-89&quot;&gt;&lt;del&gt;ZOOKEEPER-89&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-90&quot; title=&quot;invoke WhenOwnerListener.whenNotOwner() when the ZK session expires and the znode is the leader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-90&quot;&gt;&lt;del&gt;ZOOKEEPER-90&lt;/del&gt;&lt;/a&gt; to track the dealing with loss of ownership/leader with connection reconnects and with session expiration. I&apos;ve not been able to test out the latter yet; but I&apos;ve tested the former and I think both are implemented now via the patch for &lt;br/&gt;
 &lt;a href=&quot;http://svn.apache.org/viewvc?rev=679354&amp;amp;view=r&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ZOOKEEPER-90&lt;/a&gt; and &lt;a href=&quot;http://svn.apache.org/viewvc?rev=679341&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ZOOKEEPER-89&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12616545" author="phunt" created="Thu, 24 Jul 2008 18:28:31 +0100"  >&lt;p&gt;Hi James &amp;#8211; I understand where you are coming from and we appreciate the effort, but regarding use of SVN for patch submission - I&apos;m afraid this is not acceptable. Notice on the &quot;attach patch&quot; JIRA page that it has the &quot; Grant license to ASF for inclusion in ASF works .... &quot; option. This has to be checked for us to consider a patch for inclusion.&lt;/p&gt;

&lt;p&gt;Also consider that we have limited resources/time and need to follow the designated patch process in order to optimize around the limited set of core reviewers/commiters we have relative to the community at large.&lt;/p&gt;

&lt;p&gt;(if you think you&apos;ve got it bad checkout some of the hadoop examples like: &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-3412&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HADOOP-3412&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;What I&apos;d suggest is that you &quot;overwrite&quot; the existing patch when submitting an update. If you upload a file with the same name the old version of the file &lt;em&gt;is&lt;/em&gt; still available in the JIRA, and the new file will take it&apos;s place. (I need to update the wiki with this, just haven&apos;t gotten around to it - ok just added near the end of the &quot;contributing your work section&quot;, thanks)&lt;/p&gt;

&lt;p&gt;A bit less important but wanted to mention the naming scheme defined on the following page (creating a patch section):&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute&lt;/a&gt;&lt;br/&gt;
ZOOKEEPER-#.patch&lt;br/&gt;
This helps reviewers/committers keep all the patches straight. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12616547" author="cutting" created="Thu, 24 Jul 2008 18:41:45 +0100"  >&lt;p&gt;The project&apos;s patch submission mechanism is not inflexible, but neither should it be changed unilaterally on an issue-by-issue basis.  The currently acceptable mechanism is to attach patch files to Jira, generated by &apos;svn diff&apos;.  When files are renamed, a shell script should be provided that performs the renames, where the script is run before the patch is applied.  If some find this awkward, then a separate discussion should be launched on the mailing list.  Some projects are now, e.g., using &apos;git&apos; to handle things like this, but this needs to be done carefully so that the entire community is included in the process.  Fewer, simpler mechanisms generally include more people.&lt;/p&gt;</comment>
                            <comment id="12616567" author="chirino" created="Thu, 24 Jul 2008 19:27:08 +0100"  >&lt;p&gt;Hi Patrick,&lt;/p&gt;

&lt;p&gt;The &quot;Notice on the &quot;attach patch&quot; JIRA page that it has the &quot; Grant license to ASF for inclusion in ASF works .... &quot; option. This has to be checked for us to consider a patch for inclusion. &quot; is not accurate in this case.&lt;/p&gt;

&lt;p&gt;James and I are are both Apache committers and Members, and as such, when we commit code to the ASF repository  a license is granted to the ASF.  The jira feature is really only there to be able to accept code from folks who have not filed an ICLA with the ASF.&lt;/p&gt;

&lt;p&gt;Another way to view this development model is as if we were ZooKeeper committers who do not commit to trunk but which develop new features and bug fixes in development branches.  This model of development is use extensively in projects who are adverse to destabilizing the trunk.  They develop and test new features in a branch and then merge back once folks are happy with it.&lt;/p&gt;

&lt;p&gt;This model is also outlined at &lt;a href=&quot;http://incubator.apache.org/learn/rules-for-revolutionaries.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Rules for Revolutionaries&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12616579" author="jstrachan" created="Thu, 24 Jul 2008 19:44:14 +0100"  >&lt;p&gt;Wow I confess to be being kinda surprised by that response &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I didn&apos;t realise you guys were so attached to the exact svn command line used to apply a patch - I thought you&apos;d welcome all contributions and that the svn commit history would be more useful to you, given the large amount of changes and complexity of the code and large number of comments already on this JIRA - rather than focus purely on a minor couple of keystrokes required apply the patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  &lt;/p&gt;

&lt;p&gt;FWIW I&apos;ve attached about 5 patch files so far, with none of them being committed anywhere - then made about 7 patches since then in svn with history and I&apos;m sure there&apos;ll be another 5 or so changes to go before this patch is done. &lt;/p&gt;

&lt;p&gt;Never mind - I&apos;ll happily comply with your strict patch acceptance policy. Give me a few weeks or so to completely finish the code and documentation and I&apos;ll submit a single big patch for all the work to this JIRA. If you want you can get all the history too with a trivial alternative svn command - but if that offends you, please forget I&apos;m using a sandbox svn area to work on this (pretend I&apos;m just saving it on my hard drive and please disregard the links I&apos;ve added to some JIRAs to refer to parts of this patch in a simple way) and just use the single patch file I&apos;ll attach in a few weeks or so.&lt;/p&gt;</comment>
                            <comment id="12616591" author="nidaley" created="Thu, 24 Jul 2008 20:00:59 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Fewer, simpler mechanisms generally include more people.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1.  Let&apos;s stick with a process for now that all contributors can use, not just ASF committers.&lt;/p&gt;</comment>
                            <comment id="12616603" author="jstrachan" created="Thu, 24 Jul 2008 20:29:43 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Let&apos;s stick with a process for now that all contributors can use, not just ASF committers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Huh? Everyone has access to ASF svn? Only committers can commit using either approach. I don&apos;t grok your point.&lt;/p&gt;</comment>
                            <comment id="12616624" author="cutting" created="Thu, 24 Jul 2008 21:12:24 +0100"  >&lt;p&gt;&amp;gt; Give me a few weeks or so to completely finish the code and documentation and I&apos;ll submit a single big patch for all the work to this JIRA.&lt;/p&gt;

&lt;p&gt;If you want to get more feedback as you go, please attach interim patches too, rather than just the final patch.  That way folks who monitor the -dev mailing list will see the updates and can try them in the usual manner.  We generally don&apos;t put things into the &quot;Patch Available&quot; state until the contributor believes that the patch is in a final form.&lt;/p&gt;

&lt;p&gt;&amp;gt; Everyone has access to ASF svn?&lt;/p&gt;

&lt;p&gt;I think all that Nigel meant was that not everyone can submit patches by naming an Apache svn revision since not everyone has commit access to Apache&apos;s svn.  We try to use a uniform mechanism, the same for committers as non-committers.  Committers generally have to do more work, not less, than other contributors, since every patch committed must be reviewed and accepted by a committer.  Committing is a duty, not a privilege.&lt;/p&gt;</comment>
                            <comment id="12616641" author="cutting" created="Thu, 24 Jul 2008 21:32:37 +0100"  >&lt;p&gt;&amp;gt; FWIW I&apos;ve attached about 5 patch files so far, with none of them being committed anywhere [ ...]&lt;/p&gt;

&lt;p&gt;Are they getting reviewed promptly?  A primary job of committers is to keep the Patch Available queue short, by trying to review patches within a few days of their contribution, either committing them or rejecting them with a clear explanation.  If the committers are unable to keep up with the contributors, then the project probably needs more committers.  In this case, contributors should also do everything they can to make committers lives easier, so as not to further delay their patches.&lt;/p&gt;

&lt;p&gt;Contributors should be nominated to become committers when they&apos;ve provided a series (e.g., 3+) non-trivial, high-quality patches, and demonstrated an ability to work peacefully with existing committers, following procedures, etc.  If someone provides patches that apply cleanly, fix real user problems, include unit tests, and the contributor responds to criticism in a positive manner, then they should be nominated as a committer in short order.  Then they can start reviewing and grooming new committers themselves!&lt;/p&gt;</comment>
                            <comment id="12616650" author="phunt" created="Thu, 24 Jul 2008 21:51:05 +0100"  >&lt;p&gt;I agree, we do need to do a better job on the reviews. In our defense: &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;1) we&apos;re trying to complete the migration from SF to Apache. good thing is it looks like we&apos;re pretty close to the end on that&lt;br/&gt;
2) there&apos;s a ZooKeeper workshop @yahoo on Monday, just so happens that all commiters are presenters.&lt;br/&gt;
3) the continual push to change the build/wiki/patchsubmission/etc... processes are pulling me off things like patch review  in order to track down answers (cuz I&apos;m new to Apache as well - thanks Doug/Owen!)&lt;/p&gt;</comment>
                            <comment id="12616656" author="phunt" created="Thu, 24 Jul 2008 22:02:55 +0100"  >&lt;p&gt;Per the comments here:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616579#action_12616579&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616579#action_12616579&lt;/a&gt;&lt;br/&gt;
and here:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616624#action_12616624&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616624#action_12616624&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m moving the status from patch available to open.&lt;/p&gt;</comment>
                            <comment id="12616722" author="breed" created="Fri, 25 Jul 2008 01:26:30 +0100"  >&lt;p&gt;Can we focus on the issue at hand? This patch is almost done there is no reason for the meta physical discussions or even an external SVN. It&apos;s simple enough. The only thing that must be done is to remove the use of the ZooKeeperFacade and use the ZooKeeper object correctly. If you want to discuss why ZooKeeperFacade is a bad idea, lets open an issue to discuss there.&lt;/p&gt;

&lt;p&gt;I really like the idea of using the Lock interface, but changing aquire to lock() should be good enough.&lt;/p&gt;

&lt;p&gt;Lets get this thing committed so that we can move on.&lt;/p&gt;</comment>
                            <comment id="12619606" author="breed" created="Mon, 4 Aug 2008 18:38:55 +0100"  >&lt;p&gt;I&apos;ve documented on the wiki at &lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling&lt;/a&gt; why ZooKeeperFacade needs to be removed. Just use the ZooKeeper object. For this patch in particular it is very important not to use a facade.&lt;/p&gt;</comment>
                            <comment id="12675209" author="mahadev" created="Fri, 20 Feb 2009 01:30:39 +0000"  >&lt;p&gt;it would be great ot have this jira in 3.2. &lt;/p&gt;

&lt;p&gt;this patch removes the zookeeper facade, and makes it work with the current trunk. I have to still go through all the corner cases and see if they have been handled. Also, I need to implement the lock interface in writelock.&lt;/p&gt;

&lt;p&gt;comments are welcome... &lt;/p&gt;</comment>
                            <comment id="12675506" author="mahadev" created="Fri, 20 Feb 2009 23:17:56 +0000"  >&lt;p&gt;an updated patch. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added acls to writelock&lt;/li&gt;
	&lt;li&gt;removed ZookeeperTestSupport, used ClientBase insted of this new class&lt;/li&gt;
	&lt;li&gt;made the package name org.apache.zookepeer.protocols.lock so that each protocol has its own direcotry&lt;/li&gt;
	&lt;li&gt;moved the docs.html to pakcage.html&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;it still does not impleement the lock interface of java. Ill add it in the next patch.&lt;/p&gt;</comment>
                            <comment id="12675792" author="tomwhite" created="Mon, 23 Feb 2009 07:17:53 +0000"  >&lt;p&gt;Mahadev,&lt;/p&gt;

&lt;p&gt;I&apos;m glad this is being worked on again. Some comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Not sure if a Runnable is right for whenOwner, as Runnable implementations are often one-shot and can&apos;t be re-run, whereas it looks like WriteLock can be locked and unlocked repeatedly (is this right?). There&apos;s also no way to tell when the lock has been released. Might be better to have a standard listener interface called LockListener, with lockAcquired and lockReleased methods. Writing an implementation to run a Runnable would be trivial.&lt;/li&gt;
	&lt;li&gt;I worry a little about WriteLock implementing java.util.concurrent.locks.Lock, since Lock seems oriented to single-process programs. By making WriteLock a Lock we make it easy for programmers to drop it in to programs that use Lock, without having to think about distributed error recovery. For example, Lock#lock() cannot throw checked exceptions, so we would have to wrap KeeperException in an unchecked exception, which could too readily be ignored. Perhaps the answer is to make the method naming and semantics as close as possible, without actually implementing Lock proper? (I think this is similar to the discussion in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-104&quot; title=&quot;KeptSet: a distributed data stucture backed by the children of a ZooKeeper node&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-104&quot;&gt;&lt;del&gt;ZOOKEEPER-104&lt;/del&gt;&lt;/a&gt;.)&lt;/li&gt;
	&lt;li&gt;Lots of classes and methods are public when they don&apos;t need to be. Really only WriteLock should be public, with public methods lock(), unlock(), getDir() (better named as getLockPath() or similar?), getWhenOwner(), setWhenOwner() (or whatever replaces the last two).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12676802" author="mahadev" created="Wed, 25 Feb 2009 22:30:07 +0000"  >&lt;p&gt;sorry for my late response tom.. i havent had a real close look at the interfaces and methods in this patch myself, so thanks for reviewing.. I was mainly looking at the handling of zookeeper events.&lt;/p&gt;

&lt;p&gt;1)  I think you are rught that we should probably have call back methods with lockacruired and lockreleeased methods. The current implementation is too restrictive.&lt;br/&gt;
2) I am with you on this one as well... I hadn&apos;t implemented the lock interface just because I had the same reservations as you.. I think for now we should just leave it as it is without implementing the lock interface and see what our users have to say.. &lt;br/&gt;
3) agreed.. &lt;/p&gt;
</comment>
                            <comment id="12680759" author="mahadev" created="Wed, 11 Mar 2009 05:08:18 +0000"  >&lt;p&gt;a new patch. I have changed the directory structure in this &lt;/p&gt;

&lt;p&gt;the code now is in&lt;br/&gt;
&lt;tt&gt;root&lt;/tt&gt;/src/recipes/lock/src/java/org/apache/zookepeer/recipes/lock/&lt;br/&gt;
also the tests are in &lt;br/&gt;
&lt;tt&gt;root&lt;/tt&gt;/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/&lt;/p&gt;

&lt;p&gt;the new directory structure allows us to have both the java and c implemention in the same parent directory strucure.&lt;/p&gt;

&lt;p&gt;src/recipes/lock/&lt;/p&gt;

&lt;p&gt;also -&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added a new interface Locklistener&lt;/li&gt;
	&lt;li&gt;removed runnable to be a locklistener interface whose methods lockAcqured and lockReleased are called on a lock acquired and relase of a lock&lt;/li&gt;
	&lt;li&gt;refactored some code&lt;/li&gt;
	&lt;li&gt;deleted not required public methods.&lt;/li&gt;
	&lt;li&gt;added build files for the recipes directory&lt;/li&gt;
	&lt;li&gt;changed the tests to work with new api&apos;s&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;i am implementing the recipes in c. Will have an updated patch up soon. comments are welcome.&lt;/p&gt;</comment>
                            <comment id="12680825" author="tomwhite" created="Wed, 11 Mar 2009 09:46:35 +0000"  >&lt;p&gt;&amp;gt; i am implementing the recipes in c.&lt;/p&gt;

&lt;p&gt;Should the C version go in a separate Jira issue and patch?&lt;/p&gt;</comment>
                            <comment id="12680933" author="mahadev" created="Wed, 11 Mar 2009 17:12:59 +0000"  >&lt;p&gt;dont know.. the jira says just talks abt the recipe, so is adequate for both java and c &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. .. I would like to have both in one jira so that everyone who wants to contribute to such zookeeeper recipes is encouraged to have both the java and c implementation, but I am open to creating a new jira for c. &lt;/p&gt;</comment>
                            <comment id="12680956" author="phunt" created="Wed, 11 Mar 2009 18:01:16 +0000"  >&lt;p&gt;I agree with Mahadev &amp;#8211; we want to encourage ppl to provide (interoperable) implementations for both c/java.&lt;/p&gt;

&lt;p&gt;However the JIRA should be updated to have both java and c client component listed.&lt;/p&gt;

&lt;p&gt;Should we add a new &quot;recipe&quot; component?&lt;/p&gt;</comment>
                            <comment id="12694343" author="mahadev" created="Wed, 1 Apr 2009 02:16:14 +0100"  >&lt;p&gt;this patch has the c library in it as well. &lt;br/&gt;
Now I think of it, I probably should have done it in a seperate jira with subtasks as java and c libraries.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added the c library with auto * files to create teh library&lt;/li&gt;
	&lt;li&gt;added cpp unit testing for the c library&lt;/li&gt;
	&lt;li&gt;similar to java interface, the c interface also allows a callback method to be called in case of lock being avquired and released.&lt;/li&gt;
	&lt;li&gt;i will be cleaning up the patch (with some more docs and rmeocing unneccasry printf&apos;s and unused code).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;comments are welcome... &lt;/p&gt;</comment>
                            <comment id="12694345" author="mahadev" created="Wed, 1 Apr 2009 02:19:34 +0100"  >&lt;p&gt;reattaching the patch. had some problems with the earler version.&lt;/p&gt;</comment>
                            <comment id="12694348" author="mahadev" created="Wed, 1 Apr 2009 02:25:30 +0100"  >&lt;p&gt;make sure that you download the patch adn then view it. I tried opening up the patch in the browser and it fails. It thinks that the file is xml (not sure why.. ) and tried opening it as an xml file... &lt;/p&gt;</comment>
                            <comment id="12694793" author="cdarroch" created="Wed, 1 Apr 2009 23:24:52 +0100"  >&lt;p&gt;Just took a quick peek to see what would be either rework these in a ZooKeeper::Lock Perl module to go along with Net::ZooKeeper, or to expose the C version through Net::ZooKeeper.  I may well be missing something after such a brief review, but in zoo_mutex_operation() I would be inclined to add some return value checks.&lt;/p&gt;

&lt;p&gt;For example, if zoo_create() here returns a failure code, I believe it&apos;s possible for the retbuf to contain whatever random data it had before the call.  In that case, getName() might &quot;succeed&quot; if the data contains a &apos;/&apos; and return a string &amp;#8212; possibly one that doesn&apos;t happen to be null-terminated within the retbuf buffer.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;           char retbuf[len+20];
           snprintf(buf, len, &quot;%s/%s&quot;, path, prefix);
           ret = zoo_create(zh, buf, NULL, 0,  mutex-&amp;gt;acl, 
                            ZOO_EPHEMERAL|ZOO_SEQUENCE, retbuf, (len+20));
           mutex-&amp;gt;id = getName(retbuf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are some calls to zoo_get_children(), etc., which I think might be usefully checked for failure return codes as well.  Sorry not to provide a patch yet.&lt;/p&gt;</comment>
                            <comment id="12694841" author="mahadev" created="Thu, 2 Apr 2009 01:19:41 +0100"  >&lt;p&gt;thanks for your comments chris. You are right, the c version needs to do a better job on handling error cases. I still need to clean it up for that. Will update the patch. I probably think i spent most of the time fighting/learning auto*/libtools rather than coding the c api &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ... &lt;/p&gt;</comment>
                            <comment id="12696310" author="mahadev" created="Tue, 7 Apr 2009 01:22:59 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;cleaned up the code and added some mroe comments to the code.&lt;/li&gt;
	&lt;li&gt;made the java api be lock and unlock compatible with java&apos;s lock api&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I still need to work on doing the right handling of session expiration and connectionloss everywhere in the code (both c and java)&lt;/p&gt;</comment>
                            <comment id="12696827" author="mahadev" created="Wed, 8 Apr 2009 00:47:07 +0100"  >&lt;p&gt;this patch takes care of all the error cases (please review in case i missed some) both in java and c.&lt;/p&gt;
</comment>
                            <comment id="12696986" author="hadoopqa" created="Wed, 8 Apr 2009 12:14:00 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12404904/ZOOKEEPER-78.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12404904/ZOOKEEPER-78.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 762602.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 116 release audit warnings (more than the trunk&apos;s current 105 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/current/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/current/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12697127" author="phunt" created="Wed, 8 Apr 2009 19:00:46 +0100"  >&lt;p&gt;This first set of comments is relative to the structure/build/packaging (ie non-code) issues:&lt;/p&gt;

&lt;p&gt;I think the jar name should include &quot;recipes&quot;&lt;br/&gt;
ie for locks: zookeeper-3.2.0-recipes-lock.jar&lt;br/&gt;
how about a &quot;superset&quot; recipes/zookeeper-3.2.0-recipes.jar with all recipes included?&lt;br/&gt;
  users can choose which to use&lt;/p&gt;

&lt;p&gt;There seems to be an issue with recipes in release build - actually same issue with contrib:&lt;br/&gt;
you cannot run &quot;ant test&quot; on lock recipe in the released tar file build using &quot;ant tar&quot;&lt;br/&gt;
  seems build.xml and build-recipes.xml are missing from tar file&lt;/p&gt;

&lt;p&gt;docs - I think it&apos;s ok not to have specific forrest docs inside locsk, but need:&lt;br/&gt;
recipes/README.txt&lt;br/&gt;
  what is this code? what are requirements for authors? (like interop btw c/java for particular impl)&lt;br/&gt;
  also req that recipe be documented in recipes documentation in forrest&lt;br/&gt;
  describe and point to forrest docs in docs/... (should put link to live h.a.o doc as well)&lt;br/&gt;
  is there some high level bit of informatin that you want to convey to authors re how components&lt;br/&gt;
    should be designed (in particular session mgmt, error handling, logging, etc...) this is a good place to put&lt;br/&gt;
recipes/lock/README.txt&lt;br/&gt;
  describe and point to forrest docs in docs/... (should put link to live h.a.o doc as well)&lt;br/&gt;
  pointer to javadoc (ie live h.a.o site)?&lt;/p&gt;

&lt;p&gt;are the forrest recipe docs up to date relative to impl for locks? which lock in particular from docs.&lt;br/&gt;
  any deviation(s), any specific impl detail that&apos;s important, configurability?&lt;br/&gt;
  might be good to update the forrest recipe docs to point to this jar/code for implementation&lt;br/&gt;
  ie let users know that they can get this from the release in recipes/locks (they don&apos;t need to impl)&lt;/p&gt;

&lt;p&gt;how do we verify interop?&lt;br/&gt;
  great job adding tests! but they seem to be tests for c, tests for java, but not interop.&lt;br/&gt;
  this seems pretty important. We want to document in recipes/readme that authors in particular&lt;br/&gt;
  should code for c/java to interop for any one particular recipe instance. also that recipes can &lt;br/&gt;
    co-exists in user space (ie placement of nodes, etc...)&lt;br/&gt;
  Might be good enough to add a new JIRA for this, but need to impl this asap.&lt;/p&gt;


&lt;p&gt;You&apos;ve done a great job, but I&apos;m holding this jira to a higher standard since ppl who implement further&lt;br/&gt;
recipes will use your lock implementation as a &quot;blueprint&quot;. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

</comment>
                            <comment id="12697150" author="mahadev" created="Wed, 8 Apr 2009 19:58:07 +0100"  >&lt;p&gt;i attached header files to package.html&lt;br/&gt;
makefile.am&lt;br/&gt;
configure.ac&lt;/p&gt;

&lt;p&gt;adn the others have diffierenct headers which are not apache but can be included in the codebase.&lt;/p&gt;</comment>
                            <comment id="12697277" author="phunt" created="Wed, 8 Apr 2009 23:51:16 +0100"  >&lt;p&gt;These comments are relative to the java code:&lt;/p&gt;

&lt;p&gt;cleanup imports&lt;/p&gt;

&lt;p&gt;writelocktest indentation problem line 87&lt;/p&gt;

&lt;p&gt;do we want to talk about leaderelection in locks, or just implement another le in recipes (small wrapper)?&lt;/p&gt;

&lt;p&gt;znodename.java - log failure in exception handlers&lt;/p&gt;

&lt;p&gt;protocolsupport retrydelay eats interrupt, ie lock cannot be interrupted&lt;/p&gt;

&lt;p&gt;shouldn&apos;t writelock.lock throw connectionloss if closed?&lt;br/&gt;
  the javadoc is not clear - what happens in the &quot;later&quot; case? does this block? what happens if expired or discon? etc...&lt;/p&gt;

&lt;p&gt;line 148 of writelock&lt;br/&gt;
                    long sessionId = zookeeper.getSessionId();&lt;br/&gt;
what ensures that sessionid you get back is valid? (ie non-zero)&lt;br/&gt;
This is pretty large anony class - why not have a specific static class definition?&lt;br/&gt;
Plus all in one method rather than broken out (even indentation is deep)&lt;br/&gt;
Would be easier to maintain if broken into several methods&lt;/p&gt;

&lt;p&gt;writelock line 208&lt;br/&gt;
                                    try &lt;/p&gt;
{
                                        lock();
                                    }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
                                        LOG.warn(&quot;Failed to acquire lock: &quot; + e, e);
                                    }
&lt;p&gt;what happens if lock returns false (isclosed for example)?&lt;/p&gt;

&lt;p&gt;Some of these classes look reusable (prot/name/op) - should they be in this recipe or elsewhere?&lt;br/&gt;
If we want to enable additional recipes to be easily added based on the work you&apos;ve done (blueprint)&lt;br/&gt;
 we should try to make these easily reusable.&lt;/p&gt;
</comment>
                            <comment id="12697343" author="phunt" created="Thu, 9 Apr 2009 01:14:39 +0100"  >&lt;p&gt;comments on the c code:&lt;/p&gt;

&lt;p&gt;the api methods are named with prefix zoo_mutex_*&lt;br/&gt;
seems to me it would be better to name them zoo_recipe_lock_* as prefix&lt;br/&gt;
this specifies that it&apos;s a recipe, in particular that it&apos;s implementing the &quot;lock&quot; recipe&lt;br/&gt;
We would expect (and should document in src/recipe/readme) that c api methods&lt;br/&gt;
should be named in this fashion, ie zoo_recipe_&amp;lt;recipename&amp;gt;_*&lt;br/&gt;
otw the c global namespace is going to cause problems down the line&lt;br/&gt;
also easier for users to identify the recipe to which a particular method call pertains&lt;/p&gt;

&lt;p&gt;it&apos;s good to commit the configure scripts (see hadoop c code for which files)&lt;br/&gt;
this was lesson learned for cbinding &amp;amp; zkfuse, makes it easier for users to build&lt;br/&gt;
ensure binary flag set in tar package for executable scripts&lt;/p&gt;

&lt;p&gt;would be nice to have a readme to orient the new user in src/c&lt;br/&gt;
include how to build (easier if configure script is here)&lt;/p&gt;

&lt;p&gt;out of the box the patch fails to run-check&lt;br/&gt;
  Running Zookeeper_locktest::testlocksh: ./tests/zkServer.sh: Permission denied&lt;br/&gt;
  sh: ./tests/zkServer.sh: Permission denied&lt;br/&gt;
   : assertion : assertion&lt;br/&gt;
be sure to set the exec flag when committing zkServer to svn.&lt;/p&gt;

&lt;p&gt;in tests might want to use localhost rather than 127.0.0.1 (if ipv6 only host? or does ipv6 handle that?)&lt;/p&gt;

&lt;p&gt;sleep(30) in test is unfortunate - it artificially inflates the test time. having short test time is a win&lt;br/&gt;
  any chance you can actively poll rather than just sleeping? something reusable by other recipes would be grt&lt;/p&gt;

&lt;p&gt;I don&apos;t see any logging in zoo_lock.c, I think we should log at least the error conditions, also things like&lt;br/&gt;
loop retry at debug level. also operation is pretty complex, some logging in there would help.&lt;/p&gt;

&lt;p&gt;also some similar comments as java - for example getting client_id in operation, this may be invalid&lt;br/&gt;
if the session is not established?&lt;/p&gt;

&lt;p&gt;the api says:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;\return the return code.&lt;br/&gt;
for many of the methods. what does this mean?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12697346" author="phunt" created="Thu, 9 Apr 2009 01:20:22 +0100"  >&lt;p&gt;running doxygen-doc doesn&apos;t result in any c-docs being generated (html).&lt;/p&gt;

&lt;p&gt;Also the version is wrong in .ac file - should be 3.2.0 not 2.2.0&lt;br/&gt;
which reminds me - yet another place we need ot update during a release... we should&lt;br/&gt;
really try to figure out how to centralize this (perhaps Giri knows?) otw it&apos;s an increasing&lt;br/&gt;
pain/error point during releases. (not this jira responsible though)&lt;/p&gt;</comment>
                            <comment id="12697683" author="breed" created="Thu, 9 Apr 2009 23:58:14 +0100"  >&lt;p&gt;wow nice work. it&apos;s nice to have someone that knows automake again!&lt;/p&gt;

&lt;p&gt;some comments:&lt;/p&gt;

&lt;p&gt;in unlock, we shouldn&apos;t call the callback if the unlock had an error should we?&lt;/p&gt;

&lt;p&gt;in zope.execute() how would id be null in the 2nd if block?&lt;/p&gt;

&lt;p&gt;Collections.sort() would simplify your sorting wouldn&apos;t it?&lt;/p&gt;

&lt;p&gt;if exists() fails when trying to grab the lock, you need to get a new child list and retry.&lt;/p&gt;

&lt;p&gt;for both C and java, shouldn&apos;t the lock and unlock be synchronized?&lt;/p&gt;

&lt;p&gt;in zoo_mutex_lock you always nano_sleep. wouldn&apos;t it be better to only nano_sleep if you have to retry?&lt;/p&gt;

&lt;p&gt;i think the logic for checking for a previous create with getChildren and create should be implemented the same in C and java.&lt;/p&gt;

&lt;p&gt;with regard to that last comment: currently we do a getChildren() see if a previous create suceeded and then do a create(). one problem with this is that a previously issued create may still be in flight. i think it would be better and simpler to keep doing create until you succeed; do a getChildren(); delete any duplicates.&lt;/p&gt;</comment>
                            <comment id="12697699" author="mahadev" created="Fri, 10 Apr 2009 01:57:08 +0100"  >&lt;p&gt;thanks for looking at it ben and pat... i am fixing most of the stuff you guys mentioned except for the following &amp;#8211; &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the zookeeper c client methods -&lt;br/&gt;
pat&apos;s idea does make sense for namespace conventions. But zoo_recipes_lock_methodname seems too long. I recommend we use zoo_recipename_methodname().. which is a little mroe convenient thatn the older one.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;there are others I will prefer opening a  jira later to fix it.. (like interperability of c and java code).. i would like this patch to get committed as soon as possible. maintaing such a huge patch is a lot of work... &lt;/p&gt;</comment>
                            <comment id="12698004" author="mahadev" created="Fri, 10 Apr 2009 23:47:56 +0100"  >&lt;p&gt;this patch should fix most of the issues raised by pat and ben.&lt;br/&gt;
you will have to do the following before you can apply the patch &amp;#8211; &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn move src/c/src/zk_log.h src/c/include/zk_log.h 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the include file is necessary to use LOG_* macros.&lt;/p&gt;

&lt;p&gt; ill just list out what I have fixed in this patch.. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;improved the docs for recipes amd recipes/lock. both of them have a README.txt. the recipes one lists out how to create new recipes and conventions to follow.&lt;/li&gt;
	&lt;li&gt;changed the c libary method names to follow the convention&lt;/li&gt;
	&lt;li&gt;renamed the jar file to be zookeeper-version-recipes-name.jar&lt;/li&gt;
	&lt;li&gt;for interop I will open another jira&lt;/li&gt;
	&lt;li&gt;also we should commit the configure generated after running autoconf. I didnt attach it to the patch since it makes it huge.&lt;/li&gt;
	&lt;li&gt;cleaned up imports&lt;/li&gt;
	&lt;li&gt;modularized the java code&lt;/li&gt;
	&lt;li&gt;i have left the sleep 30 in the c tests. I will open a jira to fix it later.&lt;/li&gt;
	&lt;li&gt;i have added logging to the c code.&lt;/li&gt;
	&lt;li&gt;improved the javadocs and c doxygen comments to make the return values clearer&lt;/li&gt;
	&lt;li&gt;chanegd the version in configure.ac&lt;/li&gt;
	&lt;li&gt;the doxygen docs should work now&lt;/li&gt;
	&lt;li&gt;added synchronized for the lock methods both in c and java&lt;/li&gt;
	&lt;li&gt;fixed to sleep only on a retyr&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think i might have addressed most of the review issues, but please take a look and see if anything still remains. comments are welcome.&lt;/p&gt;</comment>
                            <comment id="12698586" author="phunt" created="Tue, 14 Apr 2009 00:16:13 +0100"  >&lt;p&gt;zk_log.h is moved, however Makefile.am has not been updated.&lt;br/&gt;
be sure to include it in pkginclude_HEADERS&lt;/p&gt;

&lt;p&gt;I&apos;d rather that the include name be &quot;zookeeper_log.h&quot; to be consistent with with the existing files.&lt;br/&gt;
(granted some of the files are mis-named, like recordio.h, but we should fix that in 4.0)&lt;/p&gt;</comment>
                            <comment id="12700311" author="mahadev" created="Fri, 17 Apr 2009 21:13:44 +0100"  >&lt;p&gt;this patch addresses pat&apos;s concern.&lt;br/&gt;
also &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;modularized the c code methods a little more so that its more readable&lt;/li&gt;
	&lt;li&gt;changed the return codes and relevant doxygen comments to be in line with c libraries (like 0 for success and not zero for failure).&lt;/li&gt;
	&lt;li&gt;the zk_log.h needs to be moved to src/c/include as I had mentioned earlier.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12700312" author="mahadev" created="Fri, 17 Apr 2009 21:14:21 +0100"  >&lt;p&gt;running through hudson&lt;/p&gt;</comment>
                            <comment id="12700644" author="hadoopqa" created="Mon, 20 Apr 2009 05:26:51 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12405803/ZOOKEEPER-78.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12405803/ZOOKEEPER-78.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 766160.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 39 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs warnings.&lt;/p&gt;

&lt;p&gt;    -1 release audit.  The applied patch generated 111 release audit warnings (more than the trunk&apos;s current 105 warnings).&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/current/releaseAuditDiffWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/current/releaseAuditDiffWarnings.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12700668" author="mahadev" created="Mon, 20 Apr 2009 07:44:35 +0100"  >&lt;p&gt;-1 for release audit is expected because some files are checked in with non apache headers (but are compatible with apache).&lt;/p&gt;</comment>
                            <comment id="12701685" author="fpj" created="Wed, 22 Apr 2009 22:16:01 +0100"  >&lt;p&gt;+1, it looks good to me.&lt;/p&gt;</comment>
                            <comment id="12702027" author="phunt" created="Thu, 23 Apr 2009 18:49:41 +0100"  >&lt;p&gt;I&apos;d like to commit this asap - just waiting on the change to name the log file &quot;zookeeper_log.h&quot; when it&apos;s&lt;br/&gt;
moved into the public include directory.&lt;/p&gt;

&lt;p&gt;see my comment: &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12698586&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12698586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12698586&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12698586&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12702054" author="mahadev" created="Thu, 23 Apr 2009 19:47:33 +0100"  >&lt;p&gt;this patch should the fix the zk_log.h issue.&lt;/p&gt;

&lt;p&gt;thanks for pointing it out pat.&lt;/p&gt;</comment>
                            <comment id="12702122" author="phunt" created="Thu, 23 Apr 2009 22:41:38 +0100"  >&lt;p&gt;Committed revision 768067.&lt;/p&gt;

&lt;p&gt;Thanks Mahadev!&lt;/p&gt;</comment>
                            <comment id="12702208" author="hadoopqa" created="Fri, 24 Apr 2009 02:53:37 +0100"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12406269/ZOOKEEPER-78.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12406269/ZOOKEEPER-78.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 768067.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 42 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/48/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/48/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="12702420" author="hudson" created="Fri, 24 Apr 2009 16:51:58 +0100"  >&lt;p&gt;Integrated in ZooKeeper-trunk #289 (See &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/289/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/289/&lt;/a&gt;)&lt;br/&gt;
    . added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12400498">ZOOKEEPER-79</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406269" name="ZOOKEEPER-78.patch" size="187403" author="mahadev" created="Thu, 23 Apr 2009 19:47:33 +0100"/>
                            <attachment id="12405803" name="ZOOKEEPER-78.patch" size="185143" author="mahadev" created="Fri, 17 Apr 2009 21:13:44 +0100"/>
                            <attachment id="12405203" name="ZOOKEEPER-78.patch" size="183460" author="mahadev" created="Fri, 10 Apr 2009 23:47:56 +0100"/>
                            <attachment id="12404995" name="ZOOKEEPER-78.patch" size="180567" author="mahadev" created="Wed, 8 Apr 2009 19:58:07 +0100"/>
                            <attachment id="12404904" name="ZOOKEEPER-78.patch" size="178177" author="mahadev" created="Wed, 8 Apr 2009 00:47:07 +0100"/>
                            <attachment id="12404785" name="ZOOKEEPER-78.patch" size="176761" author="mahadev" created="Tue, 7 Apr 2009 01:22:59 +0100"/>
                            <attachment id="12404295" name="ZOOKEEPER-78.patch" size="175972" author="mahadev" created="Wed, 1 Apr 2009 02:19:34 +0100"/>
                            <attachment id="12401895" name="ZOOKEEPER-78.patch" size="49956" author="mahadev" created="Wed, 11 Mar 2009 05:08:18 +0000"/>
                            <attachment id="12400636" name="ZOOKEEPER-78.patch" size="34365" author="mahadev" created="Fri, 20 Feb 2009 23:17:56 +0000"/>
                            <attachment id="12400563" name="ZOOKEEPER-78.patch" size="36873" author="mahadev" created="Fri, 20 Feb 2009 01:30:38 +0000"/>
                            <attachment id="12386649" name="patch_with_including_Benjamin&apos;s_fix.patch" size="38132" author="jstrachan" created="Tue, 22 Jul 2008 20:00:13 +0100"/>
                            <attachment id="12386733" name="using_zookeeper_facade.patch" size="46962" author="jstrachan" created="Wed, 23 Jul 2008 16:27:45 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12400901">ZOOKEEPER-88</subtask>
                            <subtask id="12400902">ZOOKEEPER-89</subtask>
                            <subtask id="12400903">ZOOKEEPER-90</subtask>
                            <subtask id="12400907">ZOOKEEPER-91</subtask>
                            <subtask id="12400908">ZOOKEEPER-92</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Jul 2008 17:18:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48066</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzyof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33602</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>