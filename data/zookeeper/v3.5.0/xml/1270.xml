<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:44:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1270/ZOOKEEPER-1270.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1270] testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving.</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1270</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Looks pretty serious - quorum is formed but no clients can attach. Will attach logs momentarily.&lt;/p&gt;

&lt;p&gt;This test was introduced in the following commit (all three jira commit at once):&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-335&quot; title=&quot;zookeeper servers should commit the new leader txn to their logs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-335&quot;&gt;&lt;del&gt;ZOOKEEPER-335&lt;/del&gt;&lt;/a&gt;. zookeeper servers should commit the new leader txn to their logs.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1081&quot; title=&quot;modify leader/follower code to correctly deal with new leader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1081&quot;&gt;&lt;del&gt;ZOOKEEPER-1081&lt;/del&gt;&lt;/a&gt;. modify leader/follower code to correctly deal with new leader&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1082&quot; title=&quot;modify leader election to correctly take into account current epoch&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1082&quot;&gt;&lt;del&gt;ZOOKEEPER-1082&lt;/del&gt;&lt;/a&gt;. modify leader election to correctly take into account current&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529326">ZOOKEEPER-1270</key>
            <summary>testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fpj">Flavio Junqueira</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Oct 2011 23:25:36 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:04 +0000</updated>
                            <resolved>Sat, 5 Nov 2011 11:46:06 +0000</resolved>
                                                    <fixVersion>3.4.0</fixVersion>
                    <fixVersion>3.5.0</fixVersion>
                                    <component>server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13141649" author="phunt" created="Tue, 1 Nov 2011 21:53:00 +0000"  >&lt;p&gt;It looks like this issue might be related to Read only mode - after applying the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1268&quot; title=&quot;problems with read only mode, intermittent test failures and ERRORs in the log&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1268&quot;&gt;&lt;del&gt;ZOOKEEPER-1268&lt;/del&gt;&lt;/a&gt; I could not get this to happen again. I ran the QuorumPeerMain test over 30 times without a single failure, I run the full test suite 3 times without any issues. It&apos;s looking like ROM is somehow causing this failure - which seems likely given the logs and the way ROM operates.&lt;/p&gt;

&lt;p&gt;I&apos;m moving this out of 3.4.0 now that &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1268&quot; title=&quot;problems with read only mode, intermittent test failures and ERRORs in the log&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1268&quot;&gt;&lt;del&gt;ZOOKEEPER-1268&lt;/del&gt;&lt;/a&gt; is applied there and I can no longer reproduce.&lt;/p&gt;</comment>
                            <comment id="13142657" author="phunt" created="Wed, 2 Nov 2011 22:58:49 +0000"  >&lt;p&gt;Looks like this is still hanging around, see time 2011-11-02 22:11:27,124&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper_branch34/49/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testEarlyLeaderAbandonment/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper_branch34/49/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testEarlyLeaderAbandonment/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
2011-11-02 22:11:27,113 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41413:LearnerHandler@264] - Follower sid: 1 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@166340c
2011-11-02 22:11:27,113 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41414:LearnerHandler@264] - Follower sid: 0 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@101ac93
2011-11-02 22:11:27,123 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41413:LearnerHandler@319] - Synchronizing with Follower sid: 1 maxCommittedLog =100000003 minCommittedLog = 100000001 peerLastZxid = 100000003
2011-11-02 22:11:27,123 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41414:LearnerHandler@319] - Synchronizing with Follower sid: 0 maxCommittedLog =100000003 minCommittedLog = 100000001 peerLastZxid = 100000003
2011-11-02 22:11:27,123 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41413:LearnerHandler@407] - Sending snapshot last zxid of peer is 0x100000003  zxid of leader is 0x0sent zxid of db as 0x100000003
2011-11-02 22:11:27,124 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:41414:LearnerHandler@407] - Sending snapshot last zxid of peer is 0x100000003  zxid of leader is 0x0sent zxid of db as 0x100000003
2011-11-02 22:11:27,123 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:Learner@323] - Getting a snapshot from leader
2011-11-02 22:11:27,124 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:Learner@323] - Getting a snapshot from leader
2011-11-02 22:11:27,125 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:FileTxnSnapLog@255] - Snapshotting: 100000003
2011-11-02 22:11:27,125 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@255] - Snapshotting: 100000003
2011-11-02 22:11:27,373 [myid:] - INFO  [main-SendThread(localhost:11233):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11233
2011-11-02 22:11:27,373 [myid:] - INFO  [main-SendThread(localhost:11233):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11233, initiating session
2011-11-02 22:11:27,373 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxnFactory@213] - Accepted socket connection from /127.0.0.1:37239
2011-11-02 22:11:27,374 [myid:2] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2011-11-02 22:11:27,374 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxn@1000] - Closed socket connection for client /127.0.0.1:37239 (no session established for client)
2011-11-02 22:11:27,374 [myid:] - INFO  [main-SendThread(localhost:11233):ClientCnxn$SendThread@1059] - Unable to read additional data from server sessionid 0x233665616f20000, likely server has closed socket, closing socket connection and attempting reconnect
2011-11-02 22:11:27,714 [myid:] - INFO  [main-SendThread(localhost:11230):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11230
2011-11-02 22:11:27,714 [myid:] - INFO  [main-SendThread(localhost:11230):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11230, initiating session
2011-11-02 22:11:27,714 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxnFactory@213] - Accepted socket connection from /127.0.0.1:33215
2011-11-02 22:11:27,715 [myid:1] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2011-11-02 22:11:27,715 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxn@1000] - Closed socket connection for client /127.0.0.1:33215 (no session established for client)
2011-11-02 22:11:27,715 [myid:] - INFO  [main-SendThread(localhost:11230):ClientCnxn$SendThread@1059] - Unable to read additional data from server sessionid 0x133665616f50000, likely server has closed socket, closing socket connection and attempting reconnect
2011-11-02 22:11:27,843 [myid:] - INFO  [main-SendThread(localhost:11227):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11227
2011-11-02 22:11:27,843 [myid:] - INFO  [main-SendThread(localhost:11227):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11227, initiating session
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13142670" author="phunt" created="Wed, 2 Nov 2011 23:18:03 +0000"  >&lt;p&gt;testEarlyLeaderAbandonment2.txt.gz contains the second failure logs - from apache jenkins on branch 34&lt;/p&gt;</comment>
                            <comment id="13142709" author="mahadev" created="Thu, 3 Nov 2011 00:12:24 +0000"  >&lt;p&gt;Looks like the zookeeperserver does not start running within the Quorum Peers. There is something really wrong which prevents the Followers/leaders to start running the ZooKeeperServers. I suspect, it has something to do with NEWLeader transaction (could be wrong). Need to look deeper. Another pair of eyes would help!&lt;/p&gt;</comment>
                            <comment id="13143272" author="fpj" created="Thu, 3 Nov 2011 16:10:56 +0000"  >&lt;p&gt;For coordination purposes, I&apos;m having a look at this issue.&lt;/p&gt;</comment>
                            <comment id="13143390" author="fpj" created="Thu, 3 Nov 2011 18:04:36 +0000"  >&lt;p&gt;Here is my progress so far. Mahadev is right, it sounds like we are not setting the zkServer of ServerCnxFactory, which we do both in Learner and Leader by calling self.cnxnFactory.setZooKeeperServer(zk). We should also be seeing a message like: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Have quorum of supporters; starting up and setting last processed zxid:
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in the log file Pat posted, but we aren&apos;t, which implies that the leader establishment procedure is not completing. Is this a timing issue? I&apos;m skeptical about it being a time issue because we wait 10 seconds for the waitForAll call to complete, but I&apos;m not sure if this completely unrealistic or not assuming that the jenkins machine is overloaded.&lt;/p&gt;

&lt;p&gt;Is there anything I&apos;m missing here? I&apos;ll keep investigating...&lt;/p&gt;</comment>
                            <comment id="13143400" author="fpj" created="Thu, 3 Nov 2011 18:12:05 +0000"  >&lt;p&gt;I forgot to mention that I haven&apos;t been able to reproduce it, and I have been running for the past few hours.&lt;/p&gt;</comment>
                            <comment id="13143473" author="fournc" created="Thu, 3 Nov 2011 19:31:23 +0000"  >&lt;p&gt;You have come to the same conclusion I did. The leader sends snapshots to the followers and they both log that they are taking a snaphsot (implying that we got the NEWLEADER message), but you don&apos;t see anything in the log that indicates the leader actually managed to call processAck on either of the responses, where you should see something like:&lt;br/&gt;
2011-11-03 13:07:49,717 &lt;span class=&quot;error&quot;&gt;&amp;#91;myid:2&amp;#93;&lt;/span&gt; - WARN  &lt;span class=&quot;error&quot;&gt;&amp;#91;LearnerHandler-/127.0.0.1:63083:Leader@506&amp;#93;&lt;/span&gt; - Commiting zxid 0x200000000 from /127.0.0.1:11228 not first!&lt;br/&gt;
2011-11-03 13:07:49,717 &lt;span class=&quot;error&quot;&gt;&amp;#91;myid:2&amp;#93;&lt;/span&gt; - WARN  &lt;span class=&quot;error&quot;&gt;&amp;#91;LearnerHandler-/127.0.0.1:63083:Leader@508&amp;#93;&lt;/span&gt; - First is 0&lt;/p&gt;

&lt;p&gt;Not sure why yet though.&lt;/p&gt;</comment>
                            <comment id="13143481" author="fournc" created="Thu, 3 Nov 2011 19:51:25 +0000"  >&lt;p&gt;It would be nice if we could get a full stack dump on failure here. It seems like if this is some sort of a deadlock issue that would show it pretty quick. I will see if I can add that to QuorumPeerMainTest, to possibly get some more information.&lt;/p&gt;</comment>
                            <comment id="13143540" author="fournc" created="Thu, 3 Nov 2011 21:19:40 +0000"  >&lt;p&gt;tests that will print the whole stack trace in case of failure to reach client state&lt;/p&gt;</comment>
                            <comment id="13143542" author="fournc" created="Thu, 3 Nov 2011 21:22:26 +0000"  >&lt;p&gt;There&apos;s some extraneous stuff in ClientBase, but if anyone can repro this bug locally and run it with this stack tracing on that would be useful.&lt;/p&gt;</comment>
                            <comment id="13143567" author="fpj" created="Thu, 3 Nov 2011 22:28:12 +0000"  >&lt;p&gt;I haven&apos;t been able to reproduce the problem, but I&apos;ll leave it running in a loop. On your comment about ClientBase, Camille, I was wondering if you have any other insight.&lt;/p&gt;</comment>
                            <comment id="13143602" author="fournc" created="Thu, 3 Nov 2011 23:24:31 +0000"  >&lt;p&gt;It seems to me that everything comes up ok, and starts the election process, elects a leader, and gets a snapshot from the leader. But in the logs where you have 2 followers very closely synched in time (never my local box but seems to happen on the build boxes occasionally), after the followers have claimed to write a snapshot to disk (which means they must have gotten the NEWLEADER message) the whole process then stops, and you see no logs from the leader indicating it ran processAck for either follower. It feels to me like it could be a race condition in the leader somewhere, causing it to somehow miss that ACK but I can&apos;t seem to find it. Nothing in the diffs from the checkin related to ZAB1.0 seem to be much of a culprit... I&apos;m a bit stumped but going to keep looking.&lt;/p&gt;</comment>
                            <comment id="13143625" author="phunt" created="Thu, 3 Nov 2011 23:48:37 +0000"  >&lt;p&gt;Camille - This patch is against trunk, is that true? (fails to apply against 3.4)&lt;/p&gt;

&lt;p&gt;Notice that the original traces are against 3.4 branch.&lt;/p&gt;

&lt;p&gt;I&apos;m running this patch against my CI infra. will let you know.&lt;/p&gt;</comment>
                            <comment id="13143631" author="phunt" created="Fri, 4 Nov 2011 00:03:54 +0000"  >&lt;p&gt;here: (trunk)&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
2011-11-03 17:03:55,228 [myid:] - ERROR [main:ClientBase@544] - Starting logAllStackTraces()
Thread Sender-/127.0.0.1:48422
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.server.quorum.LearnerHandler.sendPackets(LearnerHandler.java:137)
	at org.apache.zookeeper.server.quorum.LearnerHandler.access$000(LearnerHandler.java:56)
	at org.apache.zookeeper.server.quorum.LearnerHandler$1.run(LearnerHandler.java:425)
Thread Finalizer
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)
Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227
	at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
	at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210)
	at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194)
	at java.lang.Thread.run(Thread.java:619)
Thread QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11233
	at java.lang.Thread.sleep(Native Method)
	at org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:361)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:746)
Thread main-EventThread
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493)
Thread SendWorker:0
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread SendWorker:0
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread Reference Handler
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
Thread LearnerHandler-/127.0.0.1:48421
	at java.lang.Object.wait(Native Method)
	at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:450)
Thread Thread-20
	at java.lang.Object.wait(Native Method)
	at java.lang.Thread.join(Thread.java:1143)
	at java.lang.Thread.join(Thread.java:1196)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110)
	at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107)
	at java.lang.Thread.run(Thread.java:619)
Thread main-EventThread
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493)
Thread /127.0.0.1:11229
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
	at java.net.ServerSocket.implAccept(ServerSocket.java:453)
	at java.net.ServerSocket.accept(ServerSocket.java:421)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489)
Thread SendWorker:1
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233
	at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
	at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210)
	at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194)
	at java.lang.Thread.run(Thread.java:619)
Thread RecvWorker:1
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread Thread-26
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
	at java.net.ServerSocket.implAccept(ServerSocket.java:453)
	at java.net.ServerSocket.accept(ServerSocket.java:421)
	at org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor.run(Leader.java:250)
Thread /127.0.0.1:11235
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
	at java.net.ServerSocket.implAccept(ServerSocket.java:453)
	at java.net.ServerSocket.accept(ServerSocket.java:421)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489)
Thread SendWorker:2
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread main-SendThread(localhost:11233)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:925)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:979)
Thread WorkerReceiver[myid=0]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205)
	at java.lang.Thread.run(Thread.java:619)
Thread /127.0.0.1:11232
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)
	at java.net.ServerSocket.implAccept(ServerSocket.java:453)
	at java.net.ServerSocket.accept(ServerSocket.java:421)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489)
Thread WorkerSender[myid=2]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362)
	at java.lang.Thread.run(Thread.java:619)
Thread SendWorker:2
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread RecvWorker:2
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread Thread-22
	at java.lang.Object.wait(Native Method)
	at java.lang.Thread.join(Thread.java:1143)
	at java.lang.Thread.join(Thread.java:1196)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110)
	at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107)
	at java.lang.Thread.run(Thread.java:619)
Thread SendWorker:1
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665)
Thread RecvWorker:0
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread Signal Dispatcher
Thread RecvWorker:0
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread RecvWorker:2
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread LearnerHandler-/127.0.0.1:48422
	at java.lang.Object.wait(Native Method)
	at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:450)
Thread WorkerReceiver[myid=2]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205)
	at java.lang.Thread.run(Thread.java:619)
Thread Thread-21
	at java.lang.Object.wait(Native Method)
	at java.lang.Thread.join(Thread.java:1143)
	at java.lang.Thread.join(Thread.java:1196)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110)
	at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107)
	at java.lang.Thread.run(Thread.java:619)
Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230
	at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
	at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210)
	at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194)
	at java.lang.Thread.run(Thread.java:619)
Thread main
	at java.lang.Thread.dumpThreads(Native Method)
	at java.lang.Thread.getAllStackTraces(Thread.java:1487)
	at org.apache.zookeeper.test.ClientBase.logAllStackTraces(ClientBase.java:536)
	at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.waitForAll(QuorumPeerMainTest.java:319)
	at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.testEarlyLeaderAbandonment(QuorumPeerMainTest.java:148)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:52)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:422)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:931)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:785)
Thread main-SendThread(localhost:11230)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:161)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1131)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1071)
Thread main-SendThread(localhost:11227)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:925)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:979)
Thread main-EventThread
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493)
Thread WorkerSender[myid=1]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362)
	at java.lang.Thread.run(Thread.java:619)
Thread QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)
	at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83)
	at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108)
	at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:152)
	at org.apache.zookeeper.server.quorum.Learner.syncWithLeader(Learner.java:363)
	at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:80)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:733)
Thread WorkerSender[myid=0]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362)
	at java.lang.Thread.run(Thread.java:619)
Thread RecvWorker:1
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.net.SocketInputStream.read(SocketInputStream.java:182)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745)
Thread Sender-/127.0.0.1:48421
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.server.quorum.LearnerHandler.sendPackets(LearnerHandler.java:137)
	at org.apache.zookeeper.server.quorum.LearnerHandler.access$000(LearnerHandler.java:56)
	at org.apache.zookeeper.server.quorum.LearnerHandler$1.run(LearnerHandler.java:425)
Thread QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)
	at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83)
	at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108)
	at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:152)
	at org.apache.zookeeper.server.quorum.Learner.syncWithLeader(Learner.java:363)
	at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:80)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:733)
Thread WorkerReceiver[myid=1]
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205)
	at java.lang.Thread.run(Thread.java:619)
Ending logAllStackTraces()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13143690" author="fournc" created="Fri, 4 Nov 2011 02:11:39 +0000"  >&lt;p&gt;Looking at this some more I&apos;m not entirely convinced it isn&apos;t a timing issue:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&apos;m skeptical about it being a time issue because we wait 10 seconds for the waitForAll call to complete, but I&apos;m not sure if this completely unrealistic or not assuming that the jenkins machine is overloaded.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I actually have the startup and shutdown running in a loop on my box. The one time I managed to get it to fail was due to 10 seconds not being a long enough wait time. The servers were almost up, in fact, but election just took a little while as did snapshotting etc and it never succeeded. &lt;/p&gt;</comment>
                            <comment id="13144092" author="phunt" created="Fri, 4 Nov 2011 16:01:19 +0000"  >&lt;p&gt;There&apos;s definitely a problem somewhere. See testEarlyLeaderAbandonment3.txt.gz&lt;/p&gt;

&lt;p&gt;Look at time 2011-11-04 03:41:24,779&lt;/p&gt;

&lt;p&gt;I modified the test to iterate 30 times (instead of 10) and sleep for 2 sec (rather than 1). I then ran this test continually overnight (300+times). It never failed, however when I looked at some of the console results I saw that it actually is failing, however the test is not catching this.&lt;/p&gt;

&lt;p&gt;So two issues really - 1) it looks like this is a real problem, from the exception it seems the leader has frozen? 2) the test needs to be updated regardless to fail in this case.&lt;/p&gt;</comment>
                            <comment id="13144163" author="fpj" created="Fri, 4 Nov 2011 17:01:52 +0000"  >&lt;p&gt;Let me dump what I have in mind right now. After checking the logs and the stack trace Pat provided, it looks like the leader is waiting on the loop right before it sets the zookeeper server (Line 361, Leader), as we had observed before. It implies that the leader is not receiving acks from followers. Since the logs say that the followers are snapshotting, one option is that the snapshot is not concluding for some reason. Another alternative is that the acknowledgments to the leader are getting lost. &lt;/p&gt;

&lt;p&gt;Since Pat increased the parameter values to have a longer timeout, I&apos;m even more skeptical that this is a timing issue, but I don&apos;t think we can rule it out yet. &lt;/p&gt;</comment>
                            <comment id="13144167" author="phunt" created="Fri, 4 Nov 2011 17:08:03 +0000"  >&lt;p&gt;If you update the patch with addl debugging, and fix the test to actually fail in this case, I&apos;ll be happy to run it again on my cluster.&lt;/p&gt;

&lt;p&gt;add some log detail when the followers complete snapshotting so we can rule this out/in.&lt;/p&gt;</comment>
                            <comment id="13144171" author="fpj" created="Fri, 4 Nov 2011 17:10:28 +0000"  >&lt;p&gt;This is the code snippet for the handling of UPTODATE in Learner.java:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;              case Leader.UPTODATE:
                    if (!snapshotTaken) {
                        zk.takeSnapshot();
                    }
                    self.cnxnFactory.setZooKeeperServer(zk);                
                    break outerLoop;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 


&lt;p&gt;If the snapshot were completing, then it should be setting the zookeeper server. Given that we see the &quot;Snapshotting&quot; message in the logs, I assume that the follower is receiving an UPTODATE message, but it is failing to complete the snapshot.&lt;/p&gt;</comment>
                            <comment id="13144208" author="phunt" created="Fri, 4 Nov 2011 17:54:53 +0000"  >&lt;p&gt;Ok, here&apos;s whats&apos; happening wrt the test not failing. &lt;/p&gt;

&lt;p&gt;Look after the time index I provided, notice that the followers fail to hear from the leader, at which point they re-negotiate the quorum, at which point the quorum IS RE-EST SUCCESSFULLY, and the clients are now able to connect to the service and the test continues.&lt;/p&gt;

&lt;p&gt;This is a side-effect of increasing the &quot;waitForAll&quot; time that we allow. We are giving time for the quorum to re-establish itself after the &quot;hang&quot;. &lt;/p&gt;

&lt;p&gt;Likely this is why we have not seen this in the past, if it did every happen (in any test) it might have been ignored due to recovery.&lt;/p&gt;

&lt;p&gt;so now that we know the test is really failing, perhaps we should just go back to 10 iterations/1sec sleep so that the test will actually fail. (or perhaps there&apos;s a better way to address this in the test?)&lt;/p&gt;</comment>
                            <comment id="13144237" author="fpj" created="Fri, 4 Nov 2011 18:25:45 +0000"  >&lt;p&gt;Here is some progress. I was actually looking at the wrong snippet. The correct one was the NEWLEADER handler:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;            case Leader.NEWLEADER: // it will be NEWLEADER in v1.0
                    zk.takeSnapshot();
                    snapshotTaken = true;
                    writePacket(new QuorumPacket(Leader.ACK, newLeaderZxid, null, null), true);
                    break;
                }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;We also take a snapshot here and by looking at the stack trace that Pat posted, we see that the learner handlers are stuck in the loop right after receiving the ack, which essentially waits for the leader to start. By the same stack trace, the leader is not starting because it is waiting for the followers to acknowledge the NEWLEADER message... but the followers have acknowledged the NEWLEADER message, otherwise the learner handlers wouldn&apos;t be executing that loop (Line 450). Unless I&apos;m missing anything, the problem must be in Leader.processAck.&lt;/p&gt;</comment>
                            <comment id="13144244" author="fpj" created="Fri, 4 Nov 2011 18:42:31 +0000"  >&lt;p&gt;Here are the two cases that would cause the ack not to be added without generating any log message:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;        if (outstandingProposals.size() == 0) {
            if (LOG.isDebugEnabled()) {
                LOG.debug(&quot;outstanding is 0&quot;);
            }
            return;
        }
        if (lastCommitted &amp;gt;= zxid) {
            if (LOG.isDebugEnabled()) {
                LOG.debug(&quot;proposal has already been committed, pzxid:&quot;
                        + lastCommitted
                        + &quot; zxid: 0x&quot; + Long.toHexString(zxid));
            }
            // The proposal has already been committed
            return;
        }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m trying to decide which one is likely to be causing it to return.&lt;/p&gt;</comment>
                            <comment id="13144272" author="fpj" created="Fri, 4 Nov 2011 19:36:01 +0000"  >&lt;p&gt;My latest conjecture is that we are getting acks for NEWLEADER before we have a chance to get it into the outstandingProposals queue, which would cause the ack to be dropped and the behavior we are observing. I tried to move the code in lead that adds NEWLEADER to the queue to before the point where we start the cnxAcceptor, but it broke a lot of tests, so I don&apos;t think this is the right approach.&lt;/p&gt;

&lt;p&gt;Pat, if you want to run again, I would suggest to put two info messages for the cases I posted last in Leader.processAck() to determine exactly which case is being triggered and preventing the leader from collecting the ack.&lt;/p&gt;</comment>
                            <comment id="13144292" author="phunt" created="Fri, 4 Nov 2011 20:09:32 +0000"  >&lt;p&gt;I&apos;m running that on my cluster now. will report results.&lt;/p&gt;</comment>
                            <comment id="13144306" author="phunt" created="Fri, 4 Nov 2011 20:22:52 +0000"  >&lt;p&gt;This was printed a few times just before the failure:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] 2011-11-04 13:23:20,001 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:51057:Leader@478] - PDH outstandingProposals.size() is ZERO
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See attachment testEarlyLeaderAbandonment4&lt;/p&gt;</comment>
                            <comment id="13144310" author="phunt" created="Fri, 4 Nov 2011 20:26:31 +0000"  >&lt;p&gt;I&apos;m not sure that&apos;s conclusive though, this is the patch, if I apply it on my local system the test passes, but the logs still contain this ZERO outstanding message:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
diff --git a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
index a44f1ee..a4cc127 100644
--- a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
+++ b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
@@ -475,12 +475,14 @@ public class Leader {
         }
 
         if (outstandingProposals.size() == 0) {
+            LOG.info(&quot;PDH outstandingProposals.size() is ZERO&quot;);
             if (LOG.isDebugEnabled()) {
                 LOG.debug(&quot;outstanding is 0&quot;);
             }
             return;
         }
         if (lastCommitted &amp;gt;= zxid) {
+            LOG.info(&quot;PDH lastCommitted = &quot; + Long.toHexString(lastCommitted) + &quot; zxid = &quot; + Long.toHexString(zxid));
             if (LOG.isDebugEnabled()) {
                 LOG.debug(&quot;proposal has already been committed, pzxid:&quot;
                         + lastCommitted
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13144334" author="fpj" created="Fri, 4 Nov 2011 20:57:44 +0000"  >&lt;p&gt;It is ok to have the zero outstanding message, since the request might have been already acknowledged by a quorum. It is a problem if you get it and it hasn&apos;t been acknowledged by a quorum, which corresponds to the case I mentioned above.&lt;/p&gt;</comment>
                            <comment id="13144351" author="phunt" created="Fri, 4 Nov 2011 21:24:23 +0000"  >&lt;p&gt;why do I see this in my local test log then? (passes) &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2011-11-04 13:33:12,979 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@255] - Snapshotting: 0
2011-11-04 13:33:12,979 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:43739:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1
2011-11-04 13:33:12,981 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:43740:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0
2011-11-04 13:33:12,985 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:43740:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0
&amp;lt;then immediately a client connects successfully&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is at the same point in the log where we see the crash (but this is a passing version)&lt;/p&gt;</comment>
                            <comment id="13144372" author="phunt" created="Fri, 4 Nov 2011 21:43:57 +0000"  >&lt;p&gt;here&apos;s more log information for a passing case. I added a new LOG after the size==0 check to check for the case where we get an ack and there is something outstanding.&lt;/p&gt;

&lt;p&gt;Notice each follower is sending 2 acks. ack!&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2011-11-04 14:35:43,549 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:FileTxnSnapLog@255] - Snapshotting: 0
2011-11-04 14:35:43,549 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:45594:Leader@484] - PDH outstandingProposals.size() is NOT zero zxid = 100000000 sid = 0 followerAddr = /127.0.0.1:11234
2011-11-04 14:35:43,549 [myid:2] - WARN  [LearnerHandler-/127.0.0.1:45594:Leader@509] - Commiting zxid 0x100000000 from /127.0.0.1:11234 not first!
2011-11-04 14:35:43,550 [myid:2] - WARN  [LearnerHandler-/127.0.0.1:45594:Leader@511] - First is 0
2011-11-04 14:35:43,550 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:45594:Leader@535] - Have quorum of supporters; starting up and setting last processed zxid: 4294967296
2011-11-04 14:35:43,566 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:45595:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1 followerAddr = /127.0.0.1:11234
2011-11-04 14:35:43,569 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:45594:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0 followerAddr = /127.0.0.1:11234
2011-11-04 14:35:43,570 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:45595:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1 followerAddr = /127.0.0.1:11234
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13144378" author="fournc" created="Fri, 4 Nov 2011 21:49:03 +0000"  >&lt;p&gt;2 acks is expected. This threw me the first time I saw it in the code, but it&apos;s right as far as I could reason looking through follower and leader, the first ack is after NEWLEADER, the second is right before we start the zk server.&lt;/p&gt;</comment>
                            <comment id="13144413" author="fpj" created="Fri, 4 Nov 2011 22:24:54 +0000"  >&lt;p&gt;With this patch, we make sure that the newleader message is queued before we process acks to newleader. &lt;/p&gt;</comment>
                            <comment id="13144416" author="fpj" created="Fri, 4 Nov 2011 22:29:46 +0000"  >&lt;p&gt;Camille, It sounds right that we need multiple acks from the follower, but it sounds awkward that they are acknowledging the same message. Perhaps this is to guarantee a correct implementation and for backward compatibility?&lt;/p&gt;</comment>
                            <comment id="13144426" author="phunt" created="Fri, 4 Nov 2011 22:46:04 +0000"  >&lt;p&gt;it&apos;s running in my test harness now (both camille&apos;s patch and fpj)&lt;/p&gt;</comment>
                            <comment id="13144480" author="shralex" created="Sat, 5 Nov 2011 00:20:15 +0000"  >&lt;p&gt;Please note that &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1194&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/ZOOKEEPER-1194&lt;/a&gt; fixes the problem of NEWLEADER message not being in outstandingProposals when NEWLEADER acks arrive. &lt;/p&gt;

&lt;p&gt;I haven&apos;t followed ZK-1270 closely, but just thought you should be aware of ZK-1194&lt;/p&gt;</comment>
                            <comment id="13144483" author="phunt" created="Sat, 5 Nov 2011 00:24:35 +0000"  >&lt;p&gt;Thanks Alexander. How does that patch compare to this? Esp wrt risk?&lt;/p&gt;

&lt;p&gt;Do you think we should choose 1194 over this change?&lt;/p&gt;

&lt;p&gt;Flavio?&lt;/p&gt;</comment>
                            <comment id="13144492" author="shralex" created="Sat, 5 Nov 2011 00:48:42 +0000"  >&lt;p&gt;I think that ZK-1194 risk is very low. It modifies 2 lines of code in Leader.java to make sure that the leader is in connectingFollowers (electingFollowers) before returning from getEpochToPropose (waitForEpochAck). It includes 2 tests for these two changes.&lt;/p&gt;

&lt;p&gt;According to my understanding, ZK-1194 patch can replace all changes to Leader and LearnerHandler that appear in the patches above for ZK-1270. Specifically with ZK-1194 in it is not necessary to explicitly check that NEWLEADER message got into the outstandingProposals, and to wait for this condition in LeaderHandler. &lt;/p&gt;

&lt;p&gt;I&apos;m not sure what was the purpose of the changes to the other files in ZK-1270 but I&apos;m pretty sure ZK-1194 addresses the same issue as the changes to Leader and LearnerHandler made here. Also - ZK-1194 handles another possible race condition not addressed in ZK-1270.&lt;/p&gt;</comment>
                            <comment id="13144518" author="mahadev" created="Sat, 5 Nov 2011 01:56:05 +0000"  >&lt;p&gt;Alex/Pat,&lt;br/&gt;
 I&apos;d really prefer the patch on this jira for now. Alex, I am in the middle of making a release. The patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1194&quot; title=&quot;Two possible race conditions during leader establishment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1194&quot;&gt;&lt;del&gt;ZOOKEEPER-1194&lt;/del&gt;&lt;/a&gt; does not apply and I really would not like to wait for consensus on the fix on ZOOKEEEPR-1194. We can definitely put the fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1194&quot; title=&quot;Two possible race conditions during leader establishment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1194&quot;&gt;&lt;del&gt;ZOOKEEPER-1194&lt;/del&gt;&lt;/a&gt; in 3.5 or 3.4.1. Fair enough? &lt;/p&gt;</comment>
                            <comment id="13144530" author="shralex" created="Sat, 5 Nov 2011 02:46:14 +0000"  >&lt;p&gt;Hi Mahadev,&lt;/p&gt;

&lt;p&gt;I understand, I&apos;m only speaking up here because the patches overlap. When ZK-1194 goes in the changes to Leader and LearnerHandler from ZK-1270 become unnecessary.&lt;/p&gt;

&lt;p&gt;Actually, now that I looked closer on ZK-1270 I realized that the changes to Leader.java and LearnerHandler.java are the only code changes here and the rest are tests. So ZK-1270 is subsumed by ZK-1194.&lt;/p&gt;

&lt;p&gt;I think it would be best to adopt the code changes from ZK-1194 (changes to 2 lines of code) and merge the tests in these patches. But this is up to you of course.&lt;/p&gt;


&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13144555" author="shralex" created="Sat, 5 Nov 2011 03:57:59 +0000"  >&lt;p&gt;I&apos;m attaching an alternative patch to this.&lt;/p&gt;</comment>
                            <comment id="13144556" author="mahadev" created="Sat, 5 Nov 2011 03:59:31 +0000"  >&lt;p&gt;Alex,&lt;br/&gt;
 Can you please upload a patch that applies to trunk and 3.4 branch here? I&apos;d like to get this done tonight.&lt;/p&gt;</comment>
                            <comment id="13144557" author="mahadev" created="Sat, 5 Nov 2011 04:01:54 +0000"  >&lt;p&gt;Alex,&lt;br/&gt;
 Please make sure that you grant code changes to Apache. You just have to click on the box that says &quot;Grant license to Apache&quot; when attaching the patch.&lt;/p&gt;

&lt;p&gt;Do reattach the patch with the grant. thanks&lt;/p&gt;</comment>
                            <comment id="13144562" author="fournc" created="Sat, 5 Nov 2011 04:17:44 +0000"  >&lt;p&gt;If readyToStart becomes unused with this patch can we please go ahead and remove it?&lt;/p&gt;</comment>
                            <comment id="13144566" author="phunt" created="Sat, 5 Nov 2011 04:25:06 +0000"  >&lt;p&gt;note: flavio&apos;s patch is causing the following 11 tests to fail consistently:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.zookeeper.test.DisconnectedWatcherTest.testChildWatcherAutoResetWithChroot
org.apache.zookeeper.test.DisconnectedWatcherTest.testDefaultWatcherAutoResetWithChroot
org.apache.zookeeper.test.DisconnectedWatcherTest.testDeepChildWatcherAutoResetWithChroot
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithLocal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithGlobal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithLocal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithLocal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithGlobal
org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithLocal
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13144588" author="phunt" created="Sat, 5 Nov 2011 05:14:07 +0000"  >&lt;p&gt;Note: these same tests are failing with the 1270-1194 patch.&lt;/p&gt;</comment>
                            <comment id="13144590" author="shralex" created="Sat, 5 Nov 2011 05:16:14 +0000"  >&lt;p&gt;Camille, we should remove readyToStart, but it is still used in Zab1_0Test, which uses it to check that the leader is ready and able to receive connections. We can most probably check this some other way, but I suggest to leave this for now and fix later.&lt;/p&gt;</comment>
                            <comment id="13144595" author="mahadev" created="Sat, 5 Nov 2011 05:20:07 +0000"  >&lt;p&gt;+1 on Alex&apos;s suggestion. Lets stick to minimal changes for now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="13144601" author="fournc" created="Sat, 5 Nov 2011 05:39:59 +0000"  >&lt;p&gt;without my clientbase junk&lt;/p&gt;</comment>
                            <comment id="13144602" author="fournc" created="Sat, 5 Nov 2011 05:53:32 +0000"  >&lt;p&gt;branch 3.4 version of clean patch&lt;/p&gt;</comment>
                            <comment id="13144611" author="mahadev" created="Sat, 5 Nov 2011 06:36:59 +0000"  >&lt;p&gt;Just committed Camille&apos;s final patch to trunk and 3.4. Thanks to Camille/Flavio/Alex/Pat on this! A true community patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;</comment>
                            <comment id="13144633" author="fpj" created="Sat, 5 Nov 2011 08:54:07 +0000"  >&lt;p&gt;Sorry for missing part of the fun.&lt;/p&gt;

&lt;p&gt;Alex, Thanks for spotting the duplicate, that was a great catch. I&apos;m not convinced that your patch completely solves the problem, though. LearnerHandler sends NEWLEADER concurrently with the leader adding NEWLEADER to outstandingRequests, so even fixing the barriers as you did does not prevent the race I mentioned above, I think.&lt;/p&gt;

&lt;p&gt;I must say that I didn&apos;t find my proposed patch very elegant, but I&apos;m not entirely sure that yours covers all cases, so let me know what you think.  &lt;/p&gt;</comment>
                            <comment id="13144651" author="hudson" created="Sat, 5 Nov 2011 10:56:20 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1356 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1356/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1356/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1270&quot; title=&quot;testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1270&quot;&gt;&lt;del&gt;ZOOKEEPER-1270&lt;/del&gt;&lt;/a&gt;. testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving. (Flavio, Camille and Alexander Shraer via mahadev)&lt;/p&gt;

&lt;p&gt;mahadev : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1197891&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1197891&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13144658" author="shralex" created="Sat, 5 Nov 2011 11:27:04 +0000"  >&lt;p&gt;Hi Flavio,&lt;/p&gt;

&lt;p&gt;LearnerHandler sends NEWLEADER messages after running waitForEpochAck.&lt;br/&gt;
The patch makes sure that waitForEpochAck does not return until the leader also runs it. Leader runs waitForEpochAck after inserting NEWLEADER message into the outstandingProposals.&lt;/p&gt;

&lt;p&gt;Alex&lt;/p&gt;</comment>
                            <comment id="13144662" author="fpj" created="Sat, 5 Nov 2011 11:46:06 +0000"  >&lt;p&gt;Sounds right, thanks for the clarification.&lt;/p&gt;</comment>
                            <comment id="13145929" author="phunt" created="Mon, 7 Nov 2011 23:20:31 +0000"  >&lt;p&gt;this is still failing on 3.4 branch (incl this latest patch).&lt;/p&gt;

&lt;p&gt;See testEarlyLeaderAbandonment5.txt.gz (attached).&lt;/p&gt;

&lt;p&gt;Notice now that the stat is continually run, without the clients attempting to connect to the server. The test doesn&apos;t seem to be cutting over from detecting the service is up to starting the clients.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12523643">ZOOKEEPER-1194</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12502580" name="ZOOKEEPER-1270-1194.patch" size="8437" author="fournc" created="Sat, 5 Nov 2011 05:39:58 +0000"/>
                            <attachment id="12502577" name="ZOOKEEPER-1270-and-1194-branch34.patch" size="10596" author="shralex" created="Sat, 5 Nov 2011 05:13:35 +0000"/>
                            <attachment id="12502573" name="ZOOKEEPER-1270-and-1194.patch" size="11270" author="shralex" created="Sat, 5 Nov 2011 04:05:16 +0000"/>
                            <attachment id="12502572" name="ZOOKEEPER-1270-and-1194.patch" size="11270" author="shralex" created="Sat, 5 Nov 2011 03:57:59 +0000"/>
                            <attachment id="12502557" name="ZOOKEEPER-1270.patch" size="7328" author="phunt" created="Sat, 5 Nov 2011 00:22:28 +0000"/>
                            <attachment id="12502538" name="ZOOKEEPER-1270.patch" size="1737" author="fpj" created="Fri, 4 Nov 2011 22:24:54 +0000"/>
                            <attachment id="12502555" name="ZOOKEEPER-1270_br34.patch" size="6936" author="phunt" created="Sat, 5 Nov 2011 00:22:07 +0000"/>
                            <attachment id="12502223" name="ZOOKEEPER-1270tests.patch" size="5700" author="fournc" created="Thu, 3 Nov 2011 21:19:40 +0000"/>
                            <attachment id="12502225" name="ZOOKEEPER-1270tests2.patch" size="5045" author="fournc" created="Thu, 3 Nov 2011 21:21:22 +0000"/>
                            <attachment id="12501395" name="testEarlyLeaderAbandonment.txt.gz" size="44242" author="phunt" created="Fri, 28 Oct 2011 23:35:43 +0100"/>
                            <attachment id="12502062" name="testEarlyLeaderAbandonment2.txt.gz" size="49034" author="phunt" created="Wed, 2 Nov 2011 23:18:02 +0000"/>
                            <attachment id="12502467" name="testEarlyLeaderAbandonment3.txt.gz" size="60480" author="phunt" created="Fri, 4 Nov 2011 16:01:18 +0000"/>
                            <attachment id="12502521" name="testEarlyLeaderAbandonment4.txt.gz" size="47956" author="phunt" created="Fri, 4 Nov 2011 20:22:52 +0000"/>
                            <attachment id="12502838" name="testEarlyLeaderAbandonment5.txt.gz" size="55620" author="phunt" created="Mon, 7 Nov 2011 23:20:31 +0000"/>
                            <attachment id="12502581" name="zookeeper-1270-1194-34.patch" size="7762" author="fournc" created="Sat, 5 Nov 2011 05:53:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Nov 2011 00:12:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215186</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzsrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32646</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>