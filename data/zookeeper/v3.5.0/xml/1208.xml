<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 05:47:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/ZOOKEEPER-1208/ZOOKEEPER-1208.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[ZOOKEEPER-1208] Ephemeral node not removed after the client session is long gone</title>
                <link>https://issues.apache.org/jira/browse/ZOOKEEPER-1208</link>
                <project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
                    <description>&lt;p&gt;Copying from email thread.&lt;/p&gt;


&lt;p&gt;We found our ZK server in a state where an ephemeral node still exists after&lt;br/&gt;
a client session is long gone. I used the cons command on each ZK host to&lt;br/&gt;
list all connections and couldn&apos;t find the ephemeralOwner id. We are using&lt;br/&gt;
ZK 3.3.3. Has anyone seen this problem?&lt;/p&gt;

&lt;p&gt;I got the following information from the logs.&lt;/p&gt;

&lt;p&gt;The node that still exists is /kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;host&amp;gt;/owners/UserPerformanceEvent/529-7&lt;/p&gt;

&lt;p&gt;I saw that the ephemeral owner is 86167322861045079 which is session id 0x13220b93e610550.&lt;/p&gt;

&lt;p&gt;After searching in the transaction log of one of the ZK servers found that session expired&lt;/p&gt;

&lt;p&gt;9/22/11 12:17:57 PM PDT session 0x13220b93e610550 cxid 0x74 zxid 0x601bd36f7 closeSession null&lt;/p&gt;

&lt;p&gt;On digging further into the logs I found that there were multiple sessions created in quick succession and every session tried to create the same node. But i verified that the sessions were closed and opened in order&lt;br/&gt;
9/22/11 12:17:56 PM PDT session 0x13220b93e610550 cxid 0x0 zxid 0x601bd36b5 createSession 6000&lt;br/&gt;
9/22/11 12:17:57 PM PDT session 0x13220b93e610550 cxid 0x74 zxid 0x601bd36f7 closeSession null&lt;br/&gt;
9/22/11 12:17:58 PM PDT session 0x13220b93e610551 cxid 0x0 zxid 0x601bd36f8 createSession 6000&lt;br/&gt;
9/22/11 12:17:59 PM PDT session 0x13220b93e610551 cxid 0x74 zxid 0x601bd373a closeSession null&lt;br/&gt;
9/22/11 12:18:00 PM PDT session 0x13220b93e610552 cxid 0x0 zxid 0x601bd373e createSession 6000&lt;br/&gt;
9/22/11 12:18:01 PM PDT session 0x13220b93e610552 cxid 0x6c zxid 0x601bd37a0 closeSession null&lt;br/&gt;
9/22/11 12:18:02 PM PDT session 0x13220b93e610553 cxid 0x0 zxid 0x601bd37e9 createSession 6000&lt;br/&gt;
9/22/11 12:18:03 PM PDT session 0x13220b93e610553 cxid 0x74 zxid 0x601bd382b closeSession null&lt;br/&gt;
9/22/11 12:18:04 PM PDT session 0x13220b93e610554 cxid 0x0 zxid 0x601bd383c createSession 6000&lt;br/&gt;
9/22/11 12:18:05 PM PDT session 0x13220b93e610554 cxid 0x6a zxid 0x601bd388f closeSession null&lt;br/&gt;
9/22/11 12:18:06 PM PDT session 0x13220b93e610555 cxid 0x0 zxid 0x601bd3895 createSession 6000&lt;br/&gt;
9/22/11 12:18:07 PM PDT session 0x13220b93e610555 cxid 0x6a zxid 0x601bd38cd closeSession null&lt;br/&gt;
9/22/11 12:18:10 PM PDT session 0x13220b93e610556 cxid 0x0 zxid 0x601bd38d1 createSession 6000&lt;br/&gt;
9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x0 zxid 0x601bd38f2 createSession 6000&lt;br/&gt;
9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x51 zxid 0x601bd396a closeSession null&lt;/p&gt;

&lt;p&gt;Here is the log output for the sessions that tried creating the same node&lt;/p&gt;

&lt;p&gt;9/22/11 12:17:54 PM PDT session 0x13220b93e61054f cxid 0x42 zxid 0x601bd366b create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:17:56 PM PDT session 0x13220b93e610550 cxid 0x42 zxid 0x601bd36ce create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:17:58 PM PDT session 0x13220b93e610551 cxid 0x42 zxid 0x601bd3711 create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:18:00 PM PDT session 0x13220b93e610552 cxid 0x42 zxid 0x601bd3777 create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:18:02 PM PDT session 0x13220b93e610553 cxid 0x42 zxid 0x601bd3802 create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:18:05 PM PDT session 0x13220b93e610554 cxid 0x44 zxid 0x601bd385d create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:18:07 PM PDT session 0x13220b93e610555 cxid 0x44 zxid 0x601bd38b0 create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;br/&gt;
9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x52 zxid 0x601bd396b create &apos;/kafka-tracking/consumers/UserPerformanceEvent-&amp;lt;hostname&amp;gt;/owners/UserPerformanceEvent/529-7&lt;/p&gt;

&lt;p&gt;Let me know if you need additional information.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12525006">ZOOKEEPER-1208</key>
            <summary>Ephemeral node not removed after the client session is long gone</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="phunt">Patrick Hunt</assignee>
                                    <reporter username="k4j">kishore gopalakrishna</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Sep 2011 05:35:47 +0100</created>
                <updated>Wed, 23 Nov 2011 19:22:11 +0000</updated>
                            <resolved>Mon, 14 Nov 2011 19:34:12 +0000</resolved>
                                    <version>3.3.3</version>
                                    <fixVersion>3.3.4</fixVersion>
                    <fixVersion>3.4.0</fixVersion>
                    <fixVersion>3.5.0</fixVersion>
                                        <due></due>
                            <votes>3</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13116143" author="k4j" created="Wed, 28 Sep 2011 05:37:55 +0100"  >&lt;p&gt;Comment from Camille&lt;br/&gt;
So, the node was created by 0x13220b93e610550 at 12:17:56, then that session closed at 12:17:57, the node did not delete, and a bunch of other sessions later tried to create the node. These sessions got nodeexists failures I presume?&lt;/p&gt;


&lt;p&gt;Forgive the block of text I&apos;m going to write instead of code:&lt;/p&gt;

&lt;p&gt;I&apos;m going to bet that the problem lies in PrepRequestProcessor. If we get the ephemerals for the session while an ephemeral is still in outstandingChanges and has not been committed, then another thread commits that ephemeral and removes it from outstanding changes before synchronizing in the outstandingChagnes block, we could never put it in the ephemeral set that we are using to reflect ephemerals to delete. I think we need to move the synchronized block up before we get the ephemerals from the database. But this is a bit of speculation at the moment. &lt;/p&gt;


&lt;p&gt;HashSet&amp;lt;String&amp;gt; es = zks.getZKDatabase()&lt;br/&gt;
.getEphemerals(request.sessionId);&lt;/p&gt;

&lt;p&gt;Is outside the synchronized block that deletes the ephemerals:&lt;/p&gt;

&lt;p&gt;                synchronized (zks.outstandingChanges) {&lt;br/&gt;
    for (ChangeRecord c : zks.outstandingChanges) {&lt;br/&gt;
    if (c.stat == null) &lt;/p&gt;
{                            // Doing a delete
                           es.remove(c.path);                        }
&lt;p&gt;else if (c.stat.getEphemeralOwner() == request.sessionId) &lt;/p&gt;
{
                es.add(c.path);                        }
&lt;p&gt;     }                    for (String path2Delete : es) {&lt;br/&gt;
          addChangeRecord(new ChangeRecord(txnHeader.getZxid(),&lt;br/&gt;
                        path2Delete, null, 0, null));&lt;/p&gt;</comment>
                            <comment id="13116568" author="vishalmlst" created="Wed, 28 Sep 2011 17:02:02 +0100"  >&lt;p&gt;Hi Camille,&lt;/p&gt;

&lt;p&gt;outstandingChanges seems to be used mainly for bookeeping, no? Even if record was removed from outstandingChanges, the second for loop should add it back? Also, wouldn&apos;t the DataTree.killSession() remove the ephemeral when called through FinalRequestProcessor?&lt;/p&gt;

&lt;p&gt;Kishore, you metioned &quot;I saw that the ephemeral owner is 86167322861045079 which is session id 0x13220b93e610550.&quot; sessionID 86167322861045079 is 0x13220B93E610557. This is the ID of the last session that you displayed above. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Can you check if there has been any error in verifying the state of the cluster?&lt;/li&gt;
	&lt;li&gt;Are all servers showing this znode? Were there any server failures?&lt;/li&gt;
	&lt;li&gt;Can you attach ZK logs and describe what happened before the cluster went into this state?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13116700" author="fournc" created="Wed, 28 Sep 2011 20:07:31 +0100"  >&lt;p&gt;I only spent a few minutes looking at the problem, so it doesn&apos;t surprise me that my speculation might not hold up.&lt;/p&gt;

&lt;p&gt;Kishore, you never answered the questions I asked in my email, namely, all the other sessions that tried to create that node got NODEEXISTS exceptions? If they didn&apos;t, it should be a big red flag. As Vishal said, that ephemeral owner is 0x13220b93e610557. Are you sure you even have a problem here?&lt;/p&gt;</comment>
                            <comment id="13116754" author="k4j" created="Wed, 28 Sep 2011 21:08:00 +0100"  >&lt;p&gt;Hi Vishal and Camille,&lt;/p&gt;

&lt;p&gt;I will upload the logs soon. Yes we did see the NodeExists exception in the logs. Sorry about the sessionId used an online tool which did incorrect conversion&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The node still exists and here is the stat&lt;/p&gt;

&lt;p&gt;version:0&lt;br/&gt;
ctime:1316719091806&lt;br/&gt;
czxid:25798981995&lt;br/&gt;
length:109&lt;br/&gt;
EphemeralOwner:86167322861045079&lt;br/&gt;
mtime:1316719091806&lt;br/&gt;
mzxid:25798981995&lt;br/&gt;
numChildren:0&lt;br/&gt;
pzxid:25798981995&lt;br/&gt;
version:0&lt;/p&gt;

&lt;p&gt;Yes there is a problem for sure that the node exists even after the session is closed. You can see from the log that session 0x13220b93e610557 is closed.&lt;/p&gt;</comment>
                            <comment id="13143962" author="lakshman" created="Fri, 4 Nov 2011 12:47:35 +0000"  >&lt;p&gt;Similar issue occurred in our case as well. The ephemeral exists &lt;b&gt;only in one of the follower&lt;/b&gt; even after it&apos;s owner session is expired. I wanted to know whether this is same as &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1264&quot; title=&quot;FollowerResyncConcurrencyTest failing intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1264&quot;&gt;&lt;del&gt;ZOOKEEPER-1264&lt;/del&gt;&lt;/a&gt;. Any hints?&lt;/p&gt;</comment>
                            <comment id="13147981" author="phunt" created="Thu, 10 Nov 2011 20:20:57 +0000"  >&lt;p&gt;I  believe I see the issue.&lt;/p&gt;

&lt;p&gt;PrepRequestProcessor checks the session is valid on a create.&lt;/p&gt;

&lt;p&gt;However it doesn&apos;t not know about an in-progress close session request&lt;/p&gt;

&lt;p&gt;The session is not invalidated (session tracker) until&lt;br/&gt;
FinalRequestProcessor. At which point a create in PrepRP would fail.&lt;br/&gt;
However prior to that it will get into the pipeline. Resulting in the&lt;br/&gt;
issue you are seeing.&lt;/p&gt;


&lt;p&gt;Q: what are you clients doing? It&apos;s weird that a create would come&lt;br/&gt;
from the client after the session has been closed. Do you have&lt;br/&gt;
multiple threads sharing a session?&lt;/p&gt;</comment>
                            <comment id="13148021" author="phunt" created="Thu, 10 Nov 2011 21:23:26 +0000"  >&lt;p&gt;The client (checked java) seems to protect against this. Was the&lt;br/&gt;
session expired? IC. Based on the cxid of the close session being 0&lt;br/&gt;
I&apos;m guessing it&apos;s an expiration.&lt;/p&gt;</comment>
                            <comment id="13148032" author="k4j" created="Thu, 10 Nov 2011 21:44:37 +0000"  >&lt;p&gt;Hi Pat,&lt;/p&gt;

&lt;p&gt;I think its possible that create might come after close when there zookeeper.close is invoked in a shutdown hook. Application starts create session and waits for connected state in another thread and create an ephemeral znode. But if the application is killed immediately Ctrl C then shutdown hook can call close. &lt;/p&gt;

&lt;p&gt;We saw a case where the commit order was createsession, closesession and create node. Neha, will upload the logs shortly which clearly shows this and might help in narrowing down the use case and hopefully we can reproduce it.&lt;/p&gt;
</comment>
                            <comment id="13148043" author="phunt" created="Thu, 10 Nov 2011 22:02:39 +0000"  >&lt;p&gt;I don&apos;t think that&apos;s the case Kishore - notice the cxid of the close session is &quot;0&quot;, that&apos;s only possible if the server expired the session.&lt;/p&gt;</comment>
                            <comment id="13148132" author="phunt" created="Fri, 11 Nov 2011 00:02:11 +0000"  >&lt;p&gt;This initial patch demonstrates the problem. Test only so far but I&apos;m working on a fix.&lt;/p&gt;</comment>
                            <comment id="13148198" author="phunt" created="Fri, 11 Nov 2011 01:36:01 +0000"  >&lt;p&gt;This patch contains a fix against branch 33. It&apos;s working for me, all the tests are passing with this applied. The new test I added verifies that this is fixed.&lt;/p&gt;

&lt;p&gt;Give it a once over and I can create addl patches for 34/trunk.&lt;/p&gt;

&lt;p&gt;Just make sure I didn&apos;t bork something: locking, leaking, left a hole, etc...&lt;/p&gt;

&lt;p&gt;This will introduce more contention btw PRP and FRP, but I don&apos;t think that&apos;s avoidable.&lt;/p&gt;</comment>
                            <comment id="13148306" author="phunt" created="Fri, 11 Nov 2011 06:41:06 +0000"  >&lt;p&gt;An updated solution with a more elegant implementation of the fix.&lt;/p&gt;</comment>
                            <comment id="13148335" author="mahadev" created="Fri, 11 Nov 2011 08:00:42 +0000"  >&lt;p&gt;Sorry for being out of action (blame hadoop world &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). Looks like you found it Pat. About the testcase, I am not sure about the session id being 0. How is it tracking that the same session is being closed and an create on the same session is being sent?&lt;/p&gt;</comment>
                            <comment id="13148517" author="fournc" created="Fri, 11 Nov 2011 14:48:33 +0000"  >&lt;p&gt;I like the fix, Pat.&lt;/p&gt;</comment>
                            <comment id="13148597" author="phunt" created="Fri, 11 Nov 2011 17:38:30 +0000"  >&lt;p&gt;@mahadev session id 0 just means to create a new session (see ClientCnxn). I ignore the returned sid because the session is tied to the socket (i.e. not included in subsequent requests by the client).&lt;/p&gt;</comment>
                            <comment id="13148634" author="mahadev" created="Fri, 11 Nov 2011 18:14:02 +0000"  >&lt;p&gt;You are right. I was worried abt the returned sid. Go ahead and upload patches for 3.4 and trunk. &lt;/p&gt;</comment>
                            <comment id="13148726" author="phunt" created="Fri, 11 Nov 2011 20:54:34 +0000"  >&lt;p&gt;Added patches for 3.4 and trunk. I verified that the test fails w/o this fix on each branch. Then verified that the test passed subsequent to the fix being applied.&lt;/p&gt;</comment>
                            <comment id="13148743" author="hadoopqa" created="Fri, 11 Nov 2011 21:25:28 +0000"  >&lt;p&gt;+1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12503419/ZOOKEEPER-1208_trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12503419/ZOOKEEPER-1208_trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision 1201045.&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed core unit tests.&lt;/p&gt;

&lt;p&gt;    +1 contrib tests.  The patch passed contrib unit tests.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13149709" author="fournc" created="Mon, 14 Nov 2011 16:11:14 +0000"  >&lt;p&gt;Patrick I&apos;m going to check this in minus the printlns in the new test.&lt;/p&gt;</comment>
                            <comment id="13149714" author="fournc" created="Mon, 14 Nov 2011 16:13:56 +0000"  >&lt;p&gt;Actually, I&apos;m not sure... are these useful at all? I&apos;d rather not see printlns in test output unless it&apos;s really useful, but in the case of this test I&apos;m not sure I can tell...&lt;/p&gt;</comment>
                            <comment id="13149745" author="k4j" created="Mon, 14 Nov 2011 17:03:47 +0000"  >&lt;p&gt;Can some one please summarize the root cause of the issue and also explain why the create is seen in txn log after session is closed. Also what about the initial suspicion Camille had about &lt;br/&gt;
HashSet&amp;lt;String&amp;gt; es = zks.getZKDatabase()&lt;br/&gt;
.getEphemerals(request.sessionId);&lt;/p&gt;

&lt;p&gt;being outside the synchronized block.&lt;/p&gt;
</comment>
                            <comment id="13149783" author="phunt" created="Mon, 14 Nov 2011 17:52:08 +0000"  >&lt;p&gt;@camille I&apos;m usually fine with leaving printlns in tests (I look at the eclipse console), but I&apos;m also fine if you want to convert them to info level logs.&lt;/p&gt;</comment>
                            <comment id="13149787" author="phunt" created="Mon, 14 Nov 2011 17:57:07 +0000"  >&lt;p&gt;@kishore I didn&apos;t copy this from the ML, here are the details:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yes, I realized after that the cxid is 0 in your logs - that indicates it was expired and not closed explicitly by the client.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;This holds up my theory that the PrepRequestProcessor is accepting a create from the client after the session has been expired.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What&apos;s happen is the following&lt;br/&gt;
1) client creates session&lt;br/&gt;
2) leader wants to expire session, so sends message to the quorum&lt;br/&gt;
3) client sends create znode to follower which fwds to leader, leader accepts (preqrequestprocessor) the request because the quorum has not yet accepted the expiration (close session) request in FinalRequestProcessor.&lt;/p&gt;

&lt;p&gt;The fix is for the leader to note that the session is in the process of closing and not accept changes in PRP after it sees a close session request.&lt;/p&gt;</comment>
                            <comment id="13149829" author="fournc" created="Mon, 14 Nov 2011 19:19:25 +0000"  >&lt;p&gt;Committed to 3.4 and trunk, will get 3.3.4 in a second. Mahadev, feel free to cut another 3.4 RC whenever.&lt;/p&gt;</comment>
                            <comment id="13149831" author="mahadev" created="Mon, 14 Nov 2011 19:23:05 +0000"  >&lt;p&gt;Thanks Camille. I am trying to checkin &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1269&quot; title=&quot;Multi deserialization issues&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1269&quot;&gt;&lt;del&gt;ZOOKEEPER-1269&lt;/del&gt;&lt;/a&gt; for 3.4 as well. Will do an RC right after that!&lt;/p&gt;</comment>
                            <comment id="13149837" author="mahadev" created="Mon, 14 Nov 2011 19:29:26 +0000"  >&lt;p&gt;Sorry I meant &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1239&quot; title=&quot;add logging/stats to identify fsync stalls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1239&quot;&gt;&lt;del&gt;ZOOKEEPER-1239&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13150373" author="hudson" created="Tue, 15 Nov 2011 10:56:27 +0000"  >&lt;p&gt;Integrated in ZooKeeper-trunk #1365 (See &lt;a href=&quot;https://builds.apache.org/job/ZooKeeper-trunk/1365/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/ZooKeeper-trunk/1365/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-1208&quot; title=&quot;Ephemeral node not removed after the client session is long gone&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-1208&quot;&gt;&lt;del&gt;ZOOKEEPER-1208&lt;/del&gt;&lt;/a&gt;. Ephemeral node not removed after the client session is long gone. (phunt via camille)&lt;/p&gt;

&lt;p&gt;camille : &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1201832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&amp;amp;view=rev&amp;amp;rev=1201832&lt;/a&gt;&lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/zookeeper/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java&lt;/li&gt;
	&lt;li&gt;/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SessionInvalidationTest.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12503346" name="ZOOKEEPER-1208_br33.patch" size="10082" author="phunt" created="Fri, 11 Nov 2011 06:41:05 +0000"/>
                            <attachment id="12503320" name="ZOOKEEPER-1208_br33.patch" size="11197" author="phunt" created="Fri, 11 Nov 2011 01:36:01 +0000"/>
                            <attachment id="12503418" name="ZOOKEEPER-1208_br34.patch" size="9591" author="phunt" created="Fri, 11 Nov 2011 20:52:59 +0000"/>
                            <attachment id="12503419" name="ZOOKEEPER-1208_trunk.patch" size="9616" author="phunt" created="Fri, 11 Nov 2011 20:53:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Sep 2011 16:02:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34379</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hxzsvz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32664</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>trunk version 1201832</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>