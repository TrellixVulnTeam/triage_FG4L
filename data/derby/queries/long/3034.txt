CollationTest has the following todo test items that should be addressed.
	/*

	ToDo test cases
	1)Use a parameter as cast operand and cast that to character type. The
	resultant type should get it's collation from the compilation schema
	2)Test conditional if (NULLIF and CASE) with different datatypes to see
	how casting works. The compile node for this SQL construct seems to be
	dealing with lot of casting code (ConditionalNode)
	3)When doing concatenation testing, check what happens if concatantion
	is between non-char types. This is because ConcatenationOperatorNode
	in compile package has following comment "If either the left or right
	operands are non-string, non-bit types, then we generate an implicit
	cast to VARCHAR."
	4)Do testing with upper and lower
	5)It looks like node for LIKE ESCAPE which is LikeEscapeOperatorNode
	also uses quite a bit of casting. Should include test for LIKE ESCAPE
	which will trigger the casting.
	6)Binary arithmetic operators do casting if one of the operands is
	string and other is numeric. Test that combination
	7)Looks like import utility does casting (in ColumnInfo class). See
	if any testing is required for that.
	8)Do testing with UNION and use the results of UNION in collation
	comparison (if there is something like that possible. I didn't put too
	much thought into it but wanted to list here so we can do the required
	testing if needed).
	 */

