The workaround is to create a view which gives the columns case-insensitive names. The following script shows this problem:


connect 'jdbc:derby:memory:db;create=true';

call syscs_util.syscs_register_tool( 'luceneSupport', true );

create schema "s";

create table "s"."t"
(
    "passageID" int,
    "text" varchar( 32672 )
);

-- fails because the trailing key id is case-sensitive
call luceneSupport.createIndex
(
  '"s"',
  '"t"',
  '"text"',
  null,
  '"passageID"'
);

create view "s"."t_view" ( passageID, text ) as select * from "s"."t";

-- succeeds on a view with case-insensitive identifiers
call luceneSupport.createIndex
(
  '"s"',
  '"t_view"',
  'text',
  null,
  'passageID'
);

