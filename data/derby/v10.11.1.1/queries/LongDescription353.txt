Derby was recently enhanced to support BY DEFAULT identity column. While the behavior of this feature is not documented yet, I think, it is desirable for IDENTITY_VAL_LOCAL() function, that is used to retrieve last single statement insert value for identity column, to return user specified value for the default column.

For GENERATED ALWAYS identity columns, this issue doesn't apply, since users can't provide a value. But for GENERATED BY DEFAULT identity columns, users can optionally specify a value. IDENTITY_VAL_LOCAL() function should return this value. Derby currently doesn't support this behavior.

ij> create table tauto ( i int generated by default as identity, j int, k int);
0 rows inserted/updated/deleted
ij> insert into tauto (j,k) values (1,1);
1 row inserted/updated/deleted
ij> values identity_val_local();
1
-------------------------------
1

1 row selected
ij> insert into tauto (j,k) values (1,1);
1 row inserted/updated/deleted
ij> values identity_val_local();
1
-------------------------------
2

1 row selected
ij> insert into tauto values (5,1,1);
1 row inserted/updated/deleted
ij> values identity_val_local();
1
-------------------------------
2                                                                     <<<<<<<<<<<<<<============= This needs be '5'

1 row selected
ij> select * from tauto;
I          |J          |K
-----------------------------------
1          |1          |1
2          |1          |1
5          |1          |1

3 rows selected