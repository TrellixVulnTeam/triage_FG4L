When running

        s.executeUpdate("create table t (i integer)");
        PreparedStatement p = c.prepareStatement("insert into t values");
        for (int i=0; i<N; i++) 
{
            p.setInt(1,i);
            p.addBatch();
        }
        System.out.println("Ok");
        p.executeBatch();


If  N is 9000
The server reports:

524272
java.lang.ArrayIndexOutOfBoundsException: 524272
        at org.apache.derby.impl.drda.DDMWriter.startDdm(DDMWriter.java:315)
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARD(DRDAConnThread.java:4937)
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDs(DRDAConnThread.java:4898)
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDs(DRDAConnThread.java:4888)
        at org.apache.derby.impl.drda.DRDAConnThread.checkWarning(DRDAConnThread.java:7239)
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:3605)
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:859)
        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:214)
agentThread[DRDAConnThread_3,5,main]

While the client hangs in executeBatch().

If N is 8000, the client gets the following Exception:
Exception in thread "main" org.apache.derby.client.am.BatchUpdateException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.
        at org.apache.derby.client.am.Agent.endBatchedReadChain(Agent.java:267)
        at org.apache.derby.client.am.PreparedStatement.executeBatchRequestX(PreparedStatement.java:1596)
        at org.apache.derby.client.am.PreparedStatement.executeBatchX(PreparedStatement.java:1467)
        at org.apache.derby.client.am.PreparedStatement.executeBatch(PreparedStatement.java:945)
        at AOIB.main(AOIB.java:24)

