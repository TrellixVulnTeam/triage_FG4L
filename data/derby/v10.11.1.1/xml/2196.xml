<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2196/DERBY-2196.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2196] Run standalone network server with security manager by default</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2196</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;From an e-mail discussion:&lt;br/&gt;
... Derby should match the security  provided by typical client server systems such as DB2, Oracle, etc. I &lt;br/&gt;
think in this case system/database owners are trusting the database &lt;br/&gt;
system to ensure that their system cannot be attacked. So maybe if Derby &lt;br/&gt;
is booted as a standalone server with no security manager involved, it &lt;br/&gt;
should install one with a default security policy. Thus allowing Derby &lt;br/&gt;
to use Java security manager to manage system privileges but not &lt;br/&gt;
requiring everyone to become familiar with them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200612.mbox/%3c4582FE67.7040308@apache.org%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200612.mbox/%3c4582FE67.7040308@apache.org%3e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I imagine such a policy would allow any access to databases under derby.system.home and/or user.home.&lt;br/&gt;
By standalone I mean the network server was started though the main() method (command line).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12359060">DERBY-2196</key>
            <summary>Run standalone network server with security manager by default</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Dec 2006 18:44:44 +0000</created>
                <updated>Fri, 21 Jan 2011 17:49:35 +0000</updated>
                            <resolved>Tue, 29 May 2007 18:45:57 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12462585" author="djd" created="Fri, 5 Jan 2007 20:02:32 +0000"  >&lt;p&gt;Wiki page at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/db-derby/SecurityExpectations&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/SecurityExpectations&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12465272" author="rhillegas" created="Tue, 16 Jan 2007 19:55:09 +0000"  >&lt;p&gt;Attached first draft of functional spec based on wiki page. Community feedback appreciated.&lt;/p&gt;</comment>
                            <comment id="12465284" author="djd" created="Tue, 16 Jan 2007 20:33:22 +0000"  >&lt;p&gt;Looks good - some initial comments:&lt;/p&gt;

&lt;p&gt;In the &quot;Basic Policy&quot; section the spec switches between stating the permissions will be granted to &quot;Derby&quot; and granted to specific jar files. I think stating the specific jar files is much clearer.&lt;/p&gt;

&lt;p&gt;No idea what this means:&lt;br/&gt;
   &quot;permission to establish insulating classloaders per connection&quot;&lt;/p&gt;

&lt;p&gt;The section for not having derby.system.home set has a permission that references derby.system.home.&lt;/p&gt;

&lt;p&gt;As an alternative to when derby.system.home is not set, consider having the network server set derby.system.home to the current directory. This would then have a single format for the policy file rather than two paths.&lt;/p&gt;

&lt;p&gt;I don&apos;t think derbynet.jar needs permissions to access the database files, e.g. $&lt;/p&gt;
{derby.system.home}
&lt;p&gt;/-&lt;/p&gt;

&lt;p&gt;derby.jar does not need to be granted any SocketPermission&lt;/p&gt;

&lt;p&gt;Should the socket permission in &quot;Basic Startup Policy&quot; have similar functionality to the one in &quot;Basic Shutdown Policy&quot; in that localhost is used if -h is not used etc? Should the port number be in the policy file?&lt;/p&gt;

&lt;p&gt;Spec does not reflect the discussion on the list about other file permissions, e.g. for backup etc.&lt;/p&gt;

&lt;p&gt;I don&apos;t see (or understand) any rationale for the &quot;Basic Shutdown Policy&quot;. What security hole is this trying to close?&lt;br/&gt;
Maybe the answer to this could also explain why the other policy is called &quot;&quot;Basic Shutdown Policy&quot;&quot;, when it&apos;s the policy for a running server not just startup time.&lt;/p&gt;

&lt;p&gt;I wonder why if the &quot;Open policy&quot; is not recommended a really easy way to use it is provided. &lt;/p&gt;</comment>
                            <comment id="12465456" author="rhillegas" created="Wed, 17 Jan 2007 17:24:34 +0000"  >&lt;p&gt;Thanks for the quick response, Dan.&lt;/p&gt;

&lt;p&gt;1) I agree that it would be better to grant the file/property/classloader permissions just to derby.jar and the socket permission just to derbynet.jar. The example policy file given in the current Admin Guide should probably be revised the same way.&lt;/p&gt;

&lt;p&gt;2) I will reword the sentence on classloaders.&lt;/p&gt;

&lt;p&gt;3) I like the idea of setting derby.system.home if it isn&apos;t set and then just having one set of permissions for derby.jar. I think that the second example policy file in the Developer&apos;s Guide is just wrong when it grants permissions to the file system rooted under derby.system.home when that property is not set.&lt;/p&gt;

&lt;p&gt;4) Thanks for reminding me about the backup/import discussion. The Basic policy can just grant blanket read/write/delete to the whole file system (with a suitable comment).&lt;/p&gt;

&lt;p&gt;5) Thanks for quizzing me about the rationale for the shutdown policy. I think I have misunderstood the comments in the policy in the Admin Guide. I agree that we don&apos;t need a shutdown policy and those extra socket permissions are intended for the running server.&lt;/p&gt;

&lt;p&gt;6) I think I understand your misgivings about the easy-to-use flag which disables default security. However, I also see the value in makiing it easy for customers to get the behavior they want. Are you concerned that this could be abused accidentally?&lt;/p&gt;</comment>
                            <comment id="12465802" author="johnemb" created="Thu, 18 Jan 2007 16:35:30 +0000"  >&lt;p&gt;Good work, here are my comments:&lt;/p&gt;

&lt;p&gt;a) If I understand this correctly, there is actually no point in using the security manager when using the shutdown command, right? If so, I agree that the admin guide example is confusing.&lt;/p&gt;

&lt;p&gt;b) Which SocketPermissions will be default (for the start command)? Granting &quot;accept, connect, resolve&quot; for &quot;localhost&quot; and &quot;127.0.0.1&quot;, or something else?&lt;/p&gt;

&lt;p&gt;c) I think the spec could be clearer on which parts of the basic policy will depend on parameters/options. Or, which parameters options will/might impact the basic policy.&lt;/p&gt;

&lt;p&gt;d) Regarding the upgrade scenarios, I think it would be better (less misleading) to call the &quot;Insecure Standalone Server&quot; scenario &quot;Default Standalone Server&quot; or something to that regard instead, since the server is only (totally) insecure with old versions, not new ones.&lt;/p&gt;

&lt;p&gt;e) I think it is good to have a relatively easy way to disable automatic security manager installation. Whether the option is called -i, -disableSecurityManager or something else does not matter much to me.&lt;/p&gt;

&lt;p&gt;f) At first I was thinking that &quot;None&quot; is a more intuitive name for the &quot;Open&quot; policy (because no &quot;real&quot; policy is used), but I guess it doesn&apos;t matter. Just thinking loud &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="12465818" author="rhillegas" created="Thu, 18 Jan 2007 17:17:53 +0000"  >&lt;p&gt;Thanks for the feedback, John. In the next rev of the spec, I will clarify all of the points you raise.&lt;/p&gt;</comment>
                            <comment id="12466783" author="rhillegas" created="Tue, 23 Jan 2007 17:55:33 +0000"  >&lt;p&gt;Attach second rev of a functional spec for this feature. This rev incorporates feedback on the previous rev from Dan and John.&lt;/p&gt;</comment>
                            <comment id="12466800" author="djd" created="Tue, 23 Jan 2007 19:05:24 +0000"  >&lt;p&gt;For the all files, I do not think $&lt;/p&gt;
{/}/- is portable. Why not use the defined special token &amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;?&lt;br/&gt;
Other possibilities are ${user.home}${/}
&lt;p&gt;-and $&lt;/p&gt;
{user.dir}
&lt;p&gt;$&lt;/p&gt;
{/}
&lt;p&gt;-&lt;/p&gt;

&lt;p&gt;I think the socket permission for derbynet.jar can simply be fixed as:&lt;/p&gt;

&lt;p&gt;permission java.net.SocketPermission(&quot;$&lt;/p&gt;
{derby.drda.host}
&lt;p&gt;:$&lt;/p&gt;
{derby.drda.portNumber}
&lt;p&gt;&quot;, &quot;accept&quot;);&lt;/p&gt;

&lt;p&gt;and like derby.system.home, set those properties as required if they are not set. Note those values can be set from derby.properties.&lt;/p&gt;

&lt;p&gt;In the first row of the upgrade table I think you also need to point out that the application is now restricted by the security manager for its server-side code. This is probably more important than &quot;bugs which plague Derby&quot;.&lt;/p&gt;
</comment>
                            <comment id="12466839" author="rhillegas" created="Tue, 23 Jan 2007 22:00:34 +0000"  >&lt;p&gt;Thanks for the quick feedback, Dan. I have incorporated your comments into my private version of the spec. I will wait a little while for more comments to trickle in before posting the new rev.&lt;/p&gt;</comment>
                            <comment id="12467650" author="rhillegas" created="Thu, 25 Jan 2007 21:56:46 +0000"  >&lt;p&gt;Attach version 3 of the functional spec, incorporating Dan&apos;s feedback.&lt;/p&gt;</comment>
                            <comment id="12469091" author="rhillegas" created="Wed, 31 Jan 2007 16:29:38 +0000"  >&lt;p&gt;Attaching rev 4 of the functional spec. This incorporates Dan&apos;s suggestion (in a comment attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2206&quot; title=&quot;Provide complete security model for Java routines&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2206&quot;&gt;DERBY-2206&lt;/a&gt;): to avoid giving a false sense of security, you must enable authentication when booting the server.&lt;/p&gt;</comment>
                            <comment id="12470274" author="rhillegas" created="Mon, 5 Feb 2007 17:01:05 +0000"  >&lt;p&gt;Attaching rev 5 of this spec. This makes the following changes based on my experience in implementing the first piece of this work:&lt;/p&gt;

&lt;p&gt;1) There is already a -b option. So I can&apos;t use that for printing out the Basic policy. Instead, I have gone back to David&apos;s suggestion that we model policy-printing as a separate command rather than a dash-option. This makes more sense to me now that we only have a startup policy.&lt;/p&gt;

&lt;p&gt;2) I had to broaden the socket accept privileges to all port numbers. This is because, after accepting a connection request on the distinguished port, the server then opens up a connection with the client on another port, whose number is unpredictable.&lt;/p&gt;</comment>
                            <comment id="12470278" author="rhillegas" created="Mon, 5 Feb 2007 17:07:37 +0000"  >&lt;p&gt;Attaching a patch for the first piece of this work. This patch implements the Network Server&apos;s &quot;policy&quot; command, which prints out the Basic policy. Using this policy, I have successfully brought the server up and down, created a database, and imported a jar file. This patch touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java&lt;br/&gt;
M      java/drda/org/apache/derby/loc/drda/messages_en.properties&lt;/p&gt;

&lt;p&gt;Here is the Basic policy printed by the &quot;policy&quot; command:&lt;/p&gt;

&lt;p&gt;grant codeBase &quot;file:/export/home/rh161140/derby/mainline/trunk/jars/insane/derby.jar&quot;&lt;br/&gt;
{&lt;br/&gt;
//&lt;br/&gt;
// These permissions are needed for everyday, embedded Derby usage.&lt;br/&gt;
//&lt;br/&gt;
  permission java.lang.RuntimePermission &quot;createClassLoader&quot;;&lt;br/&gt;
  permission java.util.PropertyPermission &quot;derby.*&quot;, &quot;read&quot;;&lt;br/&gt;
  permission java.io.FilePermission &quot;$&lt;/p&gt;
{derby.system.home}&quot;,&quot;read&quot;;&lt;br/&gt;
  permission java.io.FilePermission &quot;${derby.system.home}
&lt;p&gt;$&lt;/p&gt;
{/}
&lt;p&gt;-&quot;, &quot;read,write,delete&quot;;&lt;/p&gt;

&lt;p&gt;//&lt;br/&gt;
// This permission lets you backup and restore databases&lt;br/&gt;
// to and from arbitrary locations in your file system.&lt;br/&gt;
//&lt;br/&gt;
// This permission also lets you import/export data to and from&lt;br/&gt;
// arbitrary locations in your file system.&lt;br/&gt;
//&lt;br/&gt;
// You may want to restrict this access to specific directories.&lt;br/&gt;
//&lt;br/&gt;
  permission java.io.FilePermission &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;, &quot;read,write,delete&quot;;&lt;br/&gt;
};&lt;/p&gt;

&lt;p&gt;grant codeBase &quot;file:/export/home/rh161140/derby/mainline/trunk/jars/insane/derbynet.jar&quot;&lt;br/&gt;
{&lt;br/&gt;
//&lt;br/&gt;
// This permission lets the Network Server manage connections from clients.&lt;br/&gt;
//&lt;br/&gt;
  permission java.net.SocketPermission &quot;$&lt;/p&gt;
{derby.drda.host}
&lt;p&gt;:*&quot;, &quot;accept&quot;; &lt;br/&gt;
};&lt;/p&gt;</comment>
                            <comment id="12470292" author="djd" created="Mon, 5 Feb 2007 17:53:44 +0000"  >&lt;p&gt;Rick&amp;gt; 2) I had to broaden the socket accept privileges to all port numbers. This is because, after accepting a connection request on the distinguished port, the server then opens up a connection with the client on another port, whose number is unpredictable.&lt;/p&gt;

&lt;p&gt;Should the permission then be broken into two, one for the accept on the distinguished port,  and then connect&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; on all ports or a range of port numbers?&lt;/p&gt;</comment>
                            <comment id="12470321" author="rhillegas" created="Mon, 5 Feb 2007 19:21:57 +0000"  >&lt;p&gt;Dan&amp;gt; Should the permission then be broken into two, one for the accept on the distinguished port, and then connect&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; on all ports or a range of port numbers? &lt;/p&gt;

&lt;p&gt;I tried breaking this into a permission to accept on the distinguished port and then another permission to connect on all ports. Then I attempted to connect to the server. This raised a security exception claiming that I needed accept permission on the second connection. So I think that we could break this into an accept on the distinguished port and then an accept on a range of port numbers. However, right now I don&apos;t see any way to figure out what that range would be. It looks like Derby is just relying on ServerSocket to make up a port number. I think we would have to write some more code to restrict the range of ports--probably this should be parameterized so that the customer can tell us what range of ports to use. I think this would be a useful evolution of the work begun in this JIRA but, in the interests of incremental development, I&apos;d like to defer that work.&lt;/p&gt;</comment>
                            <comment id="12470500" author="johnemb" created="Tue, 6 Feb 2007 09:54:52 +0000"  >&lt;p&gt;Some comments to &apos;derby-2196-01-print-01.diff&apos;:&lt;/p&gt;

&lt;p&gt;I found the following issues trying out the patch and the generated policy:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Connections are not allowed unless both derby.drda.host and derby.system.home have been set explicitly:&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;without -Dderby.drda.host=&amp;lt;host&amp;gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        java.security.AccessControlException: access denied (java.net.SocketPermission 127.0.0.1:44561 accept,resolve)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;without -Dderby.system.home=&amp;lt;userDir&amp;gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        java.security.AccessControlExceptionaccess denied (java.util.PropertyPermission user.dir read)XJ001.U&lt;br/&gt;
        (error received by client)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;the &quot;policy&quot; command does not work when running it using jar files (&quot;java -jar derbyrun.jar server policy&quot; or &quot;java -jar derbynet.jar policy&quot;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Regarding allowing a range of port number instead of all ports, I think we can safely assume that the ServerSocket/Socket implementations will never dynamically assign incoming connections to the &quot;well known&quot; or &quot;reserved&quot; ports (port numbers 1024 and lower). I have not been able to confirm this for sure, though.&lt;/p&gt;</comment>
                            <comment id="12470619" author="rhillegas" created="Tue, 6 Feb 2007 15:51:20 +0000"  >&lt;p&gt;Thanks for the quick review, John!&lt;/p&gt;

&lt;p&gt;The need to set derby.system.home and derby.drda.host is expected. I should have pointed that out. A follow-on patch will set those variables if they aren&apos;t already set.&lt;/p&gt;

&lt;p&gt;Thanks for catching the problems with running the policy-printer from derbyrun.jar and derbynet.jar standalone.  have come up with what looks like a simpler way to find the target codebases. The improved scheme should work for more cases.&lt;/p&gt;

&lt;p&gt;I am attaching rev 2 of this patch: derby-2196-01-print-02.diff.&lt;/p&gt;</comment>
                            <comment id="12470624" author="djd" created="Tue, 6 Feb 2007 16:10:54 +0000"  >&lt;p&gt;Do we really need a &apos;policy&apos; command? Why not just have the basic policy file in the release folder under a new folder such as security or policies? Much easier for anyone to find rather than having to learn a command.&lt;/p&gt;</comment>
                            <comment id="12470651" author="rhillegas" created="Tue, 6 Feb 2007 17:22:02 +0000"  >&lt;p&gt;Dan&amp;gt; Do we really need a &apos;policy&apos; command? Why not just have the basic policy file in the release folder under a new folder such as security or policies? Much easier for anyone to find rather than having to learn a command.&lt;/p&gt;

&lt;p&gt;When we started out, it looked as though the policy file might have to be parameterized according to command line arguments. I&apos;m cautiously hopeful right now that that is no longer true. That means the only variables in the policy file now are the language-sensitive comments which explain how to customize the file. I suppose that&apos;s just a piece of sugar and we could rely on the user guides to handle this.&lt;/p&gt;

&lt;p&gt;I&apos;m not clear on what you mean by &quot;release directory&quot;. Do you think that we should create a new subdirectory called &quot;security&quot; which is parallel to bin, doc, and lib?&lt;/p&gt;</comment>
                            <comment id="12470665" author="rhillegas" created="Tue, 6 Feb 2007 17:39:37 +0000"  >&lt;p&gt;Correction: There are still two important parameters in the policy file, viz., the codebases which receive the permissions. The network server still needs to figure out where those codebases are. I think we don&apos;t want to maintain the default policy in two places, that is, inside the network server and separately in the release tree.&lt;/p&gt;</comment>
                            <comment id="12470675" author="djd" created="Tue, 6 Feb 2007 17:58:33 +0000"  >&lt;p&gt;The codebases can also be properties, look at the policy file for the test harness.&lt;/p&gt;

&lt;p&gt;Yes I mean a security subdirectory in the release directory, but it could be done other ways, a example in the documentation that could be cut &amp;amp; pasted might be enough. The expectation is the file is going to be modified anyway.&lt;/p&gt;

&lt;p&gt;If we do have a security directory I wasn&apos;t thinking that the network server would use the file from that location, it might be easier to keep the policy file contained in the network jar file. We don&apos;t need to &quot;maintain&quot; such a file in two locations as they can be sourced from the same location during the build. With that a better name for the subdirectory might be &quot;example&quot; or &quot;templates&quot;  or something along those lines.&lt;/p&gt;</comment>
                            <comment id="12470684" author="rhillegas" created="Tue, 6 Feb 2007 18:28:21 +0000"  >&lt;p&gt;Let me make sure I understand what you are proposing:&lt;/p&gt;

&lt;p&gt;1) We ship the default policy file in a human-accessilbe  location, say a &quot;templates&quot; directory parallel to bin, doc, and lib&lt;/p&gt;

&lt;p&gt;2) We also bundle the default policy file inside derbynet.jar.&lt;/p&gt;

&lt;p&gt;3) When the server comes up, it copies the default policy file out of derbynet.jar into $&lt;/p&gt;
{user.dir}
&lt;p&gt; so that it is visible to the security machinery.&lt;/p&gt;</comment>
                            <comment id="12470686" author="djd" created="Tue, 6 Feb 2007 18:35:33 +0000"  >&lt;p&gt;1) Yes&lt;br/&gt;
2) Yes&lt;br/&gt;
3) No - the policy file is accessed directly from the jar file as a resource&lt;/p&gt;</comment>
                            <comment id="12470689" author="fuzzylogic" created="Tue, 6 Feb 2007 18:50:09 +0000"  >&lt;p&gt;Do we need a &apos;templates&apos; directory? Will there be anything but this one policy file in it? Why not keep it in demo?&lt;/p&gt;</comment>
                            <comment id="12470692" author="rhillegas" created="Tue, 6 Feb 2007 19:04:23 +0000"  >&lt;p&gt;Thanks, Dan. I need to buy a clue: How is the policy file loaded as a resource? Can you point me at some sample code which does this?&lt;/p&gt;</comment>
                            <comment id="12470706" author="djd" created="Tue, 6 Feb 2007 19:32:23 +0000"  >
&lt;p&gt;org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager&lt;/p&gt;

&lt;p&gt;org.apache.derbyTesting.junit.SecurityManagerSetup.setSecurityPolicy&lt;/p&gt;</comment>
                            <comment id="12470710" author="rhillegas" created="Tue, 6 Feb 2007 19:51:05 +0000"  >&lt;p&gt;Thanks, Dan. I think I know enough to do some damage now. I think the trick is to force java.security.policy to be an URL which begins with the &quot;jar:&quot; protocol. See &lt;a href=&quot;http://www.exampledepot.com/egs/java.net/JarUrl.html?l=rel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.exampledepot.com/egs/java.net/JarUrl.html?l=rel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll run some experiments and probably post a new functional spec.&lt;/p&gt;

&lt;p&gt;In other news, what do you think of Andrew&apos;s suggestion that we put this template file under demo? Maybe demo/templates? If no-one objects to this, that&apos;s what I&apos;ll put in the next rev of the functional spec.&lt;/p&gt;</comment>
                            <comment id="12470723" author="djd" created="Tue, 6 Feb 2007 20:07:30 +0000"  >&lt;p&gt;Not sure what &quot;trick&quot; you need to &quot;force&quot; it.&lt;/p&gt;

&lt;p&gt;Fetching the resource will automatically get it as a valid URL. That&apos;s what the code I pointed you to does.&lt;br/&gt;
It&apos;s doing exactly what you require, setting the security manager to point to a policy file in a jar file (when the tests are run as jars).&lt;/p&gt;

</comment>
                            <comment id="12470739" author="rhillegas" created="Tue, 6 Feb 2007 21:13:52 +0000"  >&lt;p&gt;Attaching rev 6 of the functional spec. This removes the &quot;policy&quot; command. Instead, we propose to ship and use a default policy file, which customers can refine. Thanks to Dan and Andrew for helping to puzzle through this.&lt;/p&gt;</comment>
                            <comment id="12470750" author="djd" created="Tue, 6 Feb 2007 21:51:12 +0000"  >&lt;p&gt;I think the two properties in rev 6 &lt;/p&gt;
{derby.derby.jar and derby.derbynet.jar}
&lt;p&gt; are overkill.&lt;br/&gt;
I think a single property that is the location of the derby jar files is sufficient and will be clearer to readers of the template policy.&lt;/p&gt;

&lt;p&gt;If someone is repackaging Derby and is copying and modifying the template file then they are unlikely to use $&lt;/p&gt;
{derby.derby.jar}
&lt;p&gt; to refer to their own application jar file that includes Derby.&lt;/p&gt;

&lt;p&gt;I&apos;m also believe that anyone that does package the Derby classes in their own jars is not really a concern for the Derby project. Derby&apos;s security is in part based upon its jar file layout, due to such concepts as jar signing. It seems hard for the project to provide any guarantees when the code is packaged by someone else.&lt;/p&gt;

&lt;p&gt;I think the typical repackaging now is to include multiple jars and have the application&apos;s jar file have a classpath manifest that refers to other jar files, such as derby.jar.&lt;/p&gt;</comment>
                            <comment id="12470762" author="rhillegas" created="Tue, 6 Feb 2007 22:46:32 +0000"  >&lt;p&gt;Thanks for the quick feedback, Dan. I don&apos;t think having two properties is going to be that confusing, although I agree that it is overkill for most users. I&apos;m content to go with two properties right now. If we feel the need to sand this down later, we can revisit this decision.&lt;/p&gt;</comment>
                            <comment id="12470766" author="rhillegas" created="Tue, 6 Feb 2007 22:52:45 +0000"  >&lt;p&gt;Attaching a third rev of this patch: derby-2196-01-print-03.diff. This patch eliminates the &quot;policy&quot; command and, instead, checks in a template policy file for use by the server and for packaging in the release. This patch touches the following files:&lt;/p&gt;

&lt;p&gt;A      java/drda/org/apache/derby/drda/server.policy &amp;#8211; the Basic server policy&lt;/p&gt;

&lt;p&gt;M      java/drda/org/apache/derby/drda/build.xml &amp;#8211; copies the policy from the source to the class tree&lt;/p&gt;

&lt;p&gt;M      build.xml &amp;#8211; puts the Basic policy in derbynet.jar&lt;/p&gt;

&lt;p&gt;M      tools/release/build.xml &amp;#8211; puts the policy file in demo/templates at release-time&lt;/p&gt;



</comment>
                            <comment id="12471076" author="rhillegas" created="Wed, 7 Feb 2007 19:40:29 +0000"  >&lt;p&gt;Committed derby-2196-01-print-03.diff at subversion revision 504661.&lt;/p&gt;</comment>
                            <comment id="12471095" author="djd" created="Wed, 7 Feb 2007 20:38:15 +0000"  >&lt;p&gt;Can you update the functional spec with how these two properties $&lt;/p&gt;
{derby.derby.jar}
&lt;p&gt; and derby.derbynet.jar will be used by end users and what benefit having two properties provides? They seem to be really strange to me as they will only ever be used by a policy file that has been modified by the user. The network server might be using them internally when it boots using its own default policy but that is really an implementation detail that is not relevant for user documentation. Also I&apos;m assuming that it is expected that derby.jar and derbynet.jar come from the same directory location since derbynet.jar is dependent on derby.jar.&lt;/p&gt;

&lt;p&gt;I am concerned that use of two properties leads to a policy file that has a potential security risk in it. Namely that by setting these properties to point to other code, that code will get a wide range of permissions including access to all files. The worst case is setting derby.derby.jar= (empty string). That would seem to grant these permissions to all code.&lt;/p&gt;

&lt;p&gt;Having the codebase in the policy file instead be something like&lt;br/&gt;
         $&lt;/p&gt;
{derby.install.url}
&lt;p&gt;/lib/derby.jar&lt;br/&gt;
limits the exposure if there is a security hole where a remote user can set derby.install.home.&lt;/p&gt;

&lt;p&gt;Of course maybe there is some benefit to the two properties as you have described them, and I&apos;m just not seeing it.&lt;/p&gt;
</comment>
                            <comment id="12471167" author="rhillegas" created="Thu, 8 Feb 2007 00:52:26 +0000"  >&lt;p&gt;Thanks for the additional feedback, Dan. If you think it&apos;s ok to not document these properties in the user guides, then I&apos;m fine with removing that task from the functional spec. I don&apos;t see much point in exposing these to users and I agree that they are just pieces of our internal plumbing--although we at least half-expose them to customers by including them in the template policy file we ship with the release.&lt;/p&gt;

&lt;p&gt;You point out an interesting security hole. I think that that hole exists regardless of whether the black-hat jar file is $&lt;/p&gt;
{derby.install.url} or ${derby.install.url}
&lt;p&gt;/lib/derby.jar. I don&apos;t know how serious that hole is. I suspect that the person who has access to setting system properties also has the power to do a lot of other harm.&lt;/p&gt;

&lt;p&gt;To close that specific security hole, we could go back to the original idea of having the network server cook up the Basic policy on the fly. That is, we would not paramterize the location of the codesources.&lt;/p&gt;</comment>
                            <comment id="12471173" author="rhillegas" created="Thu, 8 Feb 2007 01:22:18 +0000"  >&lt;p&gt;In coding this next piece, it seems best to me that the Network Server should forcibly set derby.derby.jar and derby.derbynet.jar whenever it forcibly installs a security manager. I think that this closes the security hole and eliminates any need to expose these properties in the user guides.&lt;/p&gt;</comment>
                            <comment id="12471174" author="djd" created="Thu, 8 Feb 2007 01:38:19 +0000"  >&lt;p&gt;&amp;gt; I think that that hole exists regardless of whether the black-hat jar file is $&lt;/p&gt;
{derby.install.url} or ${derby.install.url}
&lt;p&gt;/lib/derby.jar.&lt;/p&gt;

&lt;p&gt;I think that  a codebase in a policy file of $&lt;/p&gt;
{derby.install.url} is a &lt;b&gt;much&lt;/b&gt; bigger hole than ${derby.install.url}
&lt;p&gt;/lib/derby.jar&lt;br/&gt;
and has the potential to be beneifical to hostile clients.&lt;br/&gt;
The reasons is that if I can modify $&lt;/p&gt;
{derby.install.url}
&lt;p&gt; than I can point to any code including the special token of &lt;b&gt;all&lt;/b&gt; code.&lt;/p&gt;

&lt;p&gt;If I have the ability to set a system property on a remote host but don&apos;t have the ability to install software there, then I can could potentially use a remote server to grant a wide range of permissions to all code including SQL Java routines, thus allowing remote SQL Java routine defined by me remotely to have a wide range of permissions.&lt;/p&gt;

&lt;p&gt;Limiting the hole to jar files called derby.jar in a lib folder is a much smaller exposure and cannot be exploited by SQL Java routines.&lt;/p&gt;

&lt;p&gt;Maybe a remote client having the ability to set a system property is somewhat unlikely, but to be clear it need not be the permission to set all system properties, just one specific one, or the ability to set one in the derby.* namespace. Thus someone else may set up a policy file that allows some code to set derby.* properties as system properties and not realize they could have opened up everything.&lt;/p&gt;

&lt;p&gt;We don&apos;t have to expose these properties in the template policy, it could have its codebase manipulated in the build process to be something like (actual text): replace_with_path_to_derby_install/lib/derby.jar&lt;br/&gt;
Ie. something that forces the application developer to edit it.&lt;br/&gt;
It is a template for a policy file, that we expect the user to modify anyway.&lt;/p&gt;</comment>
                            <comment id="12471177" author="djd" created="Thu, 8 Feb 2007 01:44:26 +0000"  >&lt;p&gt;+1 on forcilbly setting the single property  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; as described. &lt;br/&gt;
probably also need to ensure that the policy file is coming from the derbynet.jar that is actually running.&lt;/p&gt;

&lt;p&gt;but it doesn&apos;t close the hole.&lt;/p&gt;

&lt;p&gt;the hole really exists when someone uses a modified version of the template policy file and continues to use these properties for the codebase.&lt;br/&gt;
Derby should not be recommending a policy file that has the potential to such an attack.&lt;/p&gt;</comment>
                            <comment id="12471362" author="rhillegas" created="Thu, 8 Feb 2007 15:28:03 +0000"  >&lt;p&gt;Ha! I didn&apos;t think this issue would generate such a lively discussion. I do think the security hole is vanishingly small. But it might be the same size as the corner case I&apos;m trying to support: the customer who puts derby.jar and derbynet.jar in separate directories. I don&apos;t feel passionately about this issue and I&apos;m happy to go with the following:&lt;/p&gt;

&lt;p&gt;   $&lt;/p&gt;
{derby.install.url}/derby.jar&lt;br/&gt;
   ${derby.install.url}
&lt;p&gt;/derbynet.jar&lt;/p&gt;</comment>
                            <comment id="12471387" author="djd" created="Thu, 8 Feb 2007 16:23:32 +0000"  >&lt;p&gt;The issue is that there would be a security hole with huge consequences.&lt;br/&gt;
A cracker might see the Derby code and think if I can set derby.derby.jar to an empty string for a remote server then I will silently have a pretty full set of abilities to maniplate that machine. And the person running the server would probably never notice. That&apos;s a pretty attractive target for a cracker to go after. Then the cracker would figure out how to do it, and maybe it&apos;s as simple as modifying the application&apos;s startup script for the server, it doesn&apos;t have to mean they can set Java system properties in a running JVM. And we know through viruses etc. that such attacks do occur. I&apos;m sure the core vunerability at any successful attack looks vanishingly small by itself.&lt;/p&gt;

&lt;p&gt;Security analysis is much easier is something is impossible, rather than possible, e.g. in this case codebase can not be set to an empty string if using $&lt;/p&gt;
{derby.install.url}
&lt;p&gt;/derby.jar.&lt;/p&gt;

&lt;p&gt;Thanks for switching to a single property. Since this is an internal property I&apos;m wondering if a different namespace to derby.* would be more secure, e.g. $&lt;/p&gt;
{org.apache.derby.install.url}
&lt;p&gt;.  This might ease security analysis as we could expect that application code might have permission to set derby.* (again removing possibilities) but since this will only be used for a fixed policy file it might not help. Probably sticking with derby.install.url is good for now and a separate issue could be raised for switching the internal name if required.&lt;/p&gt;


</comment>
                            <comment id="12471724" author="rhillegas" created="Fri, 9 Feb 2007 15:25:32 +0000"  >&lt;p&gt;Attaching next piece of this work: derby-2196-02-install-01.diff. This patch does the following:&lt;/p&gt;

&lt;p&gt;1) Changes the network server so that it installs a security manager when the server is booted as the VM&apos;s entry point. User authentication must be turned on.&lt;/p&gt;

&lt;p&gt;2) Introduces a new startup option, &quot;-unsecure&quot; so that customers can opt out of this secure-by-default scheme if they need to.&lt;/p&gt;

&lt;p&gt;3) Adjusts unit tests to account for the new &quot;unsecure&quot; option and the requirement that user authentication be turned on when you boot the server.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/reference/Property.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java&lt;br/&gt;
M      java/drda/org/apache/derby/drda/NetworkServerControl.java&lt;br/&gt;
M      java/drda/org/apache/derby/drda/server.policy&lt;br/&gt;
M      java/drda/org/apache/derby/loc/drda/messages_en.properties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProperties.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/testProperties.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/derbyrunjartest.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/timeslice.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/maxthreads.out&lt;/p&gt;</comment>
                            <comment id="12472471" author="rhillegas" created="Mon, 12 Feb 2007 23:44:57 +0000"  >&lt;p&gt;Committed derby-2196-02-install-01.diff at subversion revision 506751.&lt;/p&gt;</comment>
                            <comment id="12473767" author="rhillegas" created="Fri, 16 Feb 2007 17:45:01 +0000"  >&lt;p&gt;Attaching derby-2196-03-tests-01.diff. This is a unit test to verify that the network server installs a security manager with the Basic policy as expected. Makes the following changes:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java&lt;/p&gt;

&lt;p&gt;  Wires the test into the derbynet suite.&lt;/p&gt;

&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java&lt;/p&gt;

&lt;p&gt;  The test itself. Tests that the server, when booted, installs a security manager or not, depending on other command-line settings.&lt;/p&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java&lt;/p&gt;

&lt;p&gt;  Added some machinery for bringing the server up in a separate process. This test needs a separate process to avoid having to poke special test instrumentation into the network server itself.&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/junit/ServerSetup.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/junit/TestConfiguration.java&lt;/p&gt;

&lt;p&gt;  Made some machinery public.&lt;/p&gt;</comment>
                            <comment id="12474436" author="bernt" created="Tue, 20 Feb 2007 13:12:32 +0000"  >&lt;p&gt;I find the -unsecure option somewhat misleading in sense that one&lt;br/&gt;
could be lead to believe that without this options set, Derby would be&lt;br/&gt;
secure. &lt;/p&gt;

&lt;p&gt;Wether or not Derby is secure (or more precicely, secure enough for a&lt;br/&gt;
certain application) is a rather complex question to answer. Derby&lt;br/&gt;
will only be secure enough when the user has evaluated the threat to&lt;br/&gt;
his/her application and considered all security features available&lt;br/&gt;
(SSL with or without peer authentication, encryption on the disk,&lt;br/&gt;
running under security manager with the correct settings in the policy&lt;br/&gt;
file, what kind of user authentication to use, use of privileges, SQL&lt;br/&gt;
users etc) and decided what fits his/hers application.&lt;/p&gt;

&lt;p&gt;The option should be given a name which tells exactly what it does:&lt;br/&gt;
Runs Derby without security manager. E.g. -noSecutityManager or&lt;br/&gt;
something similar.&lt;/p&gt;</comment>
                            <comment id="12474459" author="rhillegas" created="Tue, 20 Feb 2007 14:54:46 +0000"  >&lt;p&gt;HI Bernt. Thanks for the feedback on the name of the override flag. I agree that &quot;secure-by-default&quot; means, at best, &quot;has no security holes that we understand&quot;. One thing that I like about &quot;unsecure&quot; as a flag name is this: it allows the flag to control other security mechanisms besides the installation of a Java security manager. I&apos;m not a big fan of introducing a lot of flags to control individual security features. I think that the discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2264&quot; title=&quot;Restrict shutdown, upgrade, and encryption powers to the database owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2264&quot;&gt;&lt;del&gt;DERBY-2264&lt;/del&gt;&lt;/a&gt; gives some sense of how complicated our security settings are already. I&apos;d like to contain the complexity if we can.&lt;/p&gt;</comment>
                            <comment id="12474518" author="rhillegas" created="Tue, 20 Feb 2007 18:14:32 +0000"  >&lt;p&gt;Committed derby-2196-03-tests-01.diff at subversion revision 509693.&lt;/p&gt;</comment>
                            <comment id="12474547" author="fuzzylogic" created="Tue, 20 Feb 2007 20:35:38 +0000"  >&lt;p&gt;I&apos;m agreeing with Bernt here. Also, what none of the discussions of client/server seem to have taken into account is the client security mechanism for encrypting username and password over the wire. Unless I&apos;m mistaken, the default is still currently clear text and derby.drda.securityMechanism remains undocumented. So unless that default is changed, calling the option --unsecure is a little misleading when the username and password go out over the wire as clear text. SSL will certainly help, but not if it is not enabled by default. I have a vague recollection of there being discussions to change the default security mechanism to the strong substitute, USRSSBPWD, once that method was introduced, but I&apos;m not sure where it ended up.&lt;/p&gt;</comment>
                            <comment id="12474607" author="bernt" created="Tue, 20 Feb 2007 23:27:09 +0000"  >&lt;p&gt;Rick Hillegas &lt;span class=&quot;error&quot;&gt;&amp;#91;20/Feb/07 06:54 AM&amp;#93;&lt;/span&gt;:&lt;br/&gt;
&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; I&apos;m not a big fan of introducing a lot of flags to control&lt;br/&gt;
&amp;gt; individual security features.&lt;/p&gt;

&lt;p&gt;I see the need for simplicity, because security is rather&lt;br/&gt;
complex. But, we can&apos;t have one unsecure mode with everything turned&lt;br/&gt;
off and another with everything turned on. Every security feature has&lt;br/&gt;
some penalty like performance degradation (like SSL or running with&lt;br/&gt;
security manager) or administrative complexity (getting the policy&lt;br/&gt;
file right or certificate distribution for SSL peer authentication)&lt;br/&gt;
and the user/application programmer will have to do a trade-off&lt;br/&gt;
between e.g. performance and security based on his/hers specific&lt;br/&gt;
needs.&lt;/p&gt;</comment>
                            <comment id="12474818" author="rhillegas" created="Wed, 21 Feb 2007 20:32:13 +0000"  >&lt;p&gt;Thanks, Andrew and Bernt, for the additional feedback. I would like to continue the discussion from Andrew&apos;s post:&lt;/p&gt;

&lt;p&gt;I think it would be reasonable for the network server to require username/password encryption on the wire. However, I&apos;m not sure of the implications of this for existing apps and I would appreciate more discussion by the community. I also think that it is a separate JIRA.&lt;/p&gt;

&lt;p&gt;But let&apos;s suppose that we decide that a secure-by-default server boots up requiring username/password encryption also. These appear to be the two models on the table:&lt;/p&gt;

&lt;p&gt;1) In this scenario, &quot;-unsecure&quot; is a generic disabling flag with more or less the following meaning: &quot;Let my legacy apps run unmodified.&quot; That is, the &quot;-unsecure&quot; flag overrides the booted server&apos;s impulse both to install a Java Security Manager and require wire encryption.&lt;/p&gt;

&lt;p&gt;2) In this scenario, there are separate disabling startup flags, &quot;-noSecurityManager&quot; and &quot;noWireEncryption&quot;.&lt;/p&gt;

&lt;p&gt;Which of these seems better?&lt;/p&gt;</comment>
                            <comment id="12474822" author="fuzzylogic" created="Wed, 21 Feb 2007 20:43:03 +0000"  >&lt;p&gt;So, after looking into the security mechanisms a little deeper, it turns out that the issue was in fact already discussed, and JIRA issues filed for the problems blocking the use of encryption as the default. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-926&quot; title=&quot;Protocol error when trying to connect with an unsupported security mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-926&quot;&gt;DERBY-926&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1517&quot; title=&quot;Derby Network Client to handle list of SECMEC(s) returned by existing/released DRDA Derby Network Servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1517&quot;&gt;DERBY-1517&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1755&quot; title=&quot;Add support to client to be able to retry a connection request with a server supported secmec.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1755&quot;&gt;DERBY-1755&lt;/a&gt; for the current issues with username/password encryption, as well as the extensive discussions in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-528&quot; title=&quot;Support for DRDA Strong User ID and Password Substitute Authentication (USRSSBPWD) scheme&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-528&quot;&gt;&lt;del&gt;DERBY-528&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-928&quot; title=&quot;Add ability to network server to accept connections with a certain security mechanism.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-928&quot;&gt;&lt;del&gt;DERBY-928&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Assuming the issues listed above can be fixed, I don&apos;t see a need for having a separate noWireEncryption flag, but simply always using an encrypted connection mechanism. Not sure what the expected client behavior would be for new client / old server if the client can&apos;t negotiate an encrypted protocol. Failing down to an unencrypted security mechanism would probably not be desirable from a secure-out-of-the-box standpoint.&lt;/p&gt;
</comment>
                            <comment id="12474838" author="bernt" created="Wed, 21 Feb 2007 21:40:56 +0000"  >&lt;p&gt;The last paragraph in Andrew&apos;s last comment is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2363&quot; title=&quot;Add initial handshake on connection setup to determine server&amp;#39;s required ssl support level and avoid client side attribute settings.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2363&quot;&gt;DERBY-2363&lt;/a&gt; (which I think is a good idea as long as it is the client thet is negtiable on this, and not the server). But I do also think that developers also need fingertip control in some environments. &lt;/p&gt;

&lt;p&gt;BTW: The flags for encryption on the wire (read SSL) as I plan to implement them is found in the funcspec in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2356&quot; title=&quot;Make SSL server authentication optional&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2356&quot;&gt;&lt;del&gt;DERBY-2356&lt;/del&gt;&lt;/a&gt; (there are some changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2108&quot; title=&quot;Implement SSL/TLS communication between client and server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2108&quot;&gt;&lt;del&gt;DERBY-2108&lt;/del&gt;&lt;/a&gt;). Seems that we need some alignment here, so please comment.... Note also, that if the server is going to run with SSL by default, the user will have to generate a public/private key pair before starting the server (and no, I don&apos;t think supplying the key pair with the derby distribution is a good idea since all an adversary needs to do to break the encryption then, is to get the private key from the Derby download site).&lt;/p&gt;</comment>
                            <comment id="12475047" author="rhillegas" created="Thu, 22 Feb 2007 15:32:37 +0000"  >&lt;p&gt;Attaching derby-2196-10-renameOption-01.diff, which renames the -unsecure option to be -noSecurityManager as Bernt and Andrew requested. Committed at subversion revision 510549. The unit tests ran cleanly for me. I think that the compatibility tests should run cleanly too although I haven&apos;t been able to run them because I don&apos;t have the 10.0.2.1 jars anymore.&lt;/p&gt;

&lt;p&gt;Also attaching rev 7 of the functional spec. This incorporates two changes:&lt;/p&gt;

&lt;p&gt;1) The change from -unsecure to -noSecurityManager&lt;/p&gt;

&lt;p&gt;2) The change to the Basic policy, replacing the two codebase properties with a single property which points to the directory of Derby jars&lt;/p&gt;</comment>
                            <comment id="12475359" author="rhillegas" created="Fri, 23 Feb 2007 15:31:06 +0000"  >&lt;p&gt;Attaching rev 8 of the functional spec. This improves the Upgrade section, folding in more exact descriptions of incompatibilities. Those descriptions evolved yesterday via a discussion on derby-dev and edits to the 10.3 wiki page.&lt;/p&gt;</comment>
                            <comment id="12475498" author="rhillegas" created="Fri, 23 Feb 2007 21:02:14 +0000"  >&lt;p&gt;What should be do about the network startup scripts? Now if you run startNetworkServer, the server fails to come up. It exits, complaining that it can&apos;t install a security manager until you specify how you want to authenticate users. Here are some bad options:&lt;/p&gt;

&lt;p&gt;1) Let the startup script continue to fail.&lt;/p&gt;

&lt;p&gt;2) Add the -noSecurityManager option to the java command. This seems like a bad example to set in a template script.&lt;/p&gt;

&lt;p&gt;3) Add some more system properties so that the server comes up with BUILTIN authentication and some default system administrator&apos;s username and password.&lt;/p&gt;

&lt;p&gt;I would appreciate the community&apos;s guidance here.&lt;/p&gt;</comment>
                            <comment id="12478148" author="rhillegas" created="Mon, 5 Mar 2007 20:33:52 +0000"  >&lt;p&gt;Attaching 2 release notes in the file secureServerReleaseNote.html. These notes describe how to recover from the upgrade incompatibilities introduced by the secure server work. &lt;/p&gt;</comment>
                            <comment id="12484187" author="rhillegas" created="Mon, 26 Mar 2007 19:57:22 +0100"  >&lt;p&gt;Attaching new rev of the functional spec for this feature. This rev makes the following changes:&lt;/p&gt;

&lt;p&gt;1) renames the policy-reloading system procedure&lt;/p&gt;

&lt;p&gt;2) separates the Template policy from the Basic policy&lt;/p&gt;</comment>
                            <comment id="12494333" author="rhillegas" created="Tue, 8 May 2007 17:29:20 +0100"  >&lt;p&gt;Attaching releaseNote.html conforming to the new format.&lt;/p&gt;</comment>
                            <comment id="12495670" author="rhillegas" created="Mon, 14 May 2007 17:35:43 +0100"  >&lt;p&gt;Attach a second version of the release note in order to verfiy that the Release Note Generator picks up the latest version.&lt;/p&gt;</comment>
                            <comment id="12499486" author="myrna" created="Mon, 28 May 2007 08:17:51 +0100"  >&lt;p&gt;Can this issue be resolved/closed?&lt;/p&gt;</comment>
                            <comment id="12500206" author="rhillegas" created="Wed, 30 May 2007 19:22:25 +0100"  >&lt;p&gt;Updating the release note to quote a new version of the network server error message which was checked in to address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2433&quot; title=&quot;Error message when booting server with no authentication is misleading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2433&quot;&gt;&lt;del&gt;DERBY-2433&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12502075" author="rhillegas" created="Wed, 6 Jun 2007 21:13:41 +0100"  >&lt;p&gt;Attach new version of the release note. This reflects the work on derby-2757. This version of the release note urges the user to enable user authentication and to customize the default policy file as described in the user guides.&lt;/p&gt;</comment>
                            <comment id="12509123" author="rhillegas" created="Fri, 29 Jun 2007 16:05:37 +0100"  >&lt;p&gt;Attaching new version of the functional spec. This reflects the following changes which were introduced during the last couple weeks:&lt;/p&gt;

&lt;p&gt;1) Authorization is no longer required when the server installs a security manager&lt;/p&gt;

&lt;p&gt;2) The default SocketPermission has been changed to not have a wildcarded port spec. In addition, the SocketPermission now references a new system property derby.security.host.&lt;/p&gt;

&lt;p&gt;Note that the spec may change further based on the resolution of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2874&quot; title=&quot;NetworkServer not accepting connections with default security manager on Ipv6 machines&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2874&quot;&gt;&lt;del&gt;DERBY-2874&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12509125" author="rhillegas" created="Fri, 29 Jun 2007 16:10:19 +0100"  >&lt;p&gt;Correct a mis-statement in the Rejected Alternatives section of the previous rev.&lt;/p&gt;</comment>
                            <comment id="12515439" author="dagw" created="Wed, 25 Jul 2007 23:05:12 +0100"  >&lt;p&gt;Updated func spec to reflect changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2963&quot; title=&quot;AccessControlException: Access denied java.net.SocketPermission &amp;lt;client ip&amp;gt; accept,resolve&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2963&quot;&gt;&lt;del&gt;DERBY-2963&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12515440" author="dagw" created="Wed, 25 Jul 2007 23:08:41 +0100"  >&lt;p&gt;fixed on more line in func spec.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12363265">DERBY-2362</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12363504">DERBY-2372</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12374281">DERBY-2963</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12383901">DERBY-3248</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12372458">DERBY-2874</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12370870">DERBY-2757</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12350359" name="derby-2196-01-print-01.diff" size="7799" author="rhillegas" created="Mon, 5 Feb 2007 17:07:37 +0000"/>
                            <attachment id="12350470" name="derby-2196-01-print-02.diff" size="7827" author="rhillegas" created="Tue, 6 Feb 2007 15:51:20 +0000"/>
                            <attachment id="12350503" name="derby-2196-01-print-03.diff" size="4134" author="rhillegas" created="Tue, 6 Feb 2007 22:52:45 +0000"/>
                            <attachment id="12350770" name="derby-2196-02-install-01.diff" size="25211" author="rhillegas" created="Fri, 9 Feb 2007 15:25:32 +0000"/>
                            <attachment id="12351381" name="derby-2196-03-tests-01.diff" size="23403" author="rhillegas" created="Fri, 16 Feb 2007 17:45:01 +0000"/>
                            <attachment id="12351817" name="derby-2196-10-renameOption-01.diff" size="11716" author="rhillegas" created="Thu, 22 Feb 2007 15:32:37 +0000"/>
                            <attachment id="12359109" name="releaseNote.html" size="4072" author="rhillegas" created="Wed, 6 Jun 2007 21:13:40 +0100"/>
                            <attachment id="12358566" name="releaseNote.html" size="4399" author="rhillegas" created="Wed, 30 May 2007 19:22:25 +0100"/>
                            <attachment id="12357293" name="releaseNote.html" size="4080" author="rhillegas" created="Mon, 14 May 2007 17:35:43 +0100"/>
                            <attachment id="12356929" name="releaseNote.html" size="4086" author="rhillegas" created="Tue, 8 May 2007 17:29:19 +0100"/>
                            <attachment id="12362564" name="secureServer.html" size="25111" author="dagw" created="Wed, 25 Jul 2007 23:08:41 +0100"/>
                            <attachment id="12362563" name="secureServer.html" size="24693" author="dagw" created="Wed, 25 Jul 2007 23:05:12 +0100"/>
                            <attachment id="12360819" name="secureServer.html" size="23334" author="rhillegas" created="Fri, 29 Jun 2007 16:10:18 +0100"/>
                            <attachment id="12360818" name="secureServer.html" size="23332" author="rhillegas" created="Fri, 29 Jun 2007 16:05:37 +0100"/>
                            <attachment id="12354245" name="secureServer.html" size="23300" author="rhillegas" created="Mon, 26 Mar 2007 19:57:22 +0100"/>
                            <attachment id="12351892" name="secureServer.html" size="23300" author="rhillegas" created="Fri, 23 Feb 2007 15:31:06 +0000"/>
                            <attachment id="12351818" name="secureServer.html" size="21959" author="rhillegas" created="Thu, 22 Feb 2007 15:32:37 +0000"/>
                            <attachment id="12350493" name="secureServer.html" size="21162" author="rhillegas" created="Tue, 6 Feb 2007 21:13:52 +0000"/>
                            <attachment id="12350357" name="secureServer.html" size="18324" author="rhillegas" created="Mon, 5 Feb 2007 17:01:00 +0000"/>
                            <attachment id="12350044" name="secureServer.html" size="17000" author="rhillegas" created="Wed, 31 Jan 2007 16:29:38 +0000"/>
                            <attachment id="12349634" name="secureServer.html" size="15607" author="rhillegas" created="Thu, 25 Jan 2007 21:56:46 +0000"/>
                            <attachment id="12349460" name="secureServer.html" size="14646" author="rhillegas" created="Tue, 23 Jan 2007 17:55:33 +0000"/>
                            <attachment id="12349029" name="secureServer.html" size="13392" author="rhillegas" created="Tue, 16 Jan 2007 19:53:59 +0000"/>
                            <attachment id="12352655" name="secureServerReleaseNote.html" size="5173" author="rhillegas" created="Mon, 5 Mar 2007 20:33:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10361"><![CDATA[Security]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Jan 2007 19:55:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30314</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0msn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>