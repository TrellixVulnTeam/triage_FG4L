<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4653/DERBY-4653.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4653] Avoid unnecessary round-trip for commit  in the client driver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4653</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The methods Connection.commit() and Connection.rollback() in the client driver cause a round-trip to the server even if the commit/rollback is unnecessary (i.e. there is nothing to commit or roll back).&lt;br/&gt;
Comments suggest (see below) that this can be optimized, such that the commands are flowed to the server only when required. It can be seen that this optimization has been used other places in the client driver. Never the less, it must be checked that this optimization doesn&apos;t have side-effects.&lt;/p&gt;

&lt;p&gt;This issue came up in connection with connection pooling, where a pool implementation always issued a rollback to make sure there was no active transaction on the connection handed out.&lt;/p&gt;

&lt;p&gt;From Connection.flowCommit:&lt;br/&gt;
        // Per JDBC specification (see javadoc for Connection.commit()):&lt;br/&gt;
        //   &quot;This method should be used only when auto-commit mode has been disabled.&quot;&lt;br/&gt;
        // However, some applications do this anyway, it is harmless, so&lt;br/&gt;
        // if they ask to commit, we could go ahead and flow a commit.&lt;br/&gt;
        // But note that rollback() is less harmless, rollback() shouldn&apos;t be used in auto-commit mode.&lt;br/&gt;
        // This behavior is subject to further review.&lt;/p&gt;

&lt;p&gt;        //   if (!this.inUnitOfWork)&lt;br/&gt;
        //     return;&lt;br/&gt;
        // We won&apos;t try to be &quot;too smart&quot;, if the user requests a commit, we&apos;ll flow a commit,&lt;br/&gt;
        // regardless of whether or not we&apos;re in a unit of work or in auto-commit mode.&lt;br/&gt;
        //&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464327">DERBY-4653</key>
            <summary>Avoid unnecessary round-trip for commit  in the client driver</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lilywei">Lily Wei</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 May 2010 09:13:29 +0100</created>
                <updated>Tue, 30 Nov 2010 16:11:18 +0000</updated>
                            <resolved>Thu, 24 Jun 2010 17:21:30 +0100</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12870236" author="lilywei" created="Sat, 22 May 2010 01:07:05 +0100"  >&lt;p&gt;Change the code in Connection.flowcommit() to save the round trip&lt;br/&gt;
 if (!this.inUnitOfWork_)&lt;br/&gt;
     return;&lt;/p&gt;

&lt;p&gt;Run suites.AllPackages and test_04_undefinedAndIllegal and test_04_undefinedAndIllegal fails.&lt;br/&gt;
1) test_04_undefinedAndIllegal(org.apache.derbyTesting.functionTests.tests.lang.Bo&lt;br/&gt;
oleanValuesTest)junit.framework.ComparisonFailure: getBoolean() on BLOB_COL expect&lt;br/&gt;
ed:&amp;lt;...2005&amp;gt; but was:&amp;lt;...4000&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCT&lt;br/&gt;
estCase.java:762)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.BooleanValuesTest.vet_&lt;br/&gt;
getBooleanException(BooleanValuesTest.java:430)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.BooleanValuesTest.vet_&lt;br/&gt;
getBooleanIsIllegal(BooleanValuesTest.java:410)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.BooleanValuesTest.test&lt;br/&gt;
_04_undefinedAndIllegal(BooleanValuesTest.java:332)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja&lt;br/&gt;
va:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso&lt;br/&gt;
rImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:10&lt;br/&gt;
9)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.sql.SQLException: Invalid cursor state - no current row.&lt;/p&gt;

&lt;p&gt;However, these two tests fail when I don&apos;t have Connect.flowcommit() change either. &lt;/p&gt;

&lt;p&gt;On BooleanTestsValue.java, &lt;br/&gt;
    public void test_04_undefinedAndIllegal() throws Exception&lt;br/&gt;
    {&lt;br/&gt;
        Connection conn = getConnection();&lt;/p&gt;

&lt;p&gt;        vet_getBooleanIsIllegal( conn, &quot;BLOB_COL&quot; );         &amp;lt;&amp;lt;&amp;lt;====This is the failure comes from&lt;/p&gt;

&lt;p&gt;I will keep looking to see why these two tests failed with or without Connection.flowcommit(() change.&lt;/p&gt;</comment>
                            <comment id="12870275" author="lilywei" created="Sat, 22 May 2010 06:22:58 +0100"  >&lt;p&gt;Other than the two failure tests, suites.AllPackages and derbyall passed with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-1.diff.&lt;/p&gt;</comment>
                            <comment id="12870721" author="lilywei" created="Mon, 24 May 2010 18:23:32 +0100"  >&lt;p&gt;I notice with java 1.6.0_13, test BooleanValuesTest does not run.&lt;br/&gt;
Is this expected behavior?&lt;/p&gt;

&lt;p&gt;$ java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.lang.B&lt;br/&gt;
ooleanValuesTest&lt;/p&gt;

&lt;p&gt;Time: 0.001&lt;/p&gt;

&lt;p&gt;OK (0 tests)&lt;/p&gt;

&lt;p&gt;$ java -version&lt;br/&gt;
java version &quot;1.6.0_13&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_13-b03)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 11.3-b02, mixed mode)&lt;/p&gt;</comment>
                            <comment id="12871073" author="knutanders" created="Tue, 25 May 2010 10:44:58 +0100"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;The problems with BooleanValuesTest were fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4674&quot; title=&quot;BooleanValuesTest fails if Xalan is not available&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4674&quot;&gt;&lt;del&gt;DERBY-4674&lt;/del&gt;&lt;/a&gt;. You probably ran with java 1.6.0_13 after my initial check-in that disabled the test if Xalan was not available. Rick later re-enabled the test and made it run cleanly on platforms that didn&apos;t have the required XML libraries, so I believe it should be running fine now if you do an svn update first.&lt;/p&gt;</comment>
                            <comment id="12871194" author="lilywei" created="Tue, 25 May 2010 16:19:33 +0100"  >&lt;p&gt;Hi Knut:&lt;br/&gt;
     Thank you so much for the prompt response. I did svn update and up to revision 948072 and upgrade my jdk to 1.6.0_20.&lt;br/&gt;
For some reasons, the test in BooleanValuesTest is not running.&lt;/p&gt;

&lt;p&gt;$ java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.lang.B&lt;br/&gt;
ooleanValuesTest&lt;br/&gt;
..........&lt;br/&gt;
Time: 8.245&lt;/p&gt;

&lt;p&gt;OK (10 tests)&lt;/p&gt;

&lt;p&gt;$ java -version&lt;br/&gt;
java version &quot;1.6.0_20&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 16.3-b01, mixed mode, sharing)&lt;/p&gt;

&lt;p&gt;$ svn update&lt;br/&gt;
At revision 948072.&lt;/p&gt;</comment>
                            <comment id="12871239" author="knutanders" created="Tue, 25 May 2010 17:44:29 +0100"  >&lt;p&gt;Hi Lily. From the output you posted above, it looks like the test is running successfully (it says OK - 10 tests). Or is there some other problem you are seeing?&lt;/p&gt;</comment>
                            <comment id="12871444" author="lilywei" created="Wed, 26 May 2010 01:02:57 +0100"  >&lt;p&gt;Hi Knut:&lt;br/&gt;
     You are right. It does say 10 tests. I was hoping to see the list of the 10 tests. However, it may not be necessary. Thanks.&lt;/p&gt;</comment>
                            <comment id="12871528" author="kristwaa" created="Wed, 26 May 2010 07:31:26 +0100"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;If you want to see the test names, you can run with the Swing (or awt) test runner &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, or specify the trace property &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; understood by the Derby test framework.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; junit.swingui.TestRunner -noloading&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; -Dderby.tests.trace=true&lt;/p&gt;</comment>
                            <comment id="12871774" author="lilywei" created="Wed, 26 May 2010 16:36:09 +0100"  >&lt;p&gt;Thank you so much, Kristian. That is such a good suggestion. I will give it a try.&lt;/p&gt;

&lt;p&gt;I add the patch for Connection.flowcommit() so it won&apos;t flow if we don&apos;t need to perform the unnecessary round trip.&lt;br/&gt;
Please see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-2.diff. I also try to add the test for testing saving commit. I add an extra commit on J2EEDataSourceTest to test the fix. However, if the behavior go back to the round-trip scenario, the test has no way knowing other than functionality is working. Does anyone has a good suggest to test the DRDA protocol for commit making round trip or not?&lt;/p&gt;

&lt;p&gt;About making Connection.flowrollback not doing the round trip, It is not as straight forward as detecting isUnitofWork_  only. I think the check has to happen along with isXAConnection_ and where we are in the rollback state. I will keep working on that today. However, I do think that it is safe to commit &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-2.diff.  I will suggest to open a new JIRA for rollback only depend on how to test Connection.flowcommit DRDA related protocol.&lt;/p&gt;</comment>
                            <comment id="12871781" author="lilywei" created="Wed, 26 May 2010 16:51:22 +0100"  >&lt;p&gt;The patch pass  suites.Allpackages and derbyall test suites.&lt;/p&gt;</comment>
                            <comment id="12871847" author="kristwaa" created="Wed, 26 May 2010 18:51:56 +0100"  >&lt;p&gt;Lily wrote:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;However, if the behavior go back to the round-trip scenario, the test has no way knowing other than functionality is working. Does anyone has a good suggest to test the DRDA protocol for commit making round trip or not?&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A few suggestions (none of them really optimal):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add different trace points on the client for the cases where a commit is flowed or not, then parse the trace file&lt;br/&gt;
   (this change could actually help debugging in production environments)&lt;/li&gt;
	&lt;li&gt;enable statement logging on the server and parse the log looking for the number of commits (assuming an &quot;unnecessary&quot; commit produces a log message)&lt;/li&gt;
	&lt;li&gt;some kind of timed test doing as many commits as possible (hard to set the thresholds, probably not a viable solution?)&lt;/li&gt;
	&lt;li&gt;add special debug code, or exploit poor state encapsulation in the client driver&lt;br/&gt;
  (for instance, can the DRDA &quot;sequence number&quot; be used, or more likely, maybe the client side &quot;transaction id&quot;?)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Another related task would be to inspect the code to make sure the variable &apos;inUnitOfWork_&apos; is in sync with reality.&lt;/p&gt;</comment>
                            <comment id="12871866" author="dagw" created="Wed, 26 May 2010 19:23:17 +0100"  >&lt;p&gt;Maybe you can trace the protocol and check the trace file contents, cf.&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.6/adminguide/cadminappsclienttracing.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.6/adminguide/cadminappsclienttracing.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12872266" author="lilywei" created="Thu, 27 May 2010 17:07:01 +0100"  >&lt;p&gt;Thanks Dag and Kristian. &lt;br/&gt;
I did use ClientDataSource and ClientDataSource.setTraceDirectory to see that the change for save round trip for the commit. I manually reading the trace file &quot;_sds_0&quot; to see the second commit() does not have that many trace information like SEND BUFFER: RDBCMN ... ENDDUOWRM ... Thanks Kathey for helping me understand those complicated message. There is SaveRoundClientDS.java and trace file &quot;_sds_0&quot; in the attachment to show the test code and trace information. To parse the trace file in the test suite, is there something available already?  Can someone elaborate on this idea?&lt;/p&gt;</comment>
                            <comment id="12873907" author="kristwaa" created="Tue, 1 Jun 2010 08:19:58 +0100"  >&lt;p&gt;Would it be good enough to simply iterate over the lines in the trace file, counting occurrences of RDBCMM and RDBRLLBCK?&lt;/p&gt;

&lt;p&gt;I modified your repro, adding some more commits and rollbacks. When doing a manual grep on the trace file, I got 50 matches without your patch, and 17 with.&lt;br/&gt;
To parse the file you should use SupportFilesSetup and PrivilegedFileOpsForTests.&lt;/p&gt;</comment>
                            <comment id="12874083" author="kmarsden" created="Tue, 1 Jun 2010 16:55:08 +0100"  >&lt;p&gt;I think that sounds like a good idea to check the file for the RDBCMM string and to make the name more predictable,  you might want to use traceFile instead of traceDirectory.  Also I think it makes sense to check in the commit part of this patch while working through the rollback issues in another patch, but it would be good to do so with the regression test for the commit portion.&lt;/p&gt;
</comment>
                            <comment id="12874144" author="kristwaa" created="Tue, 1 Jun 2010 19:39:55 +0100"  >&lt;p&gt;Removed unused method Connection.setInUnitOfWork(boolean) with revision 950185.&lt;/p&gt;</comment>
                            <comment id="12874828" author="lilywei" created="Wed, 2 Jun 2010 23:18:04 +0100"  >&lt;p&gt;Thanks to Kristian and Kathey.&lt;br/&gt;
I fix the avoid traffic for flowrollback(). We need to just flow rollback when we are in XAConnection.&lt;br/&gt;
The patch passed suites.allpackages and derbyall.&lt;/p&gt;

&lt;p&gt;To test the fix:&lt;br/&gt;
1. Will it be okay if we just reflect the method in ..am.Connection.getTransactionID() and make sure the next transaction is after first commit()()/rollback is a predictable number. After the test is run, there will always be a trace file hanging around for manual inspection. It could be cheating a little bit. However, it is a little easier than test open the trace file and search for the number of occurrences of RDBCMM or something like that.  &lt;/p&gt;</comment>
                            <comment id="12875631" author="lilywei" created="Fri, 4 Jun 2010 16:27:29 +0100"  >&lt;p&gt;The fix is the same as before, we flowcommit() when it is safe and we flowrollback() when we are in XAConnection. I run it against Suites.All and Derbyall and they all passed.&lt;/p&gt;

&lt;p&gt;With Kathey&apos;s help, I add new test to test just Connection.flowcommit() and Connection.flowrollback().  The different signature testConnectionFlowCommitRollback() is added to J2EEDataSourceTest.&lt;/p&gt;

&lt;p&gt;In this test, when we flow commit, we check the transaction increase by 1.&lt;br/&gt;
When we are testing rollback, we rollback the transaction and execute an insert statement, the transaction increase by 2. &lt;/p&gt;

&lt;p&gt;With the little repro, manual check the trace file to see the DRDA protocol trace save the round trip for flowcommit() and flowrollback() is also done.&lt;/p&gt;</comment>
                            <comment id="12875737" author="kristwaa" created="Fri, 4 Jun 2010 21:37:06 +0100"  >&lt;p&gt;Sorry for the short post (it&apos;s late here now), but I think there are some issues with the patch.&lt;br/&gt;
Feel free to have another look at it right away, I&apos;ll have a look on Monday in any case.&lt;/p&gt;

&lt;p&gt;Also, I&apos;ll be happy to help you write the code parsing the trace file (it&apos;s good to keep the existing test) , i.e. something like:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;obtain first connection, run test sequence without redundant commits&lt;/li&gt;
	&lt;li&gt;parse trace file to obtain baseline for number of commits&lt;/li&gt;
	&lt;li&gt;obtain second connection, run test sequence with many of extra commits&lt;/li&gt;
	&lt;li&gt;parse trace file to obtain number of commits&lt;/li&gt;
	&lt;li&gt;compare the commit counts&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this case it might be good to factor out the test sequence code into a method with a boolean telling wheter or not to do the extra commits.&lt;br/&gt;
It&apos;s fine if you don&apos;t implement this test, I may have a go at it if you don&apos;t &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12875790" author="lilywei" created="Sat, 5 Jun 2010 00:07:09 +0100"  >&lt;p&gt;Thank you so much, Kristian. It is late over there. We are so international. Not a problem about the short post. I was not totally clear in turn of the issues with the patch.&lt;/p&gt;

&lt;p&gt;It will be great to have your help on code parsing and run test sequence with all the necessary steps for commits. This will be more tests on top of the existing test. And, it will be very complete tests.&lt;/p&gt;</comment>
                            <comment id="12876239" author="kristwaa" created="Mon, 7 Jun 2010 14:48:39 +0100"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;Here are my comments on patch &apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-4_withcommitrollbacktest.diff&apos;:&lt;br/&gt;
&amp;#8212; J2EEDataSourceTest&lt;br/&gt;
 1) The test should be added to the client suite, since it is only relevant for the client driver.&lt;br/&gt;
 2) The method comment could well be changed to a JavaDoc comment (/* -&amp;gt; /**)&lt;br/&gt;
 3) Can the logic for skipping the test (i.e. wheter Connection.getTransactionID exists)&lt;br/&gt;
    be moved into the suite method?)&lt;br/&gt;
    If you create a static method to check if the method exists, if can be used both in the&lt;br/&gt;
    suite method and in J2EEDataSourceTest.getConnectionID. There is one complication, and that is&lt;br/&gt;
    that you cannot (or should not) obtain a connection in the suite method. Is passing the ClientDriver&lt;br/&gt;
    class good enough?&lt;br/&gt;
    If this gets too messy, just let it be. My concern with short-circuiting the tests themselves, is that&lt;br/&gt;
    the will be listed as run and passed, even though they haven&apos;t really been run.&lt;br/&gt;
    Does anyone have any options on this? Have we solved this problem earlier?&lt;br/&gt;
 4) Instead of checking for a specific number of rows (X -14 &amp;gt;=0) ) in the system table&lt;br/&gt;
    (which we don&apos;t really know), is it good enough to assert&lt;br/&gt;
    rs.next() == true, rs.getInt() &amp;gt;= 0, rs.next() == false ?&lt;/p&gt;

&lt;p&gt;&amp;#8212; Connection&lt;br/&gt;
 5) Wrong comment? If we are in a connection, we do want to commit, right?&lt;br/&gt;
 6) Can you explain the reasoning behind the changes in flowRollback?&lt;br/&gt;
    I don&apos;t understand them, as I&apos;m not that familiar with XA.&lt;/p&gt;

&lt;p&gt;&amp;#8212; LogicalConnection&lt;br/&gt;
 7) I don&apos;t understand the comment about embedded, nor why we have to add this method.&lt;br/&gt;
    If it is to enable testing with logical connections (i.e. with XADataSource or CPDataSource),&lt;br/&gt;
    maybe it is better to parse the trace file? In any case it would be nice to test a&lt;br/&gt;
    &quot;normal connection&quot;, since there is some special code for when the connection is originating&lt;br/&gt;
    from CP-|XADataSource.&lt;/p&gt;

&lt;p&gt;Possible improvements:&lt;br/&gt;
 a) Add test parsing the trace file.&lt;br/&gt;
 b) Test with XA as well (since there is special code for it).&lt;/p&gt;</comment>
                            <comment id="12876902" author="kmarsden" created="Wed, 9 Jun 2010 01:33:05 +0100"  >&lt;p&gt;wrt to some of Kristian&apos;s comments and a few things I talked to Lily about today.&lt;/p&gt;

&lt;p&gt; I  too think it would be good to test just for client and with regular, pooled, and xa datasources.&lt;/p&gt;

&lt;p&gt;I think if the test runs just for client we should always count on the getTransactionID() method being there and can take out the skipping logic all together.  I think the system table query can come out all together.  I tend to think the getTransactionID() check is good enough, but the protocol trace parsing would be ok too.&lt;/p&gt;

&lt;p&gt;I agree the comment about embedded should come out of am.LogicalConnection.&lt;/p&gt;

&lt;p&gt;For the flowRollback() change I think the condition to return if not inUnitOfWork should not be in the if block. I think the StatementPoolingTest failures you were seeing with it set that way may be because the state of  inUnitOfWork may be wrong somehow where hold cursors and pooled connections are involved, probably an existing issue that needs to be tracked down before committing this change.  Lily and I tried to reproduce it outside the test with the code   but we were  not quite able to get in the same state as StatementPoolingTest.&lt;/p&gt;



</comment>
                            <comment id="12876962" author="lilywei" created="Wed, 9 Jun 2010 06:41:09 +0100"  >&lt;p&gt;Thanks Kathey for showing me around and making this patch to this stage and explain all the issues to me.&lt;/p&gt;

&lt;p&gt;With this patch, it has the intention fix for Connection.flowcommit() and Connection.flowrollback(). However, when running suites.All, some tests failed. i.e. jdbcapi.StatementPollingTest&lt;/p&gt;

&lt;p&gt;The change of the patch which answer the issue Kristian point out. Thanks Kristian for the looking at the patch and beyond. &lt;/p&gt;

&lt;p&gt;J2EEDataSourceTest&lt;br/&gt;
1.	The test gets added to getClientSuite(). The test is only running on regular client, pooled, and xa datasources.&lt;br/&gt;
2.	Change to javadoc as Kristian point out.&lt;br/&gt;
3.	Please see comment in BaseJdbcTestCase.java&lt;br/&gt;
4.    No need to use the system table as part of test anymore.&lt;br/&gt;
BaseJdbcTestCase.java&lt;br/&gt;
5.	getClientTransactonID(Connection conn) is in BaseJdbcTestCase.java so it is closer in suites than J2EEDataSourceTest and the comment is as following&lt;br/&gt;
 &quot;If we are not in a transaction, we don&apos;t want to flow commit. We just return&quot;&lt;br/&gt;
6.	For flowRollback: Like Kathey said, the original change is only for XAConnection which does not make sense. With the new change, server flow rollback if inUnitOfWork_ indicates we are not in a transaction, we return. However, with this change, StatementPoolingTest failed          &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.doTestResultSetCloseForHoldability(StatementPoolingTest.java:591)&lt;br/&gt;
at      org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.resTestHoldCursorsOverCommit(StatementPoolingTest.java:522)&lt;/p&gt;

&lt;p&gt;I am in the middle of evaluating StatementPoolingTest failed and what change the value of inUnitOfWork_ when the test trying to close the connection and whether it has to with CachingLogicalConnection40. Will the test close the connection that is not the connection it performs rollback? What could be change the value of inUnitOfWork_ within StatementPoolingTest?&lt;/p&gt;</comment>
                            <comment id="12877314" author="lilywei" created="Thu, 10 Jun 2010 05:22:39 +0100"  >&lt;p&gt;I was looking at why StatementPoolingTest.test.doTestResultSetCloseorHoldability failure issue.&lt;br/&gt;
When the first time it gets to this signature, conn.rollback() will flow. At that time CachingLoginalConnection40.physicalConnection_.inUnitofWork_ is false which is expected.&lt;br/&gt;
However, when it gets to conn.close() which call StatementCacheInteractor.closeOpenLogicalStatements line 224 logicalStatement.close() the variable inUnitofWork_ become true. I am not familiar with closeOpenLogicalStatements synchronized method. Does this only get change in some sort of multi-thread situation?&lt;/p&gt;

&lt;p&gt;When StatementPoolingTest get to doTestResultSetCloseorHoldability() the second time, the variable of physicalConnection_.inUnitofWork_ remains false when close are completely done.&lt;/p&gt;

&lt;p&gt;What need to change so we can rely on inUnitofWork_ to be the flag to decide whether we can flow rollback or not? &lt;/p&gt;
</comment>
                            <comment id="12877716" author="lilywei" created="Fri, 11 Jun 2010 06:21:51 +0100"  >&lt;p&gt;From the debugger, we actually call Connection.completeTransactionStart(). This is the stack trace from conn.close-&amp;gt;StatementCacheInterator.closeOpenLogicStatements ... Connection.completeTransactionStart()&lt;br/&gt;
===&amp;gt;&lt;br/&gt;
NetConnection40(Connection).completeTransactionStart() line: 2082	&lt;br/&gt;
NetConnection40(Connection).readTransactionStart() line: 2078	&lt;br/&gt;
NetConnection40(NetConnection).readTransactionStart() line: 1581	&lt;br/&gt;
NetAgent(Agent).beginReadChain(Statement) line: 240	&lt;br/&gt;
NetAgent.beginReadChain(Statement) line: 488	&lt;br/&gt;
NetAgent(Agent).flow(Statement) line: 185	&lt;br/&gt;
PreparedStatement40(Statement).flowClose() line: 1682	&lt;br/&gt;
PreparedStatement40(Statement).resetForReuse() line: 334	&lt;br/&gt;
PreparedStatement40(PreparedStatement).resetForReuse() line: 127	&lt;br/&gt;
LogicalPreparedStatement40(LogicalStatementEntity).close() line: 175	&lt;br/&gt;
LogicalPreparedStatement40.close() line: 41	&lt;br/&gt;
StatementCacheInteractor.closeOpenLogicalStatements() line: 224	&lt;/p&gt;
</comment>
                            <comment id="12879253" author="lilywei" created="Wed, 16 Jun 2010 06:42:17 +0100"  >&lt;p&gt;Thanks to Kathey. I got to know more in turn of why Connection.close() after Connection.flowrollback() will cause error &quot;Cannot close a connection while a transaction is still active&quot; for StatementPoolingTest. As the ReproTransInProgressAttempt.java shows, if we have commit between we are in ResultSet, we should not flowrollback. If flowrollback remains unchanged, it will detect the state of the statement and resultSet and keep all the flag as inUnitOfWork etc in the right place and Connection.close() will not run into error as &quot;Cannot close a connection while a transaction is still active&quot;. &lt;br/&gt;
Due to this reason, I am leading toward to not fix flowrollback() to save round trip and just keep the change for flowcommit() to improve performance.&lt;/p&gt;</comment>
                            <comment id="12880071" author="lilywei" created="Fri, 18 Jun 2010 06:09:03 +0100"  >&lt;p&gt;This patch is without Connection.flowrollback performance improvement fix.&lt;/p&gt;

&lt;p&gt;With the test, it is using the same approach as transaction id for Connection.flowcommit save round-trip fix. Move the getClientTransactionID to more test suite level - BaseJDBCTestCase.java&lt;/p&gt;

&lt;p&gt;It is ready to commit. Running Suites.All passed. I am running derbyall test suite now.&lt;/p&gt;</comment>
                            <comment id="12880277" author="lilywei" created="Fri, 18 Jun 2010 19:32:00 +0100"  >&lt;p&gt;Derbyall runs without an error either. The &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-7_withflowcommittest.diff is ready for review or commit.&lt;/p&gt;</comment>
                            <comment id="12880371" author="kmarsden" created="Sat, 19 Jun 2010 00:45:48 +0100"  >&lt;p&gt;Lily recommends putting in the change first for commit and has filed a second issue for rollback, That fix is  perhaps not worth the change, because all open result sets would need to be checked before optimizing out the rollback flow.&lt;br/&gt;
She filed another issue for rollback &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4687&quot; title=&quot;Avoid unnecessary round-trip for rollback in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4687&quot;&gt;DERBY-4687&lt;/a&gt;&lt;br/&gt;
, so I am changing the summary for this issue to cover just commit.  I looked at the patch  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-7_withflowcommittest.diff and I think it looks very good except a couple of stale comments.  I will attach the revised patch and will commit Monday unless there are more comments.&lt;/p&gt;

</comment>
                            <comment id="12880373" author="kmarsden" created="Sat, 19 Jun 2010 00:49:31 +0100"  >&lt;p&gt;Here is the slightly revised patch. There was just a comment in the test that it ran with embedded, but it has been changed to run only with client.&lt;/p&gt;</comment>
                            <comment id="12880374" author="kmarsden" created="Sat, 19 Jun 2010 00:51:19 +0100"  >&lt;p&gt;Linking to separate issue for rollback. This one just covers commit now&lt;/p&gt;</comment>
                            <comment id="12881138" author="kristwaa" created="Tue, 22 Jun 2010 10:31:27 +0100"  >&lt;p&gt;I attached an updated version of &apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt;-7_withflowcommittest_comment_update_diff.txt&apos;, with the following changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;simplified the reflection code somewhat&lt;/li&gt;
	&lt;li&gt;JavaDoc edits&lt;/li&gt;
	&lt;li&gt;replaced tabs with spaces and some formatting changes (long lines)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The patch looks okay, I have the following comments:&lt;br/&gt;
 a) I&apos;m not thrilled by adding the LogicalConnection.getTransactionID method just for testing purposes (when we have another mechanism we could use), but I won&apos;t object.&lt;br/&gt;
 b) The argument &apos;expectednumtransaction&apos; isn&apos;t used.&lt;br/&gt;
 c) The comment in the actual test is slightly inaccurate. Since the test case is run with autocommit on, the commit will be flowed at rs.close() such that none of the calls to commit() will cause a flow to the server.&lt;/p&gt;

&lt;p&gt;I&apos;m +0.9 for commit &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;p&gt;I&apos;ll need to read up on the problems regarding rollback. I suppose most connection pools will issue a rollback rather than a commit to be sure the connection state is &quot;clean&quot;, which is why it would be good to find an optimization for rollback as well.&lt;/p&gt;</comment>
                            <comment id="12881408" author="kmarsden" created="Tue, 22 Jun 2010 23:22:50 +0100"  >&lt;p&gt;I committed Kristian&apos;s version of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4653&quot; title=&quot;Avoid unnecessary round-trip for commit  in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4653&quot;&gt;&lt;del&gt;DERBY-4653&lt;/del&gt;&lt;/a&gt; and will leave to Lily to submit a follow up patch for the issues pointed out in his last comment.   I think the trace file parsing test might be pretty fragile, so am not such a big fan. &lt;/p&gt;

&lt;p&gt;I agree that rollback is important. I will post a thought to issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4687&quot; title=&quot;Avoid unnecessary round-trip for rollback in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4687&quot;&gt;DERBY-4687&lt;/a&gt;,&lt;/p&gt;</comment>
                            <comment id="12881434" author="lilywei" created="Tue, 22 Jun 2010 23:53:39 +0100"  >&lt;p&gt;This patch take out the unused variable expectednumtransaction and set the test case to run with autocommit off so we will flow on first commit and does not flow the second commit. &lt;/p&gt;</comment>
                            <comment id="12881648" author="kristwaa" created="Wed, 23 Jun 2010 12:34:56 +0100"  >&lt;p&gt;Thanks Kathey and Lily.&lt;/p&gt;

&lt;p&gt;I committed the follow-up patch with revision 957164.&lt;br/&gt;
Since Connection.setAutoCommit(boolean) may theoretically issue a commit, I moved it up before the call to fetch the transaction id.&lt;/p&gt;</comment>
                            <comment id="12881649" author="kristwaa" created="Wed, 23 Jun 2010 12:39:55 +0100"  >&lt;p&gt;Attached patch 8a, which implements an alternative test parsing the client connection trace file.&lt;br/&gt;
It&apos;s a bit more extensive than the existing test, but may not add any extra value.&lt;br/&gt;
Uploaded for reference, as it may come in useful for debugging purposes.&lt;/p&gt;</comment>
                            <comment id="12881674" author="kristwaa" created="Wed, 23 Jun 2010 13:58:59 +0100"  >&lt;p&gt;Sorry, I missed the fact that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4709&quot; title=&quot;Create test that parse client trace file to detect round-trips for Derby-4653&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4709&quot;&gt;&lt;del&gt;DERBY-4709&lt;/del&gt;&lt;/a&gt; was logged for the alternative test.&lt;br/&gt;
Deleted the attachment and will upload it to the correct issue.&lt;/p&gt;</comment>
                            <comment id="12882206" author="lilywei" created="Thu, 24 Jun 2010 17:21:30 +0100"  >&lt;p&gt;The code to save performance on Connection.flowcommit has been added. A short version test has also been added. Please also see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4709&quot; title=&quot;Create test that parse client trace file to detect round-trips for Derby-4653&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4709&quot;&gt;&lt;del&gt;DERBY-4709&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4687&quot; title=&quot;Avoid unnecessary round-trip for rollback in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4687&quot;&gt;DERBY-4687&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12965186" author="kristwaa" created="Tue, 30 Nov 2010 10:18:47 +0000"  >&lt;p&gt;Lily, can this issue be closed?&lt;/p&gt;</comment>
                            <comment id="12965269" author="lilywei" created="Tue, 30 Nov 2010 16:10:56 +0000"  >&lt;p&gt;Thanks Kristian. I&apos;ll close this issue now.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12467635">DERBY-4709</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12465969">DERBY-4687</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12445231" name="DERBY-4653-1.diff" size="896" author="lilywei" created="Sat, 22 May 2010 06:22:58 +0100"/>
                            <attachment id="12445555" name="DERBY-4653-2.diff" size="1704" author="lilywei" created="Wed, 26 May 2010 16:36:09 +0100"/>
                            <attachment id="12446183" name="DERBY-4653-3_withrollback.diff" size="2602" author="lilywei" created="Wed, 2 Jun 2010 23:18:04 +0100"/>
                            <attachment id="12446349" name="DERBY-4653-4_withcommitrollbacktest.diff" size="7389" author="lilywei" created="Fri, 4 Jun 2010 16:27:29 +0100"/>
                            <attachment id="12446659" name="DERBY-4653-5_withflowcommitrollback.diff" size="8406" author="lilywei" created="Wed, 9 Jun 2010 06:41:09 +0100"/>
                            <attachment id="12446743" name="DERBY-4653-6_withflowcommitrollback.diff" size="9651" author="lilywei" created="Thu, 10 Jun 2010 05:22:39 +0100"/>
                            <attachment id="12447432" name="DERBY-4653-7_withflowcommittest.diff" size="6290" author="lilywei" created="Fri, 18 Jun 2010 06:09:03 +0100"/>
                            <attachment id="12447681" name="DERBY-4653-7_withflowcommittest_comment_update_diff.txt" size="6545" author="kristwaa" created="Tue, 22 Jun 2010 10:31:27 +0100"/>
                            <attachment id="12447510" name="DERBY-4653-7_withflowcommittest_comment_update_diff.txt" size="6339" author="kmarsden" created="Sat, 19 Jun 2010 00:49:31 +0100"/>
                            <attachment id="12447760" name="DERBY-4653-7_withflowcommittest_comment_update_diff_followup.txt" size="1782" author="lilywei" created="Tue, 22 Jun 2010 23:53:39 +0100"/>
                            <attachment id="12447204" name="ReproTransInProgressAttempt.java" size="2821" author="lilywei" created="Wed, 16 Jun 2010 06:42:16 +0100"/>
                            <attachment id="12446184" name="SaveRoundClientDS.java" size="3944" author="lilywei" created="Wed, 2 Jun 2010 23:18:04 +0100"/>
                            <attachment id="12445667" name="SaveRoundClientDS.java" size="3664" author="lilywei" created="Thu, 27 May 2010 17:07:01 +0100"/>
                            <attachment id="12445668" name="_sds_0" size="97444" author="lilywei" created="Thu, 27 May 2010 17:07:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 22 May 2010 00:07:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31315</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0obz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37760</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>