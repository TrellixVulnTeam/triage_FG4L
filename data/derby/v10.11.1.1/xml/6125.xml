<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6125/DERBY-6125.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6125] Code clean up in client driver.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6125</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Clean up unused code, lacking finals, too wide visibility etc.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12638453">DERBY-6125</key>
            <summary>Code clean up in client driver.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Mar 2013 07:50:33 +0000</created>
                <updated>Tue, 2 Jul 2013 03:58:39 +0100</updated>
                            <resolved>Mon, 13 May 2013 01:37:16 +0100</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13610026" author="dagw" created="Fri, 22 Mar 2013 07:57:58 +0000"  >&lt;p&gt;Uploading patch 01-a, which adds some finals to public static variables.&lt;/p&gt;</comment>
                            <comment id="13610072" author="knutanders" created="Fri, 22 Mar 2013 09:45:49 +0000"  >&lt;p&gt;All of the changes in the 01-a patch look good to me. +1.&lt;/p&gt;

&lt;p&gt;In the Configuration class, traceLevel_&lt;em&gt;, traceFile&lt;/em&gt;&lt;em&gt;, traceDirectory&lt;/em&gt;&lt;em&gt;, traceFileAppend&lt;/em&gt;_ (and also traceFileSuffixIndex__ which was not touched by the patch) are essentially unused. There&apos;s some code that&apos;s executed if they are non-null, but that won&apos;t ever happen. Maybe we could just remove that dead code while we&apos;re at it.&lt;/p&gt;</comment>
                            <comment id="13613402" author="dagw" created="Tue, 26 Mar 2013 02:12:27 +0000"  >&lt;p&gt;I agree Knut, so I removed that code altogether, patch derby-6125-01-b. Regressions passed with that patch too.&lt;/p&gt;</comment>
                            <comment id="13613430" author="dagw" created="Tue, 26 Mar 2013 02:59:59 +0000"  >&lt;p&gt;Committed derby-6125-01-b as svn 1460949.&lt;/p&gt;</comment>
                            <comment id="13613563" author="dagw" created="Tue, 26 Mar 2013 06:59:31 +0000"  >&lt;p&gt;Attaching derby-6125-02-a, which removed the always false public static Configuration#traceSuspended__ and its uses. It also removes a couple of unused methods.&lt;/p&gt;</comment>
                            <comment id="13613623" author="dagw" created="Tue, 26 Mar 2013 08:52:40 +0000"  >&lt;p&gt;Regressions passed.&lt;/p&gt;</comment>
                            <comment id="13617184" author="dagw" created="Fri, 29 Mar 2013 08:40:38 +0000"  >&lt;p&gt;Committed derby-6125-02-a as svn 1462394.&lt;/p&gt;

&lt;p&gt;Uploading derby-6125-03-a. This patch&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;makes a mutable public array (dncPackageConsistencyToken) private.&lt;/li&gt;
	&lt;li&gt;removes a couple of assignment with values that are never used (e.g. myPVH)&lt;/li&gt;
	&lt;li&gt;makes some members final and public&lt;/li&gt;
	&lt;li&gt;reworks an invariant to use SanityManager assert&lt;/li&gt;
	&lt;li&gt;replaces a StringBuffer with StringBuilder&lt;/li&gt;
	&lt;li&gt;makes a lazy initialization thread safe (codePointNameTable__)&lt;/li&gt;
	&lt;li&gt;removes a couple of noop bit operations&lt;/li&gt;
	&lt;li&gt;removes an unused method (computeDncLogWriter with existing connection overload)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Running regressions &lt;span class=&quot;error&quot;&gt;&amp;#91;Update: passed&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13618020" author="dagw" created="Sat, 30 Mar 2013 08:39:39 +0000"  >&lt;p&gt;Uploading patch derby-6125-04-a which builds on the uncommitted derby-6125-03-a. Patch details:&lt;/p&gt;

&lt;p&gt;Patch details:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused var Configuration.traceFileSuffixIndex_&lt;em&gt;, #enableConnectivityToTargetServer&lt;/em&gt;_, #jvmSupportsMicrosClock&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made #dncCompatibleJREVersions private, added &quot;1.8&quot; as a legal JRE, and added accessor getDncCompatibleJREVersions&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made NetConnection#msgutil final&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused var targetExtnam_&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made #indoubtTransactions_ private and changed to genericized HashMap, I believe this is multi thread safe, being used within a XA connection. Added accessors #getIndoubtTransaction and #getIndoubtTransactionIds&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made some methods final (e.g. #completeConnect, #flowConnect, #flowSimpleConnect, #isConnectionNull)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused extnam&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reduced some variable&apos;s scopes to silence FindBugs.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made #targetPublicKey_ private, changed accessor #getTargetPublicKey to copy the the mutable array&apos;s contents&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed instances of useless code of this shape:&lt;br/&gt;
      :&lt;br/&gt;
      if (!isXAConnection_)&lt;br/&gt;
           return;&lt;br/&gt;
      if (isOpen()) 
{ // &amp;lt;--- has no side effects
           return; // still open, return
      }
&lt;p&gt;  } &amp;lt;---- we return here anyway...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused vars NetConnectionReply#srvdgnReceived, #srvdgn&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;replaced StringBuffer with StringBuilder in NetConnectionReply#doMgrlvlrmSemantics&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused var NetXAResource#numXid&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused var ClientBaseDataSourceRoot#globaltraceFileSuffixIndex&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13618582" author="dagw" created="Mon, 1 Apr 2013 04:42:56 +0100"  >&lt;p&gt;derby-6125-04-a ran regressions OK, modulo &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3159&quot; title=&quot;SYSCS_SET_USER_ACCESS fails if the user name contains characters not allowed in regular identifiers. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3159&quot;&gt;&lt;del&gt;DERBY-3159&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13618595" author="dagw" created="Mon, 1 Apr 2013 05:00:56 +0100"  >&lt;p&gt;Committed derby-6125-03-a as svn 1463079 and derby-6125-04-a as svn 1463080.&lt;/p&gt;</comment>
                            <comment id="13619527" author="dagw" created="Tue, 2 Apr 2013 06:19:51 +0100"  >&lt;p&gt;Uploading a new patch, derby-6125-05-a, regression ran OK.&lt;/p&gt;

&lt;p&gt;Patch derby-6125-05-a details:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reworked ClientXid#equals to find favor with FindBugs: now tests for null and wrong type.&lt;br/&gt;
  The old version would get classcastexception if a wrong type object was compared.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;copies bytes in setPKGNAMCBytes to avoid having a package private variable&lt;br/&gt;
  wriable from outside the package (its an array).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary a priori allocation to Sqlca#sqlErrd_.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Statement#materialStatement_ private; new accessors&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary default NetConnection finalizer&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary test for BIG_ENDIAN in NetSqlca#getRowCount: the&lt;br/&gt;
  protocol always uses big endian (SignedBinary.BIG_ENDIAN = 1 is final).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary type argument to NetSqlca#getRowCount now that endian test is no longer done&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed potentially harmful finalizer in NetXAConnection: it calls a&lt;br/&gt;
  finalizer for another class (NetConnection). FindBugs advice on this&lt;br/&gt;
  (quote): &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  &quot;If a connected set of objects beings finalizable, then the VM will&lt;br/&gt;
  invoke the finalize method on all the finalizable object, possibly&lt;br/&gt;
  at the same time in different threads. Thus, it is a particularly&lt;br/&gt;
  bad idea, in the finalize method for a class X, invoke finalize on&lt;br/&gt;
  objects referenced by X, because they may already be getting&lt;br/&gt;
  finalized in a separate thread. &quot;&lt;/p&gt;

&lt;p&gt;  It also neglected to call super.finalize()...&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Typdef#FdocaSimpleDataArray private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made SqlException#SQLExceptionFactory package private (was protected)&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13619565" author="knutanders" created="Tue, 2 Apr 2013 07:49:49 +0100"  >&lt;p&gt;Thanks for cleaning up this code, Dag.&lt;/p&gt;

&lt;p&gt;After the 04-a patch, these three methods in NetConnection do nothing except calling the method with the same name in the super class:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;close()&lt;/li&gt;
	&lt;li&gt;closeX()&lt;/li&gt;
	&lt;li&gt;closeResources()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Should we just remove them now and let NetConnection inherit them from its super class? (Slightly related: If we remove these methods from NetConnection, we could also make Connection.closeX() private and unsynchronized, as it will only be called from Connection.close().)&lt;/p&gt;

&lt;p&gt;The patch also touches NetConnection&apos;s closeForReuse() method, which doesn&apos;t have any callers as far as I can see. Remove that one too?&lt;/p&gt;</comment>
                            <comment id="13619579" author="knutanders" created="Tue, 2 Apr 2013 08:04:13 +0100"  >&lt;p&gt;The 03-a and 04-a patches have added getter methods for some static arrays in order to return a copy rather than a direct reference to the array. I think these methods could be simplified to just returning array.clone() instead of manually creating a new array and copying the contents into it.&lt;/p&gt;

&lt;p&gt;NetConnection.completeConnect() was made final in 04-a, but that method doesn&apos;t actually do anything except calling super.completeConnect(). Remove the override and make the super method final instead?&lt;/p&gt;</comment>
                            <comment id="13619614" author="knutanders" created="Tue, 2 Apr 2013 09:12:08 +0100"  >&lt;p&gt;Patch 05-a:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Section.setPKGNAMCBytes(): new + arraycopy -&amp;gt; clone&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It wasn&apos;t entirely obvious to me that removing the allocation in Sqlca.getSqlErrd() was safe. Do we know that setSqlErrd() has always been called in the code that calls getSqlErrd() without checking that the return value is non-null? (Sqlca.getMessage() and Statement.completeExecute())&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Maybe it&apos;s better not to expose the sqlErrd_ array at all. That is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;make getSqlErrd() private&lt;/li&gt;
	&lt;li&gt;move most of ExceptionFormatter.printTrace(Sqlca,PrintWriter,String) into a new method (getTraceString()?) in the Sqlca class&lt;/li&gt;
	&lt;li&gt;replace the call to getSqlErrd() in Statement.completeExecute() with a call to a new method (getReturnValue()?) that returns the first element of sqlErrd_ rather than the whole array&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That change may allow more of Sqlca&apos;s methods, like getSqlWarn(), to become private as well.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The only remaining caller of Typedef.getByteOrder() is NetCursor.parseSQLDCGRP(). The return value is only used to set Sqlca.sqlErrmcCcsid_, which is never read. Remove that field and the getByteOrder() method?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13623378" author="dagw" created="Fri, 5 Apr 2013 06:40:28 +0100"  >&lt;p&gt;Thanks, Knut. I incorporated your further simplification suggestions for patch 03 and 04 in the attached patch derby-6125-03-04-followup. Re-ran regressions ok. Committed as svn 1464835.&lt;/p&gt;</comment>
                            <comment id="13623424" author="dagw" created="Fri, 5 Apr 2013 08:12:40 +0100"  >&lt;p&gt;Thanks for looking at patch 05-a, Knut. I have made Sqlca#getSqlErrd as you suggested, plus:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made ClientXid#getData clone the result&lt;/li&gt;
	&lt;li&gt;removed unused methods EncryptionManager#setInitVector and #setSecKey&lt;/li&gt;
	&lt;li&gt;introduced public String Sqlca#formatSqlErrd as replacement&lt;/li&gt;
	&lt;li&gt;changed #getSqlWarn to return String since all its uses need a String anyway.&lt;/li&gt;
	&lt;li&gt;changed arraycopy in Section#getPKGNAMCBytes to to use clone instead&lt;/li&gt;
	&lt;li&gt;make Section#getPKGNAMCBytes to return a clone&lt;/li&gt;
	&lt;li&gt;simplified implementation of Sqlca#getSqlWarn&lt;/li&gt;
	&lt;li&gt;removed argument sqlErrpBytes from Sqlca#setContainsSqlcax (only called once; with null).&lt;/li&gt;
	&lt;li&gt;introduced Sqlca#getReturnValue in Statement#completeExecute instead of allowing access to sqlca.getSqlErrd()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Rerunning regressions.&lt;/p&gt;</comment>
                            <comment id="13623527" author="knutanders" created="Fri, 5 Apr 2013 11:51:43 +0100"  >&lt;p&gt;Thanks, Dag.&lt;/p&gt;

&lt;p&gt;With the patch, it looks like the Sqlca.sqlWarn_ field is never set, so getSqlWarn() recalculates the value on every call. If that&apos;s intentional, the field should probably be removed now. If not, the caching of the return value should be reintroduced (and the type of the field changed from char[] to String, I suppose).&lt;/p&gt;</comment>
                            <comment id="13623535" author="knutanders" created="Fri, 5 Apr 2013 12:05:24 +0100"  >&lt;p&gt;And a tiny nit: the nested if statement in getSqlWarn() could be flattened by turning the top level if/else into if/else if/else, which saves some horizontal space.&lt;/p&gt;</comment>
                            <comment id="13624341" author="dagw" created="Sat, 6 Apr 2013 06:03:23 +0100"  >&lt;p&gt;Thanks, Knut. Uploading derby-6125-05-d, which in addition to your suggestion about removing getByteOrder fixes a bug I saw during regressions: I needed to guard a clone operation against a nullpointer. Also restricted some more visibilites. Re-running regressions.&lt;/p&gt;
</comment>
                            <comment id="13624352" author="dagw" created="Sat, 6 Apr 2013 06:53:22 +0100"  >&lt;p&gt;Regressions ran fine. Committed patch 05-d with svn 1465193. Commit log:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;ClientXid&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reworked ClientXid#equals to find favor with FindBugs: now tests for null and wrong type.&lt;br/&gt;
  The old version would get classcastexception if a wrong type object was compared.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made ClientXid#getData clone the result - it is a byte array&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Section&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;clone bytes in Section#setPKGNAMCBytes to avoid having a package private variable&lt;br/&gt;
  wriable from outside the package (it&apos;s an array).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;make Section#getPKGNAMCBytes return a clone&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Sqlca&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary a priori allocation to Sqlca#sqlErrd_.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Sqlca#sqlWarn_ private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;changed #getSqlWarn to return String since all its uses need a String anyway.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Sqlca#getSqlErrd private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;simplified implementation of Sqlca#getSqlWarn&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Sqlca#rowsetRowCount_ private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Sqlca#containsSqlcax_ private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Sqlca#sqlErrmcMessages_ private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed argument sqlErrpBytes from Sqlca#setContainsSqlcax (only called once; with null).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed argument sqlErrpBytes from Sqlca#resetRowsetSqlca  (only called with null).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;introduced Sqlca#getReturnValue in Statement#completeExecute instead&lt;br/&gt;
  of allowing access to sqlca.getSqlErrd()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused Sqlca#sqlErrmcCcsid_&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;introduced public String Sqlca#formatSqlErrd as replacement for&lt;br/&gt;
  direct access to Sqlca#sqlErrd_.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;NetSqlca&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made NetSqlca#setSqlwarnBytes package private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made NetSqlca#setSqlerrmcBytes package private and removed its&lt;br/&gt;
  argument sqlErrmcCcsid&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made NetSqlca#setSqlerrd package private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary test for BIG_ENDIAN in NetSqlca#getRowCount: the&lt;br/&gt;
  protocol always uses big endian (SignedBinary.BIG_ENDIAN = 1 is final).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary type argument to NetSqlca#getRowCount now that endian test is no longer done&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Statement&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Statement#materialStatement_ private; new accessors&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;NetConnection&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unnecessary default NetConnection finalizer&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;three methods in NetConnection do nothing except calling the method with the same name in the super class:&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;close()&lt;/li&gt;
	&lt;li&gt;closeX()&lt;/li&gt;
	&lt;li&gt;closeResources()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Remove them and let NetConnection inherit them from its super class.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Since we remove these methods from NetConnection, we also make&lt;br/&gt;
  Connection.closeX() private and unsynchronized, as it will only be&lt;br/&gt;
  called from Connection.close().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NetConnection&apos;s closeForReuse() method doesn&apos;t have any callers;&lt;br/&gt;
  remove that one too.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NetConnection.completeConnect() doesn&apos;t actually do anything except&lt;br/&gt;
  calling super.completeConnect(). Remove the override and make the&lt;br/&gt;
  super method final instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;NetXAConnection&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed potentially harmful finalizer in NetXAConnection: it calls a&lt;br/&gt;
  finalizer for another class (NetConnection). FindBugs advice on this&lt;br/&gt;
  (quote):&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  &quot;If a connected set of objects beings finalizable, then the VM will&lt;br/&gt;
  invoke the finalize method on all the finalizable object, possibly&lt;br/&gt;
  at the same time in different threads. Thus, it is a particularly&lt;br/&gt;
  bad idea, in the finalize method for a class X, invoke finalize on&lt;br/&gt;
  objects referenced by X, because they may already be getting&lt;br/&gt;
  finalized in a separate thread. &quot;&lt;/p&gt;

&lt;p&gt;  It also neglected to call super.finalize()...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Typdef&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Typdef#FdocaSimpleDataArray private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused TypDef#getByteOrder&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made Typdef#environmentTables_ private&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;SqlException&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;made SqlException#SQLExceptionFactory package private (was protected)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;EncryptionManager&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused methods EncryptionManager#setInitVector and #setSecKey&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;NetXACallInfo&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed unused NetXACallInfo#getCorrelatorToken&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13626394" author="dagw" created="Tue, 9 Apr 2013 09:34:51 +0100"  >&lt;p&gt;Uploading derby-6125-visibility-01-a, which limits visibility of many classes, methods and fields to what&apos;s necessary. Regressions ran on an earlier version of this patch, re-running, but please review.&lt;/p&gt;</comment>
                            <comment id="13626420" author="knutanders" created="Tue, 9 Apr 2013 10:27:53 +0100"  >&lt;p&gt;The changes look good to me. Some possible further improvements:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ClientPooledConnection.getNetXAConnection() has only one caller, and it consists of just a single call to NetXAConnection&apos;s constructor. Maybe we could get rid of the method and call the constructor directly?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;With the removal of the unused constructor in ClobWriter, the clob_ field is effectively final, and we could declare it as such.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(I guess at some point we&apos;ll want to replace the multitude of traceEntry() methods with a single one that takes varargs. But maybe not in this JIRA issue.)&lt;/p&gt;</comment>
                            <comment id="13626437" author="dagw" created="Tue, 9 Apr 2013 11:03:34 +0100"  >&lt;p&gt;Thanks, Knut. Yes, more goodness is facilitated. Uploading version b (derby-6125-visibility-01-b) which incorporates your suggestions.&lt;/p&gt;</comment>
                            <comment id="13626445" author="dagw" created="Tue, 9 Apr 2013 11:12:42 +0100"  >&lt;p&gt;Regressions ran ok on version a, so committed b (minor changes relative to a only) at svn 1465956.&lt;/p&gt;</comment>
                            <comment id="13627739" author="dagw" created="Wed, 10 Apr 2013 13:39:03 +0100"  >&lt;p&gt;Uploading derby-6125-imports-01-a. This &quot;horizontal&quot; patch makes the import policy consistent for the client driver:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;iff a class from java.sql.* can be shadowed by a Derby class (i.e. Clob, ResultSet); we do not import such java.sql.* classes but refer to them using the full package and class name. The Derby classes are always imported and referenced in the short form. This makes the code much more readable IMHO.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;d like to change the names of the Derby classes that can shadow java.sql.* classes (so we can import such classes from java.sql.* too), but I need to investigate whether that can have any compatibility issues first. Does anyone know?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Otherwise, the patch contains a few Javadoc improvements and typo fixes.&lt;/p&gt;

&lt;p&gt;Regressions ran OK.&lt;/p&gt;
</comment>
                            <comment id="13628996" author="knutanders" created="Thu, 11 Apr 2013 16:06:49 +0100"  >&lt;p&gt;The changes in the import patch look good to me. +1. Also, I&apos;m not aware of any compatibility impact of renaming the classes. Applications shouldn&apos;t access classes in the am package directly, and if they do, it&apos;s not a supported/stable interface.&lt;/p&gt;

&lt;p&gt;I see that the patch modified some empty @throws clauses. Should we just remove those while we&apos;re at it? I don&apos;t think they provide much value, since they don&apos;t say anything that we cannot see from the throws clause just a few lines below.&lt;/p&gt;

&lt;p&gt;The patch qualifies some references to &quot;this&quot; with the class name. I don&apos;t have a problem with it, I&apos;m just curious to know how you decided which of them to qualify. (I&apos;ve usually qualified them in inner classes to make it clear whether it refers to the instance of the parent class or the inner class. But it didn&apos;t look like inner classes were involved here.)&lt;/p&gt;

&lt;p&gt;I see that you also managed to find and remove some old cruft. Great! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13631257" author="dagw" created="Sun, 14 Apr 2013 04:37:19 +0100"  >&lt;p&gt;Thanks, Knut. As for the qualified &quot;this&quot;, my IDE warns me about &quot;leaking &apos;this&apos; in constructor&quot;. In the cases I changed, the usage is safe in that the state is initialized and I found that adding the qualification silenced the IDE (NetBeans) warning.&lt;/p&gt;</comment>
                            <comment id="13631265" author="dagw" created="Sun, 14 Apr 2013 05:21:54 +0100"  >&lt;p&gt;Committed derby-6125-imports-01-a plus I removed the vacuous @throws as Knut suggested.&lt;/p&gt;

&lt;p&gt;Commit message:&lt;/p&gt;

&lt;p&gt;derby-6125-imports-01-a. This &quot;horizontal&quot; patch makes the import&lt;br/&gt;
    policy consistent for the client driver:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;iff a class from java.sql.* can be shadowed by a Derby class&lt;br/&gt;
      (i.e. Clob, ResultSet); we do not import such java.sql.* classes but&lt;br/&gt;
      refer to them using the full package and class name. The Derby&lt;br/&gt;
      classes are always imported and referenced in the short form. This&lt;br/&gt;
      makes the code much more readable IMHO.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;d like to change the names of the Derby classes that can shadow&lt;br/&gt;
      java.sql.* classes (so we can import such classes from java.sql.*&lt;br/&gt;
      too), but I need to investigate whether that can have any&lt;br/&gt;
      compatibility issues first. Does anyone know?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes unused public static variable ClientXid#MAXGTRIDSIZE&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes a few unused initial values to silence NetBeans warnings&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes unused Cursor#getUnicodeStream&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Otherwise, the patch contains a few Javadoc improvements and typo&lt;br/&gt;
    fixes.&lt;/p&gt;</comment>
                            <comment id="13633710" author="dagw" created="Wed, 17 Apr 2013 04:13:27 +0100"  >&lt;p&gt;Attaching a (big) patch derby-6125-rename-c which renames the overloaded JDBC classes in the client driver thus:&lt;/p&gt;

&lt;p&gt;    am/&amp;lt;JDBCClassName&amp;gt;.java      -&amp;gt;  am/Client&amp;lt;JDBCClassName&amp;gt;.java&lt;/p&gt;

&lt;p&gt;This allows import statements to be used for all JDBC and Derby classes. The rest of the patch implements that instead of full pathnames in usages. After this patch, the only overload that needs explicit package path is &quot;java.util.Date&quot; which would otherwise collide with java.sql.Date. In one instance, I let a full path remain in order to avoid a compiler warning: the deprecated use of StringBufferInputStream in ClientClob.java.&lt;/p&gt;

&lt;p&gt;Regressions passed. &lt;/p&gt;

&lt;p&gt;Caveat: due to the size of the patch there is some concern as always when it comes to ease of back-porting if it is committed.&lt;br/&gt;
Still, I think it represents a good readability clean.up, but I&apos;d like your opinions as always.&lt;/p&gt;</comment>
                            <comment id="13633711" author="dagw" created="Wed, 17 Apr 2013 04:15:56 +0100"  >&lt;p&gt;To apply the patch, first copy the renamed files to the new locations, then apply patch, then remove originals, then move new back to original, then svn rename original to new.&lt;br/&gt;
Sigh.. wish subversion had an easier way...&lt;/p&gt;</comment>
                            <comment id="13633971" author="knutanders" created="Wed, 17 Apr 2013 13:13:17 +0100"  >&lt;p&gt;I think it&apos;s a good idea to avoid the naming conflicts to prevent confusion. There&apos;s potential for new confusion, or at least a small inconsistency, because of the renaming, though: ClientConnection lives in one package (org.apache.derby.client.am) and is an abstract base class, whereas the similarly named ClientPooledConnection and ClientXAConnection live in a different package (org.apache.derby.client) and are top-level classes to be returned to the user. Probably not a big problem, but I thought I&apos;d raise it so that we at least do it knowingly.&lt;/p&gt;</comment>
                            <comment id="13634867" author="dagw" created="Thu, 18 Apr 2013 06:54:33 +0100"  >&lt;p&gt;Yes, I agree the different placements of the top level classes returned to the user is a bit troubling, but it doesn&apos;t really get any worse by this patch; returned classes to the user app were previously also a mix of ClientXXX and NetXXX and that will still be the case. If/when we merge am and net this inconsistency would go away. Another approach is to rename all abstract &quot;am&quot; level classes to &quot;Base&amp;lt;JDBCClassName&quot; and all &quot;net&quot; classes to &quot;Client&amp;lt;JDBCClassName&amp;gt;&quot;, but retain the division? Then all returned object would be called &quot;Client&amp;lt;JDBCClassName&amp;gt;.&lt;/p&gt;</comment>
                            <comment id="13634964" author="knutanders" created="Thu, 18 Apr 2013 08:57:16 +0100"  >&lt;p&gt;The current situation is in fact even more confusing. For Connection and ResultSet, the classes in the net package extend the classes in the am package, and getConnection() returns a NetConnection and executeQuery() returns a NetResultSet. For Statement, PreparedStatement and CallableStatement, on the other hand, the instances returned to the users are instances of the classes in the am package. These also have corresponding classes in net, but instead of being their base classes, they are wrappers around them. So it seems it&apos;s tricky to get this consistent simply by renaming classes. Probably some larger reorganization would be needed, for example, as you suggested, removing the separation between am and net for the JDBC classes, but I guess that&apos;s outside the scope of this issue. I do however think the patch is an improvement, so it gets a +1 from me.&lt;/p&gt;</comment>
                            <comment id="13640067" author="dagw" created="Wed, 24 Apr 2013 05:39:19 +0100"  >&lt;p&gt;Committed derby-6125-rename-01-c as svn 1471245.&lt;/p&gt;</comment>
                            <comment id="13642611" author="dagw" created="Fri, 26 Apr 2013 06:16:42 +0100"  >&lt;p&gt;Committed svn 1476040 with Javadoc fixes to issues caused by the previous commit.&lt;/p&gt;</comment>
                            <comment id="13644318" author="dagw" created="Mon, 29 Apr 2013 08:12:43 +0100"  >&lt;p&gt;Uploading a new patch, derby-6125-visibility-02-d which further limits scopes program entities and also removed dead code, including maintenance of fields that are never read, i.e. used for anything except setting them.&lt;/p&gt;

&lt;p&gt;When I use the term &quot;unused&quot; below it may mean that something is&lt;br/&gt;
ultimately unused, e.g a method used to set an unused field, or due to&lt;br/&gt;
other code removal transitively.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Agent&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused method batchUpdateExceptionGenerated&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClientCallableStatement&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed two unused overloads: resetCallableStatement&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClientClob&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused field encoding_&lt;/p&gt;

&lt;p&gt;  Removed unused methods createClobWrapper, convertFromAsciiToCharacterStream&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClientPreparedStatement&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused methods resetPreparedStatement,&lt;br/&gt;
  initPreparedStatement, writeDescribeOutput, readDescribeOutput,&lt;br/&gt;
  writePrepareDescribeInputOutput, checkScaleForINOUTDecimal&lt;/p&gt;

&lt;p&gt;  Inlined creation of method not implemented exception, removed&lt;br/&gt;
  jdbc3FeatureNotSupported.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClientResultSet&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Commented out unused fields updatability_unknown_&lt;em&gt;, updatability_readOnly&lt;/em&gt;_&lt;/p&gt;

&lt;p&gt;  Removed unused fields NEXT_ROWSET, PREVIOUS_ROWSET, ABSOLUTE_ROWSET,&lt;br/&gt;
  FIRST_ROWSET, LAST_ROWSET, RELATIVE_ROWSET, REFRESH_ROWSET, nestingLevel_&lt;/p&gt;

&lt;p&gt;  Removed unused method rowCountIsKnown. flowFetch moved to NetResultSet.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClientStatement&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused field returnValueFromProcedure_&lt;/p&gt;

&lt;p&gt;  Commented out unused fields isCommitSql_&lt;em&gt;, isRollbackSql&lt;/em&gt;&lt;em&gt;, isPositionedUpdateDeleteSql&lt;/em&gt;_&lt;/p&gt;

&lt;p&gt;  Removed unused method clientmarkResultSetsClosed, getProcedureName,&lt;br/&gt;
  upperCaseProcedureName, jdbc3FeatureNotSupported&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ClobLocatorOutputStream&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused field connection&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ColumnMetaData&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields singleMixedByteOrDouble_,&lt;br/&gt;
  protocolTypeToOverrideLidMapping_, mddOverrideArray_&lt;/p&gt;

&lt;p&gt;  Removed unused method isParameterModeGuessedAsOutput, columnIsNotInUnicode&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Configuration&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields jreLevelMajor, jreLevelMinor, jreLevel,&lt;br/&gt;
  dncPackageVersion, enableNetConnectionPooling,&lt;br/&gt;
  cursorAttribute_InsensitiveRowset,&lt;br/&gt;
  cursorAttribute_SensitiveDynamicRowset,&lt;br/&gt;
  cursorAttribute_InsensitiveRowset&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;CrossConverters&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused method getBooleanFromByte, getBigDecimalFromBoolean,&lt;br/&gt;
  getStringFromBoolean, getDateFromTime(Time),&lt;br/&gt;
  getDateFromTimestamp(Timestamp), getTimeFromTimestamp(Timestamp),&lt;br/&gt;
  getTimestampFromTime(Time), getTimestampFromDate(Date)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;DisconnectException&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructor DisconnectException(Agent, ClientMessageId, SqlCode)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;LogWriter&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused traceExit overloads.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;SectionManager&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields collection_, HOLD, NO_HOLD, &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;SqlCode&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields invalidCommitOrRollbackUnderXA,&lt;br/&gt;
  invalidSetAutoCommitUnderXA, undefinedError&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;SqlException&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructor SqlException(LogWriter, ClientMessageId, SqlCode)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;SqlWarning&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructors&lt;br/&gt;
  Removed unused method getNextWarning&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Sqlca&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused methods getReturnValue, includesSqlCode&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Utils&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused methods getStringFromStrings, padOrTruncate,&lt;br/&gt;
  checkForNegativePositiveSqlcard (2X), getUpdateCountFromSqlcard,&lt;br/&gt;
  accumulateSQLWarning, getSQLTypeName (we might want to keep this for&lt;br/&gt;
  debugging possibly?)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Version&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused methods getDriverName, getBuildNumber, isAlpha, isBeta&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;XaException&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructors&lt;br/&gt;
  Removed unused method copyAsUnchainedXAException&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;CodePoint&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed many unused code points (fields). One could argue that it&apos;s&lt;br/&gt;
  nice to keep these if we need them later, opinions welcomed.  For me&lt;br/&gt;
  it seems clearer to only keep those we need, we know what the source&lt;br/&gt;
  for the constants is anyway, i.e. the DRDA specification.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;DssConstants&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed many unused constants, cf previous item considerations.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;FdocaConstants&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed many unused constants, cf previous item considerations.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;FdocaSimpleDataArray&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields fdocaFieldType_, representation_, mode_, fieldLength_&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetAgent&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields packageRequest_, &lt;br/&gt;
  Removed unused method convertToStringTcpIpAddress&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetConfiguration&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields INITIAL_CAPACITY, NON_CHAR_DDM_DATA_PAD_BYTE,&lt;br/&gt;
  CURSOR_NOT_OPEN, CURSOR_OPEN, CURSOR_CLOSE_ONLY, DDMHDR_LENGTH,&lt;br/&gt;
  PRDDTA_MAX_ACCT_SUFFIX_LEN, MGRLVL_3, MGRLVL_4, MGRLVL_6,&lt;br/&gt;
  SECMEC_DCESEC, SECMEC_EUSRIDNWPWD, SYSTEM_ASC&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetConnection&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused field pendingEndXACallinfoOffset_, targetSrvclsnm_, seqNo_&lt;/p&gt;

&lt;p&gt;  Removed unused methods getSpecialRegisters, addSpecialRegisters,&lt;br/&gt;
  getSequenceNumber, getIndoubtTransaction, doResetNow,&lt;br/&gt;
  serverSupportsBooleanValues&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetConnectionRequest&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused method writeDummyExchangeServerAttributes&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;NetCursor&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields targetSqlamForTypdef_, numMddOverrides_&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetResultSet&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused method queryDataWasReturnedOnOpen&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetResultSet&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Method flowFetch moved from ClientResultSet to be able to make it&lt;br/&gt;
  package private.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetStatement&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructor&lt;br/&gt;
  Removed unused method netReset&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetXACallInfo&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields xaInProgress_, xaWasSuspended,&lt;br/&gt;
  currConnection_, freeEntry_, convReleased_, xaResource_, uowid_,&lt;br/&gt;
  readOnlyTransaction_&lt;/p&gt;

&lt;p&gt;  Removed unused methods setUOWID, getUOWID,&lt;br/&gt;
  setReadOnlyTransactionFlag, getReadOnlyTransactionFlag&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetXAConnection&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused methods writeLocalXAStart_, readLocalXAStart, getUOWID, getPort&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetXAResource&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields TMTIMEOUT, ACTIVE_ONLY, XA_NULL_XID,&lt;br/&gt;
  RECOVER_XID_ARRAY_LENGTH, XAFUNC_NONE, rmId_, numXACallInfo_,&lt;br/&gt;
  connectionCount_, activeXATransCount_, rmIdx_, rmIdy_, port_,&lt;br/&gt;
  ipaddr_, specialRegisters_&lt;/p&gt;

&lt;p&gt;  Removed unused methods throwXAException, getSpecialRegisters,&lt;br/&gt;
  addSpecialRegisters&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Reply&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused fields dssIsChainedWithDiffID_&lt;/p&gt;

&lt;p&gt;  Removed unused methods readIntArray, readLong, readBoolean,&lt;br/&gt;
  readString(int), readLDBytes, peekLength&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Request&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused method createXACommand, writeScalarBytes,&lt;br/&gt;
  writeScalarHeader, writeScalarPaddedBytes, writeDDMString&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Typdef&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Removed unused constructor(NetAgent, int, String)&lt;br/&gt;
  Removed unused field environment_&lt;br/&gt;
  Removed unused methods  clearCcsidSbc, clearCcsidDbc, clearCcsidMbc&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;NetIndoubtTransaction removed altogether&lt;/li&gt;
&lt;/ul&gt;




</comment>
                            <comment id="13647203" author="dagw" created="Thu, 2 May 2013 03:20:51 +0100"  >&lt;p&gt;Uploading a new version of this patch; derby-6125-visibility-02-e. The &quot;02-d&quot; patch had a bug in that it made the class and constructor for ClientJDBCObjectFactoryImpl40 package private, so the ClientDriver could not instantiate it (it was hidden by my first test run using Java 18, which doesn&apos;t use this class). Re-running regressions on all JRE platforms &amp;gt;= 1.5&lt;/p&gt;
</comment>
                            <comment id="13647438" author="dagw" created="Thu, 2 May 2013 11:58:34 +0100"  >&lt;p&gt;Uploading another patch &quot;visibility-03-a&quot; to limit sharing of state between classes not in the same package by cloning arrays not considered performance sensitive. It is independent of patch &quot;visibility-02-*&quot;.&lt;/p&gt;
</comment>
                            <comment id="13647527" author="dagw" created="Thu, 2 May 2013 14:44:10 +0100"  >&lt;p&gt;All regressions passed for both patches.&lt;/p&gt;
</comment>
                            <comment id="13648156" author="dagw" created="Fri, 3 May 2013 04:43:50 +0100"  >&lt;p&gt;Committed derby-6125-visibility-02-e as svn 1478635.&lt;/p&gt;</comment>
                            <comment id="13648178" author="dagw" created="Fri, 3 May 2013 05:10:17 +0100"  >&lt;p&gt;Uploaded a simplified version of of &quot;visibility-03&quot; as derby-6125-visibility-03-b, committed as svn 1478641.&lt;/p&gt;</comment>
                            <comment id="13651585" author="dagw" created="Wed, 8 May 2013 04:20:58 +0100"  >&lt;p&gt;Uploading a patch derby-6125-misc-01-b, which further removes dead code opened up by previous removals, further limits visibility, and corrects one error introduced in a previous patch for this issue. Regressions ran without error.&lt;/p&gt;

&lt;p&gt;This is hopefully the last set of changes for this issue.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;deleted:    java/client/org/apache/derby/client/am/SqlState.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed this class as there were no longer any references to it.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/ClientPooledConnection.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused field netPhysicalConnection_.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/ClientXAConnection.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method createControlConnection; import fix.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientBlob.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method getBinaryString.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClobLocatorWriter.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Corrected error introduced in a previous patch.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientConnection.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientDatabaseMetaData.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientPreparedStatement.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/DateTime.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ExceptionFormatter.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/SqlWarning.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Sqlca.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/StatementCacheInteractor.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetConnectionReply.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetConnectionRequest.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetStatementReply.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Visibility restrictions.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientJDBCObjectFactory.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/ClientJDBCObjectFactoryImpl.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method newClientPooledConnection(ClientBaseDataSourceRoot, LogWriter, String, String, int)&lt;br/&gt;
Removed unused method newNetConnection(LogWriter, String, Properties)&lt;br/&gt;
Removed unused method newNetConnection(LogWriter, ClientBaseDataSourceRoot, String, String)&lt;br/&gt;
Removed unused method newNetConnection(LogWriter, String, int, ClientBaseDataSourceRoot, boolean)&lt;br/&gt;
Removed unused method newStatement(Agent, ClientConnection)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientResultSet.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused fields updatability_delete_&lt;em&gt;, updatability_update&lt;/em&gt;_. Visibility restrictions.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ClientStatement.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Configuration.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Lob.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Visibility restrictions. Import fix.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/CloseFilterInputStream.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/ColumnMetaData.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Utils.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetCursor.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetResultSet40.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetSqlca.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetXAResource.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetXAConnection.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/Typdef.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/jdbc/ClientConnectionPoolDataSource.java&lt;/li&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/jdbc/ClientXADataSource.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Cursor.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fix, visibility restrictions, removed unused constants&lt;br/&gt;
SBCS_CLOB, MBCS_CLOB, DBCS_CLOB, VARIABLE_BYTES.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/Diagnosable.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes. Removed interface method printTrace (+ implementations).&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/LogWriter.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method traceEntry(Object, String, int, Object, Object, Object)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/LogicalConnection.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method preparePositionedUpdateStatement&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/MaterialPreparedStatement.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused abstract methods methods writeDescribeOutput_ and readDescribeOutput_ (+ implementations)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/SqlException.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes.  Visibility restrictions. Removed unused method printTrace(PrintWriter, String)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/am/XaException.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes. Removed unused method printTrace(PrintWriter, String)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/ClientJDBCObjectFactoryImpl40.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused method newClientPooledConnection(ClientBaseDataSourceRoot, LogWriter, String, String, int)&lt;br/&gt;
Removed unused method newNetConnection(LogWriter, String, Properties)&lt;br/&gt;
Removed unused method newNetConnection(LogWriter, ClientBaseDataSourceRoot, String, String) &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/DssConstants.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused constant GDSFMT_RQSDSS_NOREPLY&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/FdocaConstants.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused constants FDOCA_TYPE_FIXEDBYTES,&lt;br/&gt;
FDOCA_TYPE_NFIXEDBYTES, FDOCA_TYPE_NVARBYTES, FDOCA_TYPE_NTBYTES,&lt;br/&gt;
FDOCA_TYPE_NNTBYTES, FDOCA_TYPE_NPSCLBYTE, FDOCA_TYPE_FIXEDCHAR,&lt;br/&gt;
FDOCA_TYPE_NFIXEDCHAR, FDOCA_TYPE_NVARCHAR , FDOCA_TYPE_NTCHAR,&lt;br/&gt;
FDOCA_TYPE_NNTCHAR, FDOCA_TYPE_NPSCLCHAR, FDOCA_TYPE_INTEGER_BE,&lt;br/&gt;
FDOCA_TYPE_NINTEGER_BE, FDOCA_TYPE_NDECIMAL, FDOCA_TYPE_FLOAT_IEEE,&lt;br/&gt;
FDOCA_TYPE_NFLOAT_IEEE, FDOCA_TYPE_NLOBBYTES, FDOCA_TYPE_NLOBCHAR.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetAgent.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Visibility restriction. Removed unused method getPort.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetConfiguration.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Visibility restriction. Removed unused constant SECMEC_USRIDNWPWD.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetConnection.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fix. Removed unused fields cnntkn_, readOnlyTransaction. Removed unused methods getCnnToken.&lt;br/&gt;
Removed useless method setReadOnlyTransactionFlag.&lt;br/&gt;
Removed unused constructor NetConnection40(NetLogWriter, String, int, ClientBaseDataSourceRoot, boolean)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetConnection40.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Visibility restrictions. Removed unused constructor NetConnection40(NetLogWriter, String, int, ClientBaseDataSourceRoot, boolean)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetPackageReply.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes. Removed unused field rdbnam. Unused ultimately useless&lt;br/&gt;
setting of netConnection_.setReadOnlyTransactionFlag, cd. NetConnction changes.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetPackageRequest.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused field collectionName.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetPreparedStatement.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused methods writeDescribeOutput_, readDescribeOutput_.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/client/net/NetXACallInfo.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Removed unused field crrtkn_&lt;/p&gt;


&lt;ol&gt;
	&lt;li&gt;modified:   java/client/org/apache/derby/jdbc/ClientBaseDataSourceRoot.java&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Import fixes. Visibility restrictions. Removed unused constant SUPPORTS_EUSRIDPWD.&lt;/p&gt;
</comment>
                            <comment id="13655698" author="dagw" created="Mon, 13 May 2013 01:36:42 +0100"  >&lt;p&gt;Committed misc-01-b as svn 1480892, closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12640349">DERBY-6138</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12574982" name="derby-6125-01-a.diff" size="3152" author="dagw" created="Fri, 22 Mar 2013 07:57:58 +0000"/>
                            <attachment id="12575453" name="derby-6125-01-b.diff" size="3829" author="dagw" created="Tue, 26 Mar 2013 02:12:27 +0000"/>
                            <attachment id="12575454" name="derby-6125-01-b.status" size="412" author="dagw" created="Tue, 26 Mar 2013 02:12:27 +0000"/>
                            <attachment id="12575483" name="derby-6125-02-a.diff" size="34136" author="dagw" created="Tue, 26 Mar 2013 06:59:31 +0000"/>
                            <attachment id="12575484" name="derby-6125-02-a.status" size="472" author="dagw" created="Tue, 26 Mar 2013 06:59:31 +0000"/>
                            <attachment id="12577162" name="derby-6125-03-04-followup.diff" size="4393" author="dagw" created="Fri, 5 Apr 2013 06:40:28 +0100"/>
                            <attachment id="12577163" name="derby-6125-03-04-followup.status" size="410" author="dagw" created="Fri, 5 Apr 2013 06:40:28 +0100"/>
                            <attachment id="12576059" name="derby-6125-03-a.diff" size="11369" author="dagw" created="Fri, 29 Mar 2013 11:51:37 +0000"/>
                            <attachment id="12576039" name="derby-6125-03-a.status" size="563" author="dagw" created="Fri, 29 Mar 2013 08:41:07 +0000"/>
                            <attachment id="12576328" name="derby-6125-04-a.diff" size="34021" author="dagw" created="Mon, 1 Apr 2013 04:42:56 +0100"/>
                            <attachment id="12576329" name="derby-6125-04-a.status" size="847" author="dagw" created="Mon, 1 Apr 2013 04:42:56 +0100"/>
                            <attachment id="12576505" name="derby-6125-05-a.diff" size="15204" author="dagw" created="Tue, 2 Apr 2013 06:19:51 +0100"/>
                            <attachment id="12577173" name="derby-6125-05-c.diff" size="23477" author="dagw" created="Fri, 5 Apr 2013 08:12:40 +0100"/>
                            <attachment id="12577174" name="derby-6125-05-c.status" size="1490" author="dagw" created="Fri, 5 Apr 2013 08:12:40 +0100"/>
                            <attachment id="12577357" name="derby-6125-05-d.diff" size="27201" author="dagw" created="Sat, 6 Apr 2013 06:03:23 +0100"/>
                            <attachment id="12577358" name="derby-6125-05-d.status" size="1186" author="dagw" created="Sat, 6 Apr 2013 06:03:23 +0100"/>
                            <attachment id="12577995" name="derby-6125-imports-01-a.diff" size="262639" author="dagw" created="Wed, 10 Apr 2013 13:39:03 +0100"/>
                            <attachment id="12577996" name="derby-6125-imports-01-a.status" size="6200" author="dagw" created="Wed, 10 Apr 2013 13:39:03 +0100"/>
                            <attachment id="12582244" name="derby-6125-misc-01-b.diff" size="72472" author="dagw" created="Wed, 8 May 2013 04:20:58 +0100"/>
                            <attachment id="12582245" name="derby-6125-misc-01-b.status" size="4136" author="dagw" created="Wed, 8 May 2013 04:20:58 +0100"/>
                            <attachment id="12579083" name="derby-6125-rename-01-c.diff.gz" size="247714" author="dagw" created="Wed, 17 Apr 2013 04:15:56 +0100"/>
                            <attachment id="12579084" name="derby-6125-rename-01-c.stat" size="10302" author="dagw" created="Wed, 17 Apr 2013 04:15:56 +0100"/>
                            <attachment id="12577745" name="derby-6125-visibility-01-a.diff" size="43310" author="dagw" created="Tue, 9 Apr 2013 09:34:51 +0100"/>
                            <attachment id="12577746" name="derby-6125-visibility-01-a.status" size="1365" author="dagw" created="Tue, 9 Apr 2013 09:34:51 +0100"/>
                            <attachment id="12577769" name="derby-6125-visibility-01-b.diff" size="44481" author="dagw" created="Tue, 9 Apr 2013 11:03:34 +0100"/>
                            <attachment id="12581461" name="derby-6125-visibility-02-e.diff" size="382469" author="dagw" created="Thu, 2 May 2013 03:25:40 +0100"/>
                            <attachment id="12581462" name="derby-6125-visibility-02-e.status" size="8134" author="dagw" created="Thu, 2 May 2013 03:25:40 +0100"/>
                            <attachment id="12581505" name="derby-6125-visibility-03-a.diff" size="10778" author="dagw" created="Thu, 2 May 2013 11:58:34 +0100"/>
                            <attachment id="12581506" name="derby-6125-visibility-03-a.status" size="515" author="dagw" created="Thu, 2 May 2013 11:58:34 +0100"/>
                            <attachment id="12581659" name="derby-6125-visibility-03-b.diff" size="9589" author="dagw" created="Fri, 3 May 2013 05:13:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Mar 2013 09:45:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>318929</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzcvpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>319270</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>