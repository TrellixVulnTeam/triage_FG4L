<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1759/DERBY-1759.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1759] XMLSERIALIZE operator doesn&apos;t follow SQL/XML spec in some areas when serializing a sequence.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1759</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The SQL/XML specification dictates that, when serializing a sequence of XML items, the XMLSERIALIZE operator must first &quot;normalize&quot; the sequence based on the rules defined here:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://www.w3.org/TR/xslt-xquery-serialization/#serdm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/xslt-xquery-serialization/#serdm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The current Derby implementation doesn&apos;t perform such normalization, which leads to two ways in which the results of an XMLSERIALIZE operator may not agree with the required behavior:&lt;/p&gt;

&lt;p&gt;  1. Sequences of atomic values will not have spaces between, but&lt;br/&gt;
     the space is required as part of step 3 of the normalization&lt;br/&gt;
     rules at the above link.&lt;/p&gt;

&lt;p&gt;  2. Derby will allow serialization of a sequence even if it has&lt;br/&gt;
     a top-level Attribute node in it, but the rules of normalization&lt;br/&gt;
     dictate that an error should be thrown instead (step 7).&lt;/p&gt;

&lt;p&gt;Both of these behaviors can be seen with the following query.&lt;/p&gt;

&lt;p&gt;values&lt;br/&gt;
  xmlserialize(&lt;br/&gt;
    xmlquery(&apos;/ageinfo/@*&apos; passing by ref&lt;br/&gt;
      xmlparse(&lt;br/&gt;
        document &apos;&amp;lt;ageinfo age=&quot;48&quot; birthdate=&quot;1900-02-08&quot;/&amp;gt;&apos;&lt;br/&gt;
        preserve whitespace&lt;br/&gt;
      )&lt;br/&gt;
      empty on empty&lt;br/&gt;
    )&lt;br/&gt;
    as char(50)&lt;br/&gt;
  )&lt;/p&gt;

&lt;p&gt;Derby will currently return the following result from this statement:&lt;/p&gt;

&lt;p&gt;1&lt;br/&gt;
--------------------------------------------------&lt;br/&gt;
481900-02-08&lt;/p&gt;

&lt;p&gt;This result does not abide by SQL/XML specification because a) Derby allowed serialization of a sequence having a top-level attribute node (actually, the sequence had two), and b) the atomic values produced from the attributes were displayed without a space between them.&lt;/p&gt;

&lt;p&gt;The correct behavior for the above example is to return a serialization error caused by the presence of an Attribute node in the sequence.&lt;/p&gt;

&lt;p&gt;If the example was rewritten as, say:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;xmlquery(&apos;/ageinfo/@*&apos; passing by ref&lt;br/&gt;
+    xmlquery(&apos;fn:data(/ageinfo/@*)&apos; passing by ref&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;then the attribute nodes are no longer present--we only have their atomic values, which is allowed.  Thus the correct result should then be:&lt;/p&gt;

&lt;p&gt;1&lt;br/&gt;
--------------------------------------------------&lt;br/&gt;
48 1900-02-08&lt;/p&gt;

&lt;p&gt;Note, though, that Xalan doesn&apos;t appear to support the &quot;fn:data&quot; function, so this rewritten query won&apos;t actually work.  I tried using Xalan&apos;s built-in string function, as follows:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;xmlquery(&apos;/ageinfo/@*&apos; passing by ref&lt;br/&gt;
+    xmlquery(&apos;string(/ageinfo/@*)&apos; passing by ref&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;but Xalan only returns the first attribute in that case; it doesn&apos;t return the second one.  So part of this Jira issue is probably going to involve figuring out how to allow a user to retrieve a sequence of attribute &lt;b&gt;values&lt;/b&gt; (as opposed to attribute nodes) using Xalan and still abide by the SQL/XML rules.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12348560">DERBY-1759</key>
            <summary>XMLSERIALIZE operator doesn&apos;t follow SQL/XML spec in some areas when serializing a sequence.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Aug 2006 16:24:22 +0100</created>
                <updated>Fri, 25 Jul 2008 18:45:29 +0100</updated>
                            <resolved>Sat, 9 Sep 2006 23:02:47 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.2.0</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12433286" author="army" created="Fri, 8 Sep 2006 01:52:33 +0100"  >
&lt;p&gt;Attaching a patch for this issue, d1759_v1.patch.  The patch does the following:&lt;/p&gt;

&lt;p&gt;  1. Adds logic to SqlXmlUtil.serializeToString() to perform the&lt;br/&gt;
     steps of &quot;sequence normalization&quot; as required by XML serialization&lt;br/&gt;
     rules.  This includes throwing an error if the user attempts to&lt;br/&gt;
     explicitly serialize a sequence that contains one or more top-level&lt;br/&gt;
     attribute nodes.&lt;/p&gt;

&lt;p&gt;  2. In order to ensure that the serialization error is only thrown&lt;br/&gt;
     when the user performs an explicit XMLSERIALIZE, I added a&lt;br/&gt;
     new field, &quot;containsTopLevelAttr&quot;, to the XML class.  This field&lt;br/&gt;
     indicates whether or not the XML value corresponds to a sequence&lt;br/&gt;
     with a top-level attribute node.  If the user calls XMLSERIALIZE&lt;br/&gt;
     on an XMLDataValue for which containsTopLevelAttr is true,&lt;br/&gt;
     then we&apos;ll throw the serialization error 2200W as dictated by&lt;br/&gt;
     SQL/XML. &lt;/p&gt;

&lt;p&gt;  3. Adds appropriate test cases to lang/xml_general.sql to verify&lt;br/&gt;
     the fix.&lt;/p&gt;

&lt;p&gt;  4. Since Xalan doesn&apos;t provide a built-in way to retrieve a sequence&lt;br/&gt;
     of attribue values (as opposed to attribute nodes), I also included&lt;br/&gt;
     in lang/xml_general.sql a (rather ugly) way to accomplish that&lt;br/&gt;
     task within the serialization restrictions of SQL/XML.&lt;/p&gt;

&lt;p&gt;I also added logic to put spaces between adjacent atomic values in a result sequence, per XML &quot;sequence normalization&quot; rules.  However, I didn&apos;t add any test cases for this because I couldn&apos;t come up with an XPath query that would actually return such a sequence.  Nonetheless, the relevant logic seems straightforward and I have included it in this patch.&lt;/p&gt;

&lt;p&gt;I ran xmlSuite with these changes against insane jars with ibm142 on Windows 2000 and all tests passed.  I plan to run derbyall as a sanity check tonight but do not expect any failures since the changes are all limited to XML.  In the meantime, any early feedback/review/comments would be much appreciated.  Thanks!&lt;/p&gt;</comment>
                            <comment id="12433423" author="army" created="Fri, 8 Sep 2006 16:25:40 +0100"  >&lt;p&gt;I ran derbyall against insane jars with ibm142 on Red Hat Linux and there were no new failures.  So the d1759_v1.patch is ready for review/commit.&lt;/p&gt;</comment>
                            <comment id="12433561" author="bryanpendleton" created="Sat, 9 Sep 2006 05:41:47 +0100"  >&lt;p&gt;I&apos;m afraid I don&apos;t have much to offer regarding the sequence-of-attribute-values issue.&lt;/p&gt;

&lt;p&gt;The patch applied and built cleanly. My derbyall run was also successful. With Xalan 2.7,&lt;br/&gt;
I got the expected results for lang/xmlBinding.java and lang/xml_general.sql. The&lt;br/&gt;
patch description is clear and makes sense, and the code in the patch appears to&lt;br/&gt;
match the patch description.&lt;/p&gt;

&lt;p&gt;I committed this patch to subversion as revision 441740. Thanks as usual for the&lt;br/&gt;
clear patch description, the careful commenting and attention to detail in the code,&lt;br/&gt;
and the test cases. Reviewing such changes is a pleasure!&lt;/p&gt;

&lt;p&gt;Do we need to merge this change to 10.2?&lt;/p&gt;</comment>
                            <comment id="12433600" author="army" created="Sat, 9 Sep 2006 15:14:22 +0100"  >&lt;p&gt;Thanks, as always, for the careful review and subsequent commit, Bryan.  I appreciate your time!&lt;/p&gt;

&lt;p&gt;Yes, I would like this patch to be merged to 10.2, if possible.  Should I leave &quot;Patch Available&quot; checked until that happens, or uncheck that box and just leave the issue open?&lt;/p&gt;

&lt;p&gt;Thanks again!&lt;/p&gt;</comment>
                            <comment id="12433602" author="bryanpendleton" created="Sat, 9 Sep 2006 15:30:42 +0100"  >&lt;p&gt;I intend to merge revision 441740 to the 10.2 branch today. The merge and build were clean.&lt;br/&gt;
I&apos;m running some tests just to be sure.&lt;/p&gt;</comment>
                            <comment id="12433650" author="bryanpendleton" created="Sat, 9 Sep 2006 23:02:47 +0100"  >&lt;p&gt;Merged from trunk to 10.2 branch. Merge was clean, build and tests went well.&lt;br/&gt;
Committed to subversion as revision 441864. Army, can you confirm and close?&lt;/p&gt;</comment>
                            <comment id="12433653" author="army" created="Sun, 10 Sep 2006 01:21:02 +0100"  >&lt;p&gt;Verified that changes are in main and 10.2 branches by visual inspection and by running the XML tests.  So closing the issue.&lt;/p&gt;

&lt;p&gt;Thanks Bryan!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12325435">DERBY-688</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12340431" name="d1759_v1.patch" size="36224" author="army" created="Fri, 8 Sep 2006 01:52:33 +0100"/>
                            <attachment id="12340432" name="d1759_v1.stat" size="750" author="army" created="Fri, 8 Sep 2006 01:52:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 9 Sep 2006 04:41:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22687</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ykf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39418</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>