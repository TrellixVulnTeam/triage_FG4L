<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:07:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4731/DERBY-4731.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4731] XA two phase commit with active  GLOBAL TEMPORARY TABLE causes  An internal error identified by RawStore module</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4731</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If an XA  two phase commit is performed while an GLOBAL TEMPORARY TABLE is active,  it will fail with:&lt;br/&gt;
XAER_RMERR&lt;br/&gt;
Exception in thread &quot;main&quot; javax.transaction.xa.XAException: An internal error w&lt;br/&gt;
as identified by RawStore module.&lt;br/&gt;
        at org.apache.derby.jdbc.EmbedXAResource.wrapInXAException(EmbedXAResour&lt;br/&gt;
ce.java:820)&lt;br/&gt;
        at org.apache.derby.jdbc.EmbedXAResource.commit(EmbedXAResource.java:143&lt;br/&gt;
)&lt;br/&gt;
        at ReproXATempTable.tempTableInXA(ReproXATempTable.java:51)&lt;br/&gt;
        at ReproXATempTable.main(ReproXATempTable.java:14)&lt;br/&gt;
Caused by: java.sql.SQLTransactionRollbackException: An internal error was ident&lt;br/&gt;
ified by RawStore module.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLE&lt;br/&gt;
xceptionFactory40.java:88)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException&lt;br/&gt;
(TransactionResourceImpl.java:391)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Tr&lt;br/&gt;
ansactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConne&lt;br/&gt;
ction.java:2269)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.xa_commit(EmbedConnection.&lt;br/&gt;
java:2924)&lt;br/&gt;
        at org.apache.derby.jdbc.XATransactionState.xa_commit(XATransactionState&lt;br/&gt;
.java:339)&lt;br/&gt;
        at org.apache.derby.jdbc.EmbedXAResource.commit(EmbedXAResource.java:141&lt;br/&gt;
)&lt;br/&gt;
        ... 2 more&lt;br/&gt;
Caused by: java.sql.SQLException: An internal error was identified by RawStore m&lt;br/&gt;
odule.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExc&lt;br/&gt;
eptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransport&lt;br/&gt;
AcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLE&lt;br/&gt;
xceptionFactory40.java:70)&lt;br/&gt;
        ... 9 more&lt;br/&gt;
Caused by: ERROR 40XT0: An internal error was identified by RawStore module.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardEx&lt;br/&gt;
ception.java:276)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.setActiveState(Xact.java:18&lt;br/&gt;
09)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.addContainer(Xact.java:1357&lt;br/&gt;
)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.create(Heap.java:274)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.creat&lt;br/&gt;
eConglomerate(HeapConglomerateFactory.java:195)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.createConglomerate(&lt;br/&gt;
RAMTransaction.java:823)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.clean&lt;br/&gt;
upTempTableOnCommitOrRollback(GenericLanguageConnectionContext.java:1345)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.doCom&lt;br/&gt;
mit(GenericLanguageConnectionContext.java:1263)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.xaCom&lt;br/&gt;
mit(GenericLanguageConnectionContext.java:1160)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.xa_commit(EmbedConnection.&lt;br/&gt;
java:2921)&lt;br/&gt;
        ... 4 more&lt;/p&gt;

&lt;p&gt;See attached program for reproduction. &lt;br/&gt;
javac  -g ReproXATempTable.java utilXid.java&lt;br/&gt;
java ReproXATempTable&lt;/p&gt;

&lt;p&gt;To work around the issue, you can drop the temp table before ending the xa transaction.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12468454">DERBY-4731</key>
            <summary>XA two phase commit with active  GLOBAL TEMPORARY TABLE causes  An internal error identified by RawStore module</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Jul 2010 19:55:46 +0100</created>
                <updated>Wed, 12 Jan 2011 22:24:42 +0000</updated>
                            <resolved>Wed, 21 Jul 2010 23:15:10 +0100</resolved>
                                    <version>10.3.3.0</version>
                    <version>10.4.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                    <version>10.7.1.1</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12884838" author="mikem" created="Fri, 2 Jul 2010 23:36:39 +0100"  >&lt;p&gt;I verified the bug is reproducible against trunk using the attached test case.&lt;/p&gt;

&lt;p&gt;The stores support of XA enforces certain protocols.  After a transaction has been prepared, no further activity on that transaction is expected.  The raw store enforces this by checking the state of the transaction for all logged operations.  It will throw a protocol error if any logged operation is attempted &lt;br/&gt;
after the transaction has moved into PREPARE state.  This is the situation that the test case is &lt;br/&gt;
causing.&lt;/p&gt;

&lt;p&gt;In this case the global temporary table has been declared to not be logged and on commit to delete all the rows in the table.  It looks like the code to do this did not take into account XA transactions.  To &lt;br/&gt;
provide the expected behavior with no logging, the SQL layer determines at commit time if any &lt;br/&gt;
temp tables will need fix up, and in the case of delete on commit it implements this by creating new&lt;br/&gt;
empty containers and substituting these for the existing containers.   This action of creating a container&lt;br/&gt;
after the prepare is caught by store and the error is thrown.&lt;/p&gt;

&lt;p&gt;I am not sure the right fix, but here are some options:&lt;/p&gt;

&lt;p&gt;1) somehow figure out how to move the work to prepare, rather than commit - so that there is no&lt;br/&gt;
    work to do at commit time.&lt;br/&gt;
2) move the work to after the commit.  I think this will mean coming up with a different transaction &lt;br/&gt;
    to do the work on.  Need to make sure all the work is done before user gets control back. &lt;/p&gt;

&lt;p&gt;option 2 seems best to me, not sure how tricky it is to come up with the right transaction to use.&lt;/p&gt;</comment>
                            <comment id="12884848" author="kmarsden" created="Sat, 3 Jul 2010 00:00:17 +0100"  >&lt;p&gt;Attaching perhaps another manifestation of the issue which gives an assert on the prepare.  The only difference  that there the Assert case does not do logged work (creating a table) in the the transaction.  This one also requires the utilXid class.&lt;/p&gt;

&lt;p&gt; java ReproXATempTableAssert&lt;br/&gt;
ot 1rows from session.t1 before commit&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.derby.shared.common.sanity.AssertFailure:&lt;br/&gt;
ASSERT FAILED real connection should have been idle at this point&lt;br/&gt;
       at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityMana&lt;br/&gt;
er.java:120)&lt;br/&gt;
       at org.apache.derby.jdbc.EmbedXAResource.prepare(EmbedXAResource.java:29&lt;br/&gt;
)&lt;br/&gt;
       at ReproXATempTableAssert.tempTableInXA(ReproXATEmpTableAssert.java:54)&lt;br/&gt;
       at ReproXATempTableAssert.main(ReproXATEmpTableAssert.java:14)&lt;br/&gt;
--------------&lt;br/&gt;
tack traces for all live threads:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;snip thread dump&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;I will add the two test cases as Junit fixtures to XATest but not enable them for now.&lt;/p&gt;</comment>
                            <comment id="12884865" author="kmarsden" created="Sat, 3 Jul 2010 01:02:55 +0100"  >&lt;p&gt;I checked in fixtures for the RawStore error and the the Assert case to XATest. The fixtures are  xtestXATempTableD4731_RawStore() and xtestXATempTableD4731_Assert and can be enabled by removing the &apos;x&apos; in front.&lt;/p&gt;</comment>
                            <comment id="12885041" author="mikem" created="Sun, 4 Jul 2010 16:31:26 +0100"  >&lt;p&gt;This patch does the work of temp table cleanup on commit during an XA commit in a nested updatable user transaction. I believe it is ok to do this in a nested transaction&lt;br/&gt;
for XA because it does the right thing in both possible cases:&lt;br/&gt;
1) If the XA transaction commits successfully then the same work has been done. &lt;br/&gt;
    Because of where it is done in the code, the committing user can never get access&lt;br/&gt;
    to the global temp tables between the time the nested xact commits and the XA&lt;br/&gt;
    transaction commits.&lt;br/&gt;
2) If the XA transaction fails to commit somehow, then I think one of two things will happen:&lt;br/&gt;
    a) the session will go away, and then it does not matter what happens to the session&lt;br/&gt;
        life objects.&lt;br/&gt;
    b) the transaction will rollback, and on commit work which deleted the rows is the&lt;br/&gt;
        same work that needs to get done on rollback.&lt;/p&gt;

&lt;p&gt;The only locks the nested transaction gets is created new containers, so there should&lt;br/&gt;
be no problem with lock contention of the work with either the parent transaction, or &lt;br/&gt;
any other transactions.&lt;/p&gt;

&lt;p&gt; It fixes the xtestXATempTableD4731_RawStore()&lt;br/&gt;
fixture, but does not fix the xtestXATempTableD4731_Assert.&lt;br/&gt;
It also passes full set of tests.&lt;/p&gt;

&lt;p&gt;I have not debugged the xtestXATempTableD4731_Assert case.&lt;/p&gt;</comment>
                            <comment id="12885750" author="mikem" created="Wed, 7 Jul 2010 01:12:19 +0100"  >&lt;p&gt;derby_4731_2.diff is my proposed fix for this issue.  It fixes the raw store error on commit.  It does not fix the assert caused by the other test case.  I am going to report a new JIRA to track that assert test case.  In insane mode that the prepare returns XA_RDONLY which I think is the right return for that case as no &quot;real&quot; updates have happened.  &lt;/p&gt;</comment>
                            <comment id="12886091" author="mikem" created="Wed, 7 Jul 2010 22:26:34 +0100"  >&lt;p&gt;committed fix to trunk:&lt;/p&gt;

&lt;p&gt;s1_ibm16:17&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\conn\GenericLanguageConnectionContext.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\jdbc\EmbedXAResource.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\jdbcap\XATest.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 961511.&lt;/p&gt;</comment>
                            <comment id="12886972" author="mikem" created="Sat, 10 Jul 2010 02:23:36 +0100"  >&lt;p&gt;backported to 10.6 codeline.&lt;/p&gt;

&lt;p&gt;m106_jdk16:47&amp;gt;svn commit&lt;br/&gt;
Sending        java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
Sending        java/engine/org/apache/derby/jdbc/EmbedXAResource.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 962738.&lt;/p&gt;</comment>
                            <comment id="12887002" author="mikem" created="Sat, 10 Jul 2010 07:46:03 +0100"  >&lt;p&gt;Backported fix #962738 from 10.6 codeline to 10.5 codeline. &lt;/p&gt;

&lt;p&gt;m105_jdk16:17&amp;gt;svn commit&lt;br/&gt;
Sending        .&lt;br/&gt;
Sending        java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
Sending        java/engine/org/apache/derby/jdbc/EmbedXAResource.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 962770.&lt;/p&gt;</comment>
                            <comment id="12887210" author="mikem" created="Sun, 11 Jul 2010 17:15:03 +0100"  >&lt;p&gt;Backported fix #962738 from 10.6 codeline to 10.4 codeline. &lt;/p&gt;

&lt;p&gt;m104_ibm16:23&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\conn\GenericLanguageConnectionContext.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\jdbc\EmbedXAResource.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\XATest.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 963099.&lt;/p&gt;</comment>
                            <comment id="12887236" author="mikem" created="Sun, 11 Jul 2010 22:56:07 +0100"  >&lt;p&gt;I&apos;ve successfully backported this all the way back to 10.4.  When I try the backport to 10.3 I am getting one error in the client/server run of the new test.  I don&apos;t think this is an issue with the actual change, but some fix that not made it back to the 10.3 line.  It is sort of hard to prove as without the fix the test fails with the expected error that the test is exercising.  The problem seems similar to  	 &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4310&quot; title=&quot;Closing a prepared statement with an embedded   XAConnection can cause the statement to be reprepared and errors related to missing dependencies. This can interfere with network server closeSession()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4310&quot;&gt;&lt;del&gt;DERBY-4310&lt;/del&gt;&lt;/a&gt; but that fix is in 10.3. :&lt;/p&gt;

&lt;p&gt;There was 1 error:&lt;br/&gt;
1) testXATempTableD4731_RawStore(org.apache.derbyTesting.functionTests.tests.jdb&lt;br/&gt;
capi.XATest)java.sql.SQLException: Error executing a XAResource.commit(), server&lt;br/&gt;
 returned XAER_RMFAIL.&lt;br/&gt;
    at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExcepti&lt;br/&gt;
onFactory.java:46)&lt;br/&gt;
    at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java&lt;br/&gt;
:362)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.close(Statement.java:506)&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest.doXATempTableD&lt;br/&gt;
4731Work(XATest.java:1166)&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest.testXATempTabl&lt;br/&gt;
eD4731_RawStore(XATest.java:1096)&lt;br/&gt;
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java&lt;br/&gt;
:79)&lt;br/&gt;
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorI&lt;br/&gt;
mpl.java:43)&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:99)&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Error executing a XAResource&lt;br/&gt;
.commit(), server returned XAER_RMFAIL.&lt;br/&gt;
    at org.apache.derby.client.net.NetXAResource.xaRetValErrorAccumSQL(NetXAReso&lt;br/&gt;
urce.java:954)&lt;br/&gt;
    at org.apache.derby.client.net.NetXAConnection.readCommit(NetXAConnection.ja&lt;br/&gt;
va:184)&lt;br/&gt;
    at org.apache.derby.client.net.NetConnection.readXACommit_(NetConnection.jav&lt;br/&gt;
a:1827)&lt;br/&gt;
    at org.apache.derby.client.am.Connection.readCommit(Connection.java:663)&lt;br/&gt;
    at org.apache.derby.client.am.Connection.readAutoCommit(Connection.java:657)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.readCloseResultSets(Statement.java:1&lt;br/&gt;
703)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.readCloseResultSets(Statement.java:1&lt;br/&gt;
667)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.readClose(Statement.java:1606)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.flowClose(Statement.java:1589)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.closeX(Statement.java:539)&lt;br/&gt;
    at org.apache.derby.client.am.Statement.close(Statement.java:501)&lt;br/&gt;
    ... 42 more&lt;/p&gt;</comment>
                            <comment id="12887251" author="kmarsden" created="Mon, 12 Jul 2010 01:15:26 +0100"  >&lt;p&gt;In general my experience has been that RMFAIL on the client means  something pretty serious has happened  on the server side. Was there anything in the derby.log after running the test?&lt;/p&gt;
</comment>
                            <comment id="12887750" author="kristwaa" created="Tue, 13 Jul 2010 14:14:31 +0100"  >&lt;p&gt;This issue has the patch available flag set, but has not been resolved even though commits have been made.&lt;br/&gt;
What&apos;s the status of the issue?&lt;/p&gt;</comment>
                            <comment id="12887822" author="mikem" created="Tue, 13 Jul 2010 17:15:45 +0100"  >&lt;p&gt;10.3 backport is not working.  Here is the diff of the backport.  &lt;/p&gt;</comment>
                            <comment id="12888379" author="mikem" created="Wed, 14 Jul 2010 16:19:50 +0100"  >&lt;p&gt;There is a problem with the initial fix, not sure why it only showed an error in the 10.3 backport.  The&lt;br/&gt;
issuem is most easily seen by the embedded run of the test case for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4743&quot; title=&quot;Attempt to access a DECLARE GLOBAL TEMPORARY TABLE after commit in an XA transaction in Network server fails.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4743&quot;&gt;&lt;del&gt;DERBY-4743&lt;/del&gt;&lt;/a&gt; which will pass after&lt;br/&gt;
applying this fix.  It does not fix the network server run of that test case.  &lt;/p&gt;

&lt;p&gt;The temporary tables are stored in the transaction context, so using a nested transaction creates a new&lt;br/&gt;
context and the work there is not reflected in the parent context.  &lt;/p&gt;

&lt;p&gt;This patch delays the work on the XA global temporary tables until after the xa transaction has committed but before control returns to the client executing the commit.  &lt;/p&gt;

&lt;p&gt;It passes all tests against trunk except for ttestSetPortPriority, which I believe is failing against trunk for other users.&lt;/p&gt;</comment>
                            <comment id="12888505" author="kmarsden" created="Wed, 14 Jul 2010 20:31:07 +0100"  >&lt;p&gt;I thought I would try this with DB2 and found that after the global transaction commits, the GLOBAL TEMPORARY  TABLE  was no longer accessible.  I think that is a reasonable behavior. &lt;/p&gt;

&lt;p&gt;Note: In order to use global temporary tables in db2 I had to first create a user temporary table space.&lt;br/&gt;
create user temporary tablespace MYTMPSPACE managed by automatic storage&lt;/p&gt;</comment>
                            <comment id="12889698" author="mikem" created="Mon, 19 Jul 2010 00:22:47 +0100"  >&lt;p&gt;commited 2nd part of fix to trunk.  &lt;/p&gt;

&lt;p&gt;svn commit&lt;br/&gt;
Sending        java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 965317.&lt;/p&gt;</comment>
                            <comment id="12889699" author="mikem" created="Mon, 19 Jul 2010 00:24:20 +0100"  >&lt;p&gt;old backported fix did not fix issue completely.  New fix has so far only made it into trunk.&lt;/p&gt;</comment>
                            <comment id="12890926" author="mikem" created="Wed, 21 Jul 2010 23:15:10 +0100"  >&lt;p&gt;fixed and backported to 10.3, 10.4, 10.5, and 10.6&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12469217">DERBY-4743</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12468681">DERBY-4735</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12448589" name="ReproXATempTable.java" size="6033" author="kmarsden" created="Fri, 2 Jul 2010 19:56:58 +0100"/>
                            <attachment id="12448606" name="ReproXATempTableAssert.java" size="6374" author="kmarsden" created="Sat, 3 Jul 2010 00:00:16 +0100"/>
                            <attachment id="12449363" name="backport10_3.diff" size="11861" author="mikem" created="Tue, 13 Jul 2010 17:15:45 +0100"/>
                            <attachment id="12448647" name="derby_4731.diff" size="8297" author="mikem" created="Sun, 4 Jul 2010 16:31:26 +0100"/>
                            <attachment id="12448836" name="derby_4731_2.diff" size="14486" author="mikem" created="Wed, 7 Jul 2010 01:12:19 +0100"/>
                            <attachment id="12449460" name="derby_4731_3.diff" size="8844" author="mikem" created="Wed, 14 Jul 2010 16:19:50 +0100"/>
                            <attachment id="12448590" name="utilXid.java" size="1524" author="kmarsden" created="Fri, 2 Jul 2010 19:56:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Jul 2010 22:36:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24432</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    <customfieldvalue key="10427"><![CDATA[Workaround attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0nvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37686</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>