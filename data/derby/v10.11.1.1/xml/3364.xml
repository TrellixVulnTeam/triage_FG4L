<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3364/DERBY-3364.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3364] Replication failover implementation must be modified to fail at the master after slave has been stopped</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3364</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Jorgen says...&lt;/p&gt;

&lt;p&gt;I tried to run the failover command on the master, which seems to work fine as long as the master and slave are still connected. If the slave has been stopped for some reason, however, failover hangs on MasterController#startFailover here: &lt;br/&gt;
ack = transmitter.readMessage();&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387454">DERBY-3364</key>
            <summary>Replication failover implementation must be modified to fail at the master after slave has been stopped</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Jan 2008 09:48:19 +0000</created>
                <updated>Thu, 6 Mar 2008 23:18:25 +0000</updated>
                            <resolved>Thu, 6 Mar 2008 23:18:08 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12568934" author="narayanan" created="Thu, 14 Feb 2008 13:55:12 +0000"  >&lt;p&gt;Now the stopSlave on a slave when the connection is active will fail saying that&lt;br/&gt;
the connection with the master is still active. I was earlier using this particular&lt;br/&gt;
situation as the reproducible&lt;/p&gt;

&lt;p&gt;1) Start Slave&lt;br/&gt;
2) start master&lt;br/&gt;
3) execute a few transactions on the master (a few inserts)&lt;br/&gt;
4) Issue stopSlave on the slave side&lt;br/&gt;
5) failover on the master&lt;/p&gt;

&lt;p&gt;This hanged for me. But after stopSlave on a active connection being disabled&lt;br/&gt;
I am running short of ideas to reproduce this.&lt;/p&gt;

&lt;p&gt;With the earlier reproducible doing a setSoTimeout on the socket connection in the&lt;br/&gt;
Transmitter worked for me.&lt;/p&gt;

&lt;p&gt;I please request for help in generating a reproducible in the present trunk. I can&lt;br/&gt;
submit a fix with the setSoTimeout if that is acceptable since logically the read&lt;br/&gt;
on the InputStream obtained from the socket should time out.&lt;/p&gt;</comment>
                            <comment id="12568935" author="narayanan" created="Thu, 14 Feb 2008 13:56:17 +0000"  >&lt;p&gt;In the fix explained above I used the same timeout value that is used&lt;br/&gt;
to timeout a connection attempt to the running slave.&lt;/p&gt;</comment>
                            <comment id="12569795" author="jorgenlo" created="Mon, 18 Feb 2008 08:14:00 +0000"  >&lt;p&gt;Did you try to replace 4) with crashing the slave using Ctrl-c (if embedded)? &lt;/p&gt;</comment>
                            <comment id="12569796" author="narayanan" created="Mon, 18 Feb 2008 08:15:41 +0000"  >&lt;p&gt;Yes I did, I remember getting a connection lost message, I will try this once again since you have pointed this out&lt;/p&gt;</comment>
                            <comment id="12570972" author="jorgenlo" created="Thu, 21 Feb 2008 07:55:30 +0000"  >&lt;p&gt;To test the fix you describe, you could modify SlaveDatabase#stopSlave to call SlaveController#stopSlave(true) instead of stopSlave(false). That will reenable stopSlave when the network connection is working. This hack is only for testing your fix, of course...&lt;/p&gt;</comment>
                            <comment id="12571136" author="narayanan" created="Thu, 21 Feb 2008 18:34:39 +0000"  >&lt;p&gt;Thank you for the ctrl+c tip Jorgen. &lt;/p&gt;

&lt;p&gt;Pls find below the changes to the files explained and also the run of &lt;br/&gt;
the attached repro.&lt;/p&gt;

&lt;p&gt;General Failure Analysis&lt;br/&gt;
-------------------------------------- &lt;/p&gt;

&lt;p&gt;There was a lot of discrepancy I observed in the runs.&lt;/p&gt;

&lt;p&gt;1) Failover succeeds the first time saying it was successful&lt;br/&gt;
2) Failover hangs the second time it is called&lt;br/&gt;
3) exit hangs after the first Failover&lt;/p&gt;

&lt;p&gt;These were due to a combination of reasons,&lt;/p&gt;

&lt;p&gt;a) The read on the InputStream obtained in the client socket was not&lt;br/&gt;
   timing out&lt;br/&gt;
b) The Transmitter should close the socket when a failover is successful or&lt;br/&gt;
   unsuccessful. (This is a client socket, I am not sure it was a big problem)&lt;br/&gt;
c) The log shipper thread should be terminate upon failover failure or success.&lt;/p&gt;

&lt;p&gt;Files Modified and Explanation&lt;br/&gt;
-----------------------------------------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageTransmit.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Set a timeout on the socket that is translated as a timeout on the reads on the&lt;br/&gt;
  I/P streams&lt;/li&gt;
	&lt;li&gt;Add method to tear down the socket obtained.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/master/MasterController.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;handle the IOException being thrown from stopLogShipment because of the exception thrown&lt;br/&gt;
  by tearDown.&lt;/li&gt;
	&lt;li&gt;The log shipper needs to be stopped when failover fails also inaddition to being stopped&lt;br/&gt;
  upon a success.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/master/AsynchronousLogShipper.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Make the log shipper tear down the socket and the streams obtained from the socket.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Repro Runs&lt;br/&gt;
-------------------&lt;/p&gt;

&lt;p&gt;Embedded&lt;br/&gt;
--------&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_freeze_database(); &lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost&apos;; &lt;/p&gt;

&lt;p&gt;Did a ctrl+c on slave here&lt;/p&gt;

&lt;p&gt;ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;failover=true&apos;; &lt;br/&gt;
ERROR XRE21: Error occurred while performing failover for database &apos;masterDB&apos;, Failover attempt was aborted.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;Client&lt;br/&gt;
------&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;/p&gt;

&lt;p&gt;Did a ctrl + c on slave here&lt;/p&gt;

&lt;p&gt;ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;failover=true&apos;;&lt;br/&gt;
ERROR XRE21: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE21, SQLERRMC: replicationdbXRE21&lt;br/&gt;
ij(CONNECTION1)&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;This patch will clash with Derby-3428. The patch that is committed first&lt;br/&gt;
will break the other.&lt;/p&gt;</comment>
                            <comment id="12572011" author="narayanan" created="Mon, 25 Feb 2008 03:49:59 +0000"  >&lt;p&gt;I noticed that the tearDown method is already there in ReplicationMessageTransmit.&lt;br/&gt;
So the tearDown method is not needed in this patch. I will be resubmitting this patch.&lt;br/&gt;
I request the patch  Derby3364_v1.diff to be please ignored.&lt;/p&gt;</comment>
                            <comment id="12572060" author="narayanan" created="Mon, 25 Feb 2008 11:46:10 +0000"  >&lt;p&gt;Changes from v1 of the patch submitted&lt;br/&gt;
---------------------------------------&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageTransmit.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The tearDown() method is already present&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;java/engine/org/apache/derby/impl/services/replication/master/MasterController.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I assumed that stopping the log shipper would also tearDown the network associated&lt;br/&gt;
  with it. But I guess it is OK to use the tearDown method that is part of the MasterController.&lt;br/&gt;
  Each call of logShipper.stopLogShipment(); in the submitted patch will be followed by&lt;br/&gt;
  a teardownNetwork call.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;java/engine/org/apache/derby/impl/services/replication/master/AsynchronousLogShipper.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;stopLogShipment() will no longer call tearDown&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-----------------------------------------------&lt;br/&gt;
I ran the repro in client/server and it seemed to work fine for me.&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;/p&gt;

&lt;p&gt;Stopped slave here&lt;/p&gt;

&lt;p&gt;ij(CONNECTION1)&amp;gt;  connect &apos;jdbc:derby://localhost:1527/replicationdb;failover=true&apos;;&lt;br/&gt;
ERROR XRE21: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE21, SQLERRMC: replicationdbXRE21&lt;br/&gt;
ij(CONNECTION1)&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12572069" author="narayanan" created="Mon, 25 Feb 2008 12:17:56 +0000"  >&lt;p&gt;teardownNetwork does a log shipper shutdown too. In the attached patch the&lt;br/&gt;
log shipper is being shutdown everytime and then we call a teardownNetwork.&lt;br/&gt;
This was unnecessary, we could have called teardownNetwork directly.&lt;/p&gt;

&lt;p&gt;Nit Picking: since the teardownNetwork does more than tearing down the&lt;br/&gt;
network, can&apos;t we just call it tearDown() ?&lt;/p&gt;</comment>
                            <comment id="12572070" author="narayanan" created="Mon, 25 Feb 2008 12:24:53 +0000"  >&lt;p&gt;This patch uses only teardownNetwork and does not shutdown the&lt;br/&gt;
log shipper seperately.&lt;/p&gt;</comment>
                            <comment id="12572851" author="oysteing" created="Wed, 27 Feb 2008 09:58:07 +0000"  >&lt;p&gt;I have tested that patch v3 fixes the reported problem, and the patch looks good so I will commit it.&lt;/p&gt;

&lt;p&gt;However, I think there is still a case in MasterController where teardownNetwork() needs to be called:&lt;br/&gt;
If the call to flushBuffer in stopMaster fails, teardownNetwork() is not called.  Is this covered by another JIRA?&lt;/p&gt;</comment>
                            <comment id="12572854" author="oysteing" created="Wed, 27 Feb 2008 10:15:19 +0000"  >&lt;p&gt;Committed the v3 patch as revision 631534. Thanks, Narayanan for the fix.&lt;/p&gt;</comment>
                            <comment id="12573150" author="narayanan" created="Thu, 28 Feb 2008 04:39:04 +0000"  >&lt;p&gt;Moved tearDownNetwork to the finally block&lt;br/&gt;
of the stopMaster method.&lt;/p&gt;</comment>
                            <comment id="12574444" author="oysteing" created="Mon, 3 Mar 2008 11:45:16 +0000"  >&lt;p&gt;Thanks, Narayanan.  Patch v4 committed as revision 633045.&lt;/p&gt;</comment>
                            <comment id="12575949" author="narayanan" created="Thu, 6 Mar 2008 23:18:08 +0000"  >&lt;p&gt;All relevant patches have been committed! Resolving issue!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12383943">DERBY-3254</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376147" name="Derby3364_v1.diff" size="4684" author="narayanan" created="Thu, 21 Feb 2008 18:34:39 +0000"/>
                            <attachment id="12376148" name="Derby3364_v1.stat" size="286" author="narayanan" created="Thu, 21 Feb 2008 18:34:39 +0000"/>
                            <attachment id="12376404" name="Derby3364_v2.diff" size="2239" author="narayanan" created="Mon, 25 Feb 2008 11:46:10 +0000"/>
                            <attachment id="12376405" name="Derby3364_v2.stat" size="189" author="narayanan" created="Mon, 25 Feb 2008 11:46:10 +0000"/>
                            <attachment id="12376410" name="Derby3364_v3.diff" size="2200" author="narayanan" created="Mon, 25 Feb 2008 12:24:53 +0000"/>
                            <attachment id="12376411" name="Derby3364_v3.stat" size="189" author="narayanan" created="Mon, 25 Feb 2008 12:24:53 +0000"/>
                            <attachment id="12376692" name="Derby3364_v4.diff" size="974" author="narayanan" created="Thu, 28 Feb 2008 04:39:04 +0000"/>
                            <attachment id="12376693" name="Derby3364_v4.stat" size="91" author="narayanan" created="Thu, 28 Feb 2008 04:39:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 18 Feb 2008 08:14:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23598</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0z6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39518</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>