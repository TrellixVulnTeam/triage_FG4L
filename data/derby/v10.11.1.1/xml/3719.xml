<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3719/DERBY-3719.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3719] &apos;...replication.buffer.LogBufferFullException&apos; causes failover to fail w/ &apos;XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.&apos;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3719</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;With the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3709&quot; title=&quot;Exception printed by replication test: Could not perform operation because the database is not in replication master mode.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3709&quot;&gt;&lt;del&gt;DERBY-3709&lt;/del&gt;&lt;/a&gt;, derby-3709_p1-v2.diff.txt,  I was able to provoke this error twice in 30 test runs on this platform (On another platform I saw none in 100 test runs.)&lt;/p&gt;

&lt;p&gt;I will upload the full test run log dir.&lt;/p&gt;

&lt;p&gt;&quot;Summary&quot;:&lt;/p&gt;

&lt;p&gt;1) testReplication_Local_StateTest_part2(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part2)junit.framework.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;XRE&lt;span class=&quot;error&quot;&gt;&amp;#91;20&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;XRE&lt;span class=&quot;error&quot;&gt;&amp;#91;07&amp;#93;&lt;/span&gt;&amp;gt;&lt;/p&gt;



&lt;p&gt;Master derby.log:&lt;br/&gt;
-----------------------------------------&lt;br/&gt;
----  BEGIN REPLICATION ERROR MESSAGE (6/10/08 4:08 PM) ----&lt;br/&gt;
Exception occurred during log shipping.&lt;br/&gt;
org.apache.derby.impl.store.replication.buffer.LogBufferFullException&lt;br/&gt;
	at org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer.switchDirtyBuffer(ReplicationLogBuffer.java:357)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer.appendLog(ReplicationLogBuffer.java:146)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.master.MasterController.appendLog(MasterController.java:428)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.writeToLog(LogAccessFile.java:787)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.flushDirtyBuffers(LogAccessFile.java:534)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.flushLogAccessFile(LogAccessFile.java:574)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.writeLogRecord(LogAccessFile.java:332)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(LogToFile.java:3759)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(FileLogger.java:370)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Xact.java:1193)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.doAction(LoggableActions.java:221)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdate(LoggableActions.java:85)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlot(StoredPage.java:8463)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.updateOverflowDetails(StoredPage.java:8336)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.updateOverflowDetails(StoredPage.java:8319)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.insertAllowOverflow(BasePage.java:808)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.insert(BasePage.java:653)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.doInsert(HeapController.java:307)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.insert(HeapController.java:575)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:457)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1011)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:487)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1307)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAStatement.execute(DRDAStatement.java:672)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4197)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4001)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:991)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:278)&lt;/p&gt;

&lt;p&gt;--------------------  END REPLICATION ERROR MESSAGE ---------------------&lt;/p&gt;


&lt;p&gt;Slave derby.log:&lt;br/&gt;
-------------------------------------------------------------------------------------------&lt;br/&gt;
2008-06-10 14:05:56.408 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,main&amp;#93;&lt;/span&gt; (DATABASE = /export/home/tmp/os136789/testingInMyDerbySandbox/12/db_slave/wombat), (DRDAID = &lt;/p&gt;
{2}
&lt;p&gt;), Replication slave mode started successfully for database &apos;/export/home/tmp/os136789/testingInMyDerbySandbox/12/db_slave/wombat&apos;. Connection refused because the database is in replication slave mode. &lt;br/&gt;
Replication slave role was stopped for database &apos;/export/home/tmp/os136789/testingInMyDerbySandbox/12/db_slave/wombat&apos;.&lt;/p&gt;

&lt;p&gt;------------  BEGIN SHUTDOWN ERROR STACK -------------&lt;/p&gt;

&lt;p&gt;ERROR XSLA7: Cannot redo operation null in the log.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:296)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.FileLogger.redo(FileLogger.java:1525)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:920)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:334)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:553)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:553)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:780)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:196)&lt;br/&gt;
	at org.apache.derby.impl.db.SlaveDatabase.bootBasicDatabase(SlaveDatabase.java:424)&lt;br/&gt;
	at org.apache.derby.impl.db.SlaveDatabase.access$000(SlaveDatabase.java:70)&lt;br/&gt;
	at org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread.run(SlaveDatabase.java:311)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: ERROR 08006: Database &apos;&lt;/p&gt;
{0}&apos; shutdown.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveRole(LogToFile.java:5142)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController.stopSlave(SlaveController.java:266)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController.access$500(SlaveController.java:64)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread.run(SlaveController.java:531)&lt;br/&gt;
============= begin nested exception, level (1) ===========&lt;br/&gt;
ERROR 08006: Database &apos;{0}
&lt;p&gt;&apos; shutdown.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.stopReplicationSlaveRole(LogToFile.java:5142)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController.stopSlave(SlaveController.java:266)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController.access$500(SlaveController.java:64)&lt;br/&gt;
	at org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread.run(SlaveController.java:531)&lt;br/&gt;
============= end nested exception, level (1) ===========&lt;/p&gt;


&lt;p&gt;------------  END SHUTDOWN ERROR STACK -------------&lt;/p&gt;</description>
                <environment>HW: 2 X i86pc i386 (AMD Opteron(tm) Processor 252): 2593 MHz, unknown cache. 3968 Megabytes Total Memory.&lt;br/&gt;
OS: Solaris 10 5/08 s10x_u5wos_10 X86 64bits - SunOS 5.10 Generic_127128-11&lt;br/&gt;
JVM: Sun Microsystems Inc.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java version &amp;quot;1.6.0_06&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java(TM) SE Runtime Environment (build 1.6.0_06-b02)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Java HotSpot(TM) Client VM (build 10.0-b22, mixed mode)&lt;br/&gt;
</environment>
        <key id="12398022">DERBY-3719</key>
            <summary>&apos;...replication.buffer.LogBufferFullException&apos; causes failover to fail w/ &apos;XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.&apos;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Jun 2008 07:52:41 +0100</created>
                <updated>Thu, 16 Jul 2009 22:24:27 +0100</updated>
                            <resolved>Tue, 9 Jun 2009 14:25:56 +0100</resolved>
                                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12604140" author="olesolberg" created="Wed, 11 Jun 2008 07:55:12 +0100"  >&lt;p&gt;Full test run log.&lt;/p&gt;</comment>
                            <comment id="12696185" author="kmarsden" created="Mon, 6 Apr 2009 18:22:13 +0100"  >&lt;p&gt;I saw a similar issue in 10.4.2.0 -&amp;gt; 10.5.1.0 hard upgrade testing, which I am assuming is another manifestation of this bug.&lt;br/&gt;
1) testReplication_Local_StateTest_part1(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1)junit.framework.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;...20&amp;gt; but was:&amp;lt;...07&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCTestCase.java:760)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(BaseJDBCTestCase.java:809)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_direct(ReplicationRun.java:1381)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver(ReplicationRun.java:1302)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1.testReplication_Local_StateTest_part1(ReplicationRun_Local_StateTest_part1.java:160)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.ClientDriver.connect(Unknown Source)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:316)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:273)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_direct(ReplicationRun.java:1368)&lt;br/&gt;
	... 28 more&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.&lt;br/&gt;
	at org.apache.derby.client.am.Connection.completeSqlca(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseRdbAccessFailed(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseAccessRdbError(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseACCRDBreply(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.readAccessDatabase(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessRdb(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessRdb(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnect(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowConnect(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection40.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl40.newNetConnection(Unknown Source)&lt;br/&gt;
	... 32 more&lt;/p&gt;
</comment>
                            <comment id="12710013" author="dagw" created="Sat, 16 May 2009 00:12:10 +0100"  >&lt;p&gt;This log from master&apos;s log file shows what happens. The output is&lt;br/&gt;
produced by the patch attached (traceLogShipping):&lt;/p&gt;

&lt;p&gt;@1242410514203 Sending done&lt;br/&gt;
@1242410514205 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242410514206 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242410514204 Sending&lt;br/&gt;
@1242410514208 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242410514211 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242410514216 log buffer full, try to force flush&lt;br/&gt;
@1242410514216 forceflush&lt;br/&gt;
@1242410514265 Sending done&lt;br/&gt;
@1242410514266 log buffer full, force failed&lt;br/&gt;
----  BEGIN REPLICATION ERROR MESSAGE (15.05.09 20:01) ----&lt;br/&gt;
@1242410514267 Sending&lt;br/&gt;
@1242410514286 Sending done&lt;br/&gt;
@1242410514286 Sending&lt;br/&gt;
Exception occurred during log shipping.&lt;br/&gt;
org.apache.derby.impl.store.replication.buffer.LogBufferFullException&lt;br/&gt;
	at org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer.switchDirtyBuffer(ReplicationLogBuffer.java:357)&lt;/p&gt;

&lt;p&gt;The asynchronous log shipper basically does this loops:&lt;/p&gt;

&lt;p&gt;       while (true) &lt;/p&gt;
{
            ship a log chunk
            
            if ! &amp;lt;things are busy&amp;gt;
                wait(shippingInterval)
            fi
      }

&lt;p&gt;From derby.log, we see that the sending of a chunk starts a instant&lt;br/&gt;
4204, and sending is complete at 4265.&lt;/p&gt;

&lt;p&gt;In the meantime, the user thread is busy writing log using&lt;br/&gt;
ReplicationLogBuffer.appendLog. Now, the buffer is getting full as&lt;br/&gt;
seen in the &quot;instant 4208: &amp;gt;= FI_HIGH&quot; (ReplicationLogBuffer calls&lt;br/&gt;
switchDirtyBuffer which will return a free buffer if there is one,&lt;br/&gt;
then it calls MasterController.workToDo to make sure the shipping&lt;br/&gt;
thread knows). &lt;/p&gt;

&lt;p&gt;Notice the send is still waiting to complete.  Now, another log write&lt;br/&gt;
happens, and again, we see this indication that we are close to having&lt;br/&gt;
0 free buffers (instant 4211: &amp;gt;= FI_HIGH). This is the second time workToDo is&lt;br/&gt;
called. In both cases, AsynchronousLogShipper.workToDo does a notify&lt;br/&gt;
to try to wake up the thread on the assumption is may be sleeping in&lt;br/&gt;
the &quot;wait(shippingInterval)&quot; seen above. But in reality, the shipping&lt;br/&gt;
thread is still waiting for the currently active thread to finish its&lt;br/&gt;
sending, so this has no effect.&lt;/p&gt;

&lt;p&gt;Now, have a look at MasterController.appendLog (which calls&lt;br/&gt;
ReplicationLogBuffer.appendLog). Notice that is it gets a&lt;br/&gt;
LogBufferFullException it will try to force the log shipper to flush,&lt;br/&gt;
and then retry the append on the assumption that at least one free&lt;br/&gt;
buffer has been returned to the pool.  Now, have a look at the code of&lt;br/&gt;
ASL.forceFlush (called at instant 4216). What this code does is to try&lt;br/&gt;
to wake up the sleeping shipper thread with the call to&lt;br/&gt;
notify(). Sadly, the shipping thread is still not finished with its&lt;br/&gt;
write (it takes 4265-4204= 61 ms), so the forceflush just returns and&lt;br/&gt;
allows MasterController.appendLog to fail for the second time. And&lt;br/&gt;
this time the LogBufferFullException is the kiss of death (4266 log&lt;br/&gt;
buffer full, force failed).&lt;/p&gt;

&lt;p&gt;Notice how the shipping thread still thinks all is hunky dory, it&lt;br/&gt;
starts a new ship at instant 4267, but, alas it is now too late, since&lt;br/&gt;
the master thread has given up, and started to tear down.&lt;/p&gt;

&lt;p&gt;So, in conclusion, the logic to force log shipping before we attempt a&lt;br/&gt;
retry of the log append is flawed.&lt;/p&gt;</comment>
                            <comment id="12710130" author="dagw" created="Sat, 16 May 2009 19:36:44 +0100"  >&lt;p&gt;Uploading patch derby-3719-1. This moves the actual log send to inside&lt;br/&gt;
the forceFlushSemaphore monitor. The effect of this in the failure&lt;br/&gt;
scenario, (that is, if the user thread called forceFlush after a send&lt;br/&gt;
has been initiated), is to hold back the user thread doing forceFlush&lt;br/&gt;
till the log shipper thread has finished its send. That way, when the&lt;br/&gt;
forceFlush will not return until at least &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ONE sending operation&lt;br/&gt;
has been initiated and completed, ensuring that at least one buffer&lt;br/&gt;
has been returned to the free pool. This in turn leads the 2nd attempt&lt;br/&gt;
(after receiving a LogBufferFullException) to be able to append the&lt;br/&gt;
log in MasterController.appendLog.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; the log shipper thread could possibly race past the user thread&lt;br/&gt;
and send more than once, but that would not be harmful because the&lt;br/&gt;
sending thread would ultimately call notify again, allowing the user&lt;br/&gt;
thread to continue and find free buffers.&lt;/p&gt;

&lt;p&gt;This trace fragment from db_master/derby.log (with patch of trace patch applied) of the master&lt;br/&gt;
in a tight spot (when running ReplicationRun_Local_StateTest_part1), shows &lt;br/&gt;
how the sequence of events change with the patch:&lt;/p&gt;

&lt;p&gt;@1242436667589 Sending&lt;br/&gt;
@1242436667590 Sending done&lt;br/&gt;
@1242436667590 ship sleep 100&lt;br/&gt;
@1242436667667 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242436667668 Sending&lt;br/&gt;
@1242436667668 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242436667670 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242436667673 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242436667676 &amp;gt;= FI_HIGH&lt;br/&gt;
@1242436667679 log buffer full, try to force flush&lt;br/&gt;
@1242436667679 forceflush&lt;br/&gt;
@1242436667695 Sending done&lt;br/&gt;
@1242436667696 Sending&lt;br/&gt;
@1242436667696 Sending done&lt;br/&gt;
@1242436667696 Sending&lt;/p&gt;

&lt;p&gt;Sending takes somewhat long here, (7695 ms - 7668 ms = 27ms) and the&lt;br/&gt;
user thread finds few free buffers left, and then finally none and&lt;br/&gt;
goes on to force a flush. But with the patch, the call to forceflush&lt;br/&gt;
at instant 7679 must wait till the shiper thread&apos;s send is done; at&lt;br/&gt;
instant 7695. Since the shipper thread has held the monitor since&lt;br/&gt;
before the instant it released a free buffer (implying a the user&lt;br/&gt;
thread can not have been able to grab it yet!), by the time the user&lt;br/&gt;
thread gets the monitor on forceFlushSemaphore, the sender is done,&lt;br/&gt;
and a free buffer is guaranteed to have been returned to the pool.&lt;/p&gt;

&lt;p&gt;I have run ReplicationRun_Local_StateTest_part1 now for 24 hours&lt;br/&gt;
without seeing a problem with it (ca 350 runs). Running full&lt;br/&gt;
regressions now.&lt;/p&gt;

&lt;p&gt;Ready for review.&lt;/p&gt;</comment>
                            <comment id="12717667" author="dagw" created="Tue, 9 Jun 2009 14:10:06 +0100"  >&lt;p&gt;Committed patch derby-3719-1 as svn 782991. &lt;/p&gt;</comment>
                            <comment id="12717671" author="dagw" created="Tue, 9 Jun 2009 14:25:22 +0100"  >&lt;p&gt;Backported this fix to 10.5 branch; committed as svn 782997.&lt;br/&gt;
Resolving.&lt;/p&gt;
</comment>
                            <comment id="12727200" author="olesolberg" created="Sat, 4 Jul 2009 08:42:59 +0100"  >&lt;p&gt;Not seen since commit, so closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12425533">DERBY-4231</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12397515">DERBY-3709</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12394296">DERBY-3632</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12383807" name="12.tar.gz" size="661461" author="olesolberg" created="Wed, 11 Jun 2008 07:55:12 +0100"/>
                            <attachment id="12408320" name="derby-3719-1.diff" size="742" author="dagw" created="Sat, 16 May 2009 19:36:44 +0100"/>
                            <attachment id="12408289" name="traceLogShipping.diff" size="7786" author="dagw" created="Sat, 16 May 2009 00:12:10 +0100"/>
                            <attachment id="12408290" name="traceLogShipping.stat" size="449" author="dagw" created="Sat, 16 May 2009 00:12:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Apr 2009 17:22:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23808</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0s3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38369</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>