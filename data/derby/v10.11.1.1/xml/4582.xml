<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4582/DERBY-4582.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4582] Timestamps inserted with GMT calendar are 1 hour later when subsequently read with GMT calendar (Server Mode Only).</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4582</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This issue only appears to happen in Network Server/Client mode.  Embedded mode does not have the issue.&lt;/p&gt;

&lt;p&gt;My timezone is American/Chicago.  Saving timestamps with values for the 6 hours prior to DST start are being read back in as values 1 hour later than written.  (I believe the issue happens on the write because values written in Network Server/Client mode and read in Embedded mode are incorrect, while values written and read in Embedded mode are corect.)&lt;/p&gt;

&lt;p&gt;Values between 3/13/2010 - 20:00 CST and 3/14/2010 - 02:00 CST will return timstamps 1 hour off.  The &quot;setTimestamp&quot; method is being passed a GMT calendar with the timestamp:&lt;/p&gt;

&lt;p&gt;I have a complete test class I can attach, but here is a summary:&lt;/p&gt;

&lt;p&gt;private final TimeZone gmtTZ = TimeZone.getTimeZone(&quot;GMT&quot;);&lt;br/&gt;
private final Calendar gmtCal = Calendar.getInstance(gmtTZ);&lt;br/&gt;
...&lt;br/&gt;
String sql = &quot;INSERT INTO app.dst_test (id, gmt_timestamp, milli_time) VALUES(?,?,?)&quot;;&lt;br/&gt;
String sql2 = &quot;SELECT * from app.dst_test where id=?&quot;;&lt;br/&gt;
...&lt;br/&gt;
ps.setTimestamp(2, ts, gmtCal);&lt;br/&gt;
...&lt;br/&gt;
Timestamp tsRead = rs.getTimestamp(&quot;gmt_timestamp&quot;, gmtCal);&lt;br/&gt;
...&lt;/p&gt;</description>
                <environment>Windows XP Professional Version 2002 Service Pack 3,  Central Standard Time Zone (America/Chicago)</environment>
        <key id="12459154">DERBY-4582</key>
            <summary>Timestamps inserted with GMT calendar are 1 hour later when subsequently read with GMT calendar (Server Mode Only).</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="keith13660">Keith Kruse</reporter>
                        <labels>
                            <label>derby_backport_reject_10_5</label>
                            <label>dst</label>
                            <label>gmt</label>
                            <label>settimestamp</label>
                            <label>timestamp</label>
                    </labels>
                <created>Mon, 15 Mar 2010 15:14:04 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:32 +0100</updated>
                            <resolved>Tue, 20 Jul 2010 04:25:38 +0100</resolved>
                                    <version>10.5.3.0</version>
                                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12845358" author="keith13660" created="Mon, 15 Mar 2010 15:28:13 +0000"  >&lt;p&gt;Thanks for looking at this!&lt;/p&gt;

&lt;p&gt;The test class has a &quot;dbmode&quot; enum variable that allows it to run in Client or Embedded mode.  The error only happend in Client mode.&lt;/p&gt;

&lt;p&gt;I run the test in the America/Chicago time zone.  The test timestamp data have to change to test in other timezones.&lt;/p&gt;

&lt;p&gt;I am including two sets of output from the test.  The first set shows failure in client mode (search for *FAILED).  The second set shows success in embedded mode.&lt;/p&gt;

&lt;p&gt;Database Mode:   CLIENT&lt;br/&gt;
Local Time Zone: Central Standard Time&lt;br/&gt;
Using Client Driver: org.apache.derby.jdbc.ClientDriver&lt;br/&gt;
Using Client URL: jdbc:derby://localhost:1527/C:\temp\dst_test_db;user=app;password=app;create=true&lt;br/&gt;
Dropping Table...&lt;br/&gt;
Creating Table...&lt;br/&gt;
Mar 13, 2010 10:01:00 PM GMT	(Mar 13, 2010 4:01:00 PM CST)	ok	-&amp;gt; (Mar 13, 2010 10:01:00 PM GMT)	Wrote: 1268517660000	Read: 1268517660000&lt;br/&gt;
Mar 13, 2010 11:01:00 PM GMT	(Mar 13, 2010 5:01:00 PM CST)	ok	-&amp;gt; (Mar 13, 2010 11:01:00 PM GMT)	Wrote: 1268521260000	Read: 1268521260000&lt;br/&gt;
Mar 14, 2010 12:01:00 AM GMT	(Mar 13, 2010 6:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 12:01:00 AM GMT)	Wrote: 1268524860000	Read: 1268524860000&lt;br/&gt;
Mar 14, 2010 1:01:00 AM GMT	(Mar 13, 2010 7:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 1:01:00 AM GMT)	Wrote: 1268528460000	Read: 1268528460000&lt;br/&gt;
Mar 14, 2010 2:01:00 AM GMT	(Mar 13, 2010 8:01:00 PM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 3:01:00 AM GMT)	Wrote: 1268532060000	Read: 1268535660000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 3:01:00 AM GMT	(Mar 13, 2010 9:01:00 PM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 4:01:00 AM GMT)	Wrote: 1268535660000	Read: 1268539260000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 4:01:00 AM GMT	(Mar 13, 2010 10:01:00 PM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 5:01:00 AM GMT)	Wrote: 1268539260000	Read: 1268542860000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 5:01:00 AM GMT	(Mar 13, 2010 11:01:00 PM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 6:01:00 AM GMT)	Wrote: 1268542860000	Read: 1268546460000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 6:01:00 AM GMT	(Mar 14, 2010 12:01:00 AM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 7:01:00 AM GMT)	Wrote: 1268546460000	Read: 1268550060000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 7:01:00 AM GMT	(Mar 14, 2010 1:01:00 AM CST)	*FAILED	-&amp;gt; (Mar 14, 2010 8:01:00 AM GMT)	Wrote: 1268550060000	Read: 1268553660000 Difference: 3600000&lt;br/&gt;
Mar 14, 2010 8:01:00 AM GMT	(Mar 14, 2010 3:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 8:01:00 AM GMT)	Wrote: 1268553660000	Read: 1268553660000&lt;br/&gt;
Mar 14, 2010 9:01:00 AM GMT	(Mar 14, 2010 4:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 9:01:00 AM GMT)	Wrote: 1268557260000	Read: 1268557260000&lt;br/&gt;
Mar 14, 2010 10:01:00 AM GMT	(Mar 14, 2010 5:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 10:01:00 AM GMT)	Wrote: 1268560860000	Read: 1268560860000&lt;br/&gt;
Dropping Table...&lt;/p&gt;




&lt;p&gt;Database Mode:   EMBEDDED&lt;br/&gt;
Local Time Zone: Central Standard Time&lt;br/&gt;
Using Embedded Driver: org.apache.derby.jdbc.EmbeddedDriver&lt;br/&gt;
Using Embedded URL: jdbc:derby:directory:C:\temp\dst_test_db;create=true&lt;br/&gt;
Dropping Table...&lt;br/&gt;
Creating Table...&lt;br/&gt;
Mar 13, 2010 10:01:00 PM GMT	(Mar 13, 2010 4:01:00 PM CST)	ok	-&amp;gt; (Mar 13, 2010 10:01:00 PM GMT)	Wrote: 1268517660000	Read: 1268517660000&lt;br/&gt;
Mar 13, 2010 11:01:00 PM GMT	(Mar 13, 2010 5:01:00 PM CST)	ok	-&amp;gt; (Mar 13, 2010 11:01:00 PM GMT)	Wrote: 1268521260000	Read: 1268521260000&lt;br/&gt;
Mar 14, 2010 12:01:00 AM GMT	(Mar 13, 2010 6:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 12:01:00 AM GMT)	Wrote: 1268524860000	Read: 1268524860000&lt;br/&gt;
Mar 14, 2010 1:01:00 AM GMT	(Mar 13, 2010 7:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 1:01:00 AM GMT)	Wrote: 1268528460000	Read: 1268528460000&lt;br/&gt;
Mar 14, 2010 2:01:00 AM GMT	(Mar 13, 2010 8:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 2:01:00 AM GMT)	Wrote: 1268532060000	Read: 1268532060000&lt;br/&gt;
Mar 14, 2010 3:01:00 AM GMT	(Mar 13, 2010 9:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 3:01:00 AM GMT)	Wrote: 1268535660000	Read: 1268535660000&lt;br/&gt;
Mar 14, 2010 4:01:00 AM GMT	(Mar 13, 2010 10:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 4:01:00 AM GMT)	Wrote: 1268539260000	Read: 1268539260000&lt;br/&gt;
Mar 14, 2010 5:01:00 AM GMT	(Mar 13, 2010 11:01:00 PM CST)	ok	-&amp;gt; (Mar 14, 2010 5:01:00 AM GMT)	Wrote: 1268542860000	Read: 1268542860000&lt;br/&gt;
Mar 14, 2010 6:01:00 AM GMT	(Mar 14, 2010 12:01:00 AM CST)	ok	-&amp;gt; (Mar 14, 2010 6:01:00 AM GMT)	Wrote: 1268546460000	Read: 1268546460000&lt;br/&gt;
Mar 14, 2010 7:01:00 AM GMT	(Mar 14, 2010 1:01:00 AM CST)	ok	-&amp;gt; (Mar 14, 2010 7:01:00 AM GMT)	Wrote: 1268550060000	Read: 1268550060000&lt;br/&gt;
Mar 14, 2010 8:01:00 AM GMT	(Mar 14, 2010 3:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 8:01:00 AM GMT)	Wrote: 1268553660000	Read: 1268553660000&lt;br/&gt;
Mar 14, 2010 9:01:00 AM GMT	(Mar 14, 2010 4:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 9:01:00 AM GMT)	Wrote: 1268557260000	Read: 1268557260000&lt;br/&gt;
Mar 14, 2010 10:01:00 AM GMT	(Mar 14, 2010 5:01:00 AM CDT)	ok	-&amp;gt; (Mar 14, 2010 10:01:00 AM GMT)	Wrote: 1268560860000	Read: 1268560860000&lt;br/&gt;
Dropping Table...&lt;/p&gt;
</comment>
                            <comment id="12845392" author="bryanpendleton" created="Mon, 15 Mar 2010 16:15:40 +0000"  >&lt;p&gt;Certain JDK implementations had out-of-date DST tables, with all the DST changes over the last few years.&lt;/p&gt;

&lt;p&gt;Have you verified that all of your JDK installations are fully patched?&lt;/p&gt;</comment>
                            <comment id="12845406" author="keith13660" created="Mon, 15 Mar 2010 16:58:53 +0000"  >&lt;p&gt;I believe so:&lt;/p&gt;

&lt;p&gt;C:\tzupdater-1.3.25-2009u&amp;gt;java -jar tzupdater.jar -u&lt;/p&gt;

&lt;p&gt;C:\tzupdater-1.3.25-2009u&amp;gt;java -jar tzupdater.jar -t -v&lt;br/&gt;
java.home: C:\Program Files\Java\jre6&lt;br/&gt;
java.vendor: Sun Microsystems Inc.&lt;br/&gt;
java.version: 1.6.0_18&lt;br/&gt;
JRE time zone data version: tzdata2009u&lt;br/&gt;
Embedded time zone data version: tzdata2009u&lt;br/&gt;
Validating the time zone data&lt;br/&gt;
Validation complete&lt;/p&gt;

&lt;p&gt;===   Starting Derby Server  ===&lt;/p&gt;

&lt;p&gt;C:\db-derby-10.5.3\bin&amp;gt;java -version&lt;br/&gt;
java version &quot;1.6.0_18&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_18-b07)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)&lt;/p&gt;

&lt;p&gt;C:\db-derby-10.5.3\bin&amp;gt;startNetworkServer&lt;br/&gt;
2010-03-15 16:49:22.094 GMT : Security manager installed using the Basic server security policy.&lt;br/&gt;
2010-03-15 16:49:22.501 GMT : Apache Derby Network Server - 10.5.3.0 - (802917) started and ready to accept connections on port 1527&lt;/p&gt;

&lt;p&gt;===   Logging Java Runtime in test class===&lt;/p&gt;

&lt;p&gt;I added this to my test class:&lt;/p&gt;

&lt;p&gt;   log(&quot;Java Runtime Version: &quot; + System.getProperty(&quot;java.runtime.version&quot;));&lt;br/&gt;
   log(&quot;Java Path: &quot; + System.getProperty(&quot;sun.boot.library.path&quot;));&lt;/p&gt;

&lt;p&gt;and I get:&lt;/p&gt;

&lt;p&gt;   Java Runtime Version: 1.6.0_18-b07&lt;br/&gt;
   Java Path: C:\Program Files\Java\jre6\bin&lt;/p&gt;</comment>
                            <comment id="12854404" author="knutanders" created="Wed, 7 Apr 2010 10:34:34 +0100"  >&lt;p&gt;I see this too when I set the default timezone of my JVM to America/Chicago and run the test class. I also see the problem when I run with my local timezone (Central European time) and adjust the dates in the test to match the DST change in that timezone.&lt;/p&gt;

&lt;p&gt;If I keep the table populated by the client/server test and run the embedded test against it, I also see the problem in the embedded test, so it seems that embedded and client actually end up writing different dates to the database.&lt;/p&gt;

&lt;p&gt;If I do it the other way around, and run client/server tests against a table created by the embedded test, I still see the problem, but the number of discrepancies has been reduced from six to one. So it looks like we also have an issue with reading the values from the database.&lt;/p&gt;</comment>
                            <comment id="12854866" author="knutanders" created="Thu, 8 Apr 2010 09:36:41 +0100"  >&lt;p&gt;I think I see what&apos;s going on now. The setTimestamp() method in the&lt;br/&gt;
client driver, and its siblings setTime() and setDate(), use the&lt;br/&gt;
supplied Calendar object to determine which timezone to convert the&lt;br/&gt;
timestamp to before storing it. The way it does this, is by adjusting&lt;br/&gt;
the timestamp by the same amount of time as the timezone difference&lt;br/&gt;
between the supplied calendar and the default calendar.&lt;/p&gt;

&lt;p&gt;Although this adjustment will give the desired effect most of the&lt;br/&gt;
time, it is broken because it actually changes the timestamp to point&lt;br/&gt;
to a different point in time. Therefore it will miss on the exact time&lt;br/&gt;
of the DST changes with a couple of hours and we see these&lt;br/&gt;
discrepancies. We should only use the calendar to change the&lt;br/&gt;
presentation of timestamp, not to change its value.&lt;/p&gt;

&lt;p&gt;I did the following experiment with the client code:&lt;/p&gt;

&lt;p&gt;  1) removed the code that adjusts the timestamp value&lt;/p&gt;

&lt;p&gt;  2) passed the calendar object down to the code that writes the&lt;br/&gt;
     timestamp to the network stream&lt;/p&gt;

&lt;p&gt;  3) used the calendar object to extract the timezone-adjusted date&lt;br/&gt;
     and time out of the timezone&lt;/p&gt;

&lt;p&gt;Since in (3) we now have the unmodified timestamp value, there&apos;s no&lt;br/&gt;
skew that confuses the conversion to the requested timezone, not even&lt;br/&gt;
around time of the DST change.&lt;/p&gt;

&lt;p&gt;So with these changes, the correct values were sent from the client to&lt;br/&gt;
the server. However, there was still one discrepancy between the&lt;br/&gt;
values sent from the client and what&apos;s actually stored (this is an&lt;br/&gt;
improvement, though, since there were six discrepancies without the&lt;br/&gt;
change).&lt;/p&gt;

&lt;p&gt;This last discrepancy was caused by the handling of the timestamp on&lt;br/&gt;
the server. The server does not use any Calendar object explicitly&lt;br/&gt;
when parsing what it gets from the client or when storing the&lt;br/&gt;
timestamp in the database. The default timezone will therefore be used&lt;br/&gt;
in the handling of the timestamp. So when the client sends the&lt;br/&gt;
timestamp 2010-03-14 02:01:00, which is a perfectly fine timestamp in&lt;br/&gt;
the GMT timezone and many other timezones, the server (or more&lt;br/&gt;
precisely, Timestamp.valueOf(String)) thinks the timestamp refers to a&lt;br/&gt;
point in time within the &quot;lost&quot; hour in the America/Chicago timezone,&lt;br/&gt;
and it silently adjusts it to 03:01:00 so that it&apos;s valid in that&lt;br/&gt;
timezone too.&lt;/p&gt;

&lt;p&gt;Since we don&apos;t store the timezone together with the timestamp, it&lt;br/&gt;
doesn&apos;t matter much which timezone the server uses when handling it,&lt;br/&gt;
as long as it&apos;s consistent. However, since timezones that observe DST&lt;br/&gt;
lose one hour when switching to DST, calendars using that timezone&lt;br/&gt;
cannot reliably be used to represent times in other timezones. If the&lt;br/&gt;
server instead had used a timezone that doesn&apos;t observe DST, like GMT,&lt;br/&gt;
the timestamp wouldn&apos;t change on its way from the wire to the database&lt;br/&gt;
even if the timestamp on the wire is not a valid time in the local&lt;br/&gt;
timezone.&lt;/p&gt;

&lt;p&gt;With this in mind, I extended my experiment with the following changes&lt;br/&gt;
in the server code (DRDAConnThread):&lt;/p&gt;

&lt;p&gt;  4) when reading the (timezone-less) timestamp string sent from the&lt;br/&gt;
     client, put the values into a Calendar object with timezone set&lt;br/&gt;
     to GMT, and generate the timestamp from that Calendar&lt;/p&gt;

&lt;p&gt;  5) use setTimestamp(int,Timestamp,Calendar) instead of&lt;br/&gt;
     setTimestamp(int,Timestamp) when passing the value to the&lt;br/&gt;
     embedded driver, with the Calendar&apos;s timezone set to GMT&lt;/p&gt;

&lt;p&gt;This took care of the last discrepancy and made the client/server&lt;br/&gt;
setup store the exact same values on disk as the embedded setup did.&lt;/p&gt;

&lt;p&gt;However, there&apos;s still one error when reading the values back to the&lt;br/&gt;
client, as noted in a previous comment about the incorrect reading of&lt;br/&gt;
the values generated by the embedded test. I haven&apos;t investigated this&lt;br/&gt;
problem yet, but I assume it&apos;s similar to the problems described&lt;br/&gt;
above.&lt;/p&gt;</comment>
                            <comment id="12854868" author="knutanders" created="Thu, 8 Apr 2010 09:48:41 +0100"  >&lt;p&gt;Attaching a patch that shows the experiment I ran (calendar.diff) where we let the Calendar objects do the conversion to the correct timezone instead of using our own homegrown algorithm. The patch is &lt;b&gt;not&lt;/b&gt; intended for commit.&lt;/p&gt;</comment>
                            <comment id="12854916" author="knutanders" created="Thu, 8 Apr 2010 13:29:09 +0100"  >&lt;p&gt;Attaching a patch with a JUnit regression test that exposes this bug. The test runs cleanly with the embedded driver and fails with the client driver. The patch also adds a new decorator that allows you to change the default timezone for a test suite (this decorator is used to force the test to use the America/Chicago timezone regardless of the local timezone).&lt;/p&gt;</comment>
                            <comment id="12855745" author="knutanders" created="Sun, 11 Apr 2010 17:26:23 +0100"  >&lt;p&gt;Attaching an updated patch for the JUnit test case. In the new patch, we also test that we get the expected results when setTimestamp() is used to set a DATE or TIME parameter, and when getDate() or getTime() is used to fetch a TIMESTAMP column. The test still runs cleanly with the embedded driver and fails with the client driver.&lt;/p&gt;

&lt;p&gt;I have committed the updated test case to trunk with revision 932930, but it&apos;s not yet enabled in any test suite.&lt;/p&gt;</comment>
                            <comment id="12856436" author="knutanders" created="Tue, 13 Apr 2010 15:34:25 +0100"  >&lt;p&gt;Attaching a new patch (upd-rs-test.diff) that makes DaylightSavingTest test yet another code path that&apos;s will be affected by the fix. The new test case uses an updatable result set to set the time values. The point of the test case is to verify that getDate/Time/Timestamp after updateDate/Time/Timestamp is able to do the timezone conversion correctly. The getters in the client result sets follow a different path to fetch the values from a separate data structure if the values have been updated locally.&lt;/p&gt;

&lt;p&gt;DaylightSavingTest is still not enabled in suites.All, as it only runs cleanly with the embedded driver.&lt;/p&gt;

&lt;p&gt;Committed revision 933637.&lt;/p&gt;

&lt;p&gt;I&apos;ll hold off posting a fix for this issue until the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2602&quot; title=&quot;TIMESTAMP value is truncated  when return to client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2602&quot;&gt;&lt;del&gt;DERBY-2602&lt;/del&gt;&lt;/a&gt; has been committed, as these two issues touch many of the same methods.&lt;/p&gt;</comment>
                            <comment id="12856901" author="knutanders" created="Wed, 14 Apr 2010 14:57:20 +0100"  >&lt;p&gt;The fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2602&quot; title=&quot;TIMESTAMP value is truncated  when return to client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2602&quot;&gt;&lt;del&gt;DERBY-2602&lt;/del&gt;&lt;/a&gt; went in yesterday, so it should be OK to start working on the fix for this issue. It looks to me as if there are four bugs in the timestamp handling (and some of these also apply to date and time) that need to be solved:&lt;/p&gt;

&lt;p&gt;1) The time skew issue that makes the client miss on the exact time of the DST switch when converting from local tz to GMT&lt;/p&gt;

&lt;p&gt;2) Timestamps that are not valid in the local timezone are silently changed when the server reads them from the client&lt;/p&gt;

&lt;p&gt;3) Timestamps that are not valid in the local timezone are silently changed when the server reads them from the database&lt;/p&gt;

&lt;p&gt;4) Timestamps that are not valid in the local timezone are silently changed when the client reads them from the server&lt;/p&gt;

&lt;p&gt;Fixing (1) will make the number of discrepancies in the original repro go down from six to one. But to get rid of the last discrepancy, we have to fix all of (2), (3) and (4).&lt;/p&gt;</comment>
                            <comment id="12857249" author="knutanders" created="Thu, 15 Apr 2010 10:51:03 +0100"  >&lt;p&gt;When I made some changes on the server to fix (3), I touched an area that was used to handle both CallableStatements and ResultSets. However, because of a bug (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4615&quot; title=&quot;EmbedCallableStatement ignores Calendar in getDate, getTime and getTimestamp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4615&quot;&gt;&lt;del&gt;DERBY-4615&lt;/del&gt;&lt;/a&gt;) in the embedded implementation of CallableStatement.getTimestamp(int,Calendar) and friends, CallableStatements will only see half of the fix, and fixing the server code will therefore make the situation worse for CallableStatements until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4615&quot; title=&quot;EmbedCallableStatement ignores Calendar in getDate, getTime and getTimestamp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4615&quot;&gt;&lt;del&gt;DERBY-4615&lt;/del&gt;&lt;/a&gt;. I think we should try to address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4615&quot; title=&quot;EmbedCallableStatement ignores Calendar in getDate, getTime and getTimestamp&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4615&quot;&gt;&lt;del&gt;DERBY-4615&lt;/del&gt;&lt;/a&gt; before we attempt to fix (3), so that we don&apos;t introduce regressions for CallableStatements.&lt;/p&gt;</comment>
                            <comment id="12858454" author="knutanders" created="Mon, 19 Apr 2010 12:02:27 +0100"  >&lt;p&gt;Attached is a patch (derby-4582-1a-client-send.diff) that addresses&lt;br/&gt;
issue (1) described above. That is, sending of date, time and&lt;br/&gt;
timestamp from the client.&lt;/p&gt;

&lt;p&gt;It makes the following changes:&lt;/p&gt;

&lt;p&gt;A       java/client/org/apache/derby/client/am/DateTimeValue.java&lt;/p&gt;

&lt;p&gt;New class that represents a Time, Date or Timestamp in a specified&lt;br/&gt;
calendar. This class preserves the representation of the time in the&lt;br/&gt;
specified calendar so that it&apos;s not affected by oddities in the local&lt;br/&gt;
timezone.&lt;/p&gt;

&lt;p&gt;M       java/client/org/apache/derby/client/am/PreparedStatement.java&lt;/p&gt;

&lt;p&gt;Use the new DateTimeValue class to represent values set by setDate(),&lt;br/&gt;
setTime() and setTimestamp().&lt;/p&gt;

&lt;p&gt;M       java/client/org/apache/derby/client/net/NetStatementRequest.java&lt;/p&gt;

&lt;p&gt;Accept that date, time and timestamp are also set as DateTimeValue,&lt;br/&gt;
and convert values that still are represented by&lt;br/&gt;
java.sql.&lt;/p&gt;
{Date,Time,Timestamp} to DateTimeValue using the default&lt;br/&gt;
calendar.&lt;br/&gt;
&lt;br/&gt;
M       java/client/org/apache/derby/client/am/DateTime.java&lt;br/&gt;
M       java/client/org/apache/derby/client/net/Request.java&lt;br/&gt;
&lt;br/&gt;
Change signatures for the methods that write dates and times to expect&lt;br/&gt;
DateTimeValue instead of java.sql.{Date,Time,Timestamp}
&lt;p&gt;.&lt;/p&gt;


&lt;p&gt;All the regression tests ran cleanly with the patch.&lt;/p&gt;

&lt;p&gt;The patch reduces the number of failures from six to one in the&lt;br/&gt;
original repro. It makes the client driver send the correct values to&lt;br/&gt;
the server for all the timestamps, but because of (2) one of them is&lt;br/&gt;
stored incorrectly in the database.&lt;/p&gt;

&lt;p&gt;One thing to note is that the patch now makes the client driver create&lt;br/&gt;
a new default calendar instance object each time one of the setters&lt;br/&gt;
with no calendar argument is called. We could easily cache a default&lt;br/&gt;
calendar instance in PreparedStatement to prevent this (like the&lt;br/&gt;
embedded driver already does), but in order to keep the patches&lt;br/&gt;
smaller and easier to review, I&apos;d like to postpone that optimization&lt;br/&gt;
until after the bug has been fixed.&lt;/p&gt;

&lt;p&gt;On the bright side, the methods that take calendar arguments used to&lt;br/&gt;
create two calendar instances, but now they don&apos;t create any.&lt;/p&gt;</comment>
                            <comment id="12858815" author="knutanders" created="Tue, 20 Apr 2010 11:57:19 +0100"  >&lt;p&gt;I committed the 1a patch, revision 935868.&lt;/p&gt;</comment>
                            <comment id="12858882" author="knutanders" created="Tue, 20 Apr 2010 14:39:50 +0100"  >&lt;p&gt;I went on to working on issue (2). I had to make the server use the timestamp methods that take a Calendar argument. However, that exposed the bug &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4621&quot; title=&quot;Invalid conversion from Timestamp to String when calling setTimestamp() with Calendar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4621&quot;&gt;&lt;del&gt;DERBY-4621&lt;/del&gt;&lt;/a&gt;, which made ParameterMappingTest fail. So it seems there&apos;s yet another bug that needs to be addressed before we can make the final changes to this one.&lt;/p&gt;</comment>
                            <comment id="12858953" author="knutanders" created="Tue, 20 Apr 2010 17:20:53 +0100"  >&lt;p&gt;Attached is a patch that addresses issue (2), when the server is receiving timestamps (or dates or times) from the client. The patch makes the server use the GMT timezone instead of the local timezone when it parses the timestamps, so that there are no holes in the range of valid values. With this patch, the repro still has one failure (because of issue 3 and 4), but now all the values are stored correctly in the database.&lt;/p&gt;

&lt;p&gt;When running the regression tests, ParameterMappingTest fails because the new code path in the server triggers &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4621&quot; title=&quot;Invalid conversion from Timestamp to String when calling setTimestamp() with Calendar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4621&quot;&gt;&lt;del&gt;DERBY-4621&lt;/del&gt;&lt;/a&gt;. The 2a patch should therefore not be committed before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4621&quot; title=&quot;Invalid conversion from Timestamp to String when calling setTimestamp() with Calendar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4621&quot;&gt;&lt;del&gt;DERBY-4621&lt;/del&gt;&lt;/a&gt; has been solved. I&apos;m still attaching the patch here and setting the patch available flag.&lt;/p&gt;</comment>
                            <comment id="12859265" author="knutanders" created="Wed, 21 Apr 2010 10:17:50 +0100"  >&lt;p&gt;Committed the 2a patch, revision 936218.&lt;/p&gt;</comment>
                            <comment id="12859742" author="knutanders" created="Thu, 22 Apr 2010 09:34:07 +0100"  >&lt;p&gt;The attached patch derby-4582-3a-server-send.diff modifies DRDAConnThread to address issue (3). It makes the server use a GMT calendar when reading TIME, DATE or TIMESTAMP values out of the database, and uses the same GMT calendar to format the string representation that it sends to the client. This way, the value read from the database is not silently changed if it happens to represent a time that is not valid in the local time zone.&lt;/p&gt;

&lt;p&gt;With this patch, the values are sent correctly from the client, stored correctly in the database and sent correctly back to the client. However, because of issue (4), there&apos;s still one value that&apos;s returned one hour off at the client.&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly with this patch.&lt;/p&gt;</comment>
                            <comment id="12860156" author="knutanders" created="Fri, 23 Apr 2010 08:30:51 +0100"  >&lt;p&gt;Committed the 3a patch with revision 937170.&lt;/p&gt;</comment>
                            <comment id="12860907" author="knutanders" created="Mon, 26 Apr 2010 13:29:23 +0100"  >&lt;p&gt;Here&apos;s a patch to address issue (4), derby-4582-4a-client-receive.diff.&lt;/p&gt;

&lt;p&gt;The patch makes the client driver use the specified calendar object&lt;br/&gt;
when parsing the values received from the server. With this patch, the&lt;br/&gt;
original repro runs cleanly, and so does all the test cases in&lt;br/&gt;
DaylightSavingTest. I am currently running the rest of the regression&lt;br/&gt;
tests.&lt;/p&gt;

&lt;p&gt;More details about the changes:&lt;/p&gt;

&lt;p&gt;M       java/client/org/apache/derby/client/am/CrossConverters.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed some method signatures to allow passing Calendar objects&lt;br/&gt;
  further down.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Made date_valueOf(), time_valueOf() and timestamp_valueOf() use a&lt;br/&gt;
  calendar when parsing the strings&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M       java/client/org/apache/derby/client/am/Cursor.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Made the getters take a calendar and pass it to the parsing methods&lt;br/&gt;
  in am.DateTime instead of passing an instance of the default&lt;br/&gt;
  calendar&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M       java/client/org/apache/derby/client/am/ResultSet.java&lt;br/&gt;
M       java/client/org/apache/derby/client/am/CallableStatement.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Passed the calendar from getDate, getTime, getTimestamp to the&lt;br/&gt;
  getters in am.Cursor&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/_Suite.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Enabled DaylightSavingTest as part of suites.All&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12860959" author="knutanders" created="Mon, 26 Apr 2010 16:37:13 +0100"  >&lt;p&gt;All the regression tests ran cleanly with the 4a patch.&lt;/p&gt;</comment>
                            <comment id="12861452" author="knutanders" created="Tue, 27 Apr 2010 17:58:30 +0100"  >&lt;p&gt;Committed 4a to trunk with revision 938547.&lt;/p&gt;

&lt;p&gt;All the patches up to 3a were committed before the 10.6 branch was created and are included in the 10.6.1.0 release candidate. The 4a patch is not on the 10.6 branch yet, but I intend to back-port it in a couple of days if the nightly regression tests don&apos;t show any problems.&lt;/p&gt;

&lt;p&gt;I think there still are some outstanding issues. I&apos;ll file separate JIRAs for those so that we can resolve this one.&lt;/p&gt;</comment>
                            <comment id="12861478" author="knutanders" created="Tue, 27 Apr 2010 19:07:28 +0100"  >&lt;p&gt;Some of the code added in the 4a patch wasn&apos;t exercised by any of the existing tests, so of course it contained a bug. I noticed that DaylightSavingTest failed if I changed it to insert the values into VARCHAR columns instead of TIMESTAMP, TIME and DATE. The problem was with the method in CrossConverters that parses the date portion of a DATE or a TIMESTAMP when converting from a VARCHAR value. It didn&apos;t take into account that java.util.Calendar counts months from 0.&lt;/p&gt;

&lt;p&gt;The attached patch adds test cases that test conversion between VARCHAR and date/time values in DaylightSavingTest, and fixes the off-by-one-month bug.&lt;/p&gt;

&lt;p&gt;Running the rest of the regression tests now.&lt;/p&gt;</comment>
                            <comment id="12861689" author="knutanders" created="Wed, 28 Apr 2010 07:29:27 +0100"  >&lt;p&gt;All tests passed. Committed patch 5a with revision 938796.&lt;/p&gt;</comment>
                            <comment id="12862130" author="knutanders" created="Thu, 29 Apr 2010 09:48:27 +0100"  >&lt;p&gt;The JUnit test case fails on the small device platforms because it uses some java.util.Date methods that are not part of the Foundation Profile 1.1 API. The attached patch (derby-4582-6a-javame.diff) makes the test use java.util.Calendar to extract fields from dates instead of the unsupported methods.&lt;/p&gt;

&lt;p&gt;Committed revision 939231.&lt;/p&gt;</comment>
                            <comment id="12863355" author="knutanders" created="Mon, 3 May 2010 15:02:50 +0100"  >&lt;p&gt;Merged the last three fixes to 10.6 and committed revision 940460.&lt;br/&gt;
Marking as resolved.&lt;/p&gt;</comment>
                            <comment id="12884444" author="kmarsden" created="Thu, 1 Jul 2010 22:57:54 +0100"  >&lt;p&gt;reopen for 10.5 back port&lt;/p&gt;</comment>
                            <comment id="12888168" author="mamtas" created="Wed, 14 Jul 2010 04:28:11 +0100"  >&lt;p&gt;Will work on backporting it to 10.5&lt;/p&gt;</comment>
                            <comment id="12888197" author="mamtas" created="Wed, 14 Jul 2010 06:06:29 +0100"  >&lt;p&gt;Sorry, didn&apos;t notice that Lily had already assigned this jira to herself for backporting. I have taken my name off of this jira.&lt;/p&gt;</comment>
                            <comment id="12888203" author="lilywei" created="Wed, 14 Jul 2010 06:35:18 +0100"  >&lt;p&gt;Don&apos;t worry about it, Mamta. Yes, I will back port this to 10.5. &lt;/p&gt;</comment>
                            <comment id="12889010" author="lilywei" created="Fri, 16 Jul 2010 06:02:21 +0100"  >&lt;p&gt;Wow! Porting to 10.5 for this issue is a little bit hairy. From reading all the comments, I figure I might only need to port changelist 940460.&lt;br/&gt;
After executing &apos;svn merge -c940460 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/branches/10.6/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/branches/10.6/&lt;/a&gt;&apos;, I was able to compile 10.5 branch. Yeah! However, running DaylightSavingTest failed with the following message:&lt;br/&gt;
1) testConversionToGMTAroundDSTChange(org.apache.derbyTesting.functionTests.test&lt;br/&gt;
s.jdbcapi.DaylightSavingTest)junit.framework.AssertionFailedError: TS expected:&amp;lt;&lt;br/&gt;
2010-03-13 20:01:00.0&amp;gt; but was:&amp;lt;2010-03-13 21:01:00.0&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.DaylightSavingTes&lt;br/&gt;
t.testConversionToGMTAroundDSTChange(DaylightSavingTest.java:129)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;I am thinking I will port more changes to try to fix this issue.&lt;br/&gt;
I port changelist 936218 and 937170 with comment &apos;svn merge -c936218 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&apos; and &apos;svn merge -c937170 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&apos;. DaylightSavingTest is still giving me the same failure information and I am able to compile 10.5 branch. I am attaching the diff I have at this point with derby-4582-10.5.diff&lt;/p&gt;

&lt;p&gt;Due to the fact DaylightSavingTest is still failing, I then port changelist 935869. I was not able to compile 10.5 branch at this point.&lt;br/&gt;
Compile failed at:&lt;br/&gt;
compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 141 source files to c:\derby\10.5\classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; c:\derby\10.5\java\client\org\apache\derby\client\net\Request.java:1&lt;br/&gt;
559: timestampToTimestampBytes(byte[],int,org.apache.derby.client.am.DateTimeVal&lt;br/&gt;
ue,boolean) in org.apache.derby.client.am.DateTime cannot be applied to (byte[],&lt;br/&gt;
int,org.apache.derby.client.am.DateTimeValue)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             org.apache.derby.client.am.DateTime.timestampToTimestamp&lt;br/&gt;
Bytes(bytes_, offset_, timestamp);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                                ^&lt;br/&gt;
I notice my merge for Request.java at java/client/org/apache/derby/client/net/ is very different than the diff in JIRI &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4582&quot; title=&quot;Timestamps inserted with GMT calendar are 1 hour later when subsequently read with GMT calendar (Server Mode Only).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4582&quot;&gt;&lt;del&gt;DERBY-4582&lt;/del&gt;&lt;/a&gt; &lt;a href=&quot;http://svn.apache.org/viewvc/db/derby/code/trunk/java/client/org/apache/derby/client/net/Request.java?p2=%2Fdb%2Fderby%2Fcode%2Ftrunk%2Fjava%2Fclient%2Forg%2Fapache%2Fderby%2Fclient%2Fnet%2FRequest.java&amp;amp;p1=%2Fdb%2Fderby%2Fcode%2Ftrunk%2Fjava%2Fclient%2Forg%2Fapache%2Fderby%2Fclient%2Fnet%2FRequest.java&amp;amp;r1=935868&amp;amp;r2=935867&amp;amp;view=diff&amp;amp;pathrev=935868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/db/derby/code/trunk/java/client/org/apache/derby/client/net/Request.java?p2=%2Fdb%2Fderby%2Fcode%2Ftrunk%2Fjava%2Fclient%2Forg%2Fapache%2Fderby%2Fclient%2Fnet%2FRequest.java&amp;amp;p1=%2Fdb%2Fderby%2Fcode%2Ftrunk%2Fjava%2Fclient%2Forg%2Fapache%2Fderby%2Fclient%2Fnet%2FRequest.java&amp;amp;r1=935868&amp;amp;r2=935867&amp;amp;view=diff&amp;amp;pathrev=935868&lt;/a&gt;&lt;br/&gt;
At line 1553, I have diff as following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;final void writeTimestamp(java.sql.Timestamp timestamp) throws SqlException&lt;br/&gt;
 {&lt;br/&gt;
+    final void writeTimestamp(DateTimeValue timestamp) throws SqlException {&lt;br/&gt;
         try{&lt;br/&gt;
             ensureLength(offset_ + 26);&lt;br/&gt;
             org.apache.derby.client.am.DateTime.timestampToTimestampBytes(bytes&lt;br/&gt;
&lt;em&gt;, offset&lt;/em&gt;, timestamp);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I can try to manually change this. However, I have a feeling I might need to change Connection.java in order to have method serverSupportsTimestampNanoseconds&lt;/p&gt;

&lt;p&gt;Should I keep trying to port this issue to 10.5 branch? Any suggestion is welcome.&lt;/p&gt;</comment>
                            <comment id="12889890" author="lilywei" created="Mon, 19 Jul 2010 16:35:50 +0100"  >&lt;p&gt;I tried to use changelist 932930, 933637, 933726, 935868, 936218, 937170, 94046. changelist 933726 is a check-in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2602&quot; title=&quot;TIMESTAMP value is truncated  when return to client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2602&quot;&gt;&lt;del&gt;DERBY-2602&lt;/del&gt;&lt;/a&gt; allows full JDBC nanosecond-precision in timestamps across the network. However, I am still having build problem and DaylightSavingTest still behave with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4582&quot; title=&quot;Timestamps inserted with GMT calendar are 1 hour later when subsequently read with GMT calendar (Server Mode Only).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4582&quot;&gt;&lt;del&gt;DERBY-4582&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
If there is no objection, I would recommend not back port to 10.5 branches for this issue.&lt;/p&gt;</comment>
                            <comment id="12889913" author="kmarsden" created="Mon, 19 Jul 2010 17:47:03 +0100"  >&lt;p&gt;I think that is fine Lily.  It doesn&apos;t sound like it is worth the effort for now.  Someday if someone really needs this fix they can work on the back port.&lt;/p&gt;</comment>
                            <comment id="12889942" author="lilywei" created="Mon, 19 Jul 2010 18:48:04 +0100"  >&lt;p&gt;This sounds great to me. Thank you so much, Kathey.&lt;/p&gt;</comment>
                            <comment id="12890169" author="lilywei" created="Tue, 20 Jul 2010 04:24:29 +0100"  >&lt;p&gt;This issue is not going to back port to 10.5. Reassign back to Knut.&lt;/p&gt;</comment>
                            <comment id="12890170" author="lilywei" created="Tue, 20 Jul 2010 04:25:38 +0100"  >&lt;p&gt;Change resolution back to fixed.&lt;/p&gt;</comment>
                            <comment id="13685276" author="knutanders" created="Mon, 17 Jun 2013 10:19:32 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12462123">DERBY-4615</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12462540">DERBY-4621</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12463127">DERBY-4633</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12468384">DERBY-4728</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12441408" name="ASF.LICENSE.NOT.GRANTED--junit.diff" size="13487" author="knutanders" created="Sun, 11 Apr 2010 17:26:23 +0100"/>
                            <attachment id="12441610" name="ASF.LICENSE.NOT.GRANTED--upd-rs-test.diff" size="4724" author="knutanders" created="Tue, 13 Apr 2010 15:34:25 +0100"/>
                            <attachment id="12438832" name="DerbyTest.java" size="9630" author="keith13660" created="Mon, 15 Mar 2010 15:28:13 +0000"/>
                            <attachment id="12441130" name="calendar.diff" size="17710" author="knutanders" created="Thu, 8 Apr 2010 09:48:41 +0100"/>
                            <attachment id="12449629" name="derby-4582-10.5.diff" size="72353" author="lilywei" created="Fri, 16 Jul 2010 06:02:21 +0100"/>
                            <attachment id="12442157" name="derby-4582-1a-client-send.diff" size="24186" author="knutanders" created="Mon, 19 Apr 2010 12:02:27 +0100"/>
                            <attachment id="12442320" name="derby-4582-2a-server-receive.diff" size="8887" author="knutanders" created="Tue, 20 Apr 2010 17:20:53 +0100"/>
                            <attachment id="12442529" name="derby-4582-3a-server-send.diff" size="9527" author="knutanders" created="Thu, 22 Apr 2010 09:34:07 +0100"/>
                            <attachment id="12442852" name="derby-4582-4a-client-receive.diff" size="44761" author="knutanders" created="Mon, 26 Apr 2010 13:29:23 +0100"/>
                            <attachment id="12442984" name="derby-4582-5a-bugfix.diff" size="3382" author="knutanders" created="Tue, 27 Apr 2010 19:07:28 +0100"/>
                            <attachment id="12443185" name="derby-4582-6a-javame.diff" size="3477" author="knutanders" created="Thu, 29 Apr 2010 09:48:27 +0100"/>
                            <attachment id="12441143" name="junit.diff" size="10113" author="knutanders" created="Thu, 8 Apr 2010 13:29:09 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 15 Mar 2010 16:15:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24350</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0he7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36636</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>