<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4405/DERBY-4405.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4405] Transformation to inner join not performed for certain three-way joins</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4405</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In the CROSS JOIN section in the reference manual (&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsqljcrossjoin.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsqljcrossjoin.html&lt;/a&gt;) there are three examples that are supposed to be equivalent. However, the performance differs significantly between the different queries.&lt;/p&gt;

&lt;p&gt;The queries use the tours db and look like this:&lt;/p&gt;

&lt;p&gt;(1)&lt;br/&gt;
SELECT * FROM CITIES LEFT OUTER JOIN&lt;br/&gt;
    (FLIGHTS CROSS JOIN COUNTRIES)&lt;br/&gt;
        ON CITIES.AIRPORT = FLIGHTS.ORIG_AIRPORT&lt;br/&gt;
            WHERE COUNTRIES.COUNTRY_ISO_CODE = &apos;US&apos;&lt;/p&gt;

&lt;p&gt;(2)&lt;br/&gt;
SELECT * FROM CITIES LEFT OUTER JOIN&lt;br/&gt;
    FLIGHTS INNER JOIN COUNTRIES ON 1=1&lt;br/&gt;
        ON CITIES.AIRPORT = FLIGHTS.ORIG_AIRPORT&lt;br/&gt;
            WHERE COUNTRIES.COUNTRY_ISO_CODE = &apos;US&apos;&lt;/p&gt;

&lt;p&gt;(3)&lt;br/&gt;
SELECT * FROM CITIES LEFT OUTER JOIN&lt;br/&gt;
    (SELECT * FROM FLIGHTS, COUNTRIES) S&lt;br/&gt;
        ON CITIES.AIRPORT = S.ORIG_AIRPORT&lt;br/&gt;
            WHERE S.COUNTRY_ISO_CODE = &apos;US&apos;&lt;/p&gt;

&lt;p&gt;When executed in ij, (1) and (2) need 6 seconds to complete, whereas (3) completes in 50 ms.&lt;/p&gt;

&lt;p&gt;The query plans for (1) and (2) use nested loop joins and table scans. (3) uses a combination of hash join and nested loop join, and index scans as well as table scans.&lt;/p&gt;

&lt;p&gt;It looks like (3) has been rewritten from a left outer join to an inner join internally. This is fine because all rows that have the right-side columns filled with NULLs will be filtered out by the predicate S.COUNTRY_ISO_CODE=&apos;US&apos;, so the extra rows generated by the outer join will not be returned.&lt;/p&gt;

&lt;p&gt;This optimization should also be possible for (1) and (2). We should improve the logic so that those joins are transformed too. The transformation happens in HalfOuterJoinNode.transformOuterJoins().&lt;/p&gt;</description>
                <environment></environment>
        <key id="12437852">DERBY-4405</key>
            <summary>Transformation to inner join not performed for certain three-way joins</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Oct 2009 12:37:09 +0100</created>
                <updated>Tue, 27 Apr 2010 15:17:13 +0100</updated>
                            <resolved>Tue, 15 Dec 2009 21:49:44 +0000</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12783351" author="dagw" created="Sun, 29 Nov 2009 02:36:03 +0000"  >&lt;p&gt;Uploading a patch which lets the two variant outer join statements be rewritten to&lt;br/&gt;
inner join, by looking not just at the top level inner table for match when analyzing&lt;br/&gt;
the null intolerant predicates, but checking against tables in nested inner join (inner join in the inner position of an outer join) as well.&lt;br/&gt;
Added a repro test case to JoinNode which checks for the presence of a hash join to&lt;br/&gt;
indicate the rewrite did happen (not used before the rewrite).&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="12783421" author="bryanpendleton" created="Sun, 29 Nov 2009 16:17:34 +0000"  >&lt;p&gt;Hi Dag, you should assign this issue to yourself. Thanks for investigating this!&lt;/p&gt;

&lt;p&gt;Why did you need to add a parameter to the fillInReferencedTableMap() method?&lt;br/&gt;
Would it be possible to just make the new behavior be unconditional, and have&lt;br/&gt;
JoinNode always fill in the table map positions from its children?&lt;/p&gt;</comment>
                            <comment id="12783457" author="dagw" created="Sun, 29 Nov 2009 19:40:29 +0000"  >&lt;p&gt;Thanks for looking at the patch, Bryan. I introduced the boolean so as not the change the behavior of the&lt;br/&gt;
call to fillInReferencedTableMap from FromBaseTable#LOJgetReferencedTables, since that call was not involved&lt;br/&gt;
in solving this issue. I will investigate some more of that usage could benefit from the closure as well. LOJgetReferencedTables is used by the LOJ linearization logic, and I didn&apos;t study it yet.&lt;/p&gt;</comment>
                            <comment id="12783474" author="dagw" created="Sun, 29 Nov 2009 21:01:14 +0000"  >&lt;p&gt;Regressions passed.&lt;/p&gt;</comment>
                            <comment id="12786263" author="dagw" created="Sat, 5 Dec 2009 00:28:14 +0000"  >&lt;p&gt;Trying to understand the code for the outer join reordering a.k.a. linearization that Derby performs, cf.&lt;br/&gt;
HalfOuterJoinNode#LOJ_reorderable.&lt;/p&gt;

&lt;p&gt;Is anyone familiar with what the rationale/intuition for this transformation is? I did not find it&lt;br/&gt;
described in the Tuning guide (&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/tuning/ctuntransform55045.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/tuning/ctuntransform55045.html&lt;/a&gt;).&lt;br/&gt;
It does mention the simplification to inner joins, though.&lt;/p&gt;

&lt;p&gt;This fairly recent paper which does address it &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; in much detail, but Derby&apos;s logic is fairly limited..&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; Galindo-Legaria, C. &amp;amp; Rosenthal, A.: &quot;Outerjoin simplification and reordering for query optimization&quot;, ACM Transactions on Database Systems, Vol 22, No 1, March 1997.&lt;/p&gt;</comment>
                            <comment id="12789632" author="dagw" created="Sat, 12 Dec 2009 01:06:59 +0000"  >&lt;p&gt;Looking at the reordering done by Derby in&lt;br/&gt;
HalfOuterJoinNode#LOJ_reorderable, it seems to be buggy; filed&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4471&quot; title=&quot;Left outer join reassociation rewrite gives wrong result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4471&quot;&gt;&lt;del&gt;DERBY-4471&lt;/del&gt;&lt;/a&gt; for that.&lt;/p&gt;

&lt;p&gt;Instead of modifying fillInReferencedTableMap when used from&lt;br/&gt;
transformOuterJoins, I see that I possibly could use the method&lt;br/&gt;
ResultSetNode#LOJgetReferencedTables instead, which does look inside&lt;br/&gt;
join (inner and outer join) nodes in the way we want. I will make a&lt;br/&gt;
simplified patch which uses that method.&lt;/p&gt;

&lt;p&gt;Btw, the simplication of outer join to inner join is defined by&lt;br/&gt;
identity #3 in &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; referred to above. &lt;/p&gt;</comment>
                            <comment id="12790464" author="dagw" created="Mon, 14 Dec 2009 23:46:10 +0000"  >&lt;p&gt;Uploading a simplified patch along the lines I suggested, plus added&lt;br/&gt;
test cases for right outer join too, and made more explicit tests that outer join is gone after rewrite (RuntimeStatisticsParser#usedNLLeftOuterJoin).&lt;br/&gt;
Rerunning regressions.&lt;/p&gt;</comment>
                            <comment id="12790975" author="dagw" created="Tue, 15 Dec 2009 21:49:11 +0000"  >&lt;p&gt;Regressions passed, committed as svn 891015.&lt;/p&gt;</comment>
                            <comment id="12828549" author="knutanders" created="Tue, 2 Feb 2010 09:31:04 +0000"  >&lt;p&gt;Verified that the three statements had similar performance on trunk. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12435321">DERBY-4374</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12427972" name="derby-4405-2.diff" size="40206" author="dagw" created="Mon, 14 Dec 2009 23:46:10 +0000"/>
                            <attachment id="12427973" name="derby-4405-2.stat" size="241" author="dagw" created="Mon, 14 Dec 2009 23:46:10 +0000"/>
                            <attachment id="12426352" name="derby-4405.diff" size="39095" author="dagw" created="Sun, 29 Nov 2009 02:36:03 +0000"/>
                            <attachment id="12426353" name="derby-4405.stat" size="438" author="dagw" created="Sun, 29 Nov 2009 02:36:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 29 Nov 2009 02:36:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31225</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0qqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38150</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>