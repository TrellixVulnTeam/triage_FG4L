<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4946/DERBY-4946.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4946] Derby 10.7 DatabaseMetaData.getTypeInfo() should not return BOOLEAN for a soft upgraded database</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4946</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby 10.7 DatabaseMetaData.getTypeInfo() should not return the BOOLEAN data type with a soft upgraded database as often applications use getTypeInfo() to determine if tables can be created with this type.&lt;/p&gt;

&lt;p&gt;To reproduce and see the impact of the problem, first create the database testdb with 10.6&lt;br/&gt;
ij version 10.6&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:testdb;create=true&apos;;&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;

&lt;p&gt;run the attached program UseDBMetaForBool with 10.6  and it runs fine.&lt;br/&gt;
$ java UseDBMetaForBool&lt;br/&gt;
getDriverVersion10.6.2.3 - (1026030M)&lt;br/&gt;
supportsBoolean = false Make my table accordingly&lt;br/&gt;
CREATING SMALLINT TABLE SINCE NO BOOLEAN&lt;br/&gt;
getBoolean=true&lt;br/&gt;
getString=1&lt;/p&gt;

&lt;p&gt;Next run the program against 10.7 in soft upgrade mode and it fails with:&lt;br/&gt;
$ java UseDBMetaForBool&lt;br/&gt;
getDriverVersion10.7.1.2 - (1040699M)&lt;br/&gt;
supportsBoolean = true Make my table accordingly&lt;br/&gt;
CREATING BOOLEAN TABLE&lt;br/&gt;
Exception in thread &quot;main&quot; java.sql.SQLException: Use of &apos;BOOLEAN&apos; requires data&lt;br/&gt;
base to be upgraded from version 10.6 to version 10.7 or later.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLE&lt;br/&gt;
xceptionFactory40.java:95)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException&lt;br/&gt;
(TransactionResourceImpl.java:396)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Tr&lt;br/&gt;
ansactionResourceImpl.java:348)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConne&lt;br/&gt;
ction.java:2284)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Connection&lt;br/&gt;
Child.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java&lt;br/&gt;
:616)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatemen&lt;br/&gt;
t.java:176)&lt;br/&gt;
        at UseDBMetaForBool.main(UseDBMetaForBool.java:28)&lt;br/&gt;
Caused by: java.sql.SQLException: Use of &apos;BOOLEAN&apos; requires database to be upgra&lt;br/&gt;
ded from version 10.6 to version 10.7 or later.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExc&lt;br/&gt;
eptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransport&lt;br/&gt;
AcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLE&lt;br/&gt;
xceptionFactory40.java:70)&lt;br/&gt;
        ... 8 more&lt;br/&gt;
Caused by: ERROR XCL47: Use of &apos;BOOLEAN&apos; requires database to be upgraded from v&lt;br/&gt;
ersion 10.6 to version 10.7 or later.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardEx&lt;br/&gt;
ception.java:343)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DD_Version.checkVersion(DD_Version.&lt;br/&gt;
java:845)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.checkVersion(Dat&lt;br/&gt;
aDictionaryImpl.java:9662)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.checkVersion(SQLParser.ja&lt;br/&gt;
va:327)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.dataTypeCommon(SQLParser.&lt;br/&gt;
java:3336)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.dataTypeDDL(SQLParser.jav&lt;br/&gt;
a:3260)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.columnDefinition(SQLParse&lt;br/&gt;
r.java:3125)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.tableElement(SQLParser.ja&lt;br/&gt;
va:3090)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.tableElementList(SQLParse&lt;br/&gt;
r.java:3061)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.tableDefinition(SQLParser&lt;br/&gt;
.java:10204)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.createStatements(SQLParse&lt;br/&gt;
r.java:2079)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.StatementPart(SQLParser.j&lt;br/&gt;
ava:1974)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SQLParser.Statement(SQLParser.java:&lt;br/&gt;
1892)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(ParserImp&lt;br/&gt;
l.java:151)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatemen&lt;br/&gt;
t.java:282)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.j&lt;br/&gt;
ava:90)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepa&lt;br/&gt;
reInternalStatement(GenericLanguageConnectionContext.java:1101)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java&lt;br/&gt;
:607)&lt;br/&gt;
        ... 2 more&lt;/p&gt;


&lt;p&gt;Finally, hard upgrade and see it runs again once the upgrade has been performed:&lt;br/&gt;
$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.7&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:testdb;upgrade=true&apos;;&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;

&lt;p&gt;kmarsden@IBM-93AE43E63C0 ~/repro/softUpgr&lt;br/&gt;
$ java UseDBMetaForBool&lt;br/&gt;
getDriverVersion10.7.1.2 - (1040699M)&lt;br/&gt;
supportsBoolean = true Make my table accordingly&lt;br/&gt;
CREATING BOOLEAN TABLE&lt;br/&gt;
getBoolean=true&lt;br/&gt;
getString=true&lt;/p&gt;


&lt;p&gt;The application  should run in soft upgrade mode and DatabaseMetaData.getTypeInfo() should not return the BOOLEAN type in soft upgrade before it is available to use.&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12493383">DERBY-4946</key>
            <summary>Derby 10.7 DatabaseMetaData.getTypeInfo() should not return BOOLEAN for a soft upgraded database</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Dec 2010 01:14:37 +0000</created>
                <updated>Tue, 19 Apr 2011 13:39:21 +0100</updated>
                            <resolved>Mon, 20 Dec 2010 15:43:03 +0000</resolved>
                                    <version>10.7.1.1</version>
                    <version>10.8.1.2</version>
                                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12971924" author="kmarsden" created="Thu, 16 Dec 2010 01:15:56 +0000"  >&lt;p&gt;Attaching reproduction for soft upgrade issue with DatabaseMetaData.getTypeInfo() see description for instructions.&lt;/p&gt;</comment>
                            <comment id="12972082" author="rhillegas" created="Thu, 16 Dec 2010 13:56:04 +0000"  >&lt;p&gt;Prior to 10.7, the behavior of Derby&apos;s BOOLEAN datatype was, frankly, broken. It was a half datatype. You could not create columns of BOOLEAN type but you could select columns of BOOLEAN type (from the system tables). From the point of view of applications wanting to know what kind of data they could INSERT, it was correct for DatabaseMetaData.getTypeInfo() to omit the BOOLEAN datatype. However, from the point of view of applications wanting to know what kind of datatypes they could SELECT, it was wrong for DatabaseMetaData.getTypeInfo() to omit the BOOLEAN datatype. The full, gory state of the mess is described in the appendixes of the functional spec attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-499&quot; title=&quot;Expose BOOLEAN datatype to end users&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-499&quot;&gt;&lt;del&gt;DERBY-499&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short, prior to 10.7, including or omitting BOOLEAN from DatabaseMetaData.getTypeInfo() would have been correct or incorrect depending on what your application&apos;s needs were. I have no enthusiasm for changing this output from one wrong answer to another. Conversely, I won&apos;t veto your work if you want to change which wrong answer we give.&lt;/p&gt;

&lt;p&gt;Users will not get the right answer until they hard-upgrade to 10.7, the release which fixes this datatype.&lt;/p&gt;</comment>
                            <comment id="12972135" author="kmarsden" created="Thu, 16 Dec 2010 16:31:41 +0000"  >&lt;p&gt;Thanks Rick for your insight. I want to understand your statement.&lt;/p&gt;

&lt;p&gt;&quot;However, from the point of view of applications wanting to know what kind of datatypes they could SELECT, it was wrong for DatabaseMetaData.getTypeInfo() to omit the BOOLEAN datatype. &quot;&lt;/p&gt;

&lt;p&gt;I was trying to think under what circumstances this might be useful to anyone. I certainly do know that no Derby users are using it this way as BOOLEAN was never returned in getTypeInfo()  until now.&lt;/p&gt;

&lt;p&gt;I do think that quite a few applications use it the other way to see if BOOLEAN is available for user tables with the database they are working with and this bug will break those applications in soft upgrade mode, probably preventing those evaluating 10.7  from making the decision to move to 10.7.   So I think it is a fairly serious regression that we now return BOOLEAN in getTypeInfo() with a database where it is not available.  I am sorry to hear you are not interested in fixing it as part of the BOOLEAN data type work.&lt;/p&gt;








</comment>
                            <comment id="12972144" author="rhillegas" created="Thu, 16 Dec 2010 17:08:20 +0000"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;The ability to SELECT boolean values is useful for applications which introspect Derby&apos;s metadata by issuing queries against the catalogs, compensating for the fact that we have not implemented the SQL Information Schema.&lt;/p&gt;

&lt;p&gt;I agree that the behavior has changed and it is a regression from the point of view of the applications you have described. From the point of view of other applications it is a bug-fix and an improvement.&lt;/p&gt;

&lt;p&gt;As I said, if you believe this is a serious problem for your customers, then you are welcome to revert the behavior. I will not veto that change.&lt;/p&gt;

&lt;p&gt;While you are at it, you may want to remove the XML datatype from the output of DatabaseMetaData.getTypeInfo(). It is another half-supported Derby datatype and it may be causing similar problems for the applications you are concerned about.&lt;/p&gt;</comment>
                            <comment id="12972155" author="kmarsden" created="Thu, 16 Dec 2010 17:35:48 +0000"  >&lt;p&gt;Well getBoolean() works on System table BOOLEAN  regardless, so not so clear why that would be useful decision point  but  certainly clear to me that in the contexts  where BOOLEAN is not supported the DatabaseMetaData should continue to not return it.&lt;/p&gt;

&lt;p&gt; I am glad to hear you would not veto someone fixing this regression but  a bit perplexed that you would  consider doing so.   &lt;/p&gt;</comment>
                            <comment id="12972243" author="knutanders" created="Thu, 16 Dec 2010 22:15:20 +0000"  >&lt;p&gt;My gut feeling is that of the two wrong answers, saying that boolean is not supported in the soft-upgrade scenario is probably the one that does less harm. I see that the class-level javadoc for DatabaseMetaData mentions some use cases for the class, and one of them is the one in Kathey&apos;s repro:&lt;/p&gt;

&lt;p&gt;&quot;For example, a tool might use the method getTypeInfo to find out what data types can be used in a CREATE TABLE statement.&quot;&lt;/p&gt;

&lt;p&gt;I have a hard time imagining an application that would run into trouble if we removed boolean from getTypeInfo() in soft upgrade. We&apos;ve had the situation with a half boolean data type and no mentioning of boolean in getTypeInfo() for a very long time, and no problems have been reported because of it as far as I know, so I believe such a change would be pretty safe to make.&lt;/p&gt;</comment>
                            <comment id="12972483" author="rhillegas" created="Fri, 17 Dec 2010 13:47:15 +0000"  >&lt;p&gt;There were many problems with Cloudscape&apos;s original BOOLEAN datatype. I have fixed the ones I knew about. Additional problems were introduced when BOOLEAN was removed as a datatype usable in CREATE TABLE statements. One of those problems was the introduction of a metadata discrepancy between getTypeInfo() and getColumns(). It seems wrong to me that DatabaseMetaData().getColumns() can return datatypes which do not appear in the list returned by getTypeInfo().&lt;/p&gt;

&lt;p&gt;However, I agree with Knut&apos;s final statement: Our users have learned how to code around this discrepancy, and reverting the behavior is a low risk change.&lt;/p&gt;</comment>
                            <comment id="12972537" author="kmarsden" created="Fri, 17 Dec 2010 16:19:45 +0000"  >&lt;p&gt;Yes I think the only risk in fixing it could be if someone started depending on the new behavior.   Since  I think we do not currently have infrastructure  for a variable query for DatabaseMetaData, a fix  might be hard, and there doesn&apos;t seem to be anyone with bandwidth to fix it right now, so I think it would make sense to add a release note to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4730&quot; title=&quot;Add BOOLEAN to the list of datatypes returned by DatabaseMetaData.getTypeInfo()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4730&quot;&gt;&lt;del&gt;DERBY-4730&lt;/del&gt;&lt;/a&gt; pointing to this bug and indicating that BOOLEAN will be removed from getTypeInfo() as soon as this issue is fixed.  It might also be helpful to users that encounter  the issue in the repro.    I am not exactly sure how they could work around that problem with Generic JDBC code or even with something specific to Derby.   We have the open issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4259&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-4259&lt;/a&gt; which would work but that is not fixed yet. Does anyone have ideas how users can work around this issue and recognize if the database is in soft upgrade mode and whether BOOLEAN is actually available to create a table?  Then we could add that to the release note too.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12972555" author="knutanders" created="Fri, 17 Dec 2010 17:35:43 +0000"  >&lt;p&gt;The easiest way to see if they can create a table with a BOOLEAN column, would be to attempt to create a table with a BOOLEAN column and see if that fails. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12972621" author="knutanders" created="Fri, 17 Dec 2010 19:50:22 +0000"  >&lt;p&gt;I think the attached patch will change the behaviour of getTypeInfo() as suggested and only return BOOLEAN if the data dictionary is at version 10.7 or higher.&lt;/p&gt;</comment>
                            <comment id="12972641" author="rhillegas" created="Fri, 17 Dec 2010 20:43:42 +0000"  >&lt;p&gt;The patch looks good to me. Thanks, Knut.&lt;/p&gt;</comment>
                            <comment id="12972649" author="knutanders" created="Fri, 17 Dec 2010 21:09:27 +0000"  >&lt;p&gt;I first didn&apos;t notice that the query was also used by the ODBC variant of getTypeInfo(). The attached patch fixes that problem. In addition it adds a test case to the upgrade tests, and changes the test case for getTypeInfo() in DatabaseMetaDataTest to account for the new behaviour in soft upgrade (DatabaseMetaDataTest is run by the upgrade tests).&lt;/p&gt;

&lt;p&gt;I have only run the upgrade tests on this patch, and only with 10.6.2.1 and 10.7.1.1 against trunk.&lt;/p&gt;</comment>
                            <comment id="12972693" author="kmarsden" created="Sat, 18 Dec 2010 00:00:39 +0000"  >&lt;p&gt;Yay, Knut!  One less  worry!  I did not have a chance to apply the patch but looked at it and looks good to me.&lt;/p&gt;
</comment>
                            <comment id="12973144" author="knutanders" created="Mon, 20 Dec 2010 09:36:19 +0000"  >&lt;p&gt;Thanks, Rick and Kathey, for looking at the patches. Committed revision 1051026.&lt;/p&gt;

&lt;p&gt;I&apos;ll backport it to 10.7 too (after running tests). Since this fix alters the meta-data queries, I suppose I need to bump the last digit in the version number on the branch too?&lt;/p&gt;</comment>
                            <comment id="12973199" author="rhillegas" created="Mon, 20 Dec 2010 14:02:44 +0000"  >&lt;p&gt;Hi Knut. What scenario are you handling by bumping the last digit?&lt;/p&gt;</comment>
                            <comment id="12973218" author="knutanders" created="Mon, 20 Dec 2010 14:59:51 +0000"  >&lt;p&gt;If someone is running from head of 10.7 because they need one of the fixes that went in after 10.7.1.1, they won&apos;t get the SPS for getTypeInfo() invalidated when they pull in this fix. Since the number of parameters in the SPS has changed, they&apos;ll get an error when executing getTypeInfo() if the SPS isn&apos;t invalidated and recompiled. A recompile of the SPS will happen if the version is bumped.&lt;/p&gt;

&lt;p&gt;For example, create a new database and execute getTypeInfo() with head of 10.7. Then apply this fix and run getTypeInfo() again, and you&apos;ll see something like this:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.sql.SQLException: No input parameters.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:396)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.noStateChangeException(EmbedResultSet.java:4454)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setBoolean(EmbedPreparedStatement.java:363)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getTypeInfoMinion(EmbedDatabaseMetaData.java:2724)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getTypeInfo(EmbedDatabaseMetaData.java:2696)&lt;br/&gt;
	at GetTypeInfo.main(GetTypeInfo.java:5)&lt;br/&gt;
Caused by: java.sql.SQLException: No input parameters.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	... 7 more&lt;br/&gt;
Caused by: ERROR 07009: No input parameters.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericParameterValueSet.checkPosition(GenericParameterValueSet.java:319)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericParameterValueSet.getParameterForSet(GenericParameterValueSet.java:166)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setBoolean(EmbedPreparedStatement.java:360)&lt;br/&gt;
	... 3 more&lt;/p&gt;</comment>
                            <comment id="12973222" author="rhillegas" created="Mon, 20 Dec 2010 15:14:42 +0000"  >&lt;p&gt;Thanks, Knut. Bumping the last digit makes sense for those users. +1.&lt;/p&gt;</comment>
                            <comment id="12973225" author="rhillegas" created="Mon, 20 Dec 2010 15:22:32 +0000"  >&lt;p&gt;I bumped the last digit of the release id on the 10.7 branch and changed the name of the head of the branch to 10.7.1.3.&lt;/p&gt;</comment>
                            <comment id="12973229" author="knutanders" created="Mon, 20 Dec 2010 15:42:07 +0000"  >&lt;p&gt;Thanks, Rick. Backported the fix to 10.7 and committed revision 1051148. Hopefully the window between your commit and mine wasn&apos;t so big that someone runs into this problem.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12466360" name="UseDBMetaForBool.java" size="1346" author="kmarsden" created="Thu, 16 Dec 2010 01:15:56 +0000"/>
                            <attachment id="12466492" name="bool.diff" size="1811" author="knutanders" created="Fri, 17 Dec 2010 19:50:22 +0000"/>
                            <attachment id="12466499" name="odbc+tests.diff" size="7834" author="knutanders" created="Fri, 17 Dec 2010 21:09:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Dec 2010 13:56:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24546</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0gkf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36502</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>