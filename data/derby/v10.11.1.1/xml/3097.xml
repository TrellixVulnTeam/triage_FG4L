<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3097/DERBY-3097.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3097] Unnecessary if statement can be removed from BaseActivation.getColumnFromNow</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3097</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In BaseActivation.java there is the following code:&lt;/p&gt;

&lt;p&gt;protected final DataValueDescriptor getColumnFromRow(int rsNumber, int colId)&lt;br/&gt;
throws StandardException {&lt;/p&gt;

&lt;p&gt;        if( row&lt;span class=&quot;error&quot;&gt;&amp;#91;rsNumber&amp;#93;&lt;/span&gt; == null)&lt;/p&gt;
        {
            /* This actually happens. NoPutResultSetImpl.clearOrderableCache attempts to prefetch invariant values
             * into a cache. This fails in some deeply nested joins. See Beetle 4736 and 4880.
             */
            return null;
        }
&lt;p&gt;return row&lt;span class=&quot;error&quot;&gt;&amp;#91;rsNumber&amp;#93;&lt;/span&gt;.getColumn(colId);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;During the investigation of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3033&quot; title=&quot;select query results in nullpointer exception in skipScan()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3033&quot;&gt;&lt;del&gt;DERBY-3033&lt;/del&gt;&lt;/a&gt;, I came to the conclusion that this &quot;if&quot; statement is no longer necessary, and in fact is counter-productive, for it makes diagnosing other problems harder by delaying the point at which data structure problems are exposed as errors in the code.&lt;/p&gt;

&lt;p&gt;This JIRA issue requests that this code be evaluated, to determine whether or not it truly is necessary, and, if it is not necessary, suggests that it should be removed, to result in simpler, clearer code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12379534">DERBY-3097</key>
            <summary>Unnecessary if statement can be removed from BaseActivation.getColumnFromNow</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Oct 2007 03:31:48 +0100</created>
                <updated>Fri, 21 Jan 2011 17:50:54 +0000</updated>
                            <resolved>Wed, 4 Jun 2008 03:44:58 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12532979" author="bryanpendleton" created="Sun, 7 Oct 2007 17:14:52 +0100"  >&lt;p&gt;Removing the &quot;if&quot; statement causes a test failure in lang/predicatePushdown.sql.&lt;/p&gt;

&lt;p&gt;A different query plan appears to be chosen.&lt;/p&gt;</comment>
                            <comment id="12532980" author="knutanders" created="Sun, 7 Oct 2007 17:44:32 +0100"  >&lt;p&gt;You might be seeing the intermittent failure reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1902&quot; title=&quot;Intermittent failures in predicatePushdown.sql&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1902&quot;&gt;&lt;del&gt;DERBY-1902&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12532989" author="bryanpendleton" created="Sun, 7 Oct 2007 19:18:35 +0100"  >&lt;p&gt;Hi Knut Anders, thanks for the pointer to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1902&quot; title=&quot;Intermittent failures in predicatePushdown.sql&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1902&quot;&gt;&lt;del&gt;DERBY-1902&lt;/del&gt;&lt;/a&gt;,&lt;br/&gt;
but I think this problem is different.&lt;/p&gt;

&lt;p&gt;The diff is quite interesting. I misspoke in my previous comment:  Derby &lt;br/&gt;
does not choose a different query plan. The difference is more subtle. &lt;br/&gt;
The reference file has a section of query plan output which looks like this:&lt;/p&gt;

&lt;p&gt;                    Index Scan ResultSet for T4 using index T4_IX2 at read committed isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                    Number of opens = 0&lt;br/&gt;
                    Rows seen = 0&lt;br/&gt;
                    Rows filtered = 0&lt;br/&gt;
                    Fetch Size = 1&lt;br/&gt;
                            constructor time (milliseconds) = 0&lt;br/&gt;
                            open time (milliseconds) = 0&lt;br/&gt;
                            next time (milliseconds) = 0&lt;br/&gt;
                            close time (milliseconds) = 0&lt;br/&gt;
                    scan information:&lt;br/&gt;
                            start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
                            stop position:&lt;br/&gt;
        &amp;gt; on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;The actual output that I get with the &quot;if&quot; statement removed is this:&lt;/p&gt;

&lt;p&gt;                    Index Scan ResultSet for T4 using index T4_IX2 at read committed isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                    Number of opens = 0&lt;br/&gt;
                    Rows seen = 0&lt;br/&gt;
                    Rows filtered = 0&lt;br/&gt;
                    Fetch Size = 1&lt;br/&gt;
                            constructor time (milliseconds) = 0&lt;br/&gt;
                            open time (milliseconds) = 0&lt;br/&gt;
                            next time (milliseconds) = 0&lt;br/&gt;
                            close time (milliseconds) = 0&lt;br/&gt;
                    scan information:&lt;br/&gt;
                            start position:&lt;br/&gt;
        Positioning information not available because this ResultSet was never opened.&lt;br/&gt;
                            stop position:&lt;br/&gt;
        Positioning information not available because this ResultSet was never opened.&lt;/p&gt;

&lt;p&gt;That is, instead of printing the start and stop positions for the scan, the new&lt;br/&gt;
output instead prints a message saying that this ResultSet was never&lt;br/&gt;
positioned, and hence has no start and stop positions to print.&lt;/p&gt;

&lt;p&gt;The actual output seems pretty reasonable, as in fact the T4 index scan&lt;br/&gt;
result set &lt;b&gt;was&lt;/b&gt; never opened (&quot;Number of opens = 0&quot;).&lt;/p&gt;

&lt;p&gt;But why does removing the &quot;if&quot; statement in BaseActivation.getColumnFromRow&lt;br/&gt;
cause this change?&lt;/p&gt;

&lt;p&gt;The answer lies in a routine called TableScanResultSet.printPosition,&lt;br/&gt;
where we see the following code:&lt;/p&gt;

&lt;p&gt;		if (positioner == null)&lt;br/&gt;
		{&lt;br/&gt;
			try&lt;/p&gt;
			{
				positioner = (ExecIndexRow)positionGetter.invoke(activation);
			}
&lt;p&gt;			catch (StandardException e)&lt;/p&gt;
			{
				// the positionGetter will fail with a NullPointerException
				// if the outer table is empty
				// (this isn&apos;t a problem since we won&apos;t call it on the inner
				// table if there are no rows on the outer table)
				if (e.getSQLState() == SQLState.LANG_UNEXPECTED_USER_EXCEPTION )
					return &quot;\t&quot; + MessageService.getTextMessage(
						SQLState.LANG_POSITION_NOT_AVAIL);
				return &quot;\t&quot; + MessageService.getTextMessage(
						SQLState.LANG_UNEXPECTED_EXC_GETTING_POSITIONER,
						e.toString());
			}
&lt;p&gt;		}&lt;/p&gt;

&lt;p&gt;With the current trunk code, containing the defensive &quot;if&quot; statement&lt;br/&gt;
in BaseActivation.getColumnFromRow(), the positionGetter method quietly&lt;br/&gt;
returns a template index row filled with NULL values, and&lt;br/&gt;
TableScanResult.printPosition quietly formats and prints the index row.&lt;/p&gt;

&lt;p&gt;But with the &quot;if&quot; statement removed, a NullPointerException is raised in&lt;br/&gt;
BaseActivation.getColumnFromRow() because we are trying to fetch a column&lt;br/&gt;
from a non-existent row. This NPE is then wrapped by the Java reflection&lt;br/&gt;
libraries into an InvocationTargetException, which is then caught by the&lt;br/&gt;
following code in ReflectMethod.invoke and turned into a Derby&lt;br/&gt;
StandardException:&lt;/p&gt;

&lt;p&gt;		try &lt;/p&gt;
{
			return realMethod.invoke(ref, null);

		}
&lt;p&gt; catch (IllegalAccessException iae) &lt;/p&gt;
{

			t = iae;

		}
&lt;p&gt; catch (IllegalArgumentException iae2) &lt;/p&gt;
{

			t = iae2;

		}
&lt;p&gt; catch (InvocationTargetException ite) &lt;/p&gt;
{

			t = ite.getTargetException();
			if (t instanceof StandardException)
				throw (StandardException) t;
		}

&lt;p&gt;		throw StandardException.unexpectedUserException(t);&lt;/p&gt;

&lt;p&gt;This StandardException is then caught by TableScanResultSet.printPosition&lt;br/&gt;
and results in the &quot;Positioning information not available&quot; message.&lt;/p&gt;

&lt;p&gt;So I think that the new output is reasonable, and I&apos;m not entirely&lt;br/&gt;
opposed to simply updating the master file as part of this change.&lt;/p&gt;

&lt;p&gt;However, it does &lt;b&gt;not&lt;/b&gt; seem desirable to arrive at this output by&lt;br/&gt;
catching and recovering from a NullPointerException.&lt;/p&gt;

&lt;p&gt;My next thought is that perhaps TableResultScan.printPosition can&lt;br/&gt;
detect that the result set has not been opened, and avoid calling the&lt;br/&gt;
positionGetter in this case, and instead proceed directly to formatting&lt;br/&gt;
and returning the LANG_POSITION_NOT_AVAIL message.&lt;/p&gt;

&lt;p&gt;I&apos;ll investigate this possibility.&lt;/p&gt;</comment>
                            <comment id="12533017" author="bryanpendleton" created="Mon, 8 Oct 2007 02:18:21 +0100"  >&lt;p&gt;Does anyone have access to the old Cloudscape test script for &quot;Beetle 4880&quot;?&lt;br/&gt;
I&apos;d like to see if this test sheds any light on the BaseActivation.getColumnFromRecord code,&lt;br/&gt;
and possibly add the test case to our current regression suite.&lt;/p&gt;
</comment>
                            <comment id="12533018" author="bryanpendleton" created="Mon, 8 Oct 2007 02:21:24 +0100"  >&lt;p&gt;Attached is checkNumOpens.diff, a patch proposal.&lt;br/&gt;
This patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes the defensive &quot;if&quot; statement from getColumnFromRow&lt;/li&gt;
	&lt;li&gt;removes the code which caught and recovered from the NPE&lt;br/&gt;
   in TableScanResultSet.printPosition, and replaces it with code&lt;br/&gt;
  which checks numOpens == 0 and uses that to decide if the&lt;br/&gt;
  positioning information should be printed or not.&lt;/li&gt;
	&lt;li&gt;adds the script from Beetle 4736 as a new regression case in&lt;br/&gt;
  subqueryFlattening.sql&lt;/li&gt;
	&lt;li&gt;updates predicatePushdown.out to reflect the new positioning output.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think this patch is worthy of review; any feedback would be welcome.&lt;/p&gt;</comment>
                            <comment id="12544385" author="thomanie" created="Wed, 21 Nov 2007 08:52:40 +0000"  >&lt;p&gt;The defensive if() statement is triggered in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3094&quot; title=&quot;Grouping of expressions causes NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3094&quot;&gt;&lt;del&gt;DERBY-3094&lt;/del&gt;&lt;/a&gt;, but in 3094 results in an NPE. Applying this patch and thus removing the defensiveness, cause another NPE from the following return statement in 3094.&lt;/p&gt;

&lt;p&gt;Marking these two reports as related.&lt;/p&gt;

&lt;p&gt;Is the attached patch only fixing the symptom, rather than the underlying root cause that makes the if() statement necessary?&lt;/p&gt;</comment>
                            <comment id="12549190" author="army" created="Thu, 6 Dec 2007 20:57:26 +0000"  >&lt;p&gt;Turns out that this same &quot;if&quot; statement is also at play in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3253&quot; title=&quot;NullPointer Exception (NPE) from query with IN predicate containing two values and joining a view with a large table.  ERROR 38000: The exception &amp;#39;java.lang.NullPointerException&amp;#39; was thrown while evaluating an expression.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3253&quot;&gt;&lt;del&gt;DERBY-3253&lt;/del&gt;&lt;/a&gt;.  The repro there fails with an NPE whether or not checkNumOpens.diff is applied in my codeline...&lt;/p&gt;</comment>
                            <comment id="12597770" author="bryanpendleton" created="Sun, 18 May 2008 01:28:20 +0100"  >&lt;p&gt;Regarding my 7-Oct-2007 request for more information on Beetle 4880, Myrna van Lunteren&lt;br/&gt;
posted the following to the derby-dev mailing list:&lt;/p&gt;

&lt;p&gt;------------&lt;br/&gt;
NEST_THIS definition:&lt;br/&gt;
	public static int NEST_THIS( int returnValue,&lt;br/&gt;
			   String statement1 )&lt;br/&gt;
		throws SQLException, StandardException&lt;/p&gt;
	{
		Connection conn = getCurrentConnection();
		PreparedStatement ps = conn.prepareStatement( statement1 );
		ps.execute();
		return	returnValue;
	}
&lt;p&gt;ij&amp;gt; create table L_1&lt;br/&gt;
(&lt;br/&gt;
	pk int primary key,&lt;br/&gt;
	s1 int,&lt;br/&gt;
	b int,&lt;br/&gt;
	s2 int,&lt;br/&gt;
	s3 int&lt;br/&gt;
);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create unique btree index L_1_UNIQUE on L_1( s1, s2, s3 );&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into L_1 ( pk, s1 ) values&lt;br/&gt;
  ( -16, NEST_THIS( 103, &apos;delete from L_1 properties index=null&lt;br/&gt;
where s2 = 103 and s1 =&lt;br/&gt;
   NEST_THIS( 103, &apos;&apos;insert into L_1 ( pk, s1, s2, s3 ) values&lt;br/&gt;
( -18, 3, 1, 1 ), ( -19, 403, 403, 403 )&apos;&apos; )&apos; ) );&lt;br/&gt;
-------------------------------&lt;br/&gt;
The info further indicates that at one time, this code caused a deadlock.&lt;br/&gt;
The notes say: &quot;Consider a query like: select * from t1, t2 where&lt;br/&gt;
t2.c1 = MyClass::myMethod(t1.c1). Since the method call&apos;s arguments&lt;br/&gt;
have no local reference to t2, and the predicate is pushed down as a&lt;br/&gt;
qualifier, we should be able to deem it as scan-invariant and evaluate&lt;br/&gt;
it once per outer row, so all together row_count(t1) number of times.&lt;br/&gt;
And we should evaluate it outside the store, before a heap page is&lt;br/&gt;
latched.&quot;&lt;/p&gt;

&lt;p&gt;I&apos;ve not tried this code out; not sure the syntax even works in Derby.&lt;br/&gt;
I hope it helps.&lt;/p&gt;</comment>
                            <comment id="12601400" author="bryanpendleton" created="Sat, 31 May 2008 18:10:42 +0100"  >&lt;p&gt;I&apos;m intending to commit this change to the trunk, as I still think this &quot;if&quot; statement&lt;br/&gt;
is unnecessary and can sometimes hide other problems elsewhere in the code.&lt;/p&gt;

&lt;p&gt;I&apos;ll need to bring the patch up to date and re-verify that the tests pass, then if all&lt;br/&gt;
goes well I&apos;ll commit it to the trunk.&lt;/p&gt;</comment>
                            <comment id="12601421" author="knutanders" created="Sun, 1 Jun 2008 00:14:17 +0100"  >&lt;p&gt;Not all that useful, but in case someone finds it interesting...&lt;/p&gt;

&lt;p&gt;I tried to modify the test case so that it would run on Derby. To get the correct syntax, I did&lt;/p&gt;

&lt;p&gt;  a) replace getCurrentConnection() with DriverManager.getConnection(&quot;jdbc:default:connection&quot;) in the Java method&lt;/p&gt;

&lt;p&gt;  b) add a CREATE FUNCTION statement to create the NEST_THIS function&lt;/p&gt;

&lt;p&gt;  c) change &quot;create unique btree index&quot; to &quot;create unique index&quot;&lt;/p&gt;

&lt;p&gt;  d) change &quot;properties index=null&quot; to &quot;--DERBY-PROPERTIES index=null&quot;&lt;/p&gt;

&lt;p&gt;The first problem that I ran into, was that the optimizer override caused a syntax error. Apparently, optimizer overrides are not supported for DELETE statements. Not sure if this is a bug or not. The documentation says that they work on FROM clauses, and I couldn&apos;t find anything about their being limited to SELECT FROM. Anyway, it was pretty easy to enable it in the parser (can&apos;t guarantee that it works perfectly, though). Just change a flag from false to true in sqlgrammar.deleteBody().&lt;/p&gt;

&lt;p&gt;Next problem was that functions don&apos;t allow SQL statements that modify data. Since the test case indicates that it was supported in Cloudscape, it might be that only a simple change in the parser is required, so that it accepts &quot;MODIFIES SQL&quot; in CREATE FUNCTION statements, but I didn&apos;t get that far before I ran out of daylight.&lt;/p&gt;</comment>
                            <comment id="12601792" author="bryanpendleton" created="Tue, 3 Jun 2008 00:44:16 +0100"  >&lt;p&gt;Attached &apos;updatedJune2008.diff&apos; patch proposal has been&lt;br/&gt;
updated to the head of trunk, and reflects that predicatePushdown.out&lt;br/&gt;
no longer needs to be modified by this patch.&lt;/p&gt;

&lt;p&gt;The patch passes the regression tests, so I intend to move ahead&lt;br/&gt;
with commit.&lt;/p&gt;

&lt;p&gt;Knut, thanks very much for the work on trying to convert the&lt;br/&gt;
old Cloudscape test code to Derby syntax.&lt;/p&gt;
</comment>
                            <comment id="12602147" author="bryanpendleton" created="Wed, 4 Jun 2008 03:44:58 +0100"  >&lt;p&gt;Committed the updated patch to the trunk as revision 662947&lt;br/&gt;
and am marking this issue as resolved.&lt;/p&gt;

&lt;p&gt;Thanks all for your help!&lt;/p&gt;</comment>
                            <comment id="12908130" author="dagw" created="Fri, 10 Sep 2010 19:19:57 +0100"  >&lt;p&gt;It appears that the removed code in BaseActivation resulted in a regression, cf &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12473822">DERBY-4798</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12379465">DERBY-3094</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12377120">DERBY-3033</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12367229" name="checkNumOpens.diff" size="9158" author="bryanpendleton" created="Mon, 8 Oct 2007 02:21:24 +0100"/>
                            <attachment id="12383267" name="updatedJune2008.diff" size="7147" author="bryanpendleton" created="Tue, 3 Jun 2008 00:44:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 7 Oct 2007 16:44:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30724</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0m0n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37385</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>