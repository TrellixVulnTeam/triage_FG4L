<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-424/DERBY-424.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-424] Queryplan for a query using SESSION schema view is incorrectly put in statement cache. This could cause incorrect plan getting executed later if a temp. table is created with that name.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-424</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-405&quot; title=&quot;SYNONYM should not be allowed in SESSION schema because that can confusion wih temporary tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-405&quot;&gt;&lt;del&gt;DERBY-405&lt;/del&gt;&lt;/a&gt; for some discussion related this issue. I suspect this is because of statement caching. Derby doesn&apos;t seem to recognise we have a temporary table that just overloaded an existing physical table. &lt;/p&gt;

&lt;p&gt;It would have been good to avoid permanent tables/views/synonyms in SESSION schema. Not sure what we should do now about this, though. &lt;/p&gt;

&lt;p&gt;ij&amp;gt; create view session.st1 as select * from t; &lt;br/&gt;
0 rows inserted/updated/deleted &lt;br/&gt;
ij&amp;gt; select * from session.st1; &lt;br/&gt;
I |J |K &lt;br/&gt;
----------------------------------- &lt;br/&gt;
1 |1 |NULL &lt;br/&gt;
2 |2 |NULL &lt;br/&gt;
3 |3 |NULL &lt;br/&gt;
4 |4 |NULL &lt;/p&gt;

&lt;p&gt;4 rows selected &lt;br/&gt;
ij&amp;gt; select * from t; &lt;br/&gt;
I |J |K &lt;br/&gt;
----------------------------------- &lt;br/&gt;
1 |1 |NULL &lt;br/&gt;
2 |2 |NULL &lt;br/&gt;
3 |3 |NULL &lt;br/&gt;
4 |4 |NULL &lt;/p&gt;

&lt;p&gt;4 rows selected &lt;br/&gt;
ij&amp;gt; declare global temporary table st1(c11 int, c12 int) on commit preserve rows &lt;br/&gt;
 not logged; &lt;br/&gt;
0 rows inserted/updated/deleted &lt;br/&gt;
ij&amp;gt; select * from session.st1; &lt;br/&gt;
I |J |K &lt;br/&gt;
----------------------------------- &lt;br/&gt;
1 |1 |NULL &lt;br/&gt;
2 |2 |NULL &lt;br/&gt;
3 |3 |NULL &lt;br/&gt;
4 |4 |NULL &lt;/p&gt;

&lt;p&gt;4 rows selected &lt;br/&gt;
ij&amp;gt; select * from session.st1; &amp;lt;==== This statement has an extra space between FROM and session.st1 &lt;br/&gt;
C11 |C12 &lt;br/&gt;
----------------------- &lt;/p&gt;

&lt;p&gt;0 rows selected &lt;/p&gt;</description>
                <environment>generic</environment>
        <key id="12311848">DERBY-424</key>
            <summary>Queryplan for a query using SESSION schema view is incorrectly put in statement cache. This could cause incorrect plan getting executed later if a temp. table is created with that name.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="bandaram">Satheesh Bandaram</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jul 2005 09:44:06 +0100</created>
                <updated>Tue, 20 Mar 2007 21:54:00 +0000</updated>
                            <resolved>Sun, 23 Oct 2005 04:26:22 +0100</resolved>
                                    <version>10.1.1.0</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12332443" author="mamtas" created="Wed, 19 Oct 2005 15:12:20 +0100"  >&lt;p&gt;I have attached a review package for this bug, hopefully, in time for 10.1.2 release. &lt;/p&gt;

&lt;p&gt;The files affected by this change are&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\GenericStatement.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\FromList.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\GenericPreparedStatement.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\declareGlobalTempTableJava.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\declareGlobalTempTableJava.out&lt;/p&gt;

&lt;p&gt;The changes for this fix are very localized, affecting only 3 files in Derby engine. Basically, the problem is that, during the compile phase of views, the reference to the view gets replaced by the view definition, which causes us to loose the information that the view might have belonged in SESSION schema. In order to fix this, during the bind phase in FromList, before the view gets replaced by its definition, I find out if the view is from SESSION schema, If yes, then I save this information in FromList and this gets used by FromList when it is asked if it has any items referencing SESSION schema objects. This information is again lost during the optimization and generate phase and hence I moved the check for SESSION schema reference to right after the bind phase in GenericStatement. If there is a reference to SESSION schema object, GenericStatement will remove the statement from the cache. &lt;/p&gt;

&lt;p&gt;I have put in quite a big of comments in the code which hopefully will make the patch easier to understand. I have added a new test for this and have run all the tests with no failures using Sun&apos;s jdk142 on Windows XP machine.&lt;/p&gt;
</comment>
                            <comment id="12332871" author="mamtas" created="Sun, 23 Oct 2005 04:26:22 +0100"  >&lt;p&gt;The fix went into both 10.2 and 10.1.2. &lt;br/&gt;
Some additional comments on the fix&lt;br/&gt;
1)The reason for adding a new method referencesSessionSchema(QueryTreeNode qt) in GenericPreparedStatement----&lt;br/&gt;
If you look at the GenericStatement&apos;s prepMinion method, towards the beginning(line 167 onwards in the review package), we look for the statement in the cache. If it is found there, we set foundInCache to true. After that, we check if the statement found in the cache might be referencing SESSION schema object and if yes, then we do not want to use the statement plan from the cache, instead we want to build it again. The check to see if statement references SESSION schema is done by following code in GenericStatement&apos;s prepMinion method &lt;br/&gt;
    if (foundInCache) {&lt;br/&gt;
     if (preparedStmt.referencesSessionSchema()) &lt;/p&gt;
{
      // cannot use this state since it is private to a connection.
      // switch to a new statement.
      foundInCache = false; 
      preparedStmt = new GenericPreparedStatement(this);
      break;
     }
&lt;p&gt;    }&lt;br/&gt;
GenericPreparedStatement or GenericStatement at the time of the check above donot have the query tree object and hence we can&apos;t simply call qt.referencesSessionSchema. For this reason, I had to add &lt;br/&gt;
public boolean referencesSessionSchema(QueryTreeNode qt) to GenericPreparedStatement(which gets called by the compile phase after the qt object is constructed) and the method saves the qt object&apos;s referencesSessionSchema() status in it&apos;s own local variable referencesSessionSchema. This local information is what will be used by the other referencesSessionSchema method to determine if statement found in cache should be discarded and compile phase should be re-executed. &lt;/p&gt;

&lt;p&gt;So, to summarize, the new method after the bind phase, extracts the referencesSessionSchema information from the passed qt object and saves it in the local variable.&lt;br/&gt;
 public boolean referencesSessionSchema(QueryTreeNode qt)&lt;br/&gt;
 throws StandardException &lt;/p&gt;
{
  //If the query references a SESSION schema table (temporary or permanent), then mark so in this statement
  referencesSessionSchema = qt.referencesSessionSchema();
  return(referencesSessionSchema);
 }

&lt;p&gt;And, the existing referencesSessionSchema() method as shown below, uses the local variable (which was filled correctly last time the statement was compiled) to let the compile phase know if it should ignore the plan found in the cache and reconstruct the plan because the old plan had references to SESSION schema objects. &lt;br/&gt;
 public boolean referencesSessionSchema()&lt;/p&gt;
 {
  return referencesSessionSchema;
 }

&lt;p&gt;3)How information about SESSION schema object reference gets lost during optimization phase-----&lt;br/&gt;
At the end of the bind phase for select * from session.st1; GenericStatement&apos;s qt (QueryTreeNode object which in this case is CursorNode) object has it&apos;s resultSet object as a SelectNode which has a fromList object with referencesSessionSchema field set to true because it was referencing an object from SESSION schema. &lt;br/&gt;
When the optimize code is called on this bound qt object, the optimizer replaces the SelectNode resultSet object with a ProjectRestrictNode and in that process, we loose the referencesSessionSchema information which was part of the SelectNode&apos;s FromList object. Rather than trying to have that information some how be transferred to the new ResultSet object, it is more efficient to use the information right after bind phase and remove the plan from the statement cache. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12314954" name="Derby424SessionSchemaCaching.txt" size="12544" author="mamtas" created="Wed, 19 Oct 2005 15:12:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Oct 2005 14:12:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21949</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy12y7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40128</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>