<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4371/DERBY-4371.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4371] Non-selected columns for SELECT DISTINCT allowed in ORDER BY clause if ordered by expression</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4371</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;How to repeat:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t (i integer, j integer);;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values (1,2),(1,3);&lt;br/&gt;
2 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select distinct i from t order by j;&lt;br/&gt;
ERROR 42879: The ORDER BY clause may not contain column &apos;J&apos;, since the query specifies DISTINCT and that column does not appear in the query result.&lt;br/&gt;
ij&amp;gt; select distinct i from t order by j*2;&lt;br/&gt;
I          &lt;br/&gt;
-----------&lt;br/&gt;
1          &lt;br/&gt;
1          &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;/p&gt;</description>
                <environment></environment>
        <key id="12434994">DERBY-4371</key>
            <summary>Non-selected columns for SELECT DISTINCT allowed in ORDER BY clause if ordered by expression</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nirmal">Nirmal Fernando</assignee>
                                    <reporter username="bernt">Bernt M. Johnsen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Sep 2009 12:33:52 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:13 +0100</updated>
                            <resolved>Wed, 25 Aug 2010 13:11:21 +0100</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12758255" author="bernt" created="Tue, 22 Sep 2009 15:21:41 +0100"  >&lt;p&gt;Wrong result. Should be &quot;Critical&quot;&lt;/p&gt;</comment>
                            <comment id="12764074" author="knutanders" created="Fri, 9 Oct 2009 17:15:46 +0100"  >&lt;p&gt;SQL:2003 talks about this in part 2, 14.1 &amp;lt;declare cursor&amp;gt;, syntax rule 18d (18 d 9 B II, to be specific). My understanding is that if you have SELECT DISTINCT, all the columns/expressions in the ORDER BY clause must also be found in the select list.&lt;/p&gt;

&lt;p&gt;Adding this restriction would solve the issue by rejecting the problematic query. Whereas the behaviour of this particular query is not well-defined, there may be some meaningful queries that will be rejected too, like &quot;select distinct i from t order by -i&quot;, so we should probably add a release note if we choose to fix it this way.&lt;/p&gt;

&lt;p&gt;Another data point, PostgreSQL does not allow any of the queries discussed here:&lt;/p&gt;

&lt;p&gt;kh160127=# select distinct i from t order by j;&lt;br/&gt;
ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list&lt;br/&gt;
kh160127=# select distinct i from t order by j*2;&lt;br/&gt;
ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list&lt;br/&gt;
kh160127=# select distinct i from t order by -i;&lt;br/&gt;
ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list&lt;/p&gt;

&lt;p&gt;MySQL allows all three of them, although only the latter has a well-defined ordering.&lt;/p&gt;</comment>
                            <comment id="12764728" author="knutanders" created="Mon, 12 Oct 2009 17:00:27 +0100"  >&lt;p&gt;The error for &quot;select distinct i from t order by j&quot; is raised by OrderByColumn.bindOrderByColumn() if the query is distinct, the sort key is a column reference, and the sort key has been added to the result column list. Ideally, we should raise the error if the query is distinct and the sort key has been added to the RCL, and not care about whether or not it&apos;s a column reference. However, we always add the sort key to the RCL if it&apos;s an expression, even if the same expression is already in the RCL. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4406&quot; title=&quot;Wrong order when using ORDER BY on non-deterministic function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4406&quot;&gt;&lt;del&gt;DERBY-4406&lt;/del&gt;&lt;/a&gt; is caused by this, and a fix for that issue is likely to make it easier to fix this issue.&lt;/p&gt;</comment>
                            <comment id="12858492" author="nirmal" created="Mon, 19 Apr 2010 15:09:44 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I like to do some work on this bug as well. If someone can suggest me a starting point, it would be great.&lt;/p&gt;

&lt;p&gt;Following is some of my understandings/ findings, please correct me if I am wrong.&lt;/p&gt;

&lt;p&gt;I think we need to perform a check inside OrderByColumn.bindOrderByColumn(), to find out whether the order by &lt;b&gt;expression&lt;/b&gt; (not only column references) is same as the expression in RCL. If they are different we should raise that error if and only if (target instanceof SelectNode)=true and ( (SelectNode)target ).hasDistinct() =true.&lt;/p&gt;

&lt;p&gt;I think this will make Derby to not pull-up an expression that is already there in RCL. Currently Derby pull-up j*2 expression in both occasions mentioned below:&lt;/p&gt;

&lt;p&gt;          select distinct i from t order by j*2; // addedColumnOffset = 0&lt;br/&gt;
          select distinct j*2 from t order by j*2; // addedColumnOffset = 0 this ideally should be -1.&lt;/p&gt;

&lt;p&gt;I like to get your view thoughts on this.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12858739" author="bryanpendleton" created="Tue, 20 Apr 2010 02:07:21 +0100"  >&lt;p&gt;Hi Nirmal, thanks for looking at this issue.&lt;/p&gt;

&lt;p&gt;I wonder if it would be helpful to take a close look at how GROUP BY handles&lt;br/&gt;
a somewhat similar situation:&lt;/p&gt;

&lt;p&gt;  select a, sum(b) from t group by a having a+c &amp;gt; 1 &lt;/p&gt;

&lt;p&gt;is not legal because of the reference to column &apos;c&apos;. But, the related statement:&lt;/p&gt;

&lt;p&gt;  select a+c, sum(b) from t group by a+c having a+c &amp;gt; 1 &lt;/p&gt;

&lt;p&gt;is legal, because the expression is the same in all cases (I think &amp;#8211; please check this!)&lt;/p&gt;

&lt;p&gt;You can find the code that implements this behavior, I think, in the method&lt;br/&gt;
addNewColumnsForAggregation() in GroupByNode.java. In particular, look&lt;br/&gt;
closely at how the SubstituteExpressionsVisitor and CollectNodesVisitor&lt;br/&gt;
get used to process the HAVING clause&apos;s expression tree.&lt;/p&gt;</comment>
                            <comment id="12858810" author="knutanders" created="Tue, 20 Apr 2010 11:41:49 +0100"  >&lt;p&gt;Actually, GROUP BY A+C is not valid SQL. It is non-standard syntax that was added in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-883&quot; title=&quot;Enhance GROUP BY clause to support expressions instead of just column references.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-883&quot;&gt;&lt;del&gt;DERBY-883&lt;/del&gt;&lt;/a&gt;. SQL:2003 only allows column references in group by clauses, as far as I can see.&lt;/p&gt;</comment>
                            <comment id="12858959" author="nirmal" created="Tue, 20 Apr 2010 17:26:16 +0100"  >&lt;p&gt;Hi Bryan &amp;amp; Knut,&lt;/p&gt;

&lt;p&gt;select a, sum(b) from t group by a having a+c &amp;gt; 1  : I checked this in both Derby and PostgreSQL, this is not legal as Bryan correctly mentioned since column reference &apos;c&apos; included in having clause is not in group by clause, though the &apos;a&apos; in select clause is in the group by clause. (Note that &apos;b&apos; is used as &apos;sum(b)&apos;, i.e. if we use a column reference with an aggregate function it need not to be in the group by clause.)&lt;/p&gt;

&lt;p&gt;select a+c, sum(b) from t group by a+c having a+c &amp;gt; 1  :This is a valid query in both Derby and PostgreSQL. I think Bryan is correct, since the same expression used in &lt;b&gt;all 3&lt;/b&gt; cases, this is successful. I verified this by following queries:&lt;br/&gt;
     select a, sum(b) from t group by a+c having a+c &amp;gt; 1 //this fails &lt;br/&gt;
     select a-c, sum(b) from t group by a+c having a+c &amp;gt; 1 //this fails&lt;br/&gt;
     select a-c, sum(b) from t group by a,c having a+c &amp;gt; 1 //this passes&lt;br/&gt;
     select a, sum(b) from t group by a+c,a having a+c &amp;gt; 1 //this passes&lt;br/&gt;
                      ---&amp;gt; this implies expressions in select clause should be in group by clause&lt;/p&gt;

&lt;p&gt;same way I figured out that an expression used in a having clause should be in group by clause.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12860572" author="nirmal" created="Sat, 24 Apr 2010 21:11:13 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I have attached a patch for this issue. This patch shows following error for the query mentioned in the description:&lt;/p&gt;

&lt;p&gt;ERROR 42879: The ORDER BY clause may not contain column &apos;expression&apos; , since the query specifies DISTINCT and that column does not appear in the query result.&lt;/p&gt;

&lt;p&gt;I used &apos;expression&apos; in the error, since j*2 is not a column reference, but I think it is better if we can show a new error for this.&lt;/p&gt;

&lt;p&gt;I am expecting your valuable comments on the patch.&lt;/p&gt;
</comment>
                            <comment id="12860573" author="nirmal" created="Sat, 24 Apr 2010 21:13:24 +0100"  >&lt;p&gt;I am running derbyall tests now.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12860658" author="nirmal" created="Sun, 25 Apr 2010 07:03:38 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;I ran the derbyall tests with my modification, but it failed (I was wondering why). Following is a quote from derbyall_report.txt:&lt;/p&gt;

&lt;p&gt;Generating report for RunSuite derbyall  null null null true &lt;br/&gt;
------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.6.0_16&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\Program Files\Java\jre6&lt;br/&gt;
Java classpath:  %classpath%;C:\OtherNirmal\GSoC\Code\jars\sane\derby.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbytools.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyrun.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbynet.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyclient.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyTesting.jar;C:\OtherNirmal\GSoC\Code\tools\java\jakarta-oro-2.0.8.jar;C:\OtherNirmal\GSoC\Code\tools\java\junit.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_cs.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_de_DE.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_es.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_fr.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_hu.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_it.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ja_JP.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ko_KR.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_pl.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_pt_BR.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ru.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_zh_CN.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_zh_TW.jar;C:\OtherNirmal\GSoC\xalan-j_2_7_1-bin-2jars\xalan-j_2_7_1\samples\xalansamples.jar;C:\OtherNirmal\GSoC\Document\lib\fop.jar;C:\OtherNirmal\GSoC\Document\lib\avalon-framework-4.2.0.jar;C:\OtherNirmal\GSoC\Document\lib\batik-all-1.6.jar;.&lt;br/&gt;
OS name:         Windows Vista&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      6.0&lt;br/&gt;
Java user name:  Nirmal&lt;br/&gt;
Java user home:  C:\Users\Nirmal&lt;br/&gt;
Java user dir:   C:\OtherNirmal\GSoC\Testing\DerbyAll&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.6&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: Java SE 6 - JDBC 4.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derby.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbytools.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbynet.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbyclient.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
----------------- Locale Information -----------------&lt;br/&gt;
Current Locale :  [English/United States &lt;span class=&quot;error&quot;&gt;&amp;#91;en_US&amp;#93;&lt;/span&gt;]&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;cs&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;de_DE&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;es&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;fr&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;hu&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;it&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ja_JP&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ko_KR&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pl&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pt_BR&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ru&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_CN&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_TW&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Test environment information:&lt;br/&gt;
COMMAND LINE STYLE: jdk13&lt;br/&gt;
TEST CANONS: master&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Summary results:&lt;/p&gt;

&lt;p&gt;Test Run Started: 2010-04-25 01:19:16.0&lt;br/&gt;
Test Run Duration: 00:48:47&lt;/p&gt;

&lt;p&gt;204 Tests Run&lt;br/&gt;
31% Pass (65 tests passed)&lt;br/&gt;
69% Fail (139 tests failed)&lt;br/&gt;
3 Suites skipped&lt;/p&gt;

&lt;p&gt;=================================================================&lt;br/&gt;
Since I was pretty sure, that these failures occurred not because of my modifications, I ran derbyall again after commenting the code I added.&lt;br/&gt;
The result was what I expected.&lt;/p&gt;

&lt;p&gt;Generating report for RunSuite derbyall  null null null true &lt;br/&gt;
------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.6.0_16&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\Program Files\Java\jre6&lt;br/&gt;
Java classpath:  %classpath%;C:\OtherNirmal\GSoC\Code\jars\sane\derby.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbytools.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyrun.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbynet.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyclient.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyTesting.jar;C:\OtherNirmal\GSoC\Code\tools\java\jakarta-oro-2.0.8.jar;C:\OtherNirmal\GSoC\Code\tools\java\junit.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_cs.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_de_DE.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_es.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_fr.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_hu.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_it.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ja_JP.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ko_KR.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_pl.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_pt_BR.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_ru.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_zh_CN.jar;C:\OtherNirmal\GSoC\Code\jars\sane\derbyLocale_zh_TW.jar;C:\OtherNirmal\GSoC\xalan-j_2_7_1-bin-2jars\xalan-j_2_7_1\samples\xalansamples.jar;C:\OtherNirmal\GSoC\Document\lib\fop.jar;C:\OtherNirmal\GSoC\Document\lib\avalon-framework-4.2.0.jar;C:\OtherNirmal\GSoC\Document\lib\batik-all-1.6.jar;.&lt;br/&gt;
OS name:         Windows Vista&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      6.0&lt;br/&gt;
Java user name:  Nirmal&lt;br/&gt;
Java user home:  C:\Users\Nirmal&lt;br/&gt;
Java user dir:   C:\OtherNirmal\GSoC\Testing\DerbyAll2&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.6&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: Java SE 6 - JDBC 4.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derby.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbytools.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbynet.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\OtherNirmal\GSoC\Code\jars\sane\derbyclient.jar&amp;#93;&lt;/span&gt; 10.6.0.0 alpha - (exported)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
----------------- Locale Information -----------------&lt;br/&gt;
Current Locale :  [English/United States &lt;span class=&quot;error&quot;&gt;&amp;#91;en_US&amp;#93;&lt;/span&gt;]&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;cs&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;de_DE&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;es&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;fr&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;hu&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;it&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ja_JP&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ko_KR&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pl&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pt_BR&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ru&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_CN&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_TW&amp;#93;&lt;/span&gt;&lt;br/&gt;
	 version: 10.6.0.0 alpha - (exported)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Test environment information:&lt;br/&gt;
COMMAND LINE STYLE: jdk13&lt;br/&gt;
TEST CANONS: master&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Summary results:&lt;/p&gt;

&lt;p&gt;Test Run Started: 2010-04-25 10:29:54.0&lt;br/&gt;
Test Run Duration: 00:48:08&lt;/p&gt;

&lt;p&gt;204 Tests Run&lt;br/&gt;
31% Pass (65 tests passed)&lt;br/&gt;
69% Fail (139 tests failed)&lt;br/&gt;
3 Suites skipped&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;But, since the both reports failed same number of tests, I suppose I can conclude that my modifications, not resulted of failure of any tests.&lt;/p&gt;

&lt;p&gt;Expect your views on this.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12860718" author="nirmal" created="Sun, 25 Apr 2010 18:33:27 +0100"  >&lt;p&gt;Hi All,&lt;/p&gt;

&lt;p&gt;derbyall Tests ran successfully. &lt;/p&gt;

&lt;p&gt;If someone can review the patch it would be great.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12860928" author="bryanpendleton" created="Mon, 26 Apr 2010 15:05:33 +0100"  >&lt;p&gt;Hi Nirmal, thanks for the patch, it looks very promising.&lt;br/&gt;
Here&apos;s a couple things that occurred to me as I read it:&lt;/p&gt;

&lt;p&gt;1) Is the instanceof check for BinaryOperatorNode necessary?&lt;br/&gt;
What would happen if it was removed?&lt;/p&gt;

&lt;p&gt;2) Did you run the JUnit test suites? Or just the derbyall suite?&lt;/p&gt;

&lt;p&gt;3) Can you add some new JUnit test cases to cover some of&lt;br/&gt;
the variations that are handled by the new code? In particular,&lt;br/&gt;
it would be nice to have test cases for the ORDER BY statements that&lt;br/&gt;
are mentioned in the bug description, and it would be nice to have&lt;br/&gt;
test cases for the ORDER BY statements that you mention in&lt;br/&gt;
your comments in the patch.&lt;/p&gt;

&lt;p&gt;I think that DistinctTest.java would be a fine place to add the test cases.&lt;/p&gt;

&lt;p&gt;4) Something about this loop looks strange:&lt;/p&gt;

&lt;p&gt;    for (int i=1; i&amp;lt;target.getResultColumns().size() ;i++ ){&lt;/p&gt;

&lt;p&gt;Usually, either the loop counter starts at 0, or the loop test&lt;br/&gt;
is for &amp;lt;=, not &amp;lt;. Do you think the start and end conditions are&lt;br/&gt;
correct in this case?&lt;/p&gt;</comment>
                            <comment id="12861009" author="nirmal" created="Mon, 26 Apr 2010 18:34:32 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thank you very much for reviewing the patch.&lt;/p&gt;

&lt;p&gt;1) I added this simply because queries like select distinct i*2 from order by i are already giving that error. But I think removing this will not affect anything instead we will able to handle queries like select distinct i from order by random() such that it shows the error. Thanks for pointing it.&lt;/p&gt;

&lt;p&gt;2) I ran just the derbyall suite, I will run suites.all now.&lt;/p&gt;

&lt;p&gt;3) This will probably the next thing I like to learn. I will read up on Junit tests.&lt;/p&gt;

&lt;p&gt;4) Whoops, thanks Bryan, it was a mistake, and I corrected that, and I modified the patch too, please find the new attachment.&lt;/p&gt;

&lt;p&gt;Thanks Again.&lt;/p&gt;</comment>
                            <comment id="12861651" author="nirmal" created="Wed, 28 Apr 2010 03:27:24 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I ran Junit tests for the new modification and there&apos;s a failure. Following is the output in JunitAll.out:&lt;/p&gt;

&lt;p&gt; orderby(org.apache.derbyTesting.functionTests.tests.lang.LangScripts)junit.framework.ComparisonFailure: Output at line 1736 expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;C1 |C2 &amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR 42879: The ORDER BY clause may not contain column &amp;#39;expression&amp;#39;, since the query specifies DISTINCT and that column does not appear in the query result.&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:106)&lt;br/&gt;
at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(ScriptTestCase.java:198)&lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;


&lt;p&gt;Where can I found the query related to this ?&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12861654" author="bryanpendleton" created="Wed, 28 Apr 2010 03:58:45 +0100"  >&lt;p&gt;There&apos;s a bit of a trick to reading the following output:&lt;/p&gt;

&lt;p&gt;&amp;gt;  orderby(org.apache.derbyTesting.functionTests.tests.lang.LangScripts)junit.framework.ComparisonFailure: &lt;br/&gt;
&amp;gt; Output at line 1736 expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;C1 |C2 &amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;[ERROR 42879: The ORDER BY clause &lt;br/&gt;
&amp;gt; may not contain column &apos;expression&apos;, since the query specifies DISTINCT and that column does &lt;br/&gt;
&amp;gt; not appear in the query result.]&amp;gt; &lt;/p&gt;

&lt;p&gt;The output is referring to line 1736 in the file &lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/orderby.out&lt;/p&gt;

&lt;p&gt;The &quot;LangScripts&quot; test is a special JUnit test which takes files full of SQL statements, such as&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/tests/lang/orderby.sql, feeds them&lt;br/&gt;
into the &quot;ij&quot; tool, and then compares the output against the corresponding XXX.out file.&lt;/p&gt;

&lt;p&gt;So have a look at line 1736 in orderby.out and the message should make more sense.&lt;/p&gt;</comment>
                            <comment id="12861655" author="nirmal" created="Wed, 28 Apr 2010 04:13:13 +0100"  >&lt;p&gt;Thanks Bryan for help me out to read this.&lt;/p&gt;

&lt;p&gt;So, I found that the line 1736 is referred to the query: select distinct c1, c2 from t1 order by c1+1;&lt;/p&gt;

&lt;p&gt;According to the standards this should fail with the error I created:&lt;/p&gt;

&lt;p&gt;ERROR 42879: The ORDER BY clause may not contain column &apos;expression&apos;, since the query specifies DISTINCT and that column does&lt;br/&gt;
not appear in the query result.&lt;/p&gt;

&lt;p&gt;But it expects the query to be pass and output this:&lt;/p&gt;

&lt;p&gt;C1         |C2        &lt;br/&gt;
----------------------&lt;br/&gt;
1          |c         &lt;br/&gt;
2          |b         &lt;br/&gt;
3          |a         &lt;br/&gt;
4          |c  &lt;/p&gt;

&lt;p&gt;So, I think we need to modify this test, isn&apos;t it? Isn&apos;t this the place I need to add additional queries to test the functionality of the modified code?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="12861661" author="bryanpendleton" created="Wed, 28 Apr 2010 04:32:59 +0100"  >&lt;p&gt;It sounds like your proposed patch would cause&lt;br/&gt;
a query which previously passed to get an error instead.&lt;/p&gt;

&lt;p&gt;This is the sort of thing that we always think very carefully&lt;br/&gt;
about, because people may be currently using queries&lt;br/&gt;
like this, and depending on them, and so we are hesitant&lt;br/&gt;
to disrupt functionality that is currently operational for fear&lt;br/&gt;
of breaking existing applications.&lt;/p&gt;

&lt;p&gt;In this particular case, we can see by using the Subversion &quot;annotate&quot; feature&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/master/orderby.out?view=annotate&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/master/orderby.out?view=annotate&lt;/a&gt;&lt;br/&gt;
 that the particular query was changed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt; in revision 637529:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/master/orderby.out?r1=637528&amp;amp;r2=637529&amp;amp;&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/master/orderby.out?r1=637528&amp;amp;r2=637529&amp;amp;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that the next step is probably to have a close review of the&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt; notes and try to understand why the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt; changes&lt;br/&gt;
are in conflict with the changes in your proposed patch.&lt;/p&gt;

&lt;p&gt;It&apos;s quite possible that your patch is implementing the desired behavior,&lt;br/&gt;
but it would better still if we can understand why &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt; felt that&lt;br/&gt;
the other behavior was desirable.&lt;/p&gt;
</comment>
                            <comment id="12861668" author="nirmal" created="Wed, 28 Apr 2010 04:53:44 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Okey, I understood the importance.&lt;/p&gt;

&lt;p&gt;I will study on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

</comment>
                            <comment id="12862039" author="nirmal" created="Thu, 29 Apr 2010 01:59:31 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;As I understood after going through &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351&quot; title=&quot;ORDER BY with expression with distinct in the select list returns incorrect result&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2351&quot;&gt;&lt;del&gt;DERBY-2351&lt;/del&gt;&lt;/a&gt;, we must allow queries like:&lt;/p&gt;

&lt;p&gt;select distinct i from t order by i*2&lt;/p&gt;

&lt;p&gt;          should be allow as this functionality may have been using by Derby users, in there applications. Derby allows this is because i is there in the distinct even though i*2 is not there.&lt;/p&gt;

&lt;p&gt;So, if we follow this rule it implies that:&lt;br/&gt;
 select distinct * from t order by i*2&lt;br/&gt;
       is also allow.&lt;/p&gt;

&lt;p&gt;To check whether a column reference in a distinct is contained in this order by column I have to perform a check for each operand in both ways (j*2 and 2*j).&lt;/p&gt;

&lt;p&gt;I have attached a patch proposal. Your reviews are highly appreciated.&lt;/p&gt;

&lt;p&gt;Note: This patch is not tend to handle queries like below:&lt;br/&gt;
select distinct i from t order by random()&lt;br/&gt;
select distinct i from t order by j*2*3;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12862345" author="knutanders" created="Thu, 29 Apr 2010 19:52:36 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;If I understand correctly, the patch only addresses the case with a binary operator with one numeric constant operand and one result column operand. Unfortunately, that&apos;s just one out of an infinite number of possible shapes the ORDER BY clause could take, and we cannot address each one of those cases individually, so I think we should aim for a more general approach.&lt;/p&gt;

&lt;p&gt;Perhaps this would work:&lt;/p&gt;

&lt;p&gt;When DISTINCT is specified, do this for each OrderByColumn:&lt;/p&gt;

&lt;p&gt;1) Check if there&apos;s a column in the target&apos;s result column list with an equivalent expression (can be checked with the isEquivalent() method in ValueNode). If there is one, this OrderByColumn is OK.&lt;/p&gt;

&lt;p&gt;2) Otherwise, collect all columns referenced by the expression in the OrderByColumn (CollectNodesVisitor could probably do this for you), and check if all the columns are also in the target&apos;s result column list. If they all are, the OrderByColumn is OK. If not, throw an exception.&lt;/p&gt;</comment>
                            <comment id="12863315" author="nirmal" created="Mon, 3 May 2010 12:40:25 +0100"  >&lt;p&gt;Thanks Knut, for reviewing the patch, yes me too felt that it is too generic and thanks for suggesting me possible two ways, that was really helpful. I think the most appropriate way is the second way, since we want queries like select distinct c1, c2 from t1 order by c1+1 to be valid.&lt;/p&gt;

&lt;p&gt;The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4371&quot; title=&quot;Non-selected columns for SELECT DISTINCT allowed in ORDER BY clause if ordered by expression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4371&quot;&gt;&lt;del&gt;DERBY-4371&lt;/del&gt;&lt;/a&gt;-4.diff contains the new modifications. Highly appreciate reviews from all of you. Thanks.&lt;/p&gt;

&lt;p&gt;I am now running the tests.&lt;/p&gt;</comment>
                            <comment id="12863347" author="knutanders" created="Mon, 3 May 2010 14:36:44 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;Sorry for not being clear. I didn&apos;t mean to suggest two different approaches, but one approach with two steps. If we only implement step 2, we won&apos;t allow statements like this one (which are allowed according to the standard):&lt;/p&gt;

&lt;p&gt;SELECT DISTINCT C1+1 FROM T ORDER BY C1+1&lt;/p&gt;</comment>
                            <comment id="12863356" author="nirmal" created="Mon, 3 May 2010 15:04:50 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;It&apos;s okey. With a slight modification I managed to use 2) and it worked fine.&lt;br/&gt;
Method:&lt;br/&gt;
It checks the ColumnReferences in distinct clause (using CollectNodesVisitor ), with ColumnReferences in OrderByColumn.&lt;/p&gt;

&lt;p&gt;This successfully allow the above query.&lt;/p&gt;

&lt;p&gt;Any thoughts of this approach? &lt;/p&gt;</comment>
                            <comment id="12863382" author="knutanders" created="Mon, 3 May 2010 16:39:20 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;After a quick look at the patch, I have these comments:&lt;/p&gt;

&lt;p&gt;I don&apos;t think the CollectNodesVisitor should be used on the expressions in the select list, as that would allow too many queries to be executed. For example, the #4 patch will allow this statement:&lt;/p&gt;

&lt;p&gt;    select distinct i*j from t1 order by i/j&lt;/p&gt;

&lt;p&gt;This statement should be rejected because none of the columns I or J, or the expression I/J are contained directly in the select list (both I and J are in an expression in the select list, but not on the top level, so there&apos;s no functional dependency between the columns in the select list and the expression in the order by clause).&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if it&apos;s enough to check the name of the columns to see if it&apos;s the same column, as they may refer to columns in different tables. Perhaps ColumnReference.isEquivalent() would work better?&lt;/p&gt;

&lt;p&gt;I don&apos;t think column names should be compared with String.equalsIgnoreCase(), as column names are case sensitive. For example, I think this select statement is supposed to fail because &quot;I&quot; is not the same column as &quot;i&quot;:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t2(&quot;I&quot; int , &quot;i&quot; int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select distinct &quot;I&quot;+1 from t2 order by &quot;i&quot;+1;&lt;br/&gt;
1          &lt;br/&gt;
-----------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;/p&gt;</comment>
                            <comment id="12863409" author="nirmal" created="Mon, 3 May 2010 18:14:37 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the comments.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into your first and second comments.&lt;/p&gt;

&lt;p&gt;I printed out a column name given by ColumnReference.getColumnName(), though the column in the table is &apos;i&apos; it shows as &apos;I&apos;. To confirm this I created a new table with columns &apos;s&apos; and inserted some values to it, and issued select * command, and the result was displayed as &apos;S&apos;. That&apos;s why I used that method, but now only I knew that we can issue case sensitive column names, by adding within a quotation mark(&quot;).&lt;/p&gt;
</comment>
                            <comment id="12900258" author="nirmal" created="Thu, 19 Aug 2010 12:50:00 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ll resume my work on this issue.&lt;/p&gt;

&lt;p&gt;But I&apos;ve a small doubt. &lt;br/&gt;
Should we allow following type of queries:&lt;br/&gt;
&quot;select distinct i from t order by i/j;&quot;&lt;/p&gt;

&lt;p&gt;thanks.&lt;/p&gt;</comment>
                            <comment id="12900296" author="lilywei" created="Thu, 19 Aug 2010 15:54:48 +0100"  >&lt;p&gt;Hi Nirmal:&lt;br/&gt;
     I am new to this issue. However, will &quot;select distinct i from t order by i/j&quot; fits in to 2) collect all columns referenced by the expression in the OrderByColumn (CollectNodesVisitor could probably do this for you), and check if all the columns are also in the target&apos;s result column list. If they all are, the OrderByColumn is OK. If not, throw an exception.  &quot;j&quot; is not in the column of target&apos;s result column list so we throw an exception. &lt;/p&gt;</comment>
                            <comment id="12900304" author="nirmal" created="Thu, 19 Aug 2010 16:06:43 +0100"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;Thanks for the reply. &lt;/p&gt;

&lt;p&gt;I got confused with Knut&apos;s last post &lt;/p&gt;

&lt;p&gt;i.e.   select distinct i*j from t1 order by i/j&lt;br/&gt;
This statement should be rejected because none of the columns I or J, or the expression I/J are contained directly in the select list (both I and J are in an expression in the select list, but not on the top level, so there&apos;s no functional dependency between the columns in the select list and the expression in the order by clause). &lt;/p&gt;

&lt;p&gt;What you think? Isn&apos;t this implies as it&apos;s enough to have I OR J? May be Knut accidentally mistyped it.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12900326" author="nirmal" created="Thu, 19 Aug 2010 16:57:37 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;m attaching patch #5 which is capable of fixing this issue. &lt;br/&gt;
It would be nice if someone can review this.&lt;/p&gt;

&lt;p&gt;PS: This will allow a query like&lt;br/&gt;
select distinct i from t order by i/j;&lt;br/&gt;
 for now. After I get clarified whether this type of &lt;br/&gt;
query is valid, I&apos;ll update the patch.&lt;/p&gt;

&lt;p&gt;Thanks.  &lt;/p&gt;</comment>
                            <comment id="12900327" author="knutanders" created="Thu, 19 Aug 2010 16:58:56 +0100"  >&lt;p&gt;&amp;gt; Should we allow following type of queries:&lt;br/&gt;
&amp;gt; &quot;select distinct i from t order by i/j;&quot;&lt;/p&gt;

&lt;p&gt;No, this query should not be allowed. Consider the table&lt;/p&gt;

&lt;p&gt; i  |  j  | i/j&lt;br/&gt;
---------------&lt;br/&gt;
100 |  10 | 10&lt;br/&gt;
100 | 100 |  1&lt;br/&gt;
200 |  40 |  5&lt;br/&gt;
  3 |   1 |  3&lt;/p&gt;

&lt;p&gt;Here, the ORDER BY clause is ambiguous, because it&apos;s not clear whether&lt;br/&gt;
100 should be the first value or the last value in the result.&lt;/p&gt;</comment>
                            <comment id="12900336" author="nirmal" created="Thu, 19 Aug 2010 17:17:28 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the explanation! &lt;br/&gt;
I&apos;ll update the patch soon!&lt;/p&gt;</comment>
                            <comment id="12900352" author="nirmal" created="Thu, 19 Aug 2010 17:46:14 +0100"  >&lt;p&gt;Attaching the updated patch. Following our few queries which I&apos;ve tested:&lt;/p&gt;

&lt;p&gt;Failing queries:&lt;br/&gt;
select distinct i from t order by j;&lt;br/&gt;
select distinct i from t order by j*2;&lt;br/&gt;
select distinct i,j*3 from t order by j*2;&lt;br/&gt;
select distinct i from t order by i*2,j*3;&lt;br/&gt;
select distinct i*j from t order by i/j;&lt;br/&gt;
select distinct i from t order by -j;&lt;br/&gt;
select distinct i from t order by i/j;&lt;/p&gt;

&lt;p&gt;Passing queries:&lt;br/&gt;
select distinct i,j from t order by j;&lt;br/&gt;
select distinct i,j from t order by j*2;&lt;br/&gt;
select distinct i,j*2 from t order by j*2;&lt;br/&gt;
select distinct i,j from t order by i*2,j*3;&lt;br/&gt;
select distinct * from t order by j*2, i*3;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12900664" author="knutanders" created="Fri, 20 Aug 2010 11:58:49 +0100"  >&lt;p&gt;Thanks for the patch, Nirmal. This looks promising! I found the new logic in bindOrderByColumn() a bit hard to follow, though, mainly because of the many nesting levels. Do you think it is possible to factor out some of that code into helper methods to improve the readability?&lt;/p&gt;

&lt;p&gt;It would be great if you could add the queries you posted above to one of the regression tests (both the ones that are expected to work, and those that are expected to fail).&lt;/p&gt;</comment>
                            <comment id="12900665" author="knutanders" created="Fri, 20 Aug 2010 12:02:56 +0100"  >&lt;p&gt;bindOrderByColumn() doesn&apos;t seem to handle the case where the CollectNodeVisitor returns an empty list. For example, these two queries used to work, but now they fail:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select distinct i from t order by 1+1;&lt;br/&gt;
ERROR 42879: The ORDER BY clause may not contain column &apos;null&apos;, since the query specifies DISTINCT and that column does not appear in the query result.&lt;br/&gt;
ij&amp;gt; select distinct i from t order by random();&lt;br/&gt;
ERROR 42879: The ORDER BY clause may not contain column &apos;null&apos;, since the query specifies DISTINCT and that column does not appear in the query result.&lt;/p&gt;</comment>
                            <comment id="12900684" author="nirmal" created="Fri, 20 Aug 2010 14:08:33 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch!&lt;/p&gt;

&lt;p&gt;I have attached the patch #6, this will allow those queries you have mentioned and broke the code into another method for the ease of read.&lt;/p&gt;

&lt;p&gt;PS: I&apos;ll attach a different patch including the changes to the orderby.out.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12900800" author="nirmal" created="Fri, 20 Aug 2010 19:00:48 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Here&apos;s the diff of tests added. Tests ran successfully in my environment.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12901435" author="knutanders" created="Mon, 23 Aug 2010 16:17:57 +0100"  >&lt;p&gt;Thanks Nirmal, the new patch was easier to read. And thanks for adding all the test cases.&lt;/p&gt;

&lt;p&gt;I believe the code is correct, but it&apos;s still somewhat tricky to understand, especially because of the nesting levels and the way it breaks out of the loops. Here are some suggestions that I think would make the code easier to follow:&lt;/p&gt;

&lt;p&gt;1) Reduce the nesting level in the else branch in bindOrderByColumn(). Instead of the current code with two levels&lt;/p&gt;

&lt;p&gt;        if (addedColumnOffset &amp;gt;= 0 &amp;amp;&amp;amp; ....) {&lt;br/&gt;
            if (!expressionMatch(target)) {&lt;/p&gt;

&lt;p&gt;merge them into one if statement:&lt;/p&gt;

&lt;p&gt;    if (addedColumnOffset &amp;gt;= 0 &amp;amp;&amp;amp; ....&lt;br/&gt;
        &amp;amp;&amp;amp; !expressionMatch(target)) {&lt;/p&gt;

&lt;p&gt;2. Instead of breaking out of the loop in bindOrderByColumn() with the &quot;break&quot; keyword when a non-matching column is found, just throw the exception immediately. Then it&apos;s easier to see what the effect of a mismatch is.&lt;/p&gt;

&lt;p&gt;3. Given that the &quot;throw&quot; statement is moved inside the loop as part of comment (2), there&apos;s no need to check explicitly whether the list of collected nodes was empty, so &quot;if(collectNodesVisitor.getList().isEmpty())&quot; can be removed.&lt;/p&gt;

&lt;p&gt;4. The results of some sub-expressions could be put in to local variables to avoid having to repeat them. For example, target.getResultColumns() in expressionMatch(), and target.getResultColumns() and target.getResultColumns().getResultColumn&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.getExpression() in columnMatchFound().&lt;/p&gt;

&lt;p&gt;5. The loop in columnMatchFound() could be simplified by returning true immediately when a match is found, instead of setting a flag and then checking the flag further down in the loop body.&lt;/p&gt;</comment>
                            <comment id="12901760" author="nirmal" created="Tue, 24 Aug 2010 08:51:20 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Patch #7 is included the modifications that you&apos;ve suggested.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12902398" author="knutanders" created="Wed, 25 Aug 2010 13:11:21 +0100"  >&lt;p&gt;Thank you, Nirmal! The #7 patch looks good to me. I&apos;ve checked it in along with the new test cases.&lt;/p&gt;

&lt;p&gt;Committed revision 989048.&lt;/p&gt;</comment>
                            <comment id="12902405" author="nirmal" created="Wed, 25 Aug 2010 13:32:14 +0100"  >&lt;p&gt;Thanks Knut for committing the patch!! &lt;/p&gt;</comment>
                            <comment id="13685164" author="knutanders" created="Mon, 17 Jun 2013 10:19:13 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12437871">DERBY-4406</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12442872" name="DERBY-4371-2.diff" size="2044" author="nirmal" created="Mon, 26 Apr 2010 18:36:27 +0100"/>
                            <attachment id="12443151" name="DERBY-4371-3.diff" size="3982" author="nirmal" created="Thu, 29 Apr 2010 02:00:45 +0100"/>
                            <attachment id="12443459" name="DERBY-4371-4.diff" size="3652" author="nirmal" created="Mon, 3 May 2010 12:40:55 +0100"/>
                            <attachment id="12442750" name="DERBY-4371.diff" size="1947" author="nirmal" created="Sat, 24 Apr 2010 21:11:13 +0100"/>
                            <attachment id="12452549" name="derby-4371-5.diff" size="4730" author="nirmal" created="Thu, 19 Aug 2010 18:20:10 +0100"/>
                            <attachment id="12452628" name="derby-4371-6.diff" size="4727" author="nirmal" created="Fri, 20 Aug 2010 14:08:33 +0100"/>
                            <attachment id="12452902" name="derby-4371-7.diff" size="4830" author="nirmal" created="Tue, 24 Aug 2010 08:51:20 +0100"/>
                            <attachment id="12452649" name="derby-4371-tests.diff" size="7970" author="nirmal" created="Fri, 20 Aug 2010 19:00:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Oct 2009 16:15:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24212</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0own:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>