<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3071/DERBY-3071.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3071] Replication: Modify logging subsystem for slave replication mode</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3071</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When a database is booted in slave replication mode, it should apply log records received from the master but must not generate log by itself. As described in the functional specification (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2872&quot; title=&quot;Add Replication functionality to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2872&quot;&gt;&lt;del&gt;DERBY-2872&lt;/del&gt;&lt;/a&gt;), a database booted in slave mode should enter LogToFile#recover, but not leave this method until the database is no longer in slave mode. &lt;/p&gt;

&lt;p&gt;The current plan for this issue is to modify LogToFile the following ways:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;LogToFile is put in slave mode automatically during boot (if property SlaveFactory.SLAVE_MODE is set, see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3021&quot; title=&quot;Replication: Add a ReplicationSlave controller that will manage replication on the slave side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3021&quot;&gt;&lt;del&gt;DERBY-3021&lt;/del&gt;&lt;/a&gt;), but a method is needed to take LogToFile out of recovery mode.&lt;/li&gt;
	&lt;li&gt;SlaveFactory (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3021&quot; title=&quot;Replication: Add a ReplicationSlave controller that will manage replication on the slave side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3021&quot;&gt;&lt;del&gt;DERBY-3021&lt;/del&gt;&lt;/a&gt;) will receive log records from the master and use LogToFile#appendLogRecord to write these to disk. While in slave mode, only SlaveFactory will be allowed to append log records.&lt;/li&gt;
	&lt;li&gt;The thread running LogToFile#recover will recover (redo) one log file at a time (like now), but will not be allowed to open a log file X until that file is no longer being written to. Thus, while appenLogFile writes to logX.dat, recover will be allowed to read all log files up to and including logX-1.dat but will then have to wait until appendLogRecord starts writing to logX+1.dat.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;All the described changes will only apply when in slave mode&lt;/p&gt;</description>
                <environment></environment>
        <key id="12378130">DERBY-3071</key>
            <summary>Replication: Modify logging subsystem for slave replication mode</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12374543">DERBY-2978</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jorgenlo">J&#248;rgen L&#248;land</assignee>
                                    <reporter username="jorgenlo">J&#248;rgen L&#248;land</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Sep 2007 10:02:27 +0100</created>
                <updated>Fri, 21 Jan 2011 18:16:54 +0000</updated>
                            <resolved>Fri, 16 Nov 2007 14:22:08 +0000</resolved>
                                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Services</component>
                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12533660" author="jorgenlo" created="Wed, 10 Oct 2007 09:54:48 +0100"  >&lt;p&gt;Attaching a patch, continuous-recovery_1a, that addresses the third bullet - making the database boot thread stay in recovery mode and wait to redo log file X until it is allowed to do so by the slave replication thread. This only affects recovery of a database booted in slave mode.&lt;/p&gt;

&lt;p&gt;I ran into intermittent failure ProcedureInTriggerTest, but could not reproduce. All other tests pass cleanly.&lt;/p&gt;

&lt;p&gt;The patch contains cleaned-up code from proof of concept v2b attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2872&quot; title=&quot;Add Replication functionality to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2872&quot;&gt;&lt;del&gt;DERBY-2872&lt;/del&gt;&lt;/a&gt; and has been tested to some extent in replication slave mode.&lt;/p&gt;</comment>
                            <comment id="12534047" author="jorgenlo" created="Thu, 11 Oct 2007 15:15:22 +0100"  >&lt;p&gt;Patch 1b supersedes 1a. All tests pass.&lt;/p&gt;

&lt;p&gt;The patch includes the modifications from 1a. It also adds a method initializeSlaveReplication that sets up the log file so that log records received from the master can be applied to the slave log files. &lt;/p&gt;

&lt;p&gt;In a normal bootup of a database, the log file is initialized in LogToFile.recover() after the redo loop.  That is too late for the slave functionality to work since the recovery thread will get stuck in that redo loop for the duration of the slave mode.&lt;/p&gt;

&lt;p&gt;Requesting review on patch 1b.&lt;/p&gt;</comment>
                            <comment id="12536690" author="oysteing" created="Mon, 22 Oct 2007 15:43:41 +0100"  >&lt;p&gt;Thanks for the patch, J&#248;rgen.  My review of this patch are more&lt;br/&gt;
questions than comments since I am not quite sure I have grasped all&lt;br/&gt;
the intricacies here:&lt;/p&gt;

&lt;p&gt;1. I do not feel the relationship between logFileNumber and&lt;br/&gt;
   bootTimeLogFileNumber is quite clear from the comments.  &lt;/p&gt;

&lt;p&gt;   a) I think it would be good if you could explicitly say what will&lt;br/&gt;
      be the state of these two after boot, during recovery, and after&lt;br/&gt;
      recovery has completed.&lt;/p&gt;

&lt;p&gt;   b) recover(): Comment say that logFileNumber is determined at boot&lt;br/&gt;
      time.  Is this still true?&lt;/p&gt;

&lt;p&gt;   c) I do not understand comment for assignment logFileNumber =&lt;br/&gt;
      bootTimeLogFileNumber.  Comment says bootTimeLogFileNumber is not&lt;br/&gt;
      needed anymore. Then, why the assignment?&lt;/p&gt;

&lt;p&gt;   d) I do not quite understand why you need to set logFileNumber to&lt;br/&gt;
      bootTimeLogFileNumber at end of recovery since the next thing&lt;br/&gt;
      you will normally do is to set it to something else based on&lt;br/&gt;
      logEnd.&lt;/p&gt;

&lt;p&gt;   e) Comment says that logFileNumber is only changed by&lt;br/&gt;
      switchLogFile. I guess that is not strictly true.&lt;/p&gt;

&lt;p&gt;   f) Comments for these fields are (partly?) below the declaration.&lt;br/&gt;
      This is a bit unorthodox, and I feel some empty lines could be&lt;br/&gt;
      added in order to make clear whether comments for declaration of&lt;br/&gt;
      fields apply to field above or below comment.&lt;/p&gt;

&lt;p&gt;   g) I think it would be good with I comment that states why you&lt;br/&gt;
      have to wait for the first log file to be complete in the&lt;br/&gt;
      beginning of recover().  I guess it because&lt;br/&gt;
      getLogFileAtBeginning is not called on this file.  Hence, the&lt;br/&gt;
      normal stop mechanism will not work.  Given that you have this&lt;br/&gt;
      test, is the test for slaveRecoveryBlocked really needed?&lt;/p&gt;

&lt;p&gt;2. What is preventing someone from executing slave start before boot&lt;br/&gt;
   has completed?  I would think that could create some nasty race&lt;br/&gt;
   conditions.  (E.g., if initializeSlaveReplication() uses&lt;br/&gt;
   logFileNumber before it has been initialized by boot()).  Maybe it&lt;br/&gt;
   is the responsibility of the caller to synchronize this, but then&lt;br/&gt;
   the javadoc for initializeSlaveReplication() should say so.&lt;/p&gt;

&lt;p&gt;3. What happens if failover is initiated before the first log file&lt;br/&gt;
   switch?  Will not that require a notification and that&lt;br/&gt;
   allowedToReadFileNumber is updated in order to get recovery going?&lt;/p&gt;

&lt;p&gt;4. getLogFileAtBeginning():&lt;/p&gt;

&lt;p&gt;   a) I think the assumption that this is only called by the recovery&lt;br/&gt;
      thread (at least while in slave replication mode), should be&lt;br/&gt;
      documented in the Javadoc.&lt;/p&gt;

&lt;p&gt;   b) Is the MT comment in the javadoc still valid?&lt;/p&gt;


&lt;p&gt;5. Add exceptions to javadoc for initializeSlaveReplication?&lt;/p&gt;
</comment>
                            <comment id="12536975" author="jorgenlo" created="Tue, 23 Oct 2007 13:04:59 +0100"  >&lt;p&gt;Thank&apos;s for reviewing the patch, &#216;ystein. There is a lot&lt;br/&gt;
happening here since two threads are working on the same object&lt;br/&gt;
and requires access to the same information but must not interfere &lt;br/&gt;
with one another.&lt;/p&gt;

&lt;p&gt;Patch 1c addresses most of your comments.&lt;/p&gt;

&lt;p&gt;I see that some of the intricacies arise because I tried to split&lt;br/&gt;
the &quot;big patch&quot; into multiple smaller patches to ease the review&lt;br/&gt;
process. I may have achieved the opposite, especially regarding&lt;br/&gt;
comment 3. I&apos;ll do my best to explain:&lt;/p&gt;

&lt;p&gt;&amp;gt; 1 a), b), c), e), 4 a), 5&lt;/p&gt;

&lt;p&gt;Changed as requested. &lt;/p&gt;

&lt;p&gt;&amp;gt;    d) I do not quite understand why you need to set logFileNumber to&lt;br/&gt;
&amp;gt;       bootTimeLogFileNumber at end of recovery since the next thing&lt;br/&gt;
&amp;gt;       you will normally do is to set it to something else based on&lt;br/&gt;
&amp;gt;       logEnd.&lt;/p&gt;

&lt;p&gt;After the redo pass? logFileNumber is used in the 				&lt;br/&gt;
&quot;if (logEnd == LogCounter.INVALID_LOG_INSTANT)&quot; block; it would not be &lt;br/&gt;
necessary otherwise. &lt;/p&gt;

&lt;p&gt;&amp;gt;    f) Comments for these fields are (partly?) below the declaration.&lt;br/&gt;
&amp;gt;       This is a bit unorthodox, and I feel some empty lines could be&lt;br/&gt;
&amp;gt;       added in order to make clear whether comments for declaration of&lt;br/&gt;
&amp;gt;       fields apply to field above or below comment.&lt;/p&gt;

&lt;p&gt;Fixed for bootTimeLogFileNumber, not the existing comment for&lt;br/&gt;
logFileNumber&lt;/p&gt;

&lt;p&gt;&amp;gt;    g) I think it would be good with I comment that states why you&lt;br/&gt;
&amp;gt;       have to wait for the first log file to be complete in the&lt;br/&gt;
&amp;gt;       beginning of recover().  I guess it because&lt;br/&gt;
&amp;gt;       getLogFileAtBeginning is not called on this file.  Hence, the&lt;br/&gt;
&amp;gt;       normal stop mechanism will not work.  Given that you have this&lt;br/&gt;
&amp;gt;       test, is the test for slaveRecoveryBlocked really needed?&lt;/p&gt;

&lt;p&gt;You are right. slaveRecoveryBlocked can be removed from&lt;br/&gt;
the &quot;slave-block&quot; in the beginning of recover(). Additionaly: no&lt;br/&gt;
longer needed in getLogFileAtBeginning. The new patch rather&lt;br/&gt;
exploits the fact that recovery does not call&lt;br/&gt;
getLogFileAtBeginning until allowedToReadFileNumber has been&lt;br/&gt;
updated for the first time. Also added comment as suggested.&lt;/p&gt;

&lt;p&gt;&amp;gt; 2. What is preventing someone from executing slave start before boot&lt;br/&gt;
&amp;gt;    has completed?  I would think that could create some nasty race&lt;br/&gt;
&amp;gt;    conditions.  (E.g., if initializeSlaveReplication() uses&lt;br/&gt;
&amp;gt;    logFileNumber before it has been initialized by boot()).  Maybe it&lt;br/&gt;
&amp;gt;    is the responsibility of the caller to synchronize this, but then&lt;br/&gt;
&amp;gt;    the javadoc for initializeSlaveReplication() should say so.&lt;/p&gt;

&lt;p&gt;Good point. The race condition will not occur since the log&lt;br/&gt;
factory is booted before the slave controller (and thereby the&lt;br/&gt;
slave thread) is started in RawStore#boot(). This &quot;factory&lt;br/&gt;
booting&quot; is single-threaded. I added a comment as suggested.&lt;/p&gt;

&lt;p&gt;&amp;gt; 3. What happens if failover is initiated before the first log file&lt;br/&gt;
&amp;gt;    switch?  Will not that require a notification and that&lt;br/&gt;
&amp;gt;    allowedToReadFileNumber is updated in order to get recovery going?&lt;/p&gt;

&lt;p&gt;It will require a notify. This notify will be added in a followup&lt;br/&gt;
patch containing a &quot;LogToFile#stopRepliationSlaveRole()&quot; method.&lt;br/&gt;
The allowedToReadFileNumber variable does not need to be updated&lt;br/&gt;
because inReplicationSlaveMode will be false after failover.&lt;/p&gt;

&lt;p&gt;&amp;gt; 4 b) Is the MT comment in the javadoc still valid?&lt;/p&gt;

&lt;p&gt;Yes&lt;/p&gt;</comment>
                            <comment id="12537583" author="oysteing" created="Thu, 25 Oct 2007 13:51:01 +0100"  >&lt;p&gt;Thanks for the update, J&#248;rgen.&lt;br/&gt;
Committed patch, derby-3071_continuous-recovery_1c.diff, as revision 588210.&lt;/p&gt;

&lt;p&gt;With respect to 1d), I would think it would be less confusing if the assignment was put inside the if block where it is needed. You may consider that for future follow-up patches.  Actually, I am not sure the assignment is needed since it seems to me that when (logEnd == LogCounter.INVALID_LOG_INSTANT), logFileNumber will not have changed since boot.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12367450" name="derby-3071_continuous-recovery_1a.diff" size="9832" author="jorgenlo" created="Wed, 10 Oct 2007 09:54:48 +0100"/>
                            <attachment id="12367449" name="derby-3071_continuous-recovery_1a.stat" size="70" author="jorgenlo" created="Wed, 10 Oct 2007 09:54:48 +0100"/>
                            <attachment id="12367571" name="derby-3071_continuous-recovery_1b.diff" size="13140" author="jorgenlo" created="Thu, 11 Oct 2007 15:15:22 +0100"/>
                            <attachment id="12368206" name="derby-3071_continuous-recovery_1c.diff" size="17568" author="jorgenlo" created="Tue, 23 Oct 2007 13:04:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Oct 2007 14:43:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30716</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0k1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37067</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>