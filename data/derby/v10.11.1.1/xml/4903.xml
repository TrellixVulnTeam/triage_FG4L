<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:17 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4903/DERBY-4903.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4903] Plan exporter tool produces broken output if query contains less-than operator</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4903</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The plan exporter tool fails to produce well-formed output for the following query:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from sysibm.sysdummy1 where ibmreqd &amp;lt; &apos;Z&apos;;&lt;/p&gt;

&lt;p&gt;The generation of XML doesn&apos;t fail, but when I open the file in Firefox, I see this message:&lt;/p&gt;

&lt;p&gt;XML Parsing Error: not well-formed&lt;br/&gt;
Location: &lt;a href=&quot;file:///tmp/plan.xml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:///tmp/plan.xml&lt;/a&gt;&lt;br/&gt;
Line Number 9, Column 11:&lt;/p&gt;

&lt;p&gt;Operator: &amp;lt;&lt;br/&gt;
----------^&lt;/p&gt;

&lt;p&gt;HTML generation prints the following error, and produces an empty file:&lt;/p&gt;

&lt;p&gt;ERROR:  &apos;The value of attribute &quot;scan_qualifiers&quot; associated with an element type &quot;null&quot; must not contain the &apos;&amp;lt;&apos; character.&apos;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12479944">DERBY-4903</key>
            <summary>Plan exporter tool produces broken output if query contains less-than operator</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nirmal">Nirmal Fernando</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Nov 2010 11:34:14 +0000</created>
                <updated>Tue, 19 Apr 2011 13:39:31 +0100</updated>
                            <resolved>Tue, 1 Feb 2011 05:24:13 +0000</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12932029" author="nirmal" created="Mon, 15 Nov 2010 11:51:32 +0000"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;I guess I handled this inside &quot;AccessDatabase.Statement()&quot; method. But not sure what went wrong here.&lt;/p&gt;</comment>
                            <comment id="12932033" author="nirmal" created="Mon, 15 Nov 2010 12:18:30 +0000"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;I didn&apos;t notice the latter part of the description (i.e. ERROR: &apos;The value of attribute &quot;scan_qualifiers&quot; associated with an element type &quot;null&quot; must not contain the &apos;&amp;lt;&apos; character.&apos;), earlier. Sorry about that.&lt;/p&gt;

&lt;p&gt;So, it seems like there&apos;s a bug here.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into this if you&apos;re not going to take it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for pointing this out!&lt;/p&gt;</comment>
                            <comment id="12932042" author="knutanders" created="Mon, 15 Nov 2010 12:33:44 +0000"  >&lt;p&gt;Hi Nirmal,&lt;br/&gt;
Thanks for taking a look at this bug. And for volunteering to fix it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12932044" author="knutanders" created="Mon, 15 Nov 2010 12:44:46 +0000"  >&lt;p&gt;Note that the problem is not limited to the character &apos;&amp;lt;&apos;. You&apos;ll see similar problems if the queries run against a table with &apos;&quot;&apos; in its name, for example with these queries:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table &quot;A &quot;&quot;quoted&quot;&quot; table name&quot; (x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from &quot;A &quot;&quot;quoted&quot;&quot; table name&quot;;&lt;br/&gt;
X          &lt;br/&gt;
-----------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;/p&gt;</comment>
                            <comment id="12934734" author="nirmal" created="Tue, 23 Nov 2010 05:30:01 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a patch which addresses the occurrences of special XML characters such as &amp;gt;(&amp;gt;), &amp;lt;(&amp;lt;), &apos;(&amp;apos;) and &quot;(&amp;quot;), in both &amp;lt;statement&amp;gt; nodes and attribute nodes. &lt;/p&gt;

&lt;p&gt;I&apos;ve attached few test cases as well.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12935205" author="bryanpendleton" created="Wed, 24 Nov 2010 04:50:08 +0000"  >&lt;p&gt;This seems like a pretty reasonable approach, and the test cases look appropriate, too.&lt;/p&gt;

&lt;p&gt;It seems like it would be nice to perform the special character encoding of the&lt;br/&gt;
XML attribute strings &lt;b&gt;prior&lt;/b&gt; to composing them into quoted substrings in the XML tag string,&lt;br/&gt;
since then replaceInAttribute() wouldn&apos;t have to go searching for the start and end of&lt;br/&gt;
the attribute string to find it.&lt;/p&gt;

&lt;p&gt;But this diff is small and focused on the problem at hand, and that&apos;s always good.&lt;/p&gt;

</comment>
                            <comment id="12935320" author="knutanders" created="Wed, 24 Nov 2010 13:35:13 +0000"  >&lt;p&gt;It may also be worthwhile to factor out the code that encodes the special characters, and put it in a helper method instead of repeating the code.&lt;/p&gt;

&lt;p&gt;I think we also need to escape &amp;amp; -&amp;gt; &amp;amp; in these strings. The query below results in XML that&apos;s not well-formed, and the HTML generation fails with a NullPointerException:&lt;/p&gt;

&lt;p&gt;    select * from sysibm.sysdummy1 where ibmreqd = &apos;a, b &amp;amp; c&apos;&lt;/p&gt;</comment>
                            <comment id="12935323" author="knutanders" created="Wed, 24 Nov 2010 13:44:34 +0000"  >&lt;p&gt;By the way, it looks like the HTML generation uses javax.xml.* classes in order to transform XML to HTML. Is there a reason why we couldn&apos;t use those classes to generate the XML in the first place? I suppose they would escape the strings automatically (and correctly).&lt;/p&gt;</comment>
                            <comment id="12935386" author="nirmal" created="Wed, 24 Nov 2010 16:24:59 +0000"  >&lt;p&gt;Kunt: As I remember we had few issues on doing this;&lt;/p&gt;

&lt;p&gt;1) A way to add a pointer to the XSL style sheet&lt;br/&gt;
2) Difficulty of finding all classes needed, in all JREs.&lt;/p&gt;

&lt;p&gt;Are these making sense? If you think otherwise please let us know.&lt;/p&gt;

&lt;p&gt;Bryan: Hi Bryan! Since we&apos;re composing XML attribute strings into quoted substrings, from the query it self, I can&apos;t see away, where we can avoid doing this. Please forgive me if I misunderstood your question.&lt;/p&gt;</comment>
                            <comment id="12935413" author="knutanders" created="Wed, 24 Nov 2010 17:40:46 +0000"  >&lt;p&gt;&amp;gt; 1) A way to add a pointer to the XSL style sheet&lt;/p&gt;

&lt;p&gt;I think the org.w3c.dom.Document.createProcessingInstruction() method&lt;br/&gt;
could do that. The following code fragment seems to create a pointer&lt;br/&gt;
to the style sheet for me, and it automatically escapes the &apos;&amp;lt;&apos;, &apos;&amp;gt;&apos;&lt;br/&gt;
and &apos;&amp;amp;&apos; characters in the query text:&lt;/p&gt;

&lt;p&gt;        Document doc =&lt;br/&gt;
                DocumentBuilderFactory.newInstance().&lt;br/&gt;
                newDocumentBuilder().newDocument();&lt;/p&gt;

&lt;p&gt;        doc.appendChild(&lt;br/&gt;
                doc.createProcessingInstruction(&lt;br/&gt;
                        &quot;xml-stylesheet&quot;,&lt;br/&gt;
                        &quot;type=\&quot;text/xsl\&quot; href=\&quot;...\&quot;&quot;));&lt;/p&gt;

&lt;p&gt;        Element plan = doc.createElement(&quot;plan&quot;);&lt;br/&gt;
        doc.appendChild(plan);&lt;/p&gt;

&lt;p&gt;        Element statement = doc.createElement(&quot;statement&quot;);&lt;br/&gt;
        statement.setTextContent(&quot;SELECT * FROM T WHERE X &amp;lt;&amp;gt; &apos;a &amp;amp; b&apos;&quot;);&lt;br/&gt;
        plan.appendChild(statement);&lt;/p&gt;

&lt;p&gt;        Element time = doc.createElement(&quot;time&quot;);&lt;br/&gt;
        time.setTextContent(&quot;2010-11-24 18:27:14.466&quot;);&lt;br/&gt;
        plan.appendChild(time);&lt;/p&gt;

&lt;p&gt;        Source source = new DOMSource(doc);&lt;br/&gt;
        Result result = new StreamResult(System.out);&lt;/p&gt;

&lt;p&gt;        Transformer trans = TransformerFactory.newInstance().newTransformer();&lt;br/&gt;
        trans.transform(source, result);&lt;/p&gt;


&lt;p&gt;&amp;gt; 2) Difficulty of finding all classes needed, in all JREs. &lt;/p&gt;

&lt;p&gt;That&apos;s what I thought too, and that&apos;s why I was surprised to see that&lt;br/&gt;
the generation of HTML files used those classes. But since the tool&lt;br/&gt;
now appears to depend on these classes being available, wouldn&apos;t it&lt;br/&gt;
make sense to use them for generating the XML too?&lt;/p&gt;</comment>
                            <comment id="12935631" author="nirmal" created="Thu, 25 Nov 2010 04:01:23 +0000"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the ideas! &lt;/p&gt;

&lt;p&gt;Can you please consider following.&lt;/p&gt;

&lt;p&gt;Few negative/tricky points on doing this:&lt;br/&gt;
1) This way XML document becomes hard to read: It was a requirement, so that the user can go through a generated XML file and build up his own Style sheet.&lt;/p&gt;

&lt;p&gt;eg: &lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&amp;lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;...&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;plan&amp;gt;&amp;lt;statement&amp;gt;SELECT * FROM T WHERE X &amp;lt;&amp;gt; &apos;a &amp;amp; b&apos;&amp;lt;/statement&amp;gt;&amp;lt;time&amp;gt;2010-11-24 18:27:14.466&amp;lt;/time&amp;gt;&amp;lt;/plan&amp;gt;&lt;/p&gt;

&lt;p&gt;2) This need some re-factoring of the design approach:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Now we are getting the name of the attribute from the query, we might need to change it.&lt;/li&gt;
	&lt;li&gt;Now I am building the whole query plan tree and then only write the whole string to the file, we need to alter this approach.&lt;br/&gt;
etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;3) Given the time constraint at that time, I was unable to find any other approach of creating the HTML file. Since creating the HTML file involves parsing the style sheet as well. I think we need some extra classes when creating the XML document. So, I am not quite sure about the presence of those extra classes in all JREs.&lt;/p&gt;

&lt;p&gt;4) Element.setTextContent() method is not there in J2SE 1.4.2, and it gave rubbish when I used setNodeValue().&lt;/p&gt;

&lt;p&gt;After considering all these facts I think it&apos;s better to keep XML generation in this way and just handle those special character occurrences.&lt;/p&gt;

&lt;p&gt;I&apos;m not reluctant to change the code if you have other ideas, I just wanted to say what I feel &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="12935775" author="knutanders" created="Thu, 25 Nov 2010 15:18:21 +0000"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;Thanks for writing up the challenges with such a rewrite. Some more&lt;br/&gt;
comments below...&lt;/p&gt;

&lt;p&gt;&amp;gt; Few negative/tricky points on doing this:&lt;br/&gt;
&amp;gt; 1) This way XML document becomes hard to read: It was a requirement,&lt;br/&gt;
&amp;gt; so that the user can go through a generated XML file and build up&lt;br/&gt;
&amp;gt; his own Style sheet.&lt;/p&gt;

&lt;p&gt;I think the Transformer can be tuned to pretty print the document. For&lt;br/&gt;
example, this code makes it output XML that looks more or less&lt;br/&gt;
identical to the manually formatted XML generated by the exporter:&lt;/p&gt;

&lt;p&gt;    trans.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);&lt;br/&gt;
    trans.setOutputProperty(&quot;&lt;/p&gt;
{http://xml.apache.org/xslt}
&lt;p&gt;indent-amount&quot;, &quot;4&quot;);&lt;/p&gt;

&lt;p&gt;(I&apos;m not sure exactly how portable the above code is, but I&apos;m sure we&lt;br/&gt;
can work out something that&apos;ll do the trick.)&lt;/p&gt;

&lt;p&gt;I&apos;ve also noticed that, no matter how badly formatted the XML document&lt;br/&gt;
is, it looks nice and tidy when I open it in Firefox. I assume other&lt;br/&gt;
XML tools will behave similarly.&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) This need some re-factoring of the design approach:&lt;/p&gt;

&lt;p&gt;I agree. It will be a chunk of work that someone must volunteer to do.&lt;/p&gt;

&lt;p&gt;&amp;gt; 3) Given the time constraint at that time, I was unable to find any&lt;br/&gt;
&amp;gt; other approach of creating the HTML file. Since creating the HTML&lt;br/&gt;
&amp;gt; file involves parsing the style sheet as well. I think we need some&lt;br/&gt;
&amp;gt; extra classes when creating the XML document. So, I am not quite&lt;br/&gt;
&amp;gt; sure about the presence of those extra classes in all JREs.&lt;/p&gt;

&lt;p&gt;I&apos;m assuming the JREs in question are the Java ME ones. Those JREs&lt;br/&gt;
don&apos;t even have the classes used in the generation of HTML files, so&lt;br/&gt;
they&apos;d need the Xalan jars on the classpath to be able to run the plan&lt;br/&gt;
exporter in any case. I believe the Xalan jars contain all the classes&lt;br/&gt;
and interfaces needed, also to generate the XML file, but I may be&lt;br/&gt;
mistaken.&lt;/p&gt;

&lt;p&gt;&amp;gt; 4) Element.setTextContent() method is not there in J2SE 1.4.2, and&lt;br/&gt;
&amp;gt; it gave rubbish when I used setNodeValue().&lt;/p&gt;

&lt;p&gt;Right, to make it work in 1.4.2, I think we need to replace&lt;br/&gt;
setTextContent(text) with appendChild(doc.createTextNode(text)).&lt;/p&gt;

&lt;p&gt;&amp;gt; After considering all these facts I think it&apos;s better to keep XML&lt;br/&gt;
&amp;gt; generation in this way and just handle those special character&lt;br/&gt;
&amp;gt; occurrences.&lt;/p&gt;

&lt;p&gt;Well, I lean towards the opposite conclusion... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;If we had used the XML libraries to generate the XML, we wouldn&apos;t have&lt;br/&gt;
had this bug or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4902&quot; title=&quot;Encoding problem in output from plan exporter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4902&quot;&gt;&lt;del&gt;DERBY-4902&lt;/del&gt;&lt;/a&gt;, and perhaps other bugs that we haven&apos;t&lt;br/&gt;
discovered yet.&lt;/p&gt;

&lt;p&gt;But I think the current patch would be a good incremental&lt;br/&gt;
improvement. I&apos;ll check it in and back-port it to the 10.7 branch so&lt;br/&gt;
that it makes it into the next release candidate. If we want to change&lt;br/&gt;
how the XML is generated, we can file a new JIRA issue to track that&lt;br/&gt;
work.&lt;/p&gt;</comment>
                            <comment id="12935777" author="bryanpendleton" created="Thu, 25 Nov 2010 15:35:13 +0000"  >&lt;p&gt;+1 to not worrying too much about the human-readability of the generated XML.&lt;br/&gt;
I think there are plenty of other reformatting tools that an XML-savvy user will&lt;br/&gt;
have access to. &lt;/p&gt;

&lt;p&gt;Regarding the selection of which classes to use, I&apos;d like to see us using&lt;br/&gt;
the built-in system classes for XML  handling wherever possible. As Nirmal&lt;br/&gt;
notes, we were struggling with the availability of these classes, see for&lt;br/&gt;
example the discussion of xml-apis.jar in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4781&quot; title=&quot;suites.All fails completely with  Failed to invoke suite():java.lang.reflect.InvocationTargetException  because of XplainStatisticsTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4781&quot;&gt;&lt;del&gt;DERBY-4781&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Over time, the core platform Java environments become more sophisticated and&lt;br/&gt;
provide more complete XML support, and as that occurs, if we can shift&lt;br/&gt;
work away from our own custom code and into system-provided code that&lt;br/&gt;
seems like a clear win, so I think it would be great if Knut could preserve&lt;br/&gt;
these suggestions for how to do that as part of a JIRA issue somewhere.&lt;/p&gt;</comment>
                            <comment id="12935784" author="knutanders" created="Thu, 25 Nov 2010 16:26:23 +0000"  >&lt;p&gt;Committed derby-4903-a to trunk with revision 1039084.&lt;/p&gt;</comment>
                            <comment id="12935785" author="nirmal" created="Thu, 25 Nov 2010 16:26:43 +0000"  >&lt;p&gt;Hi Knut &amp;amp; Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for the responds.&lt;/p&gt;

&lt;p&gt;I really like to try this out, but due to academic constraints that I have till the 3rd week of January 2011, &lt;br/&gt;
I am not quite sure that I will be able to look at re-factoring the code before that. If there&apos;s no rush I&apos;ll definitely&lt;br/&gt;
take it after January 2011. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;For now I&apos;ll attach a patch soon, on comments received for patch (a).&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12935791" author="knutanders" created="Thu, 25 Nov 2010 16:39:21 +0000"  >&lt;p&gt;Thanks, Bryan. I&apos;ll file a new JIRA issue for making use of the XML libraries.&lt;/p&gt;</comment>
                            <comment id="12935796" author="knutanders" created="Thu, 25 Nov 2010 17:03:00 +0000"  >&lt;p&gt;Here&apos;s a patch that extends the test case with testing more special characters, and by adding a less-than operator as mentioned in the original bug description.&lt;/p&gt;

&lt;p&gt;The test fails because the special character &apos;&amp;amp;&apos; wasn&apos;t handled by the patch. I tried to add a case for &apos;&amp;amp;&apos; in AccessDatabase, but the replace methods go into an infinite loop when trying to replace &apos;&amp;amp;&apos; with &quot;&amp;amp;&quot; because the replacement text includes the character to be replaced. I&apos;ll try to come up with a different solution.&lt;/p&gt;</comment>
                            <comment id="12935797" author="nirmal" created="Thu, 25 Nov 2010 17:03:16 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;&amp;gt;It seems like it would be nice to perform the special character encoding of the&lt;br/&gt;
&amp;gt;XML attribute strings &lt;b&gt;prior&lt;/b&gt; to composing them into quoted substrings in the XML tag string,&lt;br/&gt;
&amp;gt;since then replaceInAttribute() wouldn&apos;t have to go searching for the start and end of&lt;br/&gt;
&amp;gt;the attribute string to find it.&lt;/p&gt;

&lt;p&gt;Since we&apos;re getting the attributes as quoted substrings from the database query it self,&lt;br/&gt;
I&apos;m not quite clear whether this is possible.&lt;/p&gt;

</comment>
                            <comment id="12935800" author="nirmal" created="Thu, 25 Nov 2010 17:07:04 +0000"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;What about something like this for replacing &apos;&amp;amp;&apos; ?&lt;/p&gt;</comment>
                            <comment id="12935807" author="knutanders" created="Thu, 25 Nov 2010 17:28:29 +0000"  >&lt;p&gt;Thanks Nirmal, but that was the code I tried which went into an infinite loop. The reason is that the replace() method will continue until the resulting string contains no &apos;&amp;amp;&apos; characters, and even if it replaces a &apos;&amp;amp;&apos; with &quot;&amp;amp;&quot;, it will still find an &apos;&amp;amp;&apos; in the result string.&lt;/p&gt;

&lt;p&gt;The attached patch (derby-4903-c.diff) uses a different approach, which also works for &apos;&amp;amp;&apos;.&lt;/p&gt;</comment>
                            <comment id="12935811" author="nirmal" created="Thu, 25 Nov 2010 17:40:44 +0000"  >&lt;p&gt;Oh, yeah! Your approach looks fine to me!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12935951" author="knutanders" created="Fri, 26 Nov 2010 08:34:07 +0000"  >&lt;p&gt;Thanks, Nirmal. Committed revision 1039268.&lt;/p&gt;</comment>
                            <comment id="12935956" author="knutanders" created="Fri, 26 Nov 2010 08:47:48 +0000"  >&lt;p&gt;Merged to 10.7 and committed 1039272. Closing the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12480934">DERBY-4919</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12460235" name="derby-4903-a.diff" size="7713" author="nirmal" created="Tue, 23 Nov 2010 05:30:00 +0000"/>
                            <attachment id="12460464" name="derby-4903-b.diff" size="1632" author="nirmal" created="Thu, 25 Nov 2010 17:07:04 +0000"/>
                            <attachment id="12460466" name="derby-4903-c.diff" size="5583" author="knutanders" created="Thu, 25 Nov 2010 17:28:29 +0000"/>
                            <attachment id="12460462" name="test.diff" size="1979" author="knutanders" created="Thu, 25 Nov 2010 17:03:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 15 Nov 2010 11:51:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24519</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0gf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36478</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>