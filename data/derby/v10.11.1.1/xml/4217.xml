<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:44:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4217/DERBY-4217.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4217] Make the default port for the suites.All run configurable with a system property.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4217</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The goal is to make the port used for suites.All configurable through a system property passed on to the JVM.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12424765">DERBY-4217</key>
            <summary>Make the default port for the suites.All run configurable with a system property.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12416700">DERBY-4090</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 May 2009 22:40:49 +0100</created>
                <updated>Fri, 21 Jan 2011 18:44:13 +0000</updated>
                            <resolved>Sat, 18 Jul 2009 21:30:41 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12707099" author="espinha" created="Thu, 7 May 2009 21:55:03 +0100"  >&lt;p&gt;Attaching a possible patch for this. It&apos;s a simple approach but I think it works.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running the suites.All overnight.&lt;/p&gt;</comment>
                            <comment id="12707148" author="kmarsden" created="Thu, 7 May 2009 22:58:25 +0100"  >&lt;p&gt;We should probably call the property derby.tests.port instead of just port. Otherwise the patch  looks ok on visual inspection. I didn&apos;t try it.  You should also update &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyJUnitTesting&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyJUnitTesting&lt;/a&gt; after this has been changed.&lt;/p&gt;

</comment>
                            <comment id="12707153" author="espinha" created="Thu, 7 May 2009 23:10:55 +0100"  >&lt;p&gt;Kathey is right, for a moment there I forgot our standard for property names. Fixed that and optimised the code so that only one call is made to retrieve the property. Minor stuff.&lt;/p&gt;</comment>
                            <comment id="12707508" author="espinha" created="Fri, 8 May 2009 21:15:57 +0100"  >&lt;p&gt;First I have to leave a heads-up. Do NOT commit these patches into the trunk as they are still being tested.&lt;/p&gt;

&lt;p&gt;I have run into something weird that I could use an extra pair of eyes on.&lt;/p&gt;

&lt;p&gt;Basically, this Repro contains a test that passes if the property -Dderby.tests.port=1527 but fails with pretty much any other port.&lt;/p&gt;

&lt;p&gt;In essence, by running:&lt;br/&gt;
java -Dderby.tests.port=1527 junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.derbynet.ReproNetworkServerControl&lt;/p&gt;

&lt;p&gt;the test passes. However, if you run it like:&lt;br/&gt;
java -Dderby.tests.port=9980 junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.derbynet.ReproNetworkServerControl&lt;/p&gt;

&lt;p&gt;the test will fail with an assertion error.&lt;/p&gt;

&lt;p&gt;Please keep in mind that you have to apply this latest patch to get the described behavior.&lt;/p&gt;</comment>
                            <comment id="12707516" author="kmarsden" created="Fri, 8 May 2009 21:32:40 +0100"  >&lt;p&gt;I think in testMaxThreads_0 the NetworkServerControl  command needs to specify -p &amp;lt;portNumber&amp;gt; &lt;br/&gt;
Currently it is just using the default port.&lt;/p&gt;</comment>
                            <comment id="12707521" author="espinha" created="Fri, 8 May 2009 21:47:59 +0100"  >&lt;p&gt;Thank you Kathey, you were indeed right!&lt;/p&gt;</comment>
                            <comment id="12707800" author="espinha" created="Sun, 10 May 2009 16:29:16 +0100"  >&lt;p&gt;I have hit a speedbump with this issue. I have taken Kathey&apos;s advice and now those tests are no longer a problem. However there&apos;s a new issue.&lt;/p&gt;

&lt;p&gt;The issue in question has to do with the ScriptTests. Basically, some of the .sql files that are ran as part of a ScriptTestCase, have the port hardcoded right on the .sql file (e.g. connect &apos;jdbc:derby://localhost:1527/testij;create=true&apos; USER &apos;dbadmin&apos; PASSWORD &apos;dbadmin&apos;).&lt;/p&gt;

&lt;p&gt;I have been thinking about how to overcome this, but the solution I had thought of is far from ideal and I have had issues trying to implement it. My idea was to change the port references to a &apos;&amp;lt;port&amp;gt;&apos; placeholder, and then replace the &amp;lt;port&amp;gt; occurrences with the actual port. This however is complicated.&lt;/p&gt;

&lt;p&gt;If I was to replace the ports on the actual files, then the first test run would be okay, but the consequent ones would not have the &apos;&amp;lt;port&amp;gt;&apos; placeholder; instead, they&apos;d have the port from the previous run. Not good.&lt;/p&gt;

&lt;p&gt;My idea was to make a temporary copy of the file, replace it on that file, and have the test run upon that sql file. This would also have to be done to the canon file (.out). When the test is done, the file is deleted.&lt;/p&gt;

&lt;p&gt;I started implementing this last solution, but I&apos;m running into so many problems (with permissions to copy the files, etc) that I thought I&apos;d gather some opinions here first. Maybe there&apos;s an easier way to go about this.&lt;/p&gt;

&lt;p&gt;Any thoughts?&lt;/p&gt;</comment>
                            <comment id="12707801" author="espinha" created="Sun, 10 May 2009 16:32:32 +0100"  >&lt;p&gt;I forgot to mention, but I should. The test that is currently failing and that I&apos;m looking at is the NetIjTest under org.apache.derbyTesting.functionTests.tests.derbynet which loads the testclientij.sql .&lt;/p&gt;</comment>
                            <comment id="12708087" author="kmarsden" created="Mon, 11 May 2009 16:51:07 +0100"  >&lt;p&gt;It seemed to work for me with ij to specify:&lt;br/&gt;
 java -Dij.protocol=jdbc:derby://localhost:1528/ org.apache.derby.tools.ij&lt;/p&gt;

&lt;p&gt;and then in ij, just specify the database and connection attributes.  If you do this, the calling program could control the port and you could change the script to not include it. &lt;/p&gt;

&lt;p&gt;Would that work?&lt;/p&gt;
</comment>
                            <comment id="12708556" author="espinha" created="Tue, 12 May 2009 19:35:42 +0100"  >&lt;p&gt;Just uploading the patch and stat for future reference. This patch is NOT to be commited to the source.&lt;/p&gt;

&lt;p&gt;This version contains some deep changes to the ScriptTestCase, the NetIjTest and its resource files, and some other auxiliary classes. The changes should however be non-intrusive for existent test cases.&lt;/p&gt;</comment>
                            <comment id="12708896" author="espinha" created="Wed, 13 May 2009 13:17:27 +0100"  >&lt;p&gt;I&apos;m marking this issue as Patch Available.&lt;/p&gt;

&lt;p&gt;However, please note:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This issue will require a lot of tangling with the code, therefore Kathey suggested cumulative patches rather than a big fat patch.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;As it is, this patch effectively allows the use of derby.tests.port on some of the tests. Still, it does not break anything for any of the tests if no system property for the port is specified. Kathey refered that this was the requirement for the patch to be commited. After running suites.All with this patch on, I can say that this requirement is met.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Please do not close the issue, as I will still be doing additional work to fix the remaining failing tests when a port is indeed specified.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12709623" author="kmarsden" created="Fri, 15 May 2009 00:10:07 +0100"  >&lt;p&gt;Hi Tiago.  Thank you for the patch. Just a few comments.&lt;/p&gt;


&lt;p&gt;For NetworkServerControlApi changes, I think it would be worthwile to have a TestConfiguration.newNetworkServerControl() method that uses the default host and port in case we want to fix up the tests to allow remote testing.&lt;/p&gt;

&lt;p&gt;In general, outside of TestConfiguration, I think a TestConfiguration.getPort() method would be better than referring to DEFUALT_PORT directly.&lt;/p&gt;

&lt;p&gt;I think it would be good if the runScript method that doesn&apos;t take the loadSystemProperties parameter just called the new one with loadSystemProperties set to false instead of having duplicate code.  Then you can also remove the old getUtilMain method from Main.java &lt;/p&gt;
</comment>
                            <comment id="12709915" author="espinha" created="Fri, 15 May 2009 18:26:02 +0100"  >&lt;p&gt;Hello Kathey.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I get the point of having such a method on the TestConfiguration. I believe that having a way of overriding the derby.tests.port property might put in jeopardy the whole purpose of this issue. This issue was originally created as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4090&quot; title=&quot;Provide the ability to run tests concurrently on the same machine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4090&quot;&gt;DERBY-4090&lt;/a&gt;, and if there is the possibility of overriding this property, then concurrent testing on the same machine might have unexpected results (i.e. two tests, one from JUnit and another one from Canon, trying to bind on the 1527 port).&lt;/p&gt;

&lt;p&gt;As to the second point, I agree that it would be more correct to have a getPort() on the TestConfiguration and actually such method does exist already. However, this method returns the property port that is stored within TestConfiguration. In some cases, this port is specified through methods such as existingServerSuite(Class testClass, boolean cleanDB, String hostName, int portNumber) or clientExistingServerSuite(...).&lt;/p&gt;

&lt;p&gt;I&apos;m just not sure if it&apos;s wise to mess with the port property that already exists in TestConfiguration.&lt;/p&gt;

&lt;p&gt;By tapping into the DEFAULT_PORT property, I think I managed to make the change more transparent for the majority of the tests, although it still remains to be seen how we&apos;d handle tests that specify their own port, as Dag pointed out on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4090&quot; title=&quot;Provide the ability to run tests concurrently on the same machine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4090&quot;&gt;DERBY-4090&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On that last point, I agree. It was my bad #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12709928" author="kmarsden" created="Fri, 15 May 2009 19:36:24 +0100"  >&lt;p&gt;hmmm, on looking at this more closely, I don&apos;t think that changing DEFAULT_PORT is the way to go as that should just be a constant representing what the default is if it is not overriden (1527).&lt;/p&gt;

&lt;p&gt;Perhaps  port should just be  initialized  to either DEFAULT_PORT or the system property as appropriate  in the no argument constructor.    I don&apos;t quite get why it is being set to -1  and  the hostName to null instead being set to the defaults.&lt;/p&gt;

&lt;p&gt;If you do it this way, the tests would call TestConffiguration.getCurrent() .getPort() or TestConfiguration.getCurrent().newNetworkServerControl() which would rely upon the port and hostName fields in the current TestConfiguration object.  I really don&apos;t think they should be referencing the static value directly.  I think maybe it should be private even.&lt;/p&gt;

</comment>
                            <comment id="12709962" author="kristwaa" created="Fri, 15 May 2009 21:52:37 +0100"  >&lt;p&gt;Linking &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2419&quot; title=&quot;Tighten encapsulation of state in TestConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2419&quot;&gt;&lt;del&gt;DERBY-2419&lt;/del&gt;&lt;/a&gt;, as it concerns some of the same issues. I&apos;m not sure what the current status of that issue is, but at least there are some comments there that may be of interest.&lt;/p&gt;</comment>
                            <comment id="12710806" author="espinha" created="Tue, 19 May 2009 18:33:12 +0100"  >&lt;p&gt;Ok, I&apos;m lost here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The encapsulation of DEFAULT_PORT seems to be issue of debate on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2419&quot; title=&quot;Tighten encapsulation of state in TestConfiguration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2419&quot;&gt;&lt;del&gt;DERBY-2419&lt;/del&gt;&lt;/a&gt;, and Kathey suggested the use of the port property of the TestConfiguration class instead of overriding the DEFAULT_PORT static property. However, we have a handful of constructors for this test and I am unsure of how to tackle this. Should the port be overridden even when the constructor specifies a port?&lt;/p&gt;

&lt;p&gt;With the static initialization I was using, the DEFAULT_PORT would &lt;b&gt;always&lt;/b&gt; be overridden and the port was left to be set by tests that rely on the TestConfiguration constructors. However, with this method, only when the empty constructor is used will the port be changed. On all the other cases (including when tests invoke TestConfiguration.getCurrent() ) the port used will be the 1527 or whichever other is specified on the constructor.&lt;/p&gt;

&lt;p&gt;I have set the port property to be defined to the system property when using the empty constructor, and the test passes with and without the property specified. However, some tests do still use the 1527 which isn&apos;t really desired.&lt;/p&gt;

&lt;p&gt;This raises another question. When a test calls for the default configuration, what configuration should be given to the test? One with the 1527 port or should it contain the changed port? If we give it the 1527 port, then concurrent testing will be out of the picture in the long run...&lt;/p&gt;</comment>
                            <comment id="12710924" author="kmarsden" created="Tue, 19 May 2009 23:29:12 +0100"  >&lt;p&gt;From a functional perspective, when tests are run,  we want the value set by derby.tests.port to override the 1527 setting.  Ultimately I think we will need three system properties derby.tests.port, derby.tests.alternativePort (currently used by NSinSameJVMTest) and derby.tests.replicationPort.  &lt;/p&gt;

&lt;p&gt;The question becomes &quot;Where do  we want to process these system properties?&quot;, in TestConfiguration itself or in the code that calls the TestConfiguration constructor with the port argument?   For example this is some code from ReplicationTestRun which ultimately calls the TestConfiguration constructor with the port. It looks like someone already tried to partially implement this system property business before, so things look a bit tangled up.&lt;/p&gt;

&lt;p&gt; String masterHostName = System.getProperty(&quot;test.serverHost&quot;, &quot;localhost&quot;);&lt;br/&gt;
        int masterPortNo = Integer.parseInt(System.getProperty(&quot;test.serverPort&quot;, &quot;1527&quot;));&lt;/p&gt;

&lt;p&gt;        suite.addTest(StandardTests.simpleTest(masterHostName, masterPortNo));&lt;br/&gt;
        System.out.println(&quot;*** Done suite.addTest(StandardTests.simpleTest())&quot;);&lt;/p&gt;


&lt;p&gt;Let me study this a bit and get back to you tomorrow with a recommended approach.  Meanwhile if anyone else wants to jump in, suggestions are welcome.&lt;/p&gt;</comment>
                            <comment id="12711294" author="espinha" created="Wed, 20 May 2009 20:00:06 +0100"  >&lt;p&gt;I have an idea.  If I&apos;m right, most of our tests extend from the BaseJDBCTestCase and then ultimately from BaseTestCase (pretty much all should extend from BaseTestCase?). So what if the BaseTestCase class (or the BaseJDBCTestCase) had a port property that would be initialized with either 1527 or the port sent through the property, if any? This would of course require going through all the tests and make sure that the port was then being used on the test decorators, but it might be the cleaniest alternative to using the DEFAULT_PORT property in TestConfiguration.&lt;/p&gt;

&lt;p&gt;Regarding the alternative port, I believe that currently that&apos;s calculated with Port+1. Unless the user defines 65535 for a port, then I see no setback in keeping this method.&lt;/p&gt;</comment>
                            <comment id="12711613" author="kmarsden" created="Thu, 21 May 2009 14:07:00 +0100"  >&lt;p&gt;Regarding  keeping alternative port, being port +1, I guess that&apos;s ok. Folks would just have to be aware that they need to skip a port when running concurrent tests.&lt;/p&gt;

&lt;p&gt;I am not sure I like putting port in BaseTestCase, initializing it there and passing it around from all the tests, when the same work can be done in TestConfiguration.  For non-replication tests  and decorators, I think that they can all use the no-arg constructor and the port can be initialized there to either the default or the system property setting and the tests and decorators don&apos;t need to pass in port at all. If you agree, I think you can go ahead and make those changes.&lt;/p&gt;


&lt;p&gt;Replication I need to understand better.  I unfortunately don&apos;t have any experience with this feature or the tests.  ReplicationRun.java has these ports&lt;br/&gt;
   static int masterServerPort = 1527; // .. default..&lt;br/&gt;
    static String slaveServerHost = &quot;localhost&quot;;&lt;br/&gt;
    static int slaveServerPort = 3527; // .. ..&lt;br/&gt;
    static String testClientHost = &quot;localhost&quot;;&lt;br/&gt;
    static int slaveReplPort = 6666;&lt;/p&gt;

&lt;p&gt;I seem to recall another one that was four thousand something, that I can&apos;t seem to find right away.    I need to study what all these ports are used for (and how replication works).&lt;/p&gt;

&lt;p&gt;My gut feeling is that ultimately we will be able to remove the TestConfiguration constructor that takes a port argument and process the replication specific ports setting in the replication tests.   Alternately there could be fields for all the additional replication ports needed in TestConfiguration again processed in the no-arg constructor.&lt;/p&gt;

&lt;p&gt;I will look at the replication piece some more and would sure appreciate advice from someone familiar with replication and the tests.  Meanwhile for the other tests, I think our goal should be that non of them use the TestConfiguration constructor that takes a port parameter, but rather use the no-arg constructor and initialize port there.&lt;/p&gt;
</comment>
                            <comment id="12712673" author="olesolberg" created="Mon, 25 May 2009 10:41:34 +0100"  >&lt;p&gt;I had a look at the replication tests wrt port numbers:&lt;/p&gt;

&lt;p&gt;ReplicationRun.initEnvironment() sets&lt;br/&gt;
  masterServerPort = 1527;&lt;br/&gt;
  slaveServerPort = 4527;&lt;br/&gt;
  slaveReplPort = 8888;&lt;/p&gt;

&lt;p&gt;With the suggested pattern of system properties (derby.tests.port, derby.tests.alternativePort, derby.tests.replicationPort) I think we could add derby.tests.slavePort, and set masterServerPort, slaveServerPort, slaveReplPort to derby.tests.port, derby.tests.slavePort, derby.tests.replicationPort respectively.&lt;/p&gt;


&lt;p&gt;The masterPortNo set to &quot;test.serverPort&quot; in ReplicationTestRun.suite() should then be set to derby.tests.port.&lt;/p&gt;


&lt;p&gt;It would also be ok, as far as I can see,  to use offsets from derby.tests.port for alternativePort, slavePort and replicationPort, if they are not explicitly set. Using +1, +2, +3, would then mean that we would need to skip (at least) three ports when running concurrent tests.&lt;/p&gt;</comment>
                            <comment id="12712774" author="espinha" created="Mon, 25 May 2009 19:55:08 +0100"  >&lt;p&gt;So to wrap it up in a nutshell. We need four ports as far as testing goes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;derby.tests.port&lt;/li&gt;
	&lt;li&gt;derby.tests.alternativePort&lt;/li&gt;
	&lt;li&gt;derby.tests.replicationPort&lt;/li&gt;
	&lt;li&gt;derby.tests.slavePort&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And basically, if they aren&apos;t explicitly set, they can be defined with offsets based on a port. This port is 1527 unless otherwise overridden with the derby.tests.port property.&lt;/p&gt;

&lt;p&gt;My idea is to add four (static) properties to TestConfiguration and force the decorators to use these properties &lt;span class=&quot;error&quot;&gt;&amp;#91;which are set to their default values or to the system properties if they are defined&amp;#93;&lt;/span&gt;. The point of having new properties is that I need a coherent way of fetching at least the main port from within other tests (like the ij test). I could just fetch the system property from within the other tests, but that doesn&apos;t seem a good programming practice at all.&lt;/p&gt;</comment>
                            <comment id="12713017" author="kmarsden" created="Tue, 26 May 2009 15:08:37 +0100"  >&lt;p&gt;Tiago said:&lt;br/&gt;
&amp;gt;My idea is to add four (static) properties to TestConfiguration and force the &amp;gt;decorators to use these properties &lt;span class=&quot;error&quot;&gt;&amp;#91;which are set to their default values or to &amp;gt;the system properties if they are defined&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;I think that sounds fine and then get rid of the TestConfiguration constructor that takes a port.  I think we should shoot for incremental patches though.&lt;br/&gt;
1) The ij changes to pick up system properties &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4223&quot; title=&quot;Provide the ability to use properties with ij.runScript()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4223&quot;&gt;&lt;del&gt;DERBY-4223&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
2) The changes for derby.tests.port.&lt;br/&gt;
3) The changes for derby.tests.alternativePort&lt;br/&gt;
4) Replication and removing the TestConfiguration with port constructor.&lt;/p&gt;
</comment>
                            <comment id="12713023" author="bryanpendleton" created="Tue, 26 May 2009 15:23:56 +0100"  >&lt;p&gt;The terminology &quot;alternativePort&quot; does not seem very descriptive, would it help to pick&lt;br/&gt;
a more explicit name for that port? Is it only used for the test where we have two&lt;br/&gt;
network servers inside the same JVM? If so, perhaps something like:&lt;/p&gt;

&lt;p&gt;  derby.tests.NSInSameJVM.secondServerPort&lt;/p&gt;

&lt;p&gt;I know that&apos;s very verbose, but I just thought I&apos;d throw it out as an idea.&lt;/p&gt;</comment>
                            <comment id="12713117" author="espinha" created="Tue, 26 May 2009 18:05:05 +0100"  >&lt;p&gt;Submitting a patch for the IJ part. This also changes the way the port property is initialized in TestConfiguration under the empty constructor. From now on, that is initialized as 1527. Haven&apos;t still ran suites.All but will do so tonight, to be sure it doesn&apos;t break anything.&lt;/p&gt;</comment>
                            <comment id="12713183" author="espinha" created="Tue, 26 May 2009 19:38:13 +0100"  >&lt;p&gt;Attaching another patch to replace the previous one. The previous used the DEFAULT_PORT and it is better to bundle it up with the TestConfiguration.getCurrent().getPort(), where the port is initialized to either the DEFAULT_PORT or the system property in case it is used.&lt;/p&gt;</comment>
                            <comment id="12713623" author="espinha" created="Wed, 27 May 2009 17:07:24 +0100"  >&lt;p&gt;There was a small typo on the patch (was derby.test.port, should be derby.tests.port). Fixing that and running tests again.&lt;/p&gt;</comment>
                            <comment id="12714727" author="espinha" created="Sat, 30 May 2009 15:53:40 +0100"  >&lt;p&gt;It seems like the current patch is failing, I&apos;ll be looking at submitting a fixed one today.&lt;/p&gt;</comment>
                            <comment id="12714751" author="kmarsden" created="Sat, 30 May 2009 19:08:00 +0100"  >&lt;p&gt;Was your May 26 patch tested and worked ok?  If so it might make sense to commit that one as a clean and independent patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4223&quot; title=&quot;Provide the ability to use properties with ij.runScript()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4223&quot;&gt;&lt;del&gt;DERBY-4223&lt;/del&gt;&lt;/a&gt; without the derby.tests.port handling.&lt;/p&gt;</comment>
                            <comment id="12714754" author="espinha" created="Sat, 30 May 2009 19:17:18 +0100"  >&lt;p&gt;No Kathey, that&apos;s the one that I tested last night and it failed. This one does not address the handling of derby.tests.port yet.&lt;/p&gt;</comment>
                            <comment id="12714761" author="espinha" created="Sat, 30 May 2009 21:05:47 +0100"  >&lt;p&gt;Submitting new patch. Ran into some troubles with the client/server decorators.&lt;/p&gt;

&lt;p&gt;This patch is a tangent to the changes required for derby.tests.port, meaning that it taps into one of the decorator with the port change. I tried changing as little as possible within TestConfiguration since the most work will be done for derby.tests.port.&lt;/p&gt;

&lt;p&gt;Running suites.All again tonight.&lt;/p&gt;</comment>
                            <comment id="12714823" author="espinha" created="Sun, 31 May 2009 08:52:26 +0100"  >&lt;p&gt;Attaching possibly the final patch for the ij bit.&lt;/p&gt;

&lt;p&gt;The previous patch had an issue. Since I was forcing the port to be TestConfiguration.getCurrent().getPort() in a constructor that is widely used in other tests, this would break them since they were expecting the port to be 1527 and not whatever property was specified.&lt;/p&gt;

&lt;p&gt;This patch creates an additional constructor specifically for ij that allows the port to be customized. Then the test specifies the port as getCurrent().getPort.&lt;/p&gt;

&lt;p&gt;The suites.All ran fine for this patch when the port property was specified, but it gave me the following error when I ran it without the port property:&lt;br/&gt;
-------------&lt;del&gt;8&amp;lt;&lt;/del&gt;--------------&lt;br/&gt;
1) testAttributeAccumulatedConnectionCount(org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest)java.security.PrivilegedActionException: javax.management.InstanceNotFoundException: org.apache.derby:type=NetworkServer,system=c013800d-0121-94a9-8310-ffff8baa048d&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttribute(MBeanTest.java:379)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest.testAttributeAccumulatedConnectionCount(NetworkServerMBeanTest.java:93)&lt;br/&gt;
(...)&lt;br/&gt;
--------------&lt;del&gt;8&amp;lt;&lt;/del&gt;----------------&lt;/p&gt;

&lt;p&gt;I&apos;m thinking that it might be unrelated though, and as so I&apos;m running the suites.All again without a port specified.&lt;/p&gt;</comment>
                            <comment id="12714895" author="espinha" created="Sun, 31 May 2009 17:30:58 +0100"  >&lt;p&gt;Ok, suites.All and derbyall ran fine with and without the derby.tests.port property so the patch is ready for committal.&lt;/p&gt;

&lt;p&gt;I will be working on finishing the changes for derby.tests.port now.&lt;/p&gt;</comment>
                            <comment id="12715623" author="espinha" created="Tue, 2 Jun 2009 19:52:31 +0100"  >&lt;p&gt;I am now stuck on the ServerPropertiesTest and this test will require some thought. On this test a derby.properties file is created where a port is specified; this must be handled with care, because for the test to make sense, that port must take precedence over the derby.tests.port property.&lt;/p&gt;

&lt;p&gt;This test also has a getAlternativePort() method and I am considering the possibility of getting it to use the TestConfiguration.getAlternativePort() instead.&lt;/p&gt;

&lt;p&gt;Other than this one test, I believe the remaining tests are running fine. My methodology has been running suites.All and as soon as I have failures, I stop the run and check the error files to see which tests are failing. Then I fix those tests and run it again. This is one of the tests that fails right on the start, so there may still be some tests failing towards the end of the suite.&lt;/p&gt;

&lt;p&gt;In the long run we should also debate whether we want a decorator in TestConfiguration that allows for the port to be customized. If we allow this, it may be dangerous for concurrent testing. On my current patch for ij we do have such decorator, but that&apos;s necessary evil for incremental patches; it could be removed when I issue the final derby.tests.port patch.&lt;/p&gt;</comment>
                            <comment id="12715986" author="espinha" created="Wed, 3 Jun 2009 18:02:25 +0100"  >&lt;p&gt;Unchecking the patch available switch. The available patch has been committed to revision 781200, but this issue entails at least 3 more patches.&lt;/p&gt;</comment>
                            <comment id="12716241" author="espinha" created="Thu, 4 Jun 2009 12:21:33 +0100"  >&lt;p&gt;I&apos;m submitting a preliminary patch for derby.tests.port.&lt;/p&gt;

&lt;p&gt;This patch should NOT be committed. I am pretty sure I have some issues on the TestConfiguration class because of conflicts with the previous ij patch. I will be running suites.All to iron out what&apos;s still amiss.&lt;/p&gt;

&lt;p&gt;This patch already covers the ServerPropertiesTest that I commented about earlier. Also, unlike what I said, this one test is keeping its own getAlternativePort() method as the behavior expected is different. This test expects the getAlternativePort() method to continuously supply ports that are valid alternatives to the main port. This was done by going with +1 increments to the default port until it finds a port that is unbound to any server. This behavior is kept but instead of using the default port as a base, it now uses the derby.tests.port property.&lt;/p&gt;

&lt;p&gt;The derby.tests.alternativePort property wouldn&apos;t be much good here as this test requires several (4 or 5) alternative ports and is just a very special case of using alternative ports.&lt;/p&gt;</comment>
                            <comment id="12717104" author="espinha" created="Sun, 7 Jun 2009 23:25:17 +0100"  >&lt;p&gt;As I suspected there were still some failing tests. I have fixed those and am running regressions now to figure out if there still are failing tests.&lt;/p&gt;

&lt;p&gt;It needs to be mentioned that due what I mentioned on my previous comment, whoever runs concurrent tests should account for a 5 port gap for the ports chosen for each run. This should be added to the wiki page of Derby Testing when this patch is finally aubmitted. &lt;/p&gt;</comment>
                            <comment id="12717305" author="espinha" created="Mon, 8 Jun 2009 16:58:56 +0100"  >&lt;p&gt;Attaching one possible final patch for derby.tests.port.&lt;/p&gt;

&lt;p&gt;My last suites.All run had an issue that I fixed for this patch and it should all be running properly now. I will be running suites.All again and when that&apos;s finished, I will run one last test:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I will create a small application that binds on the 1527 port, and with that running on the background I will run the suites.All suite with a port different from the default. If there is still some test somewhere that tries to use the default port, hopefully this will make it pop-up.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12717383" author="espinha" created="Mon, 8 Jun 2009 21:04:12 +0100"  >&lt;p&gt;The previous patch had a small issue with two lines of code switched around.&lt;/p&gt;</comment>
                            <comment id="12717625" author="espinha" created="Tue, 9 Jun 2009 10:36:07 +0100"  >&lt;p&gt;The suites.All ran fine with a port set through derby.tests.port. I&apos;m now running it again, this time with an application binding the 1527 port.&lt;/p&gt;

&lt;p&gt;If all goes well, the test should pass. If, on the other hand, the suites.All is still using the 1527 port hardcoded somewhere, it should fail when it tries to bind on this port.&lt;/p&gt;</comment>
                            <comment id="12717666" author="espinha" created="Tue, 9 Jun 2009 13:53:01 +0100"  >&lt;p&gt;I&apos;m posting the result of the latest test run with the 1527 port bound.&lt;/p&gt;

&lt;p&gt;There seems to be some issues with replication, although that is probably normal. I haven&apos;t had the chance to go over these results yet but there also seems to be an issue with a ping. I will be going over this later today.&lt;/p&gt;</comment>
                            <comment id="12717764" author="espinha" created="Tue, 9 Jun 2009 18:45:47 +0100"  >&lt;p&gt;Provided that the patch is good (I have been experiencing some oddity regarding end of line characters, but nothing serious it seems), this will be the last patch for derby.tests.port.&lt;/p&gt;

&lt;p&gt;The replication run still had the 1527 port hardcoded in it as the masterServerPort, but as Ole suggested, this port is now being set to derby.tests.port.&lt;/p&gt;

&lt;p&gt;The NetworkServerControlClientCommandTest also had some changes of mine that would break should the default port be bound. Nothing big, just the pings when no port is supplied to the NetworkServerControl. If no port is supplied, the default port (1527) is used, and if there&apos;s something listening and replying on the 1527 port (the app. I created sends out random replies on connection attempts since some tests will wait to hear something), the ping passes and I wasn&apos;t accounting for that in the Network...CommandTest.&lt;/p&gt;

&lt;p&gt;With this latest patch, the replication run and the Network...CommandTest run fine, but I have not yet ran the suites.All. I will once more run it with and without the 1527 port bound.&lt;/p&gt;

&lt;p&gt;Do note that the changes for the replication ports will come in a separate patch.&lt;/p&gt;</comment>
                            <comment id="12717858" author="espinha" created="Wed, 10 Jun 2009 00:02:39 +0100"  >&lt;p&gt;The suites.All ran without errors or failures with and without the 1527 port bound. I&apos;m now running it without the derby.tests.port specified but things are looking good.&lt;/p&gt;

&lt;p&gt;The patch should be ready for commit.&lt;/p&gt;</comment>
                            <comment id="12717947" author="espinha" created="Wed, 10 Jun 2009 07:46:03 +0100"  >&lt;p&gt;I&apos;m marking this issue with Patch Available until the latest patch gets committed.&lt;/p&gt;

&lt;p&gt;In the meanwhile I&apos;ll be working on the alternative port changes.&lt;/p&gt;</comment>
                            <comment id="12718156" author="kmarsden" created="Wed, 10 Jun 2009 19:11:39 +0100"  >&lt;p&gt;I looked a the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;.dtp.patch and just have one comment:&lt;/p&gt;

&lt;p&gt;BaseTestCase - execJavaCmd &lt;br/&gt;
	     I don&apos;t really like so much adding the portIsSpecified parameter to execJavaCmd and translating that into &quot;-p &amp;lt;portNumber&amp;gt;&quot; since it is supposed to be a generic java command execution.  I think it would be better to just pass the -p and portnumber in the cmd[] array or perhaps have a separate execNetworkServerControl method.&lt;/p&gt;
</comment>
                            <comment id="12718160" author="espinha" created="Wed, 10 Jun 2009 19:24:05 +0100"  >&lt;p&gt;Hmm, I made it this way because of the order of the parameters since that was giving me some trouble (when passing the -p on the command), but now that I look at it, it actually does the same. I will remove that method and try to use the command parameter for this purpose, although I am fairly sure that I did run into some issues with this approach.&lt;/p&gt;</comment>
                            <comment id="12718651" author="espinha" created="Thu, 11 Jun 2009 22:59:44 +0100"  >&lt;p&gt;As per Kathey&apos;s comment, I&apos;ve removed the said method from the patch and will be running the tests again to catch the failures.&lt;/p&gt;</comment>
                            <comment id="12718950" author="espinha" created="Fri, 12 Jun 2009 20:27:03 +0100"  >&lt;p&gt;Regarding my comment on 09/Jun/09 10:45 AM, there has been another change here.&lt;/p&gt;

&lt;p&gt;At this point, the pings under NetworkServerControlClientCommandTest that don&apos;t specify a port through the -p parameter won&apos;t be ran if the current port is different from the DEFAULT_PORT in TestConfiguration. The portless pings go to the 1527 port by default so it makes no sense to ping this port if we are using a different one.&lt;/p&gt;

&lt;p&gt;It needs to be noted that the possibility of asserting a failed ping would be a good option but it isn&apos;t quite viable. The ping is a &apos;blind&apos; operation, meaning that whichever program binds the port being pinged, the ping will pass. My suites.All run with a custom port and with an application binding on to 1527 would fail with this option.&lt;/p&gt;</comment>
                            <comment id="12719005" author="espinha" created="Fri, 12 Jun 2009 23:27:56 +0100"  >&lt;p&gt;I&apos;m submitting the final patch for derby.tests.port.&lt;/p&gt;

&lt;p&gt;I did as Kathey suggested and am now passing the -p parameter on every call to execJavaCmd().&lt;/p&gt;

&lt;p&gt;Since there were some side-changes to TestConfiguration per &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4262&quot; title=&quot;test NetScripts fails with IBM&amp;#39;s weme6.1 &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4262&quot;&gt;&lt;del&gt;DERBY-4262&lt;/del&gt;&lt;/a&gt;, I&apos;m recompiling and doing one last run of suites.All just to be sure. Still, before this, I had run suites.All successfully with and without the 1527 port bound.&lt;/p&gt;</comment>
                            <comment id="12719097" author="espinha" created="Sat, 13 Jun 2009 09:29:27 +0100"  >&lt;p&gt;The last suites.All run ran with no problems. The patch is ready to commit if there are no objections.&lt;/p&gt;</comment>
                            <comment id="12719792" author="espinha" created="Mon, 15 Jun 2009 22:36:19 +0100"  >&lt;p&gt;Attaching a preliminary patch for the alternative port. The parameter is derby.tests.alternativePort.&lt;/p&gt;

&lt;p&gt;I&apos;ve ran suites.All with success without specifying the port (which is the critical path that must be achieved).  When a port isn&apos;t specified, the alternative port is the normal port +1 as it has been agreed upon here.&lt;/p&gt;

&lt;p&gt;My next test will be running suites.All with an alternative port specified using this property.&lt;/p&gt;

&lt;p&gt;This patch includes all the changes contained in the derby.tests.port patch. I will upload a new one, just with the changes for the alternative port when the other patch has been committed.&lt;/p&gt;</comment>
                            <comment id="12719894" author="kmarsden" created="Tue, 16 Jun 2009 02:47:32 +0100"  >&lt;p&gt;Committed patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;-dtp.patch with revision 785049.&lt;/p&gt;</comment>
                            <comment id="12720130" author="espinha" created="Tue, 16 Jun 2009 14:44:24 +0100"  >&lt;p&gt;This patch passed suites.All without the alternative port being explicitly set (but with d.t.port set) and is ready to be reviewed.&lt;/p&gt;

&lt;p&gt;I will still be running the following tests:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Not specifying any port at all&lt;/li&gt;
	&lt;li&gt;Specifying the alternative port and binding 1528 (this one was previously the default alternative port)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12720248" author="kmarsden" created="Tue, 16 Jun 2009 18:20:30 +0100"  >&lt;p&gt;I looked at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;dtap patch.  &lt;br/&gt;
I think there is a typo on line 1022&lt;br/&gt;
        this.alternativePort = copy.port;&lt;br/&gt;
should be &lt;br/&gt;
        this.alternativePort = copy.alternativePort;&lt;/p&gt;

&lt;p&gt;Regarding Bryan&apos;s comment on renaming the property. I think that would be fine or perhaps just derby.tests.secondServerPort in case another tests wants to start a second server.  Either way is fine.&lt;/p&gt;

&lt;p&gt;But ...&lt;br/&gt;
Tiago and I talked on IRC about any potential conflict between this port and the ports used in ServerPropertiesTest and he determined there would be none because they are run sequentially, but it is a bit confusing and he had a suggestion for a cleaner implementation  which would encapsulate all the alternative port  assignments in TestConfiguration.   I will let him summarize that idea.&lt;/p&gt;

</comment>
                            <comment id="12720256" author="espinha" created="Tue, 16 Jun 2009 18:43:24 +0100"  >&lt;p&gt;You are right Kathey, that&apos;s a typo on my end. However, since we will probably change things a bit regarding the alternative ports, that patch will stay on hold.&lt;/p&gt;

&lt;p&gt;So, the cleaner implementation would imply having a getNextAvailablePort() method in TestConfiguration that would replace our getAlternativePort().&lt;/p&gt;

&lt;p&gt;I think that ideally we&apos;d even only allow for the base port to be set and then every other port would build on that by offsetting from the base port. Each time we&apos;d invoke getNextAvailablePort(), we would get an usable port for our a server. Do note that the base port remains fixed throughout the suite run; it is just alternative ports (replication ports, jmx, actual alternative ports that some tests like ServerPropertiesTest require) that would build on upon the base port.&lt;/p&gt;

&lt;p&gt;We would have no real offset, the alternative ports would be assigned on the go with lastAvailablePort+1.&lt;/p&gt;

&lt;p&gt;Also, Kathey suggested we would create a constant under TestConfiguration named MAX_PORTS_USED, which would tell us the maximum number of alternative ports that can be assigned. This constant would then be used in getNextAvailablePort() in an assert - if the port being requested is over the limit of ports that can be used, it would mean that a new test that uses an alternative port had been added and so the developer would have to update the constant and the wiki page. (This is an attempt to make sure that the wiki page on concurrent test runs is always up-to-date, and that people running concurrent runs always know how many ports they should leave between runs)&lt;/p&gt;

&lt;p&gt;To finalize, with this idea, the concept of alternative port is lost. Or better said, it merges with the concept of JMX and replication ports since those would also be obtained through the getNextAvailablePort().&lt;/p&gt;

&lt;p&gt;It might be too restrictive to only allow the base port to be set, but I think we would be able to keep it simple this way. If we allow JMX, or replication (or both) ports to be set through properties, then this concept might not be the ideal; and honestly, from a developer perspective, I think it is much straightforward if we only have to set the base port and know that the concurrent run just has to be X ports away from the first run.&lt;/p&gt;</comment>
                            <comment id="12720408" author="espinha" created="Wed, 17 Jun 2009 00:06:55 +0100"  >&lt;p&gt;This is a preliminary patch for the idea mentioned before. There&apos;s one thing I don&apos;t like about it yet and that&apos;s the initialization of the lastAssignedPort. It&apos;s being done on all constructors and that doesn&apos;t seem very elegant. On the other hand, doing a static initialization doesn&apos;t work either as I have to initialize it to TestConfiguration.getCurrent().getPort(). (However, I might just as well fetch the derby.tests.port property in the initializer...)&lt;/p&gt;

&lt;p&gt;This test also contains a change suggested by Kathey - the change of the property name from derby.tests.port to derby.tests.basePort simply for clarity&apos;s sake as to which port is this.&lt;/p&gt;

&lt;p&gt;There&apos;s also something I don&apos;t understand but it seems to be working and that is replication. As you can see on the replaced lines on the patch, the replication ports were initialized statically to 3527 and 6666. Yet, they are later on changed in initEnvironment() to 4527 and 8888.&lt;/p&gt;

&lt;p&gt;The way I went about it was to do the actual assignment in the static initialization and disregard the other assignments in initEnvironment. Then I ran the ReplicationSuite and it gave me no errors. I&apos;m doing a suites.All run with this patch tonight.&lt;/p&gt;</comment>
                            <comment id="12720661" author="espinha" created="Wed, 17 Jun 2009 14:30:41 +0100"  >&lt;p&gt;There have been a few errors on my dual run under Windows 7 but I do not think they are related to the patch. My guess is that they showed up because of the load that concurrent testing puts on the machine. Still, I&apos;m open to suggestions. Here goes the output I got on the console:&lt;br/&gt;
-------------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;---------------------------&lt;br/&gt;
There were 8 failures:&lt;br/&gt;
1) testEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest&lt;br/&gt;
)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suites&lt;br/&gt;
.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
2) testReEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTe&lt;br/&gt;
st)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suit&lt;br/&gt;
es.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
3) testEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest&lt;br/&gt;
)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suites&lt;br/&gt;
.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
4) testReEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTe&lt;br/&gt;
st)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suit&lt;br/&gt;
es.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
5) testEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest&lt;br/&gt;
)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suites&lt;br/&gt;
.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
6) testReEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTe&lt;br/&gt;
st)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suit&lt;br/&gt;
es.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
7) testEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest&lt;br/&gt;
)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suites&lt;br/&gt;
.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
8) testReEncrypt(org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTe&lt;br/&gt;
st)junit.framework.AssertionFailedError: C:\cygwin\home\Tiago\Derby\Testing\suit&lt;br/&gt;
es.All\system\dbsqlauth\db.lck&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabas&lt;br/&gt;
eSetup.java:130)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDataba&lt;br/&gt;
seSetup.java:35)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSet&lt;br/&gt;
up.java:105)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:102)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropD&lt;br/&gt;
atabaseSetup.java:98)&lt;br/&gt;
        at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDa&lt;br/&gt;
tabaseSetup.java:91)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration$7.tearDown(TestConfig&lt;br/&gt;
uration.java:782)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 11068,  Failures: 8,  Errors: 32&lt;br/&gt;
--------------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;--------------------------&lt;/p&gt;

&lt;p&gt;This is on one of the runs. The other ran flawlessly:&lt;br/&gt;
Time: 17.805,672&lt;/p&gt;

&lt;p&gt;OK (11161 tests)&lt;/p&gt;

&lt;p&gt;I also have a three simultaneous runs going in an Ubuntu environment.&lt;/p&gt;</comment>
                            <comment id="12720796" author="kmarsden" created="Wed, 17 Jun 2009 18:56:36 +0100"  >&lt;p&gt;It is interesting that the last thing these fixtures do is call bringDbDown(), so even if there was a problem where network server wasn&apos;t brought down for some reason, the database removal should work ok.  I am not sure if database shutdown backgrounds any operations which may not have completed before we attempt to remove the database.  It seems that if that were a problem we would have seen this issue with regular runs.&lt;/p&gt;

&lt;p&gt;I spoke to Tiago and he cannot reproduce the problem. I will look at the patch and see if I can spot anything and may go ahead and commit it and then we can file another issue for the database removal problem in parallel runs if it comes up again.&lt;/p&gt;</comment>
                            <comment id="12720812" author="kmarsden" created="Wed, 17 Jun 2009 19:26:52 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;Here&apos;s some comments on the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;.basePort.patch.  &lt;br/&gt;
ReplicationRun:&lt;br/&gt;
On line 69, you changed the masterServerPort from getPort() to getAlternativePort().  Why doesn&apos;t getPort() work in this case. Regarding the previous change of ports in initEnvironment() I don&apos;t quite understand why that was being done. It would be good if someone familiar with replication could take a look and see if it is ok like you have it or if we need to make yet another call to getNextAlternativePort() in initEnvironment.&lt;/p&gt;

&lt;p&gt;TestConfiguration:&lt;br/&gt;
I think in getNextAvailablePort() we should throw an assertion saying something like &quot;Port x exceeeds expected maximum MAX_PORTS_USED insted of returning -1.  You may need to update MAX_PORTS_USED and the Wiki page at &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyJUnitTesting&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyJUnitTesting&lt;/a&gt; if test runs now require more available ports&quot;&lt;/p&gt;

&lt;p&gt;Why do we need to create a NetworkServerControl and try to ping if we are requiring the user allocate enough available ports? This part makes me especially nervous since it might make &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4053&quot; title=&quot;Network Server&amp;#39;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4053&quot;&gt;&lt;del&gt;DERBY-4053&lt;/del&gt;&lt;/a&gt; more likely to hit.&lt;/p&gt;

</comment>
                            <comment id="12720857" author="espinha" created="Wed, 17 Jun 2009 21:01:29 +0100"  >&lt;p&gt;Hello Kathey,&lt;/p&gt;

&lt;p&gt;1) You are right, the masterServerPort can use the basePort instead, that way we save one port in the total number of ports required.&lt;/p&gt;

&lt;p&gt;Regarding initEnvironment(), it seems to me that that was something along the lines of what was done in the TestConfiguration&apos;s empty constructor. The values are initialized to bogus values and they are then set to the actual ones. But I&apos;m not sure, so perhaps Ole can give us some insight on this since he seems to be more familiar with replication?&lt;/p&gt;

&lt;p&gt;I think we can safely get rid of the assignments done in initEnvironment() since apparently they are very much useless. (They are useless on my patch and suites.All runs fine, with the correct ports for the ReplicationSuite)&lt;/p&gt;

&lt;p&gt;2) On TestConfiguration we don&apos;t have access to any kind of assertions since it&apos;s a standalone class that doesn&apos;t extend from any of the test cases. Also, throwing an exception at the getNextAvailablePort() will require that we catch the exception wherever the method is invoked. I&apos;m not sure this is a very good practice here...&lt;/p&gt;

&lt;p&gt;Returning -1 was the way I found to make the test run crash. It isn&apos;t very verboseish I admit, but I don&apos;t like the solution of throwing an exception either... especially because it won&apos;t get dealt with automatically by JUnit.&lt;/p&gt;

&lt;p&gt;3) Regarding the last topic, do note that I don&apos;t start a server. I just create an instance of the NetworkServerControl and try to ping it. The goal here is to ensure that there isn&apos;t something else bound on that port. If the ping succeeds then an exception isn&apos;t thrown and -1 is returned, causing a failure. But this is of course arguable and realistically speaking we probably don&apos;t really need it. If the port has something bound on it, then the test requesting the port will naturally crash on its own.&lt;/p&gt;</comment>
                            <comment id="12720889" author="kmarsden" created="Wed, 17 Jun 2009 21:58:18 +0100"  >&lt;p&gt;I think you can access an assertion with a static method by just  calling Assert.fail(...) instead of return -1. I think because it is a runtime exception so should all work ok and be handled properly by JUnit.  (junit.framework.Assert is already imported into TestConfiguration)&lt;/p&gt;

&lt;p&gt;I really think the NetworkServerControl.ping  code should go and we should just let it fail as you describe if someone makes a mistake and uses an in use port.  If the ping occurs on some non-derby used port it is likely to hang. Without the code it is more likely to fail when starting the server which will just give a bind error port in use message which will be more helpful.&lt;/p&gt;

&lt;p&gt;My untrained eye sees  your analysis of initEnvironment as correct, but I agree it would be good to get  input on the Replication changes from Ole, Dag or someone more familiar with replication to make sure.&lt;/p&gt;


</comment>
                            <comment id="12720915" author="espinha" created="Wed, 17 Jun 2009 22:40:07 +0100"  >&lt;p&gt;Attaching a new patch that has Kathey&apos;s considerations implemented. I have also changed the way lastAssignedPort is initialized.&lt;/p&gt;

&lt;p&gt;I was wondering about whether it would be acceptable to encapsulate the following code into a BaseTestCase method.&lt;br/&gt;
static {&lt;br/&gt;
    	String port = BaseTestCase.getSystemProperty(&quot;derby.tests.basePort&quot;);&lt;br/&gt;
        if (port == null) &lt;/p&gt;
{
        	lastAssignedPort = DEFAULT_PORT;
        }
&lt;p&gt; else &lt;/p&gt;
{
        	lastAssignedPort = Integer.parseInt(port);
        }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;It is repeated three times throughout TestConfiguration and I thought that maybe we could have a getBasePort() in BaseTestCase that simply retrieves that property. Otherwise we can just leave it as is.&lt;/p&gt;</comment>
                            <comment id="12721109" author="olesolberg" created="Thu, 18 Jun 2009 08:32:11 +0100"  >&lt;p&gt;Re &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4217&quot; title=&quot;Make the default port for the suites.All run configurable with a system property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4217&quot;&gt;&lt;del&gt;DERBY-4217&lt;/del&gt;&lt;/a&gt;.basePort.patch:&lt;br/&gt;
ReplicationRun: &lt;/p&gt;

&lt;p&gt;The masterServerPort should be the &quot;normal&quot; port used, i.e. getPort() would be the correct way to set it - as it is now.&lt;/p&gt;

&lt;p&gt;You are correct that the assignments done to slaveServerPort and slaveReplPort in initEnvironment() were unneccessary (and confusing...).&lt;/p&gt;</comment>
                            <comment id="12721227" author="espinha" created="Thu, 18 Jun 2009 13:28:28 +0100"  >&lt;p&gt;Thank you Ole for your input.&lt;/p&gt;

&lt;p&gt;I&apos;ve done another run in Ubuntu with two instances of suites.All (on different ports and folders) and this time I got this error in one of the runs:&lt;br/&gt;
------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-----------------------&lt;br/&gt;
1) testDerbynetJarAttributeAlpha(org.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest)java.security.PrivilegedActionException: javax.management.InstanceNotFoundException: org.apache.derby:type=Version,system=c013800d-0121-f31c-770b-ffff8baa048d,jar=derbynet.jar&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttribute(MBeanTest.java:379)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.checkBooleanAttributeValue(MBeanTest.java:431)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.VersionMBeanTest.testDerbynetJarAttributeAlpha(VersionMBeanTest.java:124)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: javax.management.InstanceNotFoundException: org.apache.derby:type=Version,system=c013800d-0121-f31c-770b-ffff8baa048d,jar=derbynet.jar&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1094)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:662)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest$4.run(MBeanTest.java:382)&lt;br/&gt;
	... 42 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 11169,  Failures: 0,  Errors: 1&lt;br/&gt;
----------------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-------------------&lt;/p&gt;

&lt;p&gt;I don&apos;t think this is related though?&lt;/p&gt;</comment>
                            <comment id="12721429" author="kmarsden" created="Thu, 18 Jun 2009 20:45:04 +0100"  >&lt;p&gt;Hi Tiago&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I think a static variable and single initialization for basePort would be good, but it should be in TestConfiguration.&lt;/li&gt;
	&lt;li&gt;In TestConfiguration there is still an import for NetworkServerControl  and UnknownHostException which could be removed.&lt;/li&gt;
	&lt;li&gt;I think DEFAULT_JMX_PORT can go away too.&lt;/li&gt;
	&lt;li&gt;Your failure looks like a known issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3689&quot; title=&quot;&amp;#39;PrivilegedActionException: javax.management.InstanceNotFoundException&amp;#39; in &amp;#39;*(VersionMBeanTest / NetworkServerMBeanTest)&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3689&quot;&gt;&lt;del&gt;DERBY-3689&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12721941" author="espinha" created="Fri, 19 Jun 2009 20:14:09 +0100"  >&lt;p&gt;I seem to keep hitting random failures here. Here&apos;s what I got this time with the MAX_PORTS_USED set to its final value:&lt;br/&gt;
-----------------&lt;del&gt;8&amp;lt;&lt;/del&gt;----------------------------&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testStressMulti(org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest)junit.framework.AssertionFailedError: Caused by: &lt;br/&gt;
java.sql.SQLNonTransientConnectionException: Network protocol exception: DSS length not 0 at end of same id chain parse.  The connection has been terminated.&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQuery(Statement.java:483)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.select(StressMultiTest.java:535)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.java:409)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: Network protocol exception: DSS length not 0 at end of same id chain parse.  The connection has been terminated.&lt;br/&gt;
	at org.apache.derby.client.net.Reply.endOfSameIdChainData(Reply.java:1174)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.readOpenQuery(NetStatementReply.java:66)&lt;br/&gt;
	at org.apache.derby.client.net.StatementReply.readOpenQuery(StatementReply.java:50)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatement.readOpenQuery_(NetStatement.java:156)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.readOpenQuery(Statement.java:1478)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.flowExecute(Statement.java:2095)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQueryX(Statement.java:489)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeQuery(Statement.java:474)&lt;br/&gt;
	... 3 more&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.handleException(StressMultiTest.java:331)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.access$200(StressMultiTest.java:70)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.java:425)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;</comment>
                            <comment id="12721948" author="kmarsden" created="Fri, 19 Jun 2009 20:21:48 +0100"  >&lt;p&gt;Take a look in the derby.log to see if maybe you can find the root cause of the failure.   It may be &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3916&quot; title=&quot;StressMultiTest fails with protocol error due to java.util.NoSuchElementException in org.apache.derby.impl.store.raw.xact.TransactionTable.getTransactionInfo&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3916&quot;&gt;&lt;del&gt;DERBY-3916&lt;/del&gt;&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12722719" author="espinha" created="Mon, 22 Jun 2009 18:59:45 +0100"  >&lt;p&gt;Attaching the final patch, with the MAX_PORTS_USED set to 10. This is the number of ports used in suites.All.&lt;/p&gt;</comment>
                            <comment id="12723069" author="kmarsden" created="Tue, 23 Jun 2009 14:10:24 +0100"  >&lt;p&gt;When I ran suites.All with the patch I saw these two failures:&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) JMXTest:clientjunit.framework.AssertionFailedError: Timed out waiting for network server to start&lt;br/&gt;
orkServer exitCode=1&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:20&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:18)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
2) ManagementMBeanTest:clientjunit.framework.AssertionFailedError: Timed out waiting for network ser&lt;br/&gt;
 SpawnedNetworkServer exitCode=1&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:20&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:18)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 11166,  Failures: 2,  Errors: 0&lt;/p&gt;

&lt;p&gt;I don&apos;t think it is related, but I am going to run again just to make sure.&lt;br/&gt;
The patch looks fine except that the comment&lt;br/&gt;
  /* CHANGE THIS BEFORE FINAL PATCH! Set to actual value! */&lt;br/&gt;
should be changed to something else now that the value has been changed.&lt;/p&gt;</comment>
                            <comment id="12723163" author="kmarsden" created="Tue, 23 Jun 2009 17:24:15 +0100"  >&lt;p&gt;On rerun I got just the JMXTest failure.  netstat does not show any ports taken that should interfere with 1527 + 9 which I think is what the test would take.  management._Suite seems to run fine on its own. &lt;/p&gt;
</comment>
                            <comment id="12723198" author="kmarsden" created="Tue, 23 Jun 2009 18:32:08 +0100"  >&lt;p&gt;I was running on Windows XP with IBM 1.6.  Can someone else running on Windows XP give the basePort patch a try and I will do another run too.  &lt;/p&gt;
</comment>
                            <comment id="12723215" author="espinha" created="Tue, 23 Jun 2009 18:53:19 +0100"  >&lt;p&gt;Removed the comment reported by Kathey. I left it in capital letters and still managed to miss it #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - luckily I didn&apos;t forget to change the constant.&lt;/p&gt;</comment>
                            <comment id="12723746" author="mikem" created="Wed, 24 Jun 2009 22:23:41 +0100"  >&lt;p&gt;i ran against latest base patch and got no errors on a full test suite run against ibm16 jvm on XP.&lt;/p&gt;</comment>
                            <comment id="12723750" author="espinha" created="Wed, 24 Jun 2009 22:27:44 +0100"  >&lt;p&gt;Thank you for your testing Mike. Kathey also reported on IRC that her run also got no errors, so I think this patch is ready for prime time.&lt;/p&gt;</comment>
                            <comment id="12724627" author="kmarsden" created="Fri, 26 Jun 2009 18:31:36 +0100"  >&lt;p&gt;Resolving this issue. I might look later at backporting it. Developers can now do concurrent Suites.All runs by specifying derby.tests.basePort as described at &lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyJUnitTesting&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyJUnitTesting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give it a try!&lt;/p&gt;

&lt;p&gt;Tiago, maybe we should update the Wiki page in the regular run section to say that by default the tests use ten ports starting with 1527 &lt;/p&gt;</comment>
                            <comment id="12724660" author="espinha" created="Fri, 26 Jun 2009 19:43:33 +0100"  >&lt;p&gt;I have added some more info on the wiki page.&lt;/p&gt;

&lt;p&gt;Thank you Kathey for committing this! I hope it is of good use for people running concurrent tests.&lt;/p&gt;

&lt;p&gt;Kathey also suggested at some point that we can run parts of suites.All separately which can speed up the whole process. This isn&apos;t possible yet through JUnit alone, but we can just fire up several tests manually.&lt;/p&gt;</comment>
                            <comment id="12726667" author="espinha" created="Thu, 2 Jul 2009 21:34:59 +0100"  >&lt;p&gt;Reopening this issue. When ports higher than 9999 are used in the SysinfoTest, the test would fail because of a wrong regex search expression.&lt;/p&gt;</comment>
                            <comment id="12726668" author="espinha" created="Thu, 2 Jul 2009 21:35:45 +0100"  >&lt;p&gt;Attaching the patch to fix the regex issue.&lt;/p&gt;</comment>
                            <comment id="12732933" author="kmarsden" created="Sat, 18 Jul 2009 21:30:41 +0100"  >&lt;p&gt;Resolving this issue. The final patch to fix the regex issue with large ports has been committed.&lt;/p&gt;</comment>
                            <comment id="12734511" author="espinha" created="Thu, 23 Jul 2009 09:24:54 +0100"  >&lt;p&gt;The patch has been committed and the issue is fixed. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12425146">DERBY-4223</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12427391">DERBY-4262</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12364436">DERBY-2419</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12411557" name="DERBY-4217-basePort.patch" size="11725" author="espinha" created="Tue, 23 Jun 2009 18:53:19 +0100"/>
                            <attachment id="12411432" name="DERBY-4217-basePort.patch" size="11789" author="espinha" created="Mon, 22 Jun 2009 18:59:45 +0100"/>
                            <attachment id="12410989" name="DERBY-4217-basePort.patch" size="11518" author="espinha" created="Wed, 17 Jun 2009 22:40:07 +0100"/>
                            <attachment id="12410864" name="DERBY-4217-basePort.patch" size="13522" author="espinha" created="Wed, 17 Jun 2009 00:06:55 +0100"/>
                            <attachment id="12410806" name="DERBY-4217-dtap.patch" size="2615" author="espinha" created="Tue, 16 Jun 2009 14:44:24 +0100"/>
                            <attachment id="12410714" name="DERBY-4217-dtap.patch" size="44381" author="espinha" created="Mon, 15 Jun 2009 22:36:19 +0100"/>
                            <attachment id="12410520" name="DERBY-4217-dtp.patch" size="39580" author="espinha" created="Fri, 12 Jun 2009 23:27:56 +0100"/>
                            <attachment id="12410237" name="DERBY-4217-dtp.patch" size="41548" author="espinha" created="Tue, 9 Jun 2009 18:45:47 +0100"/>
                            <attachment id="12410156" name="DERBY-4217-dtp.patch" size="40426" author="espinha" created="Mon, 8 Jun 2009 21:04:11 +0100"/>
                            <attachment id="12410142" name="DERBY-4217-dtp.patch" size="39711" author="espinha" created="Mon, 8 Jun 2009 16:58:56 +0100"/>
                            <attachment id="12409870" name="DERBY-4217-dtp.patch" size="34176" author="espinha" created="Thu, 4 Jun 2009 12:21:33 +0100"/>
                            <attachment id="12412420" name="DERBY-4217-fixRegex.patch" size="917" author="espinha" created="Thu, 2 Jul 2009 21:35:45 +0100"/>
                            <attachment id="12409489" name="DERBY-4217-ij.patch" size="18472" author="espinha" created="Sun, 31 May 2009 08:52:25 +0100"/>
                            <attachment id="12409478" name="DERBY-4217-ij.patch" size="18043" author="espinha" created="Sat, 30 May 2009 21:05:47 +0100"/>
                            <attachment id="12409180" name="DERBY-4217-ij.patch" size="17482" author="espinha" created="Wed, 27 May 2009 17:07:24 +0100"/>
                            <attachment id="12409059" name="DERBY-4217-ij.patch" size="17481" author="espinha" created="Tue, 26 May 2009 19:38:13 +0100"/>
                            <attachment id="12409050" name="DERBY-4217-ij.patch" size="17301" author="espinha" created="Tue, 26 May 2009 18:05:05 +0100"/>
                            <attachment id="12409060" name="DERBY-4217-ij.stat" size="587" author="espinha" created="Tue, 26 May 2009 19:38:13 +0100"/>
                            <attachment id="12409051" name="DERBY-4217-ij.stat" size="587" author="espinha" created="Tue, 26 May 2009 18:05:05 +0100"/>
                            <attachment id="12407905" name="DERBY-4217.patch" size="34097" author="espinha" created="Tue, 12 May 2009 19:35:42 +0100"/>
                            <attachment id="12407657" name="DERBY-4217.patch" size="2177" author="espinha" created="Fri, 8 May 2009 21:15:57 +0100"/>
                            <attachment id="12407582" name="DERBY-4217.patch" size="1093" author="espinha" created="Thu, 7 May 2009 23:10:55 +0100"/>
                            <attachment id="12407575" name="DERBY-4217.patch" size="1074" author="espinha" created="Thu, 7 May 2009 21:55:03 +0100"/>
                            <attachment id="12407906" name="DERBY-4217.stat" size="851" author="espinha" created="Tue, 12 May 2009 19:35:42 +0100"/>
                            <attachment id="12407576" name="DERBY-4217.stat" size="73" author="espinha" created="Thu, 7 May 2009 21:55:03 +0100"/>
                            <attachment id="12410220" name="ErrorLog_suitesAll_bound.tgz" size="10243463" author="espinha" created="Tue, 9 Jun 2009 13:53:01 +0100"/>
                            <attachment id="12407658" name="ReproNetworkServerControl.java" size="6740" author="espinha" created="Fri, 8 May 2009 21:15:57 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 May 2009 21:58:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31164</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0jjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36986</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>