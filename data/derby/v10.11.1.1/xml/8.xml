<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:53:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-8/DERBY-8.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-8] Connection object gets created with un-supported holdability on getting Connection object from XAConnection &quot;inside&quot; the global transaction</title>
                <link>https://issues.apache.org/jira/browse/DERBY-8</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Reporting for Mamta Satoor, filed on Derby-dev list.&lt;/p&gt;

&lt;p&gt;I think there is a bug in Derby when the user code tries to get the&lt;br/&gt;
Connection object from XAConnection &quot;inside&quot; the global transaction.&lt;br/&gt;
In this case, the Connection object gets created with un-supported&lt;br/&gt;
holdability. Look at the following piece of code and it&apos;s output to&lt;br/&gt;
see what exactly happens&lt;br/&gt;
    EmbeddedXADataSource dscsx = new EmbeddedXADataSource();&lt;br/&gt;
    dscsx.setDatabaseName(&quot;wombat&quot;);&lt;br/&gt;
    XAConnection xac = dscsx.getXAConnection(&quot;fred&quot;, &quot;wilma&quot;);&lt;br/&gt;
    XAResource xr = xac.getXAResource();&lt;br/&gt;
    xid = getXid(27, (byte) 21, (byte) 01);&lt;br/&gt;
    xr.start(xid, XAResource.TMNOFLAGS);&lt;br/&gt;
    conn1 = xac.getConnection();&lt;br/&gt;
    System.out.println(&quot;This is a bug. Connection&apos;s holdability should&lt;br/&gt;
have been CLOSE_CURSORS_AT_COMMIT since it is in the global&lt;br/&gt;
transaction&quot;);&lt;br/&gt;
    System.out.println(&quot;CONNECTION(in xa transaction) HOLDABILITY &quot; +&lt;br/&gt;
(conn1.getHoldability() == ResultSet.HOLD_CURSORS_OVER_COMMIT));&lt;br/&gt;
    System.out.println(&quot;Autocommit on Connection inside global&lt;br/&gt;
transaction has been set correctly to &quot; + conn1.getAutoCommit());&lt;br/&gt;
    xr.end(xid, XAResource.TMSUCCESS);&lt;br/&gt;
The output for the above piece of code is&lt;br/&gt;
    This is a bug. Connection&apos;s holdability should have been&lt;br/&gt;
CLOSE_CURSORS_AT_COMMIT since it is in the global transaction&lt;br/&gt;
    CONNECTION(in xa transaction) HOLDABILITY true&lt;br/&gt;
    Autocommit on Connection inside global transaction has been set&lt;br/&gt;
correctly to false&lt;/p&gt;</description>
                <environment></environment>
        <key id="27488">DERBY-8</key>
            <summary>Connection object gets created with un-supported holdability on getting Connection object from XAConnection &quot;inside&quot; the global transaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="tulika">Tulika Agrawal</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Sep 2004 02:00:34 +0100</created>
                <updated>Wed, 12 Apr 2006 03:26:10 +0100</updated>
                            <resolved>Wed, 12 Apr 2006 03:26:11 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="56026" author="shreyas" created="Tue, 30 Nov 2004 12:33:43 +0000"  >&lt;p&gt;My comments on this issue:&lt;/p&gt;

&lt;p&gt;Both the XAResource and the Connection handle got by calling a getConnection() method on a XAConnection are child entities of the XAConnection. So the XAResource and the Connection are in parallel if a hierarchy is imagined with a XAConnection as the head. &lt;br/&gt;
  So the Connection handle got by calling a getConnection method on the XAResource is not bound to have the same holdability for cursors as that of the Transaction. It should have its own holdability state.&lt;/p&gt;

&lt;p&gt;Moreover in a managed sscenario the XAConnection interface is not directly used, we just get a java.sql.Connection handle by calling the getConnection method on the DataSource. It is the DataSource configuration that determines what all happens behind the scene to return a Connection handle.&lt;/p&gt;

&lt;p&gt;So in my opinion Derby is behaving properly.&lt;/p&gt;</comment>
                            <comment id="56076" author="mamtas" created="Wed, 1 Dec 2004 23:05:16 +0000"  >&lt;p&gt;Should we then reconsider what happens to the holdability of the connection handle(got by calling a getConnection() method on a XAConnection OUTSIDE the global transaction) when it becomes part of a global transaction? &lt;/p&gt;

&lt;p&gt;Following example code shows that Derby currently (silently) switches the the holdability of the connection handle from HOLD_CURSORS_OVER_COMMIT to CLOSE_CURSORS_AT_COMMIT when it becomes part of the global transaction.&lt;/p&gt;

&lt;p&gt;    EmbeddedXADataSource dscsx = new EmbeddedXADataSource(); &lt;br/&gt;
    dscsx.setDatabaseName(&quot;wombat&quot;); &lt;br/&gt;
    XAConnection xac = dscsx.getXAConnection(&quot;fred&quot;, &quot;wilma&quot;); &lt;br/&gt;
    XAResource xr = xac.getXAResource(); &lt;br/&gt;
    Xid xid = getXid(27, (byte) 21, (byte) 01); &lt;br/&gt;
    Connection conn1 = xac.getConnection(); &lt;br/&gt;
    System.out.println(&quot;By default, autocommit is &quot; + conn1.getAutoCommit() + &quot; for a connection&quot;);&lt;br/&gt;
    System.out.println(&quot;Default holdability for a connection is HOLD_CURSORS_OVER_COMMIT&quot;);&lt;br/&gt;
    System.out.println(&quot;CONNECTION(not in xa transaction yet) HOLDABILITY &quot; + (conn1.getHoldability() == ResultSet.HOLD_CURSORS_OVER_COMMIT));&lt;br/&gt;
    xr.start(xid, XAResource.TMNOFLAGS);&lt;br/&gt;
    System.out.println(&quot;Notice that autocommit now is &quot; + conn1.getAutoCommit() + &quot; for connection because it is part of the global transaction&quot;);&lt;br/&gt;
    System.out.println(&quot;Notice that connection&apos;s holdability at this point is CLOSE_CURSORS_AT_COMMIT because it is part of the global transaction&quot;);&lt;br/&gt;
    System.out.println(&quot;CONNECTION(in xa transaction) HOLDABILITY &quot; + (conn1.getHoldability() == ResultSet.HOLD_CURSORS_OVER_COMMIT));&lt;/p&gt;

&lt;p&gt;Output of this code snippet when run under Derby is as follows.&lt;br/&gt;
START XA HOLDABILITY TEST&lt;br/&gt;
By default, autocommit is true for a connection&lt;br/&gt;
Default holdability for a connection is HOLD_CURSORS_OVER_COMMIT&lt;br/&gt;
CONNECTION(not in xa transaction yet) HOLDABILITY true&lt;br/&gt;
Notice that autocommit now is false for connection because it is part of the global transaction&lt;br/&gt;
Notice that connection&apos;s holdability at this point is CLOSE_CURSORS_AT_COMMIT because it is part of the global transaction&lt;br/&gt;
CONNECTION(in xa transaction) HOLDABILITY false&lt;/p&gt;

&lt;p&gt;thanks,&lt;br/&gt;
Mamta&lt;/p&gt;</comment>
                            <comment id="56080" author="djd" created="Thu, 2 Dec 2004 03:25:29 +0000"  >&lt;p&gt;I think the point is being missed that Derby does not support holdability when in a global transaction, thus holdability should always be CLOSE_CURSORS_AT_COMMIT when in a global transaction, regardless of the state set by the connection in local mode. So I believe the bug summary is correct, and there is a bug.&lt;/p&gt;</comment>
                            <comment id="12313960" author="mamtas" created="Sat, 18 Jun 2005 17:54:35 +0100"  >&lt;p&gt;I have a patch to fix Derby-8 (Connection object gets created with un-supported holdability on getting Connection object from XAConnection &quot;inside&quot; the global transaction) and Derby-366 (In jdk13, when a connection transitions from global transaction to local transaction, its default holdability of HOLD_CURSORS_OVER_COMMIT is not restored.) The patch is attached to both Derby-8 and Derby-366.&lt;/p&gt;

&lt;p&gt;The fix for both these bugs was centered around fixing the holdability handling in BrokeredConnection.java This was because BrokeredConnection.java had no code for restoring the holdability of real connection object and no code for saving the current holdability state of real connection object. I put fix for both these issues in BrokeredConnection.java so that both jdk13 and jdk14+ environments will be handled correctly. Had to use reflection for this holdability work&lt;br/&gt;
because Connection.setHoldability and Connection.getHoldability methods are not available through JDK13 apis.&lt;/p&gt;

&lt;p&gt;svn stat &lt;br/&gt;
M      java\engine\org\apache\derby\iapi\jdbc\BrokeredConnection.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\jdbc\BrokeredConnection30.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\store\xaOffline1.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\store\xab2354.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\xaAnotherTest.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\xaSimplePositive.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\xaSimpleNegative.sql&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\checkDataSource30.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\xaOffline1.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\xaSimplePositive.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\xab2354.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\xaSimpleNegative.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\xaAnotherTest.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\checkDataSource30.out&lt;/p&gt;

&lt;p&gt;Kathey, may be you can try this fix with Network Server and see if it resolves any related issues you had there?&lt;/p&gt;

&lt;p&gt;I have run the test suite and this fix has not caused any failures. Have changed some of the existing XA tests so that they can rely on correct holdability status inside and outside global transaction.&lt;/p&gt;

&lt;p&gt;If no comments from anyone, can a commiter please commit this patch?&lt;/p&gt;</comment>
                            <comment id="12314196" author="kmarsden" created="Wed, 22 Jun 2005 14:09:51 +0100"  >&lt;p&gt;Checked this in.&lt;br/&gt;
Transmitting file data ...............&lt;br/&gt;
Committed revision 191755.&lt;/p&gt;</comment>
                            <comment id="12314249" author="kmarsden" created="Thu, 23 Jun 2005 04:15:15 +0100"  >&lt;p&gt;This issue was fixed with Mamta&apos;s fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt; and DERBY366.  I think this one is actually a dup of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-8&quot; title=&quot;Connection object gets created with un-supported holdability on getting Connection object from XAConnection &amp;quot;inside&amp;quot; the global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-8&quot;&gt;&lt;del&gt;DERBY-8&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12314276" author="mamtas" created="Thu, 23 Jun 2005 10:13:50 +0100"  >&lt;p&gt;The fix has been committed by Kathey&lt;/p&gt;</comment>
                            <comment id="12374088" author="mamtas" created="Wed, 12 Apr 2006 03:25:33 +0100"  >&lt;p&gt;Need to put correct fix-in version&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12311251">DERBY-346</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12310836" name="Derby8_Derby366_061805.txt" size="34274" author="mamtas" created="Sat, 18 Jun 2005 17:54:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Nov 2004 12:33:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21711</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40753</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>