<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4127/DERBY-4127.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4127] ArrayIndexOutOfBoundsException in DatabaseMetaDataTest when run in Soft Upgrade mode</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4127</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This bug was found when doing soft upgrade testing from Derby version 10.4.2.0 to 10.5.1.0 (RC1)&lt;/p&gt;

&lt;p&gt;Steps followed are as follows.&lt;/p&gt;

&lt;p&gt;1. Run setEmbeddedCP.bat from version 10.4.2.0&apos;s bin folder&lt;br/&gt;
2. In a test folder run ij&lt;br/&gt;
3. create system/wombat database.&lt;br/&gt;
    ij&amp;gt; connect &apos;jdbc:derby:system/wombat;create=true&apos;;&lt;br/&gt;
4. exit ij&lt;br/&gt;
5. Copy the 10.5.1.0 derby jars (from lib folder) and the derbyTesting.jar from 10.4.2.0 to the test folder and set classpath with them (including junit and ORO)&lt;br/&gt;
6. Run suites.All&lt;br/&gt;
     java -Xmx512M -Xms512M -Dderby.tests.trace=true junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All&lt;/p&gt;

&lt;p&gt;Result:&lt;br/&gt;
Tests run: 10479, Failures: 56, Errors: 34 &lt;/p&gt;

&lt;p&gt;The stack trace is as follows.&lt;br/&gt;
---------------------------------------------------------------------------------------------------------&lt;br/&gt;
21) testGetColumnsReadOnly(org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest)java.lang.ArrayIndexOutOfBoundsException: 122&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.readFdocaBytes(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAXGRP(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAGRP(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCARD(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.calculateColumnOffsetsForRow_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Cursor.stepNext(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.scanDataBufferForEndOfData(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetResultSet.preClose_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.closeX(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.close(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.crossCheckGetColumnsAndResultSetMetaData(DatabaseMetaDataTest.java:1660)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetColumnsReadOnly(DatabaseMetaDataTest.java:1357)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;22) testGetColumnsModify(org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest)java.lang.ArrayIndexOutOfBoundsException: 122&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.readFdocaBytes(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAXGRP(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAGRP(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCARD(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.calculateColumnOffsetsForRow_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Cursor.stepNext(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.scanDataBufferForEndOfData(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetResultSet.preClose_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.closeX(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.close(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.crossCheckGetColumnsAndResultSetMetaData(DatabaseMetaDataTest.java:1660)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetColumnsReadOnly(DatabaseMetaDataTest.java:1357)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetColumnsModify(DatabaseMetaDataTest.java:1374)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
----------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;I did not see anything in the derby.log from the tests that seemed to be related to this.&lt;/p&gt;

&lt;p&gt;Note that this test passed when run by itself, and also when run after a couple of failing tests (namely org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest and org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdatableResultSetTest)&lt;/p&gt;</description>
                <environment>Windows Vista 64, Junit 3.8.2, Sun JDK 1.6.0_10</environment>
        <key id="12419671">DERBY-4127</key>
            <summary>ArrayIndexOutOfBoundsException in DatabaseMetaDataTest when run in Soft Upgrade mode</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="suranjay">Suran Jayathilaka</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Mar 2009 18:56:50 +0000</created>
                <updated>Fri, 21 Jan 2011 17:52:20 +0000</updated>
                            <resolved>Mon, 13 Apr 2009 15:17:58 +0100</resolved>
                                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12695213" author="dagw" created="Fri, 3 Apr 2009 03:37:13 +0100"  >&lt;p&gt;Running with sane jars from head of 10.5 branch I see this also. Here is the stack trace with line numbers for the client side:&lt;/p&gt;

&lt;p&gt;java.lang.ArrayIndexOutOfBoundsException: 122&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.readFdocaBytes(NetCursor.java:516)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAXGRP(NetCursor.java:825)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCAGRP(NetCursor.java:732)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.parseSQLCARD(NetCursor.java:705)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.calculateColumnOffsetsForRow_(NetCursor.java:148)&lt;br/&gt;
	at org.apache.derby.client.am.Cursor.stepNext(Cursor.java:182)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.scanDataBufferForEndOfData(NetCursor.java:385)&lt;br/&gt;
	at org.apache.derby.client.net.NetResultSet.preClose_(NetResultSet.java:260)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.closeX(ResultSet.java:439)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.close(ResultSet.java:416)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.crossCheckGetColumnsAndResultSetMetaData(DatabaseMetaDataTest.java:1660)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetColumnsReadOnly(DatabaseMetaDataTest.java:1357)&lt;/p&gt;</comment>
                            <comment id="12695216" author="myrna" created="Fri, 3 Apr 2009 04:07:39 +0100"  >&lt;p&gt;I haven&apos;t analyzed all my test runs yet, but so far I don&apos;t see this one. &lt;br/&gt;
I wonder - I believe the DatabaseMetaDataTest runs a couple of times as part of the upgrade tests.  Is that when DatabaseMetaDataTest is run as part of the upgrade tests or when run by itself later?&lt;/p&gt;</comment>
                            <comment id="12695228" author="kmarsden" created="Fri, 3 Apr 2009 05:03:35 +0100"  >&lt;p&gt;the key is that it has to be run on a soft upgraded (from 10.4) database. i.e. Create the database system/wombat with 10.4.2.0 and then run with the 10.4 testing jar and the 10.5 product jars, so you wouldn&apos;t have seen it in your normal test runs.&lt;/p&gt;

&lt;p&gt;As for what mode it is run in, that is a really excellent point.  This is the 10th time the test is run in the test suite that it fails. What variation of the test that is I don&apos;t know, but it would be worth trying to figure out so we can get a smaller repro than running the whole suite.&lt;/p&gt;
</comment>
                            <comment id="12695378" author="kmarsden" created="Fri, 3 Apr 2009 14:02:57 +0100"  >&lt;p&gt;I tried running lang.CollationTests  and upgredeTests._Suite independently with the soft upgrade setup, and did not see the issue. Suran also tried running DatabaseMetaDataTest on its own and it didn&apos;t reproduce.   I don&apos;t immediately see other configurations in which it is run.&lt;/p&gt;</comment>
                            <comment id="12695594" author="dagw" created="Fri, 3 Apr 2009 22:30:12 +0100"  >&lt;p&gt;The error occurs when DatabaseMetaDataTest is run from inside jdbcapi/_Suite - i.e. just before ClosedObjectTest is run.&lt;br/&gt;
That is, the entire lang suite has been run prior to jdbcapi. I will try to run jdbcapi/_Suite separately and see if it&lt;br/&gt;
reproduces.&lt;/p&gt;</comment>
                            <comment id="12695609" author="dagw" created="Fri, 3 Apr 2009 22:51:33 +0100"  >&lt;p&gt;I can reproduce the error by running just jdbcapi/_Suite.&lt;/p&gt;</comment>
                            <comment id="12695639" author="dagw" created="Sat, 4 Apr 2009 00:10:11 +0100"  >&lt;p&gt;If I uncomment all tests in jdbcapi/_Suite before DatabaseMetaDataTest, except DboPowersTest, I can see the error.&lt;br/&gt;
Somehow it seems the problem is a side-effect of DboPowersTest, which does shut down the wombat database and bring back up again.&lt;/p&gt;</comment>
                            <comment id="12695643" author="dagw" created="Sat, 4 Apr 2009 00:44:44 +0100"  >&lt;p&gt;Of one the test cases inside DboPowersTest actually leads to a hard upgrade of wombat to 10.5. This seems to&lt;br/&gt;
precipitate the error. (DboPowersTest works on the assumption that the hard upgrade here is just a normal reboot;&lt;br/&gt;
the intention being to just test the powers to specify hard upgrade. Obviously, when we have created wombat with 10.4 that assumption no longer holds. But why a hard upgrade should make the subsequent DatabaseMetaDataTest fail is another matter..)&lt;/p&gt;</comment>
                            <comment id="12695644" author="dagw" created="Sat, 4 Apr 2009 00:57:22 +0100"  >&lt;p&gt;Right, I have confirmed this. By creating wombat at 10.4, then hard upgrading to 10.5 using ij,&lt;br/&gt;
and just running DatabaseMetaDataTest, I see the error. &lt;br/&gt;
So somehow, the hard upgrade isn&apos;t working correctly.&lt;/p&gt;

&lt;p&gt;(It may be useful to make DboPowersTest test its thing on a another database than wombat to be able to run the entire regression in a soft upgrade mode, but that would be another issue).&lt;/p&gt;

</comment>
                            <comment id="12695649" author="kmarsden" created="Sat, 4 Apr 2009 01:10:16 +0100"  >&lt;p&gt;Thanks Dag for looking at this issue.  I will kick off a hard upgrade run to see if we hit any other issues with hard upgrade.  Do you think this issue should be BLOCKER since the on disk format has come into question and may be difficult to fix after release?&lt;/p&gt;</comment>
                            <comment id="12695779" author="dagw" created="Sat, 4 Apr 2009 19:50:54 +0100"  >&lt;p&gt;I agree, Kathey. Moving to blocker, at least until we know the root cause.&lt;/p&gt;</comment>
                            <comment id="12697170" author="rhillegas" created="Wed, 8 Apr 2009 21:07:55 +0100"  >&lt;p&gt;Attaching Test4127.java. This is a small program which reproduces the problem. The program does the following:&lt;/p&gt;

&lt;p&gt;o Connects to the upgraded database&lt;/p&gt;

&lt;p&gt;o Gets a ResultSet for selecting all of SYS.SYSROUTINEPERMS&lt;/p&gt;

&lt;p&gt;o Gets and then immediately closes the ResultSetMetaData on the ResultSet above&lt;/p&gt;

&lt;p&gt;To reproduce the problem, do the following:&lt;/p&gt;

&lt;p&gt;o Create a 10.4 database&lt;/p&gt;

&lt;p&gt;o Hard-upgrade it to 10.5&lt;/p&gt;

&lt;p&gt;o Bring up a 10.5 network server&lt;/p&gt;

&lt;p&gt;o Run the program specifying a network connection url to the upgraded database, like this:&lt;/p&gt;

&lt;p&gt;  java Test4127 &quot;jdbc:derby://localhost:8246/wombat10.4to10.5&quot;&lt;/p&gt;</comment>
                            <comment id="12697833" author="rhillegas" created="Fri, 10 Apr 2009 16:08:17 +0100"  >&lt;p&gt;I have looked into this problem and would like to summarize what I have observed:&lt;/p&gt;

&lt;p&gt;1) Simple test case&lt;/p&gt;

&lt;p&gt;2) Scope of problem&lt;/p&gt;

&lt;p&gt;3) Suspect code&lt;/p&gt;

&lt;p&gt;4) Proposed solution (10.5)&lt;/p&gt;

&lt;p&gt;5) Future improvements (10.6)&lt;/p&gt;


&lt;p&gt;------- (1) Simple Test Case ---------------&lt;/p&gt;

&lt;p&gt;Here is a simple way to reproduce this problem:&lt;/p&gt;

&lt;p&gt;A) Hard-upgrade a 10.4 (or earlier) database to 10.5&lt;/p&gt;

&lt;p&gt;B) Bring up the 10.5 network server&lt;/p&gt;

&lt;p&gt;C) Run the following query through ij over the network:&lt;/p&gt;

&lt;p&gt;    select * from sys.sysroutineperms&lt;/p&gt;

&lt;p&gt;I didn&apos;t spend any time looking into the ugly network error. I wrote it off as just another example of the obscure diagnostics which the network layer barks when it trips over a puzzling condition. I believe that the underlying problem which muddled the network layer was the presence of a null in a non-nullable column.&lt;/p&gt;

&lt;p&gt;More specifically, the same query run through the embedded driver shows a corrupt permission tuple. The PUBLIC permission granted to SYSCS_UPDATE_STATISTICS has a null GRANTOR column. GRANTOR is a non-nullable column and it should contain the name of the database owner.&lt;/p&gt;

&lt;p&gt;The tuple should be&lt;/p&gt;

&lt;p&gt;( permissionID = someUUID, grantee = PUBLIC, grantor = databaseOwner, aliasID = updateStatisticsUUID, grantOption = N )&lt;/p&gt;

&lt;p&gt;but is instead&lt;/p&gt;

&lt;p&gt;( permissionID = someUUID, grantee = PUBLIC, grantor = NULL, aliasID = updateStatisticsUUID, grantOption = N )&lt;/p&gt;

&lt;p&gt;An extra complication of this corruption occurs if a database is hard-upgraded from 10.0 to 10.5. In that case, the metadata holds two versions of the permission: the correct version and the corrupt version.&lt;/p&gt;



&lt;p&gt;------- (2) Scope of the Problem ---------------&lt;/p&gt;

&lt;p&gt;I believe that this corrupt metadata is benign for the moment. That is, I don&apos;t believe that this corruption causes Derby to malfunction in any serious way--other than exposing some brittleness in the network layer. However, I think that corrupt metadata is a ticking timebomb and we should not make the metadata more corrupt than it already is.&lt;/p&gt;

&lt;p&gt;In investigating this problem, I discovered another example of this corruption which may have crept into Derby databases already. The permission granted to SYSCS_INPLACE_COMPRESS_TABLE has a null GRANTOR column if the database was hard-upgraded from 10.0 to 10.2 or later. Note that the corruption does not appear in databases which underwent an intermediate upgrade to 10.1 before being hard-upgraded to a later release. So the corrupt upgrade trajectories are:&lt;/p&gt;

&lt;p&gt;  10.0 -&amp;gt; 10.2&lt;br/&gt;
  10.0 -&amp;gt; 10.3&lt;br/&gt;
  10.0 -&amp;gt; 10.4&lt;/p&gt;

&lt;p&gt;but the following trajectories are ok:&lt;/p&gt;

&lt;p&gt;  10.0 -&amp;gt; 10.1 -&amp;gt; 10.2&lt;br/&gt;
  10.0 -&amp;gt; 10.1 -&amp;gt; 10.3&lt;br/&gt;
  10.0 -&amp;gt; 10.1 -&amp;gt; 10.4&lt;/p&gt;


&lt;p&gt;------- (3) Suspect Code ---------------&lt;/p&gt;

&lt;p&gt;To recap, we see two upgrade problems:&lt;/p&gt;

&lt;p&gt;i) A NULL GRANTOR column in a permission tuple--seen in all hard-upgrades to 10.5.&lt;/p&gt;

&lt;p&gt;ii) Redundant permission tuples--seen when you hard-upgrade from 10.0.&lt;/p&gt;

&lt;p&gt;I believe these problems are caused by the following issues in Derby&apos;s metadata management:&lt;/p&gt;

&lt;p&gt;i) We calculate the database owner AFTER upgrade. I think this was a deliberate decision. Calculating the database owner AFTER upgrade gives you the correct owner when you hard-upgrade to 10.2 or later. That is because 10.2 changes the database owner. However, this late calculation means that the database owner is NULL during upgrade--and that is why we stuff NULL into the GRANTOR column.&lt;/p&gt;

&lt;p&gt;ii) We declare the list of PUBLIC routines twice: first in a tidy table and then again in procedural logic. This redundant declaration results in multiple copies of the same permission.&lt;/p&gt;


&lt;p&gt;------- (4) Proposed solution (10.5) ---------------&lt;/p&gt;

&lt;p&gt;I recommend the following immediate changes to 10.5 and the trunk:&lt;/p&gt;

&lt;p&gt;i) Calculate the database owner BEFORE the database is upgraded. Then recalculate the database owner during upgrade if we have to run the 10.2 logic which changes the database owner.&lt;/p&gt;

&lt;p&gt;ii) Declare the list of PUBLIC routines only once. I think this means removing one of the existing declarations. Removing the tidy tables requires fewer code changes but results in code that is harder to understand. Removing the procedural redundancies causes a lot of edits but leaves you with a tidy declaration of the PUBLIC routines which you understand at a glance. I vote for this solution.&lt;/p&gt;


&lt;p&gt;------- (5) Future improvements (10.6) ---------------&lt;/p&gt;

&lt;p&gt;Even after making the changes in (4), we are still left with the corrupt permission for SYSCS_INPLACE_COMPRESS_TABLE in databases which were hard-upgraded as follows:&lt;/p&gt;

&lt;p&gt;  10.0 -&amp;gt; 10.2&lt;br/&gt;
  10.0 -&amp;gt; 10.3&lt;br/&gt;
  10.0 -&amp;gt; 10.4&lt;/p&gt;

&lt;p&gt;We could add some 10.5 upgrade logic which corrects this corruption. However, since I think the corruption is benign for the moment and no-one has complained about it yet, I recommend that we defer this correction until the 10.6 upgrade. I also recommend that we write a comprehensive test which compares virgin metadata with hard-upgraded metadata. We should run this test on all hard-upgrade trajectories. This may uncover other corruptions in Derby metadata. We should correct those other corruptions in 10.6 too.&lt;/p&gt;</comment>
                            <comment id="12697849" author="rhillegas" created="Fri, 10 Apr 2009 16:59:11 +0100"  >&lt;p&gt;Attaching derby-4127-aa-01-refactorPrivs.diff. This patch makes the changes described in (4i) and (4ii) above. This fixes the original problem and makes SYS.SYSROUTINEPERMS look correct after hard-upgrading from 10.4 to 10.5. I am running regression tests now.&lt;/p&gt;

&lt;p&gt;This patch makes the following changes:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;a) The database owner is now calculated BEFORE upgrade rather than AFTER upgrade&lt;/p&gt;

&lt;p&gt;b) The hard-upgrade logic for 10.2 now recalculates the database owner after changing it.&lt;/p&gt;

&lt;p&gt;(ii)&lt;/p&gt;

&lt;p&gt;c) Permission-creating logic has been removed from the release-specific methods which add system routines.&lt;/p&gt;

&lt;p&gt;d) Instead, we now keep track of which system routines we are adding.&lt;/p&gt;

&lt;p&gt;e) After adding system routines (at the end of database creation and hard-upgrade), we call a method which adds permissions for the public routines which appear in the list of routines we have just added.&lt;/p&gt;


&lt;p&gt;This patch does not add any additional tests. That work is deferred until 10.6 when we will write a comprehensive test that will compare virgin metadata to hard-upgraded metadata along all upgrade trajectories.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java&lt;/p&gt;
</comment>
                            <comment id="12697884" author="rhillegas" created="Fri, 10 Apr 2009 18:53:14 +0100"  >&lt;p&gt;Tests ran cleanly for me. I will hold off committing this patch until Monday to give people an opportunity to review it. Thanks.&lt;/p&gt;</comment>
                            <comment id="12698132" author="kmarsden" created="Sat, 11 Apr 2009 21:40:20 +0100"  >&lt;p&gt;I ran suites.All against 10.3.3.0 and 10.4.2.0-&amp;gt;10.5 (with the patch) hard upgraded databases and did not see the failure. Nor did I see the  testReplication_Local_StateTest_part1 failure I had seen in earlier runs.  So that must have been either a different manifestation of this issue or just coincidental instability in the replication tests.&lt;/p&gt;</comment>
                            <comment id="12698393" author="rhillegas" created="Mon, 13 Apr 2009 15:00:33 +0100"  >&lt;p&gt;Committed derby-4127-aa-01-refactorPrivs.diff at subversion revision 764471.&lt;/p&gt;</comment>
                            <comment id="12698395" author="rhillegas" created="Mon, 13 Apr 2009 15:17:45 +0100"  >&lt;p&gt;Ported 764471 from the 10.5 branch to the trunk at subversion revision 764481.&lt;/p&gt;</comment>
                            <comment id="12698901" author="rhillegas" created="Tue, 14 Apr 2009 21:01:35 +0100"  >&lt;p&gt;Fixed javadoc error introduced by 764471. Fixed 10.5 branch at subversion revision 764932. Ported to main at subversion revision 764939.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12424629">DERBY-4215</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12422591">DERBY-4157</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12405001" name="Test4127.java" size="1512" author="rhillegas" created="Wed, 8 Apr 2009 21:07:55 +0100"/>
                            <attachment id="12405163" name="derby-4127-aa-01-refactorPrivs.diff" size="33865" author="rhillegas" created="Fri, 10 Apr 2009 16:59:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Apr 2009 02:37:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24043</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l4v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37242</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>