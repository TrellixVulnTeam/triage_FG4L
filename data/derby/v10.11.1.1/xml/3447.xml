<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3447/DERBY-3447.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3447] Shutdown on a database without stopping replication hangs</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3447</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12389293">DERBY-3447</key>
            <summary>Shutdown on a database without stopping replication hangs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Feb 2008 09:35:32 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:30 +0000</updated>
                            <resolved>Tue, 1 Apr 2008 14:48:40 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12572021" author="jorgenlo" created="Mon, 25 Feb 2008 07:56:18 +0000"  >&lt;p&gt;I tried to start replication and then shutdown the master database, but did not get a hang. This may have been fixed in a recent commit. If you still get a hang, could you please submit a reproducible script? &lt;/p&gt;</comment>
                            <comment id="12574946" author="jorgenlo" created="Tue, 4 Mar 2008 11:56:47 +0000"  >&lt;p&gt;When replication has been set up in embedded using ij,&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:;shutdown=true&apos;&lt;br/&gt;
quit;&lt;/p&gt;

&lt;p&gt;works fine on the master, whereas only&lt;/p&gt;

&lt;p&gt;quit;&lt;/p&gt;

&lt;p&gt;hangs. I&apos;m not sure what the difference here is, but the thread stack reports that the log shipper thread is still alive. I think we shoul add cleanup code in MC#stop to get rid of this thread in the case that the module is unbooted without calling stopMaster or failover first. That happens e.g. for system shutdown.&lt;/p&gt;</comment>
                            <comment id="12574952" author="oysteing" created="Tue, 4 Mar 2008 12:30:46 +0000"  >&lt;p&gt;The same operation also hangs on the slave.  Neither the log receiver thread nor the boot thread seems to have been terminated.&lt;/p&gt;</comment>
                            <comment id="12576054" author="narayanan" created="Fri, 7 Mar 2008 06:40:19 +0000"  >&lt;p&gt;Modified the stop() method to call stopMaster in the attached patch.&lt;/p&gt;

&lt;p&gt;Ran the following cases as repros, seems to run fine.&lt;/p&gt;

&lt;p&gt;Repro 1&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;exit ij with quit;&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_freeze_database(); &lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort-8001&apos;;&lt;br/&gt;
ERROR XJ028: The URL &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort-8001&apos; is not properly formed.&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447/master$ &lt;/p&gt;

&lt;p&gt;Repro 2&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;exit ij, with system shutdown&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:;shutdown=true&apos; &lt;br/&gt;
and&lt;br/&gt;
quit&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447/master$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_freeze_database();&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby:;shutdown=true&apos;;&lt;br/&gt;
ERROR XJ015: Derby system shutdown.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447/master$ &lt;/p&gt;

&lt;p&gt;Repro 3&lt;br/&gt;
--------&lt;/p&gt;

&lt;p&gt;exit ij, with database shutdown.&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447/master$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;create=true&apos;;&lt;br/&gt;
ij&amp;gt;  call syscs_util.syscs_freeze_database();&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby:masterDB;shutdown=true&apos;;&lt;br/&gt;
ERROR 08006: Database &apos;masterDB&apos; shutdown.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; exit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447/master$&lt;/p&gt;
</comment>
                            <comment id="12577345" author="oysteing" created="Tue, 11 Mar 2008 09:28:58 +0000"  >&lt;p&gt;Hi, I tried the patch, but I still get I hang when I quit an ij that is running a master.&lt;br/&gt;
(Since MasterController has moved, I modified the path in the diff file before applying the patch.)&lt;br/&gt;
(I am runnig with classes.)&lt;/p&gt;</comment>
                            <comment id="12577348" author="narayanan" created="Tue, 11 Mar 2008 09:35:27 +0000"  >&lt;p&gt;&amp;gt;Hi, I tried the patch, but I still get I hang when I quit an ij that is running a master.&lt;/p&gt;

&lt;p&gt;You just did a quit; and it hanged? Surprising the repro worked for me. I will check this.&lt;/p&gt;

&lt;p&gt;&amp;gt;(Since MasterController has moved, I modified the path in the diff file before applying the patch.)&lt;/p&gt;

&lt;p&gt;Just modified the file names in the diff?&lt;/p&gt;

&lt;p&gt;&amp;gt;(I am runnig with classes.)&lt;/p&gt;

&lt;p&gt;Would this be different from running with the jars?&lt;/p&gt;</comment>
                            <comment id="12577389" author="narayanan" created="Tue, 11 Mar 2008 11:04:42 +0000"  >&lt;p&gt;I am not able to reproduce this problem on both embedded and network/client&lt;/p&gt;

&lt;p&gt;Network Client&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447_1/master$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.5&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447_1/master$&lt;/p&gt;

&lt;p&gt;Embedded&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447_1/master$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.5&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call SYSCS_UTIL.SYSCS_FREEZE_DATABASE(); &lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447_1/master$ &lt;/p&gt;

&lt;p&gt;Can you pls re-run and confirm on the current workspace to see if this problem is occurring?&lt;/p&gt;</comment>
                            <comment id="12577393" author="oysteing" created="Tue, 11 Mar 2008 11:17:25 +0000"  >&lt;p&gt;It works for me if I turn off authentication and SQL authorization.&lt;/p&gt;</comment>
                            <comment id="12577785" author="narayanan" created="Wed, 12 Mar 2008 10:14:56 +0000"  >&lt;p&gt;I am not able to reproduce this problem on the network client (surprises me, Maybe I did something wrong!!). &lt;br/&gt;
But am able to reproduce this in the embedded mode. I did a jstack to find out what is hanging and found the&lt;br/&gt;
following relevant&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
master&lt;/p&gt;

&lt;p&gt;&quot;Attach Listener&quot; daemon prio=10 tid=0x08312000 nid=0x2086 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0x00000000&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;DestroyJavaVM&quot; prio=10 tid=0x08059800 nid=0x2004 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb7dfc090&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;derby.master.logger-mydb&quot; prio=10 tid=0x08311800 nid=0x203b in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5594000..0xb55950c0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: TIMED_WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c0b6180&amp;gt; (a org.apache.derby.impl.store.replication.master.AsynchronousLogShipper)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.master.AsynchronousLogShipper.run(AsynchronousLogShipper.java:203)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c0b6180&amp;gt; (a org.apache.derby.impl.store.replication.master.AsynchronousLogShipper)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;derby.rawStoreDaemon&quot; daemon prio=10 tid=0x082b5c00 nid=0x2015 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5607000..0xb5608040&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: TIMED_WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c61f0a0&amp;gt; (a org.apache.derby.impl.services.daemon.BasicDaemon)&lt;br/&gt;
        at org.apache.derby.impl.services.daemon.BasicDaemon.rest(BasicDaemon.java:571)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c61f0a0&amp;gt; (a org.apache.derby.impl.services.daemon.BasicDaemon)&lt;br/&gt;
        at org.apache.derby.impl.services.daemon.BasicDaemon.run(BasicDaemon.java:388)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Timer-0&quot; daemon prio=10 tid=0x08294000 nid=0x2014 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5666000..0xb5666fc0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c5d47b0&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at java.util.TimerThread.mainLoop(Timer.java:483)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c5d47b0&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
        at java.util.TimerThread.run(Timer.java:462)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;derby.antiGC&quot; daemon prio=10 tid=0x08213c00 nid=0x2013 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb56ba000..0xb56baf40&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c5870a8&amp;gt; (a org.apache.derby.impl.services.monitor.AntiGC)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.AntiGC.run(BaseMonitor.java:2196)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c5870a8&amp;gt; (a org.apache.derby.impl.services.monitor.AntiGC)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Low Memory Detector&quot; daemon prio=10 tid=0x0808e000 nid=0x200a runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0x00000000&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;CompilerThread0&quot; daemon prio=10 tid=0x0808c400 nid=0x2009 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb5a5b858&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;Signal Dispatcher&quot; daemon prio=10 tid=0x0808b000 nid=0x2008 runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb5aace20&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;Finalizer&quot; daemon prio=10 tid=0x08082800 nid=0x2007 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5b3c000..0xb5b3d0c0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c551968&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c551968&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)&lt;br/&gt;
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Reference Handler&quot; daemon prio=10 tid=0x08081800 nid=0x2006 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5b8d000..0xb5b8e040&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c5519f8&amp;gt; (a java.lang.ref.Reference$Lock)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c5519f8&amp;gt; (a java.lang.ref.Reference$Lock)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;VM Thread&quot; prio=10 tid=0x08080000 nid=0x2005 runnable &lt;/p&gt;

&lt;p&gt;&quot;VM Periodic Task Thread&quot; prio=10 tid=0x0808f800 nid=0x200b waiting on condition &lt;/p&gt;

&lt;p&gt;JNI global references: 690&lt;/p&gt;

&lt;p&gt;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Slave&lt;/p&gt;

&lt;p&gt;&quot;Attach Listener&quot; daemon prio=10 tid=0x0820ac00 nid=0x2092 runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0x00000000&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;DestroyJavaVM&quot; prio=10 tid=0x08059800 nid=0x2029 waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb7d66090&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;derby.slave.logger-mydb&quot; prio=10 tid=0x0820f000 nid=0x203a runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb54ac000..0xb54acf40&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:129)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:182)&lt;br/&gt;
        at java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2247)&lt;br/&gt;
        at java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:2540)&lt;br/&gt;
        at java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:2550)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1297)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.net.SocketConnection.readMessage(SocketConnection.java:84)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.readMessage(ReplicationMessageReceive.java:387)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread.run(SlaveController.java:476)&lt;/p&gt;

&lt;p&gt;&quot;derby.rawStoreDaemon&quot; daemon prio=10 tid=0x083bc800 nid=0x2039 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5503000..0xb5503fc0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: TIMED_WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c1201b8&amp;gt; (a org.apache.derby.impl.services.daemon.BasicDaemon)&lt;br/&gt;
        at org.apache.derby.impl.services.daemon.BasicDaemon.rest(BasicDaemon.java:571)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c1201b8&amp;gt; (a org.apache.derby.impl.services.daemon.BasicDaemon)&lt;br/&gt;
        at org.apache.derby.impl.services.daemon.BasicDaemon.run(BasicDaemon.java:388)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;derby.slave.boot-mydb&quot; prio=10 tid=0x083bc400 nid=0x2038 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5570000..0xb5571040&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c120268&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:712)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c120268&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:334)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:553)&lt;br/&gt;
        at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1019)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1999)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:553)&lt;br/&gt;
        at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:427)&lt;br/&gt;
        at org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:789)&lt;br/&gt;
        at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:205)&lt;br/&gt;
        at org.apache.derby.impl.db.SlaveDatabase.bootBasicDatabase(SlaveDatabase.java:421)&lt;br/&gt;
        at org.apache.derby.impl.db.SlaveDatabase.access$000(SlaveDatabase.java:70)&lt;br/&gt;
        at org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread.run(SlaveDatabase.java:308)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Timer-0&quot; daemon prio=10 tid=0x0816d800 nid=0x2036 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb55cf000..0xb55d0140&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c5d4980&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at java.util.TimerThread.mainLoop(Timer.java:483)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c5d4980&amp;gt; (a java.util.TaskQueue)&lt;br/&gt;
        at java.util.TimerThread.run(Timer.java:462)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;derby.antiGC&quot; daemon prio=10 tid=0x08062400 nid=0x2035 in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5623000..0xb5623dc0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c587550&amp;gt; (a org.apache.derby.impl.services.monitor.AntiGC)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.AntiGC.run(BaseMonitor.java:2196)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c587550&amp;gt; (a org.apache.derby.impl.services.monitor.AntiGC)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Low Memory Detector&quot; daemon prio=10 tid=0x0808e000 nid=0x202f runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0x00000000&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;CompilerThread0&quot; daemon prio=10 tid=0x0808c400 nid=0x202e waiting on condition &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb59c59d8&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;Signal Dispatcher&quot; daemon prio=10 tid=0x0808b000 nid=0x202d runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x00000000..0xb5a16ca0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;/p&gt;

&lt;p&gt;&quot;Finalizer&quot; daemon prio=10 tid=0x08082800 nid=0x202c in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5aa6000..0xb5aa7040&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c551960&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c551960&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)&lt;br/&gt;
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;Reference Handler&quot; daemon prio=10 tid=0x08081800 nid=0x202b in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5af7000..0xb5af80c0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c5519f0&amp;gt; (a java.lang.ref.Reference$Lock)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c5519f0&amp;gt; (a java.lang.ref.Reference$Lock)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;VM Thread&quot; prio=10 tid=0x08080000 nid=0x202a runnable &lt;/p&gt;

&lt;p&gt;&quot;VM Periodic Task Thread&quot; prio=10 tid=0x0808f800 nid=0x2030 waiting on condition &lt;/p&gt;

&lt;p&gt;JNI global references: 732&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12577788" author="narayanan" created="Wed, 12 Mar 2008 10:19:55 +0000"  >&lt;p&gt;This shows that&lt;/p&gt;

&lt;p&gt;&quot;derby.master.logger-mydb&quot; prio=10 tid=0x08311800 nid=0x203b in Object.wait() &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb5594000..0xb55950c0&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: TIMED_WAITING (on object monitor)&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting on &amp;lt;0x8c0b6180&amp;gt; (a org.apache.derby.impl.store.replication.master.AsynchronousLogShipper)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.master.AsynchronousLogShipper.run(AsynchronousLogShipper.java:203)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x8c0b6180&amp;gt; (a org.apache.derby.impl.store.replication.master.AsynchronousLogShipper)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the log shipper thread is still running causing the hang in the master&lt;/p&gt;

&lt;p&gt;This shows that&lt;/p&gt;

&lt;p&gt;derby.slave.logger-mydb&quot; prio=10 tid=0x0820f000 nid=0x203a runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0xb54ac000..0xb54acf40&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:129)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:182)&lt;br/&gt;
        at java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2247)&lt;br/&gt;
        at java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:2540)&lt;br/&gt;
        at java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:2550)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1297)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.net.SocketConnection.readMessage(SocketConnection.java:84)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.readMessage(ReplicationMessageReceive.java:387)&lt;br/&gt;
        at org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread.run(SlaveController.java:476) &lt;/p&gt;

&lt;p&gt;The SlaveLogReceiver thread is hanging on the read method of the socket it is listening on causing the hang on the slave.&lt;/p&gt;

&lt;p&gt;The questions I am searching for answers now is&lt;/p&gt;

&lt;p&gt;1) Why is this happening only in the embedded mode?&lt;/p&gt;

&lt;p&gt;2) How does turning authentication on affect this?&lt;/p&gt;</comment>
                            <comment id="12577790" author="narayanan" created="Wed, 12 Mar 2008 10:26:43 +0000"  >&lt;p&gt;Fixed the earlier broken patch for the new trunk&lt;/p&gt;</comment>
                            <comment id="12577863" author="oysteing" created="Wed, 12 Mar 2008 14:45:11 +0000"  >&lt;p&gt;V.Narayanan (JIRA) wrote:&lt;br/&gt;
&amp;gt; I am not able to reproduce this problem on the network client (surprises me, Maybe I did something wrong!!). &lt;/p&gt;

&lt;p&gt;This may be ovious, but to be sure:  Note that when embedded a quit in ij will stop the VM that contains the master.  If client/server, the master is running in a separate VM.  I not quite sure you will necessarily get the same code path by stopping a server.&lt;/p&gt;</comment>
                            <comment id="12577876" author="narayanan" created="Wed, 12 Mar 2008 15:34:47 +0000"  >&lt;p&gt;I understand that the code path will be different in the case of the &lt;br/&gt;
client. But I am confused about its import.&lt;/p&gt;

&lt;p&gt;Are you trying to say that the problem of the log shipper thread &lt;br/&gt;
clean-up not happening might still be there&lt;br/&gt;
in the client but our current way of trying to reproduce the problem is &lt;br/&gt;
not right? (or)&lt;/p&gt;

&lt;p&gt;Are you trying to say that this problem need not be looked from the &lt;br/&gt;
client perspective at all (I think you don&apos;t mean&lt;br/&gt;
this but just to be sure)&lt;/p&gt;

&lt;p&gt;I am trying to work with the embedded reproducible for now.&lt;/p&gt;

&lt;p&gt;But from your comment it looks like finding a solution in the embedded &lt;br/&gt;
case might not necessarily mean that this&lt;br/&gt;
problem has been solved in all cases?&lt;/p&gt;</comment>
                            <comment id="12578200" author="oysteing" created="Thu, 13 Mar 2008 09:41:50 +0000"  >&lt;p&gt;V.Narayanan (JIRA) wrote:&lt;br/&gt;
&amp;gt; Are you trying to say that the problem of the log shipper thread &lt;br/&gt;
&amp;gt; clean-up not happening might still be there&lt;br/&gt;
&amp;gt; in the client but our current way of trying to reproduce the problem is &lt;br/&gt;
&amp;gt; not right? (or)&lt;/p&gt;

&lt;p&gt;No, my point is that there will never be a log shipper problem in the client, because the log shipper is running in the server.&lt;/p&gt;</comment>
                            <comment id="12578293" author="oysteing" created="Thu, 13 Mar 2008 13:51:02 +0000"  >&lt;p&gt;With the Derby3447_v2.diff patch, the replication test suite fails as follows:&lt;/p&gt;

&lt;p&gt;&amp;gt; java junit.textui.TestRunner -noloading org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationSuite ...F...&lt;br/&gt;
Time: 536.931&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testReplication_Local_StateTest_part1_1(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1)junit.framework.AssertionFailedError: jdbc:derby://localhost:4527//export/tmp/oysteing/derby-repl/testing_repl/db_slave/wombat;stopSlave=true failed: -1 XRE11 DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE11, SQLERRMC: stopSlave/export/tmp/oysteing/derby-repl/testing_repl/db_slave/wombatXRE11&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1._testPostStartedMasterAndSlave_StopSlave(ReplicationRun_Local_StateTest_part1_1.java:222)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1.testReplication_Local_StateTest_part1_1(ReplicationRun_Local_StateTest_part1_1.java:130)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:101)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 6,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="12578688" author="narayanan" created="Fri, 14 Mar 2008 11:19:27 +0000"  >&lt;p&gt;Thank you for the inputs Oystein.&lt;/p&gt;

&lt;p&gt;I have been single stepping this issue and will briefly try to describe my progress so far.&lt;/p&gt;

&lt;p&gt;I tried calling the stopMaster() method from RawStore#stop() to check if this will help me&lt;br/&gt;
in determining if this would help result in a proper master shutdown. It did not.&lt;/p&gt;

&lt;p&gt;I resorted to good old single stepping with my buddy Netbeans&lt;/p&gt;

&lt;p&gt;I placed breakpoints in the following places&lt;/p&gt;

&lt;p&gt;1) ij#quit() line no 342&lt;br/&gt;
2) TopService#shutdown() line no 327 (I did this after I did one round of single stepping with 3) below)&lt;br/&gt;
3) MasterController#stopMaster() line no 262&lt;/p&gt;

&lt;p&gt;I basically started ij with the following command&lt;/p&gt;

&lt;p&gt;java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009 org.apache.derby.tools.ij&lt;/p&gt;

&lt;p&gt;and connected to it through netbeans&lt;/p&gt;

&lt;p&gt;I basically observed the following when authentication is enabled&lt;/p&gt;

&lt;p&gt;1) MasterController#stopMaster() is never called (called when authentication is not enabled)&lt;br/&gt;
2) TopService#shutdown() is never called with authentication enabled ( I tried this twice and observed the&lt;br/&gt;
   same this. Shouldn&apos;t the modules that are currently loaded be shutdown when authentication is enabled too?&lt;br/&gt;
   I am not sure how replication code can influence this.)&lt;/p&gt;

&lt;p&gt;I need to basically take it from here. I decided to report because I thought maybe people&lt;br/&gt;
could guide me as to why TopService#shutdown() is not called with authentication enabled and as to whether&lt;br/&gt;
this is something they know of?&lt;/p&gt;

&lt;p&gt;TopService#shutdown() is however called when I do a connect &apos;jdbc:derby:;shutdown=true;user=oystein;password=pass&apos;;&lt;/p&gt;</comment>
                            <comment id="12578739" author="narayanan" created="Fri, 14 Mar 2008 13:55:45 +0000"  >&lt;p&gt;I did a little bit more digging on a more generalized behaviour when authentication&lt;br/&gt;
is enabled in the embedded mode and raised &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3541&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-3541&lt;/a&gt;&lt;br/&gt;
to address this issue.&lt;/p&gt;

&lt;p&gt;This issue depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3451&quot; title=&quot;Remove dependency between StandardException class and org.apache.derby.impl.jdbc classes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3451&quot;&gt;&lt;del&gt;DERBY-3451&lt;/del&gt;&lt;/a&gt; to be resolved.&lt;/p&gt;</comment>
                            <comment id="12579160" author="narayanan" created="Sun, 16 Mar 2008 04:41:25 +0000"  >&lt;p&gt;When I found out about Derby-3451 I was thinking why the quit without&lt;br/&gt;
starting replication does not seem to hang. I found out that it does not&lt;br/&gt;
hang because the other threads used in derby are Daemon threads .&lt;/p&gt;

&lt;p&gt;see BaseMonitor#getDaemonThread (line no 2080)&lt;/p&gt;

&lt;p&gt;relevant lines&lt;/p&gt;

&lt;p&gt;Thread t =  new Thread(daemonGroup, task, &quot;derby.&quot;.concat(name));&lt;br/&gt;
t.setDaemon(true);&lt;/p&gt;

&lt;p&gt;found &quot;The Java Virtual Machine exits when the only threads running are all daemon threads.&quot;&lt;br/&gt;
here &lt;a href=&quot;http://java.sun.com/j2se/1.3/docs/api/java/lang/Thread.html#setDaemon(boolean&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.3/docs/api/java/lang/Thread.html#setDaemon(boolean&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12579175" author="narayanan" created="Sun, 16 Mar 2008 09:22:08 +0000"  >&lt;p&gt;I believe it is not right for the replication threads to prevent the jvm running&lt;br/&gt;
an embedded application (like ij) from shutting down. These threads should also&lt;br/&gt;
be brought down along with the jvm. Hence I believe that the replication&lt;br/&gt;
threads should be daemon threads so that when the vm exits these threads&lt;br/&gt;
are also brought down along with the vm.&lt;/p&gt;

&lt;p&gt;Converting the following replication related threads to&lt;br/&gt;
Daemon threads resolved the problem of these threads blocking&lt;br/&gt;
the ij process from executing a quit; on both the master and&lt;br/&gt;
the slave.&lt;/p&gt;

&lt;p&gt;1)  Slave database boot thread (slave)&lt;br/&gt;
2)  Log receiver thread (slave)&lt;br/&gt;
3)  Log shipper thread (master)&lt;/p&gt;

&lt;p&gt;I will run the replication suite of tests and shall revert back with&lt;br/&gt;
results for this patch.&lt;/p&gt;

&lt;p&gt;I request for this patch to be please considered for reviews/comments.&lt;/p&gt;</comment>
                            <comment id="12579176" author="narayanan" created="Sun, 16 Mar 2008 09:29:58 +0000"  >&lt;p&gt;I was able to quit ij with authentication enabled on both the master&lt;br/&gt;
and slave with patch v3.&lt;/p&gt;

&lt;p&gt;On the Master&lt;br/&gt;
-----------------&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447_1/master$ java org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.5&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby:mydb;create=true;user=oystein;password=pass&apos;;&lt;br/&gt;
ij&amp;gt;  call syscs_util.syscs_freeze_database();&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:mydb;user=oystein;password=pass;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; create table narayanan(i int, name varchar(30));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into narayanan values(2,&apos;n1&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into narayanan values(3, &apos;n2&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447_1/master$&lt;/p&gt;

&lt;p&gt;On the slave&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;ij version 10.5&lt;br/&gt;
ij&amp;gt;  connect &apos;jdbc:derby:mydb;user=oystein;password=pass;startSlave=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ERROR XRE08: Replication slave mode started successfully for database &apos;mydb&apos;. Connection refused because the database is in replication slave mode. &lt;br/&gt;
ij&amp;gt; quit;&lt;br/&gt;
vn@vn-laptop:~/work/workspaces/Derby3447_1/slave$&lt;/p&gt;

&lt;p&gt;I tried it in both orders also (i.e.) first trying a quit on the master and then a quit on the slave&lt;br/&gt;
and vice versa.&lt;/p&gt;

&lt;p&gt;I also tried quit without executing any transactions on the master and in both orders.&lt;/p&gt;

&lt;p&gt;It worked fine for me in all the cases with patch v3.&lt;/p&gt;</comment>
                            <comment id="12579348" author="narayanan" created="Mon, 17 Mar 2008 08:46:35 +0000"  >&lt;p&gt;I ran the replication suite of tests and observed this failure. I am investigating this failure.&lt;/p&gt;

&lt;p&gt; java -Xmx512m -XX:MaxPermSize=128M junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationSuite&lt;br/&gt;
...F...&lt;br/&gt;
Time: 542.146&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testReplication_Local_StateTest_part1_1(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1)junit.framework.AssertionFailedError: jdbc:derby://localhost:4527//home/vn/work/workspaces/Derby3447_1/tests/db_slave/wombat;stopSlave=true failed: -1 XRE11 DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE11, SQLERRMC: stopSlave/home/vn/work/workspaces/Derby3447_1/tests/db_slave/wombatXRE11&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1._testPostStartedMasterAndSlave_StopSlave(ReplicationRun_Local_StateTest_part1_1.java:222)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1_1.testReplication_Local_StateTest_part1_1(ReplicationRun_Local_StateTest_part1_1.java:130)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:101)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 6,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="12579358" author="oysteing" created="Mon, 17 Mar 2008 09:27:47 +0000"  >&lt;p&gt;This error looks like what if run with classes instead of jar files.  Is this the case for you?&lt;/p&gt;</comment>
                            <comment id="12579361" author="narayanan" created="Mon, 17 Mar 2008 09:31:42 +0000"  >&lt;p&gt;I ran my tests with the jars Oystein, I observed this error when run with jars&lt;/p&gt;</comment>
                            <comment id="12579387" author="narayanan" created="Mon, 17 Mar 2008 11:13:03 +0000"  >&lt;p&gt;Sorry the comment I deleted was a click too quick.&lt;/p&gt;

&lt;p&gt;The part of the replication test where the failure occurs tries to test a slave&lt;br/&gt;
shutdown after the master has been taken down.&lt;/p&gt;

&lt;p&gt;I tried doing the above manually and observe the following&lt;/p&gt;

&lt;p&gt;ij&amp;gt;  connect &apos;jdbc:derby://localhost:1528/replicationdb;user=oystein;password=pass;stopSlave=true&apos;;&lt;br/&gt;
ERROR XRE41: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE41, SQLERRMC: XRE41&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1528/replicationdb;user=oystein;password=pass;stopSlave=true&apos;;&lt;br/&gt;
ERROR XRE42: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE42, SQLERRMC: replicationdbXRE42&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;

&lt;p&gt;So before the master is killed the slave take down attempt fails XRE41&lt;/p&gt;

&lt;p&gt;and after the master is killed it succeeds XRE42.&lt;/p&gt;

&lt;p&gt;Seems like the code is behaving as the tests ask it too. I will investigate further into this.&lt;/p&gt;</comment>
                            <comment id="12579442" author="narayanan" created="Mon, 17 Mar 2008 13:58:01 +0000"  >&lt;p&gt;I think I have a strong theory to explain this test failure,&lt;/p&gt;

&lt;p&gt;When the Network Server running the master is shutdown as is being done in the test it result in the stop method&lt;br/&gt;
of the MasterController module being called. This causes the master to send a STOP message&lt;br/&gt;
to the slave. This causes a slave shutdown.&lt;/p&gt;

&lt;p&gt;The cleanup code was added in the MasterController stop method as part of this patch.&lt;/p&gt;

&lt;p&gt;I think this is expected behaviour and XRE11 is the right message in this case. The NetworkServer&lt;br/&gt;
running the master being shutdown results in the Replication master shutting down, this is similar&lt;br/&gt;
to the stopMaster being called.&lt;/p&gt;

&lt;p&gt;I think the tests need to be fixed to accomodate this new and correct behaviour&lt;/p&gt;

&lt;p&gt;I will fix this test and submit the patch again&lt;/p&gt;</comment>
                            <comment id="12579443" author="narayanan" created="Mon, 17 Mar 2008 14:02:57 +0000"  >&lt;p&gt;In my earlier comment I had written that I was getting an XRE42.&lt;br/&gt;
I was getting a XRE42 because I had misunderstood killing the&lt;br/&gt;
slave to mean doing a kill on the network server running the master.&lt;br/&gt;
This does not result in a proper shutdown of the master.  Hence&lt;br/&gt;
resulting in a XRE42 (allowing a proper shutdown of the slave).&lt;/p&gt;</comment>
                            <comment id="12579496" author="narayanan" created="Mon, 17 Mar 2008 16:17:32 +0000"  >&lt;p&gt;Fixed the test that was failing when run with v3, as described in&lt;br/&gt;
the comments above.&lt;/p&gt;

&lt;p&gt;Ran the replication tests and observed no failure&lt;/p&gt;

&lt;p&gt;vn@vn-laptop:~/work/workspaces/Derby3447_1/tests$ java -Xmx512m -XX:MaxPermSize=128M junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationSuite&lt;br/&gt;
......&lt;br/&gt;
Time: 545.178&lt;/p&gt;

&lt;p&gt;OK (6 tests)&lt;/p&gt;
</comment>
                            <comment id="12582118" author="narayanan" created="Wed, 26 Mar 2008 04:03:50 +0000"  >&lt;p&gt;v4 applies cleanly to a freshworkspace. I had also run tests earlier before I submitted v4.&lt;br/&gt;
I please request v4 to be considered for a commit if everything is OK.&lt;/p&gt;</comment>
                            <comment id="12582268" author="oysteing" created="Wed, 26 Mar 2008 12:39:13 +0000"  >&lt;p&gt;Thanks for the patch, Narayanan.  Changes look good, and my brief&lt;br/&gt;
testing shows that I am now able to quit ij when replication is&lt;br/&gt;
running.  However, it would be good if you could add some regression&lt;br/&gt;
tests for this issue to the replication test suite.&lt;/p&gt;

&lt;p&gt;Before committing this patch, I want to get one question clarified:&lt;br/&gt;
In MasterController#stop, if stopMaster fails, you will still write&lt;br/&gt;
&apos;Replication master role stopped for database&apos; to derby.log.  Can you&lt;br/&gt;
be certain that this is the case regardless of what the error is?&lt;/p&gt;

&lt;p&gt;Some nitpicks you may fix if you have to go another round with this&lt;br/&gt;
patch: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;SlaveDatabase: I think sdbThread instead of sdb_Thread is more in&lt;br/&gt;
   line with the naming style used in the derby code.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MasterController: The casting to Thread does not seem to be&lt;br/&gt;
   necessary.&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12582549" author="narayanan" created="Thu, 27 Mar 2008 08:51:32 +0000"  >&lt;p&gt;Thank you for taking a look at the patch Oystein&lt;/p&gt;

&lt;p&gt;I intended the message to be printed that way (similar to the printStackTrace and stop method)&lt;/p&gt;

&lt;p&gt;I have two justifications for this&lt;/p&gt;

&lt;p&gt;1) The only time the message is thrown is when the master has already stopped&lt;br/&gt;
2) It is like saying the master has stopped but the following exception  &lt;br/&gt;
   occurred (which is this case is only when the master is stopped)&lt;/p&gt;

&lt;p&gt;I have fixed the nits pointed out.&lt;/p&gt;

&lt;p&gt;I was hoping to submit regression tests in a follow up.&lt;/p&gt;</comment>
                            <comment id="12582978" author="oysteing" created="Fri, 28 Mar 2008 10:44:34 +0000"  >&lt;p&gt;Thanks, for the latest updates, Narayanan.&lt;br/&gt;
I have tested the patch, and my problem is solved.&lt;br/&gt;
v5 patch committed at revision 642191.&lt;/p&gt;</comment>
                            <comment id="12584140" author="oysteing" created="Tue, 1 Apr 2008 14:48:40 +0100"  >&lt;p&gt;Fix ported to 10.4 branch at revision 643399.&lt;br/&gt;
SVN command used:&lt;br/&gt;
svn merge -r642190:642191 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12391444">DERBY-3541</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12377317" name="Derby3447_v1.diff" size="1565" author="narayanan" created="Fri, 7 Mar 2008 06:40:19 +0000"/>
                            <attachment id="12377318" name="Derby3447_v1.stat" size="161" author="narayanan" created="Fri, 7 Mar 2008 06:40:19 +0000"/>
                            <attachment id="12377684" name="Derby3447_v2.diff" size="1540" author="narayanan" created="Wed, 12 Mar 2008 10:26:43 +0000"/>
                            <attachment id="12377685" name="Derby3447_v2.stat" size="158" author="narayanan" created="Wed, 12 Mar 2008 10:26:43 +0000"/>
                            <attachment id="12377990" name="Derby3447_v3.diff" size="3339" author="narayanan" created="Sun, 16 Mar 2008 09:22:08 +0000"/>
                            <attachment id="12377991" name="Derby3447_v3.stat" size="307" author="narayanan" created="Sun, 16 Mar 2008 09:22:08 +0000"/>
                            <attachment id="12378041" name="Derby3447_v4.diff" size="5267" author="narayanan" created="Mon, 17 Mar 2008 16:17:32 +0000"/>
                            <attachment id="12378042" name="Derby3447_v4.stat" size="432" author="narayanan" created="Mon, 17 Mar 2008 16:17:32 +0000"/>
                            <attachment id="12378689" name="Derby3447_v5.diff" size="5254" author="narayanan" created="Thu, 27 Mar 2008 08:51:32 +0000"/>
                            <attachment id="12378690" name="Derby3447_v5.stat" size="432" author="narayanan" created="Thu, 27 Mar 2008 08:51:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Feb 2008 07:56:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23646</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37330</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>