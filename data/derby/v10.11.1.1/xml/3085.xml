<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:47:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3085/DERBY-3085.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3085] Fails to handle BLOB fields with a PreparedStatement with size &gt;32750 bytes</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3085</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Java Version:    1.6.0_02&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\Program Files\Java\jre1.6.0_02&lt;br/&gt;
Java classpath:  derbytools.jar&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1&lt;br/&gt;
Java user name:  Ma&lt;br/&gt;
Java user home:  C:\Documents and Settings\ma&lt;br/&gt;
Java user dir:   c:\tools\derby\lib&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.6&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: Java SE 6 - JDBC 4.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\tools\derby\lib\derbytools.jar&amp;#93;&lt;/span&gt; 10.3.1.4 - (561794)&lt;/p&gt;

&lt;p&gt;The following code fails:&lt;br/&gt;
    // Data is a byte[] vector&lt;br/&gt;
    ByteArrayInputStream is = new ByteArrayInputStream( data);    &lt;br/&gt;
    String sql = &quot;UPDATE MyTable SET FContents=? WHERE FName=&apos;&quot; + name + &quot;&apos;&quot;;&lt;br/&gt;
    PreparedStatement ps = conn.prepareStatement( sql);&lt;br/&gt;
    ps.setBinaryStream( 1, is, data.length);&lt;/p&gt;

&lt;p&gt;    if( ps.executeUpdate() == 0)&lt;/p&gt;
    {
        // it throws an exception here if the data array us larger then around 32750 bytes!!!
    }

&lt;p&gt;It look&apos;s like when the size of the data[] vector is &amp;gt; 32750 bytes or so it throws an exception like this:&lt;br/&gt;
java.sql.SQLException: A network protocol error was encountered and the connection has been terminated: A PROTOCOL Data Stream Syntax Error was detected.  Reason: 0x0. Plaintext connection attempt to an SSL enabled server?&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeUpdate(Unknown Source)&lt;/p&gt;

&lt;p&gt;The table is defined as:&lt;br/&gt;
    CREATE TABLE MyTable (FName varchar(300) NOT NULL,FContents BLOB(16M) NOT NULL)&lt;/p&gt;

&lt;p&gt;It does loook like this only happens with the NetWork client driver, the embedded driver works fine.&lt;/p&gt;</description>
                <environment>Windows XP SP2</environment>
        <key id="12378932">DERBY-3085</key>
            <summary>Fails to handle BLOB fields with a PreparedStatement with size &gt;32750 bytes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="mikael_aronsson">Mikael Aronsson</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 Sep 2007 20:46:46 +0100</created>
                <updated>Tue, 30 Jun 2009 16:55:46 +0100</updated>
                            <resolved>Tue, 2 Oct 2007 00:31:55 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12529904" author="kmarsden" created="Mon, 24 Sep 2007 17:07:06 +0100"  >&lt;p&gt;Looks like this regressed with revision 438478 of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1559&quot; title=&quot;when receiving a single EXTDTA object representing a BLOB, the server do not need to read it into memory before inserting it into the DB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1559&quot;&gt;&lt;del&gt;DERBY-1559&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=438478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=438478&lt;/a&gt;&lt;/p&gt;

</comment>
                            <comment id="12529913" author="kmarsden" created="Mon, 24 Sep 2007 17:52:15 +0100"  >&lt;p&gt;If there is a row that needs to be updated the update will succeed.  The issue seems to be in the handling of the warning: &quot;No row was found for FETCH, UPDATE or DELETE; or the result of a query is an empty table&quot;&lt;/p&gt;


&lt;p&gt;Attached are &lt;br/&gt;
TestBlob.java  (small java repro)&lt;br/&gt;
trace.out.norows (client side trace when there are no rows in the table)&lt;br/&gt;
trace.out.withrow(client side trace when there is a row in the table and the program succeeds.)&lt;/p&gt;</comment>
                            <comment id="12530492" author="kmarsden" created="Wed, 26 Sep 2007 18:19:08 +0100"  >&lt;p&gt;I think the problem is not the warning itself.  I changed the embedded code to not add the warning and saw the same protocol error even though the warning was not sent. I tend to think the trouble is that in the even there are no matching rows, The entire stream is not consumed, since it is not needed to update the row. This leaves the DDMReader pointing to the middle of the parameter data when it is ready to read the next DSS.&lt;/p&gt;</comment>
                            <comment id="12530547" author="kmarsden" created="Wed, 26 Sep 2007 21:27:49 +0100"  >&lt;p&gt;Well, I guess the question now is whether the remaining data in the input stream should be read by embedded or by Network Server.  The javadoc for setBinaryStream says:&lt;/p&gt;

&lt;p&gt;Sets the designated parameter to the given input stream, which will have the specified number of bytes. When a very large binary value is input to a LONGVARBINARY  parameter, it may be more practical to send it via a java.io.InputStream object. The data will be read from the stream as needed until end-of-file is reached.&lt;/p&gt;


&lt;p&gt;So I think that it makes it clear that embedded is only obligated to read the stream &quot;as needed&quot;, so I think I will pursue a solution where the Network Server tracks the parameter input streams and drains them after execution if they have not been drained by the execution of the statement.  Does that sound like the right approach?&lt;/p&gt;
</comment>
                            <comment id="12530851" author="kmarsden" created="Thu, 27 Sep 2007 22:34:47 +0100"  >&lt;p&gt;Attached is a patch to resolve this issue.  My solution was to store a reference to the stream for the streamed parameter in the DRDAStatement.paramState and then drain the stream after statement execution if needed.  There is only one parameter ever streamed, so only one field needed to be added.  I added a test for both BLOB&apos;s and CLOB&apos;s to Blob4ClobTest.java.  Tests are running now.&lt;/p&gt;</comment>
                            <comment id="12530910" author="kmarsden" created="Fri, 28 Sep 2007 05:33:52 +0100"  >&lt;p&gt;Tests passed except for demo/checkToursDB which I don&apos;t think could be related as it is not network server related.&lt;/p&gt;

&lt;p&gt;Please review patch derby-3085_diff.txt&lt;/p&gt;</comment>
                            <comment id="12531116" author="army" created="Fri, 28 Sep 2007 19:47:03 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I don&apos;t have much experience in this area of code, but from what I could tell the patch looks good.  The changes are nicely contained and easy to understand, and I verified that the new regression test case fails without the patch and passes with it.&lt;/p&gt;

&lt;p&gt;So +1 from me, inexperienced with LOBs though I am...&lt;/p&gt;

&lt;p&gt;I did have the following minor comments/suggestions, but none of these is worth blocking the commit of your changes:&lt;/p&gt;

&lt;p&gt;1 - Your comment above says &quot;There is only one parameter ever streamed&quot;, and a similar comment in the patch says &quot;Only the last parameter with an EXTDTA will be streamed.&quot;  It might be nice to have more of a &quot;why&quot; in the code comment, or else a reference to another place that explains this more. As a reader of the patch, that was the first thing I found myself wondering, and I was not able to find an explanation in the (very) brief scanning that I did.&lt;/p&gt;

&lt;p&gt;2 - It looks like we drain the buffer 1000 bytes at a time; is that just a randomly chosen number? I&apos;m guessing it is but just thought I&apos;d ask.  If the number itself is not significant, a quick comment saying as much might make it easier for people to change it in the future if needed (for whatever reason).&lt;/p&gt;

&lt;p&gt;3 - Is it possible to add a test case where we have multiple stream parameters, just to make sure that things still work in that case, too? Ex. add a second lob column to &quot;testing&quot; table and then a second parameter to the UPDATE statement?&lt;/p&gt;

&lt;p&gt;3 - It looks like the regression test added for this issue only tests the case of a &quot;testing&quot; table with no rows.  Would it be worth it (as a sanity check) to also test the situation where there are rows in the table but the UPDATE predicate does not match any of the rows?  I assume that such an UPDATE will behave the same as when there are no rows, but it may be useful to verify.&lt;/p&gt;

&lt;p&gt;4 - Looks like there may be some slight spacing inconsistencies within the changed code for DRDAStatement.java.&lt;/p&gt;

&lt;p&gt;As I said, all of these comments are minor.  The patch looks good overall.  Thank you for picking this issue up and for resolving it so quickly!&lt;/p&gt;</comment>
                            <comment id="12531142" author="bryanpendleton" created="Fri, 28 Sep 2007 21:09:44 +0100"  >&lt;p&gt;I, too, don&apos;t immediately see why this situation only arises with at most a single parameter, so if it&apos;s easy to explain, that would help educate me. Thanks!&lt;/p&gt;</comment>
                            <comment id="12531147" author="kmarsden" created="Fri, 28 Sep 2007 21:26:39 +0100"  >&lt;p&gt;Attached is a revised patch with the changes suggested by Army.  &lt;br/&gt;
1) Added commment to preexisting code which only streams last EXTDTA. I hope my understanding of this is correct. In readAndSetAllExtParams we now have.&lt;br/&gt;
 // Only the last EXTDTA is streamed.  This is because all of &lt;br/&gt;
 // the parameters have to be set before execution and are &lt;br/&gt;
 // consecutive in the network server stream, so only the last&lt;br/&gt;
// one can be streamed.&lt;br/&gt;
final boolean doStreamLOB = (streamLOB &amp;amp;&amp;amp; i == numExt -1);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added tests for multiple parameters, matched updates where the stream is consumed and situation where there is a row inserted but no match&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed tab/space differences (I think).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added comments that 1000 byte buffer for draining the stream is just a random selection that doesn&apos;t take up too much memory.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I only ran BlobClob4BlobTest as all other changes were cosmetic.&lt;/p&gt;

&lt;p&gt;Thanks Army and Bryan for looking at the patch.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;

</comment>
                            <comment id="12531177" author="army" created="Fri, 28 Sep 2007 23:04:00 +0100"  >&lt;p&gt;Thank you for the second patch, Kathey.  The whitespace issues in DRDAStatement are still hanging around near the &quot;do-while&quot; loop, but that&apos;s really not a big deal.  (For what it&apos;s worth, I usually run the &quot;cat&quot; command on a patch as that seems to show spacing issues pretty clearly: &quot;cat derby-3085_diff2.txt | more&quot;).&lt;/p&gt;

&lt;p&gt;I have no further review comments to suggest. +1 to commit.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12366473" name="TestBlob.java" size="1126" author="kmarsden" created="Mon, 24 Sep 2007 17:52:15 +0100"/>
                            <attachment id="12366699" name="derby-3085_diff.txt" size="8994" author="kmarsden" created="Thu, 27 Sep 2007 22:34:47 +0100"/>
                            <attachment id="12366774" name="derby-3085_diff2.txt" size="12577" author="kmarsden" created="Fri, 28 Sep 2007 21:26:39 +0100"/>
                            <attachment id="12366700" name="derby-3085_stat.txt" size="225" author="kmarsden" created="Thu, 27 Sep 2007 22:34:47 +0100"/>
                            <attachment id="12366775" name="derby-3085_stat2.txt" size="225" author="kmarsden" created="Fri, 28 Sep 2007 21:26:39 +0100"/>
                            <attachment id="12366474" name="trace.out.norows" size="255615" author="kmarsden" created="Mon, 24 Sep 2007 17:52:15 +0100"/>
                            <attachment id="12366475" name="trace.out.withrow" size="256674" author="kmarsden" created="Mon, 24 Sep 2007 17:52:15 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Sep 2007 16:07:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23421</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0uvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>