<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2496/DERBY-2496.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2496] Implement Blob support for Locators</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2496</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2347&quot; title=&quot;Add code to support request and return of locators over DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2347&quot;&gt;&lt;del&gt;DERBY-2347&lt;/del&gt;&lt;/a&gt; adds the possibility to send locators between client and server instead of LOB values.  This has not been activated yet, since the client implementation does not currently support locators.  This report is for supporting the locators for Blob objects.  Another JIRA issue will be made for Clob.&lt;/p&gt;

&lt;p&gt;This work will be made in several steps:&lt;br/&gt;
   1. Blob methods and ResultSet.getXXX methods&lt;br/&gt;
   2. PreparedStatement and CallableStatement methods&lt;br/&gt;
   3. ResultSet.updateXXX methods&lt;br/&gt;
   4. Connection.createBlob()&lt;/p&gt;

&lt;p&gt;There is dependencies between these steps and it might be that the Locator implementation cannot be exposed until everything has been done.  At least, doing just step 1, gives testing errors because tests use Blobs fetched from DB as parameters to prepared statements.   I would guess tests for updatable result sets, needs the combination of 1. and 3.&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12366010">DERBY-2496</key>
            <summary>Implement Blob support for Locators</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="31583">DERBY-208</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oysteing">&#216;ystein Gr&#248;vlen</assignee>
                                    <reporter username="oysteing">&#216;ystein Gr&#248;vlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Mar 2007 12:54:52 +0100</created>
                <updated>Sun, 17 Jun 2007 03:14:15 +0100</updated>
                            <resolved>Sun, 17 Jun 2007 03:14:15 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12491000" author="oysteing" created="Mon, 23 Apr 2007 18:23:20 +0100"  >&lt;p&gt;The attached patch, blob.diff, adds support for locators for Blob methods and ResultSet.getXXX methods.  Note that the use of locators for Blob is still not enabled.  The other steps mentioned in this Jira is also needed before locators can be used.&lt;/p&gt;

&lt;p&gt;Another thing to note about this patch is that the implementation of locator based streams are pretty basic.  No bufferering is done.  Hence, the byte[] versions of read/write should be used if performance is a concern.  (The parameterless versions of read/write will only send one byte per client/server round-trip.)&lt;/p&gt;

&lt;p&gt;More detailed description of changes:&lt;/p&gt;

&lt;p&gt;M java/client/org/apache/derby/client/net/NetStatementRequest.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Do not request locators for Clob, only Blob.  Necessary to be able to add locators for Blob independently of Clob.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M java/client/org/apache/derby/client/net/NetCursor.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If locator is sent, do not assume any external data.  (If external data highest bit of  in-place column value will be set.)&lt;/li&gt;
	&lt;li&gt;Create locator based Blob object if locator is sent.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M java/client/org/apache/derby/client/am/Cursor.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Made get_INTEGER protected so sub-classes (Netcursor) can use it to read locator value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M java/client/org/apache/derby/client/am/Blob.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add constructor for locator based Blob object.&lt;/li&gt;
	&lt;li&gt;Make all Blob operations support locators.  Operations are performed by calling stored procedures through the framework implemented by CallableLocatorProcedures class.&lt;/li&gt;
	&lt;li&gt;Create locator based versions of streams for locator based Blob objects&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M java/client/org/apache/derby/client/am/Lob.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Added locator field to record locator of locator based Lobs and a new constant to be used to record the data type to be Locator based.&lt;/li&gt;
	&lt;li&gt;If locator based and length not yet obtained, sqlLength() will call getLocatorLength() to get the length.&lt;/li&gt;
	&lt;li&gt;A dummy implementation of getLocatorLength() is added, subclasses should override.&lt;/li&gt;
	&lt;li&gt;Add methods for checking if Lob is locator based, and for returning the locator value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A java/client/org/apache/derby/client/am/BlobLocatorOutputStream.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;OutputStream for locator based Blob.&lt;/li&gt;
	&lt;li&gt;No buffering is done. Hence, for efficiency, byte[] version of write should be used.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A java/client/org/apache/derby/client/am/BlobLocatorInputStream.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;InputStream for locator based Blob.&lt;/li&gt;
	&lt;li&gt;No buffering is done. Hence, for efficiency, byte[] version of read should be used.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12491245" author="oysteing" created="Tue, 24 Apr 2007 12:52:24 +0100"  >&lt;p&gt;I have derbyall and the Junit all suite.  Got one failure in AuthenticationTest.testGreekCharacters() that does not seem related to my patches.  I have also rerun the test 6 times without getting the error. &lt;/p&gt;</comment>
                            <comment id="12491952" author="oysteing" created="Thu, 26 Apr 2007 11:25:56 +0100"  >&lt;p&gt;Uploaded a new version of this patch, blob_v2.diff.  The only change is that I have made Lob.getLocator public (instead of protected).   This is needed by some of the other JIRAs that is depending on this patch.  &lt;/p&gt;</comment>
                            <comment id="12492390" author="rhillegas" created="Fri, 27 Apr 2007 21:52:25 +0100"  >&lt;p&gt;Am running regression tests against blog_v2.diff now.&lt;/p&gt;

&lt;p&gt;The patch looks good to me. I have a couple small nits, none of which would block me from committing this work:&lt;/p&gt;

&lt;p&gt;1) In the header comment for BlobLocatorOutputStream, I don&apos;t understand the reference to ByteArrayInputStream&lt;/p&gt;

&lt;p&gt;2) There are several places in the code where the magic number -1 is used. For instance, the initialization of Lob.locator_. I think it would be more readable and less brittle if this magic number had a friendly name.&lt;/p&gt;

&lt;p&gt;3) I wonder if Lob.getLocatorLength() should be abstract and the appropriate subclass could just throw an unimplementedFeature exception right now. It looks to me as though it would be a coding error if, in the released product, a -1 leaked out of this method.&lt;/p&gt;</comment>
                            <comment id="12492423" author="rhillegas" created="Sat, 28 Apr 2007 01:09:28 +0100"  >&lt;p&gt;Committed blob_v2.diff at subversion revision 533268. The regression tests ran cleanly for me too.&lt;/p&gt;</comment>
                            <comment id="12493085" author="oysteing" created="Wed, 2 May 2007 13:29:41 +0100"  >&lt;p&gt;Thanks for committing this Rick.  I have responded to your comments&lt;br/&gt;
below and the attached patch blob-followup.diff adresses those&lt;br/&gt;
comments.  In addition, this patch contains the following changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;My last-minute changes to Lob.sqlLength() introduced a major bug&lt;br/&gt;
   that try to materialize the Lob also when locators are used.  (Would&lt;br/&gt;
   cause NPE when locators were enabled.)  This has been fixed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Blob.getBinaryStream(long, long) has been implemented.  I had&lt;br/&gt;
   missed this since it was added after I started this work.  This&lt;br/&gt;
   required changes to BlobLocatorInputStream to handle non-default&lt;br/&gt;
   start position and length.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The indentation of the new files,&lt;br/&gt;
   BlobLocatorInputStream.java/BlobLocatorOutputStream.java was&lt;br/&gt;
   irregular in the version that was checked in.  (I do not think it&lt;br/&gt;
   was this way in my patch.) I have reindented these files.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt; Rick Hillegas commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2496&quot; title=&quot;Implement Blob support for Locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2496&quot;&gt;&lt;del&gt;DERBY-2496&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt; --------------------------------------&lt;/p&gt;

&lt;p&gt;&amp;gt; The patch looks good to me. I have a couple small nits, none of&lt;br/&gt;
&amp;gt; which would block me from committing this work:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; 1) In the header comment for BlobLocatorOutputStream, I don&apos;t&lt;br/&gt;
&amp;gt;    understand the reference to ByteArrayInputStream&lt;/p&gt;

&lt;p&gt;Sorry, cut&amp;amp;paste error. Have been fixed.&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; 2) There are several places in the code where the magic number -1 is&lt;br/&gt;
&amp;gt;    used. For instance, the initialization of Lob.locator_. I think&lt;br/&gt;
&amp;gt;    it would be more readable and less brittle if this magic number&lt;br/&gt;
&amp;gt;    had a friendly name.&lt;/p&gt;

&lt;p&gt;I have added a constant, Lob.INVALID_LOCATOR, that is used instead of&lt;br/&gt;
the magic number where appropriate.  I have not changed the use of -1&lt;br/&gt;
to signal that there is no more data on a stream since the&lt;br/&gt;
specification says -1 should be returned, and using a named constant&lt;br/&gt;
would just create confusion.&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; 3) I wonder if Lob.getLocatorLength() should be abstract and the&lt;br/&gt;
&amp;gt;    appropriate subclass could just throw an unimplementedFeature&lt;br/&gt;
&amp;gt;    exception right now. It looks to me as though it would be a&lt;br/&gt;
&amp;gt;    coding error if, in the released product, a -1 leaked out of this&lt;br/&gt;
&amp;gt;    method.&lt;/p&gt;

&lt;p&gt;I agree that this should be done, but I would like to wait with this&lt;br/&gt;
change since it will probably cause coflicts with Narayanan&apos;s work on&lt;br/&gt;
Clob. Once, Narayanan has added Clob.getLocatorLength(), I will make&lt;br/&gt;
Lob.getLocatorLength abstract.&lt;/p&gt;</comment>
                            <comment id="12493087" author="oysteing" created="Wed, 2 May 2007 13:38:38 +0100"  >&lt;p&gt;Forgot to state that blob-followup.diff, changes the following files:&lt;br/&gt;
M      java/client/org/apache/derby/client/net/NetCursor.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/BlobLocatorOutputStream.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/Blob.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/BlobLocatorInputStream.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/Lob.java&lt;/p&gt;

&lt;p&gt;and that I am currently running the test suites and will report back when they are finished.&lt;/p&gt;</comment>
                            <comment id="12493230" author="rhillegas" created="Wed, 2 May 2007 23:23:07 +0100"  >&lt;p&gt;Thanks for the changes, &#216;ystein. I am afraid I&apos;m having some trouble applying blob-followup.diff. My patch tool could not apply the changes in BlobLocatorInputStream. So I tried applying them by hand. I ended up with compile errors in Blob.java because:&lt;/p&gt;

&lt;p&gt;1) Blob.getBinaryStream() throws SQLException, not SqlException&lt;/p&gt;

&lt;p&gt;2) But that method creates a BlobLocatorInputStream. The constructors for BlobLocatorInputStream throw SqlException, not SQLException.&lt;/p&gt;

&lt;p&gt;Can you regenerate the patch and let me know what your exception signatures are for Blob.getBinaryStream() and for the constructors of BlobLocatorInputStream?&lt;/p&gt;</comment>
                            <comment id="12493353" author="oysteing" created="Thu, 3 May 2007 13:28:56 +0100"  >&lt;p&gt;&amp;gt; Rick Hillegas commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2496&quot; title=&quot;Implement Blob support for Locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2496&quot;&gt;&lt;del&gt;DERBY-2496&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt; --------------------------------------&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Thanks for the changes, &#216;ystein. I am afraid I&apos;m having some&lt;br/&gt;
&amp;gt; trouble applying blob-followup.diff. My patch tool could not apply&lt;br/&gt;
&amp;gt; the changes in BlobLocatorInputStream. So I tried applying them by&lt;br/&gt;
&amp;gt; hand. I ended up with compile errors in Blob.java because:&lt;/p&gt;

&lt;p&gt;Sorry about that.  I do not understand how I got that to compile.  I&lt;br/&gt;
have attached a new version of the patch, blob-followup_v2.diff where&lt;br/&gt;
I make sure to catch the SqlException.  I also updated my sandbox, so&lt;br/&gt;
hopefully you will be able to apply this version.&lt;/p&gt;</comment>
                            <comment id="12493354" author="oysteing" created="Thu, 3 May 2007 13:31:05 +0100"  >&lt;p&gt;Reattaching the patch since I forgot to grant license.&lt;/p&gt;</comment>
                            <comment id="12493554" author="rhillegas" created="Fri, 4 May 2007 00:19:10 +0100"  >&lt;p&gt;Thanks for the new patch, &#216;ystein. Looks good to me and the tests run cleanly. Committed at subversion revision 535027.&lt;/p&gt;</comment>
                            <comment id="12494362" author="myrna" created="Tue, 8 May 2007 19:23:54 +0100"  >&lt;p&gt;there&apos;s a javadoc warning and SANITY build message resulting from the patch: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Failure&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt;&lt;br/&gt;
trunk\java\client\org\apache\derby\client\am\BlobLocatorInputStream.java:87:&lt;br/&gt;
warning - @param argument &quot;offset&quot; is not a parameter name.&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; 1 warning&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Failure\buildZip.txt&lt;br/&gt;
        &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; SANITY &amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;
/org/apache/derby/client/am/BlobLocatorInputStream.class&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Re the second, a SanityManager.ASSERT(..) statement needs to have an&lt;br/&gt;
if (SanityManager.DEBUG) block, similar to what was put in with revision&lt;br/&gt;
533876, after the previous check in for bug &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2496&quot; title=&quot;Implement Blob support for Locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2496&quot;&gt;&lt;del&gt;DERBY-2496&lt;/del&gt;&lt;/a&gt; with revision&lt;br/&gt;
533268.&lt;/p&gt;</comment>
                            <comment id="12494463" author="narayanan" created="Wed, 9 May 2007 10:47:15 +0100"  >&lt;p&gt;Looks like the BlobLocatorInputStream problem has already been fixed. I &lt;br/&gt;
will fix the javadoc issue. Thank You for pointing this out.&lt;/p&gt;

</comment>
                            <comment id="12495360" author="knutanders" created="Sun, 13 May 2007 13:59:00 +0100"  >&lt;p&gt;Unchecking patch available since it seems there are no patches pending commit.&lt;/p&gt;</comment>
                            <comment id="12497133" author="oysteing" created="Sat, 19 May 2007 09:36:13 +0100"  >&lt;p&gt;The patch, blobtestfix.diff, changes a few Junit tests to not expect Blob objects to valid after transaction has committed.  This is done in two ways:  &lt;br/&gt;
    1) Delay the closing of the result set until the Blob has been accessed.&lt;br/&gt;
    2) Switch off autocommit.&lt;/p&gt;

&lt;p&gt;The first change is used where possible, but where Blob objects obtained from different statements are to be compared, autocommit can not be used.  It is safe to apply these test changes before the use of locators are enabled since it a more restrictive lifespan for Blob objects are assumed.&lt;/p&gt;

&lt;p&gt;The patch also contains two protocol fixes uncovered while running the tests with locators enabled:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The type of locator requested from the server depends on the nullability of the column&lt;/li&gt;
	&lt;li&gt;If the column value of zero is received, this is not a locator, but means that length of LOB column is 0.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also added bufferering to InputStreams in order to significantly reduce the run time of some test cases.&lt;/p&gt;

&lt;p&gt;derbyall has been run without errors.  Junit All suite has been run with the regular procedureInTrigger and encryption test errors.&lt;/p&gt;

&lt;p&gt;File-by-file explanation of changes:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adjusted tests to not expect Blob objects to be valid after&lt;br/&gt;
      transaction commit. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adjusted tests to not expect Blob objects to be valid after&lt;br/&gt;
      transaction commit. &lt;/li&gt;
	&lt;li&gt;Rewrote testSetBlobLengthless to take advantage of the existence of&lt;br/&gt;
      Connection.createBlob &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adjusted tests to not expect Blob objects to be valid after&lt;br/&gt;
      transaction commit. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/net/NetCursor.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If the column value is zero, a locator was not sent.  Instead, this&lt;br/&gt;
      means that the length of the LOB is 0. Changed locator() to return&lt;br/&gt;
      INVALID_LOCATOR when the column value is zero.    &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/net/NetStatementRequest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If column is not nullable, a non-nullable locator must be requested.&lt;br/&gt;
      Otherwise, the server will send an extra byte for nullability which&lt;br/&gt;
      is not expected by the client.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/BlobLocatorOutputStream.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added an assert that checks that the underlying Blob object is&lt;br/&gt;
      locator based.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/Blob.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add buffering for InputStreams by wrapping BlobLocatorInputStream in&lt;br/&gt;
      a BufferedInputStream.  (Doing the same for OutputStreams is not that&lt;br/&gt;
      straight-forward since that requires that the stream is flushed&lt;br/&gt;
      before the statement is executed.)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/BlobLocatorInputStream.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed a TAB.  Client code is supposed to be a TAB-free zone!&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12497172" author="knutanders" created="Sat, 19 May 2007 18:59:51 +0100"  >&lt;p&gt;The patch looks good to me. Committed revision 539784.&lt;/p&gt;</comment>
                            <comment id="12498243" author="oysteing" created="Wed, 23 May 2007 15:04:59 +0100"  >&lt;p&gt;The attached patch, enableblobloc.diff, contains the the necessary&lt;br/&gt;
changes to enable the use of locators for Blob.  The patch addresses&lt;br/&gt;
the following issues:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Enable the use of locators.&lt;/li&gt;
	&lt;li&gt;Modification of tests that experience changed behavior with locators&lt;/li&gt;
	&lt;li&gt;If stored procedures reports that the given locator can not be&lt;br/&gt;
     found, it is assumed that this is because transaction has been&lt;br/&gt;
     terminated and an &quot;Blob accessed after commit&quot; error is&lt;br/&gt;
     reported.  This makes the client driver and the embedded driver&lt;br/&gt;
     report the same error for this case.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am currently running Junit All and derbyall and will report back if&lt;br/&gt;
any problems is seen.  (The tests have been earlier successfully run&lt;br/&gt;
on a slightly different version of the patch)&lt;/p&gt;

&lt;p&gt;A file-by-file description of the changes:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testBlobAfterCommit is changed to test that Blobs on the&lt;br/&gt;
     client is no longer valid after transaction has committed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/_Suite.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed SuicideOfStreamingTest since Layer B Streaming will no&lt;br/&gt;
     longer be used in the scenario tested.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/net/NetResultSetRequest.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If ResultSet contain Blob columns, request locator to be sent&lt;br/&gt;
     instead of Blob value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/Connection.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If a valid locator is obtained from server, create a locator&lt;br/&gt;
     based LOB object.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/Blob.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed an unecessary import added by earlier patch&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/CallableLocatorProcedures.java&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Upon an error, for all procedure calls that specify an locator,&lt;br/&gt;
     check whether the error was caused by an invalid locator.  If&lt;br/&gt;
     yes, report BLOB_ACCESSED_AFTER_COMMIT, instead.  Due to a&lt;br/&gt;
     problem with JDBC 4 drivers, the patch treat all errors during&lt;br/&gt;
     execution of a stored procedure this way.  This is because for&lt;br/&gt;
     JDBC 4, the actual error is not propagated to the server.  I have&lt;br/&gt;
     tried to find a way to fix that, but have decided to wait for the&lt;br/&gt;
     changes that Knut Anders has announced in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2472&quot; title=&quot;Use Throwable.initCause() to improve error reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2472&quot;&gt;&lt;del&gt;DERBY-2472&lt;/del&gt;&lt;/a&gt; to see if&lt;br/&gt;
     that may improve things.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12498245" author="oysteing" created="Wed, 23 May 2007 15:06:31 +0100"  >&lt;p&gt;A release note is needed to describe the changes to the lifespan of Blob objects.&lt;/p&gt;</comment>
                            <comment id="12498377" author="oysteing" created="Wed, 23 May 2007 22:19:13 +0100"  >&lt;p&gt;derbyall ran without failures.  Junit All had two well-known intermittent failures (procedureInTrigger and NistScripts).&lt;/p&gt;</comment>
                            <comment id="12498563" author="knutanders" created="Thu, 24 May 2007 10:54:51 +0100"  >&lt;p&gt;&amp;gt; Due to a problem with JDBC 4 drivers, the patch treat all errors&lt;br/&gt;
&amp;gt; during execution of a stored procedure this way. This is because for&lt;br/&gt;
&amp;gt; JDBC 4, the actual error is not propagated to the server. I have&lt;br/&gt;
&amp;gt; tried to find a way to fix that, but have decided to wait for the&lt;br/&gt;
&amp;gt; changes that Knut Anders has announced in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2472&quot; title=&quot;Use Throwable.initCause() to improve error reporting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2472&quot;&gt;&lt;del&gt;DERBY-2472&lt;/del&gt;&lt;/a&gt; to see if that&lt;br/&gt;
&amp;gt; may improve things.&lt;/p&gt;

&lt;p&gt;I think this is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1440&quot; title=&quot;jdk 1.6 client driver omits SQLStates and chained exceptions in error messages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1440&quot;&gt;&lt;del&gt;DERBY-1440&lt;/del&gt;&lt;/a&gt;, for which I have uploaded a patch you&lt;br/&gt;
could test.&lt;/p&gt;</comment>
                            <comment id="12499422" author="knutanders" created="Sun, 27 May 2007 19:01:14 +0100"  >&lt;p&gt;enableblobloc.diff looks good to me. Committed revision 542011.&lt;/p&gt;

&lt;p&gt;One question: What should happen with SuicideOfStreamingTest? Should it be removed or should it be modified?&lt;/p&gt;</comment>
                            <comment id="12500379" author="knutanders" created="Thu, 31 May 2007 15:31:03 +0100"  >&lt;p&gt;FYI, now that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2692&quot; title=&quot;Client driver doesn&amp;#39;t chain exceptions received from the server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2692&quot;&gt;&lt;del&gt;DERBY-2692&lt;/del&gt;&lt;/a&gt; has been committed, it should be possible to use getNextException() and getSQLState() to check whether the stored procedure failed because the locator was invalid.&lt;/p&gt;</comment>
                            <comment id="12502662" author="myrna" created="Fri, 8 Jun 2007 06:23:26 +0100"  >&lt;p&gt;This issue needs a releasenote.&lt;br/&gt;
Also, a decision/action re SuicideOfStreamingTest is pending.&lt;/p&gt;

&lt;p&gt;Can the check for invalid locator with getNextException() and getSQLState() be implemented before 6/14? Does it need to be?&lt;br/&gt;
If not, please make a separate issue so this can be closed...&lt;/p&gt;</comment>
                            <comment id="12502762" author="oysteing" created="Fri, 8 Jun 2007 12:44:47 +0100"  >&lt;p&gt;Release Note: I think it will be best to make a single release note for all locator work and attach that to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-208&quot; title=&quot;Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-208&quot;&gt;&lt;del&gt;DERBY-208&lt;/del&gt;&lt;/a&gt;.  I will write a release note and attach it to there by early next week.&lt;/p&gt;

&lt;p&gt;suicideOfStreamingTest: The test tested error behavior for Layer B streaming.  The scenario in the test no longer involve Layer B streaming.  Maybe the test should be changed to a scenario that still use Layer B streaming.  I am not an expert here, so I suggest making a new JIRA where this can be discussed.&lt;/p&gt;

&lt;p&gt;getNextException etc.: Handled in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2770&quot; title=&quot;testBlobAfterCommit(....jdbcapi.BlobClob4BlobTest) fails with &amp;#39;Unexpected SQL state. expected:&amp;lt;XJ[073]&amp;gt; but was:&amp;lt;XJ[215]&amp;gt;&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2770&quot;&gt;&lt;del&gt;DERBY-2770&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12502763" author="oysteing" created="Fri, 8 Jun 2007 12:45:46 +0100"  >&lt;p&gt;Will add release note to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-208&quot; title=&quot;Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-208&quot;&gt;&lt;del&gt;DERBY-208&lt;/del&gt;&lt;/a&gt; instead.&lt;/p&gt;</comment>
                            <comment id="12505563" author="myrna" created="Sun, 17 Jun 2007 03:13:35 +0100"  >&lt;p&gt;Taking off existing application impact. It&apos;s set at the top level, which is where the release note lives...&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12366279">DERBY-2506</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12367936">DERBY-2587</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12370325">DERBY-2702</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="31583">DERBY-208</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12356631" name="blob-followup.diff" size="13262" author="oysteing" created="Wed, 2 May 2007 13:29:41 +0100"/>
                            <attachment id="12356707" name="blob-followup_v2.diff" size="14767" author="oysteing" created="Thu, 3 May 2007 13:31:04 +0100"/>
                            <attachment id="12356706" name="blob-followup_v2.diff" size="14767" author="oysteing" created="Thu, 3 May 2007 13:28:56 +0100"/>
                            <attachment id="12356066" name="blob.diff" size="30102" author="oysteing" created="Mon, 23 Apr 2007 18:23:19 +0100"/>
                            <attachment id="12356312" name="blob_v2.diff" size="30099" author="oysteing" created="Thu, 26 Apr 2007 11:25:56 +0100"/>
                            <attachment id="12357676" name="blobtestfix.diff" size="12056" author="oysteing" created="Sat, 19 May 2007 09:36:13 +0100"/>
                            <attachment id="12357998" name="enableblobloc.diff" size="16038" author="oysteing" created="Wed, 23 May 2007 15:04:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 Apr 2007 20:52:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30482</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11qn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39932</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>