<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6650/DERBY-6650.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6650] Lucene tests fail on compact profile 2</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6650</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;&lt;a href=&quot;http://download.java.net/javadesktop/derby/request_5593638/javadb-task-3898689.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/request_5593638/javadb-task-3898689.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.sql.SQLException: The exception &apos;java.lang.NoClassDefFoundError: javax/management/MBeanServerConnection&apos; was thrown while evaluating an expression.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:107)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:133)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:255)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:431)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2396)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1430)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1709)
	at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatement(EmbedCallableStatement.java:134)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeLargeUpdate(EmbedPreparedStatement.java:320)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:309)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertUpdateCount(BaseJDBCTestCase.java:1415)
	at org.apache.derbyTesting.functionTests.tests.lang.LuceneSupportTest.testCreateAndQueryIndex(LuceneSupportTest.java:115)
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:118)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:440)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:457)
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
	at junit.extensions.TestSetup.run(TestSetup.java:25)
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
	at junit.extensions.TestSetup.run(TestSetup.java:25)
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
	at junit.extensions.TestSetup.run(TestSetup.java:25)
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
	at junit.extensions.TestSetup.run(TestSetup.java:25)
Caused by: ERROR 38000: The exception &apos;java.lang.NoClassDefFoundError: javax/management/MBeanServerConnection&apos; was thrown while evaluating an expression.
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:290)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory.java:162)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:74)
Caused by: java.lang.NoClassDefFoundError: javax/management/MBeanServerConnection
	at org.apache.lucene.index.BufferedUpdates.&amp;lt;clinit&amp;gt;(BufferedUpdates.java:53)
	at org.apache.lucene.index.DocumentsWriterDeleteQueue.&amp;lt;init&amp;gt;(DocumentsWriterDeleteQueue.java:86)
	at org.apache.lucene.index.DocumentsWriterDeleteQueue.&amp;lt;init&amp;gt;(DocumentsWriterDeleteQueue.java:82)
	at org.apache.lucene.index.DocumentsWriter.&amp;lt;init&amp;gt;(DocumentsWriter.java:115)
	at org.apache.lucene.index.IndexWriter.&amp;lt;init&amp;gt;(IndexWriter.java:772)
	at org.apache.derby.optional.lucene.LuceneSupport$5.run(LuceneSupport.java:1694)
	at org.apache.derby.optional.lucene.LuceneSupport$5.run(LuceneSupport.java:1689)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.derby.optional.lucene.LuceneSupport.getIndexWriter(LuceneSupport.java:1687)
	at org.apache.derby.optional.lucene.LuceneSupport.createOrRecreateIndex(LuceneSupport.java:514)
	at org.apache.derby.optional.lucene.LuceneSupport.createIndex(LuceneSupport.java:421)
	at org.apache.derby.exe.ac7e434f4ax0147x151ex54d2x0000594f050da.g0(Unknown Source)
	at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)
	at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:470)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:349)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1338)
Caused by: java.lang.ClassNotFoundException: javax.management.MBeanServerConnection
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>java version &amp;quot;1.8.0_05&amp;quot;&lt;br/&gt;
Java(TM) SE Embedded Runtime Environment (build 1.8.0_05-b13, profile compact2, headless)&lt;br/&gt;
Java HotSpot(TM) Embedded Server VM (build 25.5-b02, mixed mode)</environment>
        <key id="12726058">DERBY-6650</key>
            <summary>Lucene tests fail on compact profile 2</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Jul 2014 12:59:17 +0100</created>
                <updated>Mon, 14 Jul 2014 12:55:42 +0100</updated>
                            <resolved>Mon, 14 Jul 2014 12:55:42 +0100</resolved>
                                    <version>10.11.1.1</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14054892" author="knutanders" created="Tue, 8 Jul 2014 13:40:26 +0100"  >&lt;p&gt;The dependency on javax.management.MBeanServerConnection seems to be in the Lucene library, and not in the Derby code or tests.&lt;/p&gt;

&lt;p&gt;With the Lucene 4.7.1 jars on the class path, the following line of Java code will fail with &quot;java.lang.ClassNotFoundException: javax.management.MBeanServerConnection&quot; on Java SE 8 Compact Profile 2:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    Class.forName(&quot;org.apache.lucene.index.BufferedUpdates&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With Lucene 4.8.1 or 4.9.0 the above forName() call does not fail on compact profile 2. However, Derby&apos;s Lucene support is not compatible with Lucene &amp;gt; 4.7, so the tests will still fail after upgrading the jar files (with AbstractMethodErrors instead of NoClassDefFoundErrors).&lt;/p&gt;

&lt;p&gt;I guess that means we&apos;ll have to disable the Lucene tests on platforms that don&apos;t support JMX, until the Lucene plugin is updated to work on 4.8 or higher.&lt;/p&gt;</comment>
                            <comment id="14054934" author="knutanders" created="Tue, 8 Jul 2014 14:35:43 +0100"  >&lt;p&gt;It looks like it&apos;s the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-5086&quot; title=&quot;RamUsageEstimator causes AWT classes to be loaded by calling ManagementFactory#getPlatformMBeanServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-5086&quot;&gt;&lt;del&gt;LUCENE-5086&lt;/del&gt;&lt;/a&gt; that makes it work on 4.8 and higher. That bug is actually fixed on 4.4, but the fixes on 4.4 and trunk were different, and only the trunk fix seems to fix the problem we&apos;re seeing.&lt;/p&gt;

&lt;p&gt;The problem appears to be that there is a call to ManagementFactory.getPlatformMBeanServer() in org.apache.lucene.util.RamUsageEstimator, and that pulls in the MBeanServer class. In Lucene 4.8 and higher, that call has been removed.&lt;/p&gt;</comment>
                            <comment id="14055782" author="rhillegas" created="Wed, 9 Jul 2014 03:24:23 +0100"  >&lt;p&gt;Sounds like we should upgrade the version of Lucene we use and see if something else breaks.&lt;/p&gt;</comment>
                            <comment id="14056011" author="knutanders" created="Wed, 9 Jul 2014 09:55:46 +0100"  >&lt;p&gt;The attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12654769/12654769_lucene48.diff&quot; title=&quot;lucene48.diff attached to DERBY-6650&quot;&gt;lucene48.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; adds the missing getChecksum() method to the DerbyIndexOutput class. With that patch, I am able to run LuceneSuite successfully on compact profile 2 with Lucene 4.8.1 (also have to set the derby.tests.lucene.version system property to LUCENE_48 so that the tests don&apos;t complain that the version is wrong).&lt;/p&gt;

&lt;p&gt;More changes will be needed in order to run on Lucene 4.9. I see AbstractMethodErrors when I run the tests against that version.&lt;/p&gt;

&lt;p&gt;Lucene 4.8 requires Java 7 to run, so if we upgrade the Lucene jar files that are checked in on trunk, the Lucene tests won&apos;t run out of the box on Java 6. The Lucene tests still run cleanly (on non-compact2 platforms) with Lucene 4.7 with the patch, though.&lt;/p&gt;</comment>
                            <comment id="14056218" author="rhillegas" created="Wed, 9 Jul 2014 14:26:59 +0100"  >&lt;p&gt;+1 to checking in the lucene48.diff patch. Then we can adjust the Tools Manual to state that we&apos;ve tested the plugin on Lucene 4.8.1 as well.&lt;/p&gt;

&lt;p&gt;As far as the tests go, it seems that we need to make a choice:&lt;/p&gt;

&lt;p&gt;1) Leave the Lucene version at 4.7.1 and disable the Lucene tests on Java 8.cp2&lt;/p&gt;

&lt;p&gt;2) Upgrade the Lucene version to 4.8.1 and disable the Lucene tests on Java 6.&lt;/p&gt;

&lt;p&gt;My sense is that more people use Java 6 than Java 8.cp2 so I&apos;m inclined to support option (1).&lt;/p&gt;

&lt;p&gt;We may want to think about running the Lucene tests with their own class loader, like the upgrade tests. Then the tests could configure which Lucene version is used, depending on the rev level of the JVM.&lt;/p&gt;</comment>
                            <comment id="14057324" author="jira-bot" created="Thu, 10 Jul 2014 10:50:10 +0100"  >&lt;p&gt;Commit 1609428 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1609428&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1609428&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6650&quot; title=&quot;Lucene tests fail on compact profile 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6650&quot;&gt;&lt;del&gt;DERBY-6650&lt;/del&gt;&lt;/a&gt;: Lucene tests fail on compact profile 2&lt;/p&gt;

&lt;p&gt;Implement IndexOutput.getChecksum() which is required by Lucene 4.8.&lt;br/&gt;
Lucene 4.8 works on compact profile 2.&lt;/p&gt;</comment>
                            <comment id="14057326" author="knutanders" created="Thu, 10 Jul 2014 10:52:15 +0100"  >&lt;p&gt;Thanks, Rick. I&apos;ve committed the lucene48.diff patch to trunk.&lt;/p&gt;

&lt;p&gt;I agree that we should keep the checked in version at 4.7.1 for now. LuceneSuite could probably do a check of the Lucene version and disable itself on cp2 if the version is &amp;lt; 4.8.&lt;/p&gt;</comment>
                            <comment id="14057443" author="knutanders" created="Thu, 10 Jul 2014 14:15:42 +0100"  >&lt;p&gt;The Lucene plugin doesn&apos;t work with Lucene 4.9 because IndexInput has a new abstract method called slice(), and DerbyIndexInput doesn&apos;t implement that method.&lt;/p&gt;

&lt;p&gt;The &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12654979/12654979_lucene49.diff&quot; title=&quot;lucene49.diff attached to DERBY-6650&quot;&gt;lucene49.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; patch adds the missing method. This makes LuceneSuite run cleanly on cp2 with Lucene 4.9.0 too. LuceneSuite still passes with Lucene 4.7.1 and Lucene 4.5.1 on non-cp2 platforms.&lt;/p&gt;</comment>
                            <comment id="14058569" author="knutanders" created="Fri, 11 Jul 2014 09:59:17 +0100"  >&lt;p&gt;Attaching &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12655180/12655180_lucene49-v2.diff&quot; title=&quot;lucene49-v2.diff attached to DERBY-6650&quot;&gt;lucene49-v2.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; which updates the original lucene49.diff patch with a fix in the new checkEndOfFile() method. The original version of the method had a bug that made the check too lenient in slices with non-zero offsets (it didn&apos;t show up in the tests, though, since Lucene would only try to read past the slice boundary if it had a bug).&lt;/p&gt;</comment>
                            <comment id="14058570" author="jira-bot" created="Fri, 11 Jul 2014 10:00:34 +0100"  >&lt;p&gt;Commit 1609655 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1609655&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1609655&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6650&quot; title=&quot;Lucene tests fail on compact profile 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6650&quot;&gt;&lt;del&gt;DERBY-6650&lt;/del&gt;&lt;/a&gt;: Lucene tests fail on compact profile 2&lt;/p&gt;

&lt;p&gt;Implement the IndexInput.slice() method required by Lucene 4.9. Lucene&lt;br/&gt;
4.9 works on compact profile 2.&lt;/p&gt;</comment>
                            <comment id="14058647" author="knutanders" created="Fri, 11 Jul 2014 12:03:48 +0100"  >&lt;p&gt;The patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12655194/12655194_disable-on-cp2.diff&quot; title=&quot;disable-on-cp2.diff attached to DERBY-6650&quot;&gt;disable-on-cp2.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; disables LuceneSuite on platforms that don&apos;t support JMX, if the Lucene version is not 4.8 or higher.&lt;/p&gt;</comment>
                            <comment id="14058650" author="jira-bot" created="Fri, 11 Jul 2014 12:05:13 +0100"  >&lt;p&gt;Commit 1609686 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1609686&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1609686&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6650&quot; title=&quot;Lucene tests fail on compact profile 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6650&quot;&gt;&lt;del&gt;DERBY-6650&lt;/del&gt;&lt;/a&gt;: Lucene tests fail on compact profile 2&lt;/p&gt;

&lt;p&gt;Disable LuceneSuite on platforms that don&apos;t support JMX if the Lucene&lt;br/&gt;
version is lower than 4.8.&lt;/p&gt;</comment>
                            <comment id="14058718" author="rhillegas" created="Fri, 11 Jul 2014 13:35:47 +0100"  >&lt;p&gt;Thanks for those improvements, Knut. You tripped across something interesting in writing the disable-on-cp2.diff patch: Lucene has such a different philosophy about backward compatibility that even version ids change between releases. We persist the string name of the Version enum with the index metadata when we create a Lucene index and we use that metadata to determine whether the current rev of Lucene is compatible (that is, later than) the rev which was used to create the index. That is, an index created with 4.8 persists the string &quot;LUCENE_48&quot; in the index metadata, but Lucene 4.9 won&apos;t recognize that as the name of a Version enum because it expects the string &quot;LUCENE_4_8&quot;. I think that our check won&apos;t be able to figure out that Lucene 4.9 comes after Lucene 4.8. If users create a Lucene index using a pre-4.9 version and then upgrade to 4.9, they may have to toss their indexes and re-create them. The Tools Guide does warn users that you may need to bounce your indexes when moving to a new Lucene version.&lt;/p&gt;</comment>
                            <comment id="14058778" author="knutanders" created="Fri, 11 Jul 2014 14:37:03 +0100"  >&lt;p&gt;Looks like you&apos;re right. The version check in LuceneQueryVTI.vetLuceneVersion() falls over when you upgrade to Lucene 4.9. Bouncing the index, as suggested by the tools guide, seems to do the trick, though:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; select * from table(t__c(&apos;hello&apos;, 10, null)) t;
X          |DOCUMENTID |SCORE          
---------------------------------------
ERROR 42XBK: The current Lucene version &apos;LUCENE_4_9&apos; cannot read an index created by Lucene version &apos;LUCENE_47&apos;.
ij&amp;gt; call lucenesupport.updateindex(&apos;app&apos;, &apos;t&apos;, &apos;c&apos;, null);
0 rows inserted/updated/deleted
ij&amp;gt; select * from table(t__c(&apos;hello&apos;, 10, null)) t;
X          |DOCUMENTID |SCORE          
---------------------------------------
1          |0          |1.0            

1 row selected
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14058789" author="knutanders" created="Fri, 11 Jul 2014 14:46:54 +0100"  >&lt;p&gt;Lucene&apos;s version class has a method called parseLeniently() which recognizes both the old style version strings and the new ones. See the attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12655209/12655209_parse-leniently.diff&quot; title=&quot;parse-leniently.diff attached to DERBY-6650&quot;&gt;parse-leniently.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;. With that patch LuceneQueryVTI happily reads indexes created with Lucene 4.7 when running with Lucene 4.9.&lt;/p&gt;</comment>
                            <comment id="14058791" author="rhillegas" created="Fri, 11 Jul 2014 14:51:09 +0100"  >&lt;p&gt;Thanks, Knut. That solution looks good to me. +1&lt;/p&gt;</comment>
                            <comment id="14058798" author="jira-bot" created="Fri, 11 Jul 2014 14:55:16 +0100"  >&lt;p&gt;Commit 1609716 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1609716&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1609716&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6650&quot; title=&quot;Lucene tests fail on compact profile 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6650&quot;&gt;&lt;del&gt;DERBY-6650&lt;/del&gt;&lt;/a&gt;: Parse Lucene versions leniently&lt;/p&gt;

&lt;p&gt;Lucene 4.9 changed the format of version strings (from LUCENE_48 to&lt;br/&gt;
LUCENE_4_9). We need to recognize both in order to detect if an&lt;br/&gt;
upgrade has happened.&lt;/p&gt;</comment>
                            <comment id="14060576" author="knutanders" created="Mon, 14 Jul 2014 12:55:42 +0100"  >&lt;p&gt;The Lucene tests were excluded on compact 2 in the latest test run and didn&apos;t fail. Closing this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12655618">LUCENE-5086</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12726784">DERBY-6658</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12655194" name="disable-on-cp2.diff" size="3118" author="knutanders" created="Fri, 11 Jul 2014 12:03:48 +0100"/>
                            <attachment id="12654769" name="lucene48.diff" size="2611" author="knutanders" created="Wed, 9 Jul 2014 09:55:46 +0100"/>
                            <attachment id="12655180" name="lucene49-v2.diff" size="6539" author="knutanders" created="Fri, 11 Jul 2014 09:59:17 +0100"/>
                            <attachment id="12654979" name="lucene49.diff" size="6590" author="knutanders" created="Thu, 10 Jul 2014 14:15:42 +0100"/>
                            <attachment id="12655209" name="parse-leniently.diff" size="633" author="knutanders" created="Fri, 11 Jul 2014 14:46:54 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Jul 2014 02:24:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>404165</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzreyv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>404205</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>