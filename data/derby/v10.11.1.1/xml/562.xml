<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-562/DERBY-562.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-562] Derby incorrectly throws Exception when streaming to BLOB field</title>
                <link>https://issues.apache.org/jira/browse/DERBY-562</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby incorrectly throws an Exception when streaming to a BLOB in case the used InputStream actually could provide more data than I want to write to the BLOB field.&lt;/p&gt;

&lt;p&gt;   PreparedStatement statement = connection.prepareStatement( &quot;insert into FOO(ID,DATA) values(?, ?)&quot; );&lt;br/&gt;
   statement.setLong( 1, someValue );&lt;br/&gt;
   statement.setBinaryStream( 2, someInputStream, amountOfData ); // amountOfData &amp;lt; amount of data readable from someInputStream&lt;br/&gt;
   statement.executeUpdate();&lt;/p&gt;

&lt;p&gt;executeUpdate() throws an SQLException with detail message: &quot;Input stream held less data than requested length.: java.io.IOException&quot;&lt;/p&gt;

&lt;p&gt;In my case this was first caused by writing an internal buffer (byte[]) to the data base through a ByteArrayInputStream while not limiting the ByteArrayInputStream to the useful data within the buffer but setting amountOfData to the number of useful bytes. So the 2 problems are:&lt;br/&gt;
1. the error text is definitly incorrect since I provide more data than neccessary, not less&lt;br/&gt;
2. in my opinion this shouldn&apos;t throw an exception at all (I checked against 4 other DBMS, all of them worked as intended)&lt;/p&gt;</description>
                <environment>All</environment>
        <key id="12315286">DERBY-562</key>
            <summary>Derby incorrectly throws Exception when streaming to BLOB field</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skambha">Sunitha Kambhampati</assignee>
                                    <reporter username="ickzon">Holger Rehn</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Sep 2005 20:37:04 +0100</created>
                <updated>Wed, 12 Oct 2005 03:28:56 +0100</updated>
                            <resolved>Fri, 7 Oct 2005 13:05:29 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12324445" author="ickzon" created="Tue, 13 Sep 2005 21:52:45 +0100"  >&lt;p&gt;Just in case that matters - I forgot to mention that I used Derby in embedded mode when getting this error.&lt;/p&gt;</comment>
                            <comment id="12324452" author="rhillegas" created="Wed, 14 Sep 2005 00:38:07 +0100"  >&lt;p&gt;RawToBinaryFormatStream.checkSufficientData() requires that the InputStream not have any extra bytes in it. The comment in the code says that the JDBC 3.0 spec requires this behavior. I couldn&apos;t find this assertion in the 3.0 spec when I glanced at it quickly.  However, the javadoc for java.sql.PreparedStatement.setBinaryStream() says that the length argument is &quot;the number of bytes in the stream&quot;. I suppose someone could interpret this to mean &quot;exactly the number of bytes in the stream&quot;.&lt;/p&gt;

&lt;p&gt;I agree that the behavior of the other databases sounds better. I also agree that the error message is wrong. Holger, can you tell us what other DBMSes you tried?&lt;/p&gt;

&lt;p&gt;Can someone cite chapter and verse for the JDBC 3.0 requirement claimed by checkSufficientData()?&lt;/p&gt;</comment>
                            <comment id="12324460" author="djd" created="Wed, 14 Sep 2005 02:12:02 +0100"  >&lt;p&gt;The comment actually says &apos;JDBC 3.0 (from tutorial book)&apos;, not from the spec.&lt;br/&gt;
Meaning&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;TUTORIAL3&amp;#93;&lt;/span&gt; - JDBC API Tutorial and Reference, Third Edition. ISBN 0321173848 &lt;a href=&quot;http://java.sun.com/developer/Books/jdbc/Fisher/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/developer/Books/jdbc/Fisher/index.html&lt;/a&gt;&lt;br/&gt;
(see &lt;a href=&quot;http://db.apache.org/derby/papers/JDBCImplementation.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/papers/JDBCImplementation.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Chapter 25 - Page 664 - setBinaryStream of PreparedStatement&lt;/p&gt;

&lt;p&gt;&quot;length - ... Note that if the stream contains more or less bytes than are specified in length, an exception is thrown&quot;&lt;/p&gt;

&lt;p&gt;identical comments for setAsciiStream and setCharacterStream methods.&lt;/p&gt;

&lt;p&gt;I&apos;ll provide an update for &lt;a href=&quot;http://db.apache.org/derby/papers/JDBCImplementation.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/papers/JDBCImplementation.html&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12324474" author="rhillegas" created="Wed, 14 Sep 2005 05:16:05 +0100"  >&lt;p&gt;You could kludge around this Derby behavior by wrapping your InputStream in a subclass of java.io.FilterInputStream which truncates input at the desired length.&lt;/p&gt;</comment>
                            <comment id="12329775" author="ickzon" created="Mon, 19 Sep 2005 15:47:08 +0100"  >&lt;p&gt;Thank you for looking at the problem!&lt;/p&gt;

&lt;p&gt;To answer Rick&apos;s question - I checked against Sybase Adaptive Server Anywhere, Sybase Adaptive Server Enterprise, Microsoft SQL Server and Hypersonic SQL - just because that are the data base systems I&apos;m currently working with. And all of them read exactly as many bytes as set by the length argument, ignoring any additional data.&lt;/p&gt;</comment>
                            <comment id="12329903" author="skambha" created="Tue, 20 Sep 2005 06:47:31 +0100"  >&lt;p&gt;As Dan also pointed out in the earlier comment, Derby  behavior is correct according to what the jdbc spec says ( in this case the tutorial book).  &lt;/p&gt;

&lt;p&gt;e.g.   ps.setBinaryStream(pos,stream, streamLength)&lt;br/&gt;
Right now, even if you pass a stream with length greater than streamLength , derby throws an exception with the following message &lt;br/&gt;
&quot;Input stream held less data than requested length&quot; &lt;/p&gt;

&lt;p&gt;I think the message must be changed to correctly say  - &lt;br/&gt;
&quot;Input stream did not have the exact amount of data as the requested length.&quot;&lt;/p&gt;

&lt;p&gt;I will submit a patch for this. &lt;/p&gt;</comment>
                            <comment id="12330063" author="skambha" created="Wed, 21 Sep 2005 13:24:20 +0100"  >&lt;p&gt;This patch&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;changes the error message thrown when the stream is either less or greater than the requested length to&lt;br/&gt;
&apos;Input stream did not have exact amount of data as the requested length.&apos;&lt;/li&gt;
	&lt;li&gt;enhances the characterStreams.out test, to print out  the nested sql exceptions to ensure that the proper error message is returned.&lt;/li&gt;
	&lt;li&gt;updates to the master files.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ran derbyall with no failures on jdk1.4.2/windows.&lt;/p&gt;

&lt;p&gt;svn stat&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\RawToBinaryFormatStream.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\ReaderToUTF8Stream.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\SQLState.java&lt;br/&gt;
M      java\engine\org\apache\derby\loc\messages_en.properties&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\characterStreams.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\characterStreams.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\resultsetStream.out&lt;/p&gt;

&lt;p&gt;I verified that we are testing for these two error cases (ie stream has less or more data than requested length),  for  the following supported stream related api  - setCharacterStream, setAsciiStream, setBinaryStream on PreparedStatement.     Derby does not support setUnicodeStream api that is deprecated in jdbc 3.0.&lt;/p&gt;

&lt;p&gt;Can someone please review it and commit it.  Thanks.&lt;/p&gt;

&lt;p&gt;I would like this patch to also be ported to 10.1. I&apos;ll submit the merge command once this gets committed on trunk.&lt;/p&gt;</comment>
                            <comment id="12331393" author="skambha" created="Thu, 6 Oct 2005 02:16:50 +0100"  >&lt;p&gt;I merged this fix to 10.1 codeline. All tests passed ok with jdk142/win2k.&lt;/p&gt;

&lt;p&gt;The merge command is &lt;br/&gt;
svn merge -r 292829:292830 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would like this to go in 10.1. I&apos;d appreciate if someone could commit this.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12331443" author="skambha" created="Thu, 6 Oct 2005 09:27:08 +0100"  >&lt;p&gt;updating fixin information.&lt;/p&gt;</comment>
                            <comment id="12331542" author="kmarsden" created="Fri, 7 Oct 2005 10:09:51 +0100"  >&lt;p&gt;Committed this to 10.1&lt;br/&gt;
Date: Thu Oct  6 16:52:27 2005&lt;br/&gt;
New Revision: 306964&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=306964&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=306964&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12331546" author="skambha" created="Fri, 7 Oct 2005 11:55:36 +0100"  >&lt;p&gt;Thanks Kathey for merging this fix to 10.1    &lt;br/&gt;
The revision in the earlier comment is for derby504. &lt;/p&gt;

&lt;p&gt;DERBY562 - New Revision 306965.  &lt;br/&gt;
The url is:  &lt;a href=&quot;http://svn.apache.org/viewcvs.cgi?rev=306965&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs.cgi?rev=306965&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12331550" author="skambha" created="Fri, 7 Oct 2005 13:04:42 +0100"  >&lt;p&gt;Verified the fix on 10.1 codeline and trunk ( 10.2).&lt;/p&gt;

&lt;p&gt;svn revision &lt;br/&gt;
10.1.1.2   - #306965&lt;br/&gt;
10.2.0.0(trunk) - 292830&lt;/p&gt;
</comment>
                            <comment id="12331815" author="skambha" created="Wed, 12 Oct 2005 03:28:56 +0100"  >&lt;p&gt;Fix was verified and bug resolved,  so closing the bug.   &lt;/p&gt;

&lt;p&gt;I think it would be good to add information about stream length when using the stream api&apos;s  to the &lt;a href=&quot;http://db.apache.org/derby/papers/JDBCImplementation.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/papers/JDBCImplementation.html&lt;/a&gt;.  I&apos;ll address these clarifications  to this paper along with some changes that I am working on for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-500&quot; title=&quot;Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-500&quot;&gt;&lt;del&gt;DERBY-500&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12314480" name="Derby562.diff.txt" size="16871" author="skambha" created="Wed, 21 Sep 2005 13:24:20 +0100"/>
                            <attachment id="12314481" name="Derby562.stat.txt" size="545" author="skambha" created="Wed, 21 Sep 2005 13:26:41 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Sep 2005 23:38:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22018</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17nj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40890</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>