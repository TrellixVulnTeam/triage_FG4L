<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-960/DERBY-960.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-960] Client xa prepare returns XA_OK instead of  XA_RDONLY for a read only transaction</title>
                <link>https://issues.apache.org/jira/browse/DERBY-960</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>
&lt;p&gt;Client xa prepare returns XA_OK instead of  XA_RDONLY for a read only transaction&lt;/p&gt;

&lt;p&gt;The code below checks the return value of XaResource.prepare to decide whether to commit the transaction.   The prepare return value is XA_OK ( 0)  for client when it should be XA_RDONLY(3)&lt;/p&gt;

&lt;p&gt;D&amp;gt;java ReadOnlyTran derbycli&lt;br/&gt;
10.2.0.0 alpha&lt;br/&gt;
Apache Derby&lt;br/&gt;
Apache Derby Network Client JDBC Driver&lt;br/&gt;
table already exists&lt;br/&gt;
==&amp;gt;: 1&lt;br/&gt;
XAResource.XA_RDONLY3&lt;br/&gt;
XAResource.XA_OK0&lt;br/&gt;
prp1 is: 0&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.derby.client.am.XaException: XAER_NOTA : Error executing a XAResource.commit(), Server returned XAER_NOTA&lt;br/&gt;
        at org.apache.derby.client.net.NetXAResource.throwXAException(NetXAResource.java:728)&lt;br/&gt;
        at org.apache.derby.client.net.NetXAResource.commit(NetXAResource.java:216)&lt;br/&gt;
        at ReadOnlyTran.main(ReadOnlyTran.java:94)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Error executing a XAResource.commit(), Server returned XAER_NOTA&lt;br/&gt;
        at org.apache.derby.client.net.NetXAResource.xaRetValErrorAccumSQL(NetXAResource.java:976)&lt;br/&gt;
        at org.apache.derby.client.net.NetXAResource.commit(NetXAResource.java:204)&lt;br/&gt;
        ... 1 more&lt;br/&gt;
D&amp;gt;&lt;/p&gt;

&lt;p&gt;import java.sql.Connection;&lt;br/&gt;
import java.sql.DatabaseMetaData;&lt;br/&gt;
import java.sql.PreparedStatement;&lt;br/&gt;
import java.sql.ResultSet;&lt;br/&gt;
import java.sql.SQLException;&lt;br/&gt;
import java.sql.Statement;&lt;/p&gt;

&lt;p&gt;import javax.sql.XAConnection;&lt;br/&gt;
import javax.transaction.xa.XAException;&lt;br/&gt;
import javax.transaction.xa.XAResource;&lt;br/&gt;
import javax.transaction.xa.Xid;&lt;/p&gt;

&lt;p&gt;import com.ibm.db2.jcc.DB2Xid;&lt;/p&gt;

&lt;p&gt;class ReadOnlyTran  &lt;br/&gt;
{&lt;/p&gt;


&lt;p&gt;    public static void main (String args [])throws Exception &lt;br/&gt;
    {&lt;br/&gt;
    	//org.apache.derby.jdbc.ClientConnectionPoolDataSource ds = new org.apache.derby.jdbc.ClientConnectionPoolDataSource();&lt;br/&gt;
    	org.apache.derby.jdbc.ClientXADataSource ds = new &lt;br/&gt;
		org.apache.derby.jdbc.ClientXADataSource();&lt;br/&gt;
    	//org.apache.derby.jdbc.EmbeddedXADataSource ds = new &lt;br/&gt;
		//org.apache.derby.jdbc.EmbeddedXADataSource();&lt;br/&gt;
    	Connection conn = null;&lt;br/&gt;
    	ds.setDatabaseName(&quot;sample&quot;);&lt;br/&gt;
		ds.setTraceFile(&quot;trace.out&quot;);&lt;br/&gt;
    	ds.setConnectionAttributes(&quot;create=true&quot;);&lt;/p&gt;

&lt;p&gt;         conn = ds.getConnection();&lt;br/&gt;
        PreparedStatement ps1 = null;&lt;br/&gt;
         try&lt;br/&gt;
         &lt;/p&gt;
{
             DatabaseMetaData md = conn.getMetaData() ;
             
System.out.println(md.getDatabaseProductVersion());
             System.out.println(md.getDatabaseProductName());
             ps1 = conn.prepareStatement(&quot;CREATE TABLE TAB1(COL1 INT NOT NULL)&quot;);
             ps1.executeUpdate();
        	 System.out.println(&quot;done creating  table&quot;);
             conn.commit ();
         }
&lt;p&gt; catch (SQLException x)&lt;/p&gt;
         {
             System.out.println (&quot;table already exists&quot;);
         }                 

&lt;p&gt;        XAConnection pc1 = ds.getXAConnection();&lt;br/&gt;
        XAResource xar1 = pc1.getXAResource();&lt;br/&gt;
        Xid xid1 = createXid(11);&lt;br/&gt;
        xar1.start(xid1, XAResource.TMNOFLAGS);&lt;br/&gt;
        Connection conn1 = pc1.getConnection();             &lt;br/&gt;
        doSelect(conn1, 50);&lt;br/&gt;
		//doInsert(conn1);&lt;br/&gt;
        conn1.close();&lt;br/&gt;
        xar1.end(xid1, XAResource.TMSUCCESS);&lt;/p&gt;

&lt;p&gt;        int prp1 = xar1.prepare(xid1);&lt;/p&gt;

&lt;p&gt;        System.out.println(&quot;XAResource.XA_RDONLY&quot; + &lt;br/&gt;
XAResource.XA_RDONLY);&lt;br/&gt;
        System.out.println(&quot;XAResource.XA_OK&quot; + &lt;br/&gt;
XAResource.XA_OK);&lt;br/&gt;
        System.out.println(&quot;prp1 is: &quot; + prp1);&lt;br/&gt;
        // Commit transaction&lt;br/&gt;
        if (prp1 == XAResource.XA_OK)&lt;br/&gt;
           xar1.commit(xid1, false);&lt;/p&gt;

&lt;p&gt;        // Close physical connection&lt;br/&gt;
        pc1.close();&lt;br/&gt;
      }&lt;/p&gt;


&lt;p&gt;    private static void doSelect(Connection conn, int deptno) &lt;br/&gt;
throws SQLException &lt;br/&gt;
    {&lt;br/&gt;
        Statement stmt = conn.createStatement();&lt;br/&gt;
        ResultSet rset1 = stmt.executeQuery(&quot;select * from tab1&quot;);&lt;br/&gt;
        while (rset1.next())&lt;/p&gt;
        {
        	System.out.println(&quot;==&amp;gt;: &quot; + rset1.getString(1));
        }

&lt;p&gt;        stmt.close();&lt;br/&gt;
        stmt = null;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;	private static void doInsert(Connection conn) throws SQLException&lt;/p&gt;
	{
        Statement stmt = conn.createStatement();
		stmt.executeUpdate(&quot;Insert into tab1 values(1)&quot;);
		stmt.close();
	}

&lt;p&gt;    static Xid createXid(int bids) throws XAException &lt;/p&gt;
{
        byte[] gid = new byte[1];
        gid[0] = (byte) 9;
        byte[] bid = new byte[1];
        bid[0] = (byte) bids;
        byte[] gtrid = new byte[64];
        byte[] bqual = new byte[64];
        System.arraycopy(gid, 0, gtrid, 0, 1);
        System.arraycopy(bid, 0, bqual, 0, 1);
        Xid xid = new DB2Xid(0x1234, gtrid, bqual);
        return xid;
    }
&lt;p&gt;}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12328887">DERBY-960</key>
            <summary>Client xa prepare returns XA_OK instead of  XA_RDONLY for a read only transaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Feb 2006 15:24:26 +0000</created>
                <updated>Wed, 24 May 2006 05:56:10 +0100</updated>
                            <resolved>Wed, 22 Feb 2006 05:07:06 +0000</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12366153" author="kmarsden" created="Mon, 13 Feb 2006 15:38:57 +0000"  >&lt;p&gt;looking at this briefly I noticed the following.&lt;/p&gt;

&lt;p&gt;1) Runs ok with EmbeddedXADAtaSource&lt;/p&gt;

&lt;p&gt;2) The protocol flows from the client for prepare and commit with and without the insert are just the same, and  setting derby.drda.debug=true it looks like everything is going through the right path,  xid and flags are set correctly until we get this exception  on commit.  &lt;/p&gt;

&lt;p&gt;javax.transaction.xa.XAException&lt;br/&gt;
	at org.apache.derby.jdbc.EmbedXAConnection.commit(EmbedXAConnection.java:425)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAXAProtocol.commitXATransaction(DRDAXAProtocol.java:310)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAXAProtocol.commitTransaction(DRDAXAProtocol.java:267)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAXAProtocol.parseSYNCCTL(DRDAXAProtocol.java:139)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:906)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:238)&lt;br/&gt;
Sending data&lt;br/&gt;
total memory: 2465792 free: 1340328 Sun Feb 12 22:25:07 PST 2006&lt;/p&gt;

&lt;p&gt;Attaching repro and some traces in ReadOnlyTran.zip&lt;/p&gt;

&lt;p&gt;ReadOnlyTran.java - repro for this issue&lt;/p&gt;

&lt;p&gt;readonly.trace.out - client trace output with testcase and exception.&lt;br/&gt;
withinsert.trace.out - client trace outputwith insert added&lt;/p&gt;

&lt;p&gt;nsreadonly.out -  Network Server output with derby.drda.debug=true with the testcase and exception.&lt;/p&gt;

&lt;p&gt;nswithinsert.out - Network Server output with derby.drda.debug=true with the insert added &lt;/p&gt;

</comment>
                            <comment id="12366154" author="kmarsden" created="Mon, 13 Feb 2006 15:40:56 +0000"  >&lt;p&gt;Repro and some traces per previous comment.&lt;/p&gt;</comment>
                            <comment id="12366296" author="kmarsden" created="Tue, 14 Feb 2006 14:13:09 +0000"  >&lt;p&gt;Changed the summary and description to more accurately describe the problem.  From the description, for a while I was focussed on the commit, where in fact the problem is the return value from the prepare.&lt;/p&gt;

&lt;p&gt;The source of the problem appears to be in DRDAXAProtocol.java  in prepareXATransaction where the return value is not properly returned.&lt;/p&gt;</comment>
                            <comment id="12366334" author="kmarsden" created="Tue, 14 Feb 2006 22:34:42 +0000"  >&lt;p&gt;Here is a preliminary patch for this issue.&lt;br/&gt;
For Network Server&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed DRDAXAProtocol prepareXATransaction to return the return value of prepare in the SYNCCRD&lt;br/&gt;
The server was always returning XA_OK if prepare did not throw an error instead of passing the return value to the client.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For Network Client&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed NetXAResource()  prepare to handle XA_RDONLY returned from the server.  It was throwing an exception for any value returned from the server other than XA_OK.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;ISSUE and QUESTION:&lt;br/&gt;
This patch is against the trunk, but the fix needs to go to 10.1&lt;/p&gt;

&lt;p&gt;With this fix,  older clients working with newer servers will now throw an XAException when prepare returns XA_RDONLY because the client side fix is not in place.  This is potentially worse than the previous symptom of returning  XA_OK.  Should we bump the DRDA maintenance id and continue to return XA_OK with older clients, or just put this fix in place and require upgrade of client to the latest 10.1 to get the fix?&lt;/p&gt;

</comment>
                            <comment id="12366437" author="kmarsden" created="Wed, 15 Feb 2006 14:39:27 +0000"  >&lt;p&gt;Attaching a new diff. The first one had some residual cruft in it that was not needed.&lt;br/&gt;
The relevant client change is this:&lt;/p&gt;

&lt;p&gt;&amp;#8212; java/client/org/apache/derby/client/net/NetXAResource.java  (revision 377480)&lt;br/&gt;
+++ java/client/org/apache/derby/client/net/NetXAResource.java  (working copy)&lt;br/&gt;
@@ -413,7 +413,7 @@&lt;br/&gt;
         } finally &lt;/p&gt;
{
             conn_.pendingEndXACallinfoOffset_ = -1; // indicate no pending calli
nfo
         }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (rc != XAResource.XA_OK) {&lt;br/&gt;
+        if ((rc != XAResource.XA_OK ) &amp;amp;&amp;amp; (rc != XAResource.XA_RDONLY)) 
{
             throwXAException(rc, false);
         }
&lt;p&gt;         if (conn_.agent_.loggingEnabled()) {&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Perhaps the backward compatibility issue is not really as much of an issue as I first thought. &lt;br/&gt;
With just the server fix  an unpatched client, the repro for this bug actually passes, but the read only case in xaSimplePositive  prints an  IJ ERROR: XA_RDONLY on the prepare.  I don&apos;t understand the difference in the two cases.&lt;/p&gt;


&lt;p&gt;Regardless, I am a little conflicted about bumping the DRDA maintenance version and putting code in Network Server to continue returning the wrong return value, just because the client can&apos;t handle it.&lt;/p&gt;

&lt;p&gt;Below is the case in xaSimplePositive that fails with an  unpatched cient and a patched server.&lt;br/&gt;
The IJ ERROR: XA_RDONLY does not occur  with both unpatched client and server and does not occur with the full patch.&lt;/p&gt;

&lt;p&gt;The case looks just the same, xa_prepare on a read only transaction, so I am not sure what&lt;br/&gt;
xa_start xa_noflags 3;&lt;br/&gt;
ij(XA)&amp;gt; select * from APP.global_xactTable where gxid is not null order by gxid;&lt;br/&gt;
GXID |STATUS |READ&amp;amp; |USERNAME |TYPE&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;(3 |IDLE |NULL |SKU |UserTransaction&lt;br/&gt;
ij(XA)&amp;gt; select * from APP.foo;&lt;br/&gt;
A&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;0&lt;br/&gt;
1&lt;br/&gt;
3&lt;br/&gt;
ij(XA)&amp;gt; xa_end xa_success 3;&lt;br/&gt;
ij(XA)&amp;gt; xa_prepare 3;&lt;br/&gt;
IJ ERROR: XA_RDONLY&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; should fail with XA_NOTA because we prepared a read only transaction&lt;br/&gt;
xa_commit xa_1Phase 3;&lt;br/&gt;
IJ ERROR: XAER_NOTA&lt;/p&gt;

&lt;p&gt;So what do you think, do we bump the DRDA id for this or no?   I am ready to vote no as I think really anyone using client xa is just really going to need the client fix anyway.&lt;/p&gt;

</comment>
                            <comment id="12366524" author="bryanpendleton" created="Thu, 16 Feb 2006 04:10:16 +0000"  >&lt;p&gt;&amp;gt;  Should we bump the DRDA maintenance id and continue to return XA_OK with older clients, &lt;br/&gt;
&amp;gt; or just put this fix in place and require upgrade of client to the latest 10.1 to get the fix?&lt;/p&gt;

&lt;p&gt;I think we should require clients to upgrade. If I&apos;m understanding this issue correctly, continuing to return XA_OK for a prepare of a read-only transaction is of little value to the client, because if they then proceed to try to commit that prepared-read-only branch of the global transaction, they&apos;ll get an exception from the commit, right?&lt;/p&gt;

&lt;p&gt;So it seems like the client really needs to know the correct information, thus we need to just fix it in both places and ask users to get the fix.&lt;/p&gt;</comment>
                            <comment id="12366843" author="kmarsden" created="Sat, 18 Feb 2006 05:03:31 +0000"  >&lt;p&gt;Checked this fix into 10.2&lt;br/&gt;
The test for this issue was checked in (accidentally) in patch2 of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-435&quot; title=&quot;jdbcapi/checkDataSource.java and  jdbapi/checkDataSource30.java to tests should be changed or extended to test client DataSources&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-435&quot;&gt;&lt;del&gt;DERBY-435&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I will add an appropriate comment to that test.&lt;/p&gt;

&lt;p&gt;Date: Fri Feb 17 11:44:47 2006&lt;br/&gt;
New Revision: 378613&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=378613&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=378613&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leaving this issue open for port to 10.1&lt;/p&gt;</comment>
                            <comment id="12367188" author="kmarsden" created="Tue, 21 Feb 2006 22:36:30 +0000"  >&lt;p&gt;Suresh pointed out to me that this change caused the following new failures testing derbynetclientmats with 10.1 client and 10.2 server:&lt;/p&gt;

&lt;p&gt; (jdk15/IBM131/IBM142 client 10.1) derbynetclientmats: &lt;br/&gt;
    derbynetclientmats/derbynetclientmats.fail:jdbcapi/xaSimplePositive.sql &lt;br/&gt;
    derbynetclientmats/derbynetclientmats.fail:jdbcapi/xaStateTran.sql &lt;br/&gt;
    both tests failed with following diff:&lt;/p&gt;

&lt;p&gt;    &amp;gt; IJ ERROR: XA_RDONLY&lt;/p&gt;

&lt;p&gt;I will port this fix to 10.1 which will resolve the failures on the latest version of 10.1 but it will continue to fail with older clients.    There was a discussion about whether to bump the DRDA maintenance version to make this work with older clients but the consensus was that anyone using XA will need both the client and server changes.&lt;br/&gt;
(see earlier comments in this issue).&lt;/p&gt;

</comment>
                            <comment id="12367249" author="kmarsden" created="Wed, 22 Feb 2006 05:07:06 +0000"  >&lt;p&gt;Checked in fix to 10.1&lt;/p&gt;

&lt;p&gt;Author: kmarsden&lt;br/&gt;
Date: Tue Feb 21 08:19:30 2006&lt;br/&gt;
New Revision: 379513&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=379513&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=379513&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12322904" name="ReadOnlyTran.zip" size="18986" author="kmarsden" created="Mon, 13 Feb 2006 15:40:56 +0000"/>
                            <attachment id="12322982" name="derby960_preview.diff" size="1171" author="kmarsden" created="Wed, 15 Feb 2006 14:39:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Feb 2006 04:10:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22220</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16bb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40673</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>