<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-388/DERBY-388.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-388] Intermittent failures when executing UPDATE trigger statements</title>
                <link>https://issues.apache.org/jira/browse/DERBY-388</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If I define an UPDATE trigger and then I repeatedly perform a table update that fires the trigger over many rows, I occasionally see intermittent failures of two kinds: 1) a null pointer exception, and/or 2) a syntax error.&lt;/p&gt;

&lt;p&gt;The NPE stack trace is this:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.makeValid(GenericPreparedStatement.java:808)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepare(GenericPreparedStatement.java:229)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:342)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:166)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTrigger(RowTriggerExecutor.java:108)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:296)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.fireAfterTriggers(UpdateResultSet.java:824)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:292)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:366)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1100)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1271)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:259)&lt;/p&gt;

&lt;p&gt;The syntax error stack trace is this:&lt;/p&gt;

&lt;p&gt;ERROR 42X01: Syntax error: org.apache.derby.iapi.db.Factory::getTriggerExecutionContext.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:311)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.MethodCallNode.resolveMethodCall(MethodCallNode.java:666)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpression(StaticMethodCallNode.java:455)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.NonStaticMethodCallNode.bindExpression(NonStaticMethodCallNode.java:170)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.NonStaticMethodCallNode.bindExpression(NonStaticMethodCallNode.java:170)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpression(JavaToSQLValueNode.java:250)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CastNode.bindExpression(CastNode.java:224)&lt;br/&gt;
	at&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;snip&amp;#93;&lt;/span&gt;&lt;br/&gt;
org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressions(DMLStatementNode.java:247)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.UpdateNode.bind(UpdateNode.java:507)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:332)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:107)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.makeValid(GenericPreparedStatement.java:811)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepare(GenericPreparedStatement.java:229)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:342)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:166)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTrigger(RowTriggerExecutor.java:108)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:296)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.fireAfterTriggers(UpdateResultSet.java:824)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:292)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:366)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1100)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1271)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:259)&lt;/p&gt;


&lt;p&gt;In both cases, it looks like the error happens when Derby decides (internally) to recompile the trigger-action statement in the middle of trigger processing--depending on the state of the underlying Statement object that performs the trigger action, the result will be an NPE or a syntax error.&lt;/p&gt;

&lt;p&gt;I&apos;m working on writing up a simplified reproduction and will post soon...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12311628">DERBY-388</key>
            <summary>Intermittent failures when executing UPDATE trigger statements</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Jun 2005 15:14:16 +0100</created>
                <updated>Wed, 12 Jul 2006 00:56:44 +0100</updated>
                            <resolved>Fri, 30 Sep 2005 02:56:02 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.0.2.2</fixVersion>
                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12314300" author="army" created="Thu, 23 Jun 2005 18:04:20 +0100"  >&lt;p&gt;Attaching a sample program to reproduce the behavior described in this bug.  Note that  while this particular repro is contrived, this problem CAN show up in a normal application environment as a result of the fact that Derby sometimes chooses to recompile triggers automatically.  If it does so while a trigger is firing, the result will be the same as what is witnessed by this program.&lt;/p&gt;

&lt;p&gt;The &quot;intermittent&quot; nature of the bug as first reported was because Derby didn&apos;t always choose to recompile the trigger statements, and hence the problem didn&apos;t always occur.  I&apos;m not sure how Derby goes about deciding when to automatically recompile the trigger, but in any event, I&apos;ve written the repro to be more consistent: it forces a table alteration while running, which makes it mandatory for the trigger to be recompiled, and thus the problem is more easily reproduced.&lt;/p&gt;

&lt;p&gt;I think I have a patch for this problem, but would like to run derbyall (tonight) before posting.&lt;/p&gt;</comment>
                            <comment id="12314333" author="army" created="Fri, 24 Jun 2005 01:56:22 +0100"  >&lt;p&gt;Attaching patch to fix this issue.  I ran derbyall with these changes and all tests passed.  If someone who&apos;s familiar with trigger execution and/or statement recompilation could look at this patch, I&apos;d be grateful.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12314334" author="army" created="Fri, 24 Jun 2005 02:39:27 +0100"  >&lt;p&gt;Oh, I should mention that the patch I created is against the 10.0 branch.  I think we&apos;ll want it to be applied to all branches (10.0, 10.1, and trunk) but I don&apos;t know if there&apos;s a certain order that&apos;s supposed to be done.  So I created the patch w.r.t the 10.0 branch and have marked the &quot;Fixin&quot; as 10.0.2.2&quot;.  I&apos;ll work on adding the repro for this problem to one of the existing tests and will submit another patch for that later.&lt;/p&gt;</comment>
                            <comment id="12314345" author="bandaram" created="Fri, 24 Jun 2005 04:54:48 +0100"  >&lt;p&gt;I looked at this patch... While it seems to solve the problem, I wonder if the recompile of the trigger action could use prepareStorable() method, instead of the newly extended prepare() method with internalSQL flag added. I think it is desirable to not have prepare() method with internalSQL flag, if possible, since this is mostly used directly for JDBC methods. These should ideally not need internalSQL option.&lt;/p&gt;</comment>
                            <comment id="12314363" author="army" created="Fri, 24 Jun 2005 08:34:15 +0100"  >&lt;p&gt;Thanks for looking at this Satheesh.  Per your suggestion, I looked to see if I could use prepareStorable() instead of adding the new version of prepare(), and the answer was Yes, I could.  However, after doing so, I noticed that once a recompilation was determined to be necessary, we would end up recompiling it EVERY time the trigger was fired thereafter (at least, that was the case with the repro I&apos;ve attached to this issue).  So I went back to square one to see how the trigger-action is compiled to begin with (upon first execution), and realized that we can and should be following that same codepath when we try to recompile the statement in mid-trigger processing.&lt;/p&gt;

&lt;p&gt;Long story short, it turns out that this patch has become even simpler than it was before--all I had to do was replace my old changes with a single &quot;if&quot; statement in one class and the problem was solved.  I&apos;m attaching a new patch that does this; see the comments in the patch for an explanation of why this simple if-statement does the trick.&lt;/p&gt;

&lt;p&gt;So thanks again for the review-&lt;del&gt;it&apos;s made for a much simpler patch, and one that seems like it&apos;s generally more correct&lt;/del&gt;-at least to me.  If anyone else out there sees a problem with my approach, please comment. &lt;/p&gt;

&lt;p&gt;I&apos;m attaching the new patch (based on 10.0 codeline) after running &quot;derbylang&quot; on Windows 2000 with Sun jdk 1.4.2 and seeing no failures.  I will run the full &quot;derbyall&quot; suite tonight.&lt;/p&gt;</comment>
                            <comment id="12314371" author="army" created="Fri, 24 Jun 2005 09:48:44 +0100"  >&lt;p&gt;In looking more closely at the latest patch I posted, I decided to make a change that, while in theory should do the same thing in a more robust manner, is nonetheless enough to warrant a new run of &quot;derbyall&quot; before posting.  So I  have removed the old patch and will post a new one tomorrow, after my derbyall suite has completed.&lt;/p&gt;</comment>
                            <comment id="12314409" author="army" created="Sat, 25 Jun 2005 03:21:49 +0100"  >&lt;p&gt;Attaching a new patch (this is the 3rd version).  Patch is against the 10.0 codeline and I&apos;m hoping it can be applied to that branch (that&apos;s where my &quot; itch&quot; is).  Ran &quot;derbyall&quot; on Windows 2000  with IBM jdk 1.4.2 with no new failures. &lt;/p&gt;</comment>
                            <comment id="12314411" author="djd" created="Sat, 25 Jun 2005 03:35:56 +0100"  >&lt;p&gt;patch v3 looks good to me.&lt;/p&gt;</comment>
                            <comment id="12315862" author="bandaram" created="Fri, 15 Jul 2005 07:52:40 +0100"  >&lt;p&gt;I ported this fix from 10.0 branch into 10.1 branch and trunk. I noticed a test case has been added for this checkin. I will follow up with Army to get a test case added to each of the branches to make sure we don&apos;t break this fix in the future.&lt;/p&gt;</comment>
                            <comment id="12317199" author="army" created="Sat, 30 Jul 2005 08:54:02 +0100"  >&lt;p&gt;Attached is a patch to add a test case for this issue to the lang/triggerGeneral.sql test.  If this is deemed acceptable, we should probably&lt;br/&gt;
port this test back to the 10.1 branch, as well. &lt;/p&gt;</comment>
                            <comment id="12317376" author="bandaram" created="Tue, 2 Aug 2005 08:19:21 +0100"  >&lt;p&gt;Submitted this change to trunk. Will merge into 10.1 after the release is done.&lt;/p&gt;

&lt;p&gt;Sending        java\testing\org\apache\derbyTesting\functionTests\master\triggerGeneral.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\triggerGeneral.sql&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\userDefMethods.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 226896.&lt;/p&gt;</comment>
                            <comment id="12317459" author="bandaram" created="Wed, 3 Aug 2005 10:10:51 +0100"  >&lt;p&gt;Merged this test case addition into 10.1 release.&lt;/p&gt;

&lt;p&gt;Sending        java\testing\org\apache\derbyTesting\functionTests\master\triggerGeneral.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\triggerGeneral.sql&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\userDefMethods.java&lt;br/&gt;
Transmitting file data ...&lt;br/&gt;
Committed revision 227116.&lt;/p&gt;</comment>
                            <comment id="12317464" author="army" created="Wed, 3 Aug 2005 10:51:47 +0100"  >&lt;p&gt;Fix for this issue was checked into the 10.0 (svn 201659), 10.1 (svn 219113) and trunk (svn 219115) branches.  A test case was also added and committed to 10.1 (svn 227116) and the trunk  (svn 226896) branch.  Thus, I&apos;m resolving and closing this issue.&lt;/p&gt;</comment>
                            <comment id="12330826" author="deepa" created="Fri, 30 Sep 2005 02:54:17 +0100"  >&lt;p&gt;reopening to fix fix version&lt;/p&gt;</comment>
                            <comment id="12420358" author="rhillegas" created="Wed, 12 Jul 2006 00:56:44 +0100"  >&lt;p&gt;Assigning to SQL component.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12311464" name="derby-388_test.patch" size="4784" author="army" created="Sat, 30 Jul 2005 08:54:02 +0100"/>
                            <attachment id="12310946" name="derby-388_v3.patch" size="1334" author="army" created="Sat, 25 Jun 2005 03:21:49 +0100"/>
                            <attachment id="12310913" name="go.java" size="3967" author="army" created="Thu, 23 Jun 2005 18:04:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Jun 2005 03:54:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21927</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy15rj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40584</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>