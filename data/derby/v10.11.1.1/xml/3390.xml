<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:47:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3390/DERBY-3390.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3390] SQLException thrown from user function kills network connection</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3390</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Thanks to Frank Griffin for pointing out this issue in a derby-dev email thread: &lt;a href=&quot;http://www.nabble.com/SQLException-thrown-from-Table-Function-ResultSet-to15241332.html#a15241332&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/SQLException-thrown-from-Table-Function-ResultSet-to15241332.html#a15241332&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If a user-coded function throws a SQLException, Derby will try to cast the exception to a Derby exception class before shipping the exception to the network client. This raises a ClassCastException and kills the connection. I have observed this in 10.4, 10.3, 10.2, and 10.1. You can reproduce this problem with the following function class and sql script.&lt;/p&gt;

&lt;p&gt;The function class:&lt;/p&gt;

&lt;p&gt;import java.sql.*;&lt;/p&gt;

&lt;p&gt;public  class   BadFunction&lt;br/&gt;
{&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&amp;lt;p&amp;gt;&lt;/li&gt;
	&lt;li&gt;This function just throws a SQLException.&lt;/li&gt;
	&lt;li&gt;&amp;lt;/p&amp;gt;&lt;br/&gt;
     */&lt;br/&gt;
    public  static  int badFunction()&lt;br/&gt;
        throws SQLException
    {
        throw new SQLException( &quot;I refuse to return an int!&quot; );
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Here is the SQL script:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby://localhost:8246/derby10.4&apos;;&lt;/p&gt;

&lt;p&gt;drop function badFunction;&lt;/p&gt;

&lt;p&gt;create function badFunction()&lt;br/&gt;
returns int&lt;br/&gt;
language java&lt;br/&gt;
parameter style java&lt;br/&gt;
no sql&lt;br/&gt;
external name &apos;BadFunction.badFunction&apos;&lt;br/&gt;
;&lt;/p&gt;

&lt;p&gt;values ( badFunction() );&lt;/p&gt;

&lt;p&gt;values ( badFunction() );&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387873">DERBY-3390</key>
            <summary>SQLException thrown from user function kills network connection</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Feb 2008 14:40:20 +0000</created>
                <updated>Tue, 13 Jul 2010 20:20:08 +0100</updated>
                            <resolved>Wed, 1 Oct 2008 23:08:49 +0100</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12594999" author="kmarsden" created="Wed, 7 May 2008 19:47:36 +0100"  >&lt;p&gt;Unchecking newcomer. I think this might be a bit more complicated than I first thought.  When sending an SQLException back to the client the expectation is that the client can then make  a stored procedure call to localize the exception.  There is not really a way to send back an exception which should not be localized.&lt;/p&gt;</comment>
                            <comment id="12634244" author="myrna" created="Wed, 24 Sep 2008 19:28:25 +0100"  >&lt;p&gt;I&apos;m attaching 2 patches for this.&lt;br/&gt;
The first patch I&apos;ve run suites.All and derbynetclientmats for. the second one I&apos;ll do so shortly...&lt;/p&gt;

&lt;p&gt;The two approaches are:&lt;br/&gt;
a.  don&apos;t cast if the SQLException inside the EmbedSQLException is not also an EmbedSQLException.&lt;br/&gt;
b. if the SQLException inside the EmbedSQLException is not also an EmbedSQLException don&apos;t cast, but also check to see if the SQLException has an SQLState. If so, add (SQLState: #####) to the error message before wrapping in the 38000 error.&lt;/p&gt;

&lt;p&gt;The original test case description throws an SQLException without SQLState, I modified the test case a little to throw this:&lt;br/&gt;
        throw new SQLException( &quot;I refuse to return an int!&quot;, &quot;5000&quot; ); &lt;/p&gt;

&lt;p&gt;The output of this with the patches is:&lt;br/&gt;
output with patch a:&lt;br/&gt;
ij&amp;gt; drop function badFunction;&lt;br/&gt;
ERROR 42Y55: &apos;DROP FUNCTION&apos; cannot be performed on &apos;BADFUNCTION&apos; because it does not exist.&lt;br/&gt;
ij&amp;gt; create function badFunction()&lt;br/&gt;
&amp;gt; returns int&lt;br/&gt;
&amp;gt; language java&lt;br/&gt;
&amp;gt; parameter style java&lt;br/&gt;
&amp;gt; no sql&lt;br/&gt;
&amp;gt; external name &apos;BadFunction.badFunction&apos; ;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; values badfunction();&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: I refuse to return an int!&apos; was thrown while evaluating an expression.&lt;br/&gt;
ij&amp;gt; disconnect;&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;output with patch b:&lt;br/&gt;
ij&amp;gt; drop function badFunction;&lt;br/&gt;
ERROR 42Y55: &apos;DROP FUNCTION&apos; cannot be performed on &apos;BADFUNCTION&apos; because it does not exist.&lt;br/&gt;
ij&amp;gt; create function badFunction()&lt;br/&gt;
&amp;gt; returns int&lt;br/&gt;
&amp;gt; language java&lt;br/&gt;
&amp;gt; parameter style java&lt;br/&gt;
&amp;gt; no sql&lt;br/&gt;
&amp;gt; external name &apos;BadFunction.badFunction&apos; ;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; values badfunction();&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: I refuse to return an int! (SQLState: 5000)&apos; was thrown while evaluating an expression.&lt;br/&gt;
ij&amp;gt; disconnect;&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;Is the saving of the possible SQLState worth the extra code, or is it even necessary at all? Or just distracting? If ok, is the approach of adding (SQLState: ...) ok? &lt;/p&gt;</comment>
                            <comment id="12634263" author="myrna" created="Wed, 24 Sep 2008 20:32:50 +0100"  >&lt;p&gt;for reference, this is what embedded returns:&lt;br/&gt;
ij&amp;gt; values badFunction();&lt;br/&gt;
1&lt;br/&gt;
-----------&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: I refuse to return an int!&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR 5000: I refuse to return an int!&lt;/p&gt;
</comment>
                            <comment id="12636108" author="myrna" created="Wed, 1 Oct 2008 18:54:26 +0100"  >&lt;p&gt;Attaching patch _c, which manages to get the thrown SQLException back to the client as an SQLException, by basically moving the cast to EmbedSQLException to within the method buildTokenizedSqlerrmc and there, if it&apos;s not an EmbedSQLException, do something more along the lines of the method buildPreformattedSqlerrmc.&lt;/p&gt;

&lt;p&gt;This however showed some strange behavior in the message: &lt;br/&gt;
1. if the SQLState was shorter than the required 5 characters, or the constructor without SQLState was not used, some characters got nibbled off the front of the message text.&lt;br/&gt;
   This was addressed by checking for the separating &apos;:&apos; that&apos;s gotten appended to the sqlstate in org.apache.derby.client.am.Sqlca.&lt;br/&gt;
2. the SQLExceptions got an additional &apos;:&apos; at the end.&lt;br/&gt;
   Turned out this was not new, for instance the derbyall test lang/GetPropertyInfoTest.java shows the same behavior for the missing messages J029 and J030. &lt;br/&gt;
   It appears from the code in org.apache.derby.iapi.services.i18n.MessageService.MessageFormat() that this is done in anticipation of printing the arguments. So, I modified that to only print the &apos;:&apos; when there are arguments.&lt;/p&gt;

&lt;p&gt;I think this solution is reasonable. The output of the test case now becomes:&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: I refuse to return an int!&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR null: I refuse to return an int!&lt;/p&gt;

&lt;p&gt;(and with SQLException constructor with SQLState of e.g. 5000 (whether that&apos;s a good value or not):&lt;br/&gt;
ERROR 38000: The exception &apos;java.sql.SQLException: I refuse to return an int!&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR 5000: I refuse to return an int!)&lt;/p&gt;

&lt;p&gt;It&apos;s not exactly like Embedded, but closer to it, and does address the ClassCastExceptions.&lt;br/&gt;
I plan to commit this soonish.&lt;/p&gt;</comment>
                            <comment id="12636141" author="kmarsden" created="Wed, 1 Oct 2008 20:50:12 +0100"  >&lt;p&gt;I didn&apos;t apply the patch but looked at the diff. It looks good except for a couple of nits in the test.&lt;br/&gt;
There is a comment that probably should be removed.&lt;br/&gt;
// Test test = TestConfiguration.embeddedSuite(SqlExceptionTest.class);&lt;/p&gt;

&lt;p&gt;Also in the tests you catch an Exception rather than an SQLException.  If a non SQLException is thrown we will get a Cast exception when it tries to cast to SQLException.&lt;/p&gt;

&lt;p&gt;Thanks Myrna for fixing this bug!&lt;/p&gt;
</comment>
                            <comment id="12636204" author="myrna" created="Wed, 1 Oct 2008 23:08:49 +0100"  >&lt;p&gt;I committed patch _c after taking care of Kathey&apos;s comments on the test case, with revision 700948.&lt;/p&gt;</comment>
                            <comment id="12636380" author="knutanders" created="Thu, 2 Oct 2008 16:55:45 +0100"  >&lt;p&gt;One small comment: The javadoc comment for DRDAConnThread.buildTokenizedSqlerrmc() says that it&apos;s &quot;for a Derby SQLException&quot;, which is not necessarily true anymore. It would be good to mention that it could also be used for SQLExceptions thrown by user code.&lt;/p&gt;</comment>
                            <comment id="12636410" author="myrna" created="Thu, 2 Oct 2008 18:55:17 +0100"  >&lt;p&gt;I updated the javadoc with revision 701199.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12390859" name="DERBY-3390_a.diff" size="956" author="myrna" created="Wed, 24 Sep 2008 19:28:25 +0100"/>
                            <attachment id="12390860" name="DERBY-3390_b.diff" size="1672" author="myrna" created="Wed, 24 Sep 2008 19:28:25 +0100"/>
                            <attachment id="12391298" name="DERBY-3390_c.diff" size="11722" author="myrna" created="Wed, 1 Oct 2008 18:54:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 7 May 2008 18:47:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23614</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0pgv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37944</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>