<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3975/DERBY-3975.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3975] SELECT DISTINCT may return duplicates with territory-based collation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3975</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I defined my own locale (en_US_aisb) where the collation rules said that a=b. When I tried queries with SELECT DISTINCT, they didn&apos;t always eliminate all duplicates. Here&apos;s an example:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:db;create=true;territory=en_US_aisb;collation=TERRITORY_BASED&apos;;&lt;br/&gt;
ij&amp;gt; create table t (x varchar(10));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values &apos;a&apos;,&apos;b&apos;,&apos;abba&apos;,&apos;baab&apos;,&apos;ABBA&apos;;&lt;br/&gt;
5 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select distinct * from t;&lt;br/&gt;
X         &lt;br/&gt;
----------&lt;br/&gt;
ABBA      &lt;br/&gt;
b         &lt;br/&gt;
a         &lt;br/&gt;
abba      &lt;/p&gt;

&lt;p&gt;4 rows selected&lt;br/&gt;
ij&amp;gt; select distinct * from t order by x;&lt;br/&gt;
X         &lt;br/&gt;
----------&lt;br/&gt;
a         &lt;br/&gt;
abba      &lt;br/&gt;
ABBA      &lt;/p&gt;

&lt;p&gt;3 rows selected&lt;/p&gt;

&lt;p&gt;The first query did eliminate the duplicate &quot;abba&quot;/&quot;baab&quot;, but it did not eliminate the duplicate &quot;a&quot;/&quot;b&quot;. When an ORDER BY clause was added (the second query), all the duplicates were eliminated.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12410089">DERBY-3975</key>
            <summary>SELECT DISTINCT may return duplicates with territory-based collation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 Dec 2008 16:37:06 +0000</created>
                <updated>Mon, 4 May 2009 19:22:37 +0100</updated>
                            <resolved>Fri, 9 Jan 2009 17:41:15 +0000</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.2.0</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12653861" author="knutanders" created="Fri, 5 Dec 2008 16:48:43 +0000"  >&lt;p&gt;Here&apos;s the CollatorProvider I used to define the locale. To use it, do the following:&lt;/p&gt;

&lt;p&gt;$ mkdir -p META-INF/services&lt;br/&gt;
$ javac AisBCollatorProvider.java&lt;br/&gt;
$ echo AisBCollatorProvider &amp;gt; META-INF/services/java.text.spi.CollatorProvider&lt;br/&gt;
$ jar cf aisb-collator.jar AisBCollatorProvider.class META-INF&lt;br/&gt;
$ java -Djava.ext.dirs=. -jar /path/to/derbyrun.jar ij&lt;/p&gt;</comment>
                            <comment id="12654469" author="knutanders" created="Mon, 8 Dec 2008 17:16:40 +0000"  >&lt;p&gt;Just a guess, but I think the problem might be that o.a.d.iapi.types.CollatorSQLVarchar doesn&apos;t override SQLChar.hashCode().&lt;/p&gt;

&lt;p&gt;The reason why the abba/baab duplicate was removed, is that SQLChar.hashCode() just adds up the char values ignoring the positions, so the two strings have the same hash code because they contain the exact same characters (though in different order). Not necessary for this issue, but it would probably be better to calculate with a formula similar to the one described here &amp;lt;URL:&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/String.html#hashCode(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/javase/6/docs/api/java/lang/String.html#hashCode(&lt;/a&gt;)&amp;gt;. Just adding the char values will give a poor distribution and the higher bits won&apos;t be used unless the string is very long.&lt;/p&gt;</comment>
                            <comment id="12654806" author="knutanders" created="Tue, 9 Dec 2008 14:26:38 +0000"  >&lt;p&gt;Fixing this is probably as simple as overloading hashCode() in the CollatorSQL* classes with this implementation (perhaps with some special handling of null):&lt;/p&gt;

&lt;p&gt;public int hashCode() &lt;/p&gt;
{
    return getCollationKey().hashCode();
}

&lt;p&gt;The CollatorSQL* classes use CollationKey.compareTo() to implement Comparable.compareTo() and Object.equals(), so using CollationKey.hashCode() should give the required consistency between compareTo(), equals() and hashCode().&lt;/p&gt;</comment>
                            <comment id="12654807" author="bryanpendleton" created="Tue, 9 Dec 2008 14:30:09 +0000"  >&lt;p&gt;What are the upgrade implications of changing the hash code implementations of a data type?&lt;/p&gt;</comment>
                            <comment id="12654810" author="knutanders" created="Tue, 9 Dec 2008 14:37:17 +0000"  >&lt;p&gt;I don&apos;t think we store the hash values anywhere, so to my knowledge they just have to be consistent within the lifetime of the JVM. The only place I know that the hash values will go to disk, is when a BackingStoreHashtable spills to disk, but that&apos;s just in a temporary file that will be deleted on the next boot, as far as I know.&lt;/p&gt;</comment>
                            <comment id="12657208" author="knutanders" created="Tue, 16 Dec 2008 22:54:31 +0000"  >&lt;p&gt;The attached patch attempts to fix the problem by implementing a hashCode() method in CollatorSQLChar, CollatorSQLVarchar, CollatorSQLLongvarchar and CollatorSQLClob based on CollationKey.hashCode(). It also extends CollationTest.compareAgrave() with a test case for SELECT DISTINCT, and makes it test both CHAR and VARCHAR (previously it only tested VARCHAR). CollationTest fails without the fix and passes with the fix. The test is based on the fact that in the French locale, &#192; (Unicode code point 00C0) is the same as A&#768; (&apos;A&apos; + Unicode code point 0300), whereas they are different in UCS_BASIC.&lt;/p&gt;

&lt;p&gt;I will start the regression tests now.&lt;/p&gt;</comment>
                            <comment id="12657306" author="knutanders" created="Wed, 17 Dec 2008 07:11:50 +0000"  >&lt;p&gt;All the regression tests passed.&lt;/p&gt;</comment>
                            <comment id="12657373" author="knutanders" created="Wed, 17 Dec 2008 13:06:30 +0000"  >&lt;p&gt;One thing I forgot to mention in the description of the patch:&lt;/p&gt;

&lt;p&gt;The patch changes the hashCode() implementation in CollatorSQL&lt;/p&gt;
{Char,Varchar,Longvarchar,Clob}
&lt;p&gt;, but it only tests CHAR and VARCHAR. That&apos;s because LONG VARCHAR and CLOB columns cannot be used in distinct queries without casting them to another data type first, and since you cannot compare two such columns with =, you cannot perform a hash join to test it either. I&apos;m not aware of any other code than distinct scans and hash scans that will ever call the hashCode() methods of these objects, so I don&apos;t know of any way to test those two data types.&lt;/p&gt;</comment>
                            <comment id="12658714" author="knutanders" created="Mon, 22 Dec 2008 23:23:18 +0000"  >&lt;p&gt;Committed revision 728822.&lt;/p&gt;

&lt;p&gt;I&apos;ll keep the issue open until the fix has been back-ported to 10.4 and 10.3.&lt;/p&gt;</comment>
                            <comment id="12659840" author="knutanders" created="Tue, 30 Dec 2008 16:24:15 +0000"  >&lt;p&gt;Merged the fix to the 10.4 branch and committed revision 730163.&lt;/p&gt;

&lt;p&gt;The patch didn&apos;t merge cleanly to 10.3 because of conflicts in CollationTest. If someone wants to do the manual back-port to 10.3, we can reopen the issue later, but I&apos;m marking it as resolved and closing it for now.&lt;/p&gt;</comment>
                            <comment id="12662440" author="mamtas" created="Fri, 9 Jan 2009 17:38:49 +0000"  >&lt;p&gt;Reopening the issue to merge the changes into 10.3 codeline&lt;/p&gt;</comment>
                            <comment id="12662442" author="mamtas" created="Fri, 9 Jan 2009 17:41:15 +0000"  >&lt;p&gt;Merged the fix to the 10.3 branch(had to do some manual tweaking to the CollationTest) and committed revision 733094. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12395433" name="AisBCollatorProvider.java" size="548" author="knutanders" created="Fri, 5 Dec 2008 16:48:43 +0000"/>
                            <attachment id="12396251" name="derby-3975-1a.diff" size="8423" author="knutanders" created="Tue, 16 Dec 2008 22:54:31 +0000"/>
                            <attachment id="12396252" name="derby-3975-1a.stat" size="430" author="knutanders" created="Tue, 16 Dec 2008 22:54:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Dec 2008 14:30:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23952</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0xhj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39243</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>