<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1001/DERBY-1001.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1001] Rewrite &apos;store/encryptionKey.sql&apos; to a JUnit test</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1001</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This test has failed on Solaris10 for a long time, due to issues with the default security provider on this OS. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-788&quot; title=&quot;&amp;#39;store/encryptionKey.sql&amp;#39; fails on Solaris 10&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-788&quot;&gt;&lt;del&gt;DERBY-788&lt;/del&gt;&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;I consider rewriting this test as interresting because it allows us to see how things can be done in &quot;the JUnit way&quot;. &lt;/p&gt;

&lt;p&gt;1) Run test with multiple encryption algorithms with minimal test code duplication.&lt;br/&gt;
2) Special handling of exceptions for specific providers (PCKS11-Solaris).&lt;/p&gt;

&lt;p&gt;The rewritten test might cause some discussion on how we want to handle the issues mentioned above.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12329112">DERBY-1001</key>
            <summary>Rewrite &apos;store/encryptionKey.sql&apos; to a JUnit test</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Feb 2006 22:32:49 +0000</created>
                <updated>Wed, 1 Jul 2009 01:04:54 +0100</updated>
                            <resolved>Wed, 16 May 2007 08:41:05 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12439811" author="kristwaa" created="Wed, 4 Oct 2006 12:59:22 +0100"  >&lt;p&gt;I have rewritten the test to JUnit, but have problems with the file permissions.&lt;br/&gt;
As far as I can see,  the offending call is made from JUnit, propagates through derby.jar and fails with this stack trace:&lt;br/&gt;
1) testRestoreFrom(org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyDESTest)java.security.AccessControlException: access denied (java.io.FilePermission extinout/encryptionKeyDBToRestoreFrom read)&lt;br/&gt;
        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:264)&lt;br/&gt;
        at java.security.AccessController.checkPermission(AccessController.java:427)&lt;br/&gt;
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)&lt;br/&gt;
        at java.lang.SecurityManager.checkRead(SecurityManager.java:871)&lt;br/&gt;
        at java.io.File.exists(File.java:700)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.StorageFactoryService.recreateServiceRoot(StorageFactoryService.java:579)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.StorageFactoryService.getServiceProperties(StorageFactoryService.java:252)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1544)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:991)&lt;br/&gt;
        at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:542)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:1632)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Driver30.java:74)&lt;br/&gt;
        at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:210)&lt;br/&gt;
        at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:117)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:525)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:171)&lt;br/&gt;
        at org.apache.derbyTesting.junit.TestConfiguration.getConnection(TestConfiguration.java:456)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.getConnection(BaseJDBCTestCase.java:236)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.testRestoreFrom(EncryptionKeyTest.java:166)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76)&lt;/p&gt;

&lt;p&gt;The exception is thrown both when running as JUnit standalone and through the test harness.&lt;/p&gt;

&lt;p&gt;What is the correct solution to this problem?&lt;br/&gt;
 a) Add read permission to all for $&lt;/p&gt;
{user.dir}
&lt;p&gt;$&lt;/p&gt;
{/}extinout${/}
&lt;p&gt;-&lt;br/&gt;
    Added to all to include junit.jar, since it can be anywhere on the system.&lt;br/&gt;
 b) Wrap relevant file operations derby.jar in doPrivileged.&lt;br/&gt;
 c) Would it be possible to wrap &quot;something&quot; inside a doPrivileged in derbyTesting.jar&lt;br/&gt;
 d) Other solutions?&lt;/p&gt;

&lt;p&gt;I think maybe b) is not the way to go, since the files Derby needs to read may be anywhere.&lt;br/&gt;
I lean towards considering this problem as a pure test problem, but I might have misunderstood.&lt;/p&gt;</comment>
                            <comment id="12441172" author="djd" created="Tue, 10 Oct 2006 16:55:58 +0100"  >&lt;p&gt;I would say b) is the correct solution. Any call in derby that could result in a security manager check/exception needs to be in a privileged block.&lt;/p&gt;

&lt;p&gt;However, I don&apos;t understand your concern to b) when you say &quot;since the files Derby needs to read may be anywhere&quot;.&lt;/p&gt;

&lt;p&gt;Could you explain more? Thanks.&lt;/p&gt;</comment>
                            <comment id="12442918" author="kristwaa" created="Tue, 17 Oct 2006 15:32:30 +0100"  >&lt;p&gt;I might be confused, so I&apos;ll write out my thoughts and people can&lt;br/&gt;
correct me.&lt;/p&gt;

&lt;p&gt;Since the path we need (read) access to is specified by the user in the&lt;br/&gt;
connection string, I thought these permissions should not be granted to&lt;br/&gt;
the Derby codebase, but rather for the application codebase using Derby.&lt;br/&gt;
This would mean the application would have to do a doPrivileged when&lt;br/&gt;
restoring/creating the database. &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; says: &quot;... the call to doPrivileged&lt;br/&gt;
should be made in the code that wants to enable its privileges.&quot; After&lt;br/&gt;
the connection has been made, Derby&apos;s &quot;core permissions&quot; should be&lt;br/&gt;
sufficient to ensure normal operation again.&lt;/p&gt;

&lt;p&gt;However, when running the network server, the approach mentioned above&lt;br/&gt;
will not work, and permissions to the backup locations would have to be&lt;br/&gt;
granted to derby.jar, not the application code. Then adding&lt;br/&gt;
doPrivileged-blocks to the derby.jar codebase is reasonable.&lt;/p&gt;

&lt;p&gt;I think also I forgot that our policy file is just an example and for a&lt;br/&gt;
specific use (for instance running the tests). For a concrete&lt;br/&gt;
deployment, the user/administrator must add the proper permissions.  The&lt;br/&gt;
fact that Derby was able to write the backup, but not read it, must be&lt;br/&gt;
attributed to more extensive usage of doPrivileged-blocks in one code&lt;br/&gt;
path over the other.  I suppose the default policy file and the tests&lt;br/&gt;
must be written to be compatible with each other, and I think they will&lt;br/&gt;
be if we add more doPrivileged-blocks.&lt;/p&gt;


&lt;p&gt;My initial concern was why other actions in the area are wrapped in&lt;br/&gt;
doPrivileged-blocks, while the backupRoot.exists() is not. Thought there&lt;br/&gt;
could be was a reason for that.&lt;/p&gt;

&lt;p&gt;Does this make any sense?&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/guide/security/doprivileged.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/guide/security/doprivileged.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12488092" author="kristwaa" created="Wed, 11 Apr 2007 15:32:32 +0100"  >&lt;p&gt;I have attached a preliminary patch for the JUnit test (&apos;derby-1001-1a-preliminary.diff&apos;).&lt;br/&gt;
Review is appreciated, and I also have the following questions/observations:&lt;/p&gt;

&lt;p&gt; 1) I&apos;m considering ditching the subclassing approach and instead create multiple suites in EncryptionKeyTest.suite for the various encryption algorithms.&lt;br/&gt;
 2) How many encryption algorithms/variations should we test?&lt;br/&gt;
     (currently one run takes around 12 seconds on my machine)&lt;br/&gt;
 3) Is the getLastSQLException-approch acceptable?&lt;br/&gt;
 4) Error reporting still seems to be kind of broken. Exceptions from the security provider do not show in JUnit/general, but they do appear in derby.log.&lt;br/&gt;
 5) I have implemented a solution for the security manager issues that is not in line with my own reasoning... (see previous comment). I hope to get away with creating two separate Jiras; one to add the doPrivileged-blocks in Derby, and one to update the test.&lt;/p&gt;

&lt;p&gt;I also need to remove the old test, and to wire the new one into a suite. These changes and feedback will be incorporated into the second patch that supersedes 1a.&lt;/p&gt;</comment>
                            <comment id="12488093" author="kristwaa" created="Wed, 11 Apr 2007 15:34:30 +0100"  >&lt;p&gt;Forgot to ask if there are any important test cases I have missed...&lt;/p&gt;</comment>
                            <comment id="12490125" author="kmarsden" created="Thu, 19 Apr 2007 18:58:20 +0100"  >&lt;p&gt;I am having trouble running these tests on Windows XP using eclipse I get errors starting the database and also &lt;br/&gt;
java.sql.SQLException: Startup failed due to missing functionality for org.apache.derby.iapi.services.crypto.CipherFactoryBuilder. Please ensure your classpath includes the correct Derby software.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:305)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.missingImplementation(Monitor.java:656)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:283)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:546)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startSystemModule(Monitor.java:366)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.setupEncryptionEngines(RawStore.java:1183)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:204)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1994)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:546)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:419)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:985)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1994)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:546)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:419)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:753)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:188)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1994)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1829)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentService(BaseMonitor.java:1017)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.createPersistentService(Monitor.java:588)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:1750)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:281)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Driver30.java:74)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:209)&lt;br/&gt;
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:479)&lt;br/&gt;
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:423)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.getConnection(EncryptionKeyTest.java:564)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.getConnection(EncryptionKeyTest.java:476)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.testCreateWithOddEncryptionKeyLength(EncryptionKeyTest.java:385)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:391)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:88)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;


&lt;p&gt;Is there some special setup I need to do to run these tests?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12490141" author="kristwaa" created="Thu, 19 Apr 2007 19:58:37 +0100"  >&lt;p&gt;Nothing special should be required to run the test, but you do need to have the necessary encryption software. With a recent JVM you should be good to go, but I have only tested with Sun JVMs.&lt;br/&gt;
What JVM did you run with?&lt;/p&gt;

&lt;p&gt;I was able to run the test(s) on Windows XP, both under Cygwin and at the command prompt (cmd.exe). I used the Java SE 6 platform.&lt;br/&gt;
I know nothing about Eclipse, so I can&apos;t say whether running in it would make any difference.&lt;/p&gt;</comment>
                            <comment id="12491111" author="skambha" created="Tue, 24 Apr 2007 02:29:49 +0100"  >&lt;p&gt;Each of the tests- EncryptionKeyDESTest  and the EncryptionKeyAESTest require a clean testrun directory.. &lt;/p&gt;

&lt;p&gt;I ran the EncryptionKeyDESTest and then cleaned up my testrun directory and then ran the AES test and it worked  OK  in Eclipse as well as on command prompt. I was using 1.4.2 Sun JVM.&lt;/p&gt;

&lt;p&gt;kristian&amp;gt; 2) How many encryption algorithms/variations should we test? &lt;br/&gt;
How about  the algorithms that we test in EncryptionSuite.   It would be interesting to see how much time the tests would take in this case..  &lt;/p&gt;

&lt;p&gt;I just took a quick look at the suite() methods in the DES and AES test and was wondering why they were different..  In one, there is the SupportFilesSetup decorator but in AES test that is not used..  &lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12493109" author="kristwaa" created="Wed, 2 May 2007 15:19:21 +0100"  >&lt;p&gt;Thanks Kathey and Sunitha for looking at the patch.&lt;br/&gt;
It is not yet finished, but I will upload another version shortly.&lt;/p&gt;

&lt;p&gt;Regarding the comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I considered deleting the database directories, but couldn&apos;t find a utility to do so. There is one in the org...junit package, but it is package private. I&apos;ll look into adding the functionality, or maybe move the &quot;deleteDirectory&quot;-method to a public utility class.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Looking at the EncryptionSuite, I see we currently test three different algorithms. I&apos;ll add a test for each (DES, AES and Blowfish). I&apos;m not sure if it is worth testing all the different variations (feedback mode, padding). Any opinions on this in the community?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;We should test a streaming cipher (RC4/ARCFOUR), but Derby does not currently handle this (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2552&quot; title=&quot;Specifying a streaming cipher for data encryption causes java.lang.ArithmeticException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2552&quot;&gt;DERBY-2552&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;That the suites-methods are different is a bug. I&apos;ll fix them in the next patch.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;regards,&lt;/p&gt;</comment>
                            <comment id="12493701" author="kristwaa" created="Fri, 4 May 2007 15:21:45 +0100"  >&lt;p&gt;Attached &apos;derby-1001-2a.diff&apos; for review/commit.&lt;/p&gt;

&lt;p&gt;I made the test rely on SupportFileSetup for cleaning up all the databases (deleting them), and added subclasses for three algorithms; AES, DES, Blowfish. I have no plans for adding more algorithms or variations atm. A run of store._Suite takes around 30 seconds on my machine.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit the patch next week unless I get pushback.&lt;/p&gt;</comment>
                            <comment id="12494245" author="kristwaa" created="Tue, 8 May 2007 11:51:02 +0100"  >&lt;p&gt;Committed &apos;derby-1001-2a.diff&apos; to trunk with revision 536156.&lt;/p&gt;

&lt;p&gt;Three different algorithms are currently tested: AES, DES and Blowfish.&lt;br/&gt;
Streaming ciphers do not currently work with Derby.&lt;/p&gt;</comment>
                            <comment id="12494371" author="myrna" created="Tue, 8 May 2007 19:47:58 +0100"  >&lt;p&gt;test fails in tinderbox:&lt;br/&gt;
see: &lt;a href=&quot;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-536200.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-536200.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;org.apache.derbyTesting.functionTests.suites.All fail *************************************************************&lt;br/&gt;
1) testBackupEncryptedDatabase(org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyAESTest)java.sql.SQLException: The exception &apos;java.security.AccessControlException: access denied (java.io.FilePermission extout read)&apos; was thrown while evaluating an expression.&lt;br/&gt;
1) testBackupEncryptedDatabase(org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyBlowfishTest)junit.framework.AssertionFailedError: Refusing to continue, database already exists &amp;lt;Database &apos;/export/home/tmp/os136789/testingDerbyTinderBox/SunOS-5.10_i86pc-i386/org.apache.derbyTesting.functionTests.suites.All/extinout/encryptionKeyDBToBackup&apos; not created, connection made to existing database instead.&amp;gt;&lt;br/&gt;
2) testBackupEncryptedDatabase(org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyDESTest)junit.framework.AssertionFailedError: Refusing to continue, database already exists &amp;lt;Database &apos;/export/home/tmp/os136789/testingDerbyTinderBox/SunOS-5.10_i86pc-i386/org.apache.derbyTesting.functionTests.suites.All/extinout/encryptionKeyDBToBackup&apos; not created, connection made to existing database instead.&amp;gt;&lt;/p&gt;

&lt;p&gt;Maybe the test needs to use singleUseDatabaseConfiguration ?&lt;/p&gt;</comment>
                            <comment id="12494555" author="kristwaa" created="Wed, 9 May 2007 20:03:33 +0100"  >&lt;p&gt;Attached fix for the failing test. It is not quite clear to me if Derby actively needs read permissions for the directory to backup to, or if it is required as part of some other file system operation (e.g. create dir). Putting the backup in EXTINOUT instead of EXTOUT fixes the problem.&lt;/p&gt;

&lt;p&gt;I will investigate the issue a little more later, and I will also update the comments in the file accordingly (class JavaDoc) when the fix is verified. It also not clear to me why the test fails when running suites.All, but not individually or as part of store/_Suite.&lt;/p&gt;

&lt;p&gt;Committed &apos;derby-1001-3a-fixtestfailure.diff&apos; to trunk with revision 536621.&lt;/p&gt;</comment>
                            <comment id="12496217" author="kristwaa" created="Wed, 16 May 2007 08:41:05 +0100"  >&lt;p&gt;Closing issue. Problems running the test on other platforms/configurations should be filed in a separate Jira.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12367374">DERBY-2556</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12327170">DERBY-788</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12355338" name="derby-1001-1a-preliminary.diff" size="33061" author="kristwaa" created="Wed, 11 Apr 2007 15:32:32 +0100"/>
                            <attachment id="12355339" name="derby-1001-1a-preliminary.stat" size="520" author="kristwaa" created="Wed, 11 Apr 2007 15:32:32 +0100"/>
                            <attachment id="12356783" name="derby-1001-2a.diff" size="44244" author="kristwaa" created="Fri, 4 May 2007 15:21:45 +0100"/>
                            <attachment id="12356784" name="derby-1001-2a.stat" size="807" author="kristwaa" created="Fri, 4 May 2007 15:21:45 +0100"/>
                            <attachment id="12356991" name="derby-1001-3a-fixtestfailure.diff" size="765" author="kristwaa" created="Wed, 9 May 2007 20:03:33 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12367371">DERBY-2555</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Oct 2006 15:55:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29812</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38638</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>