<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4312/DERBY-4312.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4312] SQLException XJ215 on insert  with setCharacterStream() and autocommit off in mailjdbc test</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4312</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>
&lt;p&gt;I am running the 10.5 maildbc test on Linux with network server and the 10.5.2.0 release candidate and an updated derbyTesting.jar to have just  Lily&apos;s change to change the backup user:  I see in the test output early and often, this error inserting data into the table:&lt;/p&gt;


&lt;p&gt;SQLState:   XJ215&lt;br/&gt;
Severity: 20000&lt;br/&gt;
Message:  You cannot invoke other java.sql.Clob/java.sql.Blob methods after calling the free() method or after&lt;br/&gt;
Clob&apos;s transaction has been committed or rolled back.&lt;br/&gt;
java.sql.SQLException: You cannot invoke other java.sql.Clob/java.sql.Blob methods after calling the free() m&lt;br/&gt;
ter the Blob/Clob&apos;s transaction has been committed or rolled back.&lt;br/&gt;
       at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.Lob.checkValidity(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.Clob.length(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.net.NetStatementRequest.computeProtocolTypesAndLengths(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.net.NetStatementRequest.buildSQLDTAcommandData(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.net.NetStatementRequest.writeExecute(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.net.NetPreparedStatement.writeExecute_(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.PreparedStatement.writeExecute(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.PreparedStatement.executeUpdateX(Unknown Source)&lt;br/&gt;
       at org.apache.derby.client.am.PreparedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
       at org.apache.derbyTesting.system.mailjdbc.utils.DbTasks.insertMail(DbTasks.java:447)&lt;br/&gt;
       at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.insertMail(Refresh.java:99)&lt;br/&gt;
       at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.doWork(Refresh.java:75)&lt;br/&gt;
       at org.apache.derbyTesting.system.mailjdbc.tasks.Refresh.run(Refresh.java:51)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: You cannot invoke other java.sql.Clob/java.sql.Blob metho&lt;br/&gt;
lling the free() method or after the Blob/Clob&apos;s transaction has been committed or rolled back.&lt;/p&gt;

&lt;p&gt;The interesting thing is that the test itself is not using any Clob methods it uses setCharacterStream and also autocommit is off.&lt;br/&gt;
Below is a code excerpt and&lt;br/&gt;
       conn.setAutoCommit(false);&lt;br/&gt;
           PreparedStatement insertFirst = conn.prepareStatement(&lt;br/&gt;
                   Statements.insertStr, Statement.RETURN_GENERATED_KEYS);&lt;br/&gt;
           String name = new String(&quot;ABCD&quot;);&lt;br/&gt;
           String l_name = new String(&quot;WXYZ&quot;);&lt;br/&gt;
           long s_insert = System.currentTimeMillis();&lt;br/&gt;
           for (int i = 0; i &amp;lt; num; i++) {&lt;br/&gt;
               String new_name = new String(increment(name, 60));&lt;br/&gt;
               String new_lname = new String(decrement(l_name, 60));&lt;br/&gt;
               insertFirst.setString(1, new_name);&lt;br/&gt;
               insertFirst.setString(2, new_lname);&lt;br/&gt;
               insertFirst.setTimestamp(3, new Timestamp(System&lt;br/&gt;
                       .currentTimeMillis()));&lt;br/&gt;
               name = new_name;&lt;br/&gt;
               l_name = new_lname;&lt;br/&gt;
               try &lt;/p&gt;
{
                   // to create a stream of random length between 200 bytes and 3MB
                   int clobLength = Rn.nextInt(3078000 - 200 + 1) + 200;
                   streamReader = new LoopingAlphabetReader(clobLength,
                           CharAlphabet.modernLatinLowercase());
                   insertFirst.setCharacterStream(4, streamReader, clobLength);
               }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
                   MailJdbc.logAct.logMsg(LogFile.ERROR + thread_name + &quot; : &quot;
                           + &quot;File not found Exception : &quot; + e.getMessage());
                   errorPrint(e);
                   throw e;
               }
&lt;p&gt;               int rand_num = Rn.nextInt(10 - 1);&lt;br/&gt;
               if (i == rand_num) {&lt;br/&gt;
                   ResultSet rs = stmt&lt;br/&gt;
                           .executeQuery(&quot;select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from REFRESH.INBOX where attach_id&amp;gt;0&quot;);&lt;br/&gt;
                   while (rs.next()) &lt;/p&gt;
{
                       id_count = rs.getInt(1);
                       insertFirst.setInt(5, rs.getInt(1) + 1);
                   }

&lt;p&gt;                   rs.close();&lt;br/&gt;
                   conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);&lt;br/&gt;
               } else&lt;br/&gt;
                   insertFirst.setInt(5, 0);&lt;br/&gt;
               insertFirst&lt;br/&gt;
                       .setString(&lt;br/&gt;
                               6,&lt;br/&gt;
                               &quot;This column is used only to by pass the space problem. If the problem still exists, then we are going to &quot;&lt;br/&gt;
                                       + &quot;have a serious issue here.*****************************************************************************************************&quot;);&lt;br/&gt;
               int result = insertFirst.executeUpdate();&lt;/p&gt;


&lt;p&gt;if I connect with ij I do see some rows in the INBOX, so some inserts do seem to be happening. &lt;/p&gt;


&lt;p&gt;Kristian pointed out that this looks similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4224&quot; title=&quot;Commit after setAsciiStream() makes execution fail with the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4224&quot;&gt;&lt;del&gt;DERBY-4224&lt;/del&gt;&lt;/a&gt; with setAsciiStream() but this looks far more  serious as autocommit is off and there does not appear to be a commit, so there is no obvious workaround.  I assume this is also a regression.  We shouldn&apos;t be throwing this error if the user did not use any Clob methods.   I will try to narrow down the reproduction and track down where the issue was introduced. Knut said &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4224&quot; title=&quot;Commit after setAsciiStream() makes execution fail with the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4224&quot;&gt;&lt;del&gt;DERBY-4224&lt;/del&gt;&lt;/a&gt; goes all the way back to 10.3.1.4 with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-208&quot; title=&quot;Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-208&quot;&gt;&lt;del&gt;DERBY-208&lt;/del&gt;&lt;/a&gt;.  I don&apos;t know if it is the same case with this one.&lt;/p&gt;

</description>
                <environment>SuSE Linux IBM 1.6 SR4</environment>
        <key id="12430773">DERBY-4312</key>
            <summary>SQLException XJ215 on insert  with setCharacterStream() and autocommit off in mailjdbc test</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Jul 2009 14:02:32 +0100</created>
                <updated>Tue, 20 Apr 2010 14:24:06 +0100</updated>
                            <resolved>Wed, 22 Jul 2009 16:49:07 +0100</resolved>
                                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12732511" author="kmarsden" created="Fri, 17 Jul 2009 14:04:08 +0100"  >&lt;p&gt;This issue may be related to the implementation of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-208&quot; title=&quot;Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-208&quot;&gt;&lt;del&gt;DERBY-208&lt;/del&gt;&lt;/a&gt; which introduced use of Clob/Blob objects with setCharacterStream.&lt;/p&gt;
</comment>
                            <comment id="12732513" author="kmarsden" created="Fri, 17 Jul 2009 14:05:01 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4224&quot; title=&quot;Commit after setAsciiStream() makes execution fail with the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4224&quot;&gt;&lt;del&gt;DERBY-4224&lt;/del&gt;&lt;/a&gt; is a similar issue with setAsciiStream but in that case commit is required.&lt;/p&gt;</comment>
                            <comment id="12732524" author="myrna" created="Fri, 17 Jul 2009 14:38:24 +0100"  >&lt;p&gt;I checked and I still had the 10.5.1.1 results files cluttering up my disk...And the error is in there too...I had apparently assumed it was expected.&lt;/p&gt;

&lt;p&gt;Judging from the platform testing wiki pages, the mailjdbc test was not run with network server for either 10.3* nor 10.4*.&lt;/p&gt;</comment>
                            <comment id="12732530" author="kmarsden" created="Fri, 17 Jul 2009 14:49:55 +0100"  >&lt;p&gt;Attached is a reproduction for this issue outside of the maildbc test.&lt;br/&gt;
To reproduce&lt;br/&gt;
1) Start network server with java org.apache.derby.drda.NetworkServerControl start&lt;br/&gt;
2) Create the table java org.apache.derby.tools.ij create.sql&lt;br/&gt;
3) Run the program with &lt;br/&gt;
java ReproDerby4312&lt;/p&gt;

&lt;p&gt;It appears there is a commit occurring with:&lt;br/&gt;
conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);&lt;/p&gt;

&lt;p&gt;I had thought that setTransactionIsolation didn&apos;t commit if the isolation level remained the same, but I guess at least for network server it does.&lt;/p&gt;</comment>
                            <comment id="12732573" author="kmarsden" created="Fri, 17 Jul 2009 16:22:47 +0100"  >&lt;p&gt;The small test case passes with 10.4.1.3 and earlier and fails with 10.4.2.0 and later.  Hopefully, since  the offending change went in as part of a maintenance release it will be easier to deal with than the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-208&quot; title=&quot;Add support to retrieve lobs for Network Server by locator rather than matierializing the LOB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-208&quot;&gt;&lt;del&gt;DERBY-208&lt;/del&gt;&lt;/a&gt; side effect we suspected.  I will track down the exact change that caused the problem.&lt;/p&gt;</comment>
                            <comment id="12732597" author="kmarsden" created="Fri, 17 Jul 2009 17:46:27 +0100"  >&lt;p&gt;This issue was introduced with the fix for  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3574&quot; title=&quot;With client, attempting to get the lob length after commit  or connection close if there  was a call to length() before commit does not throw an exception&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3574&quot;&gt;&lt;del&gt;DERBY-3574&lt;/del&gt;&lt;/a&gt; which throws an error when lobs are accessed after commit.  Somehow we will need to detect when derby client is using its CLOB  representation for setAsciiStream and setCharacterStream and keep them valid past the commit.&lt;/p&gt;

&lt;p&gt;I assume there is a similar issue for BLOB/getBinaryStream but have not verified this.&lt;/p&gt;</comment>
                            <comment id="12732624" author="kmarsden" created="Fri, 17 Jul 2009 18:36:03 +0100"  >&lt;p&gt;Lob.java has:&lt;br/&gt;
 protected int dataType_ = 0;      // data type(s) the LOB instance currently contains&lt;/p&gt;

&lt;p&gt;which can include:&lt;br/&gt;
public static final int STRING = 2;&lt;br/&gt;
    public static final int ASCII_STREAM = 4;&lt;br/&gt;
    public static final int UNICODE_STREAM = 8;&lt;br/&gt;
    public static final int CHARACTER_STREAM = 16;&lt;br/&gt;
    public static final int BINARY_STREAM = 32;&lt;br/&gt;
    public static final int BINARY_STRING = 64;&lt;br/&gt;
    public static final int LOCATOR = 128;&lt;/p&gt;

&lt;p&gt;A quick change to only do the transaction check in Lob.checkValidity() if isLocator() is true seems to resolve the issue and jdbcapi.BlobClob4BlobTest  passes so the intended &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3574&quot; title=&quot;With client, attempting to get the lob length after commit  or connection close if there  was a call to length() before commit does not throw an exception&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3574&quot;&gt;&lt;del&gt;DERBY-3574&lt;/del&gt;&lt;/a&gt; check seems to still work since a test was added for that.  I am not totally sure if this is too liberal though and would appreciate input. Meanwhile I will add a test and run the rest of regressions with this simple fix.&lt;/p&gt;</comment>
                            <comment id="12732699" author="kmarsden" created="Fri, 17 Jul 2009 20:42:58 +0100"  >&lt;p&gt;Attached is a patch for this issue, which also fixes &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4224&quot; title=&quot;Commit after setAsciiStream() makes execution fail with the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4224&quot;&gt;&lt;del&gt;DERBY-4224&lt;/del&gt;&lt;/a&gt; for setAsciiStream and also setBinaryStream which I confirmed had the same issue.  We now only throw the transaction related error if the Lob is a locator.  I also added three commits to existing test cases after the three calls and confirmed that the three tests failed for network server without the code fix.&lt;/p&gt;

&lt;p&gt;I am running tests now.&lt;/p&gt;</comment>
                            <comment id="12732758" author="kmarsden" created="Fri, 17 Jul 2009 23:18:08 +0100"  >&lt;p&gt;There seems to be a problem with the patch.   I am getting two instances of:&lt;br/&gt;
1) testDerby500(org.apache.derbyTesting.functionTests.tests.store.StreamingColumnTest)junit.framework.ComparisonFailure:&lt;br/&gt;
 Unexpected SQL state. expected:&amp;lt;...J215&amp;gt; but was:&amp;lt;...N017&amp;gt;&lt;br/&gt;
2) testDerby500_verifyVarcharStreams(org.apache.derbyTesting.functionTests.tests.store.StreamingColumnTest)junit.framewo&lt;br/&gt;
rk.ComparisonFailure: Unexpected SQL state. expected:&amp;lt;...J215&amp;gt; but was:&amp;lt;...N017&amp;gt;&lt;/p&gt;

&lt;p&gt;with the nested exception of:&lt;br/&gt;
Caused by: java.sql.SQLException: Network protocol error: end of stream prematurely reached, parameter #5.  Remaining da&lt;br/&gt;
ta has been padded with 0x0.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:367)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:399)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.store.StreamingColumnTest.testDerby500(StreamingColumnTest.java:1&lt;br/&gt;
484)&lt;br/&gt;
        ... 53 more&lt;/p&gt;


&lt;p&gt;I&apos;ll take a look.&lt;/p&gt;</comment>
                            <comment id="12732793" author="kmarsden" created="Sat, 18 Jul 2009 01:00:11 +0100"  >&lt;p&gt;The problem with the tests might be just exposing another issue.  The test is preparing a statement and setting streams for the parameters. It executes, commits, and then tries to execute again using the same parameters.  On the second execution the test has this:&lt;/p&gt;

&lt;p&gt;   try &lt;/p&gt;
{
            ps.setInt(1, 11);
            rowCount += ps.executeUpdate();
            fail(&quot;Attempting to reuse stream should have thrown an exception!&quot;);
        }
&lt;p&gt; catch (SQLException sqle) {&lt;br/&gt;
            if (usingDerbyNetClient()) &lt;/p&gt;
{
                assertSQLState(&quot;XJ215&quot;, sqle);
                println(&quot;Expected Exception: You cannot invoke other &quot;
                        + &quot;java.sql.Clob/java.sql.Blob methods after calling the &quot;
                        + &quot;free() method or after the Blob/Clob&apos;s transaction has&quot;
                        + &quot; been committed or rolled back.&quot;);
            }
&lt;p&gt; else &lt;/p&gt;
{
                assertSQLState(&quot;XJ001&quot;, sqle);
                println(&quot;EXPECTED EXCEPTION - streams cannot be re-used&quot;);
            }

&lt;p&gt;The XJ215 was happening on the client, because of the commit in the test.   That commit should not be preventing the statement execution (this bug).  The client should be throwing an XJ001 like embedded but is getting the protocol error instead.     I think I should be able to reproduce this  without this patch if there is no  commit.   I&apos;ll try that next week and file another issue for the protocol error.&lt;/p&gt;</comment>
                            <comment id="12732824" author="kmarsden" created="Sat, 18 Jul 2009 03:34:53 +0100"  >&lt;p&gt;All other tests passed.  I would like input on whether I should go ahead and check this in and disable the failing tests until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt; is fixed.  The tests were checking for the wrong error code anyway but the new behavior would be worse than a wrong error code since it might potentially insert wrong data.  Checking this fix in would 1) Solve this regression 2) revert to the pre-&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3574&quot; title=&quot;With client, attempting to get the lob length after commit  or connection close if there  was a call to length() before commit does not throw an exception&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3574&quot;&gt;&lt;del&gt;DERBY-3574&lt;/del&gt;&lt;/a&gt; behavior for  users attempting to reuse streams, so they would see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt; even if they commit between statement executions.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12732834" author="lilywei" created="Sat, 18 Jul 2009 04:52:23 +0100"  >&lt;p&gt;My 2 cents will be check in the fix. We have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt;. We should document this behavior and provide the workaround for users who try to do this so they can go forward. Do you think any existing product is doing reuse streams in client on insert?&lt;/p&gt;</comment>
                            <comment id="12732835" author="kmarsden" created="Sat, 18 Jul 2009 05:05:08 +0100"  >&lt;p&gt;Thanks Lily. I tend to agree we should go ahead and check it in.  I don&apos;t think any existing product is doing reuse of streams because it could never be done successfully.  For 10.4.2.0 and 10.5.5.1 the potential for data corruption went away if they tried this after commit, but the error message became nonsensical.  I think reusing streams  is the type of user error that would be found in development where the better error message (even with the potential bad insert)  would be easier to manage.  Regarding documentation, I could add a releaseNote to this issue that explains the behavior change and points to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;</comment>
                            <comment id="12733004" author="kmarsden" created="Sun, 19 Jul 2009 15:31:09 +0100"  >&lt;p&gt;Here is an updated patch for this issue that changes StreamingColumnTest to look for the XN017 error when the stream is reused after commit instead of XJ215.  suites.All and derbyall ran fine.  I will test with the mailjdbc network server test and then commit to trunk, 10.5 and 10.4 Monday or Tuesday if there are no comments.&lt;/p&gt;</comment>
                            <comment id="12733008" author="kmarsden" created="Sun, 19 Jul 2009 15:46:31 +0100"  >&lt;p&gt;Marking patch available and release note needed. The release note will say that now users who reuse streams after commit will get XN017 error instead of XJ215 and wrong data can be inserted until the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt; fix is in place.&lt;/p&gt;</comment>
                            <comment id="12734161" author="kmarsden" created="Wed, 22 Jul 2009 16:47:28 +0100"  >&lt;p&gt;Adding release note warning about increased exposure to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12734163" author="kmarsden" created="Wed, 22 Jul 2009 16:49:07 +0100"  >&lt;p&gt;Submitted fix to trunk 10.5 and 10.4 and added release note.&lt;/p&gt;
</comment>
                            <comment id="12736317" author="dagw" created="Tue, 28 Jul 2009 22:32:34 +0100"  >&lt;p&gt;This issue is marked as blocked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt; (open), but this issue is now closed. Should that link be changed now?&lt;/p&gt;
</comment>
                            <comment id="12736340" author="kmarsden" created="Tue, 28 Jul 2009 23:33:04 +0100"  >&lt;p&gt;Change &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4315&quot; title=&quot;Attempt to reuse streams in client on insert gives protocol exception and inserts wrong data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4315&quot;&gt;&lt;del&gt;DERBY-4315&lt;/del&gt;&lt;/a&gt;  link to is related to since that issue might be exposed more often after this fix.&lt;/p&gt;</comment>
                            <comment id="12858872" author="rhillegas" created="Tue, 20 Apr 2010 14:24:06 +0100"  >&lt;p&gt;Shortened the summary line in the release note in order to make the 10.6 release notes more readable.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12425178">DERBY-4224</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12430835">DERBY-4315</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12392468">DERBY-3574</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="31583">DERBY-208</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12413817" name="ReproDerby4312.java" size="2216" author="kmarsden" created="Fri, 17 Jul 2009 14:49:55 +0100"/>
                            <attachment id="12413818" name="create.sql" size="1341" author="kmarsden" created="Fri, 17 Jul 2009 14:49:55 +0100"/>
                            <attachment id="12413952" name="derby-4312_diff.txt" size="4705" author="kmarsden" created="Sun, 19 Jul 2009 15:31:09 +0100"/>
                            <attachment id="12413866" name="derby-4312_diff.txt" size="2149" author="kmarsden" created="Fri, 17 Jul 2009 20:42:58 +0100"/>
                            <attachment id="12442288" name="releaseNote.html" size="4579" author="rhillegas" created="Tue, 20 Apr 2010 14:24:06 +0100"/>
                            <attachment id="12414219" name="releaseNote.html" size="5006" author="kmarsden" created="Wed, 22 Jul 2009 16:47:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 Jul 2009 13:38:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24177</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0qtz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38165</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>