<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:17:45 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6237/DERBY-6237.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6237] PreparedStatement.execute() fails starting 10.2 when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6237</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;PreparedStatement.execute() worked on 10.1(both embedded and network server) when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used. In 10.2, the embedded case stopped working for multi-row update using a prepared statement which used PreparedStatement.setCharacterStream(int, Reader, int) with exception&lt;br/&gt;
java.io.EOFException: Stream has already been read and end-of-file reached and cannot be re-used.&lt;br/&gt;
	at org.apache.derby.iapi.types.ReaderToUTF8Stream.read(ReaderToUTF8Stream.java:185)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.MemByteHolder.write(MemByteHolder.java:146)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.RememberBytesInputStream.fillBuf(RememberBytesInputStream.java:135)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.logColumn(StoredPage.java:6167)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.logRow(StoredPage.java:3971)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.UpdateOperation.writeOptionalDataToBuffer(UpdateOperation.java:255)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.UpdateOperation.&amp;lt;init&amp;gt;(UpdateOperation.java:106)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdate(LoggableActions.java:80)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlot(StoredPage.java:8549)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.updateAtSlot(BasePage.java:1178)&lt;br/&gt;
	at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.replace(GenericConglomerateController.java:479)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.updateRow(RowChangerImpl.java:523)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:579)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:273)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:358)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1182)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1635)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1304)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.MamtaJDBC.main(MamtaJDBC.java:91)&lt;/p&gt;


&lt;p&gt;In 10.3 and 10.4, both the embedded and network server cases are broken for multi-row update using a prepared statement which used PreparedStatement.setCharacterStream(int, Reader, int).I still need to test 10.5 and higher. I will also add junit test cases for each of these releases on incremental basis.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12650228">DERBY-6237</key>
            <summary>PreparedStatement.execute() fails starting 10.2 when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Thu, 30 May 2013 22:54:32 +0100</created>
                <updated>Wed, 16 Apr 2014 03:41:06 +0100</updated>
                                            <version>10.2.2.1</version>
                    <version>10.3.3.1</version>
                    <version>10.4.2.1</version>
                    <version>10.5.3.2</version>
                    <version>10.6.2.4</version>
                    <version>10.7.1.4</version>
                    <version>10.8.3.3</version>
                    <version>10.9.2.2</version>
                    <version>10.10.2.0</version>
                    <version>10.11.1.1</version>
                                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13670901" author="mikem" created="Thu, 30 May 2013 23:37:51 +0100"  >&lt;p&gt;Is this problem specific to updating a CLOB columm, using a stream?  See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-500&quot; title=&quot;Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-500&quot;&gt;&lt;del&gt;DERBY-500&lt;/del&gt;&lt;/a&gt;.  There one of the comments indicates that in &lt;br/&gt;
cases other than target lobs, derby automatically materializes the stream so this is not an issue.  If so, it would be good to understand&lt;br/&gt;
how derby does that.  &lt;/p&gt;</comment>
                            <comment id="13671638" author="mamtas" created="Fri, 31 May 2013 17:50:16 +0100"  >&lt;p&gt;I tried on 10.2 and 10.3 clients updating varchar column with a stream and did not run into stream has already been read exception for it so  looks like we follow a different code path for varchar vs CLOB when working with streams. I will incorporate update of varchars with streams in my test case,&lt;/p&gt;</comment>
                            <comment id="13671825" author="mamtas" created="Fri, 31 May 2013 22:19:40 +0100"  >&lt;p&gt;I have commited test in 10.1 codeline showing setCharacterStream working for CLOB and varchar columns. The revisions for the test change in 10.1 are 1488339, 1488402, 1488445 and 1488598.&lt;/p&gt;</comment>
                            <comment id="13671853" author="mamtas" created="Fri, 31 May 2013 23:14:16 +0100"  >&lt;p&gt;Committed the test into 10.2(revision 1488411) with following commit comments&lt;br/&gt;
********************************&lt;br/&gt;
        &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6237&quot; title=&quot;PreparedStatement.execute() fails starting 10.2 when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6237&quot;&gt;DERBY-6237&lt;/a&gt;(PreparedStatement.execute() fails starting 10.2 when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used)&lt;/p&gt;

&lt;p&gt;        Adding test for PreparedStatement.setCharacterStream on CLOB column and using that prepared statement to update more than one row of the table&lt;/p&gt;

&lt;p&gt;        In 10.1, setCharacterStream to update CLOB and varchar columns work even when update is going to update more than one row but in 10.2, PreparedStatement.setCharacterStream on CLOB column fails when running in embedded mode. Client server case works fine on 10.2. I have commented out the test for embedded in 10.2 Once this jira is fixed in 10.2, we should uncomment these tests.&lt;br/&gt;
********************************&lt;/p&gt;</comment>
                            <comment id="13672219" author="mamtas" created="Sat, 1 Jun 2013 20:59:28 +0100"  >&lt;p&gt;Commited a test into 10.2 with revisions 1488453, 1488606 and 1488853. There are 2 test one for testing setCharacterStream on CLOB and other for testing setCharacterStream on VARCHAR column. This way failure of one data type will not mask the behavior of the other data type. &lt;/p&gt;

&lt;p&gt;I found through this test sparation that in 10.2, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 release) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(in case of embedded only) fails in 10.2 release.&lt;/p&gt;</comment>
                            <comment id="13672847" author="mamtas" created="Mon, 3 Jun 2013 07:09:21 +0100"  >&lt;p&gt;Committed tests for 10.3 brach with revision 1488854&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.3,&lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 and 10.2 releases) for both one row and multi-row update through prepared statement.&lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.3 release.&lt;/p&gt;</comment>
                            <comment id="13672856" author="mamtas" created="Mon, 3 Jun 2013 07:34:12 +0100"  >&lt;p&gt;Committed tests for 10.4 brach with revision 1488857&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.4,&lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1, 10.2 and 10.3 releases) for both one row and multi-row update through prepared statement.&lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.4 release. &lt;/p&gt;</comment>
                            <comment id="13673477" author="mamtas" created="Mon, 3 Jun 2013 20:40:41 +0100"  >&lt;p&gt;Committed tests for 10.5 brach with revision 1489123 and 1489135&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.5,&lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.4 releases) for both one row and multi-row update through prepared statement.&lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.5 release. &lt;/p&gt;</comment>
                            <comment id="13673493" author="mamtas" created="Mon, 3 Jun 2013 21:01:08 +0100"  >&lt;p&gt;Committed tests for 10.6 brach with revision 1489137&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.6, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.5 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.6 release. &lt;/p&gt;</comment>
                            <comment id="13673548" author="mamtas" created="Mon, 3 Jun 2013 21:54:55 +0100"  >&lt;p&gt;Committed tests for 10.7 brach with revision 1489160&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.7, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.6 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.7 release. &lt;/p&gt;</comment>
                            <comment id="13673557" author="mamtas" created="Mon, 3 Jun 2013 22:01:57 +0100"  >&lt;p&gt;Committed tests for 10.8 brach with revision 1489169&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.8, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.7 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.8 release. &lt;/p&gt;</comment>
                            <comment id="13673583" author="mamtas" created="Mon, 3 Jun 2013 22:15:50 +0100"  >&lt;p&gt;Committed tests for 10.9 brach with revision 1489181&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.9, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.8 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.9 release. &lt;/p&gt;</comment>
                            <comment id="13673863" author="mamtas" created="Tue, 4 Jun 2013 01:30:40 +0100"  >&lt;p&gt;Committed tests for 10.10 brach with revision 1489256&lt;/p&gt;

&lt;p&gt;I found through these tests that in 10.10, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.9 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in 10.10 release&lt;/p&gt;</comment>
                            <comment id="13673866" author="mamtas" created="Tue, 4 Jun 2013 01:32:32 +0100"  >&lt;p&gt;Committed tests for trunk with revision 1489246&lt;/p&gt;

&lt;p&gt;I found through these tests that in trunk, &lt;br/&gt;
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.10 releases) for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in trunk &lt;/p&gt;</comment>
                            <comment id="13673912" author="mamtas" created="Tue, 4 Jun 2013 02:28:04 +0100"  >&lt;p&gt;The tests have been added to all the codelines. To summarize the behavior&lt;/p&gt;

&lt;p&gt;1)setCharacterStream on VARCHAR columns work fine in all the releases for both one row and multi-row update through prepared statement. &lt;br/&gt;
2)setCharacterStream on CLOB column when update touches more than one row has different behavior on different releases&lt;br/&gt;
a)works fine on 10.1 release for both embedded and network server&lt;br/&gt;
b)fails in embedded mode in 10.2. Test works fine in Network server environment&lt;br/&gt;
c)fails in both embedded and Network server environment in every release starting 10.3 through trunk.&lt;/p&gt;</comment>
                            <comment id="13674052" author="mamtas" created="Tue, 4 Jun 2013 06:00:41 +0100"  >&lt;p&gt;I have not spent enough time debugging this issue but from what little debugging I did for 10.1 vs 10.2, I thought the code took different path when it got to the changes made by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-352&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-352&lt;/a&gt;. I might be completely wrong on this, but thought would share the jira in case somebody plans to work on this jira. I will link this issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-352&quot; title=&quot;Clobs on insert  using streams should not instantiate into memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-352&quot;&gt;&lt;del&gt;DERBY-352&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13674149" author="knutanders" created="Tue, 4 Jun 2013 08:58:00 +0100"  >&lt;p&gt;There&apos;s a javadoc warning in ParameterMappingTest after the latest patch. I&apos;ve checked in a fix on trunk (1489311) and 10.10 (1489312) for now to silence the Jenkins build jobs, but I think the code that causes the warning has been backported even further than that.&lt;/p&gt;</comment>
                            <comment id="13674522" author="mamtas" created="Tue, 4 Jun 2013 17:05:03 +0100"  >&lt;p&gt;Thanks for taking care of javadoc warnings in trunk and 10.10, Knut. I have fixed them on 10.3 through 10.9 using revisions 1489470, 1489473, 1489474, 1489477, 1489480, 1489481, 1489482. 10.1 and 10.2 should be fine.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12646245">DERBY-6214</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12311308">DERBY-352</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12650819">DERBY-6245</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 30 May 2013 22:37:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330555</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzevd3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330889</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>