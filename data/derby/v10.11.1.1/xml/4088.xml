<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4088/DERBY-4088.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4088] DDMReader readBytes ArrayIndexOutOfBoundsException</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4088</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;DDMReader.readBytes(int length) checks the length vs DssConstants.MAX_DSS_LENGTH, but ignores the fact that the buffer position &quot;pos&quot; might not be 0. If pos is non-zero then the pos + length can be larger than the size of &quot;buffer&quot; causing an ArrayIndexOutOfBoundsException.&lt;/p&gt;

&lt;p&gt;For me this happened when sending a BLOB that was 32766 bytes long. The value of pos was 2 in that method.&lt;/p&gt;</description>
                <environment>CentOS 5, java 1.6.0_11</environment>
        <key id="12416511">DERBY-4088</key>
            <summary>DDMReader readBytes ArrayIndexOutOfBoundsException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="urban">Urban Widmark</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Mar 2009 10:31:35 +0000</created>
                <updated>Fri, 21 Jan 2011 17:52:18 +0000</updated>
                            <resolved>Thu, 19 Mar 2009 10:45:45 +0000</resolved>
                                    <version>10.4.2.0</version>
                                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12680421" author="urban" created="Tue, 10 Mar 2009 10:33:25 +0000"  >&lt;p&gt;Attached patch changes the if-statement to include buffer position. I have only tested this with my own database and the 32766 byte BLOB where it seems to work fine.&lt;/p&gt;</comment>
                            <comment id="12680461" author="knutanders" created="Tue, 10 Mar 2009 13:33:14 +0000"  >&lt;p&gt;Thanks for the bug report. If possible, could you also provide step-by-step description of how to reproduce the bug? The stack trace of the ArrayIndexOutOfBoundsException would also be helpful.&lt;/p&gt;

&lt;p&gt;I haven&apos;t been able to reproduce the bug myself, so I can&apos;t say if the patch is correct. My understanding of that code is that the check against MAX_DSS_LENGTH is used to determine the format of the byte string, which should not be affected by the current position in the read buffer. It is the call to ensureBLayerDataInBuffer() that is supposed to ensure that the read buffer is large enough and prevent that the AIOOBE is thrown. So my initial reaction is that the bug is probably somewhere else.&lt;/p&gt;</comment>
                            <comment id="12680496" author="urban" created="Tue, 10 Mar 2009 14:56:09 +0000"  >&lt;p&gt;I am not necessarily saying the patch is correct, just that making the change made it work for me. I do not claim any knowledge whatsoever about DRDA or DSS &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Have also verified that the data is transfered correctly after the patch by checking md5 sums of the data objects inside and outside the database.&lt;/p&gt;

&lt;p&gt;readBytes is called with pos=2, length=32766, the buffer length is 32767 and is not changed by the call to ensureBLayerDataInBuffer.&lt;/p&gt;

&lt;p&gt;Server stacktrace:&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException&lt;br/&gt;
        at java.lang.System.arraycopy(Native Method)&lt;br/&gt;
        at org.apache.derby.impl.drda.DDMReader.readBytes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)&lt;/p&gt;

&lt;p&gt;Client stacktrace:&lt;br/&gt;
org.apache.derby.client.am.DisconnectException: The DDM object 0x1232 is not supported.  The connection has been terminated.&lt;br/&gt;
        at org.apache.derby.client.net.NetConnectionReply.doObjnsprmSemantics(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.NetConnectionReply.parseCommonError(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.parseExecuteError(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.parseEXCSQLSTTreply(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.readExecute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.StatementReply.readExecute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.net.NetPreparedStatement.readExecute_(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.readExecute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.flowExecute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeUpdateX(Unknown Source)&lt;br/&gt;
        ... 2 more&lt;/p&gt;

&lt;p&gt;I am also attaching a tiny testprogram that triggers this bug for me. Reproduced by:&lt;/p&gt;

&lt;p&gt;java -classpath derbynet.jar org.apache.derby.drda.NetworkServerControl start&lt;br/&gt;
javac DerbyBug.java &amp;amp;&amp;amp; java -cp .:derbyclient.jar DerbyBug&lt;/p&gt;

&lt;p&gt;Database definition inside the java source. Tested vs 10.4.2.0 binary release and 10.4 svn branch.&lt;/p&gt;</comment>
                            <comment id="12680498" author="urban" created="Tue, 10 Mar 2009 14:57:22 +0000"  >&lt;p&gt;Testprogram that triggers the problem for me.&lt;/p&gt;</comment>
                            <comment id="12680503" author="kristwaa" created="Tue, 10 Mar 2009 15:09:06 +0000"  >&lt;p&gt;I downloaded the test program, and can confirm that it triggers the bug.&lt;br/&gt;
Note that you should use Java SE 6 and derbyclient.jar, because the drivers isn&apos;t loaded explicitly by the test program.&lt;/p&gt;

&lt;p&gt;Here&apos;s the stack trace:&lt;br/&gt;
2009-03-10 15:04:28.064 GMT:&lt;br/&gt;
 Booting Derby version The Apache Software Foundation - Apache Derby - 10.5.0.0 alpha - (752129M): instance a816c00e-011f-f0e9-8206-000003d35e00&lt;br/&gt;
on database directory /tmp/db  &lt;/p&gt;

&lt;p&gt;Database Class Loader started - derby.database.classpath=&apos;&apos;&lt;br/&gt;
2009-03-10 15:05:36.546 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,main&amp;#93;&lt;/span&gt; (DATABASE = db), (DRDAID = NF000001.D3F3-4110940798161594440&lt;/p&gt;
{2}), null&lt;br/&gt;
2009-03-10 15:05:36.546 GMT : null&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException&lt;br/&gt;
        at java.lang.System.arraycopy(Native Method)&lt;br/&gt;
        at org.apache.derby.impl.drda.DDMReader.readBytes(DDMReader.java:1509)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(DRDAConnThread.java:4697)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(DRDAConnThread.java:4507)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(DRDAConnThread.java:4379)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4254)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4084)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1003)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:290)&lt;br/&gt;
2009-03-10 15:05:36.547 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,main&amp;#93;&lt;/span&gt; (DATABASE = db), (DRDAID = NF000001.D3F3-4110940798161594440{2}
&lt;p&gt;), Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null&lt;br/&gt;
2009-03-10 15:05:36.547 GMT : Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null&lt;br/&gt;
org.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = db; diagnostic msg = null&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAProtocolException.newAgentError(DRDAProtocolException.java:339)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.sendUnexpectedException(DRDAConnThread.java:7993)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.handleException(DRDAConnThread.java:7944)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:315)&lt;br/&gt;
2009-03-10 15:05:36.547 GMT : null&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException&lt;br/&gt;
        at java.lang.System.arraycopy(Native Method)&lt;br/&gt;
        at org.apache.derby.impl.drda.DDMReader.readBytes(DDMReader.java:1509)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.readAndSetParams(DRDAConnThread.java:4697)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA_work(DRDAConnThread.java:4507)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseSQLDTA(DRDAConnThread.java:4379)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(DRDAConnThread.java:4254)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:4084)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1003)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:290)&lt;/p&gt;</comment>
                            <comment id="12680563" author="knutanders" created="Tue, 10 Mar 2009 18:08:59 +0000"  >&lt;p&gt;Thanks, I see the exception too now.&lt;/p&gt;

&lt;p&gt;I haven&apos;t worked out all the details yet, but here&apos;s what I&apos;ve found&lt;br/&gt;
so far:&lt;/p&gt;

&lt;p&gt;readBytes() calls ensureBLayerDataInBuffer() which again calls&lt;br/&gt;
ensureALayerDataInBuffer(). ensureALayerDataInBuffer() ends up&lt;br/&gt;
enlarging the buffer and shifting the contents to the left so there is&lt;br/&gt;
enough space in the buffer (there is in fact enough space in the&lt;br/&gt;
buffer when that method returns) and fills the buffer with data.&lt;/p&gt;

&lt;p&gt;After calling ensureALayerDataInBuffer(), ensureBLayerDataInBuffer()&lt;br/&gt;
detects that the DSS is shorter than the requested length, which means&lt;br/&gt;
that the data continues in a subsequent DSS. It calls&lt;br/&gt;
compressBLayerData() to remove DSS header bytes from the buffer so&lt;br/&gt;
that the buffer only contains the pure byte string and nothing&lt;br/&gt;
else. Since we only requested length bytes from the network, and some&lt;br/&gt;
of those bytes are header bytes, this means that the buffer contains&lt;br/&gt;
less than length bytes after we have &quot;compressed&quot; the buffer. This is&lt;br/&gt;
what&apos;s eventually causing the exception when we try to copy more bytes&lt;br/&gt;
from the buffer than we actually have available.&lt;/p&gt;

&lt;p&gt;I think one possible fix is to make compressBLayerData() fill the&lt;br/&gt;
buffer with the missing bytes from the continuation DSS.&lt;/p&gt;

&lt;p&gt;(One other thing to investigate is why the client splits the data into&lt;br/&gt;
smaller chunks when it is small enough to fit in a single DSS. It&lt;br/&gt;
sounds suboptimal.)&lt;/p&gt;</comment>
                            <comment id="12680586" author="bryanpendleton" created="Tue, 10 Mar 2009 18:57:44 +0000"  >&lt;p&gt;&amp;gt; why the client splits the data into smaller chunks when it is small enough to fit in a single DSS&lt;/p&gt;

&lt;p&gt;Yes, this is quite intriguing. It might be more than suboptimal. I vaguely recall thinking&lt;br/&gt;
that the algorithms for assembling fragments across buffers assumed that the&lt;br/&gt;
only &apos;short&apos; segment was the last segment.&lt;/p&gt;

&lt;p&gt;But it&apos;s been several years since I studied this code, so I may be misremembering.&lt;/p&gt;</comment>
                            <comment id="12680924" author="knutanders" created="Wed, 11 Mar 2009 16:58:16 +0000"  >&lt;p&gt;Here&apos;s a first attempt to fix the bug. I haven&apos;t investigated why the&lt;br/&gt;
client splits the value yet, but since the protocol seems to allow it,&lt;br/&gt;
it seems like we should fix it on the server anyway.&lt;/p&gt;

&lt;p&gt;The important part of the patch is that it adds calls to&lt;br/&gt;
ensureALayerDataInBuffer() two places in compressBLayerData() to&lt;br/&gt;
ensure that we never try to access bytes that haven&apos;t been buffered&lt;br/&gt;
yet. compressBLayerData() takes multiple DSSs and concatenates them so&lt;br/&gt;
that they look like a single DSS for the caller. Since the new calls&lt;br/&gt;
to ensureALayerDataInBuffer() ensures that we have all the bytes for&lt;br/&gt;
the low-level DSSs in the buffer, it means that we also have all the&lt;br/&gt;
bytes needed to construct the concatenated &quot;super DSS&quot; created by&lt;br/&gt;
compressBLayerData(). This again ensures that when&lt;br/&gt;
ensureBLayerDataInBuffer() returns in readBytes(), we have the entire&lt;br/&gt;
byte string in the buffer, and System.arraycopy() won&apos;t go out of&lt;br/&gt;
bounds.&lt;/p&gt;

&lt;p&gt;(Some might find it a bit confusing that compressBLayerData() calls&lt;br/&gt;
ensureALayerDataInBuffer() and not ensureBLayerDataInBuffer(). The&lt;br/&gt;
explanation is that ensureBLayerDataInBuffer() uses&lt;br/&gt;
ensureALayerDataInBuffer() as a lower-level primitive to actually&lt;br/&gt;
fetch the physical bytes, whereas the Layer B method provides a&lt;br/&gt;
higher-level logical view of those bytes. Representing a sequence of&lt;br/&gt;
DSSs as a single DSS is one example of this. compressBLayerData() is&lt;br/&gt;
performing work for ensureBLayerDataInBuffer() to turn the physical&lt;br/&gt;
view of the bytes into the logical view, and therefore needs to use&lt;br/&gt;
the Layer A methods that give the physical view.)&lt;/p&gt;

&lt;p&gt;Now, the use of ensureALayerDataInBuffer() in compressBLayerData()&lt;br/&gt;
made it necessary to make some more changes. compressBLayerData() has&lt;br/&gt;
a local variable called tempPos which specifies a position in the read&lt;br/&gt;
buffer. This position variable is used to access parts of the read&lt;br/&gt;
buffer without destructively skipping bytes up to the interesting&lt;br/&gt;
portion of the buffer. This is effectively the same as the position of&lt;br/&gt;
the first valid byte in the read buffer plus an offset, and it depends&lt;br/&gt;
on the position of the first valid byte being constant throughout the&lt;br/&gt;
method.&lt;/p&gt;

&lt;p&gt;However, ensureALayerDataInBuffer() may shift bytes to the left in&lt;br/&gt;
order to free up space at the end of the buffer. Then the position of&lt;br/&gt;
the first valid byte will change, and tempPos will need to be updated&lt;br/&gt;
accordingly. To compensate for this shift, I renamed the tempPos&lt;br/&gt;
variable to tempOffset and replaced all occurrences of tempPos with&lt;br/&gt;
(pos + tempOffset). This means that the local variable is just an&lt;br/&gt;
offset from the start of the valid region of the buffer, and it&lt;br/&gt;
doesn&apos;t change even if the valid region is shifted left or&lt;br/&gt;
right. Since pos is added to the offset each time it is used, we&apos;ll&lt;br/&gt;
automatically compensate for the shift.&lt;/p&gt;

&lt;p&gt;I haven&apos;t run the full regression test suite yet, but I have added a&lt;br/&gt;
test case to derbynet/PrepareStatementTest that fails with an&lt;br/&gt;
ArrayIndexOutOfBoundsException without the fix and passes with the&lt;br/&gt;
fix.&lt;/p&gt;</comment>
                            <comment id="12681017" author="knutanders" created="Wed, 11 Mar 2009 20:22:02 +0000"  >&lt;p&gt;All the regression tests ran cleanly. Reviews would be appreciated. Thanks.&lt;/p&gt;</comment>
                            <comment id="12681091" author="kmarsden" created="Wed, 11 Mar 2009 23:24:19 +0000"  >&lt;p&gt;Thanks Knut for fixing this issue. I was really surprised that we had never tried inserting a blob of length 32766.  Just for good measure, with your patch,  I made sure we could insert byte[]&apos;s from 0 to 40000 and select them back again individually to hopefully make sure we don&apos;t have any more gaps and it all passed.&lt;/p&gt;

&lt;p&gt;I wonder if the client&apos;s Reply.java has a similar problem with its compressBLayerData and how we might trigger that.  The javadoc says it shouldn&apos;t be used but we do cover it in code coverage.&lt;/p&gt;</comment>
                            <comment id="12681220" author="urban" created="Thu, 12 Mar 2009 08:53:59 +0000"  >&lt;p&gt;Works for me after applying Knut&apos;s patch.&lt;/p&gt;</comment>
                            <comment id="12681226" author="knutanders" created="Thu, 12 Mar 2009 09:34:43 +0000"  >&lt;p&gt;Thanks for testing the patch, Urban and Kathey.&lt;br/&gt;
Committed revision 752813.&lt;/p&gt;</comment>
                            <comment id="12681375" author="knutanders" created="Thu, 12 Mar 2009 16:18:07 +0000"  >&lt;p&gt;&amp;gt; I wonder if the client&apos;s Reply.java has a similar problem with its&lt;br/&gt;
&amp;gt; compressBLayerData and how we might trigger that. The javadoc says&lt;br/&gt;
&amp;gt; it shouldn&apos;t be used but we do cover it in code coverage.&lt;/p&gt;

&lt;p&gt;It looks like it has the same problem. I&apos;ve made that method throw an&lt;br/&gt;
exception when it&apos;s called and started suites.All so that I can see&lt;br/&gt;
which tests are triggering it.&lt;/p&gt;</comment>
                            <comment id="12682303" author="knutanders" created="Mon, 16 Mar 2009 12:40:25 +0000"  >&lt;p&gt;Two of the test cases (testBigTable and testLargeReplies) in derbynet/PrepareStatementTest trigger the method in Reply.java. Looking more closely at the code in Reply.java, I don&apos;t think the problem is present on the client. When it calls compressBLayerData(), it does this:&lt;/p&gt;

&lt;p&gt;            ensureALayerDataInBuffer(desiredDataSize + (continueDssHeaderCount * 2));&lt;br/&gt;
            compressBLayerData(continueDssHeaderCount);&lt;/p&gt;

&lt;p&gt;Note that we add (continueDssHeaderCount*2) before calling ensureALayerDataInBuffer(). (continueDssHeaderCount*2) is equal to the overhead imposed by splitting the data, so it ensures that we have all the data we need before we enter compressBLayerData().&lt;/p&gt;

&lt;p&gt;For consistency, it might be a good idea to do the same both places. I think that the solution in Reply.java is simpler than the solution I chose in DDMReader.java, so I think I&apos;ll back out those changes and use the other approach in DDMReader too.&lt;/p&gt;</comment>
                            <comment id="12683068" author="knutanders" created="Wed, 18 Mar 2009 16:43:29 +0000"  >&lt;p&gt;The attached patch reverts the changes to DDMReader.compressBLayerData() made in revision 752813 and instead makes ensureBLayerDataInBuffer() use the same approach as Reply.java. All the regression tests, including the regression test for this issue, still pass.&lt;/p&gt;</comment>
                            <comment id="12683351" author="knutanders" created="Thu, 19 Mar 2009 07:48:43 +0000"  >&lt;p&gt;Committed derby-4088-2.diff to trunk with revision 755866.&lt;/p&gt;</comment>
                            <comment id="12683421" author="knutanders" created="Thu, 19 Mar 2009 10:45:44 +0000"  >&lt;p&gt;Committed derby-4088-2.diff to 10.5 with revision 755906.&lt;br/&gt;
Committed derby-4088.diff and derby-4088-2.diff to 10.4 with revision 755907.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12401844" name="DerbyBug.java" size="581" author="urban" created="Tue, 10 Mar 2009 14:57:22 +0000"/>
                            <attachment id="12402494" name="derby-4088-2.diff" size="3747" author="knutanders" created="Wed, 18 Mar 2009 16:43:29 +0000"/>
                            <attachment id="12401942" name="derby-4088.diff" size="4810" author="knutanders" created="Wed, 11 Mar 2009 16:58:16 +0000"/>
                            <attachment id="12401822" name="derby-ddm.patch" size="498" author="urban" created="Tue, 10 Mar 2009 10:33:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Mar 2009 13:33:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24018</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37247</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>