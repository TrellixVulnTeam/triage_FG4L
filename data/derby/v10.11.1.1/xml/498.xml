<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-498/DERBY-498.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-498] Result set holdability defined inside stored procedures is ignored by server/client</title>
                <link>https://issues.apache.org/jira/browse/DERBY-498</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Assume I have a Java stored procedure that returns one or more result sets, and the holdability of those result sets is specified as part of the createStatement() method within the procedure definition (see below for an example).&lt;/p&gt;

&lt;p&gt;If I execute this procedure against Derby embedded, the holdability of each result set matches that of the statement-specific holdability that is defined within the stored procedure.  However, if I run the procedure against the Network Server using the Derby client, the holdability of &lt;em&gt;all&lt;/em&gt; result sets is the same, and it is based on the holdability of the statement that &lt;em&gt;executed&lt;/em&gt; the procedure--i.e. the statement-specific holdability that is defined within the procedure is ignored.&lt;/p&gt;

&lt;p&gt;Ex: If I create a stored procedure that corresponds to the following method:&lt;/p&gt;

&lt;p&gt;public static void p2(ResultSet[] rs1, ResultSet[] rs2,&lt;br/&gt;
    ResultSet[] rs3) throws Exception&lt;/p&gt;
{
    Connection conn = DriverManager.getConnection(
        &quot;jdbc:default:connection&quot;);

    Statement st1 = conn.createStatement(
        ResultSet.TYPE_FORWARD_ONLY,
        ResultSet.CONCUR_READ_ONLY,
        ResultSet.HOLD_CURSORS_OVER_COMMIT);
    rs1[0] = st1.executeQuery(&quot;select * from testtable1&quot;);

    Statement st2 = conn.createStatement(
        ResultSet.TYPE_FORWARD_ONLY,
        ResultSet.CONCUR_READ_ONLY,
        ResultSet.CLOSE_CURSORS_AT_COMMIT);
    rs2[0] = st2.executeQuery(&quot;select * from testtable2&quot;);

    Statement st3 = conn.createStatement(
        ResultSet.TYPE_FORWARD_ONLY,
        ResultSet.CONCUR_READ_ONLY,
        ResultSet.HOLD_CURSORS_OVER_COMMIT);
    rs3[0] = st3.executeQuery(&quot;select * from testtable3&quot;);

    return;

    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Then with Derby embedded, if I have a JDBC Statement that executes a call to this procedure, rs1 and rs3 will behave with HOLD_CURSORS holdability and rs2 will behave with CLOSE_CURSORS holdability--and that will be the case regardless of the holdability on the Statement that executed the call.  That seems correct to me.&lt;/p&gt;

&lt;p&gt;But if I do the same thing with Network Server, all of the result sets (rs1, rs2, and rs3) will have the same holdability as the JDBC Statement that executed the call.  It doesn&apos;t matter what the holdabilities used within the procedure definition are: they will all be over-ridden by the holdability of the Statement that made the call.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12313166">DERBY-498</key>
            <summary>Result set holdability defined inside stored procedures is ignored by server/client</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deepa">Deepa Remesh</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Aug 2005 02:30:19 +0100</created>
                <updated>Wed, 24 May 2006 05:22:19 +0100</updated>
                            <resolved>Fri, 21 Oct 2005 09:59:05 +0100</resolved>
                                    <version>10.1.2.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12318021" author="army" created="Tue, 9 Aug 2005 02:44:28 +0100"  >&lt;p&gt;Attaching a program to demonstrate the problem.  To run against embedded (for reference), do&lt;/p&gt;

&lt;p&gt;java d498&lt;/p&gt;

&lt;p&gt;To run against the server (which is where the problem is), start the Network Server on port 1527 and then do&lt;/p&gt;

&lt;p&gt;java d498 server&lt;/p&gt;

&lt;p&gt;We expect the server&apos;s behavior to match that of Derby embedded (because embedded works correctly), but a look at the output from this program shows that it does not.  Instead, the holdabilities that are set within the stored procedure are ignored when running against the server.&lt;/p&gt;</comment>
                            <comment id="12331511" author="deepa" created="Fri, 7 Oct 2005 02:19:53 +0100"  >&lt;p&gt;The attached patch &apos;derby-498.diff&apos; changes network server to use statement holdability set within stored procedures. The patch does the following:&lt;/p&gt;

&lt;p&gt;1. For callable statements, the execute method in DRDAStatement gets holdability from the statement that produced the resultset. &lt;br/&gt;
2. Added getResultSetHoldability method which takes a resultset and returns holdability.&lt;br/&gt;
3. execute method passes this holdability to addResultSet method, which sets DRDAResultSet.withHoldCursor with this value.&lt;br/&gt;
4. writeOPNQRYRM method in DRDAConnThread is changed to use the holdability of the current DRDAResultSet for setting SQLCSRHLD.&lt;br/&gt;
5. Added tests in lang/holdCursorJava.java. Created a new master file for DerbyNetClient.&lt;/p&gt;

&lt;p&gt;Ran derbyall on WinXP Sun jdk1.4.2. No failures. However, in a previous run of derbyall I got failures in few encryption tests. The failures did not seem related to my change. So I ran the encryption suites again and they passed. Then ran derbyall again and all tests passed.&lt;/p&gt;

&lt;p&gt;While working on this patch, I found some changes were affecting XA tests. I think the patch I uploaded does not have any side effects. But I am new to this and would greatly appreciate if someone can review and give me feedback. Once this is reviewed/committed, I would like to merge this to 10.1 branch too.&lt;/p&gt;</comment>
                            <comment id="12331617" author="army" created="Sat, 8 Oct 2005 04:57:22 +0100"  >&lt;p&gt;I applied the patch to my local codeline and ran the repro as well as the new holdCursorJava.java test, and it all works correctly.  I also ran the new test cases without the server changes and the test failed as expected:&lt;/p&gt;

&lt;p&gt;21c21&lt;br/&gt;
&amp;lt; 21, testtable2-one&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt; EXPECTED:ResultSet is null&lt;br/&gt;
38c38&lt;br/&gt;
&amp;lt; EXPECTED:ResultSet is null&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt; 11, testtable1-one&lt;/p&gt;

&lt;p&gt;So that&apos;s good.&lt;/p&gt;

&lt;p&gt;I&apos;m not familiar enough with the XA code to say for sure if there are any concerns in that area, but I did review the changes overall and they look good to me.  My one (very minor) comment is that the code path for NON-callable statements changes ever-so-slightly with this patch: in the &quot;addResultSet&apos; method, the value of &quot;newDrdaRs.withHoldCursor&quot; wasn&apos;t getting set before (so far as I can tell); now, it&apos;s set to the current DRDAStatement&apos;s &quot;withHoldCursor&quot; value (which is passed in from DRDAStatement.execute()).  I didn&apos;t see anything wrong with this when I looked at the code-&lt;del&gt;and in fact this change seems more &quot;correct&quot; to me&lt;/del&gt;-but it did make me think twice while I was reviewing it, so I thought I&apos;d mention it..  If this is intentional and okay, then I vote +1 with the hope that someone more familiar with XA can review this patch, as well...&lt;/p&gt;</comment>
                            <comment id="12331621" author="deepa" created="Sat, 8 Oct 2005 06:28:05 +0100"  >&lt;p&gt;Thanks Army for reviewing the patch. The use of &quot;newDrdaRs.withHoldCursor&quot; is intentional. Reasoning is:&lt;/p&gt;

&lt;p&gt;With this change, the result set(s) generated by a callable statement can have different holdabilities. So the SQLCSRHLD value in OPNQRYRM reply message can be different for each result set. Hence I cannot use the holdability of statement in general but need to get it for each result set . For this, I am using the variable &quot;withHoldCursor&quot; in DRDAResultSet. This variable existed before but was not being used anywhere. Now it is used in DRDAConnThread&apos;s writeOPNQRYRM and set in DRDAStatement&apos;s addResultSet  method:&lt;/p&gt;

&lt;p&gt;check in writeOPNQRYRM before:&lt;br/&gt;
	//pass the SQLCSRHLD codepoint only if statement has hold cursors over commit set&lt;br/&gt;
	if (stmt.withHoldCursor == JDBC30Translation.HOLD_CURSORS_OVER_COMMIT)&lt;br/&gt;
		writer.writeScalar1Byte(CodePoint.SQLCSRHLD, CodePoint.TRUE);&lt;/p&gt;

&lt;p&gt;check in writeOPNQRYRM after:&lt;br/&gt;
	//pass the SQLCSRHLD codepoint only if statement producing the ResultSet has &lt;br/&gt;
	//hold cursors over commit set. In case of stored procedures which use server-side&lt;br/&gt;
	//JDBC, the holdability of the ResultSet will be the holdability of the statement &lt;br/&gt;
	//in the stored procedure, not the holdability of the calling statement.&lt;br/&gt;
	if (stmt.getCurrentDrdaResultSet().withHoldCursor == JDBC30Translation.HOLD_CURSORS_OVER_COMMIT)&lt;br/&gt;
		writer.writeScalar1Byte(CodePoint.SQLCSRHLD, CodePoint.TRUE);&lt;/p&gt;

&lt;p&gt;call to addResultSet execute method in DRDAStatement:&lt;br/&gt;
        ...&lt;br/&gt;
	//For callable statement, get holdability of statement generating the result set&lt;br/&gt;
	if(isCallable)&lt;br/&gt;
		addResultSet(rs,getResultSetHoldability(rs));&lt;br/&gt;
	else&lt;br/&gt;
		addResultSet(rs,withHoldCursor);&lt;br/&gt;
        ...&lt;/p&gt;

&lt;p&gt;For callable statements, I set &quot;withHoldCursor&quot; in DRDAResultSet with the holdability of statement within procedure which generated the result set. For other statements, I set it to the holdability of the DRDAStatement (same as what was being checked in writeOPNQRYRM before this change). &lt;/p&gt;

</comment>
                            <comment id="12331929" author="kmarsden" created="Thu, 13 Oct 2005 08:13:15 +0100"  >&lt;p&gt;Deepa what were the affects on the XA tests that you saw with this patch?&lt;/p&gt;</comment>
                            <comment id="12331935" author="deepa" created="Thu, 13 Oct 2005 09:18:29 +0100"  >&lt;p&gt;To solve this problem, initially I was using a different approach, where I was changing the holdability in PKGNAMCSN for each resultset returned by network server. With this approach, jdbcapi/xaSimplePositive.sql and jdbcapi/xaStateTran.sql were failing in derbynetclientmats. Also, I had to change a lot on the client side and still things were not working fully. So I reworked my patch to update OPNQRYRM reply message with the holdability for each resultset. With this approach, I did not have to change anything on client side. And my new testcase and all tests in derbyall passed. &lt;/p&gt;

&lt;p&gt;The failures with my first approach made me think if there could be any other effect on XA. Also, I was going through some mails in derby-dev which talk about XA and holdability. So I requested someone who has worked in this area to look at this patch.&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200506.mbox/%3Cd9619e4a05061201375186b7ab@mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200506.mbox/%3Cd9619e4a05061201375186b7ab@mail.gmail.com%3E&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-346&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-346&lt;/a&gt;&lt;/p&gt;


</comment>
                            <comment id="12332026" author="kmarsden" created="Fri, 14 Oct 2005 03:29:57 +0100"  >&lt;p&gt;Well all that XA trouble sounds like it was due to a not so good tip that I put in this bug (sorry about that).  Your fix looks fine except that I wonder about the  reflection to get the holdability  with xa connections and jdk131 and whether the method will be available.&lt;/p&gt;

&lt;p&gt;If we don&apos;t have one already, I think it would be good to add a  procedure call  that returns statements, both inside and outside of an xa transaction to xaSimplePositive.sql.   You can&apos;t specify  HOLD_CURSORS_OVER_COMMIT within an xa transaction (it should throw an error), but even statements in procedures with  CLOSE_CURSORS_AT_COMMIT  should go through the new code path.&lt;/p&gt;

&lt;p&gt;There are probably existing procedure definitions in functionTests/util/ProcedureTest that could be called from   one of the xa sql tests.&lt;/p&gt;</comment>
                            <comment id="12332418" author="deepa" created="Wed, 19 Oct 2005 09:01:29 +0100"  >&lt;p&gt;With derby-498.diff, I ran derbynetmats and derbynetclientmats suites using Sun  jdk13. All tests passed. &lt;/p&gt;

&lt;p&gt;Also attaching an additional patch &quot;xa_proc_test.diff&quot; for xa tests. It does the following:&lt;br/&gt;
1. Adds procedure test to jdbcapi/xaSimplePositive.sql. &lt;br/&gt;
2. Updates master files. &lt;br/&gt;
This patch is independent of the changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-498&quot; title=&quot;Result set holdability defined inside stored procedures is ignored by server/client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-498&quot;&gt;&lt;del&gt;DERBY-498&lt;/del&gt;&lt;/a&gt;. I ran the test jdbcapi/xaSimplePositive.sql successfully in embedded and derbynetclientmats framework before and after applying derby-498.diff. (This test is excluded from derbynetmats)&lt;/p&gt;

&lt;p&gt;I will open a new JIRA issue with repro for the problem found in xa holdability.&lt;/p&gt;





</comment>
                            <comment id="12332523" author="kmarsden" created="Thu, 20 Oct 2005 08:22:35 +0100"  >&lt;p&gt;Checked into the trunk&lt;/p&gt;

&lt;p&gt;Date: Wed Oct 19 14:47:26 2005&lt;br/&gt;
New Revision: 326718&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=326718&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=326718&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12332594" author="deepa" created="Fri, 21 Oct 2005 00:28:38 +0100"  >&lt;p&gt;I merged this patch to my 10.1 codeline and ran derbyall with Sun jdk 1.4.2 on Windows XP. 2 tests failed. Failures are not related to this change.&lt;br/&gt;
derbyall/derbyall.fail:lang/ConcurrentImplicitCreateSchema.java (I ran this test again and it passed)&lt;br/&gt;
derbyall/derbyall.fail:i18n/iepnegativetests_ES.sql (master update)&lt;/p&gt;

&lt;p&gt;The merge command is:&lt;br/&gt;
svn merge -r 326717:326718 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If someone could commit this to 10.1 branch, it would be great. Thanks&lt;/p&gt;</comment>
                            <comment id="12332645" author="kmarsden" created="Fri, 21 Oct 2005 08:46:33 +0100"  >&lt;p&gt;Checked this into 10.1&lt;br/&gt;
New Revision: 327002&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=327002&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=327002&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12332647" author="deepa" created="Fri, 21 Oct 2005 09:59:05 +0100"  >&lt;p&gt;Verified by running the attached repro against trunk and 10.1 branch. &lt;/p&gt;</comment>
                            <comment id="12412999" author="army" created="Wed, 24 May 2006 05:22:19 +0100"  >&lt;p&gt;Fix has been in trunk and 10.1 since last October, so I&apos;m closing the issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12311643" name="d498.java" size="5734" author="army" created="Tue, 9 Aug 2005 02:44:20 +0100"/>
                            <attachment id="12314752" name="derby-498.diff" size="13170" author="deepa" created="Fri, 7 Oct 2005 02:19:53 +0100"/>
                            <attachment id="12314753" name="derby-498.status" size="404" author="deepa" created="Fri, 7 Oct 2005 02:19:53 +0100"/>
                            <attachment id="12314944" name="xa_proc_test.diff" size="5377" author="deepa" created="Wed, 19 Oct 2005 09:01:29 +0100"/>
                            <attachment id="12314945" name="xa_proc_test.status" size="283" author="deepa" created="Wed, 19 Oct 2005 09:01:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Oct 2005 01:19:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21984</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16cv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40680</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>