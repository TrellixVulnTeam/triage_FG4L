<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3842/DERBY-3842.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3842] Convert &quot;org.apache.derbyTesting.functionTests.tests.store.holdCursorExternalSortJDBC30.sql&quot; to junit.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3842</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12402519">DERBY-3842</key>
            <summary>Convert &quot;org.apache.derbyTesting.functionTests.tests.store.holdCursorExternalSortJDBC30.sql&quot; to junit.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="thinkallday">Junjie Peng</reporter>
                        <labels>
                    </labels>
                <created>Sun, 17 Aug 2008 09:25:51 +0100</created>
                <updated>Wed, 1 Jul 2009 00:40:22 +0100</updated>
                            <resolved>Tue, 31 Mar 2009 16:43:37 +0100</resolved>
                                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12623186" author="thinkallday" created="Sun, 17 Aug 2008 13:10:03 +0100"  >&lt;p&gt;Please check the patch, thanks!&lt;/p&gt;</comment>
                            <comment id="12625780" author="mamtas" created="Tue, 26 Aug 2008 17:18:41 +0100"  >&lt;p&gt;I am looking at the patch but I am curious, don&apos;t we need to add the converted test to some _Suite.java? &lt;/p&gt;</comment>
                            <comment id="12625803" author="mamtas" created="Tue, 26 Aug 2008 18:46:00 +0100"  >&lt;p&gt;The .sql test uses function PADSTRING to insert data as shown below&lt;br/&gt;
insert into foo values &lt;br/&gt;
    (10,PADSTRING(&apos;10&apos;,2000)), (9,PADSTRING(&apos;9&apos;,2000)), (8,PADSTRING(&apos;8&apos;,2000)), (7,PADSTRING(&apos;7&apos;,2000)), (6,PADSTRING(&apos;6&apos;,2000)), (5,PADSTRING(&apos;5&apos;,2000)), (4,PADSTRING(&apos;4&apos;,2000)), (3,PADSTRING(&apos;3&apos;,2000)), (2,PADSTRING(&apos;2&apos;,2000)), (1,PADSTRING(&apos;1&apos;,2000));&lt;/p&gt;

&lt;p&gt;The junit test does following to replace the usage of PADSTRING in .sql test&lt;br/&gt;
+        String[] rows = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;10&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+        for(int i = rows.length; i &amp;gt;= 1; i--)&lt;/p&gt;
{
+            rows[i - 1] = Formatters.padString(&quot;&quot; + i, 2000);                
+        }
&lt;p&gt;+        &lt;br/&gt;
+        Statement stUtil = createStatement();        &lt;br/&gt;
+        stUtil.executeUpdate(&quot;create table foo (a int, data varchar(2000))&quot;);&lt;br/&gt;
+        stUtil.close();&lt;br/&gt;
+        &lt;br/&gt;
+        PreparedStatement ps = prepareStatement(&lt;br/&gt;
+                &quot;insert into foo values(?,?), (?,?), (?,?), (?,?), (?,?), &quot; +&lt;br/&gt;
+                &quot;(?,?), (?,?), (?,?), (?,?), (?,?)&quot;);&lt;br/&gt;
+        for(int i = 0; i &amp;lt; rows.length; i++)&lt;/p&gt;
{
+            ps.setInt(i * 2 + 1, rows.length - i);
+            ps.setString(i * 2 + 2, rows[rows.length - i - 1]);
+        }
&lt;p&gt;+        ps.executeUpdate();&lt;br/&gt;
+        ps.close();&lt;/p&gt;

&lt;p&gt;I think to imitate the original test, the junit test should create a PADSTRING function and use that to load data into the table. The example of that can be found in StressMultiTest &lt;/p&gt;</comment>
                            <comment id="12625807" author="mamtas" created="Tue, 26 Aug 2008 18:55:39 +0100"  >&lt;p&gt;Thanks for working on the test conversion. It looks pretty good. Just couple more comments. &lt;br/&gt;
1)I think it would be good to drop the table foo at the end of fixture testOrderWthMultipleLevel&lt;br/&gt;
2)Also, like with the other hold cursor tests, I am not sure if it is enough to check the row number after doing a &quot;next&quot; or if we should actually be looking at the actual data returned.&lt;/p&gt;</comment>
                            <comment id="12640116" author="knutanders" created="Thu, 16 Oct 2008 10:28:50 +0100"  >&lt;p&gt;From the comments it seems like the patch is not ready for commit, so I&apos;m unchecking Patch Available.&lt;/p&gt;</comment>
                            <comment id="12689031" author="espinha" created="Wed, 25 Mar 2009 08:37:04 +0000"  >&lt;p&gt;I have done some modifications to this test, but now on a second read of the comments I&apos;m not so sure they were good changes.&lt;/p&gt;

&lt;p&gt;I see we have a setUp and a tearDown, but for JDBC tests can&apos;t/shouldn&apos;t we just use the decorateSQL to create and populate the table?&lt;/p&gt;

&lt;p&gt;Additionally, I see that Mamta suggested that we drop the foo table after the fixture testOrderWithMultipleLevel. On the actual patch by Junjie the table is being dropped at the end of each fixture but I&apos;m not sure about this.&lt;/p&gt;

&lt;p&gt;On the original test it seems to me that the table is created and populated &lt;b&gt;once&lt;/b&gt; and then it is queried on several tests, having only the function, procedure and the table dropped at the end of the whole set.&lt;/p&gt;

&lt;p&gt;Can&apos;t this influence the outcome and the purpose of this test? And maybe even make it slower unnecessarily?&lt;/p&gt;

&lt;p&gt;Finally, I will make it so that we also look at the actual data, since that is actually done on the original test. Although the relevance of this is still debatable I believe. If the cursor isn&apos;t &#171;held&#187;, then the row number will also be different than expected since this isn&apos;t quite a row number but just a regular numeric key that is initially inserted in the database.&lt;/p&gt;</comment>
                            <comment id="12689302" author="espinha" created="Thu, 26 Mar 2009 00:40:50 +0000"  >&lt;p&gt;I attached a patch although I believe it will not be the final one yet.&lt;/p&gt;

&lt;p&gt;A few corrections to myself after having talked with Kathey:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This patch makes use of a single table, populated on decorateSQL. This might not be a good plan in the end, as one of the tests adds data to the table. Then again, the data that is added does not interfere with the data that the other two tests need - so is it wise to leave it as it is?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All in all, it is order-independent even if one of the tests INSERTs into the table.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This patch is now looking at both the value of &quot;a&quot; and the actual data, instead of the row number. I had misunderstood Mamta. What was being done before was that we were looking at the cursor&apos;s row number. I switched this behaviour to look at the data in the table instead, like the original test did.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Finally, this patch is largely based on Junjie&apos;s work (lots of copy-paste and adaptations), so it is be possible that I have missed something.&lt;/p&gt;

&lt;p&gt;Any thoughts or comments are appreciated. I&apos;ll post here the results of the test running once I have them.&lt;/p&gt;</comment>
                            <comment id="12689307" author="espinha" created="Thu, 26 Mar 2009 00:51:04 +0000"  >&lt;p&gt;Fixed patch. Previous one had an issue.&lt;/p&gt;</comment>
                            <comment id="12689334" author="kmarsden" created="Thu, 26 Mar 2009 02:14:04 +0000"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;Thanks for the patches.Please don&apos;t delete previous patches, even if they have problems.  It makes it hard to make sense of the comment history.  You can either give the new patch the same name and Jira will nicely gray out the old ones or you can give it a different name e.g. derby-3842-tiago2.patch, whichever is your preference.&lt;/p&gt;
</comment>
                            <comment id="12689422" author="espinha" created="Thu, 26 Mar 2009 10:23:32 +0000"  >&lt;p&gt;I know I shouldn&apos;t delete old patches, it&apos;s just that the first one I uploaded was missing the &apos;svn add&apos; of the actual test file, so it was completely unusable. The only difference between them is just that.&lt;/p&gt;</comment>
                            <comment id="12689595" author="espinha" created="Thu, 26 Mar 2009 18:40:02 +0000"  >&lt;p&gt;The tests just finished and both suites.All and derbyall ran with no errors.&lt;/p&gt;</comment>
                            <comment id="12689737" author="kmarsden" created="Thu, 26 Mar 2009 23:37:36 +0000"  >&lt;p&gt;Thank you Tiago for picking up this issue. I know it can be tricky picking up a patch that someone else started.  Here are my comments:&lt;/p&gt;

&lt;p&gt;There are methods in BaseJDBCTestCase that can be used instead of calling getConnection().xxx&lt;/p&gt;

&lt;p&gt;Instead of getConnection().setAutoCommit(false), you can just call setAutoComit(false0&lt;/p&gt;

&lt;p&gt;Instead of getConnection().createStatement() and getConnection.prepareStatement()  you can just call createStatement() or prepareStatment and the statements  will get closed automatically so you can take out the closing of the statements. We may not have helper methods for the cases where you need to specify extra arguments.  In those cases, what you have is fine.&lt;/p&gt;


&lt;p&gt;And also just commit()  instead of getConnection.commit();&lt;/p&gt;


&lt;p&gt;Let&apos;s make a separate table for the test with the added rows.&lt;/p&gt;

&lt;p&gt;There are properties in the derby properties for the old test that are not getting set in the new one:&lt;/p&gt;

&lt;p&gt;derby.storage.sortBufferMax=5&lt;br/&gt;
derby.debug.true=testSort&lt;/p&gt;

&lt;p&gt;There is a SystemPropertiesTestSetup class that you can use for setting the properties.&lt;/p&gt;


&lt;p&gt;testOrder_Hold()&lt;/p&gt;

&lt;p&gt;Comment in test says: &quot;Cutover to external sort has been set to 4 rows by the test property file&quot;, but should reflect that we are actually now setting it by Sytem property and that it is actually 5. Similar comments are in the other fixtures. &lt;/p&gt;

&lt;p&gt;I see 10 elements in boolean[] doCommitAfter = &lt;/p&gt;
{true, false, false, false, true, false, false, false, true, true}
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;If I am reading the master, there seems to be some discrepancy between the master and the number and sequence of next calls and commits and the  doCommitAfter array /for loop in the new test.  Could you please recount carefully and fix this up.  I don&apos;t fully understand the store code paths being tested but I think that they are farily specific with this order.&lt;/p&gt;


&lt;p&gt;testOrder_NoHold()&lt;br/&gt;
again the for loop seems to be missing a row and we don&apos;t do/check the final rs.next() which is false.&lt;/p&gt;

&lt;p&gt;testOrderWthMultipleLevel()&lt;br/&gt;
On this one I didn&apos;t carefully double check the commit math. Again, please take a close look before you submit the next patch.&lt;/p&gt;
</comment>
                            <comment id="12689893" author="espinha" created="Fri, 27 Mar 2009 13:28:01 +0000"  >&lt;p&gt;I have started fixing the problems in my patch but you noticed one thing that had totally skipped me: the comments mention that the cutover has been set to 4 rows, but even in the old test it was already set to 5 rows.&lt;/p&gt;

&lt;p&gt;This is wrong, right?&lt;/p&gt;

&lt;p&gt;I&apos;m just trying to make heads or tails of whether this has a direct implication on when we do the commits on the fixtures.&lt;/p&gt;

&lt;p&gt;I might just be about to say the wrongest thing ever but bear with me: having the sortBufferMax set to 5, that means that when we&apos;re doing a sort operation that involves more than 5 records, Derby will automatically use the hard drive to do the sort.&lt;/p&gt;

&lt;p&gt;What are the implications of this from a test perspective? Do we need to commit() before or after the 5th record is pulled?&lt;/p&gt;

&lt;p&gt;This is just a little confusing considering that the comments say one thing and the actual parameters tell a different story. It leaves me wondering whether the old test had already been adapted for a sortBufferMax of 5 or if instead, it was still thought for a value of 4.&lt;/p&gt;

&lt;p&gt;Some thoughts before I issue another patch please?&lt;/p&gt;</comment>
                            <comment id="12689902" author="bryanpendleton" created="Fri, 27 Mar 2009 13:51:50 +0000"  >&lt;p&gt;I don&apos;t think the precise location of the commit or of the sort buffer size matters, because the sorting occurs before&lt;br/&gt;
the first record has been retrieved, so as long as the commit is after the first record has&lt;br/&gt;
been retrieved, whether the overflow-to-disk occurred on the 4th or 5th record doesn&apos;t really matter.&lt;/p&gt;

&lt;p&gt;What matters is that the commit doesn&apos;t close and release the temporary sorted records; that&lt;br/&gt;
would cause some sort of internal error fetching records after the commit if it occurred.&lt;/p&gt;

&lt;p&gt;Ideally, the test would verify that the sort actually &lt;b&gt;did&lt;/b&gt; overflow to disk; I think there is some&lt;br/&gt;
information in the runtime statistics that will prove this. You could also verify that external&lt;br/&gt;
sorting occurred by watching the sorter&apos;s behavior in the debugger, I suppose.&lt;/p&gt;</comment>
                            <comment id="12690010" author="espinha" created="Fri, 27 Mar 2009 19:11:46 +0000"  >&lt;p&gt;Ah, this actually makes sense to me now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll look into finding those runtime statistics as I think this could indeed make the test more trustworthy for its purpose. If due to some bug, this overflow doesn&apos;t happen and all the data is kept in memory, then the results produced by this test can&apos;t be trusted.&lt;/p&gt;</comment>
                            <comment id="12690023" author="kmarsden" created="Fri, 27 Mar 2009 19:55:37 +0000"  >&lt;p&gt;There is the less than perfect  RuntimeStatisticsParser which could potentially  be enhanced to determine this.   You can look at  PredicatePushdownTest for an example of usage.&lt;/p&gt;</comment>
                            <comment id="12693432" author="espinha" created="Sat, 28 Mar 2009 12:53:06 +0000"  >&lt;p&gt;Here&apos;s what I get from the statistics after having:&lt;br/&gt;
1) Set sortBufferMax to 5&lt;br/&gt;
2) Made a Select statement with Order By to 1 column, on  a table with roughly 6000 records of assorted data.&lt;/p&gt;

&lt;p&gt;Source result set:&lt;br/&gt;
	Sort ResultSet:&lt;br/&gt;
	Number of opens = 1&lt;br/&gt;
	Rows input = 6148&lt;br/&gt;
	Rows returned = 6148&lt;br/&gt;
	Eliminate duplicates = false&lt;br/&gt;
	In sorted order = false&lt;br/&gt;
	Sort information: &lt;br/&gt;
		Number of rows input=6148&lt;br/&gt;
		Number of rows output=6148&lt;br/&gt;
		Sort type=internal&lt;br/&gt;
		constructor time (milliseconds) = 0&lt;br/&gt;
		open time (milliseconds) = 0&lt;br/&gt;
		next time (milliseconds) = 0&lt;br/&gt;
		close time (milliseconds) = 0&lt;br/&gt;
		optimizer estimated row count:         5232.00&lt;br/&gt;
		optimizer estimated cost:         1105.97&lt;/p&gt;

&lt;p&gt;Now, sort type=internal? I would have thought that it would give me &quot;external&quot; since the sortBufferMax is set to 5 and we have 6000 rows to sort, but nope. What can I possibly be doing wrong?&lt;/p&gt;</comment>
                            <comment id="12693442" author="bryanpendleton" created="Sat, 28 Mar 2009 14:09:40 +0000"  >&lt;p&gt;I agree. I think we wanted to see sort type &apos;external&apos; here.&lt;/p&gt;

&lt;p&gt;It looks like the code that handles derby.storage.sortBufferMax is around&lt;br/&gt;
line 210 of org.apache.derby.impl.store.access.sort.ExternalSortFactory:&lt;/p&gt;

&lt;p&gt;        else&lt;/p&gt;
        {
            // if user specified derby.storage.sortBufferMax, use it.
                sortBufferMax = defaultSortBufferMax;
        }

&lt;p&gt;Maybe you can investigate whether this code is actually seeing the value&lt;br/&gt;
of sortBufferMax = 5?&lt;/p&gt;</comment>
                            <comment id="12693452" author="espinha" created="Sat, 28 Mar 2009 14:59:38 +0000"  >&lt;p&gt;Wow, you&apos;re right on the money.&lt;/p&gt;

&lt;p&gt;I added the following line right after that else:&lt;br/&gt;
System.out.print(&quot;Sorting and defaultSortBufferMax is &quot; + sortBufferMax);&lt;/p&gt;

&lt;p&gt;And also added the line:&lt;br/&gt;
System.out.println(&quot;Sorting is booting and we have: &quot;+defaultSortBufferMax);&lt;/p&gt;

&lt;p&gt;to the boot method, right after:&lt;br/&gt;
defaultSortBufferMax = PropertyUtil.getSystemInt(&quot;derby.storage.sortBufferMax&quot;,&lt;br/&gt;
								0, Integer.MAX_VALUE, 0);&lt;/p&gt;

&lt;p&gt;The output is as follows:&lt;br/&gt;
2009-03-28 14:54:10.432 GMT : Apache Derby Network Server - 10.6.0.0 alpha - (757793M) started and ready to accept connections on port 1527&lt;br/&gt;
Sorting is booting and we have: 0&lt;br/&gt;
Sorting and defaultSortBufferMax is 6168&lt;/p&gt;


&lt;p&gt;Also, I ran this on ij:&lt;br/&gt;
values SYSCS_UTIL.SYSCS_GET_DATABASE_PROPERTY(&apos;derby.storage.sortBufferMax&apos;);&lt;/p&gt;

&lt;p&gt;and the output is 5 (like I set it to be).&lt;/p&gt;

&lt;p&gt;Could this be a bug or are we missing something? &lt;/p&gt;</comment>
                            <comment id="12693457" author="bryanpendleton" created="Sat, 28 Mar 2009 15:28:40 +0000"  >&lt;p&gt;So in your test, you see the output &quot;Sorting is booting and we have: 0&quot;?&lt;/p&gt;

&lt;p&gt;I wonder if the issue is that Derby is initializing itself and checking for this&lt;br/&gt;
property before your test has had a chance to set the value.&lt;/p&gt;

&lt;p&gt;I think that our test harness has several different variations of ways to&lt;br/&gt;
set system properties, and perhaps we need to use a different testing API&lt;br/&gt;
to set the property so that the boot() method will see the value that we intend.&lt;/p&gt;</comment>
                            <comment id="12693458" author="espinha" created="Sat, 28 Mar 2009 15:40:31 +0000"  >&lt;p&gt;I get that output indeed, but only once I do a SELECT that involves sorting.&lt;/p&gt;

&lt;p&gt;I&apos;m doing this test manually now, I&apos;m running the Network Server manually from my jars/sane/ and then throwing queries at it from ij.&lt;/p&gt;

&lt;p&gt;I also found this pretty old Cloudscape documentation: &lt;a href=&quot;http://www.dwfa.ca/Library/Java/Cloudscape/v3.6.1/doc/html/coredocs/proper39.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.dwfa.ca/Library/Java/Cloudscape/v3.6.1/doc/html/coredocs/proper39.htm&lt;/a&gt; and it does say there &quot;This property is static; if you change it while Cloudscape is running, the change does not take effect until you reboot.&quot;&lt;/p&gt;

&lt;p&gt;I did try this. I tried setting the value with the&lt;br/&gt;
SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(&apos;derby.storage.sortBufferMax&apos;,&apos;5&apos;);&lt;br/&gt;
and then restarted the server. What I found is that the value is kept between &quot;sessions&quot; but ExternalSortFactory still does not seem to see it.&lt;/p&gt;

&lt;p&gt;In a desperate attempt, I also ignored the warning in service.properties and set the derby.storage.sortBufferMax there manually to 5, also with no luck.&lt;/p&gt;</comment>
                            <comment id="12693460" author="bryanpendleton" created="Sat, 28 Mar 2009 15:56:51 +0000"  >&lt;p&gt;What happens if you set the property using the techniques described at:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.4/tuning/ctunsetprop16827.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.4/tuning/ctunsetprop16827.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This (older) page may also be helpful:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/manuals/tuning/perf14.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/manuals/tuning/perf14.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12693467" author="espinha" created="Sat, 28 Mar 2009 16:21:06 +0000"  >&lt;p&gt;That&apos;s an improvement at least &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; now the property does get set as we can see from the output:&lt;br/&gt;
-------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;--------------------------&lt;br/&gt;
2009-03-28 16:04:06.418 GMT : Security manager installed using the Basic server security policy.&lt;br/&gt;
2009-03-28 16:04:07.063 GMT : Apache Derby Network Server - 10.6.0.0 alpha - (757793M) started and ready to accept connections on port 1527&lt;br/&gt;
Sorting is booting and we have: 5&lt;br/&gt;
Sorting and defaultSortBufferMax is 5&lt;br/&gt;
--------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-------------------------&lt;/p&gt;

&lt;p&gt;The crux of it is that the statistics data still reports as doing an internal sort:&lt;br/&gt;
-------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;------------------------------------------------------------------&lt;br/&gt;
Source result set:&lt;br/&gt;
	Sort ResultSet:&lt;br/&gt;
	Number of opens = 1&lt;br/&gt;
	Rows input = 416&lt;br/&gt;
	Rows returned = 416&lt;br/&gt;
	Eliminate duplicates = false&lt;br/&gt;
	In sorted order = false&lt;br/&gt;
	Sort information: &lt;br/&gt;
		Number of rows input=416&lt;br/&gt;
		Number of rows output=416&lt;br/&gt;
		Sort type=internal&lt;br/&gt;
		constructor time (milliseconds) = 0&lt;br/&gt;
		open time (milliseconds) = 0&lt;br/&gt;
		next time (milliseconds) = 0&lt;br/&gt;
		close time (milliseconds) = 0&lt;br/&gt;
		optimizer estimated row count:          422.00&lt;br/&gt;
		optimizer estimated cost:          140.25&lt;br/&gt;
-------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;------------------------------------------------------------------&lt;br/&gt;
(The table is slightly smaller now, just 416 records, but that shouldn&apos;t be an issue with a sortBufferMax of 5)&lt;/p&gt;

&lt;p&gt;So, I think I&apos;m looking at two different issues here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This specific property can&apos;t be set using SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY();&lt;br/&gt;
Or in other words, it can be set but then Derby won&apos;t find it. This will probably not be an issue for my actual test, since I do it programmatically there. Maybe this is even normal and it was just a mistake of mine all along when testing manually.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The other, actual issue, is that Derby still refuses to do external sorting, even when the record count clearly exceeds the sortBufferMax. This one still remains a mystery.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12693468" author="espinha" created="Sat, 28 Mar 2009 16:26:43 +0000"  >&lt;p&gt;One more update: it seems like I fixed it. I set another property on that file (that is actually set on the original test):&lt;br/&gt;
derby.debug.true=testSort&lt;/p&gt;

&lt;p&gt;and I do get an external sort now.&lt;/p&gt;

&lt;p&gt;Weird thing that we need the debug enabled to get external sorts to happen, but well, it&apos;s fixed now and for this test that&apos;s what matters &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your help.&lt;/p&gt;</comment>
                            <comment id="12693509" author="kmarsden" created="Sun, 29 Mar 2009 03:06:21 +0100"  >&lt;p&gt;I don&apos;t think derby.debug.true=testSort should be required for derby.storage.sortBufferMax to work.   If that&apos;s the case, we should probably file a bug.  Make it minor since I don&apos;t immediately see  derby.storage.sortBufferMax documented.&lt;/p&gt;

&lt;p&gt;Also if you are setting it in your test to work around the issue, check your test and see if it works for an insane build.  Typically the derby.debug.* code is  not used for insane builds.&lt;/p&gt;
</comment>
                            <comment id="12693582" author="espinha" created="Sun, 29 Mar 2009 17:33:53 +0100"  >&lt;p&gt;You&apos;re right Kathey. I have built the code and jars in insane mode and the test fails.&lt;/p&gt;

&lt;p&gt;Just some more info that I have been able to acquire through testing:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The sortBufferMax &lt;b&gt;is&lt;/b&gt; being set now. I have been able to confirm this through direct output from the ExternalSortFactory.java and also through the getSystemProperty method. This value is being set to 5 like it should.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When I&apos;m running an insane build, or if I simply omit the derby.debug.true, the tests passing or failing is seemingly random. They fail most of the times but randomly one of them will pass, which I am truly clueless about. I have even set up the test so that it creates two separate tables now, since there&apos;s a test that requires additional data to be added.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When the said tests fail though, I have confirmed that the sortBufferMax is indeed still set to 5, but the statistics just show that an internal sort was done rather than an external one. Weirdly enough, if the debug is set to true, the tests pass all the time. I even made several consecutive runs of the test just to be sure and it is a 100% pass rate.&lt;/p&gt;

&lt;p&gt;Does anyone have any ideas as to why this is happening?&lt;/p&gt;</comment>
                            <comment id="12693623" author="kmarsden" created="Sun, 29 Mar 2009 23:01:48 +0100"  >&lt;p&gt;I am not sure about the intermittent nature, but there does seem to be some code that makes real changes based on testSort:&lt;br/&gt;
In MergeInserter we have&lt;/p&gt;

&lt;p&gt;		if (SanityManager.DEBUG)&lt;br/&gt;
        {&lt;br/&gt;
            if (SanityManager.DEBUG_ON(&quot;testSort&quot;))&lt;/p&gt;
            {
                avoidMergeRun = false;
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;and in MergeSort we have:&lt;br/&gt;
        if (SanityManager.DEBUG_ON(&quot;testSort&quot;))&lt;br/&gt;
                sortBufferMin = sortBufferMax;&lt;/p&gt;

&lt;p&gt;It would be good if someone can shed some light on what is the intended use of derby.debug.true=testSort and whether it should affect derby.storage.sortBufferMax.&lt;/p&gt;</comment>
                            <comment id="12693745" author="espinha" created="Mon, 30 Mar 2009 13:30:11 +0100"  >&lt;p&gt;I was just looking at ExternalSortFactory and MergeInserter and I think sortBufferMax doesn&apos;t really matter at all unless we have the debug on. And it seems like this is an expected behaviour.&lt;/p&gt;

&lt;p&gt;Maybe this parameter isn&apos;t intended for actual use and it&apos;s just there for testing sake? With the debug set to true the tests do use an external sort 100% of the times...&lt;/p&gt;

&lt;p&gt;And then there&apos;s this comment on ExternalSortFactory:&lt;br/&gt;
        // RESOLVE - mikem change this to use estimatedRows and &lt;br/&gt;
        // estimatedRowSize to come up with a smarter number for sortBufferMax&lt;br/&gt;
        // than a fixed number of rows.  At least 2 possibilities:&lt;br/&gt;
        //     1) add sortBufferMaxMem which would be the amount of memory&lt;br/&gt;
        //        the sorter could use, and then just pick the number of &lt;br/&gt;
        //        rows as (sortBufferMaxMem / (estimatedRows * estimatedRowSize)&lt;br/&gt;
        //     2) add sortBufferUsePercentFree.  This would be how much of&lt;br/&gt;
        //        the current free memory can the current sort use.&lt;br/&gt;
        //&lt;/p&gt;

&lt;p&gt;which I think further supports my theory. Maybe it&apos;s not wise to let the user choose a maximum value for their sortBuffer on a row-amount basis?&lt;/p&gt;

&lt;p&gt;Also, how should I go regarding the test? Do I leave it with the debug parameter set and just submit a patch?&lt;/p&gt;</comment>
                            <comment id="12693792" author="bryanpendleton" created="Mon, 30 Mar 2009 15:51:43 +0100"  >&lt;p&gt;I think it&apos;s OK to have a test which only runs in SANE mode. That&apos;s better than not&lt;br/&gt;
having a test at all, in my opinion. And I think that using these special internal&lt;br/&gt;
properties to force the test through the code path that we want it to take is fine,&lt;br/&gt;
because it is after all a test, and is intending to test that particular behavior.&lt;/p&gt;

&lt;p&gt;So I think you should leave your test as is, using the special properties, but&lt;br/&gt;
adjust it so that the test checks to see whether this is a SANE or INSANE build,&lt;br/&gt;
and skips the test in the INSANE configuration, and you should submit your patch.&lt;/p&gt;

&lt;p&gt;It will be good to have a test which we know is reliably forcing an external sort,&lt;br/&gt;
because we need to have coverage of the external sort behaviors and this is one&lt;br/&gt;
way to do that.&lt;/p&gt;</comment>
                            <comment id="12693801" author="kristwaa" created="Mon, 30 Mar 2009 16:21:17 +0100"  >&lt;p&gt;I second Bryan&apos;s comment.&lt;br/&gt;
At the same time I would like to reiterate that tests should be written to be independent of whether Derby has been built in sane or insane mode if possible.&lt;br/&gt;
As a related issue, writing package private tests should also be avoided if feasible. I believe these tests are being run by less people than the other tests.&lt;/p&gt;</comment>
                            <comment id="12693885" author="espinha" created="Mon, 30 Mar 2009 20:30:22 +0100"  >&lt;p&gt;New patch.&lt;/p&gt;

&lt;p&gt;Quick overview:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added the test to the Suite, on the condition that it is a sane build. (Added this condition to the _Suite file, since the whole test should not be added in case it&apos;s an insane environment).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed the following files:&lt;br/&gt;
-&amp;gt; holdCursorExternalSortJDBC30_app.properties&lt;br/&gt;
-&amp;gt; holdCursorExternalSortJDBC30.sql&lt;br/&gt;
-&amp;gt; holdCursorExternalSortJDBC30_derby.properties&lt;br/&gt;
-&amp;gt; holdCursorExternalSortJDBC30.out&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Implemented Kathey&apos;s suggestions&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added a method for checking whether an External Sort was used or not on the RuntimeStatisticsParser. Also added a toString() override on this class, that allow us to have access to the complete output of the runtime statistics.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The tests do check now whether an External Sort was used or not by checking the statistics.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And I think that&apos;s all.&lt;/p&gt;</comment>
                            <comment id="12693937" author="kmarsden" created="Tue, 31 Mar 2009 00:17:27 +0100"  >&lt;p&gt;The patch looks good to me except I am not sure the if (SanityManager.DEBUG)  in store._Suite is going to work with an insane build, because the SanityManager class is not present at all.&lt;/p&gt;

&lt;p&gt;I think you will have to use reflection to determine if this is a sane build and perhaps the best thing to do is put an isSane()  method in TestConfiguration so it can be used by others if needed in the future.&lt;/p&gt;

&lt;p&gt;Then I don&apos;t know if it would be worthwhile to keep the test running for insane builds and then just put the isSane() condition around the RuntimeStatisticsParser call or if the test is just of no use in insane mode.&lt;/p&gt;
</comment>
                            <comment id="12694000" author="espinha" created="Tue, 31 Mar 2009 07:34:17 +0100"  >&lt;p&gt;I am fairly sure that the SanityManager.DEBUG works on insane builds and in that case, it just is set to false.&lt;/p&gt;

&lt;p&gt;I say this because I took the liberty of running just this suite against an insane build and the test was correctly skipped (I added some output to the test&apos;s constructor and this output would show with a sane build but not with an insane one).&lt;/p&gt;

&lt;p&gt;I am nonetheless running the whole derbyall and suites.All on an insane build just to be sure. Both suites did however pass on a sane build (after that little hiccup on derbyall last night, which as you suggested I&apos;ll post as an issue).&lt;/p&gt;</comment>
                            <comment id="12694052" author="espinha" created="Tue, 31 Mar 2009 11:21:18 +0100"  >&lt;p&gt;Both suites.All and derbyall pass on both sane and insane mode. I think it&apos;s safe to say that the check is working properly?&lt;/p&gt;</comment>
                            <comment id="12694111" author="knutanders" created="Tue, 31 Mar 2009 14:29:30 +0100"  >&lt;p&gt;I think you&apos;re right that it&apos;s OK with SanityManager.DEBUG. I haven&apos;t checked, but I think it&apos;s used in some other tests as well without causing any problems. And the use of SanityManager.DEBUG doesn&apos;t cause any problems in the production code, even if the SanityManager class doesn&apos;t exist in the insane jars.&lt;/p&gt;</comment>
                            <comment id="12694159" author="kmarsden" created="Tue, 31 Mar 2009 16:39:13 +0100"  >&lt;p&gt;Thanks Knut and Tiago for the clarification on SanityManager.DEBUG.  I guess it just gets compiled away.  I&apos;ll go ahead and commit the patch.&lt;/p&gt;</comment>
                            <comment id="12694161" author="kmarsden" created="Tue, 31 Mar 2009 16:43:37 +0100"  >&lt;p&gt;Committed revision 760489. &lt;/p&gt;</comment>
                            <comment id="12700276" author="espinha" created="Fri, 17 Apr 2009 19:43:48 +0100"  >&lt;p&gt;The test was converted and the patch committed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12416700">DERBY-4090</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12388377" name="derby-3842-1.patch" size="22721" author="thinkallday" created="Sun, 17 Aug 2008 13:10:03 +0100"/>
                            <attachment id="12388378" name="derby-3842-1.stat" size="700" author="thinkallday" created="Sun, 17 Aug 2008 13:10:03 +0100"/>
                            <attachment id="12404167" name="derby-3842-tiago.patch" size="57484" author="espinha" created="Mon, 30 Mar 2009 20:30:22 +0100"/>
                            <attachment id="12403668" name="derby-3842-tiago.patch" size="54988" author="espinha" created="Thu, 26 Mar 2009 00:51:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Aug 2008 16:18:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31025</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0u1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>