<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1147/DERBY-1147.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1147] Implement miscellaneous CallableStatement methods added by JDBC4</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1147</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;These are described in the overview section 3.1 of the JDBC4 spec:&lt;/p&gt;

&lt;p&gt;&quot;Added the methods getRowId, setRowId, getNClob, getNString,&lt;br/&gt;
getCharacterStream, getNCharacterStream, setNString,&lt;br/&gt;
setNCharacterStream, setNClob, getSQLXML, setSQLXML.&lt;br/&gt;
Overloaded the setClob and setBlob methods.&quot;&lt;/p&gt;

&lt;p&gt;Most of these methods will throw SQLFeatureNotSupporteException because our client drivers do not support the ROWID, National String, and XML datatypes. However, we should implement the getCharacterStream() method and the setClob() and setBlob() overloads.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12330635">DERBY-1147</key>
            <summary>Implement miscellaneous CallableStatement methods added by JDBC4</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Mar 2006 08:31:22 +0000</created>
                <updated>Tue, 15 May 2007 10:43:35 +0100</updated>
                            <resolved>Tue, 15 May 2007 10:43:35 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12372423" author="kristwaa" created="Thu, 30 Mar 2006 21:58:42 +0100"  >&lt;p&gt;&apos;derby-1147-1a-missing-methods.diff&apos; adds the missing methods for CallableStatement, on both embedded and client side. All new methods throw SQLFeatureNotSupported exceptions (via Util.notImplemented or SQLExceptionFactory.notImplemented), except for those in BrokeredCallableStatement40.&lt;/p&gt;

&lt;p&gt;The old jdbc4 test has been rewritten to a JUnit test, and some new tests have been added. The test is run as part of the jdbc40 suite. I am a bit unsure about the JavaDoc. Should I add some, or is it the doc for the interface used? The patch is ready for review and commit.&lt;/p&gt;

&lt;p&gt;Another patch will be submitted to implement the methods getCharacterStream, setBlob and setClob.&lt;/p&gt;</comment>
                            <comment id="12372609" author="rhillegas" created="Fri, 31 Mar 2006 10:49:39 +0100"  >&lt;p&gt;JDBC4 tests run cleanly. Committed derby-1147-1a-missing-methods.diff at subversion revision 390292.&lt;/p&gt;</comment>
                            <comment id="12373538" author="kristwaa" created="Fri, 7 Apr 2006 04:39:04 +0100"  >&lt;p&gt;&apos;derby-1147-2a-getcharacterstream.diff&apos; is a &lt;b&gt;preliminary&lt;/b&gt; patch implementing CallableStatement.getCharacterStream(int). Since I have little knowledge about this part of Derby, I would like to get some feedback from people more familiar with this code. The method is implemented for both client and embedded mode, and I have written some tests. The implementation is based on existing code in other parts of Derby. The supported types are taken from table B-6 of the JDBC4 spec, and seems to be in agreement with existing Derby methods.&lt;/p&gt;

&lt;p&gt;Some questions and obervations:&lt;br/&gt;
1) testGetCharacterStreamIntOnInParameterOfInvalidType fails for embedded (see point 7 below).&lt;br/&gt;
2) I have not taken maximum length into consideration (data truncation), as I read the JavaDoc as setMaxField only applies to ResultSet. Correct me if this is wrong.&lt;br/&gt;
3) Is the usage of setupContextStack/restoreContextStack correct and necessary? Why?&lt;br/&gt;
4) Should the embedded implementation be moved to EmbedCallableStatement20?&lt;br/&gt;
5) Have I forgotten some internal variables that must be maintained?&lt;br/&gt;
6) Support for Clob and Blob are included, although these types are not allowed (yet) as parameters in CallableStatement in Derby.&lt;/p&gt;

&lt;p&gt;7) Due to a bit different designs/implementations, getCharacterStream will throw different exceptions when calling it on an IN parameter of a non-supported type (for instance DOUBLE). On the client side it will correctly state that the parameter is not an OUT/INOUT parameter, while the embedded side complains about a data conversion error. There are at least two ways to fix this: &lt;br/&gt;
    A) duplicate check code from GenericParameterValueSet.getParameterForGet and call it before switch block in getCharacterStream&lt;br/&gt;
    B) call GenericParameterValueSet.getParameterForGet before switch block in getCharacterStream, even for invalid data types&lt;br/&gt;
Any opinions on the best way to solve this? Have I overlooked some existing functionality I can use?&lt;/p&gt;


&lt;p&gt;I will keep working on this, and feedback and pieces of advice is appreciated.&lt;/p&gt;</comment>
                            <comment id="12373706" author="rhillegas" created="Sat, 8 Apr 2006 09:44:19 +0100"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;Here are some responses to some of your questions:&lt;/p&gt;

&lt;p&gt;(2) Your approach sounds reasonable to me.&lt;/p&gt;

&lt;p&gt;(4) The general pattern seems to be to push useful methods as far up the inheritance graph as possible. We can&apos;t do this for methods whose signatures contain classes that don&apos;t appear in JDBC2 and JDBC3. But your method doesn&apos;t suffer from this problem.&lt;/p&gt;

&lt;p&gt;(7) Calling the OUT/INOUT check before the datatype check seems sensible to me. I would expect the former check to trump the latter.&lt;/p&gt;</comment>
                            <comment id="12374962" author="kristwaa" created="Wed, 19 Apr 2006 00:01:24 +0100"  >&lt;p&gt;&apos;derby-1147-2b-getcharacterstream.diff&apos; implements getCharacterStream(int) for embeddded and client. I have adressed a few things:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;moved embedded implementation from EmbedCallableStatement40.java to EmbedCallableStatement20.java.&lt;/li&gt;
	&lt;li&gt;duplicated check for OUT and  IN/OUT in embedded implementation to make client and embedded behave the same.&lt;/li&gt;
	&lt;li&gt;removed blank lines from end of EmbedCallableStatement20.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have added 8 test cases, but if someone has more/other scenarios for the use of getCharacterStream, it would be great. I have not done anything special for handling big data volumes, and size is currently capped at ~32KB &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; due to the lack of support for CLOB/BLOB for CallableStatement/stored procedures.&lt;/p&gt;

&lt;p&gt;I have run the jdbc40 suite, and it passed without failures (Solaris 10). I have also started a derbyall run, and will report if I find errors related to the patch.&lt;/p&gt;

&lt;p&gt;The patch is ready for review/commit.&lt;/p&gt;</comment>
                            <comment id="12375140" author="rhillegas" created="Wed, 19 Apr 2006 23:19:01 +0100"  >&lt;p&gt;Thanks for the ample explanation. Looks solid thanks to the pre-review of the preliminary patch. JDBC4 tests run cleanly. Derbyall runs cleanly modulo wisconsin diffs (on solaris). Committed at subversion revision 395263.&lt;/p&gt;</comment>
                            <comment id="12376023" author="kristwaa" created="Mon, 24 Apr 2006 20:44:31 +0100"  >&lt;p&gt;Patch committed and no problems reported. Closing issue.&lt;/p&gt;</comment>
                            <comment id="12495925" author="kristwaa" created="Tue, 15 May 2007 10:43:22 +0100"  >&lt;p&gt;Reopening to set fix version.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12324761" name="derby-1147-1a-missing-methods.diff" size="26338" author="kristwaa" created="Thu, 30 Mar 2006 21:58:42 +0100"/>
                            <attachment id="12324762" name="derby-1147-1a-missing-methods.stat" size="506" author="kristwaa" created="Thu, 30 Mar 2006 21:58:42 +0100"/>
                            <attachment id="12325015" name="derby-1147-2a-getcharacterstream.diff" size="31679" author="kristwaa" created="Fri, 7 Apr 2006 04:39:04 +0100"/>
                            <attachment id="12325014" name="derby-1147-2a-getcharacterstream.stat" size="415" author="kristwaa" created="Fri, 7 Apr 2006 04:39:01 +0100"/>
                            <attachment id="12325504" name="derby-1147-2b-getcharacterstream.diff" size="33190" author="kristwaa" created="Wed, 19 Apr 2006 00:01:24 +0100"/>
                            <attachment id="12325503" name="derby-1147-2b-getcharacterstream.stat" size="557" author="kristwaa" created="Wed, 19 Apr 2006 00:01:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 30 Mar 2006 20:58:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29874</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy129r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40018</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>