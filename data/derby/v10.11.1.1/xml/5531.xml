<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5531/DERBY-5531.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5531] Assert failure when inserting NULL into indexed column with territory-based collation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5531</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:colldb;territory=en;collation=TERRITORY_BASED;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table t(x varchar(10) unique);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values null;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED type of inserted column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.SQLVarchartype of template column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;ASSERT FAILED type of inserted column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.SQLVarchartype of template column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:98)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:436)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2288)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.tools.run.main(run.java:53)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;ASSERT FAILED type of inserted column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.SQLVarchartype of template column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
	... 18 more&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.SQLVarchartype of template column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.CollatorSQLVarchar&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:515)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:679)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1374)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:210)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:440)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:383)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:590)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:999)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:519)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	... 11 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="12534778">DERBY-5531</key>
            <summary>Assert failure when inserting NULL into indexed column with territory-based collation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_triage10_9</label>
                    </labels>
                <created>Mon, 12 Dec 2011 12:34:21 +0000</created>
                <updated>Sun, 25 Nov 2012 20:14:46 +0000</updated>
                            <resolved>Tue, 28 Aug 2012 17:28:04 +0100</resolved>
                                    <version>10.8.2.2</version>
                                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13168677" author="mikem" created="Tue, 13 Dec 2011 20:15:22 +0000"  >&lt;p&gt;repro&apos;d for me also.  Here is full stack on my system from derby.log:&lt;/p&gt;


&lt;p&gt;Tue Dec 13 12:11:11 PST 2011:&lt;br/&gt;
Booting Derby version The Apache Software Foundation - Apache Derby - 10.9.0.0 alpha - (1): instance a816c00e-0134-390c-db37-00000001711d&lt;br/&gt;
on database directory C:\mikem&amp;#95;db\colldb  with class loader sun.misc.Launcher$AppClassLoader@69326932&lt;br/&gt;
Loaded from &lt;a href=&quot;file:/C:/derby/s1/classes/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/C:/derby/s1/classes/&lt;/a&gt;^M&lt;br/&gt;
java.vendor=IBM Corporation&lt;br/&gt;
java.runtime.version=jvmwi3260sr9-20101124_69295&lt;br/&gt;
java.fullversion=JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-20101124_69295 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20101124_069295&lt;br/&gt;
JIT  - r9_20101028_17488ifx2&lt;br/&gt;
GC   - 20101027_AA&lt;br/&gt;
user.dir=C:\mikem^M&lt;br/&gt;
derby.system.home=_db^M&lt;br/&gt;
Database Class Loader started - derby.database.classpath=&apos;&apos;^M&lt;br/&gt;
Tue Dec 13 12:11:49 PST 2011 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 202), (SESSIONID = 1), (DATABASE = colldb), (DRDAID = null), Cleanup action starting^M&lt;br/&gt;
Tue Dec 13 12:11:49 PST 2011 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 202), (SESSIONID = 1), (DATABASE = colldb), (DRDAID = null), Failed Statement is: insert into&lt;br/&gt;
t values null^M&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.SQLVarchartype of template&lt;br/&gt;
 column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = org.apache.derby.iapi.types.CollatorSQLVarchar^M&lt;br/&gt;
    at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)^M&lt;br/&gt;
    at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)^M&lt;br/&gt;
    at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:515)^M&lt;br/&gt;
    at org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:679)^M&lt;br/&gt;
    at org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1374)^M&lt;br/&gt;
    at org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:210)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:440)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:383)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:590)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:999)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:519)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)^M&lt;br/&gt;
    at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)^M&lt;br/&gt;
    at org.apache.derby.tools.ij.main(ij.java:59)^M&lt;/p&gt;</comment>
                            <comment id="13168680" author="mikem" created="Tue, 13 Dec 2011 20:17:26 +0000"  >&lt;p&gt;insert of a string works, so null is the special case causing the bug.  At least at first look it looks like the calling code to store is wrong and that the type of column containing the null should be CollatorSQLVarchar.  &lt;/p&gt;</comment>
                            <comment id="13215455" author="kristwaa" created="Fri, 24 Feb 2012 07:17:56 +0000"  >&lt;p&gt;Just noting that running with an insane build dosen&apos;t result in any error, neither in the insert nor in a subsequent select.&lt;/p&gt;</comment>
                            <comment id="13434254" author="mamtas" created="Tue, 14 Aug 2012 17:41:57 +0100"  >&lt;p&gt;I have been debugging this issue and found that, for some reason, for a non-null value, we have a NormalizeResultSet which does the conversion for char to territory based char equivalent at execution time. But, for null value, we do not have NormalizeResultSet and hence no such conversion of data type happens. The conversion probably is not necessary since we are dealing with nulls. I am debugging further to see where the decision is happening about the requirement of NormalizeResultSet.&lt;/p&gt;</comment>
                            <comment id="13436064" author="mamtas" created="Thu, 16 Aug 2012 17:14:57 +0100"  >&lt;p&gt;It looks like at bind time of insert node, we go through the individual columns in the insert statement to determine if there is a need for normalization or not. For some reason, for our insert staement in this jira, we conclude that we do not need normalization and hence at execution time, the data type conversion from SQLVarchar to CollatorSQLVarchar never happens and hence the assert failure in OpenBTree.java. Here is the relevant code in InsertNode.bindStatement()&lt;br/&gt;
		/* Insert a NormalizeResultSetNode above the source if the source&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;and target column types and lengths do not match.&lt;br/&gt;
 		 */&lt;br/&gt;
		if (! resultColumnList.columnTypesAndLengthsMatch(&lt;br/&gt;
												resultSet.getResultColumns()))
		{
            
			resultSet = 
			(ResultSetNode) getNodeFactory().getNode(
			C_NodeTypes.NORMALIZE_RESULT_SET_NODE, resultSet,
			resultColumnList, null, Boolean.FALSE,
			getContextManager());
		}&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13437258" author="mamtas" created="Sat, 18 Aug 2012 07:21:00 +0100"  >&lt;p&gt;I went through the code and have following 2 proposals.&lt;br/&gt;
a)ResultColumnList.java&apos;s method columnTypesAndLengthMatch returns false if it finds a mismatch between column types and lengths.Based on this return value, the calling method InsertNode.bind determines if it needs a Normalize ResultSet. If the column has null value as it can be in the following example, the method columnTypesAndLengthMatch returns true even though the column length is not really the size of the underlying table&apos;s column. &lt;br/&gt;
insert into t values null;&lt;br/&gt;
We can change columnTypesAndLengthMatch to return false(as shown below) if the insert value is null but it will add additional runtime processing because of the Normalize ResultSet(I am attaching DERBY5531_proposal1_diff.txt which shows the proposed changes for this proposal).&lt;br/&gt;
  if((otherResultColumn.getExpression() instanceof ConstantNode) &amp;amp;&amp;amp;&lt;br/&gt;
	 ((ConstantNode) otherResultColumn.getExpression()).isNull()) &lt;/p&gt;
{
	ConstantNode otherResultColumnConstNode = (ConstantNode)otherResultColumn.getExpression();
	if (otherResultColumnConstNode.isNull())
		return false;
	}
&lt;p&gt;I don&apos;t know the history behind why we have chosen not to have a normalize resultset if the values being inserted are null.This existing behavior of not having a normalize resultset for null values has not resulted in any bugs and hence I would prefer us not going with this proposal of adding normalize resultset on top of null insert values. I would prefer the 2nd proposal which is as follows.&lt;br/&gt;
2)As per this proposal, we should change OpenBTree.isIndexableRowConsistent  to not throw an assert failure if dealing with null values. If the value is null, then we should not assert the column datatypes. As it is, this method is meaningful only in sane mode. As we have seen in this jira, insane jars do not give any error for the test case provided in the jira. I am attaching &lt;br/&gt;
DERBY5531_proposal2_diff.txt which shows the proposed changes for this proposal.&lt;/p&gt;

&lt;p&gt;I have added test cases in CollationTest.&lt;/p&gt;

&lt;p&gt;I have run derbyall and junit suite with both the proposals and there were no issues with the tests.&lt;/p&gt;</comment>
                            <comment id="13438149" author="dagw" created="Mon, 20 Aug 2012 21:07:51 +0100"  >&lt;p&gt;+1 to approach 2)&lt;/p&gt;</comment>
                            <comment id="13448405" author="mamtas" created="Wed, 5 Sep 2012 03:33:55 +0100"  >&lt;p&gt;changes went in as revision 1378206 in trunk&lt;br/&gt;
Backport went as revision 1378787 in 10.9 codelines.&lt;br/&gt;
Backport went as revision 1378788 in 10.8 codelines.&lt;br/&gt;
Backport went as revision 1380946 in 10.7 codelines.&lt;br/&gt;
Backport went as revision 1380950 in 10.6 codelines.&lt;br/&gt;
Backport went as revision 1381271 in 10.5 codelines.&lt;/p&gt;</comment>
                            <comment id="13449026" author="mamtas" created="Wed, 5 Sep 2012 20:14:04 +0100"  >&lt;p&gt;This jira has been backported upto 10.5. &lt;/p&gt;

&lt;p&gt;If anyone is in need of further backporting, they can backport it upto 10.3 which is where territory based collation was introduced.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12541472" name="DERBY5531_proposal1_diff.txt" size="3601" author="mamtas" created="Sat, 18 Aug 2012 07:20:59 +0100"/>
                            <attachment id="12541473" name="DERBY5531_proposal2_diff.txt" size="3453" author="mamtas" created="Sat, 18 Aug 2012 07:21:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Dec 2011 20:15:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>220462</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0a73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35470</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>