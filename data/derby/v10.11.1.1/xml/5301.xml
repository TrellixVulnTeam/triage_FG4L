<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5301/DERBY-5301.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5301] Convert store/TableLockBasic.sql  to junit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5301</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12511996">DERBY-5301</key>
            <summary>Convert store/TableLockBasic.sql  to junit</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12502097">DERBY-5147</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="houxzhang">Houx Zhang</assignee>
                                    <reporter username="houxzhang">Houx Zhang</reporter>
                        <labels>
                            <label>gsoc2011</label>
                    </labels>
                <created>Tue, 28 Jun 2011 15:21:26 +0100</created>
                <updated>Thu, 1 Sep 2011 15:37:17 +0100</updated>
                            <resolved>Thu, 1 Sep 2011 01:48:17 +0100</resolved>
                                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13090266" author="houxzhang" created="Wed, 24 Aug 2011 15:46:15 +0100"  >&lt;p&gt;5301-1-part.patch has covered most of testing range, but is not the final patch. &lt;/p&gt;

&lt;p&gt;testRTSOutput() failed in my PC,  I haven&apos;t resolved even with a lot of time to debug. Maybe it has relation to &quot;values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()&quot; . &lt;/p&gt;

&lt;p&gt;Wish for your help, please!&lt;/p&gt;</comment>
                            <comment id="13090270" author="houxzhang" created="Wed, 24 Aug 2011 15:49:51 +0100"  >&lt;p&gt;Besides, how to deal with &quot;maximumdisplaywidth 2000;&quot; in JUnit, please?&lt;/p&gt;</comment>
                            <comment id="13091787" author="bryanpendleton" created="Fri, 26 Aug 2011 15:11:10 +0100"  >&lt;p&gt;I wonder if I am not building/running the test properly. In my environment, I get a lot of failures. I am attaching the output of my test run.&lt;/p&gt;

&lt;p&gt;Do you see similar output?&lt;/p&gt;</comment>
                            <comment id="13092314" author="houxzhang" created="Sat, 27 Aug 2011 16:26:25 +0100"  >&lt;p&gt;Hi,Bryan. In my PC, the test just ran with one failure.&lt;/p&gt;

&lt;p&gt;D:\derby\test&amp;gt;java junit.textui.TestRunner org.apache.derbyTesting.functionTests&lt;br/&gt;
.tests.store.TableLockBasicTest&lt;br/&gt;
..............F..............F&lt;br/&gt;
Time: 6.407&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) testRTSOutput(org.apache.derbyTesting.functionTests.tests.store.TableLockBasi&lt;br/&gt;
cTest)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;,&lt;br/&gt;
row 1:&lt;br/&gt;
    Expected: &amp;gt;Statement Name:&lt;br/&gt;
 null&lt;br/&gt;
Statement Text:&lt;br/&gt;
 select * from rts with cs&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
Table Scan ResultSet for RTS at read committed isolation level using instantaneo&lt;br/&gt;
us share row locking chosen by the optimizer (Actual locking used: table level l&lt;br/&gt;
ocking.)&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 1&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
 constructor time (milliseconds) = 0&lt;br/&gt;
 open time (milliseconds) = 0&lt;br/&gt;
 next time (milliseconds) = 0&lt;br/&gt;
 close time (milliseconds) = 0&lt;br/&gt;
 next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
 Bit set of columns fetched=All&lt;br/&gt;
 Number of columns fetched=1&lt;br/&gt;
 Number of pages visited=1&lt;br/&gt;
 Number of rows qualified=1&lt;br/&gt;
 Number of rows visited=1&lt;br/&gt;
 Scan type=heap&lt;br/&gt;
 start position:&lt;br/&gt;
  null&lt;br/&gt;
 stop position:&lt;br/&gt;
  null&lt;br/&gt;
 qualifiers:&lt;br/&gt;
  None&lt;br/&gt;
optimizer estimated row count:            6.00&lt;br/&gt;
optimizer estimated cost:          100.40&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;Statement Name:&lt;br/&gt;
        null&lt;br/&gt;
Statement Text:&lt;br/&gt;
        select * from rts with cs&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
Table Scan ResultSet for RTS at read committed isolation level using instantaneo&lt;br/&gt;
us share row locking chosen by the optimizer (Actual locking used: table level l&lt;br/&gt;
ocking.)&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 1&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
        Bit set of columns fetched=All&lt;br/&gt;
        Number of columns fetched=1&lt;br/&gt;
        Number of pages visited=1&lt;br/&gt;
        Number of rows qualified=1&lt;br/&gt;
        Number of rows visited=1&lt;br/&gt;
        Scan type=heap&lt;br/&gt;
        start position:&lt;br/&gt;
                null&lt;br/&gt;
        stop position:&lt;br/&gt;
                null&lt;br/&gt;
        qualifiers:&lt;br/&gt;
                None&lt;br/&gt;
        optimizer estimated row count:            6.00&lt;br/&gt;
        optimizer estimated cost:          100.40&amp;lt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:121&lt;br/&gt;
3)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:112&lt;br/&gt;
5)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.jav&lt;br/&gt;
a:1012)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:935)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:892)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:850)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.functionTests.tests.store.TableLockBasicTest.&lt;br/&gt;
testRTSOutput(TableLockBasicTest.java:500)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
2) testRTSOutput(org.apache.derbyTesting.functionTests.tests.store.TableLockBasi&lt;br/&gt;
cTest)junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;,&lt;br/&gt;
row 1:&lt;br/&gt;
    Expected: &amp;gt;Statement Name:&lt;br/&gt;
 null&lt;br/&gt;
Statement Text:&lt;br/&gt;
 select * from rts with cs&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
Table Scan ResultSet for RTS at read committed isolation level using instantaneo&lt;br/&gt;
us share row locking chosen by the optimizer (Actual locking used: table level l&lt;br/&gt;
ocking.)&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 1&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
 constructor time (milliseconds) = 0&lt;br/&gt;
 open time (milliseconds) = 0&lt;br/&gt;
 next time (milliseconds) = 0&lt;br/&gt;
 close time (milliseconds) = 0&lt;br/&gt;
 next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
 Bit set of columns fetched=All&lt;br/&gt;
 Number of columns fetched=1&lt;br/&gt;
 Number of pages visited=1&lt;br/&gt;
 Number of rows qualified=1&lt;br/&gt;
 Number of rows visited=1&lt;br/&gt;
 Scan type=heap&lt;br/&gt;
 start position:&lt;br/&gt;
  null&lt;br/&gt;
 stop position:&lt;br/&gt;
  null&lt;br/&gt;
 qualifiers:&lt;br/&gt;
  None&lt;br/&gt;
optimizer estimated row count:            6.00&lt;br/&gt;
optimizer estimated cost:          100.40&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;Statement Name:&lt;br/&gt;
        SQL_CURLH000C3&lt;br/&gt;
Statement Text:&lt;br/&gt;
        select * from rts with cs&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
Table Scan ResultSet for RTS at read committed isolation level using instantaneo&lt;br/&gt;
us share row locking chosen by the optimizer (Actual locking used: table level l&lt;br/&gt;
ocking.)&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 1&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
        Bit set of columns fetched=All&lt;br/&gt;
        Number of columns fetched=1&lt;br/&gt;
        Number of pages visited=1&lt;br/&gt;
        Number of rows qualified=1&lt;br/&gt;
        Number of rows visited=1&lt;br/&gt;
        Scan type=heap&lt;br/&gt;
        start position:&lt;br/&gt;
                null&lt;br/&gt;
        stop position:&lt;br/&gt;
                null&lt;br/&gt;
        qualifiers:&lt;br/&gt;
                None&lt;br/&gt;
        optimizer estimated row count:            6.00&lt;br/&gt;
        optimizer estimated cost:          100.40&amp;lt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:121&lt;br/&gt;
3)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:112&lt;br/&gt;
5)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.jav&lt;br/&gt;
a:1012)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:935)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:892)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:850)&lt;/p&gt;

&lt;p&gt;        at org.apache.derbyTesting.functionTests.tests.store.TableLockBasicTest.&lt;br/&gt;
testRTSOutput(TableLockBasicTest.java:500)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 28,  Failures: 2,  Errors: 0&lt;/p&gt;


&lt;p&gt;D:\derby\test&amp;gt;&lt;/p&gt;</comment>
                            <comment id="13092331" author="bryanpendleton" created="Sat, 27 Aug 2011 18:34:41 +0100"  >&lt;p&gt;For some reason, the test&apos;s setup code which is supposed to force table-level locking isn&apos;t working for me.&lt;/p&gt;

&lt;p&gt;If I run the test with -Dderby.storage.rowLocking=false on the command line, then I see the same results&lt;br/&gt;
that you do. But if I don&apos;t specify that flag when I start junit, the test cases all fail because I am not doing&lt;br/&gt;
the expected table-level locking.&lt;/p&gt;

&lt;p&gt;It took me a while to figure this out because when this happens, the test case gets an assertion about&lt;br/&gt;
the table-level locking problem, but then the tearDown() method gets another assertion, and that exception&lt;br/&gt;
hides the test problem.&lt;/p&gt;

&lt;p&gt;I think it might be better to move the view-dropping code out of the tearDown method and into normal&lt;br/&gt;
subroutines that are called by each test case, to avoid this exception-hiding problem. Or maybe the tearDown&lt;br/&gt;
method should catch and ignore any exceptions that occur in that method?&lt;/p&gt;</comment>
                            <comment id="13092334" author="bryanpendleton" created="Sat, 27 Aug 2011 18:53:12 +0100"  >&lt;p&gt;The test failures that you are seeing in your run are due to two reasons:&lt;/p&gt;

&lt;p&gt;1) First, the output of SYSCS_GET_RUNTIMESTATISTICS contains literal tab characters (^I), but&lt;br/&gt;
your test program in the patch contains spaces. When I changed TableLockBasicTest.java to contain&lt;br/&gt;
the expected tab characters in the right places, the test passes in one configuration (embedded?) but&lt;br/&gt;
fails in the other configuration (client/server?) &amp;#8211; I may have the two configurations backward.&lt;/p&gt;

&lt;p&gt;2) The remaining test failure is because the statement name is null in one configuration but is &lt;br/&gt;
SQL_CURLH000C3 in the other configuration. That is, the remaining test failure that I see is:&lt;br/&gt;
1,2c1,2&lt;br/&gt;
&amp;lt;     Expected: &amp;gt;Statement Name: &lt;br/&gt;
&amp;lt; 	null&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;     Found:    &amp;gt;Statement Name: &lt;br/&gt;
&amp;gt; 	SQL_CURLH000C3&lt;/p&gt;

&lt;p&gt;Perhaps you could get around that by using &lt;/p&gt;

&lt;p&gt;    if (getTestConfiguration().getJDBCClient().isEmbedded())&lt;/p&gt;

&lt;p&gt;to build a different expected result string for each configuration?&lt;/p&gt;

&lt;p&gt;I&apos;ll attach the version of TableLockBasicTest.java that I&apos;ve been fiddling with for you to&lt;br/&gt;
see what I did to make the tests pass.&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;

</comment>
                            <comment id="13092335" author="bryanpendleton" created="Sat, 27 Aug 2011 18:55:00 +0100"  >&lt;p&gt;Attached TableLockBasicTest.java.&lt;/p&gt;

&lt;p&gt;With hard tabs, and statement name built based on test configuration. &lt;/p&gt;

&lt;p&gt;Passes for me, but only if I set  -Dderby.storage.rowLocking=false when running it; I&apos;m not sure why that is.&lt;/p&gt;</comment>
                            <comment id="13092341" author="knutanders" created="Sat, 27 Aug 2011 19:23:08 +0100"  >&lt;p&gt;derby.storage.rowLocking is a static property, so a reboot of the database is needed for it to take effect. I&apos;d suggest using a DatabasePropertyTestSetup for this, which handles rebooting of the database if it&apos;s created with staticProperties=true. That will also reset the property when the test it done, so that it doesn&apos;t interfere with subsequent tests.&lt;/p&gt;</comment>
                            <comment id="13092342" author="knutanders" created="Sat, 27 Aug 2011 19:28:05 +0100"  >&lt;p&gt;&amp;gt; Besides, how to deal with &quot;maximumdisplaywidth 2000;&quot; in JUnit, please?&lt;/p&gt;

&lt;p&gt;That command is only there so that ij doesn&apos;t truncate the result from SYSCS_GET_RUNTIMESTATISTICS. Since ResultSet.getString() will make the entire result available to the test without such magic, it can safely be skipped now when the test is written in JUnit.&lt;/p&gt;</comment>
                            <comment id="13092345" author="knutanders" created="Sat, 27 Aug 2011 19:36:49 +0100"  >&lt;p&gt;&amp;gt; It took me a while to figure this out because when this happens, the test case gets an assertion about&lt;br/&gt;
&amp;gt; the table-level locking problem, but then the tearDown() method gets another assertion, and that exception&lt;br/&gt;
&amp;gt; hides the test problem.&lt;/p&gt;

&lt;p&gt;I think this is something that was fixed in JUnit 3.8.2, so that newer versions don&apos;t let failures in tearDown() hide failures in the test methods. In case you&apos;re still using JUnit 3.8.1 to run the tests.&lt;/p&gt;</comment>
                            <comment id="13092346" author="bryanpendleton" created="Sat, 27 Aug 2011 19:50:46 +0100"  >&lt;p&gt;Heh. I still operate this computer by turning the crank on the side &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; That&apos;s a good suggestion,&lt;br/&gt;
I will try to upgrade to 3.8.2.&lt;/p&gt;</comment>
                            <comment id="13092892" author="houxzhang" created="Mon, 29 Aug 2011 16:00:08 +0100"  >&lt;p&gt;Thanks for your valuable advice, Bryan and Knut. I have adjusted TableLockBasic.java based on Bryan&apos;s version, using DatabasePropertyTestSetUp to set derby.storage.rowLocking=false. However, a new failure is met in testDDLTableLockMode(). After executed&lt;/p&gt;

&lt;p&gt;&quot;create table default_granularity(c1 int);&lt;br/&gt;
create table row_granularity(c1 int);&lt;br/&gt;
alter table row_granularity locksize row;&lt;br/&gt;
create table table_granularity(c1 int);&lt;br/&gt;
alter table table_granularity locksize table;&lt;br/&gt;
select * from default_granularity with cs;&quot;&lt;/p&gt;

&lt;p&gt;&quot;values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();&quot; has got null, which is diffrent from the TableLockBasic.out.&lt;/p&gt;

&lt;p&gt;Could you give any advice, please?&lt;/p&gt;</comment>
                            <comment id="13093360" author="bryanpendleton" created="Tue, 30 Aug 2011 02:39:57 +0100"  >&lt;p&gt;If I add the line:&lt;/p&gt;

&lt;p&gt;        st.execute(&quot;call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)&quot;);&lt;/p&gt;

&lt;p&gt;at line 552 of TableLockBasicTest.java, then the runtime statistics come back non-null.&lt;/p&gt;

&lt;p&gt;Then I also have to insert the literal TAB characters into the expected output, just like&lt;br/&gt;
we did with the other RTS test output, to make it match the actual results.&lt;/p&gt;

&lt;p&gt;And, I have to adjust the statement name for embedded vs client/server.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach my updated test program in a sec...&lt;/p&gt;</comment>
                            <comment id="13093368" author="bryanpendleton" created="Tue, 30 Aug 2011 02:51:40 +0100"  >&lt;p&gt;Attached updated test program. It now passes for me!&lt;/p&gt;</comment>
                            <comment id="13093770" author="houxzhang" created="Tue, 30 Aug 2011 15:29:13 +0100"  >&lt;p&gt;Hi, Bryan. It works now. The new patch  has finished all test cases, please check it.&lt;/p&gt;</comment>
                            <comment id="13094608" author="bryanpendleton" created="Wed, 31 Aug 2011 16:12:36 +0100"  >&lt;p&gt;The most recent patch looks great to me. Both the old and new test suites pass&lt;br/&gt;
in my configuration, and the new test program looks thorough and complete.&lt;/p&gt;

&lt;p&gt;I&apos;m intending to commit this patch.&lt;/p&gt;</comment>
                            <comment id="13095029" author="bryanpendleton" created="Thu, 1 Sep 2011 01:48:17 +0100"  >&lt;p&gt;Committed patch 3 to the trunk as revision 1163880.&lt;/p&gt;

&lt;p&gt;Thank you for the contribution to Derby!&lt;/p&gt;</comment>
                            <comment id="13095319" author="houxzhang" created="Thu, 1 Sep 2011 15:37:17 +0100"  >&lt;p&gt;Thanks for your advice on this issue, Bryan.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12491490" name="5301-1-part.patch" size="23320" author="houxzhang" created="Wed, 24 Aug 2011 15:46:15 +0100"/>
                            <attachment id="12492081" name="5301-2-part.patch" size="25477" author="houxzhang" created="Mon, 29 Aug 2011 16:00:08 +0100"/>
                            <attachment id="12492247" name="5301-3.patch" size="90719" author="houxzhang" created="Tue, 30 Aug 2011 15:29:13 +0100"/>
                            <attachment id="12492248" name="5301-3.stat" size="637" author="houxzhang" created="Tue, 30 Aug 2011 15:29:13 +0100"/>
                            <attachment id="12492175" name="TableLockBasicTest.java" size="24099" author="bryanpendleton" created="Tue, 30 Aug 2011 02:51:40 +0100"/>
                            <attachment id="12491968" name="TableLockBasicTest.java" size="21863" author="bryanpendleton" created="Sat, 27 Aug 2011 18:55:00 +0100"/>
                            <attachment id="12491779" name="junit.out" size="73964" author="bryanpendleton" created="Fri, 26 Aug 2011 15:11:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 26 Aug 2011 14:11:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31588</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fcf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36304</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>