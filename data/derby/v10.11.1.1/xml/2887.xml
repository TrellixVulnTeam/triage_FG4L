<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2887/DERBY-2887.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2887] NULLS FIRST / LAST for ORDER BY</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2887</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I suggest to implement the &quot;null ordering&quot; option for the &quot;ORDER BY&quot; clause:&lt;/p&gt;

&lt;p&gt;According to the SQL standard, 10.10 &amp;lt;sort specification list&amp;gt;:&lt;/p&gt;

&lt;p&gt; &amp;lt;null ordering&amp;gt; ::=&lt;br/&gt;
    NULLS FIRST&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULLS LAST&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</description>
                <environment></environment>
        <key id="12372747">DERBY-2887</key>
            <summary>NULLS FIRST / LAST for ORDER BY</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="chdh@inventec.ch">Christian d&apos;Heureuse</reporter>
                        <labels>
                    </labels>
                <created>Sat, 30 Jun 2007 21:45:17 +0100</created>
                <updated>Fri, 21 Jan 2011 17:50:30 +0000</updated>
                            <resolved>Wed, 26 Sep 2007 05:51:39 +0100</resolved>
                                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12514418" author="bryanpendleton" created="Sat, 21 Jul 2007 16:29:55 +0100"  >&lt;p&gt;I&apos;ve started placing some notes about this issue on the wiki: &lt;a href=&quot;http://wiki.apache.org/db-derby/OLAPNullOrdering&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/OLAPNullOrdering&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12514419" author="bryanpendleton" created="Sat, 21 Jul 2007 16:30:15 +0100"  >&lt;p&gt;Attached is &apos;prototype_code_no_tests.diff&apos;, which is NOT for commit. I&apos;ve started experimenting with some changes, and I wanted to attach them so I wouldn&apos;t lose them, but I&apos;ve still got more work to do.&lt;/p&gt;

&lt;p&gt;This first attempt modifies the compare(DVD) api so that the caller can pass in a boolean indicating whether NULLS should sort FIRST or LAST, and modifies the sorter to use that new api. The patch also has changes to the grammar and the compiler to parse the user&apos;s &amp;lt;null ordering&amp;gt; specification and track it in the data structures.&lt;/p&gt;</comment>
                            <comment id="12514830" author="bryanpendleton" created="Tue, 24 Jul 2007 04:07:14 +0100"  >&lt;p&gt;The first patch did not handle collation sequences properly. The prototypeCodeNoTests_v2.diff addresses that problem. Still just a work in progress.&lt;/p&gt;</comment>
                            <comment id="12514968" author="djd" created="Tue, 24 Jul 2007 14:47:58 +0100"  >&lt;p&gt;Some  thoughts on the patch (v2):&lt;/p&gt;

&lt;p&gt;Does the patch work with sort avoidance? If a scan is against an index and there is an ORDER BY clause that matches the index then we avoid the order by.&lt;br/&gt;
  This optimization has to be turned off if NULLS FIRST is set (unless the columns are not-nullable).&lt;/p&gt;

&lt;p&gt;  The passing of an extra argument to the compare() method, and for the regular compare now calling the new compare method will affect performance. I don&apos;t know how significant it will be, but within an index btree lookup compare will be called a lot, and now we are passing in an argument which will always be false. A possible alternative that would not affect existing performance, would be to have a single nulls first compare in DataType like (code only, comments you added should be kept):&lt;/p&gt;

&lt;p&gt;public final int compare(DataValueDescriptor other, boolean nullsFirst)  throws StandardException&lt;br/&gt;
{&lt;br/&gt;
 		if (this.isNull() || other.isNull())&lt;/p&gt;
 		{
 			if (!isNull())
				return nullsFirst ? 1 : -1;
 			if (!other.isNull())
			   return nullsFirst ? -1 : 1;
 			return 0;							// both null
 		}
&lt;p&gt;                return compare(other);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Moving the single argument compare() method in each data type to the parent class DataType would avoid repeated identical code in each class. However with the above comment it would mean this comment doesn&apos;t apply, but it&apos;s a idea to remember for future changes, if possible push duplicate code up the hierarchy.&lt;/p&gt;

&lt;p&gt;For IndexColumnOrder, one approach would be to have two constructors, one with the old signature which would default nulls first to false, and then the new one. This would mean that code that isn&apos;t changing doesn&apos;t need to be modified by the patch.&lt;/p&gt;</comment>
                            <comment id="12514971" author="chdh@inventec.ch" created="Tue, 24 Jul 2007 14:59:43 +0100"  >&lt;p&gt;What happens when an index exists with NULLS LAST and a query uses NULLS FIRST in the ORDER BY clause? Will this be optimized, if the query only references fields that are included in the index?&lt;/p&gt;</comment>
                            <comment id="12514974" author="djd" created="Tue, 24 Jul 2007 15:11:27 +0100"  >&lt;p&gt;Why does this issue block &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-581&quot; title=&quot;Modify SQL to skip N rows of the result and return the next M rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-581&quot;&gt;&lt;del&gt;DERBY-581&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="12514976" author="djd" created="Tue, 24 Jul 2007 15:23:21 +0100"  >&lt;p&gt;I see from the wiki that the &apos;Interaction of NULLS FIRST/LAST and ASC/DESC&apos; is still not resolved. I think this needs to be resolved before any code is committed.&lt;/p&gt;

&lt;p&gt;If &apos;NULLS FIRST&apos; really means first regardless of ASC/DESC then:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The wiki says that NULLS LAST is the default for Derby, but actually it will be  NULLS FIRST if DESC and NULLS LAST if ASC (or is it the other way around &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the code would need to be clear so that in the data type the variables &amp;amp; concept are described as nulls low or nulls high. Continuing the nulls first/last naming into DVD where it would actually have a different meaning would lead to confusion in the code. The SQL language layer would continue to have naming indicating first/last concept.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12514992" author="bryanpendleton" created="Tue, 24 Jul 2007 16:02:35 +0100"  >&lt;p&gt;Thanks very much for the comments and suggestions, Dan and Christian! I believe that I have the interpretation of NULLS FIRST/LAST wrong in the prototype code, and that Derby&apos;s current behavior is actually:&lt;/p&gt;

&lt;p&gt;  NULLS LAST is the default for ascending order, and NULLS FIRST is the default for descending order.&lt;/p&gt;

&lt;p&gt;Section 10.10 of the SQL standard is the relevant section.&lt;/p&gt;

&lt;p&gt;I&apos;ll update the wiki to incorporate this revised understanding, then I&apos;ll have a fresh look at the code, and in the process I&apos;ll incorporate the other suggestions. I&apos;m particularly keen on trying to avoid having to touch so many files; Dan your comments on the compare functions are very helpful.&lt;/p&gt;</comment>
                            <comment id="12515001" author="chdh@inventec.ch" created="Tue, 24 Jul 2007 16:15:50 +0100"  >&lt;p&gt;i think the SQL standard (section 10.10) is not clear on this.&lt;br/&gt;
It defines NULLS FIRST/LAST with the comparison operator:&lt;br/&gt;
... &quot;If NULLS FIRST is specified or implied, then PVi &amp;lt;comp op&amp;gt; QVi is considered to be True.&quot; ...&lt;/p&gt;</comment>
                            <comment id="12515005" author="chdh@inventec.ch" created="Tue, 24 Jul 2007 16:31:47 +0100"  >&lt;p&gt;I have tested with H2 (&lt;a href=&quot;http://www.h2database.com):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.h2database.com):&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; create table temp1 (i int);&lt;br/&gt;
 insert into temp1 values (1);&lt;br/&gt;
 insert into temp1 values (2);&lt;br/&gt;
 insert into temp1 values (null);&lt;br/&gt;
 select * from temp1 order by i desc nulls first;&lt;/p&gt;

&lt;p&gt;Result:&lt;br/&gt;
 NULL&lt;br/&gt;
 2&lt;br/&gt;
 1&lt;/p&gt;</comment>
                            <comment id="12515009" author="chdh@inventec.ch" created="Tue, 24 Jul 2007 16:59:33 +0100"  >&lt;p&gt;Same result with Oracle 10G.&lt;/p&gt;</comment>
                            <comment id="12515023" author="chdh@inventec.ch" created="Tue, 24 Jul 2007 17:38:10 +0100"  >&lt;p&gt;The Oracle documentation says:&lt;/p&gt;

&lt;p&gt;ASC | DESC Specify the ordering sequence (ascending or descending). ASC is the&lt;br/&gt;
default.&lt;/p&gt;

&lt;p&gt;NULLS FIRST | NULLS LAST Specify whether returned rows containing nulls should&lt;br/&gt;
appear first or last in the ordering sequence.&lt;br/&gt;
NULLS LAST is the default for ascending order, and NULLS FIRST is the default for&lt;br/&gt;
descending order.&lt;/p&gt;

&lt;p&gt;(The default for NULLS FIRST/LAST is the same as in Derby)&lt;/p&gt;</comment>
                            <comment id="12515316" author="bryanpendleton" created="Wed, 25 Jul 2007 16:24:31 +0100"  >&lt;p&gt;Attached is prototypeCodeNoTests_v3.diff, updated in response to the various suggestions. &lt;/p&gt;

&lt;p&gt;This version 3 patch is much simpler than the previous two; Dan&apos;s ideas about sharing common code into DataType.java were a big win.&lt;/p&gt;

&lt;p&gt;My next steps will be to: add some new tests, investigate the sort avoidance issue, and track down a diff in the Wisconsin tests involving outer joins. All the other existing tests pass.&lt;/p&gt;</comment>
                            <comment id="12515350" author="bryanpendleton" created="Wed, 25 Jul 2007 18:11:42 +0100"  >&lt;p&gt;It seems that the Wisconsin diff is also present in the trunk, although I&apos;m having trouble getting to &lt;a href=&quot;http://dbtg.thresher.com&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com&lt;/a&gt; to verify that other builds of the trunk are seeing it as well. At least in my build of the trunk, without any of my prototype changes, I see the diff.&lt;/p&gt;</comment>
                            <comment id="12516033" author="bryanpendleton" created="Fri, 27 Jul 2007 15:45:15 +0100"  >&lt;p&gt;Attached is nullOrderingPatch.diff, a patch proposal. This patch builds on the prototype_v3 patch by:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;adding code to OrderByList to ensure that ORDER BY triggers a sort when necessary&lt;/li&gt;
	&lt;li&gt;adding tests to orderby.sql and orderbyElimination.sql to demonstrate the behavior of NULLS FIRST/LAST&lt;/li&gt;
	&lt;li&gt;adding a few more comments to the code changes.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d be most grateful if you could have a look at this patch proposal and tell me what you think.&lt;/p&gt;</comment>
                            <comment id="12517871" author="thomanie" created="Mon, 6 Aug 2007 11:03:32 +0100"  >&lt;p&gt;nullOrderingPatch.diff works as expected from what I can tell from manual testing. &lt;br/&gt;
suitesAll show no new problems. Code looks nice and clean.&lt;/p&gt;</comment>
                            <comment id="12518213" author="bryanpendleton" created="Tue, 7 Aug 2007 19:03:08 +0100"  >&lt;p&gt;Thanks Thomas for the review and testing!&lt;/p&gt;</comment>
                            <comment id="12519983" author="bryanpendleton" created="Wed, 15 Aug 2007 15:47:20 +0100"  >&lt;p&gt;I&apos;m intending to submit nullOrderingPatch.diff fairly soon. If anyone is reviewing this patch and has feedback, please let me know.&lt;/p&gt;</comment>
                            <comment id="12520884" author="bryanpendleton" created="Sat, 18 Aug 2007 19:57:28 +0100"  >&lt;p&gt;Committed nullOrderingPatch.diff to the trunk as revision 567314.&lt;/p&gt;</comment>
                            <comment id="12520887" author="chdh@inventec.ch" created="Sat, 18 Aug 2007 20:54:57 +0100"  >&lt;p&gt;Bryan, thanks for implementing NULLS FIRST/LAST.&lt;br/&gt;
Does your current implementation use indexes for optimizing ORDER BYs?&lt;/p&gt;</comment>
                            <comment id="12520889" author="bryanpendleton" created="Sat, 18 Aug 2007 21:03:57 +0100"  >&lt;p&gt;The implementation is intended to use indexes in the cases where indexes are currently used.&lt;/p&gt;

&lt;p&gt;That is, in the index, NULL values are &lt;b&gt;always&lt;/b&gt; sorted high, so if the NULL FIRST/LAST setting&lt;br/&gt;
is such that the index can be used to satisfy the ORDER BY, then it will be used. Otherwise,&lt;br/&gt;
a sort will be required.&lt;/p&gt;

&lt;p&gt;It would be great if you can verify this independently. I added a test to the regression suite, but&lt;br/&gt;
more tests are always helpful.&lt;/p&gt;</comment>
                            <comment id="12530321" author="bryanpendleton" created="Wed, 26 Sep 2007 00:25:33 +0100"  >&lt;p&gt;It occurs to me that maybe I should have updated the&lt;br/&gt;
DatabaseMetaData implementation, specifically the methods:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;nullsAreSortedAtEnd()&lt;/li&gt;
	&lt;li&gt;nullsAreSortedAtStart()&lt;/li&gt;
	&lt;li&gt;nullsAreSortedHigh()&lt;/li&gt;
	&lt;li&gt;nullsAreSortedLow()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not totally sure what those methods are supposed to return,&lt;br/&gt;
and it&apos;s quite possible that no changes are needed, but I&lt;br/&gt;
thought that to be safe, I would re-open this issue and go&lt;br/&gt;
examine the documentation for those methods to see if they&lt;br/&gt;
need to be changed.&lt;/p&gt;</comment>
                            <comment id="12530358" author="bryanpendleton" created="Wed, 26 Sep 2007 05:51:39 +0100"  >&lt;p&gt;I read the DatabaseMetaData javadoc for a while, and I didn&apos;t see&lt;br/&gt;
any reason to believe that our current implementation should&lt;br/&gt;
change due to the NULLS FIRST/LAST support. The DatabaseMetaData&lt;br/&gt;
javadoc doesn&apos;t specifically mention the impact of NULLS FIRST/LAST,&lt;br/&gt;
but since the DatabaseMetaData methods are supposed to describe&lt;br/&gt;
the behavior of the database system as a whole, and the NULLS&lt;br/&gt;
FIRST/LAST is a query-specific behavior, it seems reasonable that&lt;br/&gt;
the DatabaseMetadata methods should not take NULLS FIRST/LAST&lt;br/&gt;
into account.&lt;/p&gt;

&lt;p&gt;So I think it&apos;s safe to re-resolve this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12374297">DERBY-2965</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12436124">DERBY-4382</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12317141">DERBY-581</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12362682" name="nullOrderingPatch.diff" size="44005" author="bryanpendleton" created="Fri, 27 Jul 2007 15:45:15 +0100"/>
                            <attachment id="12362289" name="prototypeCodeNoTests.diff" size="34724" author="bryanpendleton" created="Sat, 21 Jul 2007 16:30:15 +0100"/>
                            <attachment id="12362391" name="prototypeCodeNoTests_v2.diff" size="41957" author="bryanpendleton" created="Tue, 24 Jul 2007 04:07:13 +0100"/>
                            <attachment id="12362534" name="prototypeCodeNoTests_v3.diff" size="27469" author="bryanpendleton" created="Wed, 25 Jul 2007 16:24:31 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Jul 2007 15:29:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30641</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0m7z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37418</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>