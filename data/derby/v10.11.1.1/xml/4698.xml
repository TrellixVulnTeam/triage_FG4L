<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4698/DERBY-4698.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4698] Simple query with HAVING clause crashes with NullPointerException</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4698</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Running a simple SQL query containing a having clause causes a NullPointerException.  I originally encountered this in 10.4.2.0, but have also reproduces this in 10.5.3.0 and the latest 10.6.1.0.   I raised this on the mailing list too, and Knut said it also fails on trunk - see &lt;a href=&quot;http://thread.gmane.org/gmane.comp.apache.db.derby.user/12782&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://thread.gmane.org/gmane.comp.apache.db.derby.user/12782&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The query (created throw Hibernate) that causes the crash is:&lt;/p&gt;

&lt;p&gt;SELECT user0_.user_id         AS col_0_0_,&lt;br/&gt;
       SUM(account2_.balance) AS col_1_0_&lt;br/&gt;
FROM   tbl_user user0_&lt;br/&gt;
       INNER JOIN tbl_user_account accountlin1_&lt;br/&gt;
         ON user0_.user_id = accountlin1_.user_id&lt;br/&gt;
       INNER JOIN tbl_account account2_&lt;br/&gt;
         ON accountlin1_.account_id = account2_.account_id&lt;br/&gt;
WHERE  user0_.deleted = &apos;N&apos;&lt;br/&gt;
       AND ( account2_.account_type IN ( &apos;USER-01&apos;, &apos;USER&apos; ) )&lt;br/&gt;
GROUP  BY user0_.user_id&lt;br/&gt;
HAVING SUM(account2_.balance) &amp;gt;= 100.0 &lt;/p&gt;

&lt;p&gt;However I simplified it to the following and still caused a crash (though in 10.4.2.0 I found that without the &quot;where&quot; clause is didn&apos;t crash but returned no results when it should have).&lt;/p&gt;

&lt;p&gt;SELECT u.user_id,&lt;br/&gt;
       SUM(a.balance)&lt;br/&gt;
FROM   tbl_user u&lt;br/&gt;
       INNER JOIN tbl_user_account al&lt;br/&gt;
         ON u.user_id = al.user_id&lt;br/&gt;
       INNER JOIN tbl_account a&lt;br/&gt;
         ON al.account_id = a.account_id&lt;br/&gt;
GROUP BY u.user_id&lt;br/&gt;
HAVING sum(a.balance) &amp;gt;= 10.0 &lt;/p&gt;


&lt;p&gt;The derby log showed the following stace trace for 10.6.1.0:&lt;br/&gt;
2010-06-14 04:59:24.942 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 5824013), (SESSIONID = 1), (DATABASE = C:\Development\pc-ng-branch\server\working\data\internal/derby), (DRDAID = null), Failed Statement is: SELECT u.user_id user_id,&lt;br/&gt;
       SUM(a.balance) acct_sum&lt;br/&gt;
FROM   tbl_user u&lt;br/&gt;
       INNER JOIN tbl_user_account al&lt;br/&gt;
         ON u.user_id = al.user_id&lt;br/&gt;
       INNER JOIN tbl_account a&lt;br/&gt;
         ON al.account_id = a.account_id&lt;br/&gt;
GROUP BY u.user_id&lt;br/&gt;
HAVING sum(a.balance) &amp;gt;= 1.0 &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ColumnReference.remapColumnReferencesToExpressions(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.AggregateNode.getNewExpressionResultColumn(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.addAggregateColumns(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.addAggregates(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.GroupByNode.init(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.sql.compile.NodeFactory.getNode(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Unknown Source)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(Unknown Source)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;</description>
                <environment>Windows, Java 1.6</environment>
        <key id="12466874">DERBY-4698</key>
            <summary>Simple query with HAVING clause crashes with NullPointerException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="matt_doran">Matt Doran</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Jun 2010 06:12:03 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:29 +0100</updated>
                            <resolved>Mon, 5 Jul 2010 13:49:29 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12878482" author="matt_doran" created="Mon, 14 Jun 2010 06:14:05 +0100"  >&lt;p&gt;Crash log from derby 10.6.1.0&lt;/p&gt;</comment>
                            <comment id="12878483" author="matt_doran" created="Mon, 14 Jun 2010 06:14:37 +0100"  >&lt;p&gt;Crash log from 10.5.3.0&lt;/p&gt;</comment>
                            <comment id="12878484" author="matt_doran" created="Mon, 14 Jun 2010 06:15:40 +0100"  >&lt;p&gt;Crash log from 10.4.2.0&lt;/p&gt;</comment>
                            <comment id="12878486" author="matt_doran" created="Mon, 14 Jun 2010 06:17:55 +0100"  >&lt;p&gt;I should also add that removing the having clause allows the query to run successfully.&lt;/p&gt;</comment>
                            <comment id="12878518" author="knutanders" created="Mon, 14 Jun 2010 11:05:57 +0100"  >&lt;p&gt;The query triggers an assert in debug builds:&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED expected BaseColumnNode, found: class org.apache.derby.impl.sql.compile.CurrentRowLocationNode&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.getResultColumn(ResultColumnList.java:373)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ColumnReference.remapColumnReferencesToExpressions(ColumnReference.java:888)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.AggregateNode.getNewExpressionResultColumn(AggregateNode.java:568)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.GroupByNode.addAggregateColumns(GroupByNode.java:715)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation(GroupByNode.java:558)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.GroupByNode.addAggregates(GroupByNode.java:245)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.GroupByNode.init(GroupByNode.java:184)&lt;br/&gt;
        at org.apache.derby.iapi.sql.compile.NodeFactory.getNode(NodeFactory.java:273)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(SelectNode.java:1481)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(SelectNode.java:2121)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(DMLStatementNode.java:317)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(CursorNode.java:558)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:381)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:90)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:843)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;/p&gt;</comment>
                            <comment id="12878660" author="kmarsden" created="Mon, 14 Jun 2010 18:46:54 +0100"  >&lt;p&gt;There was a pretty major rewrite of the  HAVING  logic in 10.3 &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-681&quot; title=&quot;Eliminate the parser&amp;#39;s rewriting of the abstract syntax tree for queries with GROUP BY and/or HAVING clauses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-681&quot;&gt;&lt;del&gt;DERBY-681&lt;/del&gt;&lt;/a&gt;,  so that is the change I usually look to first to identify the source of HAVING regressions in 10.3. Unfortunately,  because of the dramatic nature of the change, identifying it as the source of the problem doesn&apos;t usually lead to an obvious solution.&lt;/p&gt;</comment>
                            <comment id="12878745" author="dagw" created="Mon, 14 Jun 2010 22:05:39 +0100"  >&lt;p&gt;Uploading a preliminary patch which seems to fix this problem. &lt;/p&gt;

&lt;p&gt;My theory is the following: As part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3880&quot; title=&quot;NPE on a query with having clause involving a join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3880&quot;&gt;&lt;del&gt;DERBY-3880&lt;/del&gt;&lt;/a&gt; a fix was inserted to handle the case of column references in HAVING clauses being wrong after JOIN flattening. &lt;/p&gt;

&lt;p&gt;Normally, such column references are updated as part of the flattening operation in the preprocess phase; i.e. in the first of the three main phases in the statement optimization: &lt;/p&gt;

          {preprocess, optimize, modifyAccessPaths}

&lt;p&gt;cf DMLStatementNode#optimizeStatement. The flattening is driven by SelectNode#preprocess in the call to fromList.flattenFromTables.&lt;/p&gt;

&lt;p&gt;The fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3880&quot; title=&quot;NPE on a query with having clause involving a join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3880&quot;&gt;&lt;del&gt;DERBY-3880&lt;/del&gt;&lt;/a&gt; involved remapping the now wrong column reference in the HAVING clause (i.e. after join flattening) as part of the &lt;b&gt;modifyAccessPaths&lt;/b&gt; phase, cf the fix in AggregateNode#getNewExpressionResultColumn, ca line 566 on trunk.&lt;/p&gt;

&lt;p&gt;At the time, Bryan asked if the fix wasn&apos;t somewhat odd, since the phase in which the column reference remapping for the having clause was now done, was &lt;b&gt;different&lt;/b&gt; from the other column reference fixups and suggested that it might be more appropriate to remap column references from the HAVING clause by passing in the havingClause in the flattenFromTables call made by SelectNode. &lt;/p&gt;

&lt;p&gt;I agree with Bryan that this sounds like a sounder approach, and it is the approach taken by this patch. It makes both queries shown in this JIRA issue work with the supplied database.&lt;/p&gt;

&lt;p&gt;The problem encountered by the old fix in this case, is that the column reference&apos;s VCN&apos;s sourceResultSet (due to the presence of indexes?) has a result column which have already been converted to a CurrentRowLocationNode, cf the rewrite calls to addRCForRID that happen in fromBaseTable#changeAccessPath. This seems a correct transformation, but makes the remapping fail. So, essentially, the rewrite is attempted too late, at least for the problematic queries.&lt;/p&gt;

&lt;p&gt;On 10.6, with debug code enabled, we don&apos;t see a NPE, but an assert that the desired column (A.BALANCE) could not be found. On trunk, the assert is different due to the change introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4679&quot; title=&quot;Several left outer joins causes unstable query with incorrect results&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4679&quot;&gt;&lt;del&gt;DERBY-4679&lt;/del&gt;&lt;/a&gt;: it complains that it does not expect to see a CurrentRowLocationNode, alas. In both cases, the problem is the same, the CurrentRowLocationNode&apos;s presence is unexpected and makes the remapping fail.&lt;/p&gt;

&lt;p&gt;By treating column references in the havingClause uniformly with other column references at flattening time in the preprocess phase, there is no need for the old fix code, so the patch removes that.&lt;/p&gt;

&lt;p&gt;GroupByTest which contains the test case for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3880&quot; title=&quot;NPE on a query with having clause involving a join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3880&quot;&gt;&lt;del&gt;DERBY-3880&lt;/del&gt;&lt;/a&gt; still passes with the patch, so it would seem the patch is a valid alternate solution for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3880&quot; title=&quot;NPE on a query with having clause involving a join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3880&quot;&gt;&lt;del&gt;DERBY-3880&lt;/del&gt;&lt;/a&gt; also.&lt;/p&gt;

&lt;p&gt;Will run full regressions and try to make a simple repro so we can add a new test case for this issue.&lt;/p&gt;
</comment>
                            <comment id="12878800" author="dagw" created="Tue, 15 Jun 2010 00:43:01 +0100"  >&lt;p&gt;Uploading rev 2 of this patch, which adds a repro fixture to GroupByTest. Regressions ran ok with the first revision. &lt;/p&gt;

&lt;p&gt;Matt, the results I see for the first query is&lt;/p&gt;

&lt;p&gt;COL_0_0_            |COL_1_0_              &lt;br/&gt;
-------------------------------------------&lt;br/&gt;
1004                |260.7 &lt;/p&gt;

&lt;p&gt;and for the second:&lt;br/&gt;
COL_0_0_            |COL_1_0_              &lt;br/&gt;
-------------------------------------------&lt;br/&gt;
1001                |10.0                  &lt;br/&gt;
1003                |10.0                  &lt;br/&gt;
1004                |260.7                 &lt;br/&gt;
1005                |10.0                  &lt;br/&gt;
1006                |10.0                  &lt;br/&gt;
1007                |10.0                  &lt;br/&gt;
1008                |10.0                  &lt;br/&gt;
2002                |11.0                  &lt;br/&gt;
3004                |12.5 &lt;/p&gt;

&lt;p&gt;Do these look as you expect with the data in the zipped db?&lt;/p&gt;</comment>
                            <comment id="12878805" author="matt_doran" created="Tue, 15 Jun 2010 00:49:29 +0100"  >&lt;p&gt;Yup, that looks right. &lt;/p&gt;</comment>
                            <comment id="12878894" author="knutanders" created="Tue, 15 Jun 2010 09:43:41 +0100"  >&lt;p&gt;Thanks for fixing this and writing such a clear description of the problem, Dag. Your suggested approach looks good to me. I&apos;ve verified that the new test case in GroupByTest fails without the fix and passes with the fix. +1&lt;/p&gt;</comment>
                            <comment id="12880492" author="dagw" created="Sat, 19 Jun 2010 16:03:49 +0100"  >&lt;p&gt;Committed to trunk as svn 956234.&lt;/p&gt;</comment>
                            <comment id="12880496" author="dagw" created="Sat, 19 Jun 2010 16:12:21 +0100"  >&lt;p&gt;Backported cleanly to the 10.6 branch as svn 956238, resolving.&lt;/p&gt;</comment>
                            <comment id="12880508" author="dagw" created="Sat, 19 Jun 2010 17:24:04 +0100"  >&lt;p&gt;The NPE can be seen back to 10.3. In 10.2 the query doesn&apos;t compile.&lt;/p&gt;</comment>
                            <comment id="12884002" author="mikem" created="Wed, 30 Jun 2010 19:12:15 +0100"  >&lt;p&gt;I am looking at backporting this fix to 10.5.&lt;/p&gt;</comment>
                            <comment id="12884320" author="mikem" created="Thu, 1 Jul 2010 16:40:14 +0100"  >&lt;p&gt;resetting original bug fixer.&lt;/p&gt;</comment>
                            <comment id="12884321" author="mikem" created="Thu, 1 Jul 2010 16:41:32 +0100"  >&lt;p&gt;backported fix to 10.5 branch.&lt;/p&gt;

&lt;p&gt;s105_ibm16:8&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\compile\AggregateNode.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\sql\compile\FromList.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\sql\compile\FromSubquery.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\sql\compile\FromTable.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\sql\compile\JoinNode.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\sql\compile\SelectNode.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\GroupByTest.java&lt;br/&gt;
Transmitting file data .......&lt;br/&gt;
Committed revision 959697.&lt;/p&gt;</comment>
                            <comment id="12884438" author="kmarsden" created="Thu, 1 Jul 2010 22:47:57 +0100"  >&lt;p&gt;reopen for back port to 10.5&lt;/p&gt;</comment>
                            <comment id="12885210" author="knutanders" created="Mon, 5 Jul 2010 13:49:29 +0100"  >&lt;p&gt;Changed 10.5 fix version to match the version on the branch. Resolving the issue.&lt;/p&gt;</comment>
                            <comment id="13685258" author="knutanders" created="Mon, 17 Jun 2013 10:19:29 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12494445">DERBY-4954</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12404477">DERBY-3880</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12468384">DERBY-4728</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12447067" name="derby-4698-1.diff" size="6538" author="dagw" created="Mon, 14 Jun 2010 22:05:39 +0100"/>
                            <attachment id="12447068" name="derby-4698-1.stat" size="420" author="dagw" created="Mon, 14 Jun 2010 22:05:39 +0100"/>
                            <attachment id="12447084" name="derby-4698-2.diff" size="11120" author="dagw" created="Tue, 15 Jun 2010 00:43:01 +0100"/>
                            <attachment id="12447085" name="derby-4698-2.stat" size="507" author="dagw" created="Tue, 15 Jun 2010 00:43:01 +0100"/>
                            <attachment id="12447003" name="derby-crash-10.4.2.0.log" size="2785" author="matt_doran" created="Mon, 14 Jun 2010 06:15:40 +0100"/>
                            <attachment id="12447002" name="derby-crash-10.5.3.0.log" size="3108" author="matt_doran" created="Mon, 14 Jun 2010 06:14:37 +0100"/>
                            <attachment id="12447001" name="derby-crash-10.6.1.0.log" size="3054" author="matt_doran" created="Mon, 14 Jun 2010 06:14:05 +0100"/>
                            <attachment id="12447004" name="derby.zip" size="629284" author="matt_doran" created="Mon, 14 Jun 2010 06:17:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Jun 2010 10:05:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24417</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0oaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37753</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>