<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1716/DERBY-1716.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1716] Revoking select privilege from a user times out when that user still have a cursor open.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1716</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Revoking table select privilege from a user  will time out if that user still have an open cursor on that table.&lt;br/&gt;
Hence, a database owner will not be able to revoke select privilege from any user(s) if they still have a cursor &lt;br/&gt;
open.  i.e.:  &lt;/p&gt;

&lt;p&gt;ij version 10.2&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:cs1;create=true&apos; user &apos;user1&apos; as user1;&lt;br/&gt;
WARNING 01J14: SQL authorization is being used without first enabling authentication.&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:cs1&apos; user &apos;user3&apos; as user3;&lt;br/&gt;
WARNING 01J14: SQL authorization is being used without first enabling authentication.&lt;br/&gt;
ij(USER3)&amp;gt; set connection user1;&lt;br/&gt;
ij(USER1)&amp;gt; create table t1001 (c varchar(1));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(USER1)&amp;gt; insert into t1001 values &apos;a&apos;, &apos;b&apos;, &apos;c&apos;;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij(USER1)&amp;gt; grant select on t1001 to user3;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(USER1)&amp;gt; set connection user3;&lt;br/&gt;
ij(USER3)&amp;gt; autocommit off;&lt;br/&gt;
ij(USER3)&amp;gt; GET CURSOR crs1 AS &apos;select * from user1.t1001&apos;;&lt;br/&gt;
ij(USER3)&amp;gt; next crs1;&lt;br/&gt;
C   &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;a   &lt;br/&gt;
ij(USER3)&amp;gt; set connection user1;&lt;br/&gt;
ij(USER1)&amp;gt; &amp;#8211; revoke select privilege while user3 still have an open cursor&lt;br/&gt;
revoke select on t1001 from user3;&lt;br/&gt;
ERROR 40XL1: A lock could not be obtained within the time requested&lt;br/&gt;
ij(USER1)&amp;gt; select * from syscs_diag.lock_table;&lt;br/&gt;
XID            |TYPE |MODE|TABLENAME                                                                                                                       |LOCKNAME            |STATE|TABLETYPE|LOCK&amp;amp;|INDEXNAME                                                                                                                       &lt;br/&gt;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
130            |TABLE|IS  |SYSTABLEPERMS                                                                                                                   |Tablelock           |GRANT|S        |4    |NULL                                                                                                                            &lt;br/&gt;
130            |ROW  |S   |SYSTABLEPERMS                                                                                                                   |(1,7)               |GRANT|S        |2    |NULL                                                                                                                            &lt;br/&gt;
130            |TABLE|IS  |T1001                                                                                                                           |Tablelock           |GRANT|T        |1    |NULL                                                                                                                            &lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
ij(USER1)&amp;gt; set connection user3;&lt;br/&gt;
ij(USER3)&amp;gt; next crs1;&lt;br/&gt;
C   &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;b   &lt;br/&gt;
ij(USER3)&amp;gt; next crs1;&lt;br/&gt;
C   &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;c   &lt;br/&gt;
ij(USER3)&amp;gt; close crs1;&lt;br/&gt;
ij(USER3)&amp;gt; &lt;/p&gt;

&lt;p&gt;Is there a reason why Derby still keep shared locks on SYS.SYSTABLEPERMS during fetch?&lt;/p&gt;


&lt;p&gt;sysinfo:&lt;/p&gt;

&lt;p&gt;------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.4.2_12&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\Program Files\Java\j2re1.4.2_12&lt;br/&gt;
Java classpath:  derby.jar;derbytools.jar&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1&lt;br/&gt;
Java user name:  Yip&lt;br/&gt;
Java user home:  C:\Documents and Settings\Yip&lt;br/&gt;
Java user dir:   C:\work3\derby\tests\derby-10.2.1.0\lib&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.4&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\work3\derby\tests\derby-10.2.1.0\lib\derby.jar&amp;#93;&lt;/span&gt; 10.2.1.0 beta - (430903)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\work3\derby\tests\derby-10.2.1.0\lib\derbytools.jar&amp;#93;&lt;/span&gt; 10.2.1.0 beta - (430903)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
----------------- Locale Information -----------------&lt;br/&gt;
Current Locale :  [English/United States &lt;span class=&quot;error&quot;&gt;&amp;#91;en_US&amp;#93;&lt;/span&gt;]&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;de_DE&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;es&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;fr&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;it&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ja_JP&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ko_KR&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pt_BR&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_CN&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_TW&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.2.1.0 - (430903)&lt;br/&gt;
------------------------------------------------------&lt;/p&gt;</description>
                <environment>Sun JDK 1.4.2</environment>
        <key id="12348172">DERBY-1716</key>
            <summary>Revoking select privilege from a user times out when that user still have a cursor open.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yipng">Yip Ng</assignee>
                                    <reporter username="yipng">Yip Ng</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Aug 2006 21:26:16 +0100</created>
                <updated>Thu, 13 Dec 2007 09:05:10 +0000</updated>
                            <resolved>Tue, 10 Oct 2006 06:42:10 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.2.0</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12436281" author="yipng" created="Wed, 20 Sep 2006 18:19:18 +0100"  >&lt;p&gt;The shared lock on SYS.SYSTABLEPERMS is actually obtained by the activation itself during &lt;br/&gt;
execution time (at the start of fillResultSet() of the activation class) since the grantee&apos;s privileges&lt;br/&gt;
are not in the permission cache yet.  Thus, the shared locks will last till end of the transaction.&lt;br/&gt;
This is done once and those privileges that were loaded from the data dictionary(DD) will be stored &lt;br/&gt;
in the permission cache for use later so that the system does not need to load those info again&lt;br/&gt;
from the DD.  Perhaps these privilege info can be loaded at compilation time instead as an improvement, &lt;br/&gt;
so that at execution time, privilege related metadata  can be retrieved from the permission cache instead &lt;br/&gt;
of from the DD.&lt;/p&gt;


&lt;p&gt;protected ResultSet fillResultSet() throws StandardException&lt;/p&gt;
{
    ((Activation) this).getLanguageConnectionContext().getAuthorizer().authorize( (Activation) this, 1 );
    return getResultSetFactory().getScrollInsensitiveResultSet(  &amp;lt;snip&amp;gt; );
}</comment>
                            <comment id="12436295" author="yipng" created="Wed, 20 Sep 2006 19:28:41 +0100"  >&lt;p&gt;Note that since the statement may be cached by the system and reuse by other users of different &lt;br/&gt;
connections, the suggested scheme of loading privilege(s) at compilation time may not eliminate the &lt;br/&gt;
DD access in all cases if the system were to load the privilege info based on the auth id that compiles &lt;br/&gt;
the statement. &lt;/p&gt;</comment>
                            <comment id="12436391" author="bryanpendleton" created="Thu, 21 Sep 2006 00:15:34 +0100"  >&lt;p&gt;Yip, are you saying that we use the &lt;b&gt;user&apos;s&lt;/b&gt; transaction to read table and column&lt;br/&gt;
permissions information from the data dictionary? I would have expected us&lt;br/&gt;
to use some sort of internal &quot;system&quot; transaction for this kind of catalog fetch.&lt;/p&gt;</comment>
                            <comment id="12436405" author="yipng" created="Thu, 21 Sep 2006 01:06:19 +0100"  >&lt;p&gt;Bryan, at compilation time, Derby uses an internal system nested transaction.  After compilation is completed, this nested system &lt;br/&gt;
transaction is committed; therefore, the shared locks for system tables are released.  However, at execution time of this jira case, &lt;br/&gt;
the activation class is querying the data dictionary for permission since those descriptors are not in the permission cache, therefore, &lt;br/&gt;
the shared locks are obtained for those system tables using the user transaction.&lt;/p&gt;</comment>
                            <comment id="12436416" author="yipng" created="Thu, 21 Sep 2006 02:29:29 +0100"  >&lt;p&gt;I debugged into the code abit today, I don&apos;t think the system is fetching the  permission descriptor(s) &lt;br/&gt;
from the system catalog at compilation time for the stated problem of this jira.  During bind phase,&lt;br/&gt;
the system just collects various permission(s) that are required to execute the select statement.  It is &lt;br/&gt;
at the execution time of the statement that the descriptors are fetched from the data dictionary.&lt;/p&gt;</comment>
                            <comment id="12437041" author="yipng" created="Sat, 23 Sep 2006 03:15:16 +0100"  >&lt;p&gt;Attaching initial patch derby1716-trunk-diff01a.txt for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1716&quot; title=&quot;Revoking select privilege from a user times out when that user still have a cursor open.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1716&quot;&gt;&lt;del&gt;DERBY-1716&lt;/del&gt;&lt;/a&gt;.  The patch fixes the stated problem of this jira where it now loads the auth id&apos;s permission descriptors into the permission cache at compilation time instead, so that at execution time, the system does not have to go through the system table(s) again and hold the shared locks till the end of user transaction.   derbyall passes.  Appreciate if someone can review the patch.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12437107" author="bryanpendleton" created="Sat, 23 Sep 2006 16:14:47 +0100"  >&lt;p&gt;Hi Yip, thanks for the patch!&lt;/p&gt;

&lt;p&gt;I read through the code and it looks good. Thanks for the clear comments in the &lt;br/&gt;
addToPermissionsCache method and for the good tests.&lt;/p&gt;

&lt;p&gt;I noticed as part of studying &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt; that DataDictionaryImpl.clearCaches()&lt;br/&gt;
does not clear the DataDictionary permissions cache. This seems wrong to me,&lt;br/&gt;
and although it probably isn&apos;t &lt;b&gt;directly&lt;/b&gt; related to this JIRA issue, I still wanted to&lt;br/&gt;
bring it up since you&apos;ve been studying this code, and get your opinion.&lt;/p&gt;

&lt;p&gt;Regarding your patch, I noticed you called it an &quot;initial patch&quot;. Do you feel that this&lt;br/&gt;
patch is ready for commit? Or do you think that there is additional work to do?&lt;/p&gt;

&lt;p&gt;Are other reviewers looking at this patch?&lt;/p&gt;</comment>
                            <comment id="12437108" author="bryanpendleton" created="Sat, 23 Sep 2006 16:22:25 +0100"  >&lt;p&gt;Addendum to previous comment: the patch applies cleanly for me, and I&lt;br/&gt;
verified that, without the code change, the test case demonstrates the&lt;br/&gt;
bug, and with the code change, the test case passes. I am +1 to commit,&lt;br/&gt;
and I propose to commit this change if Yip feels that it is ready for commit.&lt;/p&gt;</comment>
                            <comment id="12437239" author="yipng" created="Sun, 24 Sep 2006 19:00:40 +0100"  >&lt;p&gt;Hi Bryan, thanks for taking the time for reviewing the patch.  For the clearCaches() part, it looks like the&lt;br/&gt;
permission cache handling are somewhat different from other caches.  For instance, when a table gets&lt;br/&gt;
dropped, its permission descriptor gets removed from the cache in its constant action(DROP TABLE) via&lt;br/&gt;
DataDictionary&apos;s dropAllTableAndColPermDescriptors().  So they do get removed from the permission&lt;br/&gt;
cache.  &lt;/p&gt;

&lt;p&gt;I am trying another different approach so please do not commit the current patch just yet.  I will post my findings&lt;br/&gt;
soon.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12437258" author="mikem" created="Sun, 24 Sep 2006 23:07:47 +0100"  >&lt;p&gt;unchecking patch available, contributer has asked for this patch to not be applied yet.&lt;/p&gt;</comment>
                            <comment id="12437940" author="yipng" created="Tue, 26 Sep 2006 21:44:04 +0100"  >&lt;p&gt;Attaching patch derby1716-trunk-diff02.txt for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1716&quot; title=&quot;Revoking select privilege from a user times out when that user still have a cursor open.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1716&quot;&gt;&lt;del&gt;DERBY-1716&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After further analysis, I think the previous patch does not address all cases.  &lt;br/&gt;
In particular, unlike other descriptors, when privilege(s) get revoked from user, &lt;br/&gt;
the statement is not subject to recompilation, so then we are back to square one &lt;br/&gt;
since the previous patch attempts to bring in the permission descriptor(s) into &lt;br/&gt;
the permission cache at compilation time to avoid reading from system tables at &lt;br/&gt;
execution time.  &lt;/p&gt;

&lt;p&gt;I believe the proper proposal fix is to use internal nested read-only transaction &lt;br/&gt;
when the system is reading permission descriptors from the system tables.  At a &lt;br/&gt;
high level, a statement undergoes the following typical steps for it to get executed &lt;br/&gt;
by the system:  &lt;/p&gt;

&lt;p&gt;1.  Statement Compilation Phase&lt;br/&gt;
 a) Parse the statement &lt;br/&gt;
 b) Bind the statement and collects required permissions for it to be executed.&lt;br/&gt;
 c) Optimize the statement&lt;br/&gt;
 d) Generate the activation for the statement&lt;/p&gt;


&lt;p&gt;2.  Statement Execution Phase&lt;br/&gt;
 a) Check if the authoration id has the required privileges to execute the statement.&lt;br/&gt;
 b) Execute the statement&lt;/p&gt;


&lt;p&gt;The problem lies in permissions checking step at statement execution phase.  Before a statement can be executed in SQL authorization mode, the authorization id&apos;s privileges needs to be check against the permission cache or if the privileges are not available in the cache, the system needs to read this metadata information from the system tables.  But the system is using &lt;b&gt;user transaction&lt;/b&gt; to do this, so the shared locks that got acquired by the user transaction may not get released immediately; therefore, leading to lock timeout when the grantor attempts to revoke the user&apos;s privilege.  To resolve this issue, the system now will start an internal read-only nested transaction(same lock space as the parent transaction) to read permission related info from the system tables and release the shared locks &lt;br/&gt;
as soon as the permissions check is completed before statement execution.  This tackles the root of the stated problem.  derbyall passes.  Appreciate if someone can review the code changes.  Thanks.&lt;/p&gt;

&lt;p&gt;Other interesting observations while going through the code:  &lt;/p&gt;

&lt;p&gt;(1) In the current implementation, privileges collection actually ends at the time where the constant action is created and not at bind time.  e.g.:  DROP TABLE has schema permission collected at that time.&lt;/p&gt;

&lt;p&gt;(2) Permissions cache handling are different from other data dictionary caches.  The other caches gets &lt;b&gt;ALL&lt;/b&gt; cleared out either at startReading() or startWriting() time in Data Dictionary depending  on the current cache mode.  However, only the &quot;affected&quot; cached items in the permissions cache are removed and this logic is handled by the statements themselves and not the data dictionary.&lt;/p&gt;
</comment>
                            <comment id="12440533" author="mikem" created="Fri, 6 Oct 2006 18:07:22 +0100"  >&lt;p&gt;could you regenerate this patch, I am getting failures in applying the test portions of the patch - &lt;br/&gt;
grantRevokeDDL.sql has been a hot file.&lt;/p&gt;</comment>
                            <comment id="12440555" author="yipng" created="Fri, 6 Oct 2006 18:45:32 +0100"  >&lt;p&gt;Previous patch got stale, attaching derby1716-trunk-diff03.txt.&lt;/p&gt;</comment>
                            <comment id="12440681" author="mikem" created="Sat, 7 Oct 2006 16:34:15 +0100"  >&lt;p&gt;Committed this patch to the trunk.&lt;/p&gt;

&lt;p&gt;m3_ibm142:20&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\conn\GenericAuthorizer.java&lt;/p&gt;

&lt;p&gt;Sending        java\testing\org\apache\derbyTesting\functionTests\master\grantRevokeDDL.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\grantRevokeDDL.sql&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\grantRevokeDDL_app.properties&lt;br/&gt;
Transmitting file data ....&lt;br/&gt;
Committed revision 453935.&lt;/p&gt;</comment>
                            <comment id="12454063" author="rhillegas" created="Tue, 28 Nov 2006 18:20:13 +0000"  >&lt;p&gt;Ported to 10.2 branch at subversion revision 480148.&lt;/p&gt;</comment>
                            <comment id="12457926" author="myrna" created="Tue, 12 Dec 2006 22:46:51 +0000"  >&lt;p&gt;updated the 10.2 j9_foundation canon with revision 486380.&lt;/p&gt;</comment>
                            <comment id="12551404" author="fuzzylogic" created="Thu, 13 Dec 2007 09:05:10 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12312336">DERBY-464</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12341448" name="derby1716-trunk-diff01a.txt" size="10910" author="yipng" created="Sat, 23 Sep 2006 03:15:16 +0100"/>
                            <attachment id="12341744" name="derby1716-trunk-diff02.txt" size="8570" author="yipng" created="Tue, 26 Sep 2006 21:44:04 +0100"/>
                            <attachment id="12342467" name="derby1716-trunk-diff03.txt" size="8359" author="yipng" created="Fri, 6 Oct 2006 18:45:32 +0100"/>
                            <attachment id="12341447" name="derby1716-trunk-stat01a.txt" size="524" author="yipng" created="Sat, 23 Sep 2006 03:15:16 +0100"/>
                            <attachment id="12341743" name="derby1716-trunk-stat02.txt" size="444" author="yipng" created="Tue, 26 Sep 2006 21:44:04 +0100"/>
                            <attachment id="12342466" name="derby1716-trunk-stat03.txt" size="444" author="yipng" created="Fri, 6 Oct 2006 18:45:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Sep 2006 23:15:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22660</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy101b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39656</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>