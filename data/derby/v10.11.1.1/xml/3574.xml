<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3574/DERBY-3574.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3574] With client, attempting to get the lob length after commit  or connection close if there  was a call to length() before commit does not throw an exception</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3574</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Attempting to get call Blob/Clob.length() after commit or connection close does not fail if there was a previous call to length().  If no previous call was made an exception is thrown as expected.&lt;/p&gt;

&lt;p&gt;See attached program TestLobLength for repro with commit.  If you comment out the two lines to get the length before the commit we get the expected exception.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12392468">DERBY-3574</key>
            <summary>With client, attempting to get the lob length after commit  or connection close if there  was a call to length() before commit does not throw an exception</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Mar 2008 17:57:59 +0000</created>
                <updated>Fri, 17 Jul 2009 17:48:56 +0100</updated>
                            <resolved>Tue, 15 Apr 2008 21:55:59 +0100</resolved>
                                    <version>10.3.3.0</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12586048" author="espinha" created="Sat, 5 Apr 2008 21:03:14 +0100"  >&lt;p&gt;I believe this will fix the issue. The patch is just for Clob.java but the same has to be done for Blob.java, I&apos;ll do it as soon as someone with more experience than me can confirm if it&apos;s the correct way to do it.&lt;/p&gt;

&lt;p&gt;I ran the test before and after, and it did pass with that change, but it&apos;s my first time here so any guidance is appreciated.&lt;/p&gt;</comment>
                            <comment id="12586179" author="kmarsden" created="Sun, 6 Apr 2008 22:05:33 +0100"  >&lt;p&gt;I spoke with Tiago on IRC about this and we came to the conclusion that.&lt;br/&gt;
1) There would be a problem with the patch if a transaction was committed and then another one began.&lt;br/&gt;
2) The error message should be localized.&lt;br/&gt;
3) It would be nice if checkValidity() could do this check but we don&apos;t mark client Lobs as invalid on commit()/rollback().&lt;br/&gt;
4) Length is a problem and not getSubString() etc because we cache the result of length().  I wonder with updatable resultSets if it is even valid to cache this result.&lt;/p&gt;
</comment>
                            <comment id="12586388" author="narayanan" created="Mon, 7 Apr 2008 14:36:45 +0100"  >&lt;p&gt;I have suggested a possible workaround for the related issue Derby-3469. I think the solution&lt;br/&gt;
suggested there if found OK will work for this issue also.&lt;/p&gt;</comment>
                            <comment id="12586391" author="espinha" created="Mon, 7 Apr 2008 14:47:48 +0100"  >&lt;p&gt;I have read your solution for this issue although I have thought of something different, and perhaps you can tell me which would be more correct. Keep in mind I still haven&apos;t tested this one solution either.&lt;/p&gt;

&lt;p&gt;What if instead of setting lengthObtained_ to false in a free() method on the Lob, we would, instead, extract the isValid property of Clob and Blob to its parent class, the Lob and set it to false on that free() method?&lt;/p&gt;

&lt;p&gt;Then when we call sqlLength() on the Lob we could do something like:&lt;br/&gt;
if(lengthObtained_ &amp;amp;&amp;amp; isValid) return sqlLength_;&lt;/p&gt;


&lt;p&gt;I&apos;m just suggesting this solution because it seems more correct to me than just resetting lengthObtained_ to false. By doing this we&apos;re pretty much just fooling the mechanism that deals with cache instead of actually checking whether the Lob is valid or not (i.e. whether it has been free()&apos;d or not). What method should I look into doing?&lt;/p&gt;</comment>
                            <comment id="12586395" author="narayanan" created="Mon, 7 Apr 2008 15:01:37 +0100"  >&lt;p&gt;&amp;gt;What if instead of setting lengthObtained_ to false in a free() method on the Lob, &lt;br/&gt;
&amp;gt;we would, instead, extract the isValid property of Clob and Blob to its parent class, &lt;br/&gt;
&amp;gt;the Lob and set it to false on that free() method?&lt;/p&gt;

&lt;p&gt;I think this is a very good solution because you do not need to make a stored procedure&lt;br/&gt;
call to determine that Lob is no longer valid. (unnecessary round trip to the server).&lt;/p&gt;

&lt;p&gt;&amp;gt;Then when we call sqlLength() on the Lob we could do something like:&lt;br/&gt;
&amp;gt;if(lengthObtained_ &amp;amp;&amp;amp; isValid) return sqlLength_; &lt;/p&gt;

&lt;p&gt;I think here if isValid is false you should do this&lt;/p&gt;

&lt;p&gt;throw new SqlException(null,new ClientMessageId(SQLState.LOB_OBJECT_INVALID))&lt;br/&gt;
                                                  .getSQLException();&lt;/p&gt;
</comment>
                            <comment id="12586407" author="espinha" created="Mon, 7 Apr 2008 15:21:52 +0100"  >&lt;p&gt;Ok, perfect! I will look into this today still.&lt;/p&gt;</comment>
                            <comment id="12586542" author="espinha" created="Mon, 7 Apr 2008 22:13:14 +0100"  >&lt;p&gt;Apparently there&apos;s more to it. I&apos;ve just implemented and tested this solution and the fact is that the TestLobLength still manages to request the length of the Clob, after the transaction has been committed.&lt;/p&gt;

&lt;p&gt;I found one thing: The Clobs effectively &lt;b&gt;aren&apos;t&lt;/b&gt; being free()&apos;d when a commit is issued on the connection they&apos;re bound with. I temporarily encapsulated isValid with a public method and I found out that it is true before we issue the commit, and it remains true after as well.&lt;/p&gt;

&lt;p&gt;The bottom-line is: do we want the Clobs (and Lobs in general) to be free()&apos;d upon the commit? If we don&apos;t, then Narayanan&apos;s solution will certainly fix this issue (since it doesn&apos;t rely on the &quot;validity&quot; of the Lob) and this problem gets dealt with quickly. If we do want them free()&apos;d, then the problem runs deeper than just some work on *lob.java .&lt;/p&gt;

&lt;p&gt;Some thoughts please?&lt;/p&gt;</comment>
                            <comment id="12586590" author="kmarsden" created="Tue, 8 Apr 2008 00:08:36 +0100"  >&lt;p&gt;Well the lobs are freed on the server with commit/rollback, just not marked invalid on the client.  So there is not a need for all of the work of free().&lt;/p&gt;

&lt;p&gt;I hate to keep a list of lobs just for this.  Part of me thinks the caching of the length is not such a good idea.  If we got rid of that, at least for locators, we wouldn&apos;t have this problem.&lt;/p&gt;

&lt;p&gt;Let me think about it some more and perhaps others will have better ideas in the meanwhile.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12586667" author="narayanan" created="Tue, 8 Apr 2008 07:08:48 +0100"  >&lt;p&gt;while working on Derby-694 I understood that Lob implemented Event&lt;br/&gt;
callback methods in the UnitOfWorkListener interface. The methods&lt;br/&gt;
are &lt;/p&gt;

&lt;p&gt;public void listenToUnitOfWork();&lt;/p&gt;

&lt;p&gt;public void completeLocalCommit(java.util.Iterator listenerIterator);&lt;/p&gt;

&lt;p&gt;public void completeLocalRollback(java.util.Iterator listenerIterator);&lt;/p&gt;

&lt;p&gt;There are three implementations of the UnitOfWorkListener interface Lob,Statement &lt;br/&gt;
and ResultSet. Each time an object of this type is created they are register themselves &lt;br/&gt;
to the connection by doing the following&lt;/p&gt;

&lt;p&gt;agent_.connection_.CommitAndRollbackListeners_.put(this,null);&lt;/p&gt;

&lt;p&gt;when a End Unit of Work Condition (ENDUOWRM) Reply Mesage is received&lt;br/&gt;
(see line no 738 NetConnectionReply.java) signifying that the unit of work has ended as a &lt;br/&gt;
result of the last command &lt;/p&gt;

&lt;p&gt;a completeLocalCommit() or a completeLocalRollback() is called. These methods are&lt;br/&gt;
also called in other places. Please refer Derby-694 for more background.&lt;/p&gt;

&lt;p&gt;Since the primary problem as pointed out is&lt;/p&gt;

&lt;p&gt;&amp;gt;&quot;Well the lobs are freed on the server with commit/rollback, just not marked invalid on the client.&quot;&lt;/p&gt;

&lt;p&gt;Could these method implementations in Lob.java be used to invalidate the Lob&lt;br/&gt;
(isValid=false) when a commit or a rollback happens?&lt;/p&gt;

&lt;p&gt;Not sure, but maybe we need to call free() here.&lt;/p&gt;</comment>
                            <comment id="12586704" author="knutanders" created="Tue, 8 Apr 2008 09:06:56 +0100"  >&lt;p&gt;I think that solution would work, but the callback methods in Lob are not currently used (Lob.listenToUnitOfWork() is never called) so they would have to be wired in. I&apos;m not sure we should call free() from the callback methods, since we don&apos;t need to call the stored procedures on commit/rollback. Perhaps setting isValid to false is enough.&lt;/p&gt;

&lt;p&gt;Like Kathey, I would prefer not storing the LOBs in a list just to invalidate them on transaction boundaries. What about this alternative:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In the connection object, keep a counter which is incremented each time a transaction is committed or aborted.&lt;/li&gt;
	&lt;li&gt;When a Lob object is created, store the current value of the transaction counter in the Lob object.&lt;/li&gt;
	&lt;li&gt;Change checkValidity() so that it checks that the current transaction is the same as the one that created it, something similar to:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    private void checkValidity() throws SQLException &lt;/p&gt;
{
        if (!isValid || tx != agent_.connection_.txCounter)
            throw new SqlException(....);
    }</comment>
                            <comment id="12586867" author="espinha" created="Tue, 8 Apr 2008 17:12:25 +0100"  >&lt;p&gt;Okay, so what do we know at this point:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Both my solution and Narayanan&apos;s don&apos;t work since they both rely on a free() being invoked client-side, upon a commit(); . This would require for all the Lobs to be stored in a list so that they could then be freed. Undesirable solution.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Knut&apos;s solution will most likely work. So unless someone objects to it, I believe it is the way to go. Perhaps instead of a counter I&apos;d create a new UUID upon each commit, that would uniquely identify each transaction, but those are implementation details.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12586918" author="espinha" created="Tue, 8 Apr 2008 19:16:37 +0100"  >&lt;p&gt;I have attached Knut&apos;s implementation with a twist. I did use an integer as a counter, as apparently the UUID class is only for Java 1.5+ and the integer is just as good.&lt;/p&gt;

&lt;p&gt;Anyway, the twist is:&lt;br/&gt;
Instead of doing the check on checkValidity(), I added the transactionID_ to the Lob class. This is better since we want the same check for all kinds of Lobs. Since Lob doesn&apos;t have a checkValidity(), I&apos;ve added the check to the sqlLength() method and I throw an exception there.&lt;/p&gt;

&lt;p&gt;The Connection.java also has a transactionID_ now, which is the &quot;index&quot; of the current transaction. It&apos;s private and it should never be altered, except for the increment done on the commit() method.&lt;/p&gt;

&lt;p&gt;Needs to be added that with this solution,TestLobLength does pass.&lt;/p&gt;</comment>
                            <comment id="12587080" author="knutanders" created="Wed, 9 Apr 2008 08:55:09 +0100"  >&lt;p&gt;Thanks for the patch. From a quick look, I have these comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Connection.java:&lt;br/&gt;
The transactionID variable is only incremented on explicit commit. I think it should also be incremented when the transaction is auto-committed or aborted. Perhaps it&apos;s better to do it in Connection.completeLocalCommit() and Connection.completeLocalRollback() instead of Connection.commit()?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Lob.java:&lt;br/&gt;
I feel that the check belongs in checkValidity() rather than in sqlLength(). Wouldn&apos;t it be possible to move the isValid flag and the checkValidity() method from Blob/Clob into Lob? They do exactly the same work in Blob and Clob, so there&apos;s no reason why we can&apos;t move them into the Lob class.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12587526" author="espinha" created="Thu, 10 Apr 2008 09:44:51 +0100"  >&lt;p&gt;Added new patches to comply with those changes. The check is done in checkValidity() now, extracted isValid to Lob.java and changed the place where transactionID is incremented.&lt;/p&gt;</comment>
                            <comment id="12587604" author="kristwaa" created="Thu, 10 Apr 2008 12:46:28 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;I haven&apos;t looked at the code changes in detail, but I did take a quick look at the uploaded patches.&lt;br/&gt;
You are of course free to upload one patch per file, but I find it easier to apply fixes when there is only one diff per &quot;change iteration&quot; / chunk of work.&lt;br/&gt;
Also, I believe the usual pattern is to generate the diffs from the within the trunk directory so that you can apply the patch using &quot;patch -p0 &amp;lt; patch.diff&quot; from the root directory (i.e. the path / context in the diff would be &quot;java/client/org/apache/...&quot;).&lt;/p&gt;

&lt;p&gt;A few suggestions;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;use JavaDoc instead of normal comments for instance variables&lt;/li&gt;
	&lt;li&gt;avoid whitespace changes and trailing whitespace (see for instance the patch for Connection)&lt;/li&gt;
	&lt;li&gt;avoid mixing tabs and spaces for indentation&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A committer might still commit the patch even if these guidelines aren&apos;t followed, but following them tends to speed up the review and commit process.&lt;br/&gt;
Thank you for your time and contribution &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12587608" author="knutanders" created="Thu, 10 Apr 2008 13:07:14 +0100"  >&lt;p&gt;Thanks for the new patch! Apart from what Kristian said, I think we should also update the javadoc for the checkValidity() method so that it reflects the new behaviour (it should mention that it also checks that the transaction that created it is still active). The code changes look correct to me.&lt;/p&gt;</comment>
                            <comment id="12587656" author="espinha" created="Thu, 10 Apr 2008 15:38:56 +0100"  >&lt;p&gt;My apologies Kristian. This is actually the first time I created diff files so I&apos;m still in the process of learning. I found a website with basic instructions on using the diff tool but if someone can point me in the direction of something more useful for this specific case (or point me to some tool with a GUI that makes things easier for us..), I&apos;d appreciate it. I tried diff&apos;ing the whole directory and it errored out, claiming it had exhausted the memory.&lt;/p&gt;

&lt;p&gt;As for the other suggestions, I&apos;ll certainly follow them in future patches.&lt;/p&gt;</comment>
                            <comment id="12587672" author="kmarsden" created="Thu, 10 Apr 2008 16:27:08 +0100"  >&lt;p&gt;You can use svn diff from the top of the source tree (on directory up from java).&lt;/p&gt;

&lt;p&gt;svn diff &amp;gt; patch_filename&lt;/p&gt;</comment>
                            <comment id="12587682" author="espinha" created="Thu, 10 Apr 2008 17:05:44 +0100"  >&lt;p&gt;Thank you Kathey, that made my life much easier. Added a new patch with all the changes and some more fixes to comments.&lt;/p&gt;</comment>
                            <comment id="12587707" author="kmarsden" created="Thu, 10 Apr 2008 18:02:25 +0100"  >&lt;p&gt;Thanks Tiago for the patch.   The change looks good for commit/rollback. Does the change work after connection close?  We should add a regression test. There are currently  fixtures in BlobClob4BLOBTest, testB/ClobAfterCommit, and testB/ClobAfterConnectionClose where the tests could be added. &lt;/p&gt;

&lt;p&gt;With your new patch you can just attach it and leave the old one for reference.&lt;br/&gt;
Kathey&lt;/p&gt;</comment>
                            <comment id="12588069" author="espinha" created="Fri, 11 Apr 2008 19:30:06 +0100"  >&lt;p&gt;I have just talked with Kathey on IRC and here&apos;s the main topics:&lt;/p&gt;

&lt;p&gt;1) Initially, with my patch, if you tried to invoke length() on a Lob (over a connection that had been closed), you&apos;d get the INVALID_LOB exception instead of the expected NO_CURRENT_CONNECTION.&lt;/p&gt;

&lt;p&gt;2) The testB/ClobAfterCommit() was always passing because it wasn&apos;t replicating the original issue: cached results. Therefore a change was made so that length() is invoked before the commit(), caching the result, and it is then invoked for real after the commit(), where it should throw the expected exception.&lt;/p&gt;

&lt;p&gt;3) To fix the problem in point 1, checkValidity() was changed once again, to include a checkForClosedConnection() .&lt;/p&gt;

&lt;p&gt;All the tests in BlobClob4BlobTest are successful now, and these changes are available on the latest patch (including the regression test changes).&lt;/p&gt;</comment>
                            <comment id="12588094" author="kmarsden" created="Fri, 11 Apr 2008 20:54:26 +0100"  >&lt;p&gt;Changes look good. Could you run regression tests with your patch and let us know how it goes?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12588220" author="espinha" created="Sat, 12 Apr 2008 11:44:03 +0100"  >&lt;p&gt;I have ran derbyall but I can&apos;t seem to find suites.all like you told me to run, am I doing something wrong?&lt;/p&gt;

&lt;p&gt;Here&apos;s the result for derbyall:&lt;/p&gt;

&lt;p&gt;------------------------------------------------------&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Summary results:&lt;/p&gt;

&lt;p&gt;Test Run Started: 2008-04-11 20:21:52.0&lt;br/&gt;
Test Run Duration: 01:27:29&lt;/p&gt;

&lt;p&gt;249 Tests Run&lt;br/&gt;
100% Pass (249 tests passed)&lt;br/&gt;
 0% Fail (0 tests failed)&lt;br/&gt;
7 Suites skipped&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Passed tests in: derbyall_pass.txt&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
Skipped suites in: derbyall_skip.txt&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
System properties in: derbyall_prop.txt&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
No Failures.&lt;br/&gt;
------------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12588266" author="bryanpendleton" created="Sat, 12 Apr 2008 16:59:51 +0100"  >&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyTopLevelJunitTests&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyTopLevelJunitTests&lt;/a&gt;&lt;br/&gt;
has information on how to run the various Junit tests.&lt;/p&gt;

&lt;p&gt;Note that you can either run them via &quot;ant&quot; commands, or directly by invoking Junit.&lt;/p&gt;</comment>
                            <comment id="12588277" author="kmarsden" created="Sat, 12 Apr 2008 17:59:31 +0100"  >&lt;p&gt;For some reason I had thought it was in README.htm but I guess not.&lt;br/&gt;
Here is the wiki page that talks about running the tests.  &lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyJUnitTesting?highlight=%28JunitTesting%29#head-216e836b20ddca6253e67308abdabb545416232a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyJUnitTesting?highlight=%28JunitTesting%29#head-216e836b20ddca6253e67308abdabb545416232a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When running with the textui runner I usually run with extra memory e.g.&lt;br/&gt;
java  -XX:MaxPermSize=128M -Xmx512M -Xms512M  -DderbyTesting.oldReleasePath=C:/kmarsden/svnreleases/jars junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All&lt;/p&gt;
</comment>
                            <comment id="12588284" author="espinha" created="Sat, 12 Apr 2008 18:18:13 +0100"  >&lt;p&gt;Ah, perfect! I&apos;m running that test right now, I&apos;ll post the results as soon as I have them.&lt;/p&gt;</comment>
                            <comment id="12588315" author="espinha" created="Sat, 12 Apr 2008 21:37:17 +0100"  >&lt;p&gt;Ok I have a problem.&lt;/p&gt;

&lt;p&gt;I ran the command that Kathey posted (without the -D switch and with -Xmx1024M since it gave out of memory with just 512MiB) and I got a stackload of error lines after a few hours of running. Here&apos;s what it said in the end:&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 8010,  Failures: 1,  Errors: 8&lt;/p&gt;

&lt;p&gt;Somehow I get the feeling that this is still a memory issue. I&apos;m running the tests in a Virtual Machine running Ubuntu 7.10 with just 1GiB of RAM, and after a while, java is using all the RAM and has entered the swap file. Should I discard the VM and run it all natively on XP where I have 2GiB of RAM?&lt;/p&gt;</comment>
                            <comment id="12588523" author="espinha" created="Mon, 14 Apr 2008 10:28:26 +0100"  >&lt;p&gt;I ran the tests again (suites.all) natively on my Windows XP and here&apos;s the result:&lt;/p&gt;

&lt;p&gt;Time: 6.169&lt;/p&gt;

&lt;p&gt;OK (9830 tests)&lt;/p&gt;

&lt;p&gt;The derbyall suite also had a 100% success rate.&lt;/p&gt;

&lt;p&gt;Apparently there is a problem while running suites.All under Ubuntu 7.10 (refer to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3616&quot; title=&quot;TableFunctionTest fails under Ubuntu 7.10&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3616&quot;&gt;&lt;del&gt;DERBY-3616&lt;/del&gt;&lt;/a&gt;) and that&apos;s the reason why my tests were failing, and not something patch-related. Therefore I think it&apos;s safe to say that this patch can be applied to the trunk.&lt;/p&gt;</comment>
                            <comment id="12588706" author="kmarsden" created="Mon, 14 Apr 2008 19:46:47 +0100"  >&lt;p&gt;I committed revision 647931 for this issue. Thank you Tiago for the patch. Could you submit a followup patch with the tests for length() after connection.close?&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12588775" author="espinha" created="Mon, 14 Apr 2008 21:24:56 +0100"  >&lt;p&gt;Followup patch as suggested by Kathey submitted.&lt;/p&gt;</comment>
                            <comment id="12588976" author="knutanders" created="Tue, 15 Apr 2008 09:41:17 +0100"  >&lt;p&gt;The committed patch (rev #647931) contained many whitespace changes (adding trailing blanks, extra blank lines and replacing spaces with tabs) as mentioned in Kristian&apos;s review. I cleaned it up and committed revision 648180.&lt;/p&gt;</comment>
                            <comment id="12588978" author="knutanders" created="Tue, 15 Apr 2008 09:46:39 +0100"  >&lt;p&gt;Do we really need this extra check in checkValidity()?&lt;/p&gt;

&lt;p&gt;+    	/**&lt;br/&gt;
+    	 * If there isn&apos;t an open connection, the Lob is invalid.&lt;br/&gt;
+    	 */&lt;br/&gt;
+    	try&lt;/p&gt;
{
+    		agent_.connection_.checkForClosedConnection();
+    	}
&lt;p&gt;catch(SqlException se)&lt;/p&gt;
{
+    		throw se.getSQLException();
+    	}

&lt;p&gt;If I am not mistaken, closing the connection is only allowed if there is no active transaction on the connection, which means that Connection.transactionID != Lob.transactionID so that checkValidity() will throw an exception anyway.&lt;/p&gt;</comment>
                            <comment id="12588982" author="espinha" created="Tue, 15 Apr 2008 10:00:53 +0100"  >&lt;p&gt;If I recall correctly, that check is to comply with expected behaviour, namely the testC/BlobAfterClosingConnection(). This test expects to get a NO_CURRENT_CONNECTION after a close(); is invoked on the connection and we attempt to access the contents of a C/Lob. If that check isn&apos;t in place, the length(); call will throw a INVALID_LOB instead.&lt;/p&gt;

&lt;p&gt;Basically that check is pretty much to comply with the regression tests.&lt;/p&gt;</comment>
                            <comment id="12589004" author="knutanders" created="Tue, 15 Apr 2008 10:59:59 +0100"  >&lt;p&gt;OK, thanks for the explanation. I don&apos;t think it matters whether we throw NO_CURRENT_CONNECTION or INVALID_LOB, since both are true. So I think I would have preferred simplifying the code and changing the test to accept the other exception.&lt;/p&gt;</comment>
                            <comment id="12589009" author="espinha" created="Tue, 15 Apr 2008 11:12:37 +0100"  >&lt;p&gt;This is true, I just thought that since the connection was closed, on top of the Lob being invalid, we don&apos;t have a connection anymore. That was the logic I followed to choose to do that check instead (and I believe it was also Kathey who suggested this approach). I reckon though that in the end, changing the test would simplify the code and the purpose would be met anyways.&lt;/p&gt;

&lt;p&gt;If needed I can revert this to your way.&lt;/p&gt;</comment>
                            <comment id="12589036" author="knutanders" created="Tue, 15 Apr 2008 12:23:09 +0100"  >&lt;p&gt;It&apos;s not a big deal. The extra check is probably not that expensive, so I&apos;m fine with either of the approaches. It seems like the current approach matches what the embedded driver does.&lt;/p&gt;</comment>
                            <comment id="12589229" author="espinha" created="Tue, 15 Apr 2008 21:55:59 +0100"  >&lt;p&gt;Issue resolved. Final revision regarding this issue: 648409 .&lt;/p&gt;</comment>
                            <comment id="12599806" author="kristwaa" created="Mon, 26 May 2008 11:14:14 +0100"  >&lt;p&gt;Updating affects and fix versions.&lt;br/&gt;
I plan to port this to the 10.4 branch, as it also fixes the bug reported as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3469&quot; title=&quot;Clob.length() doesn&amp;#39;t detect a closed underlying connection in a consistent way&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3469&quot;&gt;&lt;del&gt;DERBY-3469&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12599838" author="kristwaa" created="Mon, 26 May 2008 14:31:05 +0100"  >&lt;p&gt;Backported fix to the 10.4 branch with revision 660187.&lt;/p&gt;</comment>
                            <comment id="12620373" author="rhillegas" created="Wed, 6 Aug 2008 19:50:12 +0100"  >&lt;p&gt;Does this issue need a release note? With this fix, something which used to succeed now fails.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12425178">DERBY-4224</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12430773">DERBY-4312</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12389576">DERBY-3469</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12378734" name="TestLobLength.java" size="1498" author="kmarsden" created="Thu, 27 Mar 2008 17:58:25 +0000"/>
                            <attachment id="12380113" name="derby3574-testfix.patch" size="1716" author="espinha" created="Mon, 14 Apr 2008 22:03:34 +0100"/>
                            <attachment id="12380110" name="derby3574-testfix.patch" size="1333" author="espinha" created="Mon, 14 Apr 2008 21:24:13 +0100"/>
                            <attachment id="12379945" name="derby3574-wtest.patch" size="8780" author="espinha" created="Fri, 11 Apr 2008 19:22:32 +0100"/>
                            <attachment id="12379859" name="derby3574.patch" size="7801" author="espinha" created="Thu, 10 Apr 2008 17:08:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 5 Apr 2008 20:03:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23723</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0s07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38355</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>