<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2450/DERBY-2450.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2450] Clob.Position returning wrong value when operating on Reader</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2450</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment>all</environment>
        <key id="12364911">DERBY-2450</key>
            <summary>Clob.Position returning wrong value when operating on Reader</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anurag">Anurag Shekhar</assignee>
                                    <reporter username="anurag">Anurag Shekhar</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Mar 2007 13:40:14 +0000</created>
                <updated>Thu, 2 May 2013 03:29:02 +0100</updated>
                            <resolved>Mon, 26 Mar 2007 09:21:54 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12480770" author="anurag" created="Wed, 14 Mar 2007 13:41:44 +0000"  >&lt;p&gt;Clob.Position method, when its searching pattern over a stream, returns a wrong value. I found this bug while working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2346&quot; title=&quot;Provide set methods for clob for embedded driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2346&quot;&gt;&lt;del&gt;DERBY-2346&lt;/del&gt;&lt;/a&gt;. I am not able to reproduce the exact behavior with existing clob implementation. To reproduce the problem in the method I have extracted the position method in a stand alone class and running it against a InputStreamReader. When I do that the value I get differs from what I get from (String.indexOf (pattern) + 1).&lt;/p&gt;

&lt;p&gt;all the methods I have used in the test class are from BlobClob4BlobTest&lt;/p&gt;</comment>
                            <comment id="12483066" author="anurag" created="Thu, 22 Mar 2007 09:11:15 +0000"  >&lt;p&gt;I have simplified the code while retaining the algorithm used in position calculation. The major change from the existing code is that I have taken off the part of code which slices and converts the search string to char array. This is not really required as String.charAt gives the access to any char in the string. Doing this also simplifies the comparison as we don&apos;t need to replenish the char array after exhausting it during comparison.&lt;/p&gt;

&lt;p&gt;I have also changed the javadoc to explain actual search process. &lt;/p&gt;</comment>
                            <comment id="12483067" author="anurag" created="Thu, 22 Mar 2007 09:12:08 +0000"  >&lt;p&gt;sorry for misleading attachment name. It should me derby-2450.diff&lt;/p&gt;</comment>
                            <comment id="12483468" author="kristwaa" created="Fri, 23 Mar 2007 08:54:46 +0000"  >&lt;p&gt;I&apos;m having a look at the patch. One thing that struck me, is that the patch adds quite a bit of implementation details in the JavaDoc for a public JDBC method. Do we have any guidelines for this?&lt;/p&gt;

&lt;p&gt;In general, when I use libraries/APIs I don&apos;t care about how they do their things, as long as they do it fast and correct &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
That said, I really think we should keep the implementation/algorithm description, I&apos;m just not sure what is the right place/format.&lt;/p&gt;</comment>
                            <comment id="12483474" author="anurag" created="Fri, 23 Mar 2007 09:08:33 +0000"  >&lt;p&gt;I can make it non javadoc comments if javadoc is not the right place but &lt;br/&gt;
I will prefer to retain the comment as part of this code. Previously &lt;br/&gt;
lack of proper comment had made it difficult to understand the search &lt;br/&gt;
process.&lt;br/&gt;
anurag&lt;/p&gt;

</comment>
                            <comment id="12483499" author="kristwaa" created="Fri, 23 Mar 2007 10:19:33 +0000"  >&lt;p&gt;A few more comments and observations.&lt;/p&gt;

&lt;p&gt; (a) The longest search pattern we can handle if the Clob is materialized is INTEGER.MAX_VALUE. I think this is perfectly fine &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
 (b) The number of chars to read is a tunable parameter. A new Reader object is created for each iteration of the outer for. In addition, the new stream must skip chars up until the current position. 256 chars per iteration seemed a bit small to me, but there is nothing wrong with it. I guess it must be balanced between memory usage, cost per iteration and &quot;expected search pattern length&quot;. Opinions?&lt;br/&gt;
 (c) Do you know how well the position-method is tested in existing tests? If it is not that well tested, I can volunteer to write some tests for it.&lt;/p&gt;

&lt;p&gt;Overall I think the patch is good, but I would like the JavaDoc issue to be commented/resolved (see my previous comment), and get feedback on my questions above.&lt;br/&gt;
I&apos;ll hold off the commit for a few days, but I won&apos;t object if anyone else wants to commit it ASAP.&lt;/p&gt;</comment>
                            <comment id="12483518" author="anurag" created="Fri, 23 Mar 2007 11:01:32 +0000"  >&lt;p&gt;This particular position method accepts a String so we are quite safe as &lt;br/&gt;
String can&apos;t grow beyond INTEGER.MAX_VALUE &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. For larger search string &lt;br/&gt;
the other method position (Clob, Clob) should be used but only if the &lt;br/&gt;
Clob implementation support Clob of larger than INTEGER.MAX_VALUE.&lt;/p&gt;

&lt;p&gt;Reusing the reader will be a great optimization but it&apos;s not possible &lt;br/&gt;
unless we modify the UTF8Reader to support mark and reset. 256 I &lt;br/&gt;
selected because the existing code was using it but changing it to &lt;br/&gt;
something larger is not a problem.Increasing the buffer size will &lt;br/&gt;
improve the performance when the Writer needs to be resettled  back  &lt;br/&gt;
previous read blocks. In other case it will add little value as the &lt;br/&gt;
Writer itself does a caching and reads in block from the underlying &lt;br/&gt;
stream and returns only the chars which it has in memory, subsequent &lt;br/&gt;
read will make it fetch another full block in memory.&lt;/p&gt;

&lt;p&gt;There are good number of tests related to position in BlobClob4BlobTest &lt;br/&gt;
but some how they couldn&apos;t expose this bug. I suggest you to wait for &lt;br/&gt;
the new implementation of clob before you add new tests as it will be &lt;br/&gt;
nicer to know the implementation before writing the test so you can &lt;br/&gt;
write test which exercises the path which is ignored by the current tests.&lt;/p&gt;

</comment>
                            <comment id="12483522" author="anurag" created="Fri, 23 Mar 2007 11:07:16 +0000"  >&lt;p&gt;sorry for the typo its Reader everywhere in the above comment not Writer.&lt;/p&gt;</comment>
                            <comment id="12484042" author="kristwaa" created="Mon, 26 Mar 2007 07:50:55 +0100"  >&lt;p&gt;Committed &apos;derby-2250.diff&apos; (the name a bit confusing, as it refers to a different Jira issue, but it is the correct patch) to trunk with revision 522440.&lt;/p&gt;</comment>
                            <comment id="12484057" author="kristwaa" created="Mon, 26 Mar 2007 09:07:16 +0100"  >&lt;p&gt;Attached &apos;derby-2450-javadoc.diff&apos; which rewrites/-formats the JavaDoc.&lt;br/&gt;
I kept the algorithm documentation in the JavaDoc, since it is only generated as part of the engine documentation. It is HTML formatted, and best viewed in a browser...&lt;/p&gt;</comment>
                            <comment id="12484062" author="kristwaa" created="Mon, 26 Mar 2007 09:21:54 +0100"  >&lt;p&gt;Committed &apos;derby-2450-javadoc.diff&apos; to trunk with revision 522447.&lt;/p&gt;

&lt;p&gt;Thanks for the answers to my questions Anurag. Based on the explanations, I do not see any reason to change the current implementation.&lt;/p&gt;

&lt;p&gt;I&apos;m resolving the issue, and my only nitpick is whether the implementation is tested well enough with regards to boundary conditions for both Clob size and search string length. I think this kind of testing would be best done by testing EmbedClob directly (to access the chunk size of data read from underlying stream), which we currently don&apos;t support (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2460&quot; title=&quot;Create a framework for writing unit tests that will access package-private fields and methods of Derby classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2460&quot;&gt;DERBY-2460&lt;/a&gt;).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12363010">DERBY-2346</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12353277" name="PositionTest.java" size="14734" author="anurag" created="Wed, 14 Mar 2007 13:41:44 +0000"/>
                            <attachment id="12353936" name="derby-2250.diff" size="11858" author="anurag" created="Thu, 22 Mar 2007 09:11:14 +0000"/>
                            <attachment id="12354189" name="derby-2450-javadoc.diff" size="3194" author="kristwaa" created="Mon, 26 Mar 2007 09:07:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Mar 2007 08:54:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23058</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11sn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39941</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>