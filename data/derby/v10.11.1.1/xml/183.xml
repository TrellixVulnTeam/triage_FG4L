<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-183/DERBY-183.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-183] Parameter names required in CREATE FUNCTION</title>
                <link>https://issues.apache.org/jira/browse/DERBY-183</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A statement like&lt;br/&gt;
  create function s2.f2( char(8), integer) returns int&lt;br/&gt;
  language java parameter style java  external name &apos;myclass.mymethod&apos;&lt;br/&gt;
fails with the message&lt;br/&gt;
  ERROR 42X01: Syntax error: Encountered &quot;char&quot; at line 1, column 24&lt;br/&gt;
However&lt;br/&gt;
  create function s2.f2( p1 char(8), p2 integer) returns int&lt;br/&gt;
  language java parameter style java  external name &apos;myclass.mymethod&apos;&lt;br/&gt;
is accepted.&lt;br/&gt;
The Derby documentation (at &lt;a href=&quot;http://incubator.apache.org/derby/manuals/reference/sqlj27.html#CREATE+PROCEDURE+Statement&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://incubator.apache.org/derby/manuals/reference/sqlj27.html#CREATE+PROCEDURE+Statement&lt;/a&gt;), the SQL2003 standard, and DB2 all agree that the parameter name is optional.&lt;/p&gt;</description>
                <environment></environment>
        <key id="31163">DERBY-183</key>
            <summary>Parameter names required in CREATE FUNCTION</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="james.f.adams">James F. Adams</assignee>
                                    <reporter username="jackklebanoff">Jack Klebanoff</reporter>
                        <labels>
                    </labels>
                <created>Sat, 26 Mar 2005 10:41:40 +0000</created>
                <updated>Thu, 13 Dec 2007 09:04:39 +0000</updated>
                            <resolved>Sun, 15 Oct 2006 01:30:31 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12440729" author="james.f.adams" created="Sun, 8 Oct 2006 05:00:48 +0100"  >&lt;p&gt;I have attached a patch that:&lt;/p&gt;

&lt;p&gt;1) Modifies java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;br/&gt;
    a) Initializes parameterName to &quot;&quot; in procedureParameterDefinition and functionParameterDefinition&lt;br/&gt;
    b) Makes parameterName optional in procedureParameterDefinition and functionParameterDefinition&lt;/p&gt;

&lt;p&gt;2) Modifies java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java to ignore function and procedure parameter names equal to &quot;&quot; when checking for duplicate parameter names.&lt;/p&gt;

&lt;p&gt;I have run derbyall with no additional failures noted.  I also ran dblook on a database which contained functions and procedures with parameters that had just parameter types specified.  The resultant DML looked good.&lt;/p&gt;</comment>
                            <comment id="12440770" author="mikem" created="Sun, 8 Oct 2006 19:04:26 +0100"  >&lt;p&gt;Are you planning on submitting tests for this, I didn&apos;t see any in the patch?&lt;/p&gt;</comment>
                            <comment id="12440771" author="bryanpendleton" created="Sun, 8 Oct 2006 19:14:11 +0100"  >&lt;p&gt;Hello James, thanks for looking at this problem, and thanks for the patch!&lt;/p&gt;

&lt;p&gt;It would be nice if the patch included some test cases, both to syntactically&lt;br/&gt;
demonstrate the handling of various combinations of named and unnamed parameters,&lt;br/&gt;
and to demonstrate the correct execution of such functions.&lt;/p&gt;

&lt;p&gt;Also, could you expand upon the meaning of  &quot;LOOKAHEAD(2)&quot; in the parser change?&lt;br/&gt;
I&apos;m not that familiar with the way that LOOKAHEAD functions, so was confused as to&lt;br/&gt;
why it was added here. Perhaps you could add some comments in the code itself to&lt;br/&gt;
explain the usage of LOOKAHEAD(2). I assume that it effectively makes the parameter&lt;br/&gt;
name be optional; how does that technique compare to, say, having two alternate&lt;br/&gt;
productions in functionParameterDefinition(), one with a parameter name and one without?&lt;/p&gt;
</comment>
                            <comment id="12440773" author="james.f.adams" created="Sun, 8 Oct 2006 19:34:24 +0100"  >&lt;p&gt;I will create some test cases as suggested and add an explanation why the additional lookahead is needed in the grammar.&lt;/p&gt;</comment>
                            <comment id="12441146" author="james.f.adams" created="Tue, 10 Oct 2006 15:11:48 +0100"  >&lt;p&gt;I have attached an updated patch (Derby183.patch2.txt) that modifies the following files:&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;/p&gt;

&lt;p&gt;java/testing/org/apache/derbyTesting/functionTests/tests/lang/procedure.java&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java&lt;/p&gt;

&lt;p&gt;java/testing/org/apache/derbyTesting/functionTests/tests/lang/functions.sql&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/functions.out&lt;/p&gt;

&lt;p&gt;Tests have been added to lang/functions.sql and lang/procedure.java.&lt;br/&gt;
I added a comment to sqlgrammar.jj to explain the need for the LOOKAHEAD(2).&lt;/p&gt;

&lt;p&gt;The parameter name is made optional by surrounding its production with [].&lt;/p&gt;

&lt;p&gt;This changes the grammar from:&lt;/p&gt;

&lt;p&gt;	parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true)&lt;br/&gt;
 	typeDescriptor = dataTypeDDL() &lt;/p&gt;

&lt;p&gt;to:&lt;/p&gt;

&lt;p&gt;        [ parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true) ]&lt;br/&gt;
        typeDescriptor = dataTypeDDL() &lt;/p&gt;

&lt;p&gt;This results in a choice conflict because certain tokens satisfy both identifier() and dataTypeDDL().  An additional token of lookahead resolves this conflict.  This results in:&lt;/p&gt;

&lt;p&gt;        [ LOOKAHEAD(2) parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true) ]&lt;br/&gt;
        typeDescriptor = dataTypeDDL() &lt;/p&gt;

&lt;p&gt;Expressing this in an alternate form such as:&lt;/p&gt;

&lt;p&gt;        ( &lt;br/&gt;
                parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true)&lt;br/&gt;
                typeDescriptor = dataTypeDDL() &lt;br/&gt;
        ) | typeDescriptor = dataTypeDDL() &lt;/p&gt;

&lt;p&gt;still results in a choice conflict so I opted for the more compact form.&lt;/p&gt;
</comment>
                            <comment id="12441215" author="bryanpendleton" created="Tue, 10 Oct 2006 18:21:21 +0100"  >&lt;p&gt;Hi James, thanks for the updated patch, and for the clear explanation of the LOOKAHEAD behaviors.&lt;/p&gt;

&lt;p&gt;The tests look good to me. They demonstrate the problem: they fail without the code changes, and&lt;br/&gt;
they succeed when the code changes are applied. It is always good to have tests such as these.&lt;/p&gt;

&lt;p&gt;I had no trouble applying your patch and running the two modified tests.&lt;/p&gt;

&lt;p&gt;+1 from me to commit; is anyone else reviewing this change?&lt;/p&gt;</comment>
                            <comment id="12441319" author="bryanpendleton" created="Wed, 11 Oct 2006 02:24:39 +0100"  >&lt;p&gt;When I ran derbyall, lang/procedure.java failed in the DerbyNet and DerbyNetClient frameworks.&lt;br/&gt;
There are multiple procedure.out files in the various frameworks. Unfortunately,&lt;br/&gt;
I think that all of them have to be updated. The diff should be the same in all of them,&lt;br/&gt;
since your test doesn&apos;t depend on any particular network or JVM features.&lt;/p&gt;

&lt;p&gt;To see the problem:&lt;br/&gt;
java -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest lang/procedure.java&lt;/p&gt;

&lt;p&gt;To see all the procedure.out files that need to be updated, do:&lt;br/&gt;
find trunk/java -name procedure.out&lt;/p&gt;</comment>
                            <comment id="12441837" author="james.f.adams" created="Thu, 12 Oct 2006 20:02:37 +0100"  >&lt;p&gt;I have a patch ready that should resolve the remaining test issues.  I currently can not upload an attachments.  Issue &lt;a href=&quot;https://issues.apache.org/jira/browse/INFRA-984&quot; title=&quot;Problem attaching files to DERBY-1953&quot; class=&quot;issue-link&quot; data-issue-key=&quot;INFRA-984&quot;&gt;&lt;del&gt;INFRA-984&lt;/del&gt;&lt;/a&gt; has been filed by Yip Ng.  As soon as this is resolved I will attach the new patch.&lt;/p&gt;</comment>
                            <comment id="12441958" author="james.f.adams" created="Fri, 13 Oct 2006 09:21:59 +0100"  >&lt;p&gt;Thanks Bryan for reviewing my patches.&lt;/p&gt;

&lt;p&gt;Attached is a new patch that modifies the following files and resolves the testing issues:&lt;/p&gt;

&lt;p&gt;java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java&lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/tests/lang/procedure.java&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/tests/lang/functions.sql&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/jdk16/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/functions.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/jdk16/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/jdk14/procedure.out&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java&lt;/p&gt;

&lt;p&gt;I ran the lang/procedure.java and lang/functions.sql  tests using the embedded, DerbyNet,&lt;br/&gt;
and DerbyNetClient frameworks with Java versions 1.3, 1.4, 1.5, and 1.6 and saw no errors.&lt;/p&gt;</comment>
                            <comment id="12442083" author="bryanpendleton" created="Fri, 13 Oct 2006 20:25:09 +0100"  >&lt;p&gt;Thanks James! This patch resolved my derbyall issues; my run was 100% clean.&lt;/p&gt;

&lt;p&gt;The patch looks good to me; I intend to commit it. If anybody else is&lt;br/&gt;
reviewing it, please let us know.&lt;/p&gt;</comment>
                            <comment id="12442087" author="djd" created="Fri, 13 Oct 2006 20:49:54 +0100"  >&lt;p&gt;If a routine&apos;s parameter is created without a parameter name, then what will this expression return for the RoutineAliasInfo describing the routine?&lt;/p&gt;

&lt;p&gt;RoutineAliasInfo.getParameterNames()&lt;span class=&quot;error&quot;&gt;&amp;#91;n&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Is it null for no name specified or the empty string?&lt;/p&gt;

&lt;p&gt;Would be good to document this in the RoutineAliasInfo class.&lt;/p&gt;
</comment>
                            <comment id="12442313" author="bryanpendleton" created="Sat, 14 Oct 2006 17:29:59 +0100"  >&lt;p&gt;I believe that RoutineAliasInfo.getParameterNames()&lt;span class=&quot;error&quot;&gt;&amp;#91;n&amp;#93;&lt;/span&gt; will return the empty string.&lt;/p&gt;

&lt;p&gt;It&apos;s a bit hard to figure this out directly, because I couldn&apos;t figure out how that method&lt;br/&gt;
would get called from, say, an SQL statement.&lt;/p&gt;

&lt;p&gt;However, I looked at this indirectly by running dblook against a database which had&lt;br/&gt;
some functions with unnamed parameters, and the output of dblook was as follows:&lt;/p&gt;

&lt;p&gt;CREATE FUNCTION &quot;APP&quot;.&quot;NONAME1&quot; ( INTEGER, INTEGER) RETURNS INTEGER LANGUAGE JAVA PARAMETER STYLE JAVA READS SQL DATA CALLED ON NULL INPUT EXTERNAL NAME &apos;java.lang.Math.max&apos; ;&lt;/p&gt;

&lt;p&gt;CREATE FUNCTION &quot;APP&quot;.&quot;NONAME2&quot; (P1 INTEGER, INTEGER) RETURNS INTEGER LANGUAGE JAVA PARAMETER STYLE JAVA READS SQL DATA CALLED ON NULL INPUT EXTERNAL NAME &apos;java.lang.Math.max&apos; ;&lt;/p&gt;

&lt;p&gt;By examining how RoutineAliasInfo.toString works, it seems that if the parameterNames&lt;br/&gt;
array held NULL for the unnamed parameters, then dblook would have generated:&lt;/p&gt;

&lt;p&gt;CREATE FUNCTION &quot;APP&quot;.&quot;NONAME1&quot; (NULL INTEGER,NULL INTEGER) RETURNS INTEGER LANGUAGE JAVA PARAMETER STYLE JAVA READS SQL DATA CALLED ON NULL INPUT EXTERNAL NAME &apos;java.lang.Math.max&apos; ;&lt;/p&gt;

&lt;p&gt;CREATE FUNCTION &quot;APP&quot;.&quot;NONAME2&quot; (P1 INTEGER,NULL INTEGER) RETURNS INTEGER LANGUAGE JAVA PARAMETER STYLE JAVA READS SQL DATA CALLED ON NULL INPUT EXTERNAL NAME &apos;java.lang.Math.max&apos; ;&lt;/p&gt;

&lt;p&gt;So therefore I think that the parameterNames array contains empty strings, not null values,&lt;br/&gt;
for unnamed parameters.&lt;/p&gt;

&lt;p&gt;I&apos;ll add a comment to this effect in the RoutineAliasInfo class.&lt;/p&gt;</comment>
                            <comment id="12442318" author="bryanpendleton" created="Sat, 14 Oct 2006 18:02:34 +0100"  >&lt;p&gt;Committed Derby183.patch3.txt, plus a comment-only change to RoutineAliasInfo.java,&lt;br/&gt;
to subversion as revision 463982.&lt;/p&gt;

&lt;p&gt;James, thanks for the patch and for the tests and for the good comments. Could you&lt;br/&gt;
please verify that the changes look correct to you, and then close this issue? Thanks!&lt;/p&gt;</comment>
                            <comment id="12442323" author="james.f.adams" created="Sat, 14 Oct 2006 19:33:30 +0100"  >&lt;p&gt;I found through some additional testing that the previous patch has a problem for some parameter types.   I have a re-worked  patch that I will attach that resolves this.&lt;/p&gt;</comment>
                            <comment id="12442325" author="james.f.adams" created="Sat, 14 Oct 2006 19:38:44 +0100"  >&lt;p&gt;The lookahead in the grammar of my previous patches did not work for some parameter types.  I have reworked the lookahead to use syntactic lookahead similar to that used elsewhere in the grammar.  I have included an additional test that would have failed with the previous patch.  I have run the lang/functions.sql and lang/procedure.java using the various frameworks without error.&lt;/p&gt;</comment>
                            <comment id="12442351" author="bryanpendleton" created="Sun, 15 Oct 2006 01:30:31 +0100"  >&lt;p&gt;Thanks for doing the additional testing, James, and for the updated patch.&lt;/p&gt;

&lt;p&gt;I verified that the new test cases fail without your change to the grammar,&lt;br/&gt;
and succeed with your change to the grammar. My derbyall run was 100% clean,&lt;br/&gt;
so I committed Derby183-patch4.txt to subversion as revision 464078.&lt;/p&gt;</comment>
                            <comment id="12551271" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:39 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12342512" name="Derby183.patch.txt" size="2053" author="james.f.adams" created="Sun, 8 Oct 2006 05:00:48 +0100"/>
                            <attachment id="12342661" name="Derby183.patch2.txt" size="7390" author="james.f.adams" created="Tue, 10 Oct 2006 15:11:48 +0100"/>
                            <attachment id="12342860" name="Derby183.patch3.txt" size="10852" author="james.f.adams" created="Fri, 13 Oct 2006 09:21:59 +0100"/>
                            <attachment id="12342938" name="Derby183.patch4.txt" size="5128" author="james.f.adams" created="Sat, 14 Oct 2006 19:38:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 8 Oct 2006 04:00:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21825</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>