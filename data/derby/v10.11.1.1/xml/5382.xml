<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5382/DERBY-5382.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5382] Convert existing harness recovery tests to JUnit tests</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5382</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Existing harness recovery tests need to be converted to JUnit tests. A framework as designed in Derby-4249 can be used for this purpose.&lt;/p&gt;

&lt;p&gt;Tests to be converted:&lt;br/&gt;
a) oc_rec1&lt;br/&gt;
b) oc_rec2&lt;br/&gt;
c) oc_rec3&lt;br/&gt;
d) oc_rec4&lt;/p&gt;

&lt;p&gt;These recovery tests run in coordination. The test oc_rec1 creates a table, inserts and then deletes rows from it and commit it which is followed by a series of insertion of rows in the existing table in oc_rec2, oc_rec3 and oc_rec4. The tests oc_rec2 and oc_3 also create table and insert, delete, compress rows in it and leave the table thus produced in committed or uncommitted state which is tested by the next corresponding test (oc_rec3 for oc_rec2, oc_rec4 for oc_rec3) for recovery.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12518813">DERBY-5382</key>
            <summary>Convert existing harness recovery tests to JUnit tests</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="siddharthsrivastava">Siddharth Srivastava</assignee>
                                    <reporter username="siddharthsrivastava">Siddharth Srivastava</reporter>
                        <labels>
                    </labels>
                <created>Sun, 14 Aug 2011 09:01:04 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:48 +0100</updated>
                            <resolved>Tue, 28 Feb 2012 20:08:15 +0000</resolved>
                                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13088763" author="siddharthsrivastava" created="Mon, 22 Aug 2011 16:27:28 +0100"  >&lt;p&gt;Attached is the patch for this issue.  Please review it.&lt;/p&gt;</comment>
                            <comment id="13088776" author="siddharthsrivastava" created="Mon, 22 Aug 2011 16:49:47 +0100"  >&lt;p&gt;Hi&lt;/p&gt;

&lt;p&gt;Just wanted to share some observation while writing this test (which went automagically)&lt;/p&gt;

&lt;p&gt;I receoved the following errors:&lt;/p&gt;

&lt;p&gt;1)  A lock could not be obtained within the time requested &lt;br/&gt;
I see that it was resolved in Derby-4273. But the consistently nagged me throughout the day. As a hack I used Thread.interrupted() while committing changes.&lt;br/&gt;
Problem ceased to exist after this, but later when I rebuilt the same code without Thread.interrupted(), all went fine.&lt;/p&gt;

&lt;p&gt;2)  SQLNonTransientConnectionException: No current connection.. again after dealing with it for hours (tried System.gc() and everything else), it also went automagically.&lt;br/&gt;
If I remember correctly, there was a Jira issue related to this, but it also mentioned somewhere that this error is not reproducible frequently.&lt;/p&gt;

&lt;p&gt;3) This test initially failed when I used &lt;br/&gt;
String tableName = &quot;RecTest&quot;, but when I used String tableName = &quot;RECTEST1&quot;, the error again went away. &lt;br/&gt;
I guess it is something like the discussion in Derby-437.&lt;br/&gt;
May be a reference in the doc(may be a footer explaining non delimited and delimited identifiers), would be good.&lt;/p&gt;

&lt;p&gt;Can anyone familiar with these errors, help me in understanding them better(or reproducing them), so that I can get some insight that it was due to some system issues(I have been facing strange file permission issues within my local derby repo) or some fault in the patch.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;


</comment>
                            <comment id="13197977" author="kmarsden" created="Wed, 1 Feb 2012 17:31:30 +0000"  >&lt;p&gt;Marking patch available. It looks like Siddharth submitted a patch some time ago that needs to get on the radar.&lt;/p&gt;</comment>
                            <comment id="13208531" author="myrna" created="Wed, 15 Feb 2012 15:12:39 +0000"  >&lt;p&gt;I tried the patch, and I&apos;ll have a closer look too, but from first glance I have the following comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The old test files were removed, but they&apos;re still referenced in the functionTests.suites.storerecovery.runall file.&lt;/li&gt;
	&lt;li&gt;the masters for the original tests were not removed&lt;/li&gt;
	&lt;li&gt;When I ran the test, I got an error - perhaps the conversion has gone out of sync with the test. I&apos;ll investigate, unless Siddarth is still actively working on this?&lt;br/&gt;
This is the error I saw:&lt;br/&gt;
------------------&lt;br/&gt;
1) testOCRecovery_1(org.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest)&lt;br/&gt;
           junit.framework.AssertionFailedError: expectedExitValue:0 does not match exitValue:1&lt;br/&gt;
expected output strings:&lt;br/&gt;
        &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;OK (1 test)&lt;br/&gt;
 actual output:&amp;lt;STDOUT&amp;gt; &amp;lt;END STDOUT&amp;gt;&lt;br/&gt;
&amp;lt;STDERR&amp;gt;Class not found &quot;org.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest.launchOCRecovery_2&quot;&lt;br/&gt;
&amp;lt;END STDERR&amp;gt;&lt;br/&gt;
 expected:&amp;lt;0&amp;gt; but was:&amp;lt;1&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:513)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.assertLaunchedJUnitTestMethod(BaseTestCase.java:838)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.store.OCRecoveryTest.testOCRecovery_1(OCRecoveryTest.java:78)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13212956" author="myrna" created="Tue, 21 Feb 2012 21:14:05 +0000"  >&lt;p&gt;I&apos;ve looked at that failure a bit closer, and realized I was picking up an old version (3.8.1) of junit.&lt;br/&gt;
The test passes with junit 3.8.2, (which allows for the -m option to run fixture/methods).&lt;/p&gt;

&lt;p&gt;I think the test conversion is good as it is.&lt;/p&gt;

&lt;p&gt;I ran the test by itself a couple of times, and in the store suite, and I did not see any of the problems Siddarth mentioned, so I am assuming they&apos;re related to environment issues, or issues that were current at the time the original patch was created.&lt;/p&gt;

&lt;p&gt;I did remove the reference from storetests.runall, deleted the master, and made a few minor changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;using setAutoCommit() and createStatement() instead of creating a connection first.&lt;br/&gt;
This was already done in the createAndLoadTable() method, but not in the launchOCRecovery_* methods, and I didn&apos;t see a reason for not doing this elsewhere. &lt;/li&gt;
	&lt;li&gt;remove the System.out.println(&quot;in test 1&quot;) which seemed to me a left-over from a debugging action.&lt;/li&gt;
	&lt;li&gt;broke up a few lines that went &amp;gt; 80 characters.&lt;br/&gt;
  (the coding practice for derby is comments not to go longer, but it doesn&apos;t hurt for code&lt;br/&gt;
   to follow the same rule).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I committed the patch (with my modifications) with revision 1292027.&lt;/p&gt;

&lt;p&gt;Thank you Siddarth!&lt;/p&gt;</comment>
                            <comment id="13213145" author="mikem" created="Wed, 22 Feb 2012 00:31:13 +0000"  >&lt;p&gt;I am having a hard time following the logic in the test, not many comments.  This test needs a non clean shutdown to test what it is trying to exercise.  It did this simply by exiting the process without calling clean shutdown.  &lt;/p&gt;

&lt;p&gt;Does the following result in a clean shutdown or a &quot;dirty&quot; one:&lt;br/&gt;
callCompress(tableName, true, true, true, true);&lt;br/&gt;
TestConfiguration.getCurrent().shutdownDatabase();&lt;br/&gt;
st.close();&lt;/p&gt;</comment>
                            <comment id="13213948" author="myrna" created="Wed, 22 Feb 2012 20:05:58 +0000"  >&lt;p&gt;The test isn&apos;t doing the same as the original - thanks for noticing, Mike.&lt;/p&gt;</comment>
                            <comment id="13215010" author="myrna" created="Thu, 23 Feb 2012 20:20:28 +0000"  >&lt;p&gt;I&apos;m uploading a patch in which the shutdowns have been removed, and the first step is also put into a launched method.&lt;/p&gt;</comment>
                            <comment id="13215049" author="mikem" created="Thu, 23 Feb 2012 21:04:15 +0000"  >&lt;p&gt;comments on reviewing latest patch.  This change is definitely an improvement, but still does not match what the original test&lt;br/&gt;
was doing.   The best case would be if this test created a new database in the first forked call and did the work below, then the&lt;br/&gt;
exact work would be tested. But not sure if current harness can do that.  I would suggest first making the changes below and &lt;br/&gt;
checking in, then work on executing in a separate db.  Maybe others can help with the separate db issue.  If you don&apos;t want to deal&lt;br/&gt;
with comment issues, let me know and I can add some after you check in - i don&apos;t want to conflict at this point.&lt;/p&gt;

&lt;p&gt;In the original test the following actions are performed in oc_rec1, and then a hard (&quot;non clean shutdown&quot;) is performed.&lt;br/&gt;
        beginTest(conn, test_name);&lt;br/&gt;
        createAndLoadTable(conn, true, table_name, 5000, 0);&lt;br/&gt;
        executeQuery(conn, &quot;delete from &quot; + table_name, true);&lt;br/&gt;
        callCompress(conn, &quot;APP&quot;, table_name, true, true, true, true);&lt;br/&gt;
        endTest(conn, test_name);&lt;/p&gt;

&lt;p&gt;The important part of this is that the create, delete, and compress log records will all be processed by restart recovery when oc_rec2&lt;br/&gt;
is executed.  And also of interest is all the work to create the database also is in the log of unclean shutdown, this also presents&lt;br/&gt;
interesting code paths for restart recovery.&lt;/p&gt;

&lt;p&gt;In the current patch the createAndLoadTable(tableName, true, 5000, 0) is done and then a clean shutdown.  &lt;/p&gt;

&lt;p&gt;If you can&apos;t figure out a way to have a new database created in the forked process, then please log an issue for adding harness support&lt;br/&gt;
for that, as it would be good to be able to test restart recovery on a newly created db.&lt;/p&gt;

&lt;p&gt;As a good incremental work around for your test I would move the createAndLoadTable(tableName, true, 5000, 0); call from &lt;br/&gt;
testOCRecovery_1() to launchOCRecovery_1().  This still will not result in the same codepaths tested, but it will be closer.  Maybe add&lt;br/&gt;
in a extra create table of some dummy table, to make the session not read only.  At least&lt;br/&gt;
the clean shutdown with no work will lay down a checkpoint and make it less likely that dependent on previous tests that a checkpoint&lt;br/&gt;
might happen during one of the phases and then we would skip the restart recovery work that we are trying to test.&lt;/p&gt;

&lt;p&gt;launchOCRecovery_2() is missing a few comments that are in oc_rec2()&lt;/p&gt;

&lt;p&gt;comment in launchOCRecovery_3() is wrong (it was wrong in orignal also)&lt;br/&gt;
// setup to test redo recovery on:&lt;br/&gt;
// add more rows, delete rows, compress, add more, no commit&lt;/p&gt;

&lt;p&gt;It should be:&lt;br/&gt;
// setup to test redo recovery on:&lt;br/&gt;
// add more rows, delete rows, commit,  compress, no commit&lt;/p&gt;

&lt;p&gt;launchOCRecovery_4 is missing comments from oc_rec4&lt;/p&gt;
</comment>
                            <comment id="13215204" author="myrna" created="Thu, 23 Feb 2012 23:37:55 +0000"  >&lt;p&gt;I adjusted the test as per Mike&apos;s comments - so now all steps are in forkable methods except the creation of the database.&lt;br/&gt;
I committed these changes with revision 1293028 with the following comment:&lt;br/&gt;
  follow up patch, which&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removes shutdowns which were preventing any recovery to happen&lt;/li&gt;
	&lt;li&gt;makes the first step a separate forkable method&lt;/li&gt;
	&lt;li&gt;adds some comments&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note, that the comments in oc_rec2 didn&apos;t exactly reflect the steps, it said:&lt;br/&gt;
 &apos;create table, delete rows, compress, add rows, commit&apos; but there were no rows getting added after the compress. So I removed the &apos;add rows&apos; from the comment in the new test.&lt;/p&gt;</comment>
                            <comment id="13218183" author="myrna" created="Tue, 28 Feb 2012 13:53:35 +0000"  >&lt;p&gt;Attaching a new patch which tries to address creating the database within the first forked test, to more closely resemble the original test case.&lt;/p&gt;

&lt;p&gt;Because we&apos;re forking a new process, the only way I could think of doing this is by making a change to the default TestConfiguration to check for a system property specifying the database.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13218217" author="kristwaa" created="Tue, 28 Feb 2012 14:23:20 +0000"  >&lt;p&gt;I&apos;m not sure it&apos;s any better, but an alternative is to use a change database decorator in the forked process. I&apos;m doing this in the &quot;modernized&quot; compatibility test, but it requires a little more infrastructure and you still have to pass the database name as a system property.&lt;/p&gt;

&lt;p&gt;If you commit the patch, I&apos;ll see if it works well in my scenario too (I&apos;m doing some more configuration so I&apos;m not sure if it counts as a default TestConfiguration yet).&lt;br/&gt;
To me your approach seems better for simple test cases like those being run here, since you don&apos;t have a suite method. It appears to me the -m option is incompatible with a lot of tests, but then I don&apos;t know how it&apos;s implemented (i.e., does it still run the suite method, where many tests get their setup from, and filter out the unwanted test cases afterwards?)&lt;/p&gt;</comment>
                            <comment id="13218551" author="myrna" created="Tue, 28 Feb 2012 20:07:27 +0000"  >&lt;p&gt;Thank you Kristian for reviewing the patch.&lt;/p&gt;

&lt;p&gt;I committed the change with revision 1294805&lt;br/&gt;
This was the commit comment:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5382&quot; title=&quot;Convert existing harness recovery tests to JUnit tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5382&quot;&gt;&lt;del&gt;DERBY-5382&lt;/del&gt;&lt;/a&gt;; Convert existing harness recovery tests to JUnit tests&lt;br/&gt;
  Adjusting test to create the database in the first launched method.&lt;br/&gt;
  Modifying TestConfiguration to this end to look for a property&lt;br/&gt;
    &apos;derby.tests.defaultDatabaseName&apos;&lt;br/&gt;
  which can get passed on in a new BaseTestCase method&lt;br/&gt;
  ((assertLaunchedJUnitTestMethod(String, String)).&lt;/p&gt;

&lt;p&gt;I wasn&apos;t familiar with the -m option either, that was part of Siddharth&apos;s original patch. It was new with junit 3.8.2.&lt;br/&gt;
I found it hard to find information about this functionality, so I ran some experiments, and it seems to me the -m option does &lt;b&gt;not&lt;/b&gt; run the suite method, only the constructor.&lt;/p&gt;</comment>
                            <comment id="13218554" author="myrna" created="Tue, 28 Feb 2012 20:08:15 +0000"  >&lt;p&gt;I think this concludes the work on this issue.&lt;/p&gt;</comment>
                            <comment id="13219121" author="kristwaa" created="Wed, 29 Feb 2012 11:42:25 +0000"  >&lt;p&gt;Just for the record, I don&apos;t think the -m option is compatible with JUnit 4. No big deal, it may be years before we start using JUnit 4.&lt;/p&gt;</comment>
                            <comment id="13685362" author="knutanders" created="Mon, 17 Jun 2013 10:19:48 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12515800" name="DERBY-5382.diff" size="3223" author="myrna" created="Thu, 23 Feb 2012 20:20:27 +0000"/>
                            <attachment id="12516328" name="DERBY-5382_2.diff" size="5321" author="myrna" created="Tue, 28 Feb 2012 13:53:35 +0000"/>
                            <attachment id="12491216" name="d5382.patch" size="31897" author="siddharthsrivastava" created="Mon, 22 Aug 2011 16:27:27 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Feb 2012 17:31:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31619</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0cun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35900</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>