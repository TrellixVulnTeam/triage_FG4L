<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4187/DERBY-4187.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4187] Convert altertable.sql to JUnit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4187</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Converting altertable.sql harness test to JUnit&lt;/p&gt;</description>
                <environment></environment>
        <key id="12423771">DERBY-4187</key>
            <summary>Convert altertable.sql to JUnit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eranda">Eranda Sooriyabandara</assignee>
                                    <reporter username="eranda">Eranda Sooriyabandara</reporter>
                        <labels>
                    </labels>
                <created>Sat, 25 Apr 2009 13:23:32 +0100</created>
                <updated>Fri, 3 Jul 2009 23:48:15 +0100</updated>
                            <resolved>Fri, 3 Jul 2009 22:51:09 +0100</resolved>
                                    <version>10.4.2.1</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="1749900">486h 5m</timeoriginalestimate>
                            <timeestimate seconds="1749900">486h 5m</timeestimate>
                                        <comments>
                            <comment id="12702873" author="eranda" created="Sun, 26 Apr 2009 10:30:31 +0100"  >&lt;p&gt;I convert altertable.sql to AlterTable.junit under Bryan Pendletons&lt;br/&gt;
supervision and I attach both AlterTable.java and AlterTable.diff files&lt;br/&gt;
here.&lt;/p&gt;</comment>
                            <comment id="12702875" author="knutanders" created="Sun, 26 Apr 2009 12:46:03 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;I haven&apos;t performed a complete review of your patch, but I have some high-level comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The new file needs an Apache license header. &lt;a href=&quot;http://www.apache.org/legal/src-headers.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/legal/src-headers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The AlterTable class is in package stack, whereas it should be in package org.apache.derbyTesting.functionTests.tests.lang&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;By convention, we normally add a Test suffix to the class names when we write JUnit tests, so the class name of the new test would be AlterTableTest&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There are some parts of the test that haven&apos;t been converted, marked with &lt;span class=&quot;error&quot;&gt;&amp;#91;**:: UNCONVERTED ::**&amp;#93;&lt;/span&gt;. I think we should try to find a way to convert those parts before we disable the old test&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the old test used to set some properties, see derbyTesting/functionTests/tests/lang/altertable_derby.properties&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;altertable.sql is removed, but the old regression test suite still attempts to run it, so it should be removed from derbyTesting/functionTests/suites/derbylang.runall too. Also, the files functionTests/master/altertable.out and functionTests/tests/lang/altertable_derby.properties should be removed when the test is removed&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12702939" author="eranda" created="Sun, 26 Apr 2009 22:30:31 +0100"  >&lt;p&gt; Hi knut,&lt;br/&gt;
Thanks for corrections on making a patch.&lt;br/&gt;
As a beginning I did,&lt;/p&gt;

&lt;p&gt;1.AlterTable.java --&amp;gt;AlterTableTest.java&lt;br/&gt;
2. add Apache license header to the java file&lt;br/&gt;
3.remove derbyTesting/functionTests/tests/lang/altertable_derby.properties&lt;br/&gt;
4.altertable.sql is removed from the old regression test suite&lt;/p&gt;

&lt;p&gt;Can you please make a comment on how it could be done unconverted parts&lt;br/&gt;
converted.&lt;/p&gt;</comment>
                            <comment id="12703089" author="knutanders" created="Mon, 27 Apr 2009 12:58:52 +0100"  >&lt;p&gt;To convert the unconverted parts, I think you&apos;ll need to find some way to do the same thing as the IJ commands via JDBC, possibly using DatabaseMetaData.&lt;/p&gt;

&lt;p&gt;For instance this code&lt;/p&gt;

&lt;p&gt;+        /*&lt;span class=&quot;error&quot;&gt;&amp;#91;**:: UNCONVERTED ::**&amp;#93;&lt;/span&gt;  describe renc_vw_1&lt;/p&gt;

&lt;p&gt;+        &lt;/p&gt;

&lt;p&gt;+        &lt;span class=&quot;error&quot;&gt;&amp;#91;**:: UNCONVERTED ::**&amp;#93;&lt;/span&gt; COLUMN_NAME         |TYPE_NAME|DEC&amp;amp;|NUM&amp;amp;|COLUM&amp;amp;|COLUMN_DEF|CHAR_OCTE&amp;amp;|IS_NULL&amp;amp;&lt;/p&gt;

&lt;p&gt;+------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;+V1                  |VARCHAR  |NULL|NULL|10    |NULL      |20        |YES&lt;/p&gt;

&lt;p&gt;+V2                  |DOUBLE   |NULL|2   |52    |NULL      |NULL      |YES&lt;/p&gt;

&lt;p&gt;+&lt;/p&gt;

&lt;p&gt;+        */&lt;/p&gt;


&lt;p&gt;could perhaps be replaced with a call to DatabaseMetaData.getColumns() and verify that the table has the expected columns.&lt;/p&gt;

&lt;p&gt;I guess that those looking like this could be removed:&lt;/p&gt;

&lt;p&gt;+        &lt;span class=&quot;error&quot;&gt;&amp;#91;**:: UNCONVERTED ::**&amp;#93;&lt;/span&gt; Issue the &apos;help&apos; command for general information on IJ command syntax.&lt;/p&gt;

&lt;p&gt;+Any unrecognized commands are treated as potential SQL commands and executed directly.&lt;/p&gt;

&lt;p&gt;+Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.&lt;/p&gt;

&lt;p&gt;+&lt;/p&gt;

&lt;p&gt;+        */&lt;/p&gt;</comment>
                            <comment id="12704813" author="eranda" created="Thu, 30 Apr 2009 23:18:33 +0100"  >&lt;p&gt;Hi Knut,&lt;br/&gt;
Instead of having one GIANT test in AlterTableTest.java, if&lt;br/&gt;
we had about 5-6 individual test cases, as in&lt;/p&gt;

&lt;p&gt; testAddColumn()&lt;br/&gt;
 testAddConstraint()&lt;br/&gt;
 testDropColumn()&lt;br/&gt;
 testRenameColumn()&lt;br/&gt;
 testAlterIdentityColumn()&lt;/p&gt;

&lt;p&gt;and so forth will be better. If we separate them in to individual test&lt;br/&gt;
how can we&lt;br/&gt;
identify whether which part of code is in which test.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12704843" author="eranda" created="Fri, 1 May 2009 00:22:32 +0100"  >&lt;p&gt;Hi Knut,&lt;br/&gt;
I replace unconverted cord as you say by&lt;br/&gt;
DatabaseMetaData.getColumns(). Though it didn&apos;t show compile errors(on&lt;br/&gt;
DatabaseMetaData.getColumns()) in the the netbeans IDE when compile&lt;br/&gt;
using ant it shows 21 compile errors in it.&lt;/p&gt;

&lt;p&gt;As I search for DatabaseMetadata.getColumns() method it shows that,&lt;br/&gt;
-public ResultSet getColumns(String catalog,String&lt;br/&gt;
schemaPattern,String tableNamePattern,String columnNamePattern) throws&lt;br/&gt;
-SQLException&lt;br/&gt;
has 4 parameters and we did not use them. Can it be the causing of error?&lt;/p&gt;

&lt;p&gt;Here I attach the changed code.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12704852" author="bryanpendleton" created="Fri, 1 May 2009 00:46:11 +0100"  >&lt;p&gt;Hi Eranda, thanks for the updated test.&lt;/p&gt;

&lt;p&gt;Here&apos;s the section of section of altertable.out where the conversion program was having&lt;br/&gt;
problems, because it doesn&apos;t know how to convert the &quot;describe&quot; and &quot;show indexes&quot;&lt;br/&gt;
statements.&lt;/p&gt;

&lt;p&gt;In this code, I think that the &quot;describe&quot; and &quot;show indexes&quot; statements were present only&lt;br/&gt;
in order to show that the view and the index were not changed by the statements which&lt;br/&gt;
tried to rename the column in the view or the index.&lt;/p&gt;

&lt;p&gt;I think that we can just remove these unconverted sections; it is sufficient just to test&lt;br/&gt;
for the syntax error on the RENAME statements which reference the view and the index.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; rename column renc_vw_1.v2 to v3;&lt;br/&gt;
ERROR 42Y62: &apos;RENAME COLUMN&apos; is not allowed on &apos;&quot;APP&quot;.&quot;RENC_VW_1&quot;&apos; because it is a view.&lt;br/&gt;
ij&amp;gt; describe renc_vw_1;&lt;br/&gt;
COLUMN_NAME         |TYPE_NAME|DEC&amp;amp;|NUM&amp;amp;|COLUM&amp;amp;|COLUMN_DEF|CHAR_OCTE&amp;amp;|IS_NULL&amp;amp;&lt;br/&gt;
------------------------------------------------------------------------------&lt;br/&gt;
V1                  |VARCHAR  |NULL|NULL|10    |NULL      |20        |YES&lt;br/&gt;
V2                  |DOUBLE   |NULL|2   |52    |NULL      |NULL      |YES&lt;br/&gt;
ij&amp;gt; &amp;#8211; attempt to rename a column in an index, should fail:&lt;br/&gt;
create index renc_idx_1 on renc_1 (c, d);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; show indexes from renc_1;&lt;br/&gt;
TABLE_NAME          |COLUMN_NAME         |NON_U&amp;amp;|TYPE|ASC&amp;amp;|CARDINA&amp;amp;|PAGES&lt;br/&gt;
----------------------------------------------------------------------------&lt;br/&gt;
RENC_1              |C                   |true  |3   |A   |NULL    |NULL&lt;br/&gt;
RENC_1              |D                   |true  |3   |A   |NULL    |NULL&lt;br/&gt;
ij&amp;gt; rename column renc_idx_1.d to d_new;&lt;br/&gt;
ERROR 42Y55: &apos;RENAME COLUMN&apos; cannot be performed on &apos;RENC_IDX_1&apos; because it does not exist.&lt;br/&gt;
ij&amp;gt; show indexes from renc_1;&lt;br/&gt;
TABLE_NAME          |COLUMN_NAME         |NON_U&amp;amp;|TYPE|ASC&amp;amp;|CARDINA&amp;amp;|PAGES&lt;br/&gt;
----------------------------------------------------------------------------&lt;br/&gt;
RENC_1              |C                   |true  |3   |A   |NULL    |NULL&lt;br/&gt;
RENC_1              |D                   |true  |3   |A   |NULL    |NULL&lt;/p&gt;</comment>
                            <comment id="12705334" author="eranda" created="Sat, 2 May 2009 22:19:47 +0100"  >&lt;p&gt;Hi Bryan/Knut,&lt;br/&gt;
I tested some of the function include in AlterTableTest.java after&lt;br/&gt;
remove unconverted cords.&lt;br/&gt;
Here are my testings,&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:Movies;create=true&apos;;&lt;br/&gt;
ij&amp;gt; CREATE TABLE Persons ( P_Id int, LastName varchar(255), FirstName&lt;br/&gt;
varchar(255), Address varchar(&lt;br/&gt;
255), City varchar(255) );&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; rename table Persons to Studentdetails;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; ALTER TABLE Studentdetails DROP LastName;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select *from Studentdetails;&lt;br/&gt;
P_ID       |FIRSTNAME        |ADDRESS        |CITY&lt;br/&gt;
----------------------------------------------------------------------------------------------------&lt;br/&gt;
0 rows selected&lt;br/&gt;
ij&amp;gt; ALTER TABLE Studentdetails ADD COLUMN LastName varchar(255);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select *from Studentdetails;&lt;br/&gt;
P_ID       |FIRSTNAME    |ADDRESS   |CITY       |L ASTNAME&lt;br/&gt;
----------------------------------------------------------------------------------------------------&lt;br/&gt;
0 rows selected&lt;br/&gt;
ij&amp;gt; ALTER TABLE Studentdetails CHANGE address address1 varchar(255);&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;CHANGE&quot; at line 1, column 28.&lt;br/&gt;
Issue the &apos;help&apos; command for general information on IJ command syntax.&lt;br/&gt;
Any unrecognized commands are treated as potential SQL commands and&lt;br/&gt;
executed directly.&lt;br/&gt;
Consult your DBMS server reference documentation for details of the&lt;br/&gt;
SQL syntax supported by your ser&lt;br/&gt;
ver.&lt;br/&gt;
After testing I can say that, in alter table&lt;br/&gt;
	Functions like Rename table, Drop column, Add column, Add constraint,&lt;br/&gt;
Drop constraint are working properly but &#8220;Change Column name&#8221; does&lt;br/&gt;
not.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12705370" author="bryanpendleton" created="Sun, 3 May 2009 03:37:28 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;That is correct. To rename a column you have to use the RENAME COLUMN statement:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rrefsqljrenamecolumnstatement.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rrefsqljrenamecolumnstatement.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So you could do:&lt;br/&gt;
RENAME COLUMN Studentdetails.address to address1;&lt;/p&gt;</comment>
                            <comment id="12705428" author="eranda" created="Sun, 3 May 2009 18:35:31 +0100"  >&lt;p&gt;hi Bryan,&lt;/p&gt;

&lt;p&gt;I attach the patch here.&lt;br/&gt;
Here the message I get as the out put while  I run the&lt;br/&gt;
AlterTableTest.java with 2 failures.&lt;/p&gt;

&lt;p&gt;D:\Repositories\trunk&amp;gt;java junit.textui.TestRunner&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.&lt;br/&gt;
AlterTableTest&lt;br/&gt;
.F.F&lt;br/&gt;
Time: 11.952&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.A&lt;br/&gt;
ssertionFailedError: Expected warning but found none&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:77)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
2) test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.A&lt;br/&gt;
ssertionFailedError: Expected error(s) &apos; X0X95&apos; but no error was thrown.&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java&lt;br/&gt;
:976)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java&lt;br/&gt;
:1002)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:206)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 2,  Failures: 2,  Errors: 0&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12705467" author="bryanpendleton" created="Mon, 4 May 2009 03:23:28 +0100"  >&lt;p&gt;Hi Eranda, thank for the updated AlterTableTest patch.&lt;/p&gt;

&lt;p&gt;It seems that you are making very good progress.&lt;/p&gt;

&lt;p&gt;I took your patch, and I made some changes to AlterTableTest.java,&lt;br/&gt;
and am attaching the version that I modified.&lt;/p&gt;

&lt;p&gt;There are going to be a number of small aspects to consider.&lt;/p&gt;

&lt;p&gt;Perhaps you can have a look at the AlterTableTest.java that I attached,&lt;br/&gt;
and diff it against yours, and see some of the changes that I made?&lt;/p&gt;

&lt;p&gt;Some changes are because the automatic conversion program does&lt;br/&gt;
not get everything exactly right, and so we have to fix up the test program&lt;br/&gt;
slightly, such as when it gets the column names in the result set wrong.&lt;/p&gt;

&lt;p&gt;Some other changes are because there are behavior differences between&lt;br/&gt;
embedded mode and client/server mode, and we&apos;ll have to study those&lt;br/&gt;
each in detail to understand them (such as the case where the ALTER TABLE&lt;br/&gt;
is supposed to behave differently when a cursor is open on the table).&lt;/p&gt;

&lt;p&gt;Please have a look at the revised AlterTableTest that I attached and let me&lt;br/&gt;
know your reaction to the changes that I made. &lt;/p&gt;

&lt;p&gt;If the changes make sense to you, perhaps you can continue in this mode,&lt;br/&gt;
making additional changes as necessary similar to the ones I made.&lt;/p&gt;
</comment>
                            <comment id="12707490" author="eranda" created="Fri, 8 May 2009 20:47:47 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Here I have the test result for updated AlterTableTest.java&lt;br/&gt;
D:\Repositories\trunk&amp;gt;java junit.textui.TestRunner&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.&lt;br/&gt;
AlterTableTest&lt;br/&gt;
.F.F&lt;br/&gt;
Time: 20.083&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.C&lt;br/&gt;
omparisonFailure: Column names do not match: expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;amp;&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;TYPE&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertColumnNames(JDBC.java:681)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:2460)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
2) test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.A&lt;br/&gt;
ssertionFailedError: Unexpected column count: expected:&amp;lt;2&amp;gt; but was:&amp;lt;1&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertColumnNames(JDBC.java:676)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:282)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 2,  Failures: 2,  Errors: 0&lt;/p&gt;

&lt;p&gt;As it shows that the 1st fail occurs in 2460th row. So I look in to&lt;br/&gt;
the code &amp;amp; in the altertable.out I found that there are two coloumns&lt;br/&gt;
with the same name,&lt;br/&gt;
CONSTRAINTID |TABLEID |CONSTRAINTNAME |&amp;amp;|SCHEMAID |&amp;amp;|REFERENCEC&amp;amp;&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
 xxxxFILTERED-UUIDxxxx|xxxxFILTERED-UUIDxxxx|ATDC_CONSTRAINT_1&lt;br/&gt;
 &amp;amp; and &amp;amp;.&lt;br/&gt;
Is it possible to have two columns that have same name in single table?&lt;br/&gt;
What is this Error says that, expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;amp;&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;TYPE&amp;#93;&lt;/span&gt;&amp;gt; How can&lt;br/&gt;
I get through that?&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12707544" author="bryanpendleton" created="Fri, 8 May 2009 23:17:36 +0100"  >&lt;p&gt;&amp;gt; What is this Error says that, expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;amp;&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;TYPE&amp;#93;&lt;/span&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Hi Eranda. The &apos;&amp;amp;&apos; symbol is actually NOT the name of the column. Rather, it&lt;br/&gt;
is a result of running the old test in &quot;ij&quot;. The &quot;ij&quot; tool has some special rules about&lt;br/&gt;
column names, and if the column name is a reserved word, &quot;ij&quot; prints &quot;&amp;amp;&quot; instead&lt;br/&gt;
of printing the column name. And if the column name is long, ij truncates the column&lt;br/&gt;
name and prints &quot;&amp;amp;&quot; at the point where it did the truncation.&lt;/p&gt;

&lt;p&gt;You can see the actual column names in this case by looking in the Derby&lt;br/&gt;
reference manual. Here, we can see in altertable.out that we have just done a&lt;br/&gt;
&apos;select * from sys.sysconstraints&apos;, so we just need to look up SYSCONSTRAINTS&lt;br/&gt;
in the reference manual at:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.5/ref/rrefsistabs23241.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.5/ref/rrefsistabs23241.html&lt;/a&gt;&lt;br/&gt;
and there you can see that the actual column names are:&lt;br/&gt;
CONSTRAINTID, TABLEID, CONSTRAINTNAME, TYPE, SCHEMAID, STATE, REFERENCECOUNT&lt;/p&gt;

&lt;p&gt;So to fix this, all you need to do is to change the ALterTableTest.java at line 2460 to&lt;br/&gt;
use the correct column names instead of the names with the &apos;&amp;amp;&apos; in them.&lt;/p&gt;

&lt;p&gt;There will be a number of places in AlterTableTest.java where you have to make this&lt;br/&gt;
change, but it&apos;s pretty mechanical, so hopefully once you see how to make the change&lt;br/&gt;
in one location, you can make the similar change throughout the test program.&lt;/p&gt;</comment>
                            <comment id="12707717" author="eranda" created="Sat, 9 May 2009 23:59:47 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Here I post the AlterTableTest.java row 277-290&lt;/p&gt;

&lt;p&gt;// select * prepared statements do see added columns after alter table&lt;/p&gt;

&lt;p&gt;        rs = pSt.executeQuery();&lt;br/&gt;
        expColNames = new String [] &lt;/p&gt;
{&quot;C1&quot;, &quot;C2&quot;}
&lt;p&gt;;&lt;br/&gt;
        JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;        expRS = new String [][]&lt;br/&gt;
        {&lt;br/&gt;
            &lt;/p&gt;
{&quot;1&quot;, null}
&lt;p&gt;,&lt;/p&gt;
            {&quot;2&quot;, null}
&lt;p&gt;        };&lt;/p&gt;

&lt;p&gt;        JDBC.assertFullResultSet(rs, expRS, true);&lt;/p&gt;

&lt;p&gt;It gives a failure ,&lt;/p&gt;

&lt;p&gt;test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.A&lt;br/&gt;
ssertionFailedError: Unexpected column count: expected:&amp;lt;2&amp;gt; but was:&amp;lt;1&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertColumnNames(JDBC.java:676)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:282).&lt;/p&gt;

&lt;p&gt;I change the code to,&lt;/p&gt;

&lt;p&gt;// select * prepared statements do &quot;not&quot; see added columns after alter table&lt;/p&gt;

&lt;p&gt;        rs = pSt.executeQuery();&lt;br/&gt;
        expColNames = new String [] &lt;/p&gt;
{&quot;C1&quot;}
&lt;p&gt;;&lt;br/&gt;
        JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;        expRS = new String [][]&lt;br/&gt;
        {&lt;br/&gt;
            &lt;/p&gt;
{&quot;1&quot;}
&lt;p&gt;,&lt;/p&gt;
            {&quot;2&quot;}
&lt;p&gt;        };&lt;/p&gt;

&lt;p&gt;        JDBC.assertFullResultSet(rs, expRS, true);&lt;/p&gt;

&lt;p&gt;as a testing.&lt;/p&gt;

&lt;p&gt;Then the Failure in that row is not there when I was testing.&lt;br/&gt;
It means that &amp;lt;select * prepared statements do &quot;not&quot; see added columns&lt;br/&gt;
after alter table&amp;gt;&lt;br/&gt;
or another failure in some where else that causing to the result change.&lt;/p&gt;

&lt;p&gt;But some how altertable.out shows two columns,&lt;/p&gt;

&lt;p&gt;ij&amp;gt; &amp;#8211; select * prepared statements do see added columns after alter table&lt;br/&gt;
execute p1;&lt;br/&gt;
C1         |C2&lt;br/&gt;
-----------------------&lt;br/&gt;
1          |NULL&lt;br/&gt;
2          |NULL&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12708054" author="bryanpendleton" created="Mon, 11 May 2009 15:33:39 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;I think this is interesting. I think that perhaps this was a mistake in the current altertable.sql test.&lt;/p&gt;

&lt;p&gt;The sequence of operations is:&lt;br/&gt;
1) Prepare (&quot;select * from t2&quot;)&lt;br/&gt;
2) Execute prepared statement, sees only column c1&lt;br/&gt;
3) alter table t2 add column c2&lt;br/&gt;
4) Execute prepared statement, STILL sees only column c1, though the IJ version saw both c1 AND c2&lt;/p&gt;

&lt;p&gt;I think this is OK behavior. I&apos;m not really sure why there is a behavior difference&lt;br/&gt;
between the IJ-based test and the pure JDBC Junit test, but I think it&apos;s acceptable&lt;br/&gt;
for Derby to have either behavior.&lt;/p&gt;

&lt;p&gt;Does anybody else have a theory as to why we see this behavior change when we&lt;br/&gt;
convert this test from an IJ script to a JUnit JDBC test?&lt;/p&gt;

&lt;p&gt;For the time being, I think you should leave AlterTableTest checking for JUST column c1,&lt;br/&gt;
put a comment into the test indicating that when this test is run in IJ, the behavior is&lt;br/&gt;
different, and let&apos;s move on to resolve any other problems in the test.&lt;/p&gt;</comment>
                            <comment id="12708658" author="eranda" created="Tue, 12 May 2009 23:27:48 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Here I attaching the patch up to now.&lt;/p&gt;</comment>
                            <comment id="12709561" author="eranda" created="Thu, 14 May 2009 21:19:46 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;Thanks for your motivation and I am glad to say that now It&apos;s one&lt;br/&gt;
error on the test. Here&apos;s results displayed.&lt;/p&gt;

&lt;p&gt;D:\Repositories\trunk&amp;gt;java junit.textui.TestRunner&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.&lt;br/&gt;
AlterTableTest&lt;br/&gt;
..F&lt;br/&gt;
Time: 36.547&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) test_altertable(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)junit.framework.A&lt;br/&gt;
ssertionFailedError: Expected error(s) &apos; X0X95&apos; but no error was thrown.&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java&lt;br/&gt;
:976)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(BaseJDBCTestCase.java&lt;br/&gt;
:1002)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.test_altertable(AlterTabl&lt;br/&gt;
eTest.java:2117)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 2,  Failures: 1,  Errors: 0&lt;br/&gt;
Here I am attaching  the patch with this.&lt;/p&gt;</comment>
                            <comment id="12709633" author="bryanpendleton" created="Fri, 15 May 2009 00:41:10 +0100"  >&lt;p&gt;Hi Eranda, thanks for the updated test. I made two additional changes:&lt;br/&gt;
1) Added &quot;if (usingEmbedded())&quot; in front of line 2117, and&lt;br/&gt;
2) Changed JDBC.assertFullResultSet to JDBC.assertUnorderedResultSet on line 3036&lt;br/&gt;
and then the test ran successfully for me!&lt;/p&gt;

&lt;p&gt;I&apos;ve attached AlterTableTest.java with my modifications; can you confirm that&lt;br/&gt;
the test now passes for you?&lt;/p&gt;</comment>
                            <comment id="12709737" author="eranda" created="Fri, 15 May 2009 07:27:46 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Wow it passes,Thanks. Can we move on to break test_altertable() in to&lt;br/&gt;
several methods or&lt;br/&gt;
are there something else remains to do with it?&lt;br/&gt;
Thanks,&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12709831" author="bryanpendleton" created="Fri, 15 May 2009 14:23:03 +0100"  >&lt;p&gt;Yes, I agree: a good next step is to divide the single large test method into several smaller, more-focused&lt;br/&gt;
test methods, and group the tests into the test methods accordingly.&lt;/p&gt;</comment>
                            <comment id="12710936" author="eranda" created="Tue, 19 May 2009 23:59:48 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I make some changes to the code in methods testWithSchema() and&lt;br/&gt;
testDropColumn()&lt;br/&gt;
It removes all the Failures in the code and there are 6 errors still there.&lt;br/&gt;
Here I attach the AlterTableTest.diff with this.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12712432" author="bryanpendleton" created="Sat, 23 May 2009 16:10:10 +0100"  >&lt;p&gt;Hi Eranda, I have attached a revised copy of AlterTableTest.java.&lt;/p&gt;

&lt;p&gt;It contains a workaround for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4244&quot; title=&quot;ALTER TABLE Sanity ASSERT in add column with autocommit off&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4244&quot;&gt;&lt;del&gt;DERBY-4244&lt;/del&gt;&lt;/a&gt;, as well as several other&lt;br/&gt;
adjustments and tweaks to the tests. I think the test should be&lt;br/&gt;
passing now; can you confirm this in your environment?&lt;/p&gt;</comment>
                            <comment id="12712448" author="eranda" created="Sat, 23 May 2009 19:27:48 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Thanks for your fixing. The test is also pass in my environment.&lt;br/&gt;
It&apos;s really great to see a bug free test.&lt;/p&gt;</comment>
                            <comment id="12714765" author="eranda" created="Sat, 30 May 2009 21:41:07 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Here I attach the complete patch for your concern.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12714773" author="bryanpendleton" created="Sat, 30 May 2009 22:31:45 +0100"  >&lt;p&gt;Thanks Eranda! I will have a look at the patch as soon as possible.&lt;/p&gt;</comment>
                            <comment id="12714957" author="bryanpendleton" created="Mon, 1 Jun 2009 04:25:40 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;I reformatted the patch somewhat to fix whitespace problems and&lt;br/&gt;
line length problems, and to make the patch easier to read.&lt;/p&gt;

&lt;p&gt;Can you have a look at the latest patch (&quot;reformatPatch.diff&quot;) and&lt;br/&gt;
let me know if you see any additional whitespace or formatting&lt;br/&gt;
problems that we need to clean up?&lt;/p&gt;</comment>
                            <comment id="12715932" author="bryanpendleton" created="Wed, 3 Jun 2009 15:14:12 +0100"  >&lt;p&gt;Attached patch &apos;removeFromOldSuite.diff&apos; contains several additional&lt;br/&gt;
changes, to remove references to the old lang/altertable.sql from&lt;br/&gt;
README.htm, from suites/derbylang.runall, and to remove altertable.out.&lt;/p&gt;

&lt;p&gt;My derbyall and junitreport runs were otherwise clean.&lt;/p&gt;

&lt;p&gt;I&apos;ll make one more pass over the new test to proof read it and look&lt;br/&gt;
for additional whitespace and formatting cleanup prior to commit.&lt;/p&gt;</comment>
                            <comment id="12723281" author="eranda" created="Tue, 23 Jun 2009 21:09:09 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I complete the comparing altertable.out and AlterTableTest and I found&lt;br/&gt;
some places where they do not match(asserting) but I think most of&lt;br/&gt;
them are doesn&apos;t wanted to test for alter table&lt;br/&gt;
functionalities.Except,&lt;/p&gt;

&lt;p&gt;1)&lt;br/&gt;
in line 1378 and 1390 in testAlterColumn()&lt;br/&gt;
the underlying test was not there. I think they must be there to&lt;br/&gt;
confirm that column was renamed and constraint was there after the&lt;br/&gt;
renaming.&lt;br/&gt;
ij&amp;gt; describe renc_2;&lt;br/&gt;
COLUMN_NAME         |TYPE_NAME|DEC&amp;amp;|NUM&amp;amp;|COLUM&amp;amp;|COLUMN_DEF|CHAR_OCTE&amp;amp;|IS_NULL&amp;amp;&lt;br/&gt;
------------------------------------------------------------------------------&lt;br/&gt;
C2                  |INTEGER  |0   |10  |10    |NULL      |NULL      |NO&lt;br/&gt;
ij&amp;gt; show indexes from renc_2;&lt;br/&gt;
TABLE_NAME          |COLUMN_NAME         |NON_U&amp;amp;|TYPE|ASC&amp;amp;|CARDINA&amp;amp;|PAGES&lt;br/&gt;
----------------------------------------------------------------------------&lt;br/&gt;
RENC_2              |C2                  |false |3   |A   |NULL    |NULL&lt;/p&gt;

&lt;p&gt;If you agree with me I can add the asserting test to the test or we&lt;br/&gt;
can leave it as it is now.&lt;br/&gt;
----------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;2)&lt;br/&gt;
in line 2019 in testDropColumn() it says that&lt;/p&gt;

&lt;p&gt;ij&amp;gt; &amp;#8211; Verify that a GRANTED privilege fails a drop column in RESTRICT mode,&lt;br/&gt;
&amp;#8211; and verify that the privilege is dropped in CASCADE mode:&lt;/p&gt;

&lt;p&gt;but according to the test I found that&lt;/p&gt;

&lt;p&gt;st.executeUpdate(&quot;alter table atdc_10 drop column b restrict&quot;);&lt;/p&gt;

&lt;p&gt;So I change the comment to&lt;br/&gt;
        // Verify that a GRANTED privilege fails a drop column in&lt;br/&gt;
        // CASCADE mode, and verify that the privilege is dropped&lt;br/&gt;
        // in RESTRICT mode:&lt;br/&gt;
But here drop column in cascade mode is not tested. Please make a&lt;br/&gt;
comment that I am correct or not.&lt;br/&gt;
-------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;3)&lt;br/&gt;
At line 2461 and 2465 in testJira3355()&lt;/p&gt;

&lt;p&gt;st.executeUpdate(&quot;create table d3355 ( c1 varchar(10), \&quot;c2\&quot; &quot;&lt;br/&gt;
+&quot;varchar(10), c3 varchar(10))&quot;);&lt;/p&gt;

&lt;p&gt;According to the create table statement there is no column named &quot;C3&quot;&lt;br/&gt;
in the table d3355 but it passes as follows&lt;br/&gt;
st.executeUpdate(&quot;alter table d3355 alter column \&quot;C3\&quot; not null&quot;);&lt;/p&gt;

&lt;p&gt;st.executeUpdate(&quot; create table \&quot;d3355_a\&quot; ( c1 varchar(10), \&quot;c2\&quot; &quot;&lt;br/&gt;
+&quot;varchar(10), c3 varchar(10))&quot;);&lt;/p&gt;

&lt;p&gt;According to the create table statement there is no column named &quot;C3&quot;&lt;br/&gt;
in the table &quot;d3355_a&quot; but it passes as follows&lt;br/&gt;
st.executeUpdate(&quot;alter table \&quot;d3355_a\&quot; alter column \&quot;C3\&quot; not null&quot;);&lt;/p&gt;

&lt;p&gt;This is a contradictory behavior as I think.&lt;br/&gt;
-----------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Also I add some comment according to the altertable.out as I think its&lt;br/&gt;
appropriate.&lt;br/&gt;
I have gone through the full code and I didn&apos;t see any other mistakes&lt;br/&gt;
on the test.&lt;br/&gt;
And here I attach the patch file that I updated.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12723414" author="bryanpendleton" created="Wed, 24 Jun 2009 04:13:54 +0100"  >&lt;p&gt;Hi Eranda, thanks for all the hard work on this test. I think it&apos;s starting to look really good.&lt;/p&gt;

&lt;p&gt;Regarding the points you raised above, here&apos;s my opinion:&lt;br/&gt;
1) I think it would be a good idea to improve the verification of the contents of&lt;br/&gt;
the system catalogs for the column and the constraint, as you suggest. You&lt;br/&gt;
could have a look at the DatabaseMetadata API; I think it should have most of&lt;br/&gt;
what you need:&lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/j2se/1.4.2/docs/api/java/sql/DatabaseMetaData.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.4.2/docs/api/java/sql/DatabaseMetaData.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) The comment is incorrect here. ALTER TABLE DROP COLUMN does not&lt;br/&gt;
care whether or not there are granted privileges on the column, and the presence&lt;br/&gt;
of RESTRICT or CASCADE does not matter in this case. The Derby development&lt;br/&gt;
team discussed this back in 2006 and when I did the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1909&quot; title=&quot;ALTER TABLE DROP COLUMN needs to update GRANTed column privileges&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1909&quot;&gt;&lt;del&gt;DERBY-1909&lt;/del&gt;&lt;/a&gt; work, I should&lt;br/&gt;
have put a better comment in the test. Here&apos;s a pointer to the 2006 discussion:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1489?focusedCommentId=12421187&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12421187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-1489?focusedCommentId=12421187&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12421187&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I think you should change the comment in the test program to something like:&lt;/p&gt;

&lt;p&gt;  // ALTER TABLE DROP COLUMN automatically drops any granted privilege,&lt;br/&gt;
  // regardless of whether RESTRICT or CASCADE was specified. Verify that&lt;br/&gt;
  // the privileges are dropped correctly and that the bitmap is updated:&lt;/p&gt;

&lt;p&gt;3) I think the test is fine here. I think the confusing part is that this part of the&lt;br/&gt;
test is verifying behavior of both lower-case and upper-case column names. If&lt;br/&gt;
a column or table name is not enclosed in quotation marks, then it is&lt;br/&gt;
automatically converted to upper case, so in fact the column C3 &lt;b&gt;does&lt;/b&gt; exist,&lt;br/&gt;
even though the CREATE TABLE statement specified the column name c3&lt;br/&gt;
in lower case; it was automatically converted to upper case, and so this part&lt;br/&gt;
of the test appears to be working correctly to me.&lt;/p&gt;

&lt;p&gt;I think that once we clean up these last few issues, we should be ready to&lt;br/&gt;
perform a final review and commit of this patch. Thanks again for all the hard work!&lt;/p&gt;</comment>
                            <comment id="12724887" author="eranda" created="Sat, 27 Jun 2009 22:23:48 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Here I am attaching the patch.&lt;/p&gt;</comment>
                            <comment id="12725886" author="eranda" created="Wed, 1 Jul 2009 02:23:47 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Here I attach the final patch.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12726077" author="bryanpendleton" created="Wed, 1 Jul 2009 15:07:05 +0100"  >&lt;p&gt;Hi Eranda, thanks for the updated patch. I will have a look this weekend.&lt;/p&gt;</comment>
                            <comment id="12727146" author="bryanpendleton" created="Fri, 3 Jul 2009 22:51:09 +0100"  >&lt;p&gt;The new test looks ready to me. My regression runs were clean. The new test is now run&lt;br/&gt;
as part of the lang._Suite in JUnit, and the old test is removed from derbylang. Everything&lt;br/&gt;
seems complete to me, so I&apos;ve committed this patch to the trunk as revision 791027.&lt;/p&gt;

&lt;p&gt;Eranda, thanks for all the hard work on this conversion. This was a large and complex&lt;br/&gt;
test, and was a tough one to start with; this is very good work. I&apos;m looking forward to&lt;br/&gt;
some more test conversions this summer!&lt;/p&gt;

&lt;p&gt;Please verify that the updated code in the trunk looks correct in your sandbox after&lt;br/&gt;
an &apos;svn update&apos;, and verify that you can build and run the new test from the trunk in&lt;br/&gt;
your environment, and then please mark this issue closed.&lt;/p&gt;</comment>
                            <comment id="12727152" author="eranda" created="Fri, 3 Jul 2009 23:43:50 +0100"  >&lt;p&gt;Hi Bryan,All are perfectly ran on my environment.&lt;br/&gt;
Thanks Bryan, thanks for everything.&lt;br/&gt;
I am closing this issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12406463" name="ASF.LICENSE.NOT.GRANTED--AlterTable.diff" size="181139" author="eranda" created="Sun, 26 Apr 2009 10:30:32 +0100"/>
                            <attachment id="12406464" name="ASF.LICENSE.NOT.GRANTED--AlterTable.java" size="294400" author="eranda" created="Sun, 26 Apr 2009 10:30:32 +0100"/>
                            <attachment id="12412226" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="281812" author="eranda" created="Wed, 1 Jul 2009 02:23:48 +0100"/>
                            <attachment id="12411997" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="153993" author="eranda" created="Sat, 27 Jun 2009 22:23:48 +0100"/>
                            <attachment id="12411567" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="147643" author="eranda" created="Tue, 23 Jun 2009 21:09:10 +0100"/>
                            <attachment id="12409480" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="163433" author="eranda" created="Sat, 30 May 2009 21:41:07 +0100"/>
                            <attachment id="12408530" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="117134" author="eranda" created="Tue, 19 May 2009 23:59:48 +0100"/>
                            <attachment id="12408180" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="123750" author="eranda" created="Thu, 14 May 2009 21:19:47 +0100"/>
                            <attachment id="12407930" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="123963" author="eranda" created="Tue, 12 May 2009 23:27:48 +0100"/>
                            <attachment id="12407117" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="126801" author="eranda" created="Sun, 3 May 2009 18:35:31 +0100"/>
                            <attachment id="12406974" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="132752" author="eranda" created="Fri, 1 May 2009 00:22:32 +0100"/>
                            <attachment id="12406480" name="ASF.LICENSE.NOT.GRANTED--AlterTableTest.diff" size="141108" author="eranda" created="Sun, 26 Apr 2009 22:30:31 +0100"/>
                            <attachment id="12408883" name="AlterTableTest.java" size="112516" author="bryanpendleton" created="Sat, 23 May 2009 16:10:10 +0100"/>
                            <attachment id="12408201" name="AlterTableTest.java" size="119531" author="bryanpendleton" created="Fri, 15 May 2009 00:41:09 +0100"/>
                            <attachment id="12407125" name="AlterTableTest.java" size="119695" author="bryanpendleton" created="Mon, 4 May 2009 03:23:28 +0100"/>
                            <attachment id="12409520" name="reformatPatch.diff" size="145936" author="bryanpendleton" created="Mon, 1 Jun 2009 04:25:40 +0100"/>
                            <attachment id="12409774" name="removeFromOldSuite.diff" size="273770" author="bryanpendleton" created="Wed, 3 Jun 2009 15:14:12 +0100"/>
                            <attachment id="12409775" name="svn_stat.txt" size="571" author="bryanpendleton" created="Wed, 3 Jun 2009 15:14:12 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Apr 2009 11:46:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31156</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0s9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38399</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>