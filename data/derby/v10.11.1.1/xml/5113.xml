<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5113/DERBY-5113.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5113] Intermittent failure in BlobSetMethodsTest on Java 7: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5113</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Not sure if this is a test issue, a product issue or a JVM issue. It started happening when JDK 7 was upgraded from b116 to b131 in the nightly tests. I haven&apos;t been able to reproduce the failure in my environment, but it happens frequently in the nightly testing. For example here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol/1078053-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol/1078053-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;19) testSetBytesLargeBlob(org.apache.derbyTesting.functionTests.tests.jdbc4.BlobSetMethodsTest)java.sql.SQLException: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.setStreamFailure(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedBlob.truncate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbc4.BlobSetMethodsTest.testSetBytesLargeBlob(BlobSetMethodsTest.java:102)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.sql.SQLException: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;/p&gt;

&lt;p&gt;The problem does not appear to be the reordering of the test cases that we&apos;ve seen in many other tests when running on Java 7 b131. According to the traces printed to the test log (for example in the above mentioned URL), this failure is also seen in the cases where the test cases run in the same order as on most other platforms.&lt;/p&gt;</description>
                <environment>Solaris 10 and Windows&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.7.0-ea-b131)</environment>
        <key id="12500861">DERBY-5113</key>
            <summary>Intermittent failure in BlobSetMethodsTest on Java 7: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Mar 2011 09:47:13 +0000</created>
                <updated>Thu, 30 Jun 2011 10:21:41 +0100</updated>
                            <resolved>Mon, 14 Mar 2011 09:19:30 +0000</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                    <version>10.6.2.1</version>
                    <version>10.7.1.1</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>JDBC</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13004445" author="knutanders" created="Wed, 9 Mar 2011 09:52:27 +0000"  >&lt;p&gt;The stack trace of the underlying IOException is lost because Util.setStreamFailure() only preserves the message text when it converts it to an SQLException. The attached patch makes setStreamFailure() preserve the stack trace too, so that we&apos;ll get more information the next time it happens.&lt;/p&gt;

&lt;p&gt;Running regression tests now.&lt;/p&gt;</comment>
                            <comment id="13004492" author="knutanders" created="Wed, 9 Mar 2011 11:54:15 +0000"  >&lt;p&gt;Committed reporting.diff with revision 1079761. This should give us more info the next time the test fails.&lt;/p&gt;</comment>
                            <comment id="13005364" author="knutanders" created="Thu, 10 Mar 2011 22:37:22 +0000"  >&lt;p&gt;Got a failure with the improved error reporting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol32/1079883-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol32/1079883-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) testSetBytesLargeBlob(org.apache.derbyTesting.functionTests.tests.jdbc4.BlobSetMethodsTest)java.sql.SQLException: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.setStreamFailure(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedBlob.truncate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbc4.BlobSetMethodsTest.testSetBytesLargeBlob(BlobSetMethodsTest.java:102)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.sql.SQLException: Unable to set stream: &apos;Reached EOF prematurely; expected 1,024, got 0.&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
	... 36 more&lt;br/&gt;
Caused by: java.io.EOFException: Reached EOF prematurely; expected 1,024, got 0.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBStreamControl.copyData(Unknown Source)&lt;br/&gt;
	... 31 more&lt;/p&gt;</comment>
                            <comment id="13006156" author="knutanders" created="Sun, 13 Mar 2011 08:13:03 +0000"  >&lt;p&gt;We have two bugs here. One test bug and one product bug.&lt;/p&gt;

&lt;p&gt;The product bug is that EmbedBlob.truncate() doesn&apos;t reset the position of the underlying stream before copying the first N bytes to a new location. If the stream position has been altered by a call to another method (like EmbedBlob.getBytes() here), the copying happens on the wrong position, and we may see this exception being raised. This bug is only seen if the Blob is in stream format, which typically means that the Blob must have been fetched from store and its size must be &amp;gt; 32K.&lt;/p&gt;

&lt;p&gt;The product bug doesn&apos;t explain why it fails intermittently on Java 7, though, and it isn&apos;t reproducible when running the test standalone. The length of the Blob used in the failing test is only about 5K, so the Blob should be materialized and not be represented as a stream, and the buggy code path shouldn&apos;t be taken. The only reason I can think of that the buggy code path should be taken here, is if the page size is smaller than 5K, which would make store return the Blob as a stream rather than a fully materialized byte array. And if the test is run with the derby.storage.pageSize property set to 4096, it does indeed fail consistently.&lt;/p&gt;

&lt;p&gt;Looking at tests that set the derby.storage.pageSize property, I found that store.AccessTest sets the property, but doesn&apos;t always reset it. If its test cases runs in the order in which they appear in the source file, the property will be reset. But the order of the test cases is not guaranteed, and the latest builds of Java 7 tend to run the test cases in a different order than other JVMs. If one of the test cases that don&apos;t reset the property runs last, a smaller page size value may survive in the database until BlobSetMethodsTest runs, and we&apos;ll see this failure.&lt;/p&gt;</comment>
                            <comment id="13006159" author="knutanders" created="Sun, 13 Mar 2011 08:38:55 +0000"  >&lt;p&gt;The attached patch adds a tearDown() method to AccessTest. The database properties modified by the test are now cleared after each test case. DatabasePropertyTestSetup couldn&apos;t be used for this since the properties are set to different values in each test case, and not globally for the whole test which is how that decorator is normally used.&lt;/p&gt;

&lt;p&gt;Committed revision 1081059.&lt;/p&gt;</comment>
                            <comment id="13006163" author="knutanders" created="Sun, 13 Mar 2011 09:36:28 +0000"  >&lt;p&gt;This patch adds a new test case to BlobClob4BlobTest which consistently shows the truncate bug. The patch also fixes the bug by resetting the position in the BLOB before copying the bytes.&lt;/p&gt;</comment>
                            <comment id="13006361" author="knutanders" created="Mon, 14 Mar 2011 09:19:30 +0000"  >&lt;p&gt;Committed revision 1081293.&lt;/p&gt;</comment>
                            <comment id="13006371" author="knutanders" created="Mon, 14 Mar 2011 10:10:16 +0000"  >&lt;p&gt;The bug in EmbedBlob.truncate() is seen all the way back to 10.3 when truncate() was implemented. Before that, the method threw a not implemented exception.&lt;/p&gt;

&lt;p&gt;Marking the bug as a wrong result bug, since if the length argument isn&apos;t so big that the call fails with premature EOF, the truncated Blob object will contain the wrong value (correct length, but not the right bytes).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12473493" name="derby-5113-1a-test.diff" size="1794" author="knutanders" created="Sun, 13 Mar 2011 08:38:55 +0000"/>
                            <attachment id="12473496" name="derby-5113-2a-truncate.diff" size="2906" author="knutanders" created="Sun, 13 Mar 2011 09:36:28 +0000"/>
                            <attachment id="12473111" name="reporting.diff" size="679" author="knutanders" created="Wed, 9 Mar 2011 09:52:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24659</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36395</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>