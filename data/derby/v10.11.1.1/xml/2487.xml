<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:49:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2487/DERBY-2487.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2487] Enhance Derby with EXPLAIN Functionality</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2487</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This enhancement extends Derby with EXPLAIN functions. Users want to have more feedback than they`re getting with the current RuntimeStatistics facility. This extension is based on the RuntimeStatistics/ResultSetStatistics functions / classes. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12365794">DERBY-2487</key>
            <summary>Enhance Derby with EXPLAIN Functionality</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="fbeyer">Felix Beyer</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Mar 2007 11:03:54 +0100</created>
                <updated>Fri, 17 May 2013 23:25:30 +0100</updated>
                            <resolved>Fri, 15 May 2009 02:07:18 +0100</resolved>
                                    <version>10.2.2.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>2</watches>
                                                                                                            <comments>
                            <comment id="12484141" author="fbeyer" created="Mon, 26 Mar 2007 16:44:53 +0100"  >&lt;p&gt;the class extensions and new classes summarized in a short class diagram&lt;/p&gt;</comment>
                            <comment id="12484142" author="fbeyer" created="Mon, 26 Mar 2007 16:50:00 +0100"  >&lt;p&gt;An excel sheet showing the different information parts of all ResultSetStatistics classes &lt;br/&gt;
(from Derby 10.2.1.6)&lt;/p&gt;</comment>
                            <comment id="12484143" author="fbeyer" created="Mon, 26 Mar 2007 16:52:10 +0100"  >&lt;p&gt;the implemented physical xplain schema which is manifested in the system catalogs&lt;/p&gt;</comment>
                            <comment id="12484144" author="fbeyer" created="Mon, 26 Mar 2007 16:53:46 +0100"  >&lt;p&gt;the logical schema of the xplain catalogs in a summarized form&lt;/p&gt;</comment>
                            <comment id="12484145" author="fbeyer" created="Mon, 26 Mar 2007 16:55:06 +0100"  >&lt;p&gt;the extended ResultSet protocol which was implemented&lt;/p&gt;</comment>
                            <comment id="12484157" author="fbeyer" created="Mon, 26 Mar 2007 17:52:09 +0100"  >&lt;p&gt;This file documents the new system procedures and their parameters. &lt;br/&gt;
An example will demonstrate the usage of the functions and the new explain functionality.&lt;/p&gt;</comment>
                            <comment id="12484279" author="bryanpendleton" created="Tue, 27 Mar 2007 02:57:30 +0100"  >&lt;p&gt;Hi Felix, thanks for posting the code. It looks great! There&apos;s a lot of code, so it may take a while to read.&lt;/p&gt;

&lt;p&gt;Why did you choose to spell &quot;explain&quot; without the &quot;e&quot; in the code?&lt;/p&gt;</comment>
                            <comment id="12484304" author="bryanpendleton" created="Tue, 27 Mar 2007 05:57:53 +0100"  >&lt;p&gt;1) If multiple people are simultaneously using explain mode to store query plans into&lt;br/&gt;
the system catalogs, how do they distinguish their explain data from each other?&lt;/p&gt;

&lt;p&gt;2) If I use explain mode for multiple SQL statements, how do I go back in after the&lt;br/&gt;
fact and find the particular explain data for the particular SQL statement that I&apos;m interested in?&lt;/p&gt;</comment>
                            <comment id="12484764" author="fbeyer" created="Wed, 28 Mar 2007 09:45:00 +0100"  >&lt;p&gt;&amp;gt;Why did you choose to spell &quot;explain&quot; without the &quot;e&quot; in the code?&lt;br/&gt;
There`s no special reason for this. Maybe to distinguish the special Derby explain behaviour from expectations coming from users , who are familiar with the explain functions of commercial DBMS.&lt;/p&gt;

&lt;p&gt;The current explain implementation is optimized for ad-hoc queries and tool support Furthermore the explain data is quite extensive to analyze. I wanted to make a compromise between detailed explain information which is almost unreadable by human users and which has to be evaluated with the help of a tool and a compact version of explain data which is only applicable for rough investigations but is still browseable by human users.&lt;/p&gt;

&lt;p&gt;&amp;gt;1) If multiple people are simultaneously using explain mode to store query plans into&lt;br/&gt;
&amp;gt;the system catalogs, how do they distinguish their explain data from each other?&lt;br/&gt;
The XPLAINStatements catalog does not have a user attribute to distinguish the explain data by users. By now the only way to distinguish explain data is via their UUID and the session id attribute. (see physical schema) In Net environments the drda id is additionally available to clearify the net connection and thus the user.&lt;/p&gt;

&lt;p&gt;&amp;gt;2) If I use explain mode for multiple SQL statements, how do I go back in after the&lt;br/&gt;
&amp;gt;fact and find the particular explain data for the particular SQL statement that I&apos;m interested in? &lt;br/&gt;
The easiest way to do this is to filter out the wanted explain data by the stmt text attribute. If there are more statements which have the same stmt text then go for the explain timestamp and pick the one which is right.&lt;br/&gt;
select stmt_text, stmt_id, xplain_time from sys.sysxplain_statements order by stmt_text, xplain_time;&lt;br/&gt;
With the wanted stmt_id step into the other catalogs to query more data.&lt;/p&gt;</comment>
                            <comment id="12484770" author="fbeyer" created="Wed, 28 Mar 2007 09:51:55 +0100"  >&lt;p&gt;note to answer of question 1) The UUID is hold in the stmt_id attribute o fthe XPLAINStatements catalog, (see Derby physical xplain schema)&lt;/p&gt;</comment>
                            <comment id="12485559" author="army" created="Fri, 30 Mar 2007 17:42:03 +0100"  >&lt;p&gt;I have not looked at the code changes for this issue, nor have I actually tried out the new functionality.  I plan to, but I have not yet had enough time.&lt;/p&gt;

&lt;p&gt;I did, however, apply the full patch (it applied cleanly) and I ran Derby&apos;s primary two regression suites (&quot;derbyall&quot; and &quot;suites.All&quot;) on Red Hat Linux with ibm142.  A handful of tests failed in &quot;derbyall&quot; because of metadata differences: namely, the metadata now includes information for the new XPLAIN stored procedures.  This means the expected results for those tests have to be updated to reflect the presence of the new procedures.  Unfortunately, I accidentally deleted the derbyall results so I do not have a list of the tests which require updates.  However, if you run&lt;/p&gt;

&lt;p&gt;  java org.apache.derbyTesting.functionTests.harness.RunSuite derbyall&lt;/p&gt;

&lt;p&gt;on your machine, you should hopefully be able to see the failures for yourself.  Note that the &quot;derbyall&quot; suite takes three to four hours to complete (on my test machine).  If you are uncertain about how to fix the tests, please feel free to ask questions to derby-dev.&lt;/p&gt;

&lt;p&gt;Aside from the metadata failures, derbyall ran cleanly.  As for &quot;suites.All&quot; I saw 5 failures:&lt;/p&gt;

&lt;p&gt;  FAILURES!!!&lt;br/&gt;
  Tests run: 5664,  Failures: 5,  Errors: 0&lt;/p&gt;

&lt;p&gt;I have not had time to look into the cause of the failures; can you run this suite and investigate a bit more?&lt;/p&gt;

&lt;p&gt;  java junit.swingui.TestRunner -noloading org.apache.derbyTesting.functionTests.suites.All&lt;/p&gt;

&lt;p&gt;This regression suite usually takes less than an hour to complete.&lt;/p&gt;

&lt;p&gt;As for the patch itself, it is a very large patch.  I count over 10,000 lines of code changes in all (including comments).  As Bryan said earlier, it is probably going to take a while for people to read and review it.  It might help if you were able to break the patch up into smaller logical &quot;pieces&quot;, where each piece compiles cleanly and passes the regression suites.  It is generally much easier to review smaller patches, and you are more likely to get comments from more people in a shorter time.  See:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://wiki.apache.org/db-derby/PatchAdvice&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/PatchAdvice&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;http://wiki.apache.org/db-derby/IncrementalDevelopment&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/IncrementalDevelopment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course that is just a suggestion; you are not required to post incremental patches.&lt;/p&gt;

&lt;p&gt;Also note the following, copied from the Derby wiki page:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyContributorChecklist&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyContributorChecklist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;If you are attaching a large patch, you should sign an &lt;span class=&quot;error&quot;&gt;&amp;#91;WWW&amp;#93;&lt;/span&gt; ICLA, generally granting Apache license rights over your Derby contributions. Evidence that you filed an ICLA is supposed to appear in the &lt;span class=&quot;error&quot;&gt;&amp;#91;WWW&amp;#93;&lt;/span&gt; Contributors list. However, since Apache updates this list only sporadically, you may need to resubmit your ICLA or pester Apache to notice it. For more information, see the &lt;span class=&quot;error&quot;&gt;&amp;#91;WWW&amp;#93;&lt;/span&gt; Apache licensing info.&quot;&lt;/p&gt;

&lt;p&gt;I think 10k lines counts as &quot;a large patch&quot;, so it&apos;d be great if you could sign an ICLA &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  The wiki page at the above URL has the necessary links.  If you have already filed an ICLA then it might be helpful if you could indicate that in an email or as a comment for this issue.&lt;/p&gt;

&lt;p&gt;And one final suggestion:&lt;/p&gt;

&lt;p&gt;Don&apos;t be shy!  If at any point you have any questions about Derby-&lt;del&gt;whether they relate to this Jira or not&lt;/del&gt;-please feel free to ask them on derby-dev or on derby-user.  And if you have input/answers to other people&apos;s questions/discussions, please chime in at any point. We welcome your participation.&lt;/p&gt;</comment>
                            <comment id="12669399" author="bryanpendleton" created="Sun, 1 Feb 2009 16:10:06 +0000"  >&lt;p&gt;What is the status of this patch? Was a CLA ever filed? If not, is that a blocker?&lt;/p&gt;

&lt;p&gt;That is, if the community were to decide that we wanted to include this work, are&lt;br/&gt;
there legal issues that need to be overcome? Or is it simply a matter of digesting&lt;br/&gt;
the proposed implementation and deciding if we want to proceed with it?&lt;/p&gt;</comment>
                            <comment id="12670238" author="bryanpendleton" created="Wed, 4 Feb 2009 05:05:09 +0000"  >&lt;p&gt;Assigned this issue to myself for the time being while I study the proposed patch in more detail.&lt;/p&gt;</comment>
                            <comment id="12670249" author="gemulla" created="Wed, 4 Feb 2009 05:35:32 +0000"  >&lt;p&gt;This patch has been created as part of a diploma thesis. There are no legal issues of any kind. I will try to contact Felix Beyer (who did all the work) in order to file the CLA.&lt;/p&gt;</comment>
                            <comment id="12670566" author="bryanpendleton" created="Thu, 5 Feb 2009 00:00:08 +0000"  >&lt;p&gt;I&apos;ve been working on trying to bring the patch up to date with the current trunk.&lt;br/&gt;
Since the time that this patch was originally posted, at least the following other&lt;br/&gt;
patches have touched related parts of the code: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3037&quot; title=&quot;Language ResultSet.finish() is called even when the ResultSet is going to be re-used.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3037&quot;&gt;DERBY-3037&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2661&quot; title=&quot;Remove ExecutionContext as it provides no value.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2661&quot;&gt;DERBY-2661&lt;/a&gt;,&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1734&quot; title=&quot;Simplify building of SystemColumn array in CatalogRowFactory  implementations.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1734&quot;&gt;&lt;del&gt;DERBY-1734&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3147&quot; title=&quot;Remove unused code that allow identifiers to be lower-cased.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3147&quot;&gt;&lt;del&gt;DERBY-3147&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3570&quot; title=&quot;Implement DETERMINISTIC keyword for procedures and functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3570&quot;&gt;&lt;del&gt;DERBY-3570&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3137&quot; title=&quot;SQL roles: add catalog support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3137&quot;&gt;&lt;del&gt;DERBY-3137&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2998&quot; title=&quot;Add support for ROW_NUMBER() window function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2998&quot;&gt;&lt;del&gt;DERBY-2998&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are probably other interactions that have changed since the patch was first written.&lt;/p&gt;

&lt;p&gt;I&apos;ve made an attempt to revise the patch to bring it up to date so that it will apply&lt;br/&gt;
cleanly against the current trunk, and will at least compile, and have attached that&lt;br/&gt;
updated patch as &apos;incorporateTrunkChanges.diff&apos;.&lt;/p&gt;

&lt;p&gt;Although I think that this revised patch will at least compile, I very much doubt that&lt;br/&gt;
it will run; I simply had to make too many changes to the patch to give me much&lt;br/&gt;
confidence that I haven&apos;t broken things.&lt;/p&gt;

&lt;p&gt;But the exercise did give me a bunch more familiarity with the patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And now I can start working with the code against the current trunk, stepping through&lt;br/&gt;
it and getting more familiar with it.&lt;/p&gt;</comment>
                            <comment id="12670613" author="bryanpendleton" created="Thu, 5 Feb 2009 03:06:16 +0000"  >&lt;p&gt;I messed up the argument type to syscs_set_xplain_style, it should be TypeDescriptor.INTEGER.&lt;/p&gt;

&lt;p&gt;I&apos;ll correct that in a later patch, after I&apos;ve done more testing and study.&lt;/p&gt;</comment>
                            <comment id="12670620" author="gemulla" created="Thu, 5 Feb 2009 03:43:57 +0000"  >&lt;p&gt;Thanks, Bryan. My personal feeling is that these extensions can be of great value for both Derby developers and application developers using Derby. It&apos;s great to see that there is some progress.&lt;/p&gt;</comment>
                            <comment id="12670790" author="bryanpendleton" created="Thu, 5 Feb 2009 15:25:45 +0000"  >&lt;p&gt;In a complete run of the regression suite, there were a handful of failures. From a quick&lt;br/&gt;
scan, they were all related to the new system catalogs added by this patch. So it at least&lt;br/&gt;
seems like the new code does no harm, as far as is measured by the regression tests.&lt;br/&gt;
I&apos;ll look into each of the test failures in more detail.&lt;/p&gt;</comment>
                            <comment id="12671142" author="bryanpendleton" created="Fri, 6 Feb 2009 14:18:37 +0000"  >&lt;p&gt;Attached &apos;updateRegressionTests.diff&apos; patch proposal includes changes&lt;br/&gt;
to the regression tests to incorporate the new system catalogs. With this&lt;br/&gt;
patch, I get a clean regression test run.&lt;/p&gt;</comment>
                            <comment id="12671171" author="bryanpendleton" created="Fri, 6 Feb 2009 15:51:02 +0000"  >&lt;p&gt;I hadn&apos;t properly done &apos;svn add&apos; on all the relevant files and directories,&lt;br/&gt;
so my previous patch attachments were missing some of the new files.&lt;br/&gt;
Re-attaching &apos;updateRegressionTests.diff&apos;.&lt;/p&gt;</comment>
                            <comment id="12671174" author="bryanpendleton" created="Fri, 6 Feb 2009 15:58:42 +0000"  >&lt;p&gt;I&apos;m becoming more familiar with the patch, which is good.&lt;/p&gt;

&lt;p&gt;For the next step, I&apos;m thinking about starting to work on some&lt;br/&gt;
draft documentation, as I think the process of drafting documentation&lt;br/&gt;
will help me clarify some of the details of the patch. I think that the&lt;br/&gt;
documentation should include:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;an overview of what this feature is, how it can help you, and how it works&lt;/li&gt;
	&lt;li&gt;reference material on the new system procedures&lt;/li&gt;
	&lt;li&gt;reference material on the new system catalogs&lt;/li&gt;
	&lt;li&gt;a number of examples of how to use the feature&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12671252" author="kmarsden" created="Fri, 6 Feb 2009 19:10:01 +0000"  >&lt;p&gt;Bryan asked:&lt;br/&gt;
&quot;What is the status of this patch? Was a CLA ever filed? If not, is that a blocker?&quot;&lt;/p&gt;

&lt;p&gt;I think it is a blocker for a patch of this size. I don&apos;t see Felix Beyer on the list at:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~jim/committers.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~jim/committers.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12674083" author="bryanpendleton" created="Tue, 17 Feb 2009 01:14:54 +0000"  >&lt;p&gt;Brief status update:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;ve been in contact with Felix Beyer, and we&apos;re trying to get the ICLA filed&lt;/li&gt;
	&lt;li&gt;I&apos;ve made good progress on drafting docs, and on writing some new tests,&lt;br/&gt;
   don&apos;t have any patches to post yet, but hopefully soon.&lt;/li&gt;
	&lt;li&gt;while writing tests, I found an unrelated issue (I think) in DataValueFactory,&lt;br/&gt;
   and will file a separate issue to track that problem&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12675231" author="bryanpendleton" created="Fri, 20 Feb 2009 04:03:30 +0000"  >&lt;p&gt;Attached &apos;startRegressionTest.diff&apos; patch differs in two&lt;br/&gt;
meaningful respects from the previous patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it incorporates the workaround that Knut suggested&lt;br/&gt;
   for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4062&quot; title=&quot;Remove single-argument getDataValue overrides from DataValueFactory interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4062&quot;&gt;&lt;del&gt;DERBY-4062&lt;/del&gt;&lt;/a&gt;; namely, to directly construct SQLInteger&lt;br/&gt;
   objects for the integer data values rather than calling&lt;br/&gt;
   DataValueFactory.getDataValue(). This seems like a&lt;br/&gt;
   reasonable approach to me, and means that this work won&apos;t&lt;br/&gt;
   be blocked while we discuss the preferred approach to&lt;br/&gt;
   take with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4062&quot; title=&quot;Remove single-argument getDataValue overrides from DataValueFactory interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4062&quot;&gt;&lt;del&gt;DERBY-4062&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;it includes an initial, incomplete, partial new regression test&lt;br/&gt;
   to be run as part of the derbylang junit test suites. At this&lt;br/&gt;
   point, I&apos;m just writing the most simple tests of the new&lt;br/&gt;
   feature, trying to ensure that in some straightforward&lt;br/&gt;
   scenarios, reasonable values are captured and written&lt;br/&gt;
   to the new system tables. So far, this testing seems to be&lt;br/&gt;
   going well and I think it should be possible to continue&lt;br/&gt;
   adding additional regression tests along these lines to this suite.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I haven&apos;t re-run the full regression suite in a while, so it&apos;s possible&lt;br/&gt;
that this patch breaks some of the tests, although hopefully not&lt;br/&gt;
since I haven&apos;t done much to the patch other than the two changes&lt;br/&gt;
mentioned above.&lt;/p&gt;</comment>
                            <comment id="12675691" author="knutanders" created="Sun, 22 Feb 2009 18:47:39 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I haven&apos;t looked at the patch yet, but I&apos;ve had a brief look at the documentation that you posted on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4065&quot; title=&quot;Provide documentation for XPLAIN style statistics processing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4065&quot;&gt;&lt;del&gt;DERBY-4065&lt;/del&gt;&lt;/a&gt; (great work, by the way!), and I noticed that the STMT_TEXT column in SYSXPLAIN_STATEMENTS was of type LONG VARCHAR (length 32700). Given that the maximum length of VARCHAR is just 28 characters shorter than LONG VARCHAR, do you think it would be a good idea to change the data type of that column to VARCHAR? That would allow comparisons on that column without a cast. Otherwise, I think a statement like &quot;select * from sys.sysxplain_statements where stmt_text=&apos;select * from t&apos;&quot; would result in ERROR 42818: Comparisons between &apos;LONG VARCHAR (UCS_BASIC)&apos; and &apos;CHAR (UCS_BASIC)&apos; are not supported.&lt;/p&gt;</comment>
                            <comment id="12675715" author="bryanpendleton" created="Sun, 22 Feb 2009 21:47:07 +0000"  >&lt;p&gt;Thanks Knut, I think that&apos;s a good idea. I had noticed the awkwardness&lt;br/&gt;
of querying against the stmt_text field, and I agree with you that the&lt;br/&gt;
small amount of reduction in field size is worth it to be able to issue queries like :&lt;/p&gt;

&lt;p&gt;  select stmt_id, stmt_text from sys.sysxplain_statements where stmt_text like &apos;% from countries%&apos;&lt;/p&gt;

&lt;p&gt;I&apos;ve uploaded a new version of the patch as &apos;startRegressionTest.diff&apos;.&lt;/p&gt;

&lt;p&gt;I&apos;m beginning to feel like the regression test is at least establishing broad&lt;br/&gt;
basic-level coverage of the new feature.&lt;/p&gt;

&lt;p&gt;I think that as we get more experience with this feature, there will be a variety of&lt;br/&gt;
more advanced issues that we&apos;ll want to have tests for, but at least we now have&lt;br/&gt;
a test suite which verifies basic reasonableness of almost all the columns in&lt;br/&gt;
the new system tables.&lt;/p&gt;

&lt;p&gt;The test development that I&apos;ve done has identified a number of small items that&lt;br/&gt;
I want to follow up on, mostly noted by &apos;fixme&apos; or &apos;todo&apos; comments in either the&lt;br/&gt;
code itself or in the docs.&lt;/p&gt;

&lt;p&gt;I think I&apos;ll turn my attention to these items next, making sure that we have&lt;br/&gt;
regression tests which explore these items in detail, and then trying to&lt;br/&gt;
figure out how to address the particular issue in either the code or the docs.&lt;/p&gt;</comment>
                            <comment id="12675956" author="bryanpendleton" created="Mon, 23 Feb 2009 15:58:25 +0000"  >&lt;p&gt;It seems like it would be nice if the result set number (a small integer, identifying this&lt;br/&gt;
particular result set within this statement) were included as a column in&lt;br/&gt;
sys.sysxplain_resultsets. It is sometimes, but not always, included in op_details currently.&lt;/p&gt;</comment>
                            <comment id="12676158" author="bryanpendleton" created="Tue, 24 Feb 2009 02:48:40 +0000"  >&lt;p&gt;I need to investigate how this should work in an upgrade scenario. Is there already&lt;br/&gt;
code which runs during upgrade which would detect that these system tables do&lt;br/&gt;
not yet exist, and would create them? Also, is there anything special needed so that,&lt;br/&gt;
if the system tables do not yet exist, then the feature is smart enough to not allow&lt;br/&gt;
itself to be turned on until the system tables are created (e.g., in &quot;soft&quot; upgrade)?&lt;/p&gt;</comment>
                            <comment id="12676410" author="mikem" created="Tue, 24 Feb 2009 20:55:05 +0000"  >&lt;p&gt;I have not done a system catalog upgrade, but here are some places to look.&lt;/p&gt;

&lt;p&gt;I assume the right thing would be to disable the feature in soft upgrade.  I think this is usually done in parser or the procedure call, whatever applies best for the feature.  It looks like &lt;br/&gt;
update statistics procedure should have this, and has been added to upgrade tests.&lt;/p&gt;

&lt;p&gt;For pointers on adding system catalogs maybe you can look at code in &lt;br/&gt;
java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java.  There looks like a few versions&lt;br/&gt;
in the past that dealt with new catalogs:&lt;/p&gt;

&lt;p&gt;        if (fromMajorVersionNumber &amp;lt;= DataDictionary.DD_VERSION_DERBY_10_3)&lt;/p&gt;
        {
            // Add new system catalogs created for roles
            bootingDictionary.upgradeMakeCatalog(
                tc, DataDictionary.SYSROLES_CATALOG_NUM);
        }

&lt;p&gt;        if (fromMajorVersionNumber &amp;lt;= DataDictionary.DD_VERSION_DERBY_10_1)&lt;/p&gt;
        {
            // add catalogs 1st, subsequent procedure adding may depend on
            // catalogs.

            // Add new system catalogs created for grant and revoke
            bootingDictionary.upgradeMakeCatalog(
                tc, DataDictionary.SYSTABLEPERMS_CATALOG_NUM);
            bootingDictionary.upgradeMakeCatalog(
                tc, DataDictionary.SYSCOLPERMS_CATALOG_NUM);
            bootingDictionary.upgradeMakeCatalog(
                tc, DataDictionary.SYSROUTINEPERMS_CATALOG_NUM);
        }

&lt;p&gt;It looks like the 10.5 update statistics feature laid the test groundwork for 10.5 upgrade testing&lt;br/&gt;
to the upgrade tests, so you should just be able to add appropriate test cases:&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests&lt;/p&gt;

</comment>
                            <comment id="12676441" author="dagw" created="Tue, 24 Feb 2009 22:39:24 +0000"  >&lt;p&gt;For roles, I added the above (Mike&apos;s quote) upgrade code as part of&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3191&quot; title=&quot;SQL roles: add upgrade support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3191&quot;&gt;&lt;del&gt;DERBY-3191&lt;/del&gt;&lt;/a&gt;.  To avoid confusion, 10.4 databases has the system table&lt;br/&gt;
SYS.SYSROLES, but the feature isn&apos;t enabled until 10.5, however.&lt;/p&gt;</comment>
                            <comment id="12676718" author="bryanpendleton" created="Wed, 25 Feb 2009 17:58:05 +0000"  >&lt;p&gt;The ICLA has been received and processed, and Felix Beyer&lt;br/&gt;
now appears on the list at &lt;a href=&quot;http://people.apache.org/~jim/committers.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~jim/committers.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12676890" author="bryanpendleton" created="Thu, 26 Feb 2009 05:55:37 +0000"  >&lt;p&gt;Thanks Mike and Dag for the upgrade pointers. Those tests are awesome!&lt;br/&gt;
I was able to add tests for the new XPLAIN features, and, using those tests,&lt;br/&gt;
found and fixed a handful of upgrade issues, so I think upgrade now works.&lt;br/&gt;
Attached patch &apos;startUpgradeTests.diff&apos; passes the complete regression&lt;br/&gt;
suite in my environment.&lt;/p&gt;

&lt;p&gt;I&apos;m still tracking down to-do&apos;s and fixme&apos;s, but would welcome&lt;br/&gt;
additional review of the patch by anyone who has time.&lt;/p&gt;</comment>
                            <comment id="12677231" author="dagw" created="Fri, 27 Feb 2009 02:36:08 +0000"  >&lt;p&gt;I noticed while skimming the patch the the @author tag is used in the Javadoc in places. I think we&lt;br/&gt;
have a policy not to include those.&lt;/p&gt;</comment>
                            <comment id="12677553" author="bryanpendleton" created="Fri, 27 Feb 2009 21:56:15 +0000"  >&lt;p&gt;Thanks Dag &amp;#8211; I&apos;ll remove the @author tags.&lt;/p&gt;</comment>
                            <comment id="12677599" author="bryanpendleton" created="Fri, 27 Feb 2009 23:20:22 +0000"  >&lt;p&gt;I suspect that the &apos;sourceDepth&apos; column should be removed from SYSXPLAIN_RESULTSETS.&lt;br/&gt;
If I&apos;m reading the source code correctly, this field is used during the text formatting&lt;br/&gt;
of the runtime statistics information to manage the indentation levels of the text display;&lt;br/&gt;
it is incremented by one in the initFormatInfo() method when a parent resultset&lt;br/&gt;
constructs its own text by calling upon its child result sets to produce their text.&lt;br/&gt;
I don&apos;t think that it has any value when the runtime statistics information is captured&lt;br/&gt;
into the SYSXPLAIN_RESULTSETS table.&lt;/p&gt;

&lt;p&gt;I intend to remove the sourceDepth field from the code patch, and from the docs patch.&lt;/p&gt;</comment>
                            <comment id="12677751" author="bryanpendleton" created="Sun, 1 Mar 2009 00:19:53 +0000"  >&lt;p&gt;Attached is &apos;removeSourceDepth.diff&apos;, the latest version of the patch proposal.&lt;br/&gt;
The primary change is that the &apos;sourceDepth&apos; field is no longer present in the&lt;br/&gt;
SYSXPLAIN_RESULTSETS table. @author tags are also removed.&lt;/p&gt;</comment>
                            <comment id="12678240" author="bryanpendleton" created="Tue, 3 Mar 2009 04:56:47 +0000"  >&lt;p&gt;I intend to remove the &apos;NO_ACCESSED_HEAP_COLUMNS&apos; column from&lt;br/&gt;
SYSXPLAIN_SCAN_PROPS. This column is always being set to NULL&lt;br/&gt;
in the current code, and I can&apos;t think of any use for this column which&lt;br/&gt;
isn&apos;t already being met by the NO_FETCHED_COLUMNS column.&lt;/p&gt;

&lt;p&gt;It&apos;s possible that this field was intended to be used to hold the information&lt;br/&gt;
from an IndexRowToBaseRow result set, since&lt;br/&gt;
RealIndexRowToBaseRowStatistics does compute the columns accessed&lt;br/&gt;
from the base heap, and makes that information available in the text&lt;br/&gt;
output of the runtimestatistics. However, this result set does not have&lt;br/&gt;
a corresponding scan props row, so we don&apos;t have a way to hold&lt;br/&gt;
the value there. There is a commented-out bit of code in the&lt;br/&gt;
XPLAINSystemTableVisitor class which looks like it is intended to deposit&lt;br/&gt;
this information into the op_details column for the IndexRowToBaseRow&lt;br/&gt;
result set, which might be one way to make it available:&lt;/p&gt;

&lt;p&gt;+        String op_details = &quot;(&quot;+statistics.resultSetNumber + &quot;), &quot; + &lt;br/&gt;
+                            statistics.tableName           ;//+ &quot;, &quot; +&lt;br/&gt;
+                            //&quot;ACCESSED HEAP COLUMNS: &quot;+ statistics.colsAccessedFromHeap;&lt;/p&gt;

&lt;p&gt;For the time being, since I&apos;m not sure what the column was supposed to&lt;br/&gt;
hold, and since having an always-NULL column doesn&apos;t seem useful,&lt;br/&gt;
I intend to remove the column from SCAN_PROPS.&lt;/p&gt;</comment>
                            <comment id="12678453" author="mamtas" created="Tue, 3 Mar 2009 21:26:07 +0000"  >&lt;p&gt;Bryan, great job in bringing the patch back upto date with the trunk and figuring out this large patch from the original submitter. I just have couple comments&lt;br/&gt;
1)In RealAnyResultSetStatistics.java, RealDistinctScalarAggregateStatistics.java and RealWindowResultSetStatistics.java, do we need to check if childResultSetStatistics is not empty before we set number of children to 1. If yes, then we should also check childResultSetStatistics is not empty &lt;br/&gt;
before calling childResultSetStatistics.accept(visitor); This is what we are doing in the rest of the patch.&lt;br/&gt;
2)In RealCurrentOfStatistics.java, should we be calling visitor.visit(this); after setting the number of children to 0?&lt;br/&gt;
3)In XPLAINFactory.java, while trying to determine the appropriate XPLAINVisitor, if we get an exception, then we are printing the stack trace. That at some point should be fixed. Should the fix be that if we run into exception, just use the default visitor? &lt;br/&gt;
java/engine/org/apache/derby/impl/sql/execute/xplain/XPLAINFactory.java	&lt;br/&gt;
4)I noticed in couple places in XPLAINSystemTableVisitor.java where we do printStackTrace on the exception. The error handling is probably already on your to-do list but I thought I would point it out.&lt;/p&gt;</comment>
                            <comment id="12678598" author="bryanpendleton" created="Wed, 4 Mar 2009 05:52:19 +0000"  >&lt;p&gt;Thanks Mamta! Those are very helpful observations and I will address them in the next revision of the patch.&lt;/p&gt;</comment>
                            <comment id="12678965" author="bryanpendleton" created="Wed, 4 Mar 2009 22:31:15 +0000"  >&lt;p&gt;Mamta, your observation about the handling of childResultSetStatistics in the various&lt;br/&gt;
implementations of accept(XPLAINVisitor) is quite interesting.&lt;/p&gt;

&lt;p&gt;This is a new accept() method added to most of the various ResultSetStatistics sub-types&lt;br/&gt;
as part of this patch. In the original patch, the implementation of the accept() method&lt;br/&gt;
was (mostly) written in a style of being careful about checking the childResultSetStatistics&lt;br/&gt;
pointer before using it. For example, here&apos;s the implementation from RealSortStatistics:&lt;/p&gt;

&lt;p&gt;+    public void accept(XPLAINVisitor visitor) {&lt;br/&gt;
+        int noChildren = 0;&lt;br/&gt;
+        if(this.childResultSetStatistics!=null) noChildren++;&lt;br/&gt;
+        &lt;br/&gt;
+        //inform the visitor&lt;br/&gt;
+        visitor.setNumberOfChildren(noChildren);&lt;br/&gt;
+        &lt;br/&gt;
+        // pre-order, depth-first traversal&lt;br/&gt;
+        // me first&lt;br/&gt;
+        visitor.visit(this);&lt;br/&gt;
+        // then my child&lt;br/&gt;
+        if(childResultSetStatistics!=null)&lt;/p&gt;
{
+            childResultSetStatistics.accept(visitor);
+        }
&lt;p&gt;+    }&lt;/p&gt;

&lt;p&gt;Note that the code checks to see if childResultSetStatistics is null before using it.&lt;/p&gt;

&lt;p&gt;This is the pattern in most of the new accept() methods, with the 3 exceptions that you noted.&lt;/p&gt;

&lt;p&gt;However, the more I look at this code, the more I think that those 3 exceptions are actually&lt;br/&gt;
the desirable pattern, and most of the other accept() implementations are being too cautious.&lt;/p&gt;

&lt;p&gt;For example, I think that it &lt;b&gt;DOES&lt;/b&gt; make sense for RealDeleteResultSetStatistics.accept()&lt;br/&gt;
to have code which checks to see whether sourceResultSetStatistics is null or not, because&lt;br/&gt;
sourceResultSetStatisics is an optional part of RealDeleteResultSetStatistics. Sometimes it&lt;br/&gt;
is present, sometimes not. I&apos;m not sure &lt;b&gt;WHY&lt;/b&gt; the sourceResultSetStatistics is optional here,&lt;br/&gt;
but it clearly is, and the code elsewhere in RealDeleteResultSetStatistics is careful to check&lt;br/&gt;
it before dereferencing it.&lt;/p&gt;

&lt;p&gt;On the other hand for RealUnionResultSetStatistics, for example, I think the code is being&lt;br/&gt;
too cautious. The current code added by this patch for this class looks like this:&lt;/p&gt;

&lt;p&gt;+    public void accept(XPLAINVisitor visitor) {&lt;br/&gt;
+        int noChildren = 0;&lt;br/&gt;
+        if(this.leftResultSetStatistics!=null) noChildren++;&lt;br/&gt;
+        if(this.rightResultSetStatistics!=null) noChildren++;&lt;br/&gt;
+        &lt;br/&gt;
+        //inform the visitor&lt;br/&gt;
+        visitor.setNumberOfChildren(noChildren);&lt;br/&gt;
+        &lt;br/&gt;
+        // pre-order, depth-first traversal&lt;br/&gt;
+        // me first&lt;br/&gt;
+        visitor.visit(this);&lt;br/&gt;
+        // then visit first my left child&lt;br/&gt;
+        if(leftResultSetStatistics!=null)&lt;/p&gt;
{
+            leftResultSetStatistics.accept(visitor);
+        }
&lt;p&gt;+        // and then my right child&lt;br/&gt;
+        if(rightResultSetStatistics!=null)&lt;/p&gt;
{
+            rightResultSetStatistics.accept(visitor);
+        }
&lt;p&gt;+    }  &lt;/p&gt;

&lt;p&gt;But I think this is unnecessary. It is clear by reading elsewhere in&lt;br/&gt;
RealUnionResultSetStatistics that the leftResultSetStatistics and&lt;br/&gt;
rightResultSetStatistics are &lt;b&gt;not&lt;/b&gt; optional, and must always be present,&lt;br/&gt;
so I think the new code would be simpler and clearer if it was instead:&lt;/p&gt;

&lt;p&gt;+    public void accept(XPLAINVisitor visitor) &lt;/p&gt;
{
+        //inform the visitor
+        visitor.setNumberOfChildren(2);
+        
+        // pre-order, depth-first traversal
+        // me first
+        visitor.visit(this);
+        // then visit first my left child
+        leftResultSetStatistics.accept(visitor);
+        // and then my right child
+        rightResultSetStatistics.accept(visitor);
+    }
&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;So rather than changing the 3 Statistics classes that you mentioned to add &quot;!= null&quot;&lt;br/&gt;
checks for the childResultSetStatistics field, I&apos;m tempted to instead go through&lt;br/&gt;
the other Statistics classes and to ensure that the new accept() method only&lt;br/&gt;
uses conditional logic for the child statistics objects if the children truly are optional.&lt;/p&gt;

&lt;p&gt;Does that makes sense?&lt;/p&gt;</comment>
                            <comment id="12679074" author="mamtas" created="Thu, 5 Mar 2009 04:59:35 +0000"  >&lt;p&gt;Bryan, I agree that we should not do unnecessary checks. So, it will be good to get rid of redundant checks for null rather than adding them to all the accept methods.&lt;/p&gt;</comment>
                            <comment id="12679160" author="knutanders" created="Thu, 5 Mar 2009 11:24:08 +0000"  >&lt;p&gt;Some thoughts based on reading the discussion and the proposed&lt;br/&gt;
documentation:&lt;/p&gt;

&lt;p&gt;I was wondering if there was a better place to store these data than&lt;br/&gt;
in the system tables. The problems I see with using the system tables&lt;br/&gt;
are:&lt;/p&gt;

&lt;p&gt;1) The size of the seg0 directory in an empty database increases by&lt;br/&gt;
19% with this patch (712KB -&amp;gt; 848KB) which leads to increased&lt;br/&gt;
footprint and possibly increased database creation time even for those&lt;br/&gt;
who don&apos;t use the feature.&lt;/p&gt;

&lt;p&gt;2) I guess these tables can grow quite big. How can we reclaim that&lt;br/&gt;
space? The reset procedure deletes the rows, but I don&apos;t think we can&lt;br/&gt;
compress system tables. And we cannot drop them.&lt;/p&gt;

&lt;p&gt;3) System tables are shared by all users, so the approach doesn&apos;t work&lt;br/&gt;
very well in a multi-user environment. If two users collect data, they&lt;br/&gt;
may be confused by seeing the other user&apos;s data. And if one of them&lt;br/&gt;
calls the reset procedure, all the others who are collecting&lt;br/&gt;
statistics will lose their data too.&lt;/p&gt;

&lt;p&gt;4) We&apos;ll need upgrade code if we change the tables.&lt;/p&gt;

&lt;p&gt;I haven&apos;t given this much thought, but would it be possible to create&lt;br/&gt;
these tables on demand, possibly as temporary tables in the SESSION&lt;br/&gt;
schema? Then different users wouldn&apos;t interfere with each other, and&lt;br/&gt;
we wouldn&apos;t need to worry about disk footprint or upgrade of system&lt;br/&gt;
tables. Or perhaps one could pick table names (or at least their&lt;br/&gt;
prefix) when enabling XPLAIN mode?&lt;/p&gt;

&lt;p&gt;  call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
  call syscs_util.syscs_set_xplain_style(1, &apos;APP&apos;, &apos;PREFIX_&apos;);&lt;br/&gt;
  .&lt;br/&gt;
  .&lt;br/&gt;
  .&lt;br/&gt;
  select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from prefix_xplain_statement_timings;&lt;/p&gt;</comment>
                            <comment id="12679398" author="bryanpendleton" created="Thu, 5 Mar 2009 22:27:27 +0000"  >&lt;p&gt;Knut, thanks very much for the thoughts and suggestions. I have had many of the&lt;br/&gt;
same concerns, so it&apos;s very nice to have a chance to talk about them. Here&apos;s a couple&lt;br/&gt;
of my reactions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;storing the data in temporary session-scoped tables is intriguing, but it seems like&lt;br/&gt;
  that would make it harder for people who want to intentionally include data from&lt;br/&gt;
  multiple sessions and/or retain the data beyond the end of their session; they&apos;d have&lt;br/&gt;
  to copy the data out to their own tables to save it.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I agree that users could be confused by seeing multiple sessions data in the same&lt;br/&gt;
   tables, although there are fields that help them distinguish this data: session id,&lt;br/&gt;
   transaction id, drda id, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;your points about short-comings with respect to:&lt;/li&gt;
	&lt;li&gt;compressing/recovering space in the xplain tables&lt;/li&gt;
	&lt;li&gt;reset deleting all the data, even including data they might want to keep&lt;/li&gt;
	&lt;li&gt;having to upgrade the tables&lt;br/&gt;
   all seem valid, but all seem like they could be addressed by additional follow-on features.&lt;br/&gt;
   For example we could in a future release provide a system procedure which compressed&lt;br/&gt;
   the xplain tables, and could provide a modification to the reset procedure which allowed&lt;br/&gt;
   for only resetting a subset of the data (by session id, etc.).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Your point about not wanting to incur costs for this feature when the user isn&apos;t&lt;br/&gt;
  using the feature is quite a strong point, and it definitely concerns me too. Adding&lt;br/&gt;
  6 new system tables isn&apos;t something we should do casually. In addition to the&lt;br/&gt;
  ideas you had (use temporary tables, use user tables), it seems like we could&lt;br/&gt;
  have a few more possibilities:&lt;/li&gt;
	&lt;li&gt;create the tables as system tables, but do it on demand, when the feature is first used.&lt;/li&gt;
	&lt;li&gt;create the tables as system tables, but not automatically nor on demand; instead,&lt;br/&gt;
    have some additional system procedures which the user could call to:&lt;br/&gt;
    a) create the system tables for the xplain feature, prior to using it&lt;br/&gt;
    b) drop the system tables when they were not using the feature and wanted to avoid overhead.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The idea about being able to use ordinary user tables for storing this data is also&lt;br/&gt;
   very interesting, but it seems to raise some further questions:&lt;/li&gt;
	&lt;li&gt;the user would presumably need to pre-create these tables, and give them the&lt;br/&gt;
     right structure. Or would we auto-create them for the user, following some pattern like you suggest?&lt;/li&gt;
	&lt;li&gt;it seems like this would introduce some new potential error conditions and&lt;br/&gt;
     opportunities for the user to confuse themselves:&lt;/li&gt;
	&lt;li&gt;tables already existed, or couldn&apos;t be created (security problems, resource problems)&lt;/li&gt;
	&lt;li&gt;tables existed, but the schema wasn&apos;t a perfect match (would we allow this anyway if&lt;br/&gt;
       the schema was a superset of what we needed?)&lt;/li&gt;
	&lt;li&gt;tables unexpectedly disappeared or misbehaved in mid-flight.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I&apos;m also not really sure what we&apos;d have to do to the current implementation to use user tables;&lt;br/&gt;
  that is, how does it affect the code? I guess we&apos;d have to store the information about which&lt;br/&gt;
  user tables to use, presumably in the LCC where the patch currently stores the xplain style and mode,&lt;br/&gt;
  and then we&apos;d have to change the visitor code to have the appropriate code for inserting the&lt;br/&gt;
  data into the user tables, which hopefully is quite similar to the code which inserts the data&lt;br/&gt;
   into the sytsem tables, except that the system tables are quite easy to find from a code&lt;br/&gt;
   point of view, because we just can use the internal system catalog numbers, whereas user&lt;br/&gt;
   tables would have to go through bind processing to figure out which actual tables to use.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks very much for raising these concerns; I&apos;m very interested to hear &lt;br/&gt;
more about what you and others think about this issue.&lt;/p&gt;</comment>
                            <comment id="12679611" author="rhillegas" created="Fri, 6 Mar 2009 15:16:46 +0000"  >&lt;p&gt;Thanks for working on this issue, Bryan. Like Knut and yourself, I am a little concerned that we are creating many system catalogs for one feature. I like the idea that the plan-capturing tables should be created on-demand in a user schema. You could imagine adding a new overload of syscs_util.syscs_set_runtimestatistics:&lt;/p&gt;

&lt;p&gt;   call syscs_util.syscs_set_runtimestatistics( &apos;myStatisticsSchema&apos; )&lt;/p&gt;

&lt;p&gt;This would&lt;/p&gt;

&lt;p&gt;1) Create myStatisticsSchema (owned by the current user) if it didn&apos;t already exist.&lt;/p&gt;

&lt;p&gt;2) Create the plan-bearing tables in myStatisticsSchema if they didn&apos;t already exist or if their shape is stale. I think that the contract should be that the layout of these tables can change between feature releases. That is, plans are not guaranteed to survive across upgrade. Derby reserves the right to drop and recreate these tables after upgrade. Regardless of where we put the statistics, I think that plans from previous releases should be flushed after upgrade--from painful previous experience at Sybase I can report that you don&apos;t want to be responsible for persisting plans across upgrade boundaries.&lt;/p&gt;

&lt;p&gt;3) Stuff a reference to myStatisticsSchema into the LCC as you suggest. The contract is that plans are dumped into the latest schema specified by a syscs_set_runtimestatistics command issued in your session.&lt;/p&gt;

&lt;p&gt;Garbage-collecting uninteresting statistics would then just be a matter of dropping a schema.&lt;/p&gt;</comment>
                            <comment id="12679879" author="bryanpendleton" created="Sat, 7 Mar 2009 15:04:21 +0000"  >&lt;p&gt;Thanks everyone for the feedback. These are all good ideas. I intend to pursue&lt;br/&gt;
the notion of writing the data to ordinary user tables, using some blend of&lt;br/&gt;
the APIs that Knut and Rick suggested.&lt;/p&gt;

&lt;p&gt;I&apos;ll be back later with the results of that investigation.&lt;/p&gt;</comment>
                            <comment id="12680500" author="bryanpendleton" created="Tue, 10 Mar 2009 15:00:57 +0000"  >&lt;p&gt;I&apos;m trying to figure out how to prototype the suggested alternate approaches without&lt;br/&gt;
writing a ton of extra code. The system table implementation takes advantage of&lt;br/&gt;
various special-purpose APIs in the DataDictionary, such as:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;startWriting()&lt;/li&gt;
	&lt;li&gt;getSystemSchemaDescriptor()&lt;/li&gt;
	&lt;li&gt;addDescriptorArray()&lt;/li&gt;
	&lt;li&gt;getCatalogRowFactory()&lt;br/&gt;
and so forth.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the time being, at least, I&apos;m a bit intimidated by the scope of trying to manage&lt;br/&gt;
update access to arbitrary user tables in arbitrary user schemas. How would I know&lt;br/&gt;
whether the tables are hidden behind synonyms or views? How would I figure out&lt;br/&gt;
if the tables had indexes or constraints on them? How could I make precise the&lt;br/&gt;
notion of checking if the table schema doesn&apos;t quite match &amp;#8211; would we require a&lt;br/&gt;
perfect match of table names, column names, data types, etc? Or could the table&lt;br/&gt;
definitions be &apos;close&apos; and then things like data type conversion would be expected to&lt;br/&gt;
make things work?&lt;/p&gt;

&lt;p&gt;One idea would be to essentially construct the relevant INSERT statements at the&lt;br/&gt;
point when SYSCS_UTIL.SYSCS_SET_XPLAIN_STYLE() is called. Then, I&apos;d&lt;br/&gt;
somehow run those INSERT statements through the SQL compiler, and save&lt;br/&gt;
the execution data structures that the compiler produces, and then later, when&lt;br/&gt;
the visitor code wants to capture the query plans to the tables, it would somehow&lt;br/&gt;
conceptually &apos;execute&apos; those saved INSERT statements.&lt;/p&gt;</comment>
                            <comment id="12680511" author="rhillegas" created="Tue, 10 Mar 2009 15:37:08 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I would be tempted to not worry much about synonyms and views. It&apos;s true, those edge-cases could arise but I think the probability is very low, the negative consequences are slight, and the workaround is easy (turn off plan-gathering until you understand what&apos;s broken). I don&apos;t think you have to worry about schema mismatch for this first increment--the person who wants to change the shape of these tables can work through those issues later on.&lt;/p&gt;</comment>
                            <comment id="12693644" author="bryanpendleton" created="Mon, 30 Mar 2009 05:01:08 +0100"  >&lt;p&gt;Attached &apos;userSchemaPrototyping.diff&apos; is a substantially modified patch. I&apos;ve been&lt;br/&gt;
working on prototyping a new approach, placing the XPLAIN tables into a user schema.&lt;/p&gt;

&lt;p&gt;This patch is not ready; it barely compiles, and definitely doesn&apos;t work. But I&apos;ve&lt;br/&gt;
done a lot of investigation into the new approach, and wanted to post the patch&lt;br/&gt;
to keep the work on the community&apos;s radar.&lt;/p&gt;

&lt;p&gt;The new code:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;renames the system procedures to SET_XPLAIN_SCHEMA and GET_XPLAIN_SCHEMA.&lt;/li&gt;
	&lt;li&gt;SET_XPLAIN_SCHEMA now takes a schema name, and creates that schema if&lt;br/&gt;
it doesn&apos;t yet exist.&lt;/li&gt;
	&lt;li&gt;then the system procedure creates the six XPLAIN tables in that schema.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I still need to do the work so that the captured XPLAIN data is stored into those tables.&lt;/p&gt;

&lt;p&gt;Plus there&apos;s an enormous amount of error-handling, testing, and clean up that will need to be done.&lt;/p&gt;

&lt;p&gt;But I&apos;m pleased with the progress so far, and felt it was worthy of posting.&lt;/p&gt;</comment>
                            <comment id="12693873" author="rhillegas" created="Mon, 30 Mar 2009 19:41:50 +0100"  >&lt;p&gt;Thanks for the patch, Bryan. I have a couple comments:&lt;/p&gt;

&lt;p&gt;XPLAINUtil.getStatementType():&lt;/p&gt;

&lt;p&gt;In addition to upper-casing the sql text, I think that you should also trim() leading whitespace before you look for DML tokens.&lt;/p&gt;


&lt;p&gt;Catalogs:&lt;/p&gt;

&lt;p&gt;Maybe I&apos;m mis-reading the patch or maybe I grabbed the wrong patch, but it seems to me that this patch still creates system tables to hold the plan statistics. I do like the intended approach of creating the tables in a user-specified schema.&lt;/p&gt;


&lt;p&gt;LanguageConnectionContext.setXplainMode() and getXPlainMode():&lt;/p&gt;

&lt;p&gt;I think it would be good to introduce some named constants for these modes and then use them instead of hard-coded numbers.&lt;/p&gt;


&lt;p&gt;General approach:&lt;/p&gt;

&lt;p&gt;There seem to be three jobs which the statistics collector has to perform:&lt;/p&gt;

&lt;p&gt;1) Pick an order in which to walk the graph.&lt;/p&gt;

&lt;p&gt;2) Find node-specific details.&lt;/p&gt;

&lt;p&gt;3) Decide where and how to persist the details.&lt;/p&gt;

&lt;p&gt;This work is divided between two authorities:&lt;/p&gt;

&lt;p&gt;A) The swarm of node-specific statistics holders in package org.apache.derby.impl.sql.execute.rts &lt;/p&gt;

&lt;p&gt;B) The visitor, XPLAINSystemTableVisitor&lt;/p&gt;

&lt;p&gt;(For the record, I&apos;m puzzled by the swarm of statistics holders in (A). That suggests to me an old mis-factoring of the problem--but that&apos;s an ancient design decision which falls outside the scope of this improvement.)&lt;/p&gt;

&lt;p&gt;(A) is responsible for (1) and (B) is responsible for (3). That division makes sense to me. This structure will make it possible to write visitors which do something fancier, like fork the statistics stream  to a monitoring process or feed the forked stream back into the optimizer so that the optimizer can learn from its mistakes.&lt;/p&gt;

&lt;p&gt;However, I&apos;m puzzled that (B) is also responsible for (2). As a consequence of this decision, we see a lot of overloads of visit() in (B). Anyone who wants to implement an alternative visitor will have a lot of work to do. I wonder if this means that (2) should be done by (A) and that we should add a recordDetails() method to the XPLAINable interface. Something like this:&lt;/p&gt;

&lt;p&gt;public interface XPLAINable&lt;/p&gt;
{
    // determines the order in which to walk the graph
    public void accept(...);

    // find the details in this node which need to be recorded
    public void recordDetails(...);
}

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12693936" author="bryanpendleton" created="Tue, 31 Mar 2009 00:08:59 +0100"  >&lt;p&gt;Thanks Rick for the review and comments &amp;#8211; this is quite helpful!&lt;/p&gt;

&lt;p&gt;I&apos;m definitely in the midst of converting the code from the prior system-table approach&lt;br/&gt;
to the new user-table approach, so I&apos;m not surprised you found that part of the patch&lt;br/&gt;
baffling. I&apos;ll continue to work on this, and will also give some thought to the other suggestions&lt;br/&gt;
you made, and hopefully I&apos;ll be back before too long with a more complete and working proposal.&lt;/p&gt;</comment>
                            <comment id="12695777" author="bryanpendleton" created="Sat, 4 Apr 2009 19:50:10 +0100"  >&lt;p&gt;An updated version of the user schema prototyping work. Still VERY far from ready,&lt;br/&gt;
but I made more good progress and wanted to post the updated work.&lt;/p&gt;</comment>
                            <comment id="12696353" author="bryanpendleton" created="Tue, 7 Apr 2009 03:37:54 +0100"  >&lt;p&gt;I made some good progress on &apos;userSchemaPrototyping.diff&apos; and wanted to update it again.&lt;/p&gt;

&lt;p&gt;It now passes many of the tests, which is very cool!&lt;/p&gt;

&lt;p&gt;I am having a bit of problems with jdbc:default:connection, I&apos;ll post&lt;br/&gt;
a message to derby-dev trying to explain the problem and ask for help.&lt;/p&gt;</comment>
                            <comment id="12697064" author="bryanpendleton" created="Wed, 8 Apr 2009 16:41:44 +0100"  >&lt;p&gt;Rick, I&apos;m getting ready to have a go at the re-factoring of the visitor pattern as you suggested.&lt;br/&gt;
I think this is the last major re-working of the patch that should be needed, after which we&lt;br/&gt;
should be ready for more detailed review. I hope to have that version of the patch ready&lt;br/&gt;
before too long.&lt;/p&gt;</comment>
                            <comment id="12697071" author="rhillegas" created="Wed, 8 Apr 2009 16:57:13 +0100"  >&lt;p&gt;Thanks, Bryan. Let me know when you want me to look at the next patch. I&apos;ll try to be responsive although I&apos;m a little mired in investigating some of the defects which have come up during 10.5 testing. Thanks.&lt;/p&gt;</comment>
                            <comment id="12698108" author="bryanpendleton" created="Sat, 11 Apr 2009 18:06:39 +0100"  >&lt;p&gt;Attached patch &apos;refactorVisitor.diff&apos; represents the results of re-factoring the&lt;br/&gt;
interactions between the XPLAINSystemTableVisitor and the various&lt;br/&gt;
ResultSetStatistics classes, hopefully along the lines of what Rick was&lt;br/&gt;
suggesting in his feedback.&lt;/p&gt;

&lt;p&gt;I think the re-factoring was successful; at least, the patch is 40% smaller&lt;br/&gt;
than it was a month ago, and I think that the code is cleaner because&lt;br/&gt;
the knowledge of the details of the various RS Statistics classes is moved&lt;br/&gt;
back into those classes where it feels better.&lt;/p&gt;

&lt;p&gt;I believe that this patch reflects the completion of the major revisions suggested&lt;br/&gt;
by the reviews in March:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;capture the data into user tables in an indicated schema, rather than system catalogs&lt;/li&gt;
	&lt;li&gt;encapsulate the result set statistics knowledge with the result sets&lt;/li&gt;
	&lt;li&gt;repackage the table definitions so that they use a simpler representation&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There is still substantial work to be done in the area of testing, and the&lt;br/&gt;
documentation work will also need to be somewhat revised. Also, the upgrade&lt;br/&gt;
processing is not ready yet; I can&apos;t really finalize the upgrade work until there is&lt;br/&gt;
an explicit 10.5 release whose jars I can check into the repository.&lt;/p&gt;

&lt;p&gt;But please if you have a chance have a look at &apos;refactorVisitor.diff&apos; and let me know&lt;br/&gt;
your comments and suggestions.&lt;/p&gt;</comment>
                            <comment id="12698306" author="bryanpendleton" created="Mon, 13 Apr 2009 02:56:16 +0100"  >&lt;p&gt;Attached slightly updated copy of refactorVisitor.diff:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the patch now makes a first-order check for the correct &apos;shape&apos; of the XPLAIN&lt;br/&gt;
   tables when the user calls SET_XPLAIN_SCHEMA.&lt;/li&gt;
	&lt;li&gt;there&apos;s now a test case which verifies the behavior when a table with a&lt;br/&gt;
   non-matching shape is present when SET_XPLAIN_SCHEMA is called.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12698427" author="rhillegas" created="Mon, 13 Apr 2009 17:30:05 +0100"  >&lt;p&gt;Thanks for the new patch, Bryan. I agree that it is much easier to understand. The refactoring looks good.&lt;/p&gt;</comment>
                            <comment id="12701305" author="bryanpendleton" created="Tue, 21 Apr 2009 23:58:41 +0100"  >&lt;p&gt;I&apos;m concerned about the patch&apos;s proposed modification to iapi.sql.execute.RunTimeStatistics.&lt;br/&gt;
The patch proposes to add a reference to impl.sql.execute.rts.ResultSetStatistics.&lt;/p&gt;

&lt;p&gt;This seems like an indication of a layering problem; the internal ResultSetStatistics&lt;br/&gt;
class should not need to be visible through this high-level interface.&lt;/p&gt;

&lt;p&gt;The newly-added method getTopRSS() is only used in one place, in the XPLAINSystemTableVisitor.&lt;br/&gt;
I&apos;m going to investigate whether I can change this API so that it doesn&apos;t expose the implementation class.&lt;/p&gt;

&lt;p&gt;One idea was to replace the current API with a new one, something like:&lt;/p&gt;

&lt;p&gt;  public void acceptFromTopRSS(XPLAINVisitor v)&lt;/p&gt;

&lt;p&gt;which would be implemented in RunTimeStatisticsImpl.java roughly as:&lt;/p&gt;

&lt;p&gt;  if (topResultSetStatistics != null)&lt;br/&gt;
    topResultSetStatistics.accept(v);&lt;/p&gt;

&lt;p&gt;Then the external iapi.sql.execute.RunTimeStatistics interface would only need to be aware of&lt;br/&gt;
the iapi.sql.execute.xplain.XPLAINVisitor interface, which keeps the layering cleaner, I think.&lt;/p&gt;

&lt;p&gt;I&apos;ll give this a try and see if it works.&lt;/p&gt;</comment>
                            <comment id="12701974" author="bryanpendleton" created="Thu, 23 Apr 2009 17:03:25 +0100"  >&lt;p&gt;Attached &apos;finalReview.diff&apos; is the patch I intend to commit over the weekend.&lt;/p&gt;

&lt;p&gt;I&apos;ve been through it and fixed a number of tab/space issues, a number of&lt;br/&gt;
javadoc issues, and tried to improve comments in a few places.&lt;/p&gt;

&lt;p&gt;There&apos;s still a lot of work remaining, but I feel this is worthy of a commit to the trunk,&lt;br/&gt;
where we can gain further experience with the feature and continue to improve it.&lt;/p&gt;</comment>
                            <comment id="12702023" author="rhillegas" created="Thu, 23 Apr 2009 18:43:54 +0100"  >&lt;p&gt;Thanks, Bryan. +1 to this patch and your plan.&lt;/p&gt;</comment>
                            <comment id="12702617" author="bryanpendleton" created="Sat, 25 Apr 2009 00:23:19 +0100"  >&lt;p&gt;I had a small merge with the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4127&quot; title=&quot;ArrayIndexOutOfBoundsException in DatabaseMetaDataTest when run in Soft Upgrade mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4127&quot;&gt;&lt;del&gt;DERBY-4127&lt;/del&gt;&lt;/a&gt; changes, so I&apos;ll do one more clean build and test run before committing.&lt;/p&gt;</comment>
                            <comment id="12702774" author="bryanpendleton" created="Sat, 25 Apr 2009 21:21:44 +0100"  >&lt;p&gt;Committed to the trunk as Subversion revision 768597.&lt;/p&gt;</comment>
                            <comment id="12702856" author="knutanders" created="Sun, 26 Apr 2009 08:15:45 +0100"  >&lt;p&gt;Thanks for all the work on this issue, Bryan. I&apos;m looking forward to testing the new functionality.&lt;/p&gt;

&lt;p&gt;I noticed that there were some failures in jdbc4/TestDbMetaData after the check-in:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/768597-org.apache.derbyTesting.functionTests.suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/768597-org.apache.derbyTesting.functionTests.suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The test is only run when you use Java 6, so it&apos;s easy to miss. I took the liberty to add the new XPLAIN functions SYSCS_GET_XPLAIN_MODE and SYSCS_GET_XPLAIN_SCHEMA to the list of expected functions in that test (see jdbc4tests.diff) and committed revision 768671.&lt;/p&gt;</comment>
                            <comment id="12709657" author="bryanpendleton" created="Fri, 15 May 2009 02:07:18 +0100"  >&lt;p&gt;The patches have been committed to the trunk, the various sub-tasks are complete, and the documentation is visible on the web site. I think we can mark this issue as resolved and deal with any subsequent work in separate issues.&lt;/p&gt;

&lt;p&gt;Felix, thanks again for the contribution!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12646605">DERBY-6216</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12354222" name="Derby physical XPLAIN schema.png" size="42680" author="fbeyer" created="Mon, 26 Mar 2007 16:52:09 +0100"/>
                            <attachment id="12354224" name="RSProtocolNew.pdf" size="226191" author="fbeyer" created="Mon, 26 Mar 2007 16:55:06 +0100"/>
                            <attachment id="12406242" name="finalReview.diff" size="305865" author="bryanpendleton" created="Thu, 23 Apr 2009 17:03:25 +0100"/>
                            <attachment id="12399498" name="incorporateTrunkChanges.diff" size="227147" author="bryanpendleton" created="Thu, 5 Feb 2009 00:00:07 +0000"/>
                            <attachment id="12406459" name="jdbc4tests.diff" size="1760" author="knutanders" created="Sun, 26 Apr 2009 08:15:45 +0100"/>
                            <attachment id="12405295" name="refactorVisitor.diff" size="307520" author="bryanpendleton" created="Mon, 13 Apr 2009 02:56:16 +0100"/>
                            <attachment id="12405237" name="refactorVisitor.diff" size="304467" author="bryanpendleton" created="Sat, 11 Apr 2009 18:06:39 +0100"/>
                            <attachment id="12401181" name="removeSourceDepth.diff" size="504971" author="bryanpendleton" created="Sun, 1 Mar 2009 00:19:53 +0000"/>
                            <attachment id="12354221" name="rts.xls" size="29696" author="fbeyer" created="Mon, 26 Mar 2007 16:50:00 +0100"/>
                            <attachment id="12354223" name="small logical xplain schema.pdf" size="165976" author="fbeyer" created="Mon, 26 Mar 2007 16:53:45 +0100"/>
                            <attachment id="12400712" name="startRegressionTest.diff" size="496106" author="bryanpendleton" created="Sun, 22 Feb 2009 21:47:07 +0000"/>
                            <attachment id="12400570" name="startRegressionTest.diff" size="465513" author="bryanpendleton" created="Fri, 20 Feb 2009 04:03:30 +0000"/>
                            <attachment id="12400996" name="startUpgradeTests.diff" size="508134" author="bryanpendleton" created="Thu, 26 Feb 2009 05:55:37 +0000"/>
                            <attachment id="12399655" name="updateRegressionTests.diff" size="433581" author="bryanpendleton" created="Fri, 6 Feb 2009 15:51:02 +0000"/>
                            <attachment id="12399649" name="updateRegressionTests.diff" size="247285" author="bryanpendleton" created="Fri, 6 Feb 2009 14:18:37 +0000"/>
                            <attachment id="12354231" name="usage.txt" size="4900" author="fbeyer" created="Mon, 26 Mar 2007 17:52:09 +0100"/>
                            <attachment id="12404794" name="userSchemaPrototyping.diff" size="395878" author="bryanpendleton" created="Tue, 7 Apr 2009 03:37:54 +0100"/>
                            <attachment id="12404655" name="userSchemaPrototyping.diff" size="390502" author="bryanpendleton" created="Sat, 4 Apr 2009 19:50:10 +0100"/>
                            <attachment id="12404103" name="userSchemaPrototyping.diff" size="483623" author="bryanpendleton" created="Mon, 30 Mar 2009 05:01:08 +0100"/>
                            <attachment id="12354220" name="xplainClasses.pdf" size="34181" author="fbeyer" created="Mon, 26 Mar 2007 16:44:53 +0100"/>
                            <attachment id="12354232" name="xplain_patch_v1.txt" size="481971" author="fbeyer" created="Mon, 26 Mar 2007 17:58:18 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12414909">DERBY-4062</subtask>
                            <subtask id="12415190">DERBY-4065</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Mar 2007 01:57:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mif:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37465</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>