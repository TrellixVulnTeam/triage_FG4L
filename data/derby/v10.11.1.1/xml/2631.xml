<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2631/DERBY-2631.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2631] Expose existing auto-generated key functionality through more JDBC APIs in embedded mode.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2631</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby currently supports the following JDBC methods for auto-generated keys:&lt;/p&gt;

&lt;p&gt;  // Indicate that we want to retrieve auto-generated key values.&lt;/p&gt;

&lt;p&gt;  Connection.prepareStatement(String sql, int autoGeneratedKeys);&lt;br/&gt;
  Statement.execute(String sql, int autoGeneratedKeys);&lt;br/&gt;
  Statement.executeUpdate(String sql, int autoGeneratedKeys);&lt;/p&gt;

&lt;p&gt;  // Retrieve the auto-generated values (only applies to INSERT statements).&lt;/p&gt;

&lt;p&gt;  ResultSet rs = Statement.getGeneratedKeys();&lt;/p&gt;

&lt;p&gt;The current implementation of getGeneratedKeys() internally maps to the &quot;IDENTITY_VAL_LOCAL()&quot; method, which means that Derby&apos;s implementation only returns generated keys for autoincrement columns (no other default columns are supported).  Further:&lt;/p&gt;

&lt;p&gt;  1. The generated key result set only ever has a single column.  This is&lt;br/&gt;
     because Derby only allows one autoincrement column per table.&lt;/p&gt;

&lt;p&gt;  2. The type of the single column in the result set will be DECIMAL(31,0).&lt;br/&gt;
     This is defined by IDENTITY_VAL_LOCAL().&lt;/p&gt;

&lt;p&gt;  3. The generated key result set will only ever have a single row.  This is&lt;br/&gt;
     because IDENTITY_VAL_LOCAL() only returns values that were assigned as&lt;br/&gt;
     the result of a &lt;b&gt;single row&lt;/b&gt; INSERT statement using a VALUES clause.&lt;br/&gt;
     For a single row INSERT statement, at most one autoincrement value&lt;br/&gt;
     will be generated.&lt;/p&gt;

&lt;p&gt;All of that said, JDBC 3.0 also defines the following methods, which allow the user to explicitly indicate, via column position or column name, the columns for which the auto-generated keys should be made available:&lt;/p&gt;

&lt;p&gt;  Connection.prepareStatement(String sql, String[] columnNames);&lt;br/&gt;
  Connection.prepareStatement(String sql, int[] columnIndexes);&lt;/p&gt;

&lt;p&gt;  Statement.execute(String sql, String[] columNames);&lt;br/&gt;
  Statement.execute(String sql, int[] columIndexes);&lt;/p&gt;

&lt;p&gt;  Statement.executeUpdate(String sql, String[] columnNames);&lt;br/&gt;
  Statement.executeUpdate(String sql, int[] columnIndexes);&lt;/p&gt;

&lt;p&gt;Derby currently throws a &quot;Feature not supported&quot; error for all of these methods.  However, it seems like the above methods could be &quot;mapped&quot; onto the existing Derby behavior with relatively little effort (in embedded mode).  Most of the required code is already in place.&lt;/p&gt;

&lt;p&gt;Doing so would make it easier for applications that rely on the columnNames and/or columnIndexes APIs to work with Derby (assuming the app just wants generated keys for identity (autoincrement) columns).&lt;/p&gt;

&lt;p&gt;Note that this Jira does &lt;b&gt;not&lt;/b&gt; entail removing any of the restrictions nor changing any of the behavior outlined above.  All of that will remain exactly as it is.  This Jira simply exposes the existing functionality (restrictions and all) through additional (standard) API methods. In particular this means that any column specified by index (position) or name must be an auto-increment column for the INSERT table; otherwise Derby should throw an error.  Or put differently, a user who specifies a column name/position will get-&lt;del&gt;in the absence of errors&lt;/del&gt;-the &lt;b&gt;exact&lt;/b&gt; same results as s/he would get from invoking the &quot;(String sql, int autoGeneratedKeys)&quot; method.&lt;/p&gt;

&lt;p&gt;Note also: This Jira is specifically for embedded mode.  I think it would be harder to support these methods for Derby Client and so do not plan to address that.&lt;/p&gt;</description>
                <environment>Embedded mode only.</environment>
        <key id="12368937">DERBY-2631</key>
            <summary>Expose existing auto-generated key functionality through more JDBC APIs in embedded mode.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 May 2007 16:42:59 +0100</created>
                <updated>Thu, 24 Jan 2008 17:31:45 +0000</updated>
                            <resolved>Wed, 16 May 2007 16:17:03 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12494539" author="army" created="Wed, 9 May 2007 18:52:16 +0100"  >&lt;p&gt;Attaching a patch, d2631_v1.patch, which does the following:&lt;/p&gt;

&lt;p&gt;  1. Updates the following JDBC methods so that they no longer throw a &quot;Feature&lt;br/&gt;
     not implemented&quot; error.  Instead they make calls to an already existing&lt;br/&gt;
     internal method and pass in the appropriate arguments:&lt;/p&gt;

&lt;p&gt;      Connection.prepareStatement(String sql, String[] columnNames);&lt;br/&gt;
      Connection.prepareStatement(String sql, int[] columnIndexes);&lt;/p&gt;

&lt;p&gt;      Statement.execute(String sql, String[] columNames);&lt;br/&gt;
      Statement.execute(String sql, int[] columIndexes);&lt;/p&gt;

&lt;p&gt;      Statement.executeUpdate(String sql, String[] columnNames);&lt;br/&gt;
      Statement.executeUpdate(String sql, int[] columnIndexes); &lt;/p&gt;

&lt;p&gt;  2. Changes the (already existing but not currently used) code in&lt;br/&gt;
     sql/execute/InsertResultSet that handles autogen column indexes/names&lt;br/&gt;
     to throw an error for any target column that is not an auto-increment&lt;br/&gt;
     column.  This is because Derby&apos;s implementation of getGeneratedKeys()&lt;br/&gt;
     internally maps to the IDENTITY_VAL_LOCAL() function, which only returns&lt;br/&gt;
     keys for identity (autoincrement) columns.  So if the user specifies&lt;br/&gt;
     something else, we&apos;ll throw an error.&lt;/p&gt;

&lt;p&gt;  3. Changes the names of two existing (but unused) errors to more accurately&lt;br/&gt;
     reflect their intended use (they are now called by the changes for #2).&lt;br/&gt;
     Also changes the text for those errors as the old text seemed a tad&lt;br/&gt;
     awkward.  No regression impact here because the two errors in question&lt;br/&gt;
     were never exposed to users before now.&lt;/p&gt;

&lt;p&gt;  4. Makes a slight change to jdbcapi/statementJdbc30.java (a test) to&lt;br/&gt;
     reflect the new behavior (we no longer throw &quot;Feature not implemented&quot;&lt;br/&gt;
     errors).&lt;/p&gt;

&lt;p&gt;  5. Adds test cases for the newly supported APIs to the JUnit test&lt;br/&gt;
     lang/AutoGenJDBC30Test.java.  This involved adding two more utility&lt;br/&gt;
     methods to junit/BaseJDBCTestCase.java, as well.&lt;/p&gt;

&lt;p&gt;I ran derbyall and suites.All on SUSE Linux with ibm142 and the only failures were those which also show up in the Tinderbox results.  I.e. they are not caused by these changes.  So I believe this patch is ready for commit.&lt;/p&gt;

&lt;p&gt;Review comments or other feedback are appreciated...&lt;/p&gt;</comment>
                            <comment id="12494541" author="kmarsden" created="Wed, 9 May 2007 18:59:32 +0100"  >&lt;p&gt;I am a little hesitant about introducing this new difference between embedded and client.  Will it be possible with some future work to implement this functionality for client?&lt;/p&gt;</comment>
                            <comment id="12494570" author="army" created="Wed, 9 May 2007 21:53:55 +0100"  >&lt;p&gt;&amp;gt; Will it be possible with some future work to implement this functionality for client?&lt;/p&gt;

&lt;p&gt;I have not looked in detail at how to implement this for client, but I would be surprised if such a thing was not possible with some future work.  My guess, though, is that it will require more work than was needed for embedded (most of the embedded code already existed).  Since the fish I&apos;m hoping to fry right now is limited to embedded, and since there does not appear to be a straightforward mapping to the client code, I was hoping to focus this Jira on embedded only.&lt;/p&gt;

&lt;p&gt;But as far as I know there&apos;s no reason this functionality couldn&apos;t be implemented in client, once someone has the desire to fry that fish.  It may be more difficult, but it seems like it should be possible...&lt;/p&gt;</comment>
                            <comment id="12494599" author="kmarsden" created="Thu, 10 May 2007 00:06:38 +0100"  >&lt;p&gt;Thanks Army.  It would be great if you could open an issue for client and link to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-310&quot; title=&quot;Document and/or change Derby client code to match behavior with Embedded driver where possible.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-310&quot;&gt;&lt;del&gt;DERBY-310&lt;/del&gt;&lt;/a&gt; once this goes in.&lt;/p&gt;</comment>
                            <comment id="12495236" author="knutanders" created="Sat, 12 May 2007 08:29:49 +0100"  >&lt;p&gt;I&apos;m +1 to the patch. I don&apos;t consider this as introducing differences between embedded and the client, but rather as making the embedded driver more complete, which is a good thing. I agree with Kathey that we should open an issue for the client driver and link it to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-310&quot; title=&quot;Document and/or change Derby client code to match behavior with Embedded driver where possible.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-310&quot;&gt;&lt;del&gt;DERBY-310&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12495664" author="army" created="Mon, 14 May 2007 16:56:28 +0100"  >&lt;p&gt;Thank you very much for your feedback, Kathey and Knut Anders.  I will indeed create a new issue for client driver once the changes for this Jira are committed.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to commit within the next day or so if there are no other comments.&lt;/p&gt;</comment>
                            <comment id="12496061" author="army" created="Tue, 15 May 2007 18:39:14 +0100"  >&lt;p&gt;Committed _v1 patch with patch with svn # 538260:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=538260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=538260&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2653&quot; title=&quot;Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2653&quot;&gt;&lt;del&gt;DERBY-2653&lt;/del&gt;&lt;/a&gt; for the Derby Client and linked that issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-310&quot; title=&quot;Document and/or change Derby client code to match behavior with Embedded driver where possible.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-310&quot;&gt;&lt;del&gt;DERBY-310&lt;/del&gt;&lt;/a&gt;, as requested by Kathey and Knut Anders.&lt;/p&gt;

&lt;p&gt;Thanks again for the feedback.&lt;/p&gt;</comment>
                            <comment id="12496324" author="army" created="Wed, 16 May 2007 16:17:03 +0100"  >&lt;p&gt;Tinderbox run ran cleanly after commit, so resolving this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12369417">DERBY-2653</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12356986" name="d2631_v1.patch" size="25500" author="army" created="Wed, 9 May 2007 18:52:16 +0100"/>
                            <attachment id="12356987" name="d2631_v1.stat" size="670" author="army" created="Wed, 9 May 2007 18:52:16 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12369418">DERBY-2654</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 May 2007 17:59:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30545</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0znb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39593</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>