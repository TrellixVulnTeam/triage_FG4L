<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-953/DERBY-953.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-953] Add miscellaneous Statement methods introduced by JDBC 4</title>
                <link>https://issues.apache.org/jira/browse/DERBY-953</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;As described in the JDBC 4 spec, sections 13.1 and 3.1.&lt;/p&gt;

&lt;p&gt;This adds support for new Statement methods added by JDBC4 and not addressed by other JIRAs: isClosed() and getResultSetHoldability().&lt;/p&gt;</description>
                <environment></environment>
        <key id="12328844">DERBY-953</key>
            <summary>Add miscellaneous Statement methods introduced by JDBC 4</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Feb 2006 08:29:46 +0000</created>
                <updated>Wed, 1 Jul 2009 01:34:41 +0100</updated>
                            <resolved>Fri, 24 Mar 2006 03:13:48 +0000</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12369882" author="kristwaa" created="Sat, 11 Mar 2006 00:46:50 +0000"  >&lt;p&gt;Uploaded patch &apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-953&quot; title=&quot;Add miscellaneous Statement methods introduced by JDBC 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-953&quot;&gt;&lt;del&gt;DERBY-953&lt;/del&gt;&lt;/a&gt;-1a.diff&apos; for implementing Statement.isClosed() on both client and embedded side.&lt;br/&gt;
There seems to be a bug in Derby, where Statements are not closed when the parent connection is. The problem is not seem when testing the client side, but it might still be the case that the problem do occur &quot;under the hood&quot; on the server/embedded side. Created issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1095&quot; title=&quot;Closing an embedded connection does not seem to close associated EmbedStatements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1095&quot;&gt;&lt;del&gt;DERBY-1095&lt;/del&gt;&lt;/a&gt; for the bug.&lt;/p&gt;

&lt;p&gt;No tests are uploaded yet, as they are dependent on some JUnit changes. Will be handled as a separate Jira issue.&lt;br/&gt;
Derbyall has not been run for this patch, as it is only created two new methods that return variables.&lt;br/&gt;
All tests will be run as part of the testing issue. The new tests will basically test the existing implementation.&lt;/p&gt;

&lt;p&gt;I leave it up to a committer if the patch is delayed until the testing is in place or not, as the patch is rather simple.&lt;/p&gt;

&lt;p&gt;As a side note, it is possible to implement isClosed() to return the intended values despite the bug described. However, in my opinion, this will only mask the bug, thus it is better to implement it as it is done in the current patch and wait for the bug to be fixed.&lt;br/&gt;
If we want to have correct results despite the bug, we only need to have isClosed() check the status of the parent connection before checking it&apos;s own state, but the Statement would actually not be closed even though isClosed() says it is...&lt;/p&gt;

&lt;p&gt;BTW: getResultSetHoldability() is already implemented (JDBC3?).&lt;/p&gt;</comment>
                            <comment id="12369884" author="kristwaa" created="Sat, 11 Mar 2006 00:49:09 +0000"  >&lt;p&gt;Statement.isClosed() will not return correct values on the embedded side when parent connection is closed until the blocking issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1095&quot; title=&quot;Closing an embedded connection does not seem to close associated EmbedStatements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1095&quot;&gt;&lt;del&gt;DERBY-1095&lt;/del&gt;&lt;/a&gt; is resolved.&lt;/p&gt;</comment>
                            <comment id="12370709" author="kristwaa" created="Fri, 17 Mar 2006 00:35:13 +0000"  >&lt;p&gt;&apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-953&quot; title=&quot;Add miscellaneous Statement methods introduced by JDBC 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-953&quot;&gt;&lt;del&gt;DERBY-953&lt;/del&gt;&lt;/a&gt;-2a.diff&apos; implements EmbedStatement.isClosed() in different way. If the statement is marked as active, it goes to the parent connection to verify this. Tests have been run locally, but they are not yet submitted for commit. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1097&quot; title=&quot;Add tests for Statement.isClosed()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1097&quot;&gt;&lt;del&gt;DERBY-1097&lt;/del&gt;&lt;/a&gt; for testing code.&lt;br/&gt;
Derbyall has not been run, the patch only adds new code that is not used anywhere yet.&lt;br/&gt;
Implementation is in line with the comment for the initial submission, and with the comments on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1095&quot; title=&quot;Closing an embedded connection does not seem to close associated EmbedStatements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1095&quot;&gt;&lt;del&gt;DERBY-1095&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Nothing have been changed for the client side since the previous patch. See &apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-953&quot; title=&quot;Add miscellaneous Statement methods introduced by JDBC 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-953&quot;&gt;&lt;del&gt;DERBY-953&lt;/del&gt;&lt;/a&gt;-1a.stat&apos; for svn status (unchanged).&lt;/p&gt;

&lt;p&gt;Please review, and when acceptable, commit.&lt;/p&gt;</comment>
                            <comment id="12370762" author="davidvc" created="Fri, 17 Mar 2006 06:53:29 +0000"  >&lt;p&gt;I don&apos;t like the approach of using an exception to determine if the statement is closed.  I see your motivation &amp;#8211; you want to reuse the code that sets active to false.  I think the better way to do this is to refactor out the code inside checkExecStatus() that sets the active field, thusly:&lt;/p&gt;

&lt;p&gt;protected final boolean checkActive() throws SQLException &lt;/p&gt;
{
  if (!getConnection().isClosed())
    return true;

  active = false;
  return false;
}

&lt;p&gt;protected final void checkExecStatus() throws SQLException {&lt;br/&gt;
  if ( ! checkActive() ) &lt;/p&gt;
{
    throw Util.noCurrentConnection();
  }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;public boolean isClosed() throws SQLException &lt;/p&gt;
{
  if ( active )
    checkActive();

  return !active;
}</comment>
                            <comment id="12370794" author="kristwaa" created="Fri, 17 Mar 2006 16:47:33 +0000"  >&lt;p&gt;The code snippet posted in the previous comment still has the same problem as the original code, which was the reason why I returned true in the catch block.&lt;br/&gt;
A NoCurrentConnection exception can be thrown in getConnection(). active would then still not be set to false, and isClosed would throw this exception. I do not like that isClosed can throw an exception in this case, and in this situation I would dare say a NoCurrentConnection is the same as the statement being closed and we could simply return true.&lt;/p&gt;

&lt;p&gt;So I don&apos;t quite see how the new proposal would solve the issue. It would also introduce yet another method for checking the state, taking the number up to three; checkStatus, checkExecStatus and checkActive.&lt;/p&gt;

&lt;p&gt;If you still want this to happen, give me a little more pushback, I&apos;m not yet convinced I want to do this.&lt;br/&gt;
I do however see that I could have checked that the exception thrown actually is a NoCurrentConnection exception, and then re-throw the exception if it is not.&lt;br/&gt;
Would that ease your concerns?&lt;/p&gt;

</comment>
                            <comment id="12370874" author="davidvc" created="Sat, 18 Mar 2006 03:50:47 +0000"  >&lt;p&gt;Sorry, I missed that about getConnection().  But my point still stands, we shouldn&apos;t use exceptions for making decisions mainline execution.&lt;/p&gt;

&lt;p&gt;We can refactor getConnection() using the same approach:&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Try to get the connection.  Returns null if it&apos;s not valid&lt;br/&gt;
 */&lt;br/&gt;
protected final Connection getConnectionInternal() {&lt;br/&gt;
    java.sql.Connection appConn = getEmbedConnection().getApplicationConnection();&lt;br/&gt;
    if (appConn != applicationConnection) 
{
        appCon = null;

    return appConn;
}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Check the status without throwing an exception.  Returns true if the statement&lt;/li&gt;
	&lt;li&gt;is active and has a valid, open connection, false otherwise&lt;br/&gt;
*/&lt;br/&gt;
protected final boolean checkExecNoException() 
{
    Connection conn = getConnectionInternal();
    if ( conn == null  || conn.isClosed() )
      active = false;

    return active;
}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;protected final void checkExecStatus() throws SQLException &lt;/p&gt;
{
   checkStatus();

   if ( ! checkExecStatusNoException() )
       throw Util.noCurrentConnection()
}

&lt;p&gt;public final java.sql.Connection getConnection() throws SQLException &lt;/p&gt;
{
    checkStatus();

    java.sql.Connection appConn = getConnectionInternal();

    if ( appConn == null ) 
        throw Util.noCurrentConnection();
}

&lt;p&gt;public final boolean isClosed() throws SQLException &lt;/p&gt;
{
    return (  ! active ||  checkExecStatusNoException() );
}

</comment>
                            <comment id="12371411" author="kristwaa" created="Wed, 22 Mar 2006 18:33:21 +0000"  >&lt;p&gt;&apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-953&quot; title=&quot;Add miscellaneous Statement methods introduced by JDBC 4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-953&quot;&gt;&lt;del&gt;DERBY-953&lt;/del&gt;&lt;/a&gt;-3a.diff&apos; is a patch implementing pretty much what David suggested. I made some corrections, and I also had to add a try-catch block to the &apos;checkExecStatusNoException&apos;-method, because we are using the Connection-interface there, not the EmbedConnection implementation. It is not quite clear to me if we can get another Connection-implementation there, but I have assumed so. If the connection is &lt;b&gt;always&lt;/b&gt; an EmbedConnection, we could cast.&lt;/p&gt;

&lt;p&gt;Other comments:&lt;br/&gt;
1) The patch has some white-space changes. The file contains a mix of tabs and spaces, and I chose to use spaces for the patch.&lt;br/&gt;
2) The patch also has some Javadoc fixes.&lt;br/&gt;
3) My StatementTest passes (embedded and DerbyNetClient, JCC excluded due to missing JDBC4 support).&lt;br/&gt;
4) I ran derbyall, but made some minor changes afterwards. The first one passed, the second run is ongoing. I will report if errors occur.&lt;/p&gt;

&lt;p&gt;Patch can be reviewed and committed.&lt;/p&gt;</comment>
                            <comment id="12371424" author="djd" created="Wed, 22 Mar 2006 23:24:27 +0000"  >&lt;p&gt;I was expecting the patch to be very similar to the one for ResultSet.isClosed(), but it seems to have gained in complexity for little value.&lt;/p&gt;

&lt;p&gt;Not sure I understand David&apos;s comment about &quot;using exception for mainline decisions&quot;, I don&apos;t see that happening in the simpler version&lt;br/&gt;
of the patch (ie. one similar to the changes made for ResultSet.isClosed()). An execption is only used when the Statement is closed, that&apos;s&lt;br/&gt;
not the mainline execution, it&apos;s the exception case.&lt;/p&gt;

&lt;p&gt;Sorry, I wasn&apos;t able to comment earlier, I&apos;ve been busy,.&lt;/p&gt;</comment>
                            <comment id="12371440" author="davidvc" created="Thu, 23 Mar 2006 01:49:41 +0000"  >&lt;p&gt;I could be stubborn about my point of view, but I think that&apos;s not worthwhile.  Dan has a good point, and Kristian has also pointed out to me that there are exceptions all the way down so there&apos;s no way to avoid catching an exception.&lt;/p&gt;

&lt;p&gt;So I must humbly apologize to Kristian and say I think I have to agree with Dan that the first patch is simpler and is more in line with ResultSet.isClosed().&lt;/p&gt;

&lt;p&gt;I would like it to check for a &lt;b&gt;specific&lt;/b&gt; SQL State (e.g. SQLState.NO_CURRENT_CONNECTION) rather than swallow any old exception.   I&apos;ll make that change and commit.&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12371480" author="djd" created="Thu, 23 Mar 2006 07:03:01 +0000"  >&lt;p&gt;Why do you need to check for a specific state, the field active tells you everything you need to know?&lt;/p&gt;

&lt;p&gt;A ResultSet can still be open and the check methods throw no current connection, this is the case when the ResultSet is open&lt;br/&gt;
in a global transaction but the transaction is detached from the connection.&lt;/p&gt;

&lt;p&gt;Statement may fall along the same lines.&lt;/p&gt;
</comment>
                            <comment id="12371482" author="djd" created="Thu, 23 Mar 2006 07:06:18 +0000"  >&lt;p&gt;I think this is the correct fix, a slightly modified version of the second patch, removing the assumption that if&lt;br/&gt;
checkExecStatus throws an exception that the statement is closed. This them matches the ResultSet.isClosed() approach.&lt;/p&gt;

&lt;p&gt;     /**&lt;br/&gt;
+     * Tell whether this statment has been closed or not.&lt;br/&gt;
+     *&lt;br/&gt;
+     * @return &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; is closed, &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt; otherwise.&lt;br/&gt;
+     * @exception SQLException if a database access error occurs.&lt;br/&gt;
+     */&lt;br/&gt;
+    public boolean isClosed() &lt;br/&gt;
+        throws SQLException {&lt;br/&gt;
+        // If active, verify state by consulting parent connection.&lt;br/&gt;
+        if (active) {&lt;br/&gt;
+            try &lt;/p&gt;
{
+                checkExecStatus();
+            }
&lt;p&gt; catch (SQLException sqle) &lt;/p&gt;
{
+            }
&lt;p&gt;+        }&lt;br/&gt;
+        return !active;&lt;br/&gt;
+    }&lt;/p&gt;</comment>
                            <comment id="12371486" author="davidvc" created="Thu, 23 Mar 2006 07:27:28 +0000"  >&lt;p&gt;Thanks for your tips on this, Dan.  Your version looks just right.  I&apos;ll wait to hear from Kristian, but if he&apos;s OK, I can make the change you suggest and commit.&lt;/p&gt;</comment>
                            <comment id="12371489" author="davidvc" created="Thu, 23 Mar 2006 07:53:00 +0000"  >&lt;p&gt;One question on this: your example swallows &lt;b&gt;any&lt;/b&gt; SqlException.  I think this assumes that the only possible exception is going to be NO_CURRENT_CONNECTION.  Is that a fair assumption?  I can&apos;t say I fully understand the code.  Shouldn&apos;t we be throwing other exceptions besides NO_CURRENT_CONNECTION?&lt;/p&gt;</comment>
                            <comment id="12371497" author="djd" created="Thu, 23 Mar 2006 08:42:21 +0000"  >&lt;p&gt;No, that&apos;s not the assumption I made. The assumption is that after a call to checkExecStatus() the active field will correctly represent the closed/open state of the Statement. I can add comments to three methods that are involved in this code stating what exceptions they throw if you think that will help.&lt;/p&gt;</comment>
                            <comment id="12371501" author="davidvc" created="Thu, 23 Mar 2006 08:55:33 +0000"  >&lt;p&gt;I guess I just feel uncomfortable with swallowing &lt;b&gt;all&lt;/b&gt; exceptions.  Can you explain it to me like I were a novice why that&apos;s OK in this case?  Why wouldn&apos;t it be better to check for the specific exception?&lt;/p&gt;</comment>
                            <comment id="12371608" author="djd" created="Fri, 24 Mar 2006 02:33:55 +0000"  >&lt;p&gt;Not really sure what explanations you are looking for David, I just clarified the javadoc comments for EmbedStatement.checkStatus and checkExecStatus based upon a few minutes of code inspection. Modifying the javadoc firms up the contract this method is exposing and thus the code in isClosed() is allowed to make assumptions&lt;br/&gt;
based upon that contract.&lt;/p&gt;

&lt;p&gt;The  checkExecStatus method only throws execeptions in two cases, one the statement is closed and two the statement is part of a non-active global transaction.&lt;br/&gt;
In either of those two cases and the no exception case after the execution the active field correctly represents the open state of the Statement.&lt;/p&gt;

&lt;p&gt;One exception thrown is the NO_CURRENT_CONNECTION sql state, means either :&lt;br/&gt;
                    the Statement is open but in a suspended transaction (isClosed needs to return false)&lt;br/&gt;
                    the Statement has been closed implicitly due to its connection being closed and this is the first&lt;br/&gt;
                    call against the Statement that has noticed the connection has been closed. (isClosed needs to return true)&lt;/p&gt;

&lt;p&gt;The other is ALREADY_CLOSED, means either :&lt;br/&gt;
                     the Statement has been explictly closed  (isClosed needs to return true)&lt;br/&gt;
                     the Statement has been closed implicitly and a previous checkExecStatus threw a  NO_CURRENT_CONNECTION (isClosed needs to return true)&lt;/p&gt;


&lt;p&gt;Thus only catching NO_CURRENT_CONNECTION would be wrong as ALREADY_CLOSED is a valid exception that could occur&lt;br/&gt;
here and require isClosed() to return true. Thus we are left with needing to catch the two exceptions that this method can throw, which seems,&lt;br/&gt;
to me, to be the same as catching everything.&lt;/p&gt;

</comment>
                            <comment id="12371613" author="davidvc" created="Fri, 24 Mar 2006 03:01:42 +0000"  >&lt;p&gt;Thanks, Dan, this was what I&apos;m looking for.  I&apos;m working on committing this patch.&lt;/p&gt;</comment>
                            <comment id="12371615" author="davidvc" created="Fri, 24 Mar 2006 03:13:48 +0000"  >&lt;p&gt;Resolved, revision 388234.  With StatementTest.junit added to the jdbc40 test suite, the suite passes.  I did not run derbyall because this is a JDBC4-specific method, and only new, JDBC4-specific code was added; no existing code was modified.&lt;/p&gt;</comment>
                            <comment id="12372089" author="kristwaa" created="Tue, 28 Mar 2006 19:41:43 +0100"  >&lt;p&gt;Task completed.&lt;/p&gt;</comment>
                            <comment id="12430652" author="rhillegas" created="Fri, 25 Aug 2006 23:08:30 +0100"  >&lt;p&gt;Ported &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-935&quot; title=&quot;Include Derby logo in the PDF and HTML Book manuals&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-935&quot;&gt;&lt;del&gt;DERBY-935&lt;/del&gt;&lt;/a&gt; / &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1565&quot; title=&quot;Adjust documentation to comply with latest Apache copyright/license requirements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1565&quot;&gt;&lt;del&gt;DERBY-1565&lt;/del&gt;&lt;/a&gt; (433814) to 10.2 branch at subversion revision 436974.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12330137">DERBY-1095</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12324026" name="DERBY-953-1a.diff" size="2071" author="kristwaa" created="Sat, 11 Mar 2006 00:46:50 +0000"/>
                            <attachment id="12324027" name="DERBY-953-1a.stat" size="127" author="kristwaa" created="Sat, 11 Mar 2006 00:46:50 +0000"/>
                            <attachment id="12324261" name="DERBY-953-2a.diff" size="2374" author="kristwaa" created="Fri, 17 Mar 2006 00:35:13 +0000"/>
                            <attachment id="12324446" name="DERBY-953-3a.diff" size="5806" author="kristwaa" created="Wed, 22 Mar 2006 18:33:20 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12330142">DERBY-1097</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 11 Mar 2006 00:46:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29802</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0srb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>