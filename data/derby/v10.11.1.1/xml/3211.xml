<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3211/DERBY-3211.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3211] Convert derbynet/NSinSameJVM.java to junit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3211</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12382691">DERBY-3211</key>
            <summary>Convert derbynet/NSinSameJVM.java to junit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mkutty">Manjula Kutty</assignee>
                                    <reporter username="mkutty">Manjula Kutty</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Nov 2007 19:36:55 +0000</created>
                <updated>Wed, 1 Jul 2009 00:40:18 +0100</updated>
                            <resolved>Wed, 19 Dec 2007 22:07:42 +0000</resolved>
                                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12543226" author="mkutty" created="Fri, 16 Nov 2007 22:51:36 +0000"  >&lt;p&gt;Please review this patch and if looks good please commit. I didn&apos;t delete the NSinSameJVM.java from derbyall. Will do that once this patch gets commited.&lt;/p&gt;</comment>
                            <comment id="12543227" author="djd" created="Fri, 16 Nov 2007 23:09:36 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Are there comments as to why a different security policy file is needed? It didn&apos;t jump out at me what was different about these policy files.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Instead of code like this you can use the utility method: JDBC.assertDrainResults()&lt;br/&gt;
+			while (rs.next()) 
{
+				rs.getString(1);
+			}
&lt;p&gt;+			rs.close();&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In a test fixture (e.g. testStartAndShutdown) there&apos;s no need to catch Exception like this:&lt;br/&gt;
+		} catch (Exception e) 
{
+			System.out.print(&quot;FAIL: Unexpected exception&quot; + e.getMessage());
+			e.printStackTrace();
+		}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Junit will report a failure if an exception is thrown from a fixture.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In testStartAndShutdown() any idea what this comment means? Since the fixture finishes there is no test code making sure of anything so&lt;br/&gt;
I wonder what it&apos;s trying to sat?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+			// Leave the connection open before shutdown to make &lt;br/&gt;
+			// sure the thread closes down.&lt;/p&gt;

&lt;p&gt;testStartAndShutdown() doesn&apos;t actually start the network server, that&apos;s handled by the decorator, right? If so the description and name of the fixture is misleading.&lt;/p&gt;






</comment>
                            <comment id="12543633" author="mkutty" created="Mon, 19 Nov 2007 18:51:14 +0000"  >&lt;p&gt;Thank you for your comments Dan. Here are my thoughts regrding your questions. If I&apos;m wrong in any context please correct me.&lt;/p&gt;

&lt;p&gt;I created a different policy file since the network server is started on a different port other than 1527.&lt;/p&gt;

&lt;p&gt;I will look in to the JDBC.assertDrainResults()  and will change my code accordingly. Will submit a patch soon with this change&lt;/p&gt;

&lt;p&gt;Actually the test is not doing any explicit connecction.close(). Instead, it just shuts down the server and make sure no exceptions are thrown.&lt;/p&gt;

&lt;p&gt;Yes. I agree that the server is started using the decorator. Will change the function name. &lt;/p&gt;
</comment>
                            <comment id="12543654" author="mkutty" created="Mon, 19 Nov 2007 19:44:01 +0000"  >&lt;p&gt;Submitting new patch which takes care of Dan&apos;s comments. Please review and if looks good please commit&lt;/p&gt;</comment>
                            <comment id="12543675" author="djd" created="Mon, 19 Nov 2007 20:32:57 +0000"  >&lt;p&gt;Manjula&amp;gt; I created a different policy file since the network server is started on a different port other than 1527.&lt;/p&gt;

&lt;p&gt;Is it required, I don&apos;t see anything in the policy file that refers to port 1527?&lt;/p&gt;</comment>
                            <comment id="12543712" author="mkutty" created="Mon, 19 Nov 2007 22:26:59 +0000"  >&lt;p&gt;If I don&apos;t give a seperate policy file for the port 20000 (which I used in this test) the test fails with the following exception.&lt;/p&gt;

&lt;p&gt;$ java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.derby&lt;br/&gt;
net.NSinSameJVMTest&lt;br/&gt;
.java.security.AccessControlException: access denied (java.net.SocketPermission&lt;br/&gt;
0.0.0.0:20000 connect,resolve)&lt;br/&gt;
        at java.security.AccessControlContext.checkPermission(AccessControlConte&lt;br/&gt;
xt.java:264)&lt;br/&gt;
        at java.security.AccessController.checkPermission(AccessController.java:&lt;br/&gt;
427)&lt;br/&gt;
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)&lt;br/&gt;
        at java.lang.SecurityManager.checkConnect(SecurityManager.java:1034)&lt;br/&gt;
        at java.net.Socket.connect(Socket.java:513)&lt;br/&gt;
        at java.net.Socket.connect(Socket.java:469)&lt;br/&gt;
        at java.net.Socket.&amp;lt;init&amp;gt;(Socket.java:366)&lt;br/&gt;
        at java.net.Socket.&amp;lt;init&amp;gt;(Socket.java:208)&lt;br/&gt;
        at javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:202)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl$6.run(NetworkServ&lt;br/&gt;
erControlImpl.java:2358)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.setUpSocket(Netwo&lt;br/&gt;
rkServerControlImpl.java:2329)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.shutdown(NetworkS&lt;br/&gt;
erverControlImpl.java:927)&lt;br/&gt;
        at org.apache.derby.drda.NetworkServerControl.shutdown(NetworkServerCont&lt;br/&gt;
rol.java:348)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.derbynet.NSinSameJVMTest.&lt;br/&gt;
testShutdown(NSinSameJVMTest.java:70)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
        at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
95)&lt;br/&gt;
        at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
        at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
        at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
        at junit.textui.TestRunner.main(TestRunner.java:138)&lt;/p&gt;

&lt;p&gt;So I thought the default hostname and ipaddress defaults to the default port of 1527. Should the policy file accept all the ports, without explicitly giving them in the policy file? If so then this will be a bug, else I need a seperate policy file just for the different port.&lt;/p&gt;</comment>
                            <comment id="12543714" author="djd" created="Mon, 19 Nov 2007 22:39:41 +0000"  >&lt;p&gt;This is because your test &lt;b&gt;and&lt;/b&gt; policy file is using a different &lt;b&gt;host&lt;/b&gt; (0.0.0.0), not because it&apos;s using a different port number.&lt;/p&gt;

&lt;p&gt;The policy file already handles a settable host file using derbyTesting.serverhost, I wonder though if this test should just use the default host (a different port number is fine) and not specifically 0.0.0.0. In special testing of 0.0.0.0 is needed then it probably should be set at a test configuration level and not hard-coded within a test.&lt;/p&gt;
</comment>
                            <comment id="12543736" author="mkutty" created="Mon, 19 Nov 2007 23:56:53 +0000"  >&lt;p&gt;Yes, I agree with you Dan. And I think it is OK to use the localhost instead of 0.0.0.0. So I made the changes accordingly and now there is no seperate policy file for this test. Please review this latest patch.&lt;/p&gt;</comment>
                            <comment id="12544855" author="myrna" created="Thu, 22 Nov 2007 17:51:15 +0000"  >&lt;p&gt;I thought the latest patch looked good, and as there were no further comments, I committed it to trunk with revision 597456, and removed the old test and masters etc. with revision 597466.&lt;/p&gt;

&lt;p&gt;I intend to backport this to 10.3 - tomorrow.&lt;/p&gt;</comment>
                            <comment id="12545134" author="myrna" created="Fri, 23 Nov 2007 22:20:05 +0000"  >&lt;p&gt;backported to 10.3 with revision 597751.&lt;/p&gt;</comment>
                            <comment id="12545172" author="knutanders" created="Sat, 24 Nov 2007 12:20:06 +0000"  >&lt;p&gt;Reopening the issue since there are some remaining problems:&lt;/p&gt;

&lt;p&gt;1) Dan&apos;s comment about try/catch/println is not addressed. As the test is written now, JUnit won&apos;t ever notice if the test fails, since all exceptions are swallowed.&lt;/p&gt;

&lt;p&gt;2) I don&apos;t think the port number and host name should be hard coded in the test. Instead of &quot;localhost&quot;, TestConfiguration.getHostName() should be used. Also, I think we need to add a method to TestConfiguration called getAlternativePort() or something, instead of hard coding the port number 20000 in the test. The point of centralizing the allocation of port numbers in TestConfiguration, is to enable people to run multiple JUnit tests in parallel on the same machine without conflicting with each other (there was an effort some time ago to achieve this, I don&apos;t remember how far they got). If we start hard-coding port numbers in the tests, this becomes much more difficult.&lt;/p&gt;

&lt;p&gt;I also think the new decorator methods in TestConfiguration should not take port number as an argument, as that will encourage more tests to use arbitrary port numbers. Instead we should name them differently (e.g., defaultServerDecoratorWithAlternativePort), remove the port parameter, and let them use getAlternativePort() internally.&lt;/p&gt;

&lt;p&gt;3) Class header for NSinSameJVMTest header says DRDAProtocolTest.&lt;/p&gt;

&lt;p&gt;4) testShutdown() has a comment which says &quot;Just connect, do something and close the connection&quot;, but there is no code to close the connection (or the statement) as far as I can see.&lt;/p&gt;

&lt;p&gt;5) NSinSameJVMTest.java contains a mixture of tabs/spaces, which I think should be avoided in new files.&lt;/p&gt;

&lt;p&gt;6) The new method TestConfiguration.defaultServerDecorator(Test,int) has a comment which says &quot;This looks bogus to me.&quot; That doesn&apos;t sound very comforting... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;7) Why does the test need to sleep for five seconds before it finishes? It would be good to document this in a comment.&lt;/p&gt;</comment>
                            <comment id="12545642" author="myrna" created="Mon, 26 Nov 2007 23:22:03 +0000"  >&lt;p&gt;Coincidentally, I wrote a silly getAlternatePort() method for the TestConfiguration class.&lt;/p&gt;

&lt;p&gt;Maybe some review of the method will be useful here - it&apos;ll take a bit longer before I have the test I&apos;m working on (testProperties.java) converted. This is what I have so far:&lt;/p&gt;

&lt;p&gt;    public int getAlternativePort() throws SQLException {&lt;/p&gt;

&lt;p&gt;        Exception failException = null;&lt;br/&gt;
        // start with the default port + 1&lt;br/&gt;
        // there may be a smarter way to get the starting point...&lt;br/&gt;
        int possiblePort = getPort();&lt;br/&gt;
        if (!(possiblePort &amp;gt; 0))&lt;br/&gt;
            possiblePort = 1528;&lt;br/&gt;
        else&lt;br/&gt;
            possiblePort = getPort() + 1;&lt;br/&gt;
        try {&lt;br/&gt;
            boolean portOK = false;&lt;br/&gt;
            while (!portOK) {&lt;br/&gt;
                // check for first one in use&lt;br/&gt;
                NetworkServerControl networkServer =&lt;br/&gt;
                    new NetworkServerControl(InetAddress.getByName(&quot;localhost&quot;), possiblePort);&lt;br/&gt;
                // Ping and wait for the network server to reply&lt;br/&gt;
                boolean started = false;&lt;/p&gt;

&lt;p&gt;                    try &lt;/p&gt;
{
                        networkServer.ping();
                        // If ping throws no exception the server is running
                        started = true;
                    }
&lt;p&gt; catch(Exception e) &lt;/p&gt;
{         
                        failException = e;
                    }
&lt;p&gt;                // Check if we got a reply on ping&lt;br/&gt;
                if (!started) &lt;/p&gt;
{
                    // we&apos;ll assume we can use this port. 
                    // If there was some other problem with the pinging, it&apos;ll
                    // become clear when someone attempts to use the port
                    portOK = true;
                }
&lt;p&gt;                else &lt;/p&gt;
{ // this port&apos;s in use.
                    possiblePort = possiblePort + 1;
                }
&lt;p&gt;            }&lt;br/&gt;
        } catch (Exception e) &lt;/p&gt;
{
            SQLException se = new SQLException(&quot;Error pinging network server&quot;);
            se.initCause(failException);
            throw se;
        }
&lt;p&gt;        &lt;br/&gt;
        return possiblePort;&lt;br/&gt;
    }&lt;/p&gt;</comment>
                            <comment id="12545775" author="knutanders" created="Tue, 27 Nov 2007 09:58:09 +0000"  >&lt;p&gt;Hi Myrna,&lt;/p&gt;

&lt;p&gt;I think this getAlternativePort() method attempts to do too much. I would expect it just to return a port number, and that two subsequent calls would return the same number. Starting the server in a getter method also feels a little strange. I liked Manjula&apos;s approach with using NetworkServerTestSetup to start and stop the server better, if only the port number was defined in TestConfiguration instead of in the test itself.&lt;/p&gt;

&lt;p&gt;If the alternative port is not available, I think it is OK that the test fails, since that would be a problem with the environment, the same way as if the default port was not available or the hard disk was full.&lt;/p&gt;</comment>
                            <comment id="12545924" author="myrna" created="Tue, 27 Nov 2007 17:17:45 +0000"  >&lt;p&gt;I see your point, the method is very specific to something I don&apos;t see how to accomplish with decorators/setups in converting testProperties.&lt;/p&gt;</comment>
                            <comment id="12545929" author="myrna" created="Tue, 27 Nov 2007 17:25:42 +0000"  >&lt;p&gt;On that note...&lt;br/&gt;
This test originally did something unique in the old test harness, which always kicked off a separate process for networkserver.&lt;br/&gt;
Now, in the junit framework, we&apos;re &lt;b&gt;always&lt;/b&gt; starting networkserver within the same jvm, so what is the use of this test?&lt;/p&gt;</comment>
                            <comment id="12545936" author="mkutty" created="Tue, 27 Nov 2007 17:34:23 +0000"  >&lt;p&gt;I had the same question and found out that, now the test is used to test starting the server and shutdown with a different port and also shutting down with one open connection, and also felt it is good to have such a test. &lt;/p&gt;</comment>
                            <comment id="12547226" author="djd" created="Fri, 30 Nov 2007 17:59:57 +0000"  >&lt;p&gt;The end of the fixture (testShutdown) has this line:&lt;/p&gt;

&lt;p&gt;    Thread.sleep(5000)&lt;/p&gt;

&lt;p&gt;Any idea why? It would be good to comment why this test is sleeping for 5 seconds at the end, if it&apos;s not required it should be removed.&lt;/p&gt;</comment>
                            <comment id="12551997" author="mkutty" created="Sat, 15 Dec 2007 00:29:27 +0000"  >&lt;p&gt;Attaching my latest patch. Please review and if looks good please commit&lt;/p&gt;</comment>
                            <comment id="12552392" author="knutanders" created="Mon, 17 Dec 2007 12:29:12 +0000"  >&lt;p&gt;Hi Manjula, I think your approach basically looks good. Please see my comments below.&lt;/p&gt;

&lt;p&gt;1) I think this code&lt;/p&gt;

&lt;p&gt;+        NetworkServerControl serverControl = null;&lt;br/&gt;
+        int port = TestConfiguration.getCurrent().getPort();&lt;br/&gt;
+        String hostName = TestConfiguration.getCurrent().getHostName();&lt;br/&gt;
+        serverControl = new NetworkServerControl(InetAddress&lt;br/&gt;
+                .getByName(hostName), port);// initialized for the shutdown.&lt;/p&gt;

&lt;p&gt;could be replaced by a call to NetworkServerTestSetup.getNetworkServerControl()&lt;/p&gt;

&lt;p&gt;2)&lt;br/&gt;
+        try &lt;/p&gt;
{
+            serverControl.shutdown();
+        }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
+            fail(&quot;Unexpected exception&quot; + e.getMessage());
+            e.printStackTrace();
+        }

&lt;p&gt;e.printStackTrace() won&apos;t ever be called, since it&apos;s placed right after a call to fail(). Anyway, I think it is better just to remove the try/catch/fail and let JUnit handle the exception itself.&lt;/p&gt;

&lt;p&gt;3) I can&apos;t see that getNewPort() is used, so it&apos;s probably best to remove it.&lt;/p&gt;

&lt;p&gt;4) It looks like most of the changes in TestConfiguration.java are reformatting/white-space changes. If you could post a new patch which only contained what&apos;s actually changed, it would be easier to review those changes.&lt;/p&gt;</comment>
                            <comment id="12553499" author="mkutty" created="Wed, 19 Dec 2007 21:17:47 +0000"  >&lt;p&gt;Thanks Knut for your input. Please find the attached patch with the recommended changes. If it looks good, please commit&lt;/p&gt;</comment>
                            <comment id="12553514" author="knutanders" created="Wed, 19 Dec 2007 22:07:42 +0000"  >&lt;p&gt;Thanks, Manjula! Committed revision 605719.&lt;/p&gt;</comment>
                            <comment id="12554491" author="mkutty" created="Wed, 26 Dec 2007 23:32:37 +0000"  >&lt;p&gt;Thanks Knut for committing this one&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12379149">DERBY-3088</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12369700" name="DERBY-3211_diff_11_16.txt" size="19754" author="mkutty" created="Fri, 16 Nov 2007 22:51:36 +0000"/>
                            <attachment id="12369810" name="DERBY-3211_diff_11_19.txt" size="20298" author="mkutty" created="Mon, 19 Nov 2007 19:44:01 +0000"/>
                            <attachment id="12369836" name="DERBY-3211_diff_11_19_ver2.txt" size="6096" author="mkutty" created="Mon, 19 Nov 2007 23:56:53 +0000"/>
                            <attachment id="12369699" name="DERBY-3211_stat_11_16.txt" size="266" author="mkutty" created="Fri, 16 Nov 2007 22:51:36 +0000"/>
                            <attachment id="12369809" name="DERBY-3211_stat_11_19.txt" size="352" author="mkutty" created="Mon, 19 Nov 2007 19:44:01 +0000"/>
                            <attachment id="12369835" name="DERBY-3211_stat_11_19_ver2.txt" size="255" author="mkutty" created="Mon, 19 Nov 2007 23:56:53 +0000"/>
                            <attachment id="12371711" name="DERBY_3211_diff_12_14.txt" size="55315" author="mkutty" created="Sat, 15 Dec 2007 00:29:27 +0000"/>
                            <attachment id="12371984" name="DERBY_3211_diff_12_19.txt" size="6570" author="mkutty" created="Wed, 19 Dec 2007 21:17:47 +0000"/>
                            <attachment id="12371710" name="DERBY_3211_stat_12_14.txt" size="169" author="mkutty" created="Sat, 15 Dec 2007 00:29:27 +0000"/>
                            <attachment id="12371983" name="DERBY_3211_stat_12_19.txt" size="169" author="mkutty" created="Wed, 19 Dec 2007 21:17:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Nov 2007 23:09:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30773</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0u7r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38713</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>