<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:53:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5338/DERBY-5338.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5338] When attempting to insert a 4GB stream client gives SQLState XN015 network protocol error vs embedded 22003 data too large for type</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5338</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In converting LobLimits test &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1903&quot; title=&quot;Convert  largedata/LobLimits.java to junit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1903&quot;&gt;&lt;del&gt;DERBY-1903&lt;/del&gt;&lt;/a&gt;, I see that attempting to insert a 4GB stream with client gives the error XN015&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Network protocol error: the specified size of the InputStream, parameter #4, is less than the actual InputStream length.&lt;br/&gt;
	at org.apache.derby.client.net.Request.writePlainScalarStream(Request.java:359)&lt;br/&gt;
	at org.apache.derby.client.net.Request.writeScalarStream(Request.java:247)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementRequest.buildEXTDTA(NetStatementRequest.java:963)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementRequest.writeExecute(NetStatementRequest.java:151)&lt;br/&gt;
	at org.apache.derby.client.net.NetPreparedStatement.writeExecute_(NetPreparedStatement.java:174)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.writeExecute(PreparedStatement.java:1800)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.flowExecute(PreparedStatement.java:2030)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.executeUpdateX(PreparedStatement.java:417)&lt;br/&gt;
	at org.apache.derby.client.am.PreparedStatement.executeUpdate(PreparedStatement.java:403)&lt;br/&gt;
	... 38 more&lt;/p&gt;

&lt;p&gt;vs&apos;s embedded&apos;s 22003, the length exceeds the maximum length for the data type.&lt;/p&gt;

&lt;p&gt;I am not sure if the connection is lost or not. It typically is with protocol errors.&lt;/p&gt;

&lt;p&gt;Look for this bug number in largedata.LobLimits.java for test case.&lt;br/&gt;
You can remove the exclusion for usingDerbyNetClient and run org.apache.derbyTesting.functionTests.tests.largedata.LobLimitsLiteTest &lt;/p&gt;

&lt;p&gt;to reproduce the problem.  I will check the test case in soon as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1903&quot; title=&quot;Convert  largedata/LobLimits.java to junit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1903&quot;&gt;&lt;del&gt;DERBY-1903&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12514250">DERBY-5338</key>
            <summary>When attempting to insert a 4GB stream client gives SQLState XN015 network protocol error vs embedded 22003 data too large for type</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                            <label>derby_triage10_9</label>
                    </labels>
                <created>Fri, 15 Jul 2011 18:35:47 +0100</created>
                <updated>Fri, 17 Feb 2012 18:01:09 +0000</updated>
                                            <version>10.9.1.0</version>
                                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13066266" author="kmarsden" created="Fri, 15 Jul 2011 23:29:20 +0100"  >&lt;p&gt;With revision 1147335 this can be reproduced by removing the if(usingDerbyNetClient() block  in LobLimitsTest and running largedata.LobLimitsLiteTest.&lt;/p&gt;

&lt;p&gt;       try &lt;/p&gt;
{
            insertBlob_SetBlob(&quot;BlobTest #7 (setBlob with 4Gb blob&quot;, conn,
                    insertBlob, _4GbBlob,
                    _4GB, 0, 1, 0);
            fail(&quot;Inserting 4BG blob should have thrown exception&quot;);
        }
&lt;p&gt; catch (SQLException sqle) {&lt;br/&gt;
            // DERBY DOES NOT SUPPORT INSERT OF 4GB BLOB&lt;br/&gt;
            if (usingDerbyNetClient()) &lt;/p&gt;
{
                // DERBY-5338 client gives wrong SQLState and protocol error
                // inserting a 4GB clob. Should be 22003
                assertSQLState(&quot;XN015&quot;,sqle);
            }
&lt;p&gt; else &lt;/p&gt;
{
                assertSQLState(&quot;22003&quot;, sqle);
            }</comment>
                            <comment id="13081489" author="kristwaa" created="Tue, 9 Aug 2011 08:15:47 +0100"  >&lt;p&gt;There may be some relevant information in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2017&quot; title=&quot;Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2017&quot;&gt;&lt;del&gt;DERBY-2017&lt;/del&gt;&lt;/a&gt; regarding exception handling.&lt;br/&gt;
I believe that we now have the tools needed to avoid raising a protocol exception (since Derby 10.6), but I don&apos;t know how much of the existing code that would have to be changed.&lt;/p&gt;</comment>
                            <comment id="13210419" author="kmarsden" created="Fri, 17 Feb 2012 18:01:09 +0000"  >&lt;p&gt;Triaging for 10.9. Marking urgency as normal as this is a disallowed operation, but since the connection is lost, marking it as a crash.  This test in LobLimitsTest should be changed to eliminate the special client condition to reproduce the issue.&lt;/p&gt;


&lt;p&gt;   public void test_02_BlobNegative() throws SQLException {&lt;br/&gt;
        // Negative Test, use setBlob api to insert a 4GB blob.&lt;br/&gt;
        setAutoCommit(false);&lt;br/&gt;
        PreparedStatement insertBlob =&lt;br/&gt;
                prepareStatement(&quot;INSERT INTO BLOBTBL values (?,?,?,?)&quot;);&lt;/p&gt;

&lt;p&gt;        BlobImplT _4GbBlob =&lt;br/&gt;
                new BlobImplT(new RandomByteStreamT(new java.util.Random(),&lt;br/&gt;
                        _4GB), _4GB);&lt;/p&gt;

&lt;p&gt;        try &lt;/p&gt;
{
            insertBlob_SetBlob(&quot;BlobTest #7 (setBlob with 4Gb blob&quot;,
                    insertBlob, _4GbBlob,
                    _4GB, 0, 1, 0);
            fail(&quot;Inserting 4BG blob should have thrown exception&quot;);
        }
&lt;p&gt; catch (SQLException sqle) {&lt;br/&gt;
            // DERBY DOES NOT SUPPORT INSERT OF 4GB BLOB&lt;br/&gt;
            if (usingDerbyNetClient()) &lt;/p&gt;
{
                // DERBY-5338 client gives wrong SQLState and protocol error
                // inserting a 4GB clob. Should be 22003
                assertSQLState(&quot;XN015&quot;,sqle);
            }
&lt;p&gt; else &lt;/p&gt;
{
                assertSQLState(&quot;22003&quot;, sqle);
            }
&lt;p&gt;            commit();&lt;br/&gt;
        }&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12352050">DERBY-1903</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12512461">DERBY-5308</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Aug 2011 07:15:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24780</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0dmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36025</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>