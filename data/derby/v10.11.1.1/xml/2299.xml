<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2299/DERBY-2299.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2299] convert cursor.java to junit</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2299</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Convert cursor.java to junit&lt;/p&gt;</description>
                <environment></environment>
        <key id="12362156">DERBY-2299</key>
            <summary>convert cursor.java to junit</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Feb 2007 00:23:36 +0000</created>
                <updated>Wed, 21 Feb 2007 21:48:27 +0000</updated>
                            <resolved>Wed, 21 Feb 2007 21:48:21 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12472392" author="kmarsden" created="Mon, 12 Feb 2007 19:33:43 +0000"  >&lt;p&gt;First pass at converting cursor.java to junit&lt;/p&gt;</comment>
                            <comment id="12472395" author="kmarsden" created="Mon, 12 Feb 2007 19:40:15 +0000"  >&lt;p&gt;I would appreciate if someone with some junit knowledge would review my conversion of cursor.java to a junit test CursorTest.java.  Please let me know of any improvements needed. This is my first attempt so I would appreciate a thorough review and any input,&lt;/p&gt;
</comment>
                            <comment id="12472412" author="mkutty" created="Mon, 12 Feb 2007 20:54:26 +0000"  >&lt;p&gt;I made a very quick review. And everything works fine. &lt;/p&gt;

&lt;p&gt;I&apos;m also not an expert in the junit world. But here is what I think to make this test look better&lt;/p&gt;

&lt;p&gt;most of the try catch block can be replaced by assertStatementError methods from the BaseJDBCTestCase.java. Please see Dan&apos;s comments for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2283&quot; title=&quot;convert lang/currentof.java test to junit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2283&quot;&gt;&lt;del&gt;DERBY-2283&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12472431" author="kartha" created="Mon, 12 Feb 2007 21:43:25 +0000"  >&lt;p&gt;I applied the patch and was able to run the test succesfully in Embedded. &lt;/p&gt;

&lt;p&gt;Comparing the orginal cursor.java the new test I did not find  the following in the new one:&lt;br/&gt;
testCursorName(&quot;select * from t for update of i&quot;, &quot;myselect&quot;);&lt;/p&gt;


&lt;p&gt;Also, the test seem to run only in embedded mode, are there plans to make it run under Network server?. &lt;br/&gt;
I tried running it under both using &lt;/p&gt;

&lt;p&gt;return TestConfiguration.defaultSuite(CursorTest.class);&lt;/p&gt;

&lt;p&gt;in the suite() method.&lt;/p&gt;

&lt;p&gt;With the Network server I noticed the SQLStates returned are different for line 87:&lt;/p&gt;

&lt;p&gt;assertEquals(&quot;Wrong SQLState thrown&quot;,se.getSQLState(),&quot;24000&quot;);&lt;/p&gt;

&lt;p&gt;I am getting  XJ121 (Invalid operation at current cursor position) instead of the &lt;br/&gt;
expected 24000 (Invalid cursor state - no current row) so the tests failed for me with Network Server.&lt;/p&gt;
</comment>
                            <comment id="12472432" author="kmarsden" created="Mon, 12 Feb 2007 21:50:08 +0000"  >&lt;p&gt;Changes from first patch.&lt;br/&gt;
Manjula recommended I get rid of the try/catch blocks and use methods from BaseJDBCTestCase.  I didn&apos;t see what I needed so added assertNextError assertGetIntError to BaseJDBCTestCase and removed the try/catch blocks from CursorTest&lt;/p&gt;</comment>
                            <comment id="12472451" author="mkutty" created="Mon, 12 Feb 2007 22:56:00 +0000"  >&lt;p&gt;I think the test should run in both modes. There is a difference in the SQL state retuned in the n/w server mode. But the cursor behaviour is same in both. Please see the following discussion.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200702.mbox/%3cwjo8r6sz8zku.fsf@sun.com%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200702.mbox/%3cwjo8r6sz8zku.fsf@sun.com%3e&lt;/a&gt; &lt;/p&gt;

</comment>
                            <comment id="12472487" author="kmarsden" created="Tue, 13 Feb 2007 00:38:24 +0000"  >&lt;p&gt;MK&amp;gt;I think the test should run in both modes. There is a difference in the SQL state retuned in the n/w server mode. &lt;/p&gt;

&lt;p&gt;Thanks Manjula&lt;br/&gt;
I wonder whether we should test the different states in the test or change the client SQLState to match embedded.&lt;br/&gt;
If the answer is to change the test to check for different SQLStates for client,  how do I branch for a different test for client with a junit test?&lt;/p&gt;</comment>
                            <comment id="12472491" author="mkutty" created="Tue, 13 Feb 2007 01:04:59 +0000"  >&lt;p&gt;you can test the different SQL states with usingEmbedded/usingDerbyNet/usingDerbyNetClient methods from the BaseJdBCTestCase.&lt;/p&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;p&gt;if (usingEmbedded())&lt;br/&gt;
	assertStatementError(&quot;24000&quot;, delete);&lt;br/&gt;
else&lt;br/&gt;
	assertStatementError(&quot;XCL07&quot;, delete);&lt;/p&gt;

&lt;p&gt;where delete is the prepared statement&lt;/p&gt;</comment>
                            <comment id="12472525" author="djd" created="Tue, 13 Feb 2007 05:18:13 +0000"  >&lt;p&gt;The use of assertEquals in the converted test has the arguments the wrong way around.&lt;/p&gt;

&lt;p&gt;		assertEquals(1956, cursor.getInt(1));&lt;br/&gt;
		assertEquals(&quot;hello world&quot;, cursor.getString(2).trim());&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.junit.org/junit/javadoc/3.8.1/junit/framework/Assert.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.junit.org/junit/javadoc/3.8.1/junit/framework/Assert.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;static void 	assertEquals(int expected, int actual) &lt;/p&gt;

&lt;p&gt;While it doesn&apos;t make a difference when the test passes, it does when it fails. The output provided by the method will give the wrong information to the person trying to resolve the failure, since the expected and actual will be switched in the message. This has the potential to waste tiem and confuse people.&lt;/p&gt;</comment>
                            <comment id="12472805" author="kmarsden" created="Tue, 13 Feb 2007 18:04:54 +0000"  >&lt;p&gt;Thanks Dan for looking at this.  I do see one that I think is the wrong way around. &lt;br/&gt;
assertEquals(cursor.getCursorName(),&quot;ForCoverageSake&quot;);&lt;/p&gt;

&lt;p&gt;but the ones you quoted seem right to me with the expected value first.&lt;/p&gt;

&lt;p&gt;assertEquals(1956, cursor.getInt(1));&lt;br/&gt;
assertEquals(&quot;hello world&quot;, cursor.getString(2).trim()); &lt;/p&gt;

&lt;p&gt;I tested changing 1956 to a different value and got an error message &quot;expected 19567 but was 1956&quot;&lt;br/&gt;
I am sure I must be missing something quite obvious here, but could you clarify why these are wrong?&lt;/p&gt;</comment>
                            <comment id="12472818" author="djd" created="Tue, 13 Feb 2007 18:30:29 +0000"  >&lt;p&gt;Sorry my fault.&lt;br/&gt;
The first version of the patch had a number of assertEquals() wrong and I made the mistake of thinking it was across the whole class.&lt;br/&gt;
Then I went and quoted the wrong ones, I even know I double checked it, but still messed up. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12350951" name="DERBY_2299.stat" size="546" author="kmarsden" created="Mon, 12 Feb 2007 19:34:05 +0000"/>
                            <attachment id="12350950" name="DERBY_2299.txt" size="7318" author="kmarsden" created="Mon, 12 Feb 2007 19:33:43 +0000"/>
                            <attachment id="12350973" name="DERBY_2299_2.txt" size="22121" author="kmarsden" created="Mon, 12 Feb 2007 21:50:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Feb 2007 20:54:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30366</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy139j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40179</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>