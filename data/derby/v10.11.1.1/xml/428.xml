<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-428/DERBY-428.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-428] NetworkClient PreparedStatement.executeBatch() hangs if batch is too large (ArrayIndexOutOfBoundsException in Network Server)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-428</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When running&lt;/p&gt;

&lt;p&gt;        s.executeUpdate(&quot;create table t (i integer)&quot;);&lt;br/&gt;
        PreparedStatement p = c.prepareStatement(&quot;insert into t values&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&quot;);&lt;br/&gt;
        for (int i=0; i&amp;lt;N; i++) &lt;/p&gt;
{
            p.setInt(1,i);
            p.addBatch();
        }
&lt;p&gt;        System.out.println(&quot;Ok&quot;);&lt;br/&gt;
        p.executeBatch();&lt;/p&gt;


&lt;p&gt;If  N is 9000&lt;br/&gt;
The server reports:&lt;/p&gt;

&lt;p&gt;524272&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException: 524272&lt;br/&gt;
        at org.apache.derby.impl.drda.DDMWriter.startDdm(DDMWriter.java:315)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARD(DRDAConnThread.java:4937)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDs(DRDAConnThread.java:4898)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.writeSQLCARDs(DRDAConnThread.java:4888)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.checkWarning(DRDAConnThread.java:7239)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(DRDAConnThread.java:3605)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:859)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:214)&lt;br/&gt;
agentThread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,main&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;While the client hangs in executeBatch().&lt;/p&gt;

&lt;p&gt;If N is 8000, the client gets the following Exception:&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.derby.client.am.BatchUpdateException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.&lt;br/&gt;
        at org.apache.derby.client.am.Agent.endBatchedReadChain(Agent.java:267)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeBatchRequestX(PreparedStatement.java:1596)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeBatchX(PreparedStatement.java:1467)&lt;br/&gt;
        at org.apache.derby.client.am.PreparedStatement.executeBatch(PreparedStatement.java:945)&lt;br/&gt;
        at AOIB.main(AOIB.java:24)&lt;/p&gt;

</description>
                <environment>Linux atum01 2.4.20-31.9 #1 Tue Apr 13 18:04:23 EDT 2004 i686 i686 i386 GNU/Linux&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_03-b07)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.5.0_03-b07, mixed mode, sharing)&lt;br/&gt;
</environment>
        <key id="12311859">DERBY-428</key>
            <summary>NetworkClient PreparedStatement.executeBatch() hangs if batch is too large (ArrayIndexOutOfBoundsException in Network Server)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="bernt">Bernt M. Johnsen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jul 2005 17:59:42 +0100</created>
                <updated>Thu, 3 May 2007 00:14:41 +0100</updated>
                            <resolved>Thu, 3 May 2007 00:14:41 +0100</resolved>
                                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12314877" author="bernt" created="Fri, 1 Jul 2005 19:31:41 +0100"  >&lt;p&gt;BTW: When the BatchUpdateException is thrown, the connection is closed down (probably due to the ArrayIndexOutOfBoundsException on the server)!&lt;/p&gt;</comment>
                            <comment id="12330002" author="ginns" created="Wed, 21 Sep 2005 00:32:57 +0100"  >&lt;p&gt;We&apos;re getting one similar to this one, but only sporadically.&lt;/p&gt;

&lt;p&gt;Does anyone know a workaround for it?&lt;/p&gt;


</comment>
                            <comment id="12366806" author="bryanpendleton" created="Sat, 18 Feb 2006 00:53:27 +0000"  >&lt;p&gt;startDDM() is missing a call to ensureLength(). Many of the other problems that Bernt was seeing were due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-125&quot; title=&quot;Network Server can send DSS greater than 32K to client, which breaks DRDA protocol.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-125&quot;&gt;&lt;del&gt;DERBY-125&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-491&quot; title=&quot;Protocol exception when Network Server tries to return ~32K of data or greater in a result set for a Java stored procedure.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-491&quot;&gt;&lt;del&gt;DERBY-491&lt;/del&gt;&lt;/a&gt;, I believe.&lt;/p&gt;

&lt;p&gt;With the ensureLength call added to startDDM, I can get up to batch size 65535, at which point I get a wholly different exception. I&apos;ll study that and see if it is related, or if it is an independent bug that I&apos;m just seeing now due to clearing the other bugs that prevented us from getting this far.&lt;/p&gt;</comment>
                            <comment id="12366874" author="bryanpendleton" created="Sat, 18 Feb 2006 10:42:19 +0000"  >&lt;p&gt;The crash on batch element 65535 seems pretty straightforward: correlation IDs in DSS blocks are 2-byte unsigned integers, so of course there can only be 65536 total values. And since values 0, and &quot;-1&quot; (65535) are apparently reserved for some special purposes, that seems to mean that there is a hard limit in the DRDA protocol itself: there can be no more than 65534 elements in a single batch chain.&lt;/p&gt;

&lt;p&gt;From DRDA v.3, page 15:&lt;/p&gt;

&lt;p&gt;  The value of the request correlation identifier is a unique non-negative binary number. Each RQSDSS&lt;br/&gt;
  in a DSS chain must have a unique correlation identifier. The correlation identifier is sent to the target&lt;br/&gt;
  agent that receives the request.&lt;/p&gt;

&lt;p&gt;And on page 772:&lt;/p&gt;

&lt;p&gt;  The request correlator can be set to any positive (number greater than zero) binary number for the&lt;br/&gt;
  first request, or only request, in an RQSDSS chain. Each RQSDSS in an RQSDSS chain after the&lt;br/&gt;
  first one must have a request correlator that is greater than the previous RQSDSS. The request&lt;br/&gt;
  correlator can be set to any value.&lt;/p&gt;

&lt;p&gt;So, that leaves me with the following thoughts:&lt;br/&gt;
1) Am I reading the DRDA spec correctly here (I&apos;ll study it some more)&lt;br/&gt;
2) Is it OK for our implementation to have a hard limit of 65534 elements in a single batch chain?&lt;br/&gt;
3) If so, what should the behavior be if an application tries to add more elements than that? Throw an exception?&lt;/p&gt;
</comment>
                            <comment id="12366899" author="bryanpendleton" created="Sun, 19 Feb 2006 02:18:25 +0000"  >&lt;p&gt;I believe that the 2-byte limit to the number of correlated commands in a single DRDA request is a hard limit.&lt;/p&gt;

&lt;p&gt;I&apos;ve thought of two possible ways to proceed:&lt;br/&gt;
1) The network client could refuse to execute a batch of more than 64K commands.&lt;br/&gt;
2) The network client could break such a giant batch into multiple DRDA requests.&lt;/p&gt;

&lt;p&gt;The second one is substantially more work, but potentially could support an arbitrarily&lt;br/&gt;
large batch size. However, I&apos;m not sure if it introduces some subtle semantic changes&lt;br/&gt;
because the single user-level logical batch is now being decomposed into multiple&lt;br/&gt;
physical batches.&lt;/p&gt;

&lt;p&gt;To misquote Bill Gates, it seems like 64K commands in a single batch ought to be&lt;br/&gt;
enough for anyone, but I&apos;d sure appreciate some more opinions on this topic.&lt;/p&gt;</comment>
                            <comment id="12366904" author="kmarsden" created="Sun, 19 Feb 2006 03:13:10 +0000"  >&lt;p&gt;Bryan said&lt;br/&gt;
&amp;gt;I&apos;ve thought of two possible ways to proceed:&lt;br/&gt;
&amp;gt;1) The network client could refuse to execute a batch of more than 64K commands.&lt;br/&gt;
&amp;gt;2) The network client could break such a giant batch into multiple DRDA requests.&lt;/p&gt;

&lt;p&gt;If I understand this correctly, if we go with 1) would the workaround  just be for the user to break up their batches into  a few batches each with less than 64K statements?  If so,  I think  1)  is fine for now.   We have bigger fish to fry with Network Server.&lt;/p&gt;</comment>
                            <comment id="12366990" author="bryanpendleton" created="Mon, 20 Feb 2006 07:15:05 +0000"  >&lt;p&gt;Attached is a standalone test program, b428.java, for experimenting with the bug, and a patch proposal, derby-428.diff.&lt;/p&gt;

&lt;p&gt;The patch contains a server-side change, a client-side change, and a regression test.&lt;/p&gt;

&lt;p&gt;The server-side change is to call ensureLength() in DDMWriter.startDDM(). The DDMWriter working buffer is designed to dynamically grow to accomodate the data being written; this dynamic growth is implemented using a coding rule which requires that all DDMWriter internal routines must call ensureLength to communicate the buffer size requirements of that routine prior to writing bytes into the buffer. StartDDM was missing the call to ensureLength. It was just luck that this hadn&apos;t caused any problems in the past; this particular bug exposed the problem in startDDM by causing the server to write a tremendous number of very small DDM records in a single correlated chain, which meant that eventually (around batch element 9000), startDDM tried to write past the end of the buffer without calling ensureLength first. Simple change, even if my explanation is not so clear &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The client-side change is due to the fact that DRDA imposes a hard limit of 65535 elements in a single correlated request because the correlation identifier is a two byte unsigned integer. Without this change, what happens is that the correlation identifier wraps around when we go to write the 65536th element in the batch, and we start breaking DRDA protocol rules since DRDA requires that the correlation IDs in a single request be always increasing. The change in this patch proposal causes the client to throw an exception if it is asked to execute a batch containing more than 65534 elements. The reason for the number 65534, rather than 65535, is that the value 0xFFFF seems to be reserved for some special purpose.&lt;/p&gt;

&lt;p&gt;Experimenting with the JCC driver, I discovered that it seems to reserve more than just 0xFFFF, but also 0xFFFE and 0xFFFD as special values; the largest number of elements that I could succcessfully execute in a single batch with the JCC driver is 65532. I don&apos;t know what is going on with those special values, unfortunately.&lt;/p&gt;

&lt;p&gt;The regression test verifies that we can successfully execute a batch containing 65532 elements with both the Network Client and JCC drivers. The test also verifies that, if we are using the Network Client, then we get the expected exception if we try to execute a batch with more than 65534 elements.&lt;/p&gt;

&lt;p&gt;Comments, suggestions, and feedback are welcome!&lt;/p&gt;
</comment>
                            <comment id="12371436" author="bryanpendleton" created="Thu, 23 Mar 2006 01:25:02 +0000"  >&lt;p&gt;I&apos;ve committed this patch: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=387895&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=387895&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12371437" author="bryanpendleton" created="Thu, 23 Mar 2006 01:26:51 +0000"  >&lt;p&gt;Bernt, can you please verify this fix and close the bug if appropriate?&lt;/p&gt;</comment>
                            <comment id="12376027" author="bernt" created="Mon, 24 Apr 2006 21:00:01 +0100"  >&lt;p&gt;Verified. Works perfectly up to 65534 &quot;commands&quot; in batch. Above: Correctly raises org.apache.derby.client.am.BatchUpdateException: No more than 65,534 commands may be added to a single batch.&lt;/p&gt;</comment>
                            <comment id="12422024" author="kmarsden" created="Wed, 19 Jul 2006 05:12:48 +0100"  >&lt;p&gt;reopen to port to 10.1&lt;/p&gt;</comment>
                            <comment id="12422025" author="kmarsden" created="Wed, 19 Jul 2006 05:14:30 +0100"  >&lt;p&gt;reassign for port.&lt;/p&gt;</comment>
                            <comment id="12422307" author="kmarsden" created="Thu, 20 Jul 2006 01:45:57 +0100"  >&lt;p&gt;Attached is the patch derby428_10_1.diff  and derby428_10_1.stat to port this fix to 10.1.  I am seeing derbynetmats hang when running derbynet/testProperties.java. Before it ung on NSInSameJVM but ran ok on rerun.  I am investigating that now.  This patch should not be committed to 10.1 yet.  &lt;/p&gt;</comment>
                            <comment id="12422401" author="kmarsden" created="Thu, 20 Jul 2006 12:54:49 +0100"  >&lt;p&gt;After rebooting my computer I was no longer able to reproduce the testProperties hang.   I think it may have been at least triggered by my firewall sofware and the code path for testProperties should not really trigger any problems with this change which would only be relevant when the DDMWriter buffer exceeds 32K.&lt;/p&gt;

&lt;p&gt;I think the hang may have been related to some interaction with my firewall software.  I will post separately to derby-dev about that as I think there may be a  Network Server issue there.  &lt;/p&gt;

&lt;p&gt;Date: Thu Jul 20 04:47:54 2006&lt;br/&gt;
New Revision: 423910&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=423910&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=423910&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-428&quot; title=&quot;NetworkClient PreparedStatement.executeBatch() hangs if batch is too large (ArrayIndexOutOfBoundsException in Network Server)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-428&quot;&gt;&lt;del&gt;DERBY-428&lt;/del&gt;&lt;/a&gt; NetworkClient PreparedStatement.executeBatch() hangs if batch is too large (ArrayIndexOutOfBoundsException in Network Server)&lt;/p&gt;</comment>
                            <comment id="12493240" author="kmarsden" created="Thu, 3 May 2007 00:13:49 +0100"  >&lt;p&gt;Reopen to port to 10.1&lt;/p&gt;</comment>
                            <comment id="12493241" author="kmarsden" created="Thu, 3 May 2007 00:14:41 +0100"  >&lt;p&gt;errored  reopening this issue&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12356493">DERBY-2113</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323182" name="b428.java" size="1441" author="bryanpendleton" created="Mon, 20 Feb 2006 07:15:05 +0000"/>
                            <attachment id="12323183" name="derby-428.diff" size="5339" author="bryanpendleton" created="Mon, 20 Feb 2006 07:15:05 +0000"/>
                            <attachment id="12337208" name="derby428_10_1.diff" size="5337" author="kmarsden" created="Thu, 20 Jul 2006 01:45:57 +0100"/>
                            <attachment id="12337209" name="derby428_10_1.stat" size="218" author="kmarsden" created="Thu, 20 Jul 2006 01:47:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Sep 2005 23:32:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21951</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy12in:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40058</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>