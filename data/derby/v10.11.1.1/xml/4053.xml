<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4053/DERBY-4053.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4053] Network Server&apos;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log </title>
                <link>https://issues.apache.org/jira/browse/DERBY-4053</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Running suites.All with IBM 1.5  on 10.5.0.0 alpha - (743198)  I got a hang in the test run.  The last test to run successfully was xtestNestedSavepoints, but I am not sure exactly what test caused  the hang.  I took a thread dump which I will attach, which showed network server up and running but no ClientThread and a ping attempt blocked.&lt;/p&gt;

&lt;p&gt;This hang is very similar to the hang that was seen after the fix attempts for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1465&quot; title=&quot;NetworkServerControl.start() should throw an exception and not just  print  exceptions  if the server fails to start&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1465&quot;&gt;&lt;del&gt;DERBY-1465&lt;/del&gt;&lt;/a&gt; but that change was backed out so it is not related to that change.   It could be that the change for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1465&quot; title=&quot;NetworkServerControl.start() should throw an exception and not just  print  exceptions  if the server fails to start&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1465&quot;&gt;&lt;del&gt;DERBY-1465&lt;/del&gt;&lt;/a&gt; just made this highly intermittent problem more likely.&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12414620">DERBY-4053</key>
            <summary>Network Server&apos;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Feb 2009 22:28:19 +0000</created>
                <updated>Mon, 31 Aug 2009 22:31:33 +0100</updated>
                            <resolved>Wed, 15 Jul 2009 18:36:22 +0100</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Network Server</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12672818" author="kmarsden" created="Wed, 11 Feb 2009 22:58:26 +0000"  >&lt;p&gt;Attached are the derby.log, java core dump at the time of the hang, and the System.out of the run.  This was run on a single CPU machine. Windows XP&lt;/p&gt;

</comment>
                            <comment id="12676372" author="myrna" created="Tue, 24 Feb 2009 19:26:54 +0000"  >&lt;p&gt;I&apos;ve seen this also with 10.4 and ibm 1.5, on a machine with 2 cpu, with &apos;hyperthreading&apos; switched on. &lt;br/&gt;
I&apos;ll experiment and see if it changes things if I switch off the hyperthreading.&lt;/p&gt;</comment>
                            <comment id="12682759" author="myrna" created="Tue, 17 Mar 2009 18:59:55 +0000"  >&lt;p&gt;The frequency of the hangs on the machine where I run 10.4 tests have diminished a lot after I had hyperthreading switched off. With it switched on, it was practically every run, and not in the same test everytime.&lt;br/&gt;
However, I did see one more recently.&lt;br/&gt;
In addition to the Net-Bind messages in system/derby.log, I also got this in the test output, not sure if that was an environment quirk or if it&apos;s related to the problem:&lt;br/&gt;
testAllDataSources used 313 ms java.net.SocketException: Connection reset&lt;br/&gt;
	at java.net.SocketInputStream.read(SocketInputStream.java:197)&lt;br/&gt;
	at java.net.SocketInputStream.read(SocketInputStream.java:116)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBuffer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.readResult(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpen(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.ping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.drda.NetworkServerControl.ping(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUp(NetworkServerTestSetup.java:546)&lt;br/&gt;
	at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStart(NetworkServerTestSetup.java:615)&lt;br/&gt;
	at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:191)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:18)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;br/&gt;
F.&lt;br/&gt;
----------------------&lt;br/&gt;
After this, there were a couple more fixtures that apparently went ok:&lt;br/&gt;
----------------------&lt;br/&gt;
connectionJdbc20 used 2109 ms .&lt;br/&gt;
resultsetJdbc20 used 781 ms .&lt;br/&gt;
maxfieldsize used 67593 ms .&lt;br/&gt;
SetQueryTimeoutTest used 43750 ms .&lt;br/&gt;
rsgetXXXcolumnNames used 125 ms .&lt;br/&gt;
savepointJdbc30_JSR169 used 6594 ms .&lt;br/&gt;
testRelative used 94 ms .&lt;br/&gt;
savepointJdbc30_XA used 6516 ms &lt;br/&gt;
----------------------&lt;br/&gt;
      And after that, nothing.&lt;/p&gt;</comment>
                            <comment id="12697647" author="kmarsden" created="Thu, 9 Apr 2009 22:03:12 +0100"  >&lt;p&gt;I hit this on the head of trunk  revision 758826 with some minor changes that shouldn&apos;t affect this.&lt;/p&gt;

&lt;p&gt;java version &quot;1.6.0&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pwi3260sr3-20081106_07(SR3))&lt;br/&gt;
IBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260-20081105_25433 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20081105_025433_lHdSMr&lt;br/&gt;
JIT  - r9_20081031_1330&lt;br/&gt;
GC   - 20081027_AB)&lt;br/&gt;
JCL  - 20081106_01&lt;/p&gt;

&lt;p&gt;The hang happened  after testDerby3799 used 0 ms&lt;/p&gt;

&lt;p&gt;Attempts to bring down network server to get my run going again also failed and I had to kill the run and start over.&lt;/p&gt;

&lt;p&gt;last entry in the log had the tell tale error:&lt;br/&gt;
2009-04-09 20:34:58.156 GMT : Could not listen on port 1527 on host 127.0.0.1:&lt;br/&gt;
 java.net.BindException: Address already in use: JVM_Bind&lt;/p&gt;

&lt;p&gt;An exception was thrown during network server startup. DRDA_ListenPort.S:Could not listen on port 1527 on host 127.0.0.1:&lt;br/&gt;
 java.net.BindException: Address already in use: JVM_Bind&lt;/p&gt;

&lt;p&gt;java.lang.reflect.InvocationTargetException&lt;/p&gt;

&lt;p&gt;	at sun.reflect.GeneratedMethodAccessor1950.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;/p&gt;

&lt;p&gt;	at java.lang.reflect.Method.invoke(Method.java:599)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236)&lt;/p&gt;

&lt;p&gt;	at java.lang.Thread.run(Thread.java:735)&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.Exception: DRDA_ListenPort.S:Could not listen on port 1527 on host 127.0.0.1:&lt;br/&gt;
 java.net.BindException: Address already in use: JVM_Bind&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWork(NetworkServerControlImpl.java:3179)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessage(NetworkServerControlImpl.java:1861)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:731)&lt;/p&gt;

&lt;p&gt;	... 5 more&lt;/p&gt;

</comment>
                            <comment id="12697995" author="kmarsden" created="Fri, 10 Apr 2009 22:55:45 +0100"  >&lt;p&gt;I stumbled across a reliable reproduction for this issue when  trying to enable XATest (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;).  To reproduce apply the patch derby-4053_repro_dont_commit_diff.txt and run jdbcapi._ShortSuite.&lt;/p&gt;

&lt;p&gt;_ShortSuite runs only XATest,DataSourceReferenceTest and J2EEDataSourceTest&lt;br/&gt;
The run gets an invalid reply failure on  testDataSourceReference during a ping and then the hang after testDerby3799.&lt;/p&gt;

&lt;p&gt;I ran with &lt;br/&gt;
java version &quot;1.6.0&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pwi3260sr3-20081106_07(SR3))&lt;br/&gt;
IBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260-20081105_25433 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20081105_025433_lHdSMr&lt;br/&gt;
JIT  - r9_20081031_1330&lt;br/&gt;
GC   - 20081027_AB)&lt;br/&gt;
JCL  - 20081106_01&lt;/p&gt;

</comment>
                            <comment id="12697998" author="kmarsden" created="Fri, 10 Apr 2009 23:04:20 +0100"  >&lt;p&gt;It doesn&apos;t seem to reproduce with the sun jvm&lt;br/&gt;
java version &quot;1.6.0_01&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_01-b06)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.6.0_01-b06, mixed mode)&lt;/p&gt;

&lt;p&gt;I get neither the Invalid Reply, nor the hang.&lt;/p&gt;</comment>
                            <comment id="12698543" author="myrna" created="Mon, 13 Apr 2009 21:34:52 +0100"  >&lt;p&gt;I tried that repro with the same 1.6 sr3 on my windows machine, sane classes, and sane jars, but it didn&apos;t  reproduce for me...&lt;br/&gt;
classpath (in case it matters) was: derby.jar;derbytools.jar;derbynet.jar;derbyclient.jar;derbyrun.jar;derbyTesting.jar;junit.jar&lt;br/&gt;
(with appropriate paths to the various jars).&lt;/p&gt;</comment>
                            <comment id="12700873" author="suranjay" created="Mon, 20 Apr 2009 18:32:57 +0100"  >&lt;p&gt;When testing client/server compatibility with 10.5.1.1.-rc2 and 10.4.2.0 I encountered what seems to be a reproduction of this issue. &lt;br/&gt;
Environment: AMD Phenom II Quad Core CPU, 4GB Ram, Vista 64&lt;/p&gt;

&lt;p&gt;java version &quot;1.6.0_10&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_10-b33)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 11.0-b15, mixed mode, sharing)&lt;/p&gt;


&lt;p&gt;Client - 10.4.2.0. Jars&lt;br/&gt;
-------------------&lt;br/&gt;
derbyTesting.jar&lt;br/&gt;
derbyClient.jar&lt;/p&gt;

&lt;p&gt;Server - 10.5.1.1. Jars&lt;br/&gt;
-------------------&lt;br/&gt;
derby.jar&lt;br/&gt;
derbynet.jar&lt;br/&gt;
derbytools.jar&lt;br/&gt;
derbyLocale*.jar&lt;br/&gt;
derbyrun.jar&lt;/p&gt;

&lt;p&gt;XA40Test.testCallableStatementPoolable fails with the following exception. And then the suite hangs.&lt;br/&gt;
-----------------------------------------------------------------------------------------------------&lt;br/&gt;
testPreparedStatementPoolable used 1 ms .&lt;br/&gt;
testCallableStatementPoolable used 2 ms java.lang.Exception: DRDA_InvalidReplyTooShort.S:Invalid reply from network server: Insufficient data.&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWork(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessage(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBuffer(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.readResult(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpen(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.ping(Unknown Source)&lt;br/&gt;
        at org.apache.derby.drda.NetworkServerControl.ping(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUp(NetworkServerTestSetup.java:546)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStart(NetworkServerTestSetup.java:615)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:191)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
        at junit.textui.TestRunner.doRun(TestRunner.java:121)&lt;br/&gt;
        at junit.textui.TestRunner.start(TestRunner.java:185)&lt;br/&gt;
        at junit.textui.TestRunner.main(TestRunner.java:143)&lt;br/&gt;
F.&lt;br/&gt;
testCreateClob used 16 ms .&lt;br/&gt;
testCreateBlob used 9 ms .&lt;br/&gt;
testConnectionIsValid used 674 ms&lt;br/&gt;
---------&lt;del&gt;&amp;lt;hang&amp;gt;&lt;/del&gt;---------------------&lt;/p&gt;



&lt;p&gt;The log shows the following&lt;br/&gt;
--------------------------------------&lt;br/&gt;
2009-04-20 16:41:07.264 GMT : Apache Derby Network Server - 10.5.1.1 - (764942) started and ready to accept connections on port 1527&lt;br/&gt;
2009-04-20 16:41:10.618 GMT : Invalid reply from network server: Insufficient data.&lt;br/&gt;
2009-04-20 16:41:10.618 GMT : Could not listen on port 1527 on host 127.0.0.1:&lt;br/&gt;
 java.net.BindException: Address already in use: JVM_Bind&lt;br/&gt;
2009-04-20 16:41:12.416 GMT : Could not listen on port 1527 on host 127.0.0.1:&lt;br/&gt;
 java.net.BindException: Address already in use: JVM_Bind&lt;/p&gt;


&lt;p&gt;This hang occurred both times I ran suites.All and also when I ran jdbc4._Suite alone , always on new test folders.&lt;br/&gt;
In the last instance, attempting to kill the hung test with&lt;br/&gt;
java org.apache.derby.drda.NetworkServerControl shutdown&lt;br/&gt;
also hung.&lt;/p&gt;


&lt;p&gt;Javacore file attached.&lt;/p&gt;</comment>
                            <comment id="12700877" author="suranjay" created="Mon, 20 Apr 2009 18:35:58 +0100"  >&lt;p&gt;javacore  for 10.4Client/10.5server compat testing hang. &lt;/p&gt;</comment>
                            <comment id="12718953" author="mikem" created="Fri, 12 Jun 2009 20:46:21 +0100"  >&lt;p&gt;Looking at the javacore the tests are hung waiting on a ping:&lt;br/&gt;
&quot;main&quot; prio=6 tid=0x003e9c00 nid=0x10ac runnable &lt;span class=&quot;error&quot;&gt;&amp;#91;0x0023f000..0x0023fe28&amp;#93;&lt;/span&gt;&lt;br/&gt;
   java.lang.Thread.State: RUNNABLE&lt;br/&gt;
        at java.net.SocketInputStream.socketRead0(Native Method)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:129)&lt;br/&gt;
        at java.net.SocketInputStream.read(SocketInputStream.java:90)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBuffer(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.readResult(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpen(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.ping(Unknown Source)&lt;br/&gt;
        at org.apache.derby.drda.NetworkServerControl.ping(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUp(NetworkServerTestSetup.java:546)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStart(NetworkServerTestSetup.java:615)&lt;br/&gt;
        at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:191)&lt;/p&gt;


&lt;p&gt;If anyone can reproduce this it might be interesting to instrument pingForServerUp to&lt;br/&gt;
see what path it is taking through this code.  Did the while loop go more than once,&lt;br/&gt;
what are all the variables to the routine, did it hit any of the try/catch blocks (some &lt;br/&gt;
don&apos;t do anything), ...&lt;/p&gt;

&lt;p&gt;It seems like this setup code should be changed to not wait forever in the ping since&lt;br/&gt;
the tests seem to be able to break the network server and make it not ping.  So maybe some sort of timer thread could be used to make the ping not take forever.  &lt;br/&gt;
It would be best to understand why the ping is taking forever and maybe if we did&lt;br/&gt;
not hang then we could add more diagnostics to this routine to figure why the ping&lt;br/&gt;
is not returning.&lt;/p&gt;</comment>
                            <comment id="12719001" author="kmarsden" created="Fri, 12 Jun 2009 23:18:47 +0100"  >&lt;p&gt;My gut instinct is that this is some sort of shutdown timing problem with all the server side cleanup that starts about line 807 in NetworkServerControlImpl or perhaps a problem with bring it up in the first place.   The key thing  I notice is there is no ClientThread running which normally accepts new requests, but it does not seem the server socket was closed because there is one DRDAConnThread that is blocked on a read and one ping thread blocked on read that would terminate if the server.socket were closed.&lt;/p&gt;

&lt;p&gt;It would be interesting to trace when this occurs.&lt;br/&gt;
1) calls to shutdown and start&lt;br/&gt;
2) Entry into the for (;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  loop in ClientThread&lt;br/&gt;
3) returns out of the ClientThread loop&lt;br/&gt;
4)     Remove the if(!parent.getShudown()) in this code so we always print the IOException if it occurs. Perhaps there is an exception we are not seeing.&lt;br/&gt;
 if (!parent.getShutdown()) &lt;/p&gt;
{
                            parent.consoleExceptionPrintTrace(ioe);
                            if (clientSocket != null)
                                clientSocket.close();
                        }</comment>
                            <comment id="12721062" author="kmarsden" created="Thu, 18 Jun 2009 05:51:39 +0100"  >&lt;p&gt;I noticed this happened on the IBM 10.4 run last night and  had the DRDA_InvalidReplyTooShort.S:Invalid reply from network server: Insufficient data trace on a ping shortly before the hang.  I looked briefly at how this might occur, that a ping would return insufficient data.&lt;/p&gt;

&lt;p&gt;A ping would go through this code in DRDAConnThread:&lt;br/&gt;
private void sessionInitialState()&lt;br/&gt;
		throws Exception&lt;br/&gt;
	{&lt;br/&gt;
		// process NetworkServerControl commands - if it is not either valid protocol  let the &lt;br/&gt;
		// DRDA error handling handle it&lt;br/&gt;
		if (reader.isCmd())&lt;br/&gt;
		{&lt;br/&gt;
			try &lt;/p&gt;
{
				server.processCommands(reader, writer, session);
				// reset reader and writer
				reader.initialize(this, null);
				writer.reset(null);
				closeSession();
			}
&lt;p&gt; catch (Throwable t) {&lt;br/&gt;
				if (t instanceof InterruptedException)&lt;br/&gt;
					throw (InterruptedException)t;&lt;br/&gt;
				else&lt;/p&gt;
				{
					server.consoleExceptionPrintTrace(t);
				}
&lt;p&gt;			}&lt;/p&gt;

&lt;p&gt;In NetworkServerControlImpl during shutdown we do the following which might interrupt  the thread:&lt;br/&gt;
	synchronized (threadList)&lt;br/&gt;
		{&lt;br/&gt;
 			//interupt any connection threads still active&lt;br/&gt;
 			for (int i = 0; i &amp;lt; threadList.size(); i++)&lt;br/&gt;
 			{&lt;br/&gt;
				final DRDAConnThread threadi = (DRDAConnThread)threadList.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;/p&gt;

&lt;p&gt; 				threadi.close();&lt;br/&gt;
				AccessController.doPrivileged(&lt;br/&gt;
							new PrivilegedAction() {&lt;br/&gt;
								public Object run() &lt;/p&gt;
{
									threadi.interrupt();
									return null;
								}
&lt;p&gt;							});&lt;br/&gt;
 			}&lt;br/&gt;
 			threadList.clear();&lt;br/&gt;
		}&lt;/p&gt;

&lt;p&gt;It seems a kind of abrupt way to shutdown the threads. Would calling threadi() close()  be more appropriate so it could finish what it was doing?  I am also unclear about the state of the cleanup when such an interrupt occurs during the middle of writing a response.&lt;/p&gt;

&lt;p&gt;Tomorrow I will try putting a sleep between the reply header and the OK byte on the ping response and try to shutdown at the same time  to  see if I can get the InvalidReplyTooShort and then see if subsequent connection attempts hang.&lt;/p&gt;

</comment>
                            <comment id="12725630" author="mamtas" created="Tue, 30 Jun 2009 14:59:13 +0100"  >&lt;p&gt;Based on Kathey&apos;s suggestion, I tried putting sleep in the Network Server code right in the middle of ping protocol handshake.&lt;/p&gt;

&lt;p&gt;Following is what happens for ping on the server side (in NetworkServerControlImpl)&lt;br/&gt;
private void sendOK(DDMWriter writer) throws Exception &lt;/p&gt;
{ 
      writeCommandReplyHeader(writer); 
      writer.writeByte(OK); 
      writer.flush(); 
} 
&lt;p&gt;I have copied the sendOK code inline where the ping is handled in NetworkServerControlImpl.processCommands(). Additionally, I changed that copied code to have the server sleep after writing the header but before sending the ok to the ping client as shown below.&lt;br/&gt;
      writeCommandReplyHeader(writer);&lt;br/&gt;
      writer.flush();&lt;br/&gt;
      System.out.println(&quot;before going to sleep&quot;);&lt;br/&gt;
      Thread.sleep(10000);&lt;br/&gt;
      System.out.println(&quot;after sleep&quot;);&lt;br/&gt;
      writer.writeByte(OK);&lt;br/&gt;
      System.out.println(&quot;after sending OK&quot;);&lt;br/&gt;
      writer.flush();&lt;br/&gt;
      System.out.println(&quot;after flushing OK&quot;);&lt;br/&gt;
With the code changes above, I thought I would be able to reproduce the bug if I tried shutting down server while the server was still sleeping during ping handshake (ie before the ping protocol handshake is all finished). What I found was that the server shutdown properly, ping client got expected Invalid reply from network server: Insufficient data. We thought that if we tried bringing the server back up and tried ping on the new server session, it will hang because of the earlier insufficient data but that didn&apos;t happen. A hang here would have probably duplicated the intermittent hang behavior that we see when the nightly tests are running.&lt;/p&gt;

&lt;p&gt;Little more info on exact steps for the test case above&lt;br/&gt;
Window 1 : Start the server&lt;br/&gt;
	java org.apache.derby.drda.NetworkServerControl -noSecurityManager start -p 1639&lt;br/&gt;
Window 2 : ping the server (this put the server in the sleep mode)&lt;br/&gt;
	java org.apache.derby.drda.NetworkServerControl ping -p 1639&lt;br/&gt;
Window 3: while server is sleeping, send shutdown request&lt;br/&gt;
	java org.apache.derby.drda.NetworkServerControl shutdown -p 1639&lt;/p&gt;

&lt;p&gt;After spending more time on the experiment above, found that the ping client was getting&lt;br/&gt;
insufficient data because of the &quot;writer.flush()&quot; which I added right before &lt;br/&gt;
Thread.sleep(...). This happened both with Sun and IBM jvms(1.6 versions). once I took the &lt;br/&gt;
additional writer.flush() out, the ping client ran successfully and there was no insufficient&lt;br/&gt;
data error.&lt;/p&gt;

&lt;p&gt;The goal here is to get a consistently (small) reproducible test case which will make debugging the problem easier but have not been to cause the ping to run into insufficient data in a small repro yet. Will brainstorm more but in the meantime, if anyone has any ideas&lt;br/&gt;
on what may be causing the insufficient data error, I can pursue those.&lt;/p&gt;</comment>
                            <comment id="12726172" author="mamtas" created="Wed, 1 Jul 2009 19:34:35 +0100"  >&lt;p&gt;Wanted to post some progress on this issue&lt;br/&gt;
1)First of all, I don&apos;t need to run the entire suite anymore to run into hang problem. Just running the jdbc4 suite is enough to repro the problem. that is saving tons of time with reproducing the bug on my machine when running with 10.5 server jars and 10.4 client jars&lt;br/&gt;
2)jdbc4 suite is consistently hanging in jdbc4.ConnectionMethodsTest&lt;br/&gt;
3)The problem is not really with the test that is hung, rather it is the previous test jdbc4.UnsupportedVetter&lt;br/&gt;
4)After lonts and lots of printlns in the network server code, it appears the problem might be that XA connections may not be cleaning up properly and hence the server can&apos;t shutdown successfully. But ofcourse as this jira shows, we do not handle that case properly. This leads into server not getting shutdown when the junit test is expecting it to be shutdown. The next test when it tries to bring the server up can&apos;t do that successfully.&lt;/p&gt;

&lt;p&gt;The next step is to come up with a XA test case to repro the improper cleanup of XA connection.&lt;/p&gt;

&lt;p&gt;Following is the stack trace that I have added into my codeline showing XA connection not closing properly&lt;/p&gt;

&lt;p&gt;java.sql.SQLException: Cannot close a connection while a transaction is still active.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:103)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:167)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.newSQLExceptionEmbedConnection.java:2948)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.checkForTransactionInProgress(EmbedConnection.java:1806)&lt;br/&gt;
        at org.apache.derby.jdbc.EmbedPooledConnection.checkCloseEmbedPooledConnection.java:459)&lt;br/&gt;
        at org.apache.derby.jdbc.EmbedXAConnection.checkCloseEmbedXAConnection.java:152)&lt;br/&gt;
        at org.apache.derby.iapi.jdbc.BrokeredConnection.close(BrokeredConnection.java:169)&lt;br/&gt;
        at org.apache.derby.impl.drda.Database.close(Database.java:362)&lt;br/&gt;
        at org.apache.derby.impl.drda.Session.close(Session.java:115)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:838)&lt;br/&gt;
        at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:599)&lt;br/&gt;
        at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:735)&lt;br/&gt;
Caused by: java.sql.SQLException: Cannot close a connection while a transaction is still active.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:73)&lt;br/&gt;
        ... 16 more&lt;/p&gt;</comment>
                            <comment id="12726225" author="kmarsden" created="Wed, 1 Jul 2009 21:56:27 +0100"  >&lt;p&gt;With the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3319&quot; title=&quot;Logical connections do not check if a transaction is active on close&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3319&quot;&gt;&lt;del&gt;DERBY-3319&lt;/del&gt;&lt;/a&gt; fix I think this is much more likely to occur at a user site.  Marking Urgent to try to get it into the 10.5.2 release.&lt;/p&gt;

&lt;p&gt;I actually would have thought this would be a regression associated with 10.5 after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3319&quot; title=&quot;Logical connections do not check if a transaction is active on close&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3319&quot;&gt;&lt;del&gt;DERBY-3319&lt;/del&gt;&lt;/a&gt;, but Myrna has reported the problem on 10.4 as well.  If it is a regression, it should probably move to BLOCKER.&lt;br/&gt;
Thank you Mamta for tracking down this issue.&lt;/p&gt;

&lt;p&gt;I see three  parts to the fix:&lt;br/&gt;
1) Do a better job of cleaning up XA Connections.  For local transactions we can rollback, but we need to be more careful to do the right thing if a global transaction is in progress.  We cannot simply rollback a prepared transaction.&lt;/p&gt;

&lt;p&gt;2) Make sure an exception during shutdown processing does not prevent the remaining shutdown tasks, like closing the server socket from occurring.&lt;/p&gt;

&lt;p&gt;3) Make sure any exceptions that occur in shutdown processing are reported to the console.&lt;/p&gt;</comment>
                            <comment id="12726251" author="knutanders" created="Wed, 1 Jul 2009 23:41:00 +0100"  >&lt;p&gt;Taking this from memory... I thought XA wasn&apos;t supposed to be affected by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3319&quot; title=&quot;Logical connections do not check if a transaction is active on close&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3319&quot;&gt;&lt;del&gt;DERBY-3319&lt;/del&gt;&lt;/a&gt;. See my comment dated 07/Jul/08 01:57 AM on that issue. Or perhaps it was just global XA transactions that weren&apos;t affected by it. Will have to check later.&lt;/p&gt;</comment>
                            <comment id="12726413" author="knutanders" created="Thu, 2 Jul 2009 10:51:34 +0100"  >&lt;p&gt;I checked the code, and connections associated with a global XA transaction can still be closed without being committed or rolled back first. Local XA connections will fail if they are attempted closed while they have uncommitted operations.&lt;/p&gt;</comment>
                            <comment id="12726437" author="knutanders" created="Thu, 2 Jul 2009 12:30:53 +0100"  >&lt;p&gt;This code in impl.drda.Database.close() probably needs to be changed to check if the connection is a global XA transaction, and not only that it&apos;s XA:&lt;/p&gt;

&lt;p&gt;			if ((conn != null) &amp;amp;&amp;amp; !conn.isClosed())&lt;br/&gt;
			{&lt;br/&gt;
				if (! forXA)&lt;/p&gt;
				{
					conn.rollback();
				}
&lt;p&gt;				conn.close();					&lt;br/&gt;
			}&lt;/p&gt;</comment>
                            <comment id="12727536" author="kmarsden" created="Mon, 6 Jul 2009 15:00:27 +0100"  >&lt;p&gt;I think that sounds fine for item #1 in my list above. Perhaps we need a new method in the EngineConnection interface (inLocalTransaction()) to determine the transaction state?  Then we also need to take care of the other two items I listed above so we don&apos;t have problems in the future with errors in shutdown causing this kind of difficult to track down problem.&lt;/p&gt;
</comment>
                            <comment id="12728768" author="kmarsden" created="Wed, 8 Jul 2009 17:30:39 +0100"  >&lt;p&gt;Changing to blocker urgency for 10.5.2 at least for the XA hang. The other parts of the fix (proper handling of all exceptions that occur on shutdown and log to console when they occur) could be handled post 10.5.2 with a follow-up issue.&lt;/p&gt;
</comment>
                            <comment id="12729074" author="knutanders" created="Thu, 9 Jul 2009 07:54:37 +0100"  >&lt;p&gt;I&apos;ll try to fix the XA hang along the lines suggested above.&lt;/p&gt;</comment>
                            <comment id="12729079" author="knutanders" created="Thu, 9 Jul 2009 08:22:33 +0100"  >&lt;p&gt;Oops. Just noticed that Kathey had sent a mail to derby-dev asking Mamta to fix this. Unassigning so that I don&apos;t block the issue.&lt;/p&gt;</comment>
                            <comment id="12729297" author="mamtas" created="Thu, 9 Jul 2009 16:35:02 +0100"  >&lt;p&gt;This patch DERBY4053_patch1_diff_July092009.txt is not yet intended for checkin. &lt;/p&gt;

&lt;p&gt;I thought this patch should fix the XA cleanup issue where we were not differentiating between global XA vs local XA transaction and hence not roling back local XA transaction before trying to close the connection. &lt;/p&gt;

&lt;p&gt;Unless my code changes are wrong, it appears though that all the XA tests in jdbc4 suite are non-global XA transactions. Is that right? The reason I ask is, I had printlns in all the implementations of the new method isInGlobalTransaction and they all always return false. I was expecting following method in EmbedXAConnection.java to return true sometimes because we are dealing with global XA transaction.&lt;br/&gt;
Index: java/engine/org/apache/derby/jdbc/EmbedXAConnection.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/engine/org/apache/derby/jdbc/EmbedXAConnection.java    (revision 792143&lt;br/&gt;
)&lt;br/&gt;
+++ java/engine/org/apache/derby/jdbc/EmbedXAConnection.java    (working copy)&lt;br/&gt;
@@ -22,6 +22,7 @@&lt;br/&gt;
 package org.apache.derby.jdbc;&lt;/p&gt;

&lt;p&gt; import org.apache.derby.impl.jdbc.Util;&lt;br/&gt;
+import org.apache.derby.iapi.jdbc.BrokeredConnectionControl;&lt;br/&gt;
 import org.apache.derby.iapi.jdbc.EngineConnection;&lt;br/&gt;
 import org.apache.derby.iapi.jdbc.ResourceAdapter;&lt;/p&gt;

&lt;p&gt;@@ -53,6 +54,11 @@&lt;br/&gt;
                 xaRes = new EmbedXAResource (this, ra);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;+    /** @see BrokeredConnectionControl#isInGlobalTransaction() */&lt;br/&gt;
+    public boolean isInGlobalTransaction() &lt;/p&gt;
{
+       return isGlobal();
+    }
&lt;p&gt;+&lt;br/&gt;
     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Check if this connection is part of a global XA transaction.&lt;br/&gt;
      *&lt;br/&gt;
Can someone review this patch for me? There are not many comments yet. I will put those soon.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am right now also trying to work on a standalone repro case  which will reproduce our theory of local XA transaction not getting rolled back before connection.close and hence the server shutdown does not happen correctly causing next server start to hang. &lt;/p&gt;</comment>
                            <comment id="12729312" author="kmarsden" created="Thu, 9 Jul 2009 17:20:41 +0100"  >&lt;p&gt;Hi Mamta,&lt;/p&gt;

&lt;p&gt;I took a look at DERBY4053_patch1_diff_July092009.txt.  On visual inspection it seems like it should do what we want.&lt;br/&gt;
There is an import of BrokeredConnectionControl in EmbedConnection which should be removed.  &lt;/p&gt;

&lt;p&gt;In your mail to derby-dev, you said &quot;Despite the&lt;br/&gt;
change, I still get the hang. &quot;  Do you still get the InvalidReply? If you put the try/catch block around the shutdown operations, do you still see an exception?&lt;/p&gt;

&lt;p&gt;I did some grepping on the tests in jdbc4 and I think you are right that they only use local transactions.&lt;/p&gt;</comment>
                            <comment id="12729330" author="mamtas" created="Thu, 9 Jul 2009 18:08:01 +0100"  >&lt;p&gt;Sorry, I wasn&apos;t completely awake when i posted on derby-dev that &quot;Despite the change, I still get the hang&quot;. With my changes, I do not see the hang in jdbc4 suite.&lt;/p&gt;</comment>
                            <comment id="12729334" author="kmarsden" created="Thu, 9 Jul 2009 18:15:30 +0100"  >&lt;p&gt;Ahh, good news.&lt;/p&gt;</comment>
                            <comment id="12729427" author="mamtas" created="Thu, 9 Jul 2009 22:54:15 +0100"  >&lt;p&gt;I have a standalone repro of the problem which demonstrates the problem with local XA transaction. I am copying the comments from the program to descibe what it is doing. Next, I will add a test like this in our regression suite and put more comments in the Derby code changes.&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This test does following&lt;/li&gt;
	&lt;li&gt;1)Start the network server&lt;/li&gt;
	&lt;li&gt;2)Start a local xa transaction&lt;/li&gt;
	&lt;li&gt;3)Do not commit the local XA transaction&lt;/li&gt;
	&lt;li&gt;4)Shutdown the network server&lt;/li&gt;
	&lt;li&gt;5)Start the server again&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;Before the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4053&quot; title=&quot;Network Server&amp;#39;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4053&quot;&gt;&lt;del&gt;DERBY-4053&lt;/del&gt;&lt;/a&gt; went in, step 4) would not shutdown the&lt;/li&gt;
	&lt;li&gt;server properly because of the pending local XA transaction. During the&lt;/li&gt;
	&lt;li&gt;server shutdown, we try to close all the open connections and close on&lt;/li&gt;
	&lt;li&gt;the XA connection results into an exception because there is still a&lt;/li&gt;
	&lt;li&gt;pending transaction. That exception is not handled by the server and&lt;/li&gt;
	&lt;li&gt;because of that, all the code necessary to shutdown the server is not&lt;/li&gt;
	&lt;li&gt;executed. The next time around, step 5), when we try to bring up the&lt;/li&gt;
	&lt;li&gt;server again, it ends up hanging&lt;/li&gt;
	&lt;li&gt;2009-07-09 21:21:28.828 GMT : Invalid reply from network server: Insufficient data.&lt;/li&gt;
	&lt;li&gt;2009-07-09 21:21:28.843 GMT : Could not listen on port 1527 on host 127.0.0.1: java.net.BindException: Address already in use: JVM_Bind&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;The patch attached to the jira makes sure that before calling close on&lt;/li&gt;
	&lt;li&gt;local XA transaction, we first rollback any transaction active on the&lt;/li&gt;
	&lt;li&gt;connection. We should also work on server shutdown code to handle the&lt;/li&gt;
	&lt;li&gt;exceptions better so that it does not stop half way.&lt;/li&gt;
	&lt;li&gt;&lt;p&gt; */&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12729428" author="mamtas" created="Thu, 9 Jul 2009 22:59:19 +0100"  >&lt;p&gt;Recopying the standalone repro with correct name this time around.&lt;/p&gt;</comment>
                            <comment id="12729731" author="mamtas" created="Fri, 10 Jul 2009 18:23:13 +0100"  >&lt;p&gt;Attaching the patch DERBY4053_patch2_diff_July102009.txt which is ready for commit. I have added a new test which will not hang anymore because of the pending local XA transaction. If there are no comments on the patch, I will plan on committing it early next week. I will also go ahead and enter new jira entry for doing a better job of handling the exception during server shutdown.&lt;/p&gt;</comment>
                            <comment id="12729738" author="kmarsden" created="Fri, 10 Jul 2009 18:34:26 +0100"  >&lt;p&gt;Thank you Mamta for your continued work on this issue. I didn&apos;t apply the patch but just looked at the diff and have the following comments. In EmbedConnection we have:&lt;br/&gt;
import org.apache.derby.iapi.jdbc.BrokeredConnectionControl;&lt;br/&gt;
which I don&apos;t think is needed.&lt;/p&gt;

&lt;p&gt;and a small typo in the test &quot;why&quot; instead of &quot;while&quot;&lt;br/&gt;
bring the server down why the local xa transaction is still active&lt;/p&gt;

&lt;p&gt;I wonder if it would be cleaner instead of:&lt;br/&gt;
ClientXADataSource ds = new ClientXADataSource();&lt;br/&gt;
+        ds.setPortNumber(TestConfiguration.getCurrent().getPort());&lt;br/&gt;
+    	ds.setDatabaseName(&quot;wombat&quot;);&lt;br/&gt;
+    	ds.setCreateDatabase(&quot;create&quot;);&lt;/p&gt;

&lt;p&gt;to use J2EEDataSource.getXADataSource()&lt;/p&gt;

&lt;p&gt;Do you think you can check this into 10.5 on  Monday so we get a nightly run before I make the RC on Tuesday?&lt;/p&gt;</comment>
                            <comment id="12729749" author="mamtas" created="Fri, 10 Jul 2009 19:08:56 +0100"  >&lt;p&gt;Thanks for looking at the patch, Kathey. I will work on your comments and go ahead and commit the patch. &lt;/p&gt;</comment>
                            <comment id="12729790" author="kmarsden" created="Fri, 10 Jul 2009 20:41:11 +0100"  >&lt;p&gt;Mamta, could you also run jdbcapi.XATest with your patch. It hasn&apos;t been enabled (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;) because it sometimes hung when run in a suite because of this issue.   You will need to sync up to run it because I just checked in a fix to the test to make it run cleanly.&lt;/p&gt;
</comment>
                            <comment id="12729806" author="mamtas" created="Fri, 10 Jul 2009 21:40:21 +0100"  >&lt;p&gt;Kathey, when I ran the XATest, it failed&lt;br/&gt;
$ java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest&lt;br/&gt;
.....EE&lt;br/&gt;
Time: 10.031&lt;br/&gt;
There were 2 errors:&lt;br/&gt;
1) XATest:embeddedjava.sql.SQLException: The conglomerate (-1) requested does not exist.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2201)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1323)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.dropSchema(JDBC.java:323)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.removeObjects(CleanDatabaseTestSetup.java:231)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.cleanDatabase(CleanDatabaseTestSetup.java:164)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.tearDown(CleanDatabaseTestSetup.java:151)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.sql.SQLException: The conglomerate (-1) requested does not exist.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
        ... 21 more&lt;br/&gt;
Caused by: ERROR XSAI2: The conglomerate (-1) requested does not exist.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(RAMTransaction.java:399)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.openConglomerate(RAMTransaction.java:1308)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.isSchemaReferenced(DataDictionaryImpl.java:2310)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.isSchemaEmpty(DataDictionaryImpl.java:2245)&lt;br/&gt;
        at org.apache.derby.iapi.sql.dictionary.SchemaDescriptor.drop(SchemaDescriptor.java:419)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DropSchemaConstantAction.executeConstantAction(DropSchemaConstantAction.java:99)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:64)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
        ... 15 more&lt;br/&gt;
2) XATest:clientjava.sql.SQLException: The conglomerate (-1) requested does notexist.&lt;br/&gt;
        at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeUpdate(Statement.java:509)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.dropSchema(JDBC.java:323)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.removeObjects(CleanDatabaseTestSetup.java:231)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.cleanDatabase(CleanDatabaseTestSetup.java:164)&lt;br/&gt;
        at org.apache.derbyTesting.junit.CleanDatabaseTestSetup.setUp(CleanDatabaseTestSetup.java:109)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:18)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: The conglomerate (-1) requested does not exist.&lt;br/&gt;
        at org.apache.derby.client.am.Statement.completeSqlca(Statement.java:1833)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.completeExecuteImmediate(Statement.java:1421)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.parseEXCSQLIMMreply(NetStatementReply.java:208)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatementReply.readExecuteImmediate(NetStatementReply.java:59)&lt;br/&gt;
        at org.apache.derby.client.net.StatementReply.readExecuteImmediate(StatementReply.java:45)&lt;br/&gt;
        at org.apache.derby.client.net.NetStatement.readExecuteImmediate_(NetStatement.java:128)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.readExecuteImmediate(Statement.java:1417)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.flowExecute(Statement.java:2120)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeUpdateX(Statement.java:514)&lt;br/&gt;
        at org.apache.derby.client.am.Statement.executeUpdate(Statement.java:500)&lt;br/&gt;
        ... 22 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 5,  Failures: 0,  Errors: 2&lt;/p&gt;

&lt;p&gt;$&lt;/p&gt;</comment>
                            <comment id="12729853" author="mamtas" created="Fri, 10 Jul 2009 22:50:52 +0100"  >&lt;p&gt;Strange, but I am not able to reproduce the conglomerate does not exist error any more. Not sure why i got it. I cleaned up the test dir and reran the tests and XATest runs fine after that.&lt;/p&gt;</comment>
                            <comment id="12729854" author="mamtas" created="Fri, 10 Jul 2009 22:52:03 +0100"  >&lt;p&gt;Posting an updated patch DERBY4053_patch3_diff_July102009.txt. It has changes suggested by Kathey on the previous patch. I will run the entire junit suite and derbyall. This is on trunk.&lt;/p&gt;</comment>
                            <comment id="12729857" author="kmarsden" created="Fri, 10 Jul 2009 22:58:29 +0100"  >&lt;p&gt;Hi Mamta,&lt;/p&gt;

&lt;p&gt;Short story is I don&apos;t think this is because of your change and if you start with a clean directory the test should pass.&lt;/p&gt;

&lt;p&gt;I think maybe you got this because you did not clean up your test  directory after synching up the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-712&quot; title=&quot;Support for sequences&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-712&quot;&gt;&lt;del&gt;DERBY-712&lt;/del&gt;&lt;/a&gt; changes.  If I create a schema with the 10.6.0.0.791528 build (before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-712&quot; title=&quot;Support for sequences&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-712&quot;&gt;&lt;del&gt;DERBY-712&lt;/del&gt;&lt;/a&gt;)  and then try to drop it with a build after the change I get the same error.&lt;br/&gt;
ij&amp;gt; drop schema myschema restrict;&lt;br/&gt;
ERROR XSAI2: The conglomerate (-1) requested does not exist.&lt;/p&gt;

&lt;p&gt;I think this is to be expected. Suran could you confirm that all 10.6 databases made before the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-712&quot; title=&quot;Support for sequences&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-712&quot;&gt;&lt;del&gt;DERBY-712&lt;/del&gt;&lt;/a&gt; patch are expected to be unusable?&lt;/p&gt;
</comment>
                            <comment id="12730018" author="knutanders" created="Sat, 11 Jul 2009 22:49:53 +0100"  >&lt;p&gt;Thanks for doing this, Mamta. Patch #3 looks fine to me, except some nits like mixing tabs and spaces on the same line and trailing blanks. It would also be good if the comment in Database.close() explained why and not only what the code does. Thanks.&lt;/p&gt;</comment>
                            <comment id="12730093" author="suranjay" created="Sun, 12 Jul 2009 16:02:18 +0100"  >&lt;p&gt;With reference to &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-712?focusedCommentId=12728739&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12728739&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-712?focusedCommentId=12728739&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12728739&lt;/a&gt;&lt;br/&gt;
I think it&apos;s safe to say 1.6 databases from before the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-712&quot; title=&quot;Support for sequences&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-712&quot;&gt;&lt;del&gt;DERBY-712&lt;/del&gt;&lt;/a&gt; changes will now be unusable.&lt;/p&gt;</comment>
                            <comment id="12730126" author="mamtas" created="Sun, 12 Jul 2009 19:25:10 +0100"  >&lt;p&gt;Knut, thanks for looking at the patch. I will add comments to Database.close() for the code changes that I have made. As for mixing tabs and spaces, maybe someone can help me with that. I am using eclipse and it must be adding the tabs automatically because when I start a new codeline, it puts me automatically on what appears to be right place on that line to right the code. Maybe I need to change some settings. &lt;/p&gt;

&lt;p&gt;Also, I ran derball and junit and they all ran fine. After adding the comments, I will go ahead and check in the changes into trunk and then work on merging it to 10.5 codeline.&lt;/p&gt;</comment>
                            <comment id="12730352" author="mamtas" created="Mon, 13 Jul 2009 14:58:04 +0100"  >&lt;p&gt;Committed changes to trunk with revision 793588 and with commit comments&lt;br/&gt;
**************&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4053&quot; title=&quot;Network Server&amp;#39;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4053&quot;&gt;&lt;del&gt;DERBY-4053&lt;/del&gt;&lt;/a&gt; The local XA connections were not getting rollback during Database close and&lt;br/&gt;
this resulted into exception at connection close if the connection object had any pending&lt;br/&gt;
transaction. Made changes so that all the connections(except global XA connections) will &lt;br/&gt;
have their transactions rolled back before those connections are closed.&lt;br/&gt;
**************&lt;/p&gt;

&lt;p&gt;Also, I think have taken care of space and tab mixing. Will work on migrating this to 10.5&lt;/p&gt;</comment>
                            <comment id="12730428" author="kmarsden" created="Mon, 13 Jul 2009 18:56:15 +0100"  >&lt;p&gt;Thanks Mamta for the fix.  I still can&apos;t quite figure why this would occur on 10.4.   &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3319&quot; title=&quot;Logical connections do not check if a transaction is active on close&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3319&quot;&gt;&lt;del&gt;DERBY-3319&lt;/del&gt;&lt;/a&gt; wasn&apos;t fixed there. Does anyone have any theories?  Perhaps the 10.4 issue is some other problem during shutdown that will be exposed/resolved once we properly handle and log exceptions during shutdown.&lt;/p&gt;</comment>
                            <comment id="12730443" author="mamtas" created="Mon, 13 Jul 2009 19:17:14 +0100"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4304&quot; title=&quot;Network Server shutdown should handle exceptions and finish the server shutdown completely&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4304&quot;&gt;&lt;del&gt;DERBY-4304&lt;/del&gt;&lt;/a&gt; for &lt;br/&gt;
1) Make sure an exception during shutdown processing does not prevent the remaining shutdown tasks, like closing the server socket from occurring. &lt;br/&gt;
2) Make sure any exceptions that occur in shutdown processing are reported to the console. &lt;/p&gt;</comment>
                            <comment id="12730505" author="mamtas" created="Mon, 13 Jul 2009 21:44:20 +0100"  >&lt;p&gt;This is my second time running junit suite on 10.5 codeline after merging the changes into 10.5 and both times I am running into problems with upgrade tests. Not sure if there is a known issue with running upgrade tests on 10.5.  I see quite a different errors. Wish had run the junit tests in text runner rather than gui runner. But here are couple failures&lt;br/&gt;
testOldVersion:Old minor(driver): expected&amp;lt;1&amp;gt; but was &amp;lt;5&amp;gt;&lt;br/&gt;
testGrantRevokeStatements(...Changes10_2)Unexpected SQL state expected &amp;lt;..X01&amp;gt; but was &amp;lt;..Z60&amp;gt;&lt;br/&gt;
testDatabaseOwnerChange(..10_3)AUTHORIZATIONID not valid for SYSIBM expected:&amp;lt;DBA&amp;gt; but was &amp;lt;APP&amp;gt;&lt;br/&gt;
....&lt;/p&gt;

&lt;p&gt;Does anyone have the cycle to merge my trunk patch to 10.5 codeline and see if the tests run fine on their machine?&lt;/p&gt;

&lt;p&gt;In the meantime, I will run the derbyall on merged 10.5 and see how that goes&lt;/p&gt;</comment>
                            <comment id="12730541" author="kmarsden" created="Mon, 13 Jul 2009 22:54:59 +0100"  >&lt;p&gt;Hi Mamta, I have a test run going now but will test your patch as soon as that is done.  I have never seen these failures before but I don&apos;t think upgrade tests run for network server at all so think probably this is not related to your change.  I&apos;ll let you know how my run goes.&lt;/p&gt;</comment>
                            <comment id="12730564" author="mamtas" created="Mon, 13 Jul 2009 23:38:52 +0100"  >&lt;p&gt;derbyall ran fine out my machine with intermittent failure (I had seen this failure on trunk too. forgot to mention it)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/storeall/storeunit/T_RawStoreFactory.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: T_RawStoreFactory jdk1.6.0 storeall:storeunit 2009-07-13 14:34:14 ***&lt;br/&gt;
2 del&lt;br/&gt;
&amp;lt; &amp;#8211; Unit Test T_RawStoreFactory finished&lt;br/&gt;
2 add&lt;br/&gt;
&amp;gt; Shutting down due to unit test failure.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   T_RawStoreFactory jdk1.6.0 storeall:storeunit 2009-07-13 14:34:31 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12730573" author="myrna" created="Mon, 13 Jul 2009 23:55:03 +0100"  >&lt;p&gt;That&apos;s like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2635&quot; title=&quot;intermittent failure in T_RawStoreFactory unit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2635&quot;&gt;&lt;del&gt;DERBY-2635&lt;/del&gt;&lt;/a&gt; (which is closed)...But I think it&apos;s important to check on derby.log with this test.&lt;/p&gt;</comment>
                            <comment id="12730575" author="kmarsden" created="Tue, 14 Jul 2009 00:02:21 +0100"  >&lt;p&gt;or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3993&quot; title=&quot;With IBM 1.6 T_RawStoreFactory fails with There should be 0 observers, but we still have 1 observers on Win 2K&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3993&quot;&gt;&lt;del&gt;DERBY-3993&lt;/del&gt;&lt;/a&gt; I have seen the test fail with the signature you describe but it has the observers error in derby.log.&lt;/p&gt;</comment>
                            <comment id="12730586" author="mamtas" created="Tue, 14 Jul 2009 00:23:32 +0100"  >&lt;p&gt;I looked through derby.log and see that it has observers error in derby.log&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; FAIL - org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED There should be 0 observers, but we still have 1 observers.&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED There should be 0 observers, but we still have 1 observers.&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.doComplete(Xact.java:1969)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.preComplete(Xact.java:1925)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.prepareCommit(Xact.java:769)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.commit(Xact.java:882)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.commit(Xact.java:679)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.store.T_Util.t_commit(T_Util.java:840)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.store.T_RawStoreFactory.TC001(T_RawStoreFactory.java:7310)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.store.T_RawStoreFactory.runTempTests(T_RawStoreFactory.java:417)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.store.T_RawStoreFactory.runTestSet(T_RawStoreFactory.java:248)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_MultiIterations.runTests(T_MultiIterations.java:95)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_MultiThreadedIterations.runTests(T_MultiThreadedIterations.java:92)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.T_Generic.Execute(T_Generic.java:118)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runATest(BasicUnitTestManager.java:184)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.runTests(BasicUnitTestManager.java:246)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.BasicUnitTestManager.boot(BasicUnitTestManager.java:93)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:2021)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:333)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1858)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startServices(BaseMonitor.java:997)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.runWithState(BaseMonitor.java:429)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.FileMonitor.&amp;lt;init&amp;gt;(FileMonitor.java:60)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startMonitor(Monitor.java:289)&lt;br/&gt;
	at org.apache.derbyTesting.unitTests.harness.UnitTestMain.main(UnitTestMain.java:51)&lt;/p&gt;</comment>
                            <comment id="12730654" author="kmarsden" created="Tue, 14 Jul 2009 03:39:41 +0100"  >&lt;p&gt;Hi Mamta,&lt;/p&gt;

&lt;p&gt;I got no failures on 10.5 with suites.All after merging this change to the branch.&lt;/p&gt;</comment>
                            <comment id="12730839" author="mamtas" created="Tue, 14 Jul 2009 14:38:11 +0100"  >&lt;p&gt;Thanks for running the tests, Kathey. Appreciate it. Will go ahead and commit the changes into 10.5&lt;/p&gt;</comment>
                            <comment id="12730842" author="mamtas" created="Tue, 14 Jul 2009 14:41:48 +0100"  >&lt;p&gt;Migrated into 10.5 with revision 793900.&lt;/p&gt;</comment>
                            <comment id="12730941" author="kmarsden" created="Tue, 14 Jul 2009 17:18:35 +0100"  >&lt;p&gt;Bad news: On trunk, I updated to get Mamta&apos;s change and ran tests with 2 other changes. First I applied Tiago&apos;s patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4292&quot; title=&quot;creation of FileInputStream in org.apache.derby.impl.tools.ij.Main not wrapped in privilege  block which can cause problems running under SecurityManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4292&quot;&gt;&lt;del&gt;DERBY-4292&lt;/del&gt;&lt;/a&gt;.  Second I tried to enable XATest.   I ran suites.All and hit &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4053&quot; title=&quot;Network Server&amp;#39;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4053&quot;&gt;&lt;del&gt;DERBY-4053&lt;/del&gt;&lt;/a&gt;.  I think it was the addition of XATest that did it, not Tiago&apos;s change because the initial InvalidReply came during XATest.  I will catch and print any exception in shutdown and rerun and hopefully will hit it again and we can see what the issue is now that local transactions are rolling back.&lt;/p&gt;


</comment>
                            <comment id="12731047" author="kmarsden" created="Tue, 14 Jul 2009 19:54:03 +0100"  >&lt;p&gt;Tiago offered to try to reproduce as well.   Attached is the patch that prints out any exceptions during shutdown. This is not for commit.&lt;/p&gt;</comment>
                            <comment id="12731152" author="kmarsden" created="Tue, 14 Jul 2009 22:58:32 +0100"  >&lt;p&gt;With the diag patch, XATest, and the change to check unordered results for checkXATransactionView, and running jdbcapi._Suite  I can reproduce the error on shutdown described here: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155?focusedCommentId=12731086&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12731086&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-4155?focusedCommentId=12731086&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12731086&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;followed later by an InvalidReply and the hang with bind exception in the derby.log&lt;/p&gt;



&lt;p&gt;I also see the following issue shutting down  which does not cause problems restarting the server because the JMX cleanup comes after serverSocket.close()&lt;br/&gt;
testSystemShutdown used 406 ms java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:286)&lt;br/&gt;
        at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:277)&lt;br/&gt;
        at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:864)&lt;br/&gt;
        at sun.reflect.GeneratedMethodAccessor596.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:599)&lt;br/&gt;
        at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:735)&lt;br/&gt;
.&lt;br/&gt;
testPoolDS used 5234 ms .&lt;/p&gt;


&lt;p&gt;In general ur failure to report and handle errors on shutdown has been masking other issues.&lt;/p&gt;

&lt;p&gt;I think we should proceed as follows:&lt;br/&gt;
1) Change the title of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4053&quot; title=&quot;Network Server&amp;#39;s failure to rollback local transactions on shutdown can cause  hang on startup with message java.net.BindException: Address already in use: NET_Bind in derby.log &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4053&quot;&gt;&lt;del&gt;DERBY-4053&lt;/del&gt;&lt;/a&gt; to: Network Server does not rollback local transactions on XAConnections  on shutdown causing hang on restart with message java.net.BindException: Address already in use: NET_Bind in derby.log &lt;/p&gt;

&lt;p&gt;2) File two new issues described above.&lt;/p&gt;

&lt;p&gt;3)Continue work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4304&quot; title=&quot;Network Server shutdown should handle exceptions and finish the server shutdown completely&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4304&quot;&gt;&lt;del&gt;DERBY-4304&lt;/del&gt;&lt;/a&gt; to expose additonal issues and eliminate the bind error on other circumstances.&lt;/p&gt;

&lt;p&gt;4) Add the unordered result set check as part of the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;I don&apos;t think these tasks should hold up 10.5.2&lt;/p&gt;
</comment>
                            <comment id="12731580" author="kmarsden" created="Wed, 15 Jul 2009 18:36:22 +0100"  >&lt;p&gt;Verified fix in 10.5 and trunk. There were other issues on shutdown identified that may cause a similar symptom, but those will be logged separately.&lt;/p&gt;</comment>
                            <comment id="12749632" author="mamtas" created="Mon, 31 Aug 2009 22:31:33 +0100"  >&lt;p&gt;Backported chages to 10.4 and 10.3 codelines&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12422507">DERBY-4155</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12423504">DERBY-4180</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12430250">DERBY-4304</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12386268">DERBY-3319</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12413029" name="DERBY4053_patch1_diff_July092009.txt" size="5603" author="mamtas" created="Thu, 9 Jul 2009 16:35:02 +0100"/>
                            <attachment id="12413141" name="DERBY4053_patch2_diff_July102009.txt" size="9074" author="mamtas" created="Fri, 10 Jul 2009 18:23:13 +0100"/>
                            <attachment id="12413142" name="DERBY4053_patch2_stat_July102009.txt" size="645" author="mamtas" created="Fri, 10 Jul 2009 18:23:13 +0100"/>
                            <attachment id="12413161" name="DERBY4053_patch3_diff_July102009.txt" size="8940" author="mamtas" created="Fri, 10 Jul 2009 22:52:03 +0100"/>
                            <attachment id="12413162" name="DERBY4053_patch3_stat_July102009.txt" size="645" author="mamtas" created="Fri, 10 Jul 2009 22:52:03 +0100"/>
                            <attachment id="12413462" name="derby-4053_diag_diff.txt" size="842" author="kmarsden" created="Tue, 14 Jul 2009 19:54:03 +0100"/>
                            <attachment id="12405202" name="derby-4053_repro_dont_commit_diff.txt" size="9559" author="kmarsden" created="Fri, 10 Apr 2009 22:55:45 +0100"/>
                            <attachment id="12400050" name="derby.log" size="84798" author="kmarsden" created="Wed, 11 Feb 2009 22:58:26 +0000"/>
                            <attachment id="12405948" name="javacore-20090420-1735.txt" size="7109" author="suranjay" created="Mon, 20 Apr 2009 18:35:58 +0100"/>
                            <attachment id="12400051" name="javacore.20090211.123031.4000.0001.txt" size="1313153" author="kmarsden" created="Wed, 11 Feb 2009 22:58:26 +0000"/>
                            <attachment id="12413059" name="mamtaDerby4053.java" size="5299" author="mamtas" created="Thu, 9 Jul 2009 22:59:19 +0100"/>
                            <attachment id="12400052" name="suites.All.out" size="398664" author="kmarsden" created="Wed, 11 Feb 2009 22:58:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Feb 2009 19:26:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23995</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rtz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38327</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10050"><![CDATA[Blocker]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>