<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:17:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5288/DERBY-5288.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5288] running multiple suites.All concurrently should be possible</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5288</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When attempting to run multiple suites.All runs at the same time, using a different location &amp;amp; jvm &amp;amp; a different value for&lt;br/&gt;
-Dderby.tests.basePort, there are still a few tests that fail regularly.&lt;/p&gt;

&lt;p&gt;The first one is SecureServerTest.&lt;br/&gt;
See also the discussion on this thread: &lt;a href=&quot;http://osdir.com/ml/derby-dev-db-apache/2011-06/msg00337.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://osdir.com/ml/derby-dev-db-apache/2011-06/msg00337.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12510994">DERBY-5288</key>
            <summary>running multiple suites.All concurrently should be possible</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Jun 2011 20:49:28 +0100</created>
                <updated>Mon, 20 Feb 2012 23:36:08 +0000</updated>
                            <resolved>Mon, 20 Feb 2012 23:36:08 +0000</resolved>
                                    <version>10.6.2.4</version>
                    <version>10.7.1.4</version>
                    <version>10.8.2.2</version>
                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.2.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13052189" author="myrna" created="Mon, 20 Jun 2011 20:56:02 +0100"  >&lt;p&gt;Attaching a patch which removes the setting of the thread to MIN_PRIORITY and adds the join on the streamReader thread with a time-out (otherwise there&apos;s a chance of hanging tests).&lt;/p&gt;

&lt;p&gt;If there are no comments on this I intend to commit this and backport it to 10.8, 10.7, and 10.6, as those are the branches I think support running the junit tests concurrently.&lt;/p&gt;

&lt;p&gt;With this change backported I did run a more successful concurrent run, although there were still failures, but I think it&apos;s a good first step.&lt;/p&gt;</comment>
                            <comment id="13052969" author="myrna" created="Wed, 22 Jun 2011 01:22:10 +0100"  >&lt;p&gt;committed to trunk with revision 1138201.&lt;/p&gt;</comment>
                            <comment id="13053175" author="knutanders" created="Wed, 22 Jun 2011 12:02:08 +0100"  >&lt;p&gt;I think the join() call is misplaced. We should call join() right before we try to access the output, not when we start the process, as that won&apos;t let the test start until the process has completed (which is likely why a timeout was needed to prevent hangs).&lt;/p&gt;

&lt;p&gt;Does the attached patch join-threads.diff preserve the improvements you saw with the original patch? This patch calls join() on places where we know the process has terminated, and we just need to let the threads that read stdout and stderr get enough time to complete before we check the output.&lt;/p&gt;</comment>
                            <comment id="13053298" author="myrna" created="Wed, 22 Jun 2011 16:03:02 +0100"  >&lt;p&gt;Your theory about the hangs make sense. And yes, your patch also allows the SecureServerTest to run concurrently (8 times, 4 different jvms).&lt;br/&gt;
I&apos;ll try a more involved test run, and if ok, I&apos;ll commit this patch (unless you prefer to do it). &lt;/p&gt;</comment>
                            <comment id="13053752" author="knutanders" created="Thu, 23 Jun 2011 10:45:52 +0100"  >&lt;p&gt;All the regression tests ran cleanly with the patch in my environment, so I went ahead and checked it in.&lt;br/&gt;
Committed revision 1138795.&lt;/p&gt;</comment>
                            <comment id="13054034" author="myrna" created="Thu, 23 Jun 2011 19:58:16 +0100"  >&lt;p&gt;Thanks for the commit.&lt;/p&gt;

&lt;p&gt;Unfortunately, when I ran suites.All on my windowsXP with this change, with 8 concurrent jvms (4 different ones, ibm142, ibm15, ibm16 and jdk16) 4 of them, the ibm142 and jdk16 ones, ran OutOfMemory with messages like this:&lt;/p&gt;

&lt;p&gt;jdk16:&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: PermGen space&lt;/p&gt;

&lt;p&gt;--------------------------------------&lt;br/&gt;
ibm 142: &lt;br/&gt;
SetQueryTimeoutTest java.lang.OutOfMemoryError: JVMCI015:OutOfMemoryError, cannot create anymore threads due to memory or resource constraints&lt;br/&gt;
	at java.lang.Thread.start(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SetQueryTimeoutTest.testTimeoutWithExec(SetQueryTimeoutTest.java:538)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SetQueryTimeoutTest.go(SetQueryTimeoutTest.java:753)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.SetQueryTimeoutTest.main(SetQueryTimeoutTest.java:722)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java(Compiled Code))&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java(Compiled Code))&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java(Compiled Code))&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java(Compiled Code))&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.HarnessJavaTest.runTest(HarnessJavaTest.java:87)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java(Compiled Code))&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java(Compiled Code))&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java(Compiled Code))&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java(Compiled Code))&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java(Compiled Code))&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java(Compiled Code))&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java(Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java(Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java(Inlined Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java(Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java(Compiled Code))&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;br/&gt;
--------------------------------------&lt;br/&gt;
The ibm 1.4.2 processes hung after this. The jdk16 processes have exited.&lt;/p&gt;

&lt;p&gt;Any further help on this will be very welcome...&lt;/p&gt;
</comment>
                            <comment id="13054068" author="knutanders" created="Thu, 23 Jun 2011 21:02:39 +0100"  >&lt;p&gt;What are the memory settings for the JVMs (heap and permgen)? And how much memory is available on the machine?&lt;/p&gt;</comment>
                            <comment id="13054096" author="mikem" created="Thu, 23 Jun 2011 22:05:51 +0100"  >&lt;p&gt;For some context, were you able to do the same experiment before the change with the same environment and settings?  Or is this a new test?&lt;/p&gt;</comment>
                            <comment id="13054140" author="myrna" created="Thu, 23 Jun 2011 23:23:30 +0100"  >&lt;p&gt;I was able to do this experiment with my small (but incorrect) change of revision 1138201 - but before the commit. &lt;/p&gt;

&lt;p&gt;I will double check this by building after svn update -r 1138201 and rerunning the experiment. Takes about 8 to 10 hours. I&apos;ll check tomorrow on the result and post.&lt;/p&gt;

&lt;p&gt;I&apos;m not running with any special settings, so whatever is the default for the jvms is what gets picked up...&lt;br/&gt;
There&apos;s 3.87 GB of RAM. &lt;/p&gt;
</comment>
                            <comment id="13054166" author="knutanders" created="Fri, 24 Jun 2011 00:12:10 +0100"  >&lt;p&gt;FWIW, I&apos;ve never been able to run suites.All on jdk16 with default memory settings without getting the PermGen space error you saw, even when not running concurrent tests (default PermGen size is 64MB, I run with 256MB).&lt;/p&gt;

&lt;p&gt;Another thing to take into consideration is that some of the tests fork a new JVM for the network server, so you may get into the situation where your 8 test runs have 16 processes running at the same time (if all happen to be in such a test at the same time). Then you&apos;d only have ~240 MB per process, which in my experience is too little for suites.All. When I run concurrent tests, I typically split up suites.All in smaller test suites (jdbcapi._Suite, lang._Suite, etc...) and run them individually so that each process doesn&apos;t grow too big.&lt;/p&gt;</comment>
                            <comment id="13054198" author="myrna" created="Fri, 24 Jun 2011 01:45:24 +0100"  >&lt;p&gt;I double-checked my testresults, and I was incorrect. I had run SecureServerTest with my previous change &amp;amp; with the latest change, with trunk &amp;amp; 4 jvms (each twice), but the other experiment was to backport the change of 1138201 manually to 10.6, 10.7, and 10.8, and then I ran with ibm 1.5 and ibm 1.6 for each of the 4 branches. With ibm 1.5 and 1.6 I did not run out of memory, so that explains that.&lt;br/&gt;
I&apos;ll backport the current change.&lt;/p&gt;</comment>
                            <comment id="13055675" author="myrna" created="Mon, 27 Jun 2011 18:33:42 +0100"  >&lt;p&gt;I merged revision 1138201 and 1138795 to SpawnedProcess.java from trunk to 10.8 (clean merge), then (because there were conflicts) manually backported the changes to 10.7 and 10.6 (which were identical before the change). I committed these changes (with revision 1140196 to 10.7 and merged back to 10.6 with revision 1140199) after I ran an experiment with ibm 1.5 and 1.6 (so no OOMs or PermGen errors) for each of these branches.&lt;/p&gt;

&lt;p&gt;The results of this latest experiment were:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;no failures for 10.6 ibm 1.5 or 1.6&lt;/li&gt;
	&lt;li&gt;10.7 and trunk had 1 error for both 1.5 and 1.6, testReplication_Local_1_Indexing(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_1Indexing), each similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4635&quot; title=&quot;intermittent failure in (...)replicationTests.ReplicationRun_Local_1Indexing.testReplication_Local_1_Indexing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4635&quot;&gt;DERBY-4635&lt;/a&gt; (but apparently, the error can happen in more than one place).&lt;/li&gt;
	&lt;li&gt;10.8 had both an error like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4635&quot; title=&quot;intermittent failure in (...)replicationTests.ReplicationRun_Local_1Indexing.testReplication_Local_1_Indexing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4635&quot;&gt;DERBY-4635&lt;/a&gt;, and a failure in testShutdownWhileScanningThenDelete(org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest) like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5108&quot; title=&quot;Intermittent failure in AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete on Windows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5108&quot;&gt;&lt;del&gt;DERBY-5108&lt;/del&gt;&lt;/a&gt;. According to the comments in that JIRA issue Kristian was planning to backport the changes from trunk to 10.8.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13055685" author="myrna" created="Mon, 27 Jun 2011 19:01:47 +0100"  >&lt;p&gt;Forgot to mention there were some additional stack traces, which apparently did not result in test errors or failures.&lt;br/&gt;
For instance, there was a &apos;java.net.SocketException: Connection reset&apos; in both the 10.8 and trunk ibm1.5 runs in testReplication_Local_3_p5_DERBY_3878, which looks the same as one encountered by Kathey (as per a comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4565&quot; title=&quot;Create concurrency test to stress sequence generators.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4565&quot;&gt;&lt;del&gt;DERBY-4565&lt;/del&gt;&lt;/a&gt;: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4564?focusedCommentId=12837564&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837564&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-4564?focusedCommentId=12837564&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837564&lt;/a&gt;).&lt;/p&gt;
</comment>
                            <comment id="13056642" author="myrna" created="Tue, 28 Jun 2011 18:09:03 +0100"  >&lt;p&gt;After my check-ins to 10.6 and 10.7 the weme 6.2 runs didn&apos;t complete. I&apos;ll investigate.&lt;/p&gt;</comment>
                            <comment id="13056866" author="myrna" created="Tue, 28 Jun 2011 23:50:12 +0100"  >&lt;p&gt;Those test runs finished without trouble.&lt;/p&gt;</comment>
                            <comment id="13212216" author="myrna" created="Mon, 20 Feb 2012 23:36:08 +0000"  >&lt;p&gt;I&apos;ve verified this works with 10.8 and trunk (10.9 alpha). I&apos;ve not tried this with earlier versions, but I think it should be possible with 10.7.&lt;br/&gt;
Closing this issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12483199" name="DERBY-5288_1.diff" size="1156" author="myrna" created="Mon, 20 Jun 2011 20:56:02 +0100"/>
                            <attachment id="12483428" name="join-threads.diff" size="4919" author="knutanders" created="Wed, 22 Jun 2011 12:02:08 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Jun 2011 11:02:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24759</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0dev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35991</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>