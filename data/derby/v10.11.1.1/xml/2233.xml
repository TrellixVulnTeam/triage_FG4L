<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2233/DERBY-2233.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2233] junit test derbynet/PreparedStatementTest fails with wctme5.7 (aka j9 2.2/ foundation/j2ME 1.0) and weme6.1 (aka j9 2.3 / foundation/j2ME 1.1) </title>
                <link>https://issues.apache.org/jira/browse/DERBY-2233</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The test derbynet/preparedStatementTest, recently (Jan 2, revision 491768) converted to junit, fails with the CDC/Foundation/JSR169/J2ME implementation. &lt;/p&gt;

&lt;p&gt;wctme5.7/j9 2.2/j2ME 1.0 shows: &lt;br/&gt;
----------------------------------- &lt;br/&gt;
1) testParameterTypes(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.lang.NoClassDefFoundError: java.math.BigDecimal &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testParameterTypes(PrepareStatementTest.java:182) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:199) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
2) testBigDecimalSetObject(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.lang.NoClassDefFoundError: java.math.BigDecimal &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testBigDecimalSetObject(PrepareStatementTest.java:430) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:199) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
3) testBigDecimalSetObjectWithScale(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.lang.NoClassDefFoundError: java.math.BigDecimal &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testBigDecimalSetObjectWithScale(PrepareStatementTest.java:478) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:199) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
4) testSmallBigDecimal(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.lang.NoClassDefFoundError: java.math.BigDecimal &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testSmallBigDecimal(PrepareStatementTest.java:555) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:199) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
---------------------------------- &lt;/p&gt;

&lt;p&gt;weme6.1/j9 2.3/j2ME 1.1 shows: &lt;/p&gt;

&lt;p&gt;---------------------------------- &lt;/p&gt;

&lt;p&gt;1) testParameterTypes(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.lang.NoSuchMethodError: java/sql/PreparedStatement.setBigDecimal(ILjava/math/BigDecimal;)V &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testParameterTypes(PrepareStatementTest.java:210) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
2) testBigDecimalSetObject(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.sql.SQLException: An attempt was made to get a data value of type &apos;DOUBLE&apos; from a data value of type &apos;java.math.BigDecimal&apos;. &lt;br/&gt;
at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.ConnectionChild.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.dataTypeConversion(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testBigDecimalSetObject(PrepareStatementTest.java:448) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
3) testBigDecimalSetObjectWithScale(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.sql.SQLException: An attempt was made to get a data value of type &apos;NUMERIC&apos; from a data value of type &apos;java.math.BigDecimal&apos;. &lt;br/&gt;
at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.ConnectionChild.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.dataTypeConversion(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testBigDecimalSetObjectWithScale(PrepareStatementTest.java:484) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
4) testSmallBigDecimal(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.sql.SQLException: An attempt was made to get a data value of type &apos;NUMERIC&apos; from a data value of type &apos;java.math.BigDecimal&apos;. &lt;br/&gt;
at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.ConnectionChild.newSQLException(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.dataTypeConversion(Unknown Source) &lt;br/&gt;
at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(Unknown Source) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testSmallBigDecimal(PrepareStatementTest.java:567) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
5) testAlternatingLobValuesAndNull(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.security.AccessControlException: Access denied (java.util.PropertyPermission file.encoding read) &lt;br/&gt;
at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source) &lt;br/&gt;
at java.lang.SecurityManager.checkPermission(SecurityManager.java:618) &lt;br/&gt;
at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:377) &lt;br/&gt;
at java.lang.System.getProperty(System.java:363) &lt;br/&gt;
at java.lang.System.getProperty(System.java:348) &lt;br/&gt;
at java.lang.String.defaultConverter(String.java:541) &lt;br/&gt;
at java.lang.String.getBytes(String.java:622) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testAlternatingLobValuesAndNull(PrepareStatementTest.java:917) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
6) testLargeParameters_a(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.security.AccessControlException: Access denied (java.util.PropertyPermission file.encoding read) &lt;br/&gt;
at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source) &lt;br/&gt;
at java.lang.SecurityManager.checkPermission(SecurityManager.java:618) &lt;br/&gt;
at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:377) &lt;br/&gt;
at java.lang.System.getProperty(System.java:363) &lt;br/&gt;
at java.lang.System.getProperty(System.java:348) &lt;br/&gt;
at java.lang.String.defaultConverter(String.java:541) &lt;br/&gt;
at java.lang.String.getBytes(String.java:622) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testLargeParameters_a(PrepareStatementTest.java:1120) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
7) testLargeParameters_b(org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest)java.security.AccessControlException: Access denied (java.util.PropertyPermission file.encoding read) &lt;br/&gt;
at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source) &lt;br/&gt;
at java.lang.SecurityManager.checkPermission(SecurityManager.java:618) &lt;br/&gt;
at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:377) &lt;br/&gt;
at java.lang.System.getProperty(System.java:363) &lt;br/&gt;
at java.lang.System.getProperty(System.java:348) &lt;br/&gt;
at java.lang.String.defaultConverter(String.java:541) &lt;br/&gt;
at java.lang.String.getBytes(String.java:622) &lt;br/&gt;
at org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest.testLargeParameters_b(PrepareStatementTest.java:1164) &lt;br/&gt;
at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:203) &lt;br/&gt;
at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76) &lt;br/&gt;
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) &lt;br/&gt;
at junit.extensions.TestSetup$1.protect(TestSetup.java:19) &lt;br/&gt;
at junit.extensions.TestSetup.run(TestSetup.java:23) &lt;br/&gt;
---------------------------------- &lt;/p&gt;

&lt;p&gt;(Note, possibly errors, 5,6,and 7 are a separate problem). &lt;/p&gt;

</description>
                <environment>jvms wctme5.7 (aka j9 2.2/ foundation/j2ME 1.0) and weme6.1 (aka j9 2.3 / foundation/j2ME 1.1) </environment>
        <key id="12360306">DERBY-2233</key>
            <summary>junit test derbynet/PreparedStatementTest fails with wctme5.7 (aka j9 2.2/ foundation/j2ME 1.0) and weme6.1 (aka j9 2.3 / foundation/j2ME 1.1) </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Jan 2007 18:52:28 +0000</created>
                <updated>Wed, 1 Jul 2009 01:09:10 +0100</updated>
                            <resolved>Mon, 14 May 2007 18:47:01 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12465338" author="myrna" created="Wed, 17 Jan 2007 01:28:08 +0000"  >&lt;p&gt;Similarly to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2157&quot; title=&quot;SqlExceptionTest.testChainedException and .testNextException fail with wctme5.7 foundation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2157&quot;&gt;&lt;del&gt;DERBY-2157&lt;/del&gt;&lt;/a&gt;, this test does not need to run with JSR169, because the client configuration is not supported. &lt;br/&gt;
With jars, all that&apos;s needed is to ensure derbynet.jar and derbyclient.jar are not in the classpath, but this is not possible when running with classes.&lt;br/&gt;
I worried about possibly missing some valuable testing, but the test has this in the comments:&lt;br/&gt;
&quot; This test tested prepared statements in client/server context, and many of the test cases is specifically testing corner cases in client/server communication.&quot;&lt;br/&gt;
So, it appears ok to run only an empty suite for this test.&lt;/p&gt;</comment>
                            <comment id="12465346" author="myrna" created="Wed, 17 Jan 2007 03:05:58 +0000"  >&lt;p&gt;committed check for JSR169 with revision &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=496911&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=496911&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22956</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0thz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38597</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>