<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3790/DERBY-3790.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3790] Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3790</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-269&quot; title=&quot;Provide some way to update index cardinality statistics (e.g. reimplement update statistics)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-269&quot;&gt;&lt;del&gt;DERBY-269&lt;/del&gt;&lt;/a&gt; provided a manual way to update the statisitcs. There was some discussion in that jira entry for possibly optimizing the cases where there is no need to update the statistics. I will enter the related comments from that jira entry here for reference.&lt;/p&gt;

&lt;p&gt;**************************&lt;br/&gt;
Knut Anders Hatlen - 18/Jul/08 12:39 AM &lt;br/&gt;
If I have understood correctly, unique indexes always have up to date cardinality statistics because cardinality == row count. If that&apos;s the case, one possible optimization is to skip the unique indexes when SYSCS_UPDATE_STATISTICS is called. &lt;br/&gt;
**************************&lt;/p&gt;


&lt;p&gt;**************************&lt;br/&gt;
Mike Matrigali - 18/Jul/08 09:48 AM &lt;br/&gt;
is the cardinality of a unique index 1 or is it row count? &lt;/p&gt;

&lt;p&gt;It is also more complicated than just skipping unique indexes, it depends on the number of columns in the index because &lt;br/&gt;
in a multi-column index, multiple cardinalities are calculated. So for instance on an index on columns A,B,C there are &lt;br/&gt;
actually 3 cardinalities calculated: &lt;br/&gt;
A &lt;br/&gt;
A,B &lt;br/&gt;
A,B,C &lt;/p&gt;

&lt;p&gt;I agree that the calculation of cardinality of A,B,C could/should be short circuited for a unique index. &lt;br/&gt;
**************************&lt;/p&gt;



&lt;p&gt;**************************&lt;br/&gt;
Knut Anders Hatlen - 18/Jul/08 03:25 PM &lt;br/&gt;
Mike, &lt;br/&gt;
It looks to me as if the cardinality is the number of unique values, so I think the cardinality of a unique index is equal to its row count (for the full key, that is). You&apos;re right that we can&apos;t short circuit it if we have a multi-column index. I don&apos;t know if it&apos;s worth the extra complexity to short circuit the A,B,C case, since we&apos;d have to scan the entire index anyway. For a single-column unique index it sounds like a good idea, though. &lt;br/&gt;
**************************&lt;/p&gt;</description>
                <environment></environment>
        <key id="12400684">DERBY-3790</key>
            <summary>Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Jul 2008 19:48:08 +0100</created>
                <updated>Wed, 3 Sep 2014 09:31:42 +0100</updated>
                            <resolved>Wed, 23 May 2012 12:12:06 +0100</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12831384" author="mstanik" created="Tue, 9 Feb 2010 09:47:15 +0000"  >&lt;p&gt;comment from Mike Matrigali on #&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3937&quot; title=&quot;Select count(*) scans all the rows (and is therefore slow with big tables), is the amount of rows not available/known for example in index ?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3937&quot;&gt;DERBY-3937&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&amp;gt; The current implementations of indexes ...  do not maintain an exact count of rows.&lt;/p&gt;</comment>
                            <comment id="13280184" author="kristwaa" created="Mon, 21 May 2012 15:38:42 +0100"  >&lt;p&gt;Attaching patch 1a, which adds the functionality to skip generating statistics for single-column unique indexes.&lt;/p&gt;

&lt;p&gt;Tests will be attached as a separate patch, as I&apos;m waiting for a commit to avoid conflicts.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;impl/sql/compile/FromBaseTable and&lt;br/&gt;
   iapi/sql/dictionary/TableDescriptor&lt;br/&gt;
   Added a new method to count indexes to TD, in which you can specify the minimum number of ordered column and whether non-unique indexes is exempt from that restriction.&lt;br/&gt;
   Used the new method to avoid scheduling work with the istat daemon for tables which has only one index and that index is a single-column unique index.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;impl/sql/execute/CreateIndexConstantAction&lt;br/&gt;
   Added helper method addStatistics, which tells if statistics should be added for an index. The pre-10.9 behavior was to add statistics as long as there was at least one row in the index, the new behavior is to only add statistics if the index has more than one column or is non-unique.&lt;br/&gt;
   There&apos;s an override available in case this change causes the optimizer to generate bad/worse plans.&lt;br/&gt;
   Removed unused method statementExceptionCleanup.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;impl/services/daemon/IndexStatisticsDaemonImpl&lt;br/&gt;
   Added code to skip generating statistics for single-column unique indexes.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Patch ready for review.&lt;br/&gt;
Patch 1a will be committed together with the test patch (not yet posted).&lt;/p&gt;</comment>
                            <comment id="13280549" author="dagw" created="Mon, 21 May 2012 23:17:51 +0100"  >&lt;p&gt;Thanks, Kristian. The patch looks good to me. +1&lt;/p&gt;

&lt;p&gt;Optional nits:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;in createindexconstantaction, the parameter to addStatistics is CardinalityCounter. This makes the calling site have to redo the call CardinalityCounter#getRowCount.&lt;br/&gt;
  Might as well do that before the call to addStatistics and pass in the long, since CardinalityCounter is not otherwise used inside addStatistics. This line could then be removed&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  if (addStatistics(dd, indexRowGenerator, cCount))&lt;br/&gt;
  {&lt;br/&gt;
       long numRows = cCount.getRowCount();  &amp;lt;------&lt;br/&gt;
into:&lt;/p&gt;

&lt;p&gt;  long numRows = cCount.getRowCount;&lt;br/&gt;
  if (addStatistics(dd, irg, numRows) {&lt;br/&gt;
     long[] c = cCount.getCardinality();&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The boolean tested  for dd version is sometimes negative: dbIsPre10_9, other times positive: dd.checkVersion(DataDictionary.DD_VERSION_DERBY_10_9&lt;br/&gt;
  This is slightly confusing. Maybe we should stick to a positive semantic, i.e. &quot;10_9 or newer&quot;? It would also be more readable, e.g. here:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   // Skip single-column unique indexes unless we&apos;re told not to,&lt;br/&gt;
   // or we are running in soft-upgrade-mode on a pre 10.9 db.&lt;br/&gt;
   if (!dbIsPre10_9 &amp;amp;&amp;amp; !FORCE_OLD_BEHAVIOR) {  &amp;lt;-- note negation !dbIsPre10&lt;/p&gt;

</comment>
                            <comment id="13280860" author="kristwaa" created="Tue, 22 May 2012 11:09:03 +0100"  >&lt;p&gt;Thanks, Dag.&lt;/p&gt;

&lt;p&gt;I have addressed your two comments in patch 1b, and also added the tests. To keep the old behavior I had to modify FromBaseTable, this was missing in patch 1a.&lt;/p&gt;

&lt;p&gt;Patch ready from review.&lt;br/&gt;
The test passed suites.All, but since I made one small modification I&apos;m rerunning it now. I&apos;ll also run derbyall.&lt;/p&gt;</comment>
                            <comment id="13280881" author="kristwaa" created="Tue, 22 May 2012 12:15:47 +0100"  >&lt;p&gt;suites.All (15729 tests) and derbyall (166 tests) passed.&lt;/p&gt;</comment>
                            <comment id="13280883" author="knutanders" created="Tue, 22 May 2012 12:19:20 +0100"  >&lt;p&gt;You might want to update the class name in KeepDisposableStatsPropertyTest.java&apos;s license header too.&lt;/p&gt;</comment>
                            <comment id="13280887" author="kristwaa" created="Tue, 22 May 2012 12:32:37 +0100"  >&lt;p&gt;Thanks for spotting that mistake, Knut Anders.&lt;br/&gt;
I just uploaded a new version of the patch with the same name, but where I fixed the licsense header.&lt;/p&gt;</comment>
                            <comment id="13280938" author="dagw" created="Tue, 22 May 2012 14:25:10 +0100"  >&lt;p&gt;Looking at the new patch. Meanwhile, I forgot to mention that the name getIndexCount could be made descriptive: e.g. getQualifiedNumberOfIndexes&lt;/p&gt;</comment>
                            <comment id="13280968" author="kristwaa" created="Tue, 22 May 2012 15:03:59 +0100"  >&lt;p&gt;Dag, I have changed the method name in version 1c of the patch.&lt;br/&gt;
I committed it to trunk with revision 1341481.&lt;/p&gt;

&lt;p&gt;Sorry for committing it a bit early, but I chose to do this to get the code tested in tonight&apos;s test runs. At least one patch is outstanding, so I will address any comments you have on patch 1c in a separate patch.&lt;/p&gt;</comment>
                            <comment id="13281032" author="dagw" created="Tue, 22 May 2012 16:26:21 +0100"  >&lt;p&gt;Thanks, Kristian! I have gone though 1b, and it looks good: +1&lt;/p&gt;

&lt;p&gt;Small (optional) comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DiposableIndexStatistics#insertData&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&quot;int reducedRowNumber = ROW_COUNT / 3&quot;: Would be nice to have a&lt;br/&gt;
  comment why this table receives fewer rows? Arbitrary or not?&lt;br/&gt;
  Same for ROW_COUNT really: does it need to be chosen within an&lt;br/&gt;
  interval currently for the test to work?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Magic constants: 2000, 19, 10?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DiposableIndexStatistics#createAndPopulateTables&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;space after &quot;+&quot; (several instances):&lt;br/&gt;
        Assert.assertTrue(stats.getStatsTable(tbl).length == preFkAddition +1);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The sleeps in KeepDiposableStatsPropertyTest and&lt;br/&gt;
  AutomaticIndexStatisticsTest#testNoUpdateTriggeredBySingleColumnUniqueIndex&lt;br/&gt;
  could be removed (future) if we augment the current&lt;br/&gt;
  WAIT_FOR_POST_COMMIT method to also wait for the istat daemon to&lt;br/&gt;
  complete its thing.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Call &quot;JDBC.assertDrainResultsHasData(stmt.executeQuery(&quot;select&lt;br/&gt;
  count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from &quot; + TAB))&quot; in KeepDiposableStatsPropertyTest might&lt;br/&gt;
  have a comment to say its there to trigger daemon to work.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13281242" author="kristwaa" created="Tue, 22 May 2012 22:55:12 +0100"  >&lt;p&gt;Dag, I&apos;ve addressed most of your suggestions.&lt;br/&gt;
Some comments below:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DiposableIndexStatistics#insertData&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Added comments, skipped the reduced row count. This was a leftover from when I used far more rows in the tables.&lt;/li&gt;
	&lt;li&gt;Commented constants, they&apos;re used to get different numbers of unique values in various columns.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The sleeps ...&lt;br/&gt;
   I have tried to address the one which is most likely to fail intermittently by adding a new method to IndexStatsUtil: getNewStatsTable. It will first wait for the current stats to go away, then it expects to get the same number of updated statistics entries (with a timeout).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Call &quot;JDBC.assertDrainResultsHasData...&lt;br/&gt;
   I removed this, since the checkpoint invocation is missing and the operation is not required for the test to work. Adding a checkpoint, you can observe the following change:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Tue May 22 23:22:01 CEST 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;TestRunner-Thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;APP&quot;.&quot;STAT_SCUI&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=1039, i-est=20 =&amp;gt; cmp=3.9502817175452365&amp;#93;&lt;/span&gt; (queueSize=1)&lt;br/&gt;
&lt;br/&gt;
becomes (note t-est)&lt;br/&gt;
&lt;br/&gt;
Tue May 22 23:24:52 CEST 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;TestRunner-Thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;APP&quot;.&quot;STAT_SCUI&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=2001, i-est=20 =&amp;gt; cmp=4.605670061029743&amp;#93;&lt;/span&gt; (queueSize=1)&lt;/p&gt;

&lt;p&gt;I intend to commit this patch, which I hope is the last one, tomorrow.&lt;br/&gt;
Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="13281439" author="kristwaa" created="Wed, 23 May 2012 08:26:21 +0100"  >&lt;p&gt;Corrected typo in patch file name.&lt;br/&gt;
Also added another comment in one of the tests.&lt;/p&gt;</comment>
                            <comment id="13281523" author="kristwaa" created="Wed, 23 May 2012 12:12:06 +0100"  >&lt;p&gt;Committed patch 2a to trunk with revision 1341830.&lt;br/&gt;
I have no more work planned for this issue, resolving.&lt;/p&gt;</comment>
                            <comment id="13695632" author="jira-bot" created="Fri, 28 Jun 2013 19:23:28 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13695633" author="jira-bot" created="Fri, 28 Jun 2013 19:23:29 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13695634" author="jira-bot" created="Fri, 28 Jun 2013 19:23:30 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13695635" author="jira-bot" created="Fri, 28 Jun 2013 19:23:31 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13696400" author="jira-bot" created="Sun, 30 Jun 2013 20:42:00 +0100"  >&lt;p&gt;Commit 1498173 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1498173&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1498173&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;(indexStat daemon processing tables over and over even when there are no changes in the tables)&lt;/p&gt;

&lt;p&gt;KeepDisposableStatsPropertyTest test is meant for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; which is not in in 10.8 codeline and hence should not be run in 10.8&lt;/p&gt;</comment>
                            <comment id="14119634" author="knutanders" created="Wed, 3 Sep 2014 09:31:42 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12655383">DERBY-6283</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12471534">DERBY-4771</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12628077">DERBY-6045</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12499612">DERBY-5067</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12641497">DERBY-6156</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12528435" name="derby-3790-1a-skip_stats_scui.diff" size="9139" author="kristwaa" created="Mon, 21 May 2012 15:38:42 +0100"/>
                            <attachment id="12528579" name="derby-3790-1b-skip_stats_scui.diff" size="56224" author="kristwaa" created="Tue, 22 May 2012 12:32:37 +0100"/>
                            <attachment id="12528593" name="derby-3790-1c-skip_stats_scui.diff" size="56494" author="kristwaa" created="Tue, 22 May 2012 15:03:59 +0100"/>
                            <attachment id="12528709" name="derby-3790-2a-minor_test_improvements.diff" size="7050" author="kristwaa" created="Wed, 23 May 2012 08:26:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Feb 2010 09:47:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31000</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0bnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35705</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>