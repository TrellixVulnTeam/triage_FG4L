<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:14:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2730/DERBY-2730.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2730] Implement not implemented Embedded methods Blob.getBinaryStream(long pos, long length) and Clob. getCharacterStream(long pos, long length)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2730</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following methods were introduced in the java.sql.Clob and java.sql.Blob interface as part of JDBC 4.0 and need to be implemented.&lt;/p&gt;

&lt;p&gt;Clob&lt;br/&gt;
------&lt;/p&gt;

&lt;p&gt;getCharacterStream(long pos, long length)&lt;/p&gt;

&lt;p&gt;Blob&lt;br/&gt;
------&lt;/p&gt;

&lt;p&gt;getBinaryStream(long pos, long length)&lt;/p&gt;

&lt;p&gt;The implementation on the Network Client is already done as part of Derby-2444&lt;/p&gt;</description>
                <environment></environment>
        <key id="12370518">DERBY-2730</key>
            <summary>Implement not implemented Embedded methods Blob.getBinaryStream(long pos, long length) and Clob. getCharacterStream(long pos, long length)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 May 2007 11:27:35 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:31 +0100</updated>
                            <resolved>Thu, 14 Jun 2007 11:28:16 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12500124" author="narayanan" created="Wed, 30 May 2007 14:06:53 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2711&quot; title=&quot;If large blob is updated after InputStream is fetched (using getBinaryStream), the stream continues to point ot old data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2711&quot;&gt;&lt;del&gt;DERBY-2711&lt;/del&gt;&lt;/a&gt; introduces a wrapper class UpdateableBlobStream which shall be used&lt;br/&gt;
to return a subset of the underlying Blob object to the user.&lt;/p&gt;</comment>
                            <comment id="12500146" author="narayanan" created="Wed, 30 May 2007 15:42:27 +0100"  >&lt;p&gt;I have used the patch attached to the issue Derby-2711 to implement this patch. This patch &lt;br/&gt;
hence contains the changes introduced by Derby-2711 also. &lt;/p&gt;

&lt;p&gt;Pls note that this patch is &lt;b&gt;not&lt;/b&gt; for a commit.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java&lt;/p&gt;

&lt;p&gt;Added implementation for the getBinaryStream(long position, long length) method&lt;br/&gt;
that wraps the stream returned from the getBinaryStream method inside the &lt;br/&gt;
UpdateableBlobStream, using the constructor that accepts a position&lt;br/&gt;
and length as parameter, to return a subset of the Blob value.&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/jdbc/UpdateableBlobStream.java&lt;/p&gt;

&lt;p&gt;Added a constructor that accepts position and length as parameter. Modified&lt;br/&gt;
the read methods to use the restriction on the position and length of the&lt;br/&gt;
stream.&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobUpdateableStreamTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/_Suite.java&lt;/p&gt;

&lt;p&gt;The other changes are related to Derby-2711&lt;/p&gt;

&lt;p&gt;Pls consider this patch for reviews and comments&lt;/p&gt;</comment>
                            <comment id="12500320" author="bernt" created="Thu, 31 May 2007 09:58:08 +0100"  >&lt;p&gt;1) Looks fair enough, although I will not consider the review done until after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2711&quot; title=&quot;If large blob is updated after InputStream is fetched (using getBinaryStream), the stream continues to point ot old data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2711&quot;&gt;&lt;del&gt;DERBY-2711&lt;/del&gt;&lt;/a&gt; is committed and a clean patch submitted.&lt;br/&gt;
2) There&apos;s no explanation why Clob.getCharacterStream isn&apos;t a part of this patch.&lt;/p&gt;</comment>
                            <comment id="12500329" author="narayanan" created="Thu, 31 May 2007 10:24:56 +0100"  >&lt;p&gt;Thank you for the reviews and comments.&lt;/p&gt;

&lt;p&gt;&amp;gt; 1) Looks fair enough, although I will not consider the review done until after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2711&quot; title=&quot;If large blob is updated after InputStream is fetched (using getBinaryStream), the stream continues to point ot old data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2711&quot;&gt;&lt;del&gt;DERBY-2711&lt;/del&gt;&lt;/a&gt; is committed and a clean patch submitted. &lt;/p&gt;

&lt;p&gt;The Derby-2711 changes will not exist when I submit a follow-up patch once Derby-2711 &lt;br/&gt;
is committed. &lt;/p&gt;

&lt;p&gt;You have mentioned clean patch, so I just wanted to ensure that you did&lt;br/&gt;
feel unhappy with the alignment, non-presence of whit-space diffs and other general&lt;br/&gt;
standard requirements of clean code. &lt;/p&gt;

&lt;p&gt;Pls do mention if the code is falling in  quality in any of these and &lt;br/&gt;
I will correct them duly.&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) There&apos;s no explanation why Clob.getCharacterStream isn&apos;t a part of this patch.&lt;/p&gt;

&lt;p&gt;I am sorry I should have mentioned this in the comments. &lt;/p&gt;

&lt;p&gt;Derby-2712 seems to be making changes to the wrapper in the same way&lt;br/&gt;
Derby-2711 does. I could therefore not pull-out a patch as I have done in the&lt;br/&gt;
case of Derby-2711 and make changes in way of a review patch since any&lt;br/&gt;
changes to current classes would have had a conflict from the patch for Derby-2712.&lt;/p&gt;

&lt;p&gt;Can someone familiar with Derby-2712 pls tell me if the assumption I have made in the&lt;br/&gt;
above comment is correct?&lt;/p&gt;</comment>
                            <comment id="12500330" author="bernt" created="Thu, 31 May 2007 10:32:54 +0100"  >&lt;p&gt;I saw no white-space or layout issues. By &quot;clean patch&quot; in my comment, I meant a stand-alone patch independent of other non-committed changes.&lt;/p&gt;</comment>
                            <comment id="12500337" author="narayanan" created="Thu, 31 May 2007 10:50:31 +0100"  >&lt;p&gt;Thanks again for the comments, I shall make the changes as soon as Derby-2711 is committed and submit the patch.&lt;/p&gt;</comment>
                            <comment id="12503093" author="narayanan" created="Sat, 9 Jun 2007 16:36:50 +0100"  >&lt;p&gt;Derby-2711 has been committed. I have removed these changes from&lt;br/&gt;
the patch previously marked as not for commit.&lt;/p&gt;

&lt;p&gt;I ran the modified BlobTest and it ran without failures.&lt;/p&gt;

&lt;p&gt;I have started a junit All run and shall revert back with&lt;br/&gt;
the results.&lt;/p&gt;

&lt;p&gt;Pls consider this patch for reviews and comments&lt;/p&gt;</comment>
                            <comment id="12503283" author="narayanan" created="Mon, 11 Jun 2007 06:32:27 +0100"  >&lt;p&gt;The tests I had started on Saturday did not complete, I have started a &lt;br/&gt;
new test run today. The tests seemed to be&lt;br/&gt;
hanging and from the output of junit.textui.TestRunner I was not able to &lt;br/&gt;
affirm which test was hanging and also&lt;br/&gt;
if it was due to my change.&lt;/p&gt;

&lt;p&gt;I will run tests again and revert back with the results today. I &lt;br/&gt;
Apologize for this unexpected delay.&lt;/p&gt;

</comment>
                            <comment id="12503286" author="narayanan" created="Mon, 11 Jun 2007 06:41:26 +0100"  >&lt;p&gt;I just found out that there was a problem in the machine I was running &lt;br/&gt;
tests. But I will anyway run&lt;br/&gt;
tests once more today to re-affirm the that there are no problems in the &lt;br/&gt;
implementation.&lt;/p&gt;


</comment>
                            <comment id="12503860" author="bernt" created="Tue, 12 Jun 2007 14:47:50 +0100"  >&lt;p&gt;Awkward first sentence in javadoc for new  UpdateableBlobStream constructor. The rest is ok.&lt;/p&gt;</comment>
                            <comment id="12503862" author="narayanan" created="Tue, 12 Jun 2007 14:52:27 +0100"  >&lt;p&gt;I had to initialize maxPos to -1 in the constructor of UpdateableBlobStream&lt;br/&gt;
that does not accept length as parameter.  I was planning to produce a &lt;br/&gt;
follow-up&lt;br/&gt;
just now. I will correct this issue along with the maxPos one. Thank you &lt;br/&gt;
for&lt;br/&gt;
taking a look at this.&lt;/p&gt;


</comment>
                            <comment id="12503868" author="narayanan" created="Tue, 12 Jun 2007 15:19:15 +0100"  >&lt;p&gt;I have made the following changes in the follow-up&lt;/p&gt;

&lt;p&gt;1) I have initialized maxPos to -1 in the constructor that&lt;br/&gt;
     does not accept length as a parameter.&lt;br/&gt;
2) I have updated the javadoc to say the following&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Construct an &amp;lt;code&amp;gt;UpdateableBlobStream&amp;lt;code&amp;gt; using the&lt;/li&gt;
	&lt;li&gt;&amp;lt;code&amp;gt;InputStream&amp;lt;/code&amp;gt; received as parameter. The initial&lt;/li&gt;
	&lt;li&gt;position in the stream is set to &amp;lt;code&amp;gt;pos&amp;lt;/code&amp;gt; and the&lt;/li&gt;
	&lt;li&gt;stream is restricted to a length of &amp;lt;code&amp;gt;len&amp;lt;/code&amp;gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     Pls do mention if this is OK&lt;/p&gt;

&lt;p&gt;I ran BlobClob4BlobTest without failures and have started a junit All run.&lt;/p&gt;

&lt;p&gt;Sorry about the delayed test runs. I shall post the results as soon as the test&lt;br/&gt;
completes.&lt;/p&gt;</comment>
                            <comment id="12503884" author="narayanan" created="Tue, 12 Jun 2007 16:36:28 +0100"  >&lt;p&gt;The getCharacterStream(long, long) implementation is blocked by &lt;br/&gt;
the changes in Derby-2712.&lt;/p&gt;

&lt;p&gt;Pls note that this is only for the getCharacterStream implementation.&lt;/p&gt;</comment>
                            <comment id="12504123" author="narayanan" created="Wed, 13 Jun 2007 07:01:45 +0100"  >&lt;p&gt;I have run tests on GetBinaryStreamImpl_v2.diff and saw no failures. If everything is OK I request&lt;br/&gt;
for this patch to be considered for a commit.&lt;/p&gt;</comment>
                            <comment id="12504213" author="bernt" created="Wed, 13 Jun 2007 13:26:18 +0100"  >&lt;p&gt;getBinaryStream ok.&lt;br/&gt;
Committed revision 546838.&lt;/p&gt;</comment>
                            <comment id="12504221" author="narayanan" created="Wed, 13 Jun 2007 13:58:27 +0100"  >&lt;p&gt;Thanks a ton for the commit Bernt !!&lt;/p&gt;


</comment>
                            <comment id="12504296" author="narayanan" created="Wed, 13 Jun 2007 16:42:46 +0100"  >&lt;p&gt;Pls find the implementation of Clob.getCharacterStream(long, long). The logic&lt;br/&gt;
followed is very similar to the getBinaryStream(long, long) implementation.&lt;/p&gt;

&lt;p&gt;I am running junit All on this patch and shall revert back with the test results.&lt;/p&gt;</comment>
                            <comment id="12504544" author="narayanan" created="Thu, 14 Jun 2007 06:32:27 +0100"  >&lt;p&gt;I ran junit All on this patch and found no failures.&lt;/p&gt;


</comment>
                            <comment id="12504582" author="bernt" created="Thu, 14 Jun 2007 08:53:14 +0100"  >&lt;p&gt;ClobUpdateableReader (EmbedClob clob, long pos, long len)  throws an SQLException but the javadoc has @throws IOException. Same goes for UpdateableBlobStream (i missed it in the previous review).&lt;/p&gt;

&lt;p&gt;Also: in both constructors (ClobUpdateableReader and UpdateableBlobStream), you do&lt;br/&gt;
            SQLException sqle = new SQLException();&lt;br/&gt;
            sqle.initCause(ioe);&lt;br/&gt;
            throw sqle;&lt;br/&gt;
I.e.: an SQLException with no message and no sql state is thrown. I think it should have both.&lt;/p&gt;</comment>
                            <comment id="12504595" author="narayanan" created="Thu, 14 Jun 2007 09:24:27 +0100"  >&lt;p&gt;I will fix this Bernt! Thanx for the review.&lt;/p&gt;


</comment>
                            <comment id="12504619" author="narayanan" created="Thu, 14 Jun 2007 10:24:17 +0100"  >&lt;p&gt;Thank you for the review on the patch. &lt;/p&gt;

&lt;p&gt;I found a clue on how to handle this from already exisiting&lt;br/&gt;
usage of the other Updatable stream constructors.&lt;/p&gt;

&lt;p&gt;I removed the try catch in the updatable streams and&lt;br/&gt;
moved them into the corresponding Lob classes where&lt;br/&gt;
they were being used. Here I called the Util.setStreamFailure&lt;br/&gt;
passing the IOException as parameter.&lt;/p&gt;

&lt;p&gt;I ran the jdbc4/BlobTest, jdbc4/ClobTest and jdbcapi/BlobClob4BlobTest&lt;br/&gt;
and saw no failures.&lt;/p&gt;

&lt;p&gt;I have started a junit All run and shall revert back with results.&lt;/p&gt;</comment>
                            <comment id="12504643" author="bernt" created="Thu, 14 Jun 2007 11:28:16 +0100"  >&lt;p&gt;Patch ok.&lt;br/&gt;
Committed revision 547203.&lt;/p&gt;</comment>
                            <comment id="12504647" author="narayanan" created="Thu, 14 Jun 2007 11:32:26 +0100"  >&lt;p&gt;Thank you for the commit Bernt !!&lt;/p&gt;


</comment>
                            <comment id="12504672" author="kristwaa" created="Thu, 14 Jun 2007 13:03:20 +0100"  >&lt;p&gt;Unless I get wild protests, I will change the following line in the ClobUpdateableReader constructor as below:&lt;br/&gt;
+        maxPos = Math.min(clob.length(), pos + len);&lt;br/&gt;
to be simply&lt;br/&gt;
           maxPos = pos + len;&lt;/p&gt;

&lt;p&gt;The reason is that the clob.length() call can be very expensive. At this point, we might have already exhausted the stream two times. Doing it even once more is unnecessary in this case:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;First of all the check is already done in EmbedClob.getCharacterStream(long,long). This must be done to comply with the JDBC spec.&lt;/li&gt;
	&lt;li&gt;Second, even if the former test was removed, ClobUpdateableReader would behave properly if maxPos turns out to be set to a value larger then the actual size of the Clob. The underlying stream would simply return -1, which is exactly what the maxPos variable is used for anyway.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The change will go in with another change in a yet-to-be-created-Jira (I will create a link to it).&lt;/p&gt;</comment>
                            <comment id="12504701" author="narayanan" created="Thu, 14 Jun 2007 13:50:26 +0100"  >&lt;p&gt;I am OK with this kristian.&lt;/p&gt;

</comment>
                            <comment id="12505053" author="narayanan" created="Fri, 15 Jun 2007 07:06:41 +0100"  >&lt;p&gt;All patches submitted and committed. Indicated change going into another jira.&lt;br/&gt;
Hence dlosing this issue!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12370387">DERBY-2711</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12370394">DERBY-2712</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12343409">DERBY-1341</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12371623">DERBY-2818</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12359344" name="GetBinaryStreamImpl_v1.diff" size="8161" author="narayanan" created="Sat, 9 Jun 2007 16:36:50 +0100"/>
                            <attachment id="12359345" name="GetBinaryStreamImpl_v1.stat" size="244" author="narayanan" created="Sat, 9 Jun 2007 16:36:50 +0100"/>
                            <attachment id="12358539" name="GetBinaryStreamImpl_v1_NOT_FOR_COMMIT.diff" size="24613" author="narayanan" created="Wed, 30 May 2007 15:42:26 +0100"/>
                            <attachment id="12358540" name="GetBinaryStreamImpl_v1_NOT_FOR_COMMIT.stat" size="430" author="narayanan" created="Wed, 30 May 2007 15:42:26 +0100"/>
                            <attachment id="12359515" name="GetBinaryStreamImpl_v2.diff" size="8562" author="narayanan" created="Tue, 12 Jun 2007 15:19:14 +0100"/>
                            <attachment id="12359516" name="GetBinaryStreamImpl_v2.stat" size="244" author="narayanan" created="Tue, 12 Jun 2007 15:19:15 +0100"/>
                            <attachment id="12359609" name="GetCharacterStreamImpl_v1.diff" size="9118" author="narayanan" created="Wed, 13 Jun 2007 16:42:46 +0100"/>
                            <attachment id="12359610" name="GetCharacterStreamImpl_v1.stat" size="244" author="narayanan" created="Wed, 13 Jun 2007 16:42:46 +0100"/>
                            <attachment id="12359701" name="GetCharacterStreamImpl_v2.diff" size="11307" author="narayanan" created="Thu, 14 Jun 2007 10:24:17 +0100"/>
                            <attachment id="12359702" name="GetCharacterStreamImpl_v2.stat" size="377" author="narayanan" created="Thu, 14 Jun 2007 10:24:17 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 May 2007 08:58:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30582</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0t2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38529</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>