<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:55 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3360/DERBY-3360.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3360] Invalid method java.lang.Integer &gt;&gt; void &lt;init&gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&lt;init&gt;(short)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3360</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;/p&gt;


&lt;p&gt;True, but I believe, not a helpful observation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;FN_MATCHES(A.f, C.d) returns short/SMALLINT&lt;/p&gt;

&lt;p&gt;related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt; ? But this is on the 10.3 branch &lt;span class=&quot;error&quot;&gt;&amp;#91;10.3.2.2 - (616244M)&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;DEBUG 68421 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (Template.java:69) - SQL: SELECT A.a, D.b, B.c, C.d FROM C JOIN A ON C.e = &apos;I&apos; AND A.f IS NOT NULL AND A.g = C.g AND FN_MATCHES(A.f, C.d) &amp;lt;&amp;gt; 1 JOIN B ON B.h = A.g JOIN D ON D.h = URID.h&lt;br/&gt;
java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;br/&gt;
        at java.lang.Class.getConstructor0(Class.java:2706)&lt;br/&gt;
        at java.lang.Class.getConstructor(Class.java:1657)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:115)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:745)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.pushNewComplete(BCMethod.java:779)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(StaticMethodCallNode.java:995)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:167)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpression(BinaryOperatorNode.java:599)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode.generateExpression(BinaryLogicalOperatorNode.java:157)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1484)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1579)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1555)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1479)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1577)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1555)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1479)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1440)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:109)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:564)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:347)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:447)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:746)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:129)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(EmbedPreparedStatement20.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(EmbedPreparedStatement30.java:63)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.&amp;lt;init&amp;gt;(EmbedPreparedStatement40.java:40)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:105)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:923)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:751)&lt;/p&gt;

&lt;p&gt;       &lt;span class=&quot;error&quot;&gt;&amp;#91;..&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.derby.exe.ac12564092x0117xc525x43e4xffffbce342b018.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:74)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:745)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:739)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:797)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:801)&lt;br/&gt;
        at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:218)&lt;/p&gt;

&lt;p&gt;Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;/p&gt;

&lt;p&gt;DEBUG 70472 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (Template.java:120) - java.sql.SQLException: Java exception: &apos;ASSERT FAILED Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short): org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
ERROR 70500 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (TransactionTemplate.java:163) - Application exception overridden by rollback exception&lt;br/&gt;
org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [ &amp;lt;Statement that fires trigger removed&amp;gt; ]; SQL state &lt;span class=&quot;error&quot;&gt;&amp;#91;XJ001&amp;#93;&lt;/span&gt;; error code &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;; Java exception: &apos;: java.lang.NullPointerException&apos;.; nested exception is java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
Caused by: &lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1573)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1294)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:745)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:739)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:797)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:801)&lt;br/&gt;
        at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:218)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:135)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
        ... 29 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:217)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
        ... 22 more&lt;br/&gt;
FATAL 70508 &lt;span class=&quot;error&quot;&gt;&amp;#91;Main&amp;#93;&lt;/span&gt; (Start.java:153) - Start FAILED&lt;br/&gt;
org.springframework.transaction.TransactionSystemException: Could not roll back JDBC transaction; nested exception is java.sql.SQLNonTransientConnectionException: No current connection.&lt;br/&gt;
Caused by: &lt;br/&gt;
java.sql.SQLNonTransientConnectionException: No current connection.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:76)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:104)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Util.java:208)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(EmbedConnection.java:1548)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(EmbedConnection.java:1759)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.rollback(EmbedConnection.java:1142)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:265)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.rollback(PoolingDataSource.java:288)&lt;br/&gt;
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:259)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:742)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:719)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.rollbackOnException(TransactionTemplate.java:160)&lt;br/&gt;
        at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:138)&lt;br/&gt;
 Caused by: java.sql.SQLException: No current connection.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:135)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
        ... 21 more&lt;/p&gt;


&lt;p&gt;derby.log&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:190)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:745)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.pushNewComplete(BCMethod.java:779)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(StaticMethodCallNode.java:995)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:167)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpression(BinaryOperatorNode.java:599)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode.generateExpression(BinaryLogicalOperatorNode.java:157)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1484)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1579)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1555)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1479)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1577)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1555)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1479)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1440)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:109)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:564)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:347)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:447)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:746)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:129)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(EmbedPreparedStatement20.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(EmbedPreparedStatement30.java:63)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.&amp;lt;init&amp;gt;(EmbedPreparedStatement40.java:40)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:105)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:923)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:751)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;our trigger stored proc java code&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.apache.derby.exe.ac12564092x0117xc525x43e4xffffbce342b018.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:74)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:745)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:739)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:797)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:801)&lt;br/&gt;
        at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:218)&lt;/p&gt;

&lt;p&gt;Cleanup action completed&lt;br/&gt;
2008-01-29 10:44:58.980 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:217)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1163)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:745)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:739)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:797)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:801)&lt;br/&gt;
        at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:218)&lt;/p&gt;

&lt;p&gt;2008-01-29 10:44:58.987 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;Main,5,main&amp;#93;&lt;/span&gt; Equally severe exception raised during cleanup (ignored) null&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CompilerContextImpl.initRequiredPriv(CompilerContextImpl.java:698)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CompilerContextImpl.resetContext(CompilerContextImpl.java:158)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CompilerContextImpl.cleanupOnError(CompilerContextImpl.java:107)&lt;br/&gt;
        at org.apache.derby.iapi.services.context.ContextManager.cleanupOnError(ContextManager.java:327)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnError(TransactionResourceImpl.java:419)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:337)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1573)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1294)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:101)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:745)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:538)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:739)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:797)&lt;br/&gt;
        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:801)&lt;br/&gt;
        at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:218)&lt;/p&gt;

&lt;p&gt;Cleanup action completed&lt;/p&gt;
</description>
                <environment>Derby 10.3 Branch [10.3.2.2 - (616244M)] and 10.3.2.1&lt;br/&gt;
java version &amp;quot;1.6.0_03&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_03-b05)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 1.6.0_03-b05, mixed mode)</environment>
        <key id="12387371">DERBY-3360</key>
            <summary>Invalid method java.lang.Integer &gt;&gt; void &lt;init&gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&lt;init&gt;(short)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="northshorefiend">James Alan Shepherd</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2008 11:18:39 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:23 +0000</updated>
                            <resolved>Fri, 25 Jul 2008 23:05:38 +0100</resolved>
                                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12563531" author="northshorefiend" created="Tue, 29 Jan 2008 14:27:21 +0000"  >&lt;p&gt;More info,&lt;/p&gt;

&lt;p&gt;CAST(FN_MATCHES(..) AS INTEGER) avoids the bug.&lt;/p&gt;

&lt;p&gt;10.3.1.4 (sane) shows this behaviour too&lt;/p&gt;
</comment>
                            <comment id="12563608" author="northshorefiend" created="Tue, 29 Jan 2008 18:37:58 +0000"  >&lt;p&gt;10.3.2.1 (sane) shows the behaviour.&lt;/p&gt;

&lt;p&gt;Now, here&apos;s the rub:&lt;/p&gt;

&lt;p&gt;10.3.2.1 (insane) runs more of the SQL script, but fails with seemingly the same stack trace, the top of which from derby.log is:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumn.columnTypeAndLengthMatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.columnTypesAndLengthsMatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultSetNode.columnTypesAndLengthsMatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.UnionNode.addNewNodes(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.UnionNode.modifyAccessPaths(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SingleChildResultSetNode.modifyAccessPaths(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLModStatementNode.optimizeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeBatchElement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(Unknown Source)&lt;/p&gt;

&lt;p&gt;This second failure point is like&lt;/p&gt;

&lt;p&gt;INSERT INTO t1 (c1)&lt;br/&gt;
SELECT c1 FROM t2&lt;br/&gt;
UNION&lt;br/&gt;
SELECT c1FROM t3.&lt;/p&gt;

&lt;p&gt;The crucial point is that the UNION has a SMALLINT column in it. If I re-write as:&lt;/p&gt;

&lt;p&gt;INSERT INTO t1 (c1)&lt;br/&gt;
SELECT CAST(V.c1 AS SMALLINT)&lt;br/&gt;
FROM (&lt;br/&gt;
SELECT c1 FROM t2&lt;br/&gt;
UNION&lt;br/&gt;
SELECT c1FROM t3&lt;br/&gt;
) AS V&lt;/p&gt;

&lt;p&gt;no NPE!!!!&lt;/p&gt;
</comment>
                            <comment id="12572419" author="dyret" created="Tue, 26 Feb 2008 11:01:04 +0000"  >&lt;p&gt;This issue seems to use either &apos;existing application impact&apos; or &apos;release note needed&apos; incorrectly, according to the description at &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://db.apache.org/derby/DerbyBugGuidelines.html#Set+appropriate+special+%22flags%22&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/DerbyBugGuidelines.html#Set+appropriate+special+%22flags%22&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I plan to remove the flags shortly unless there are additional comments.&lt;/p&gt;</comment>
                            <comment id="12572440" author="northshorefiend" created="Tue, 26 Feb 2008 11:57:16 +0000"  >&lt;p&gt;I am unable to use Derby in my application because of this issue.&lt;/p&gt;

&lt;p&gt;I am using Postgres for the time being.&lt;/p&gt;

&lt;p&gt;If this is fixed then I can continue debugging (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3221&quot; title=&quot;&amp;quot;java.sql.SQLException: The conglomerate (-5) requested does not exist.&amp;quot; from Derby 10.3.1.4 embedded within Eclipse 3.3 and RAD 7.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3221&quot;&gt;&lt;del&gt;DERBY-3221&lt;/del&gt;&lt;/a&gt;) and hopefully support Derby again.&lt;/p&gt;

&lt;p&gt;Is this not what the flag is for?&lt;/p&gt;

&lt;p&gt;This issue may be a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12572450" author="dyret" created="Tue, 26 Feb 2008 12:24:20 +0000"  >&lt;p&gt;To quote from the link I mentioned:&lt;/p&gt;

&lt;p&gt;&quot;Existing Application impact: an existing application can be impacted by the solution to this issue.&quot;&lt;/p&gt;

&lt;p&gt;Note that is the SOLUTION that will impact an existing application, NOT the bug. &lt;/p&gt;

&lt;p&gt;The typical example would be if Derby incorrectly allowed something which either JDBC  or SQL forbids. The solution is to forbid that something and throw an exception. But that could cause existing applications, that inadvertently had come to rely on the incorrect behavior, to break. &lt;/p&gt;

&lt;p&gt;I can&apos;t really see anyone depending on the incorrect behavior caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3360&quot; title=&quot;Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3360&quot;&gt;&lt;del&gt;DERBY-3360&lt;/del&gt;&lt;/a&gt;, so that is why I want to remove the flag.&lt;/p&gt;

&lt;p&gt;It seems like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3221&quot; title=&quot;&amp;quot;java.sql.SQLException: The conglomerate (-5) requested does not exist.&amp;quot; from Derby 10.3.1.4 embedded within Eclipse 3.3 and RAD 7.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3221&quot;&gt;&lt;del&gt;DERBY-3221&lt;/del&gt;&lt;/a&gt; has been closed? I believe &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt; is being worked on, but it seems to be a more fundamental problem than I first thought...&lt;/p&gt;
</comment>
                            <comment id="12572465" author="northshorefiend" created="Tue, 26 Feb 2008 13:14:56 +0000"  >&lt;p&gt;My apologies.&lt;/p&gt;

&lt;p&gt;My use was because the SOLUTION would enable me to return to using Derby in my EXISTING application.&lt;/p&gt;

&lt;p&gt;I can understand if you do not feel that this is within the scope of the flag.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3221&quot; title=&quot;&amp;quot;java.sql.SQLException: The conglomerate (-5) requested does not exist.&amp;quot; from Derby 10.3.1.4 embedded within Eclipse 3.3 and RAD 7.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3221&quot;&gt;&lt;del&gt;DERBY-3221&lt;/del&gt;&lt;/a&gt; has been closed, but I do not believe it is in any released version yet?&lt;/p&gt;

&lt;p&gt;&quot;I can&apos;t really see anyone depending on the incorrect behavior caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3360&quot; title=&quot;Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3360&quot;&gt;&lt;del&gt;DERBY-3360&lt;/del&gt;&lt;/a&gt;, so that is why I want to remove the flag. &quot;&lt;/p&gt;

&lt;p&gt;If the meaning of the flag is that SOLUTION (as a verb) of this bug may change the behaviour of EXISTING applications DEPENDING ON THE CURRENT BEHAVIOUR of the bug reported, then I do not read this from the definition, and I would suggest it be made clearer.&lt;/p&gt;</comment>
                            <comment id="12572513" author="kmarsden" created="Tue, 26 Feb 2008 15:24:23 +0000"  >&lt;p&gt;James, can you attach a reproducible test case to this issue?  The description does not seem to have the function definition and schema.&lt;/p&gt;</comment>
                            <comment id="12572857" author="northshorefiend" created="Wed, 27 Feb 2008 10:18:58 +0000"  >&lt;p&gt;Test case attached&lt;/p&gt;

&lt;p&gt;Running against 10.3.2.1 sane:&lt;/p&gt;

&lt;p&gt;ij version 10.3&lt;br/&gt;
CONNECTION0* - 	jdbc:derby:testcase&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;= current connection&lt;br/&gt;
ij&amp;gt; CREATE FUNCTION FN_SMALLINT(i INT) RETURNS SMALLINT PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME &apos;Functions.smallint&apos; RETURNS NULL ON NULL INPUT;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; CREATE TABLE test (a INT);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; INSERT INTO test VALUES (1),(2),(3),(4),(5);&lt;br/&gt;
5 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; SELECT a FROM test WHERE FN_SMALLINT(a) &amp;lt;&amp;gt; 1;&lt;br/&gt;
java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;br/&gt;
	at java.lang.Class.getConstructor0(Class.java:2706)&lt;br/&gt;
	at java.lang.Class.getConstructor(Class.java:1657)&lt;br/&gt;
	at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:116)&lt;br/&gt;
	at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:745)&lt;br/&gt;
	at org.apache.derby.impl.services.bytecode.BCMethod.pushNewComplete(BCMethod.java:779)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(StaticMethodCallNode.java:995)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.generateExpression(JavaToSQLValueNode.java:167)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpression(BinaryOperatorNode.java:599)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1484)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1351)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1302)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:109)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:564)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:347)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:447)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:746)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:579)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:528)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:330)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:522)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:364)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:262)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:56)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:71)&lt;br/&gt;
Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short)&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED Invalid method java.lang.Integer &amp;gt;&amp;gt; void &amp;lt;init&amp;gt;(short) because java.lang.NoSuchMethodException: java.lang.Integer.&amp;lt;init&amp;gt;(short): org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12604023" author="rhillegas" created="Tue, 10 Jun 2008 21:29:46 +0100"  >&lt;p&gt;For the record, implicit casting seems to be done when both operands are columns from the same table. The following works:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table test2( a int, b smallint );&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into test2( a, b ) values ( 1, 1 ), ( 2, 3 );&lt;br/&gt;
2 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from test2 where a &amp;lt;&amp;gt; b;&lt;br/&gt;
A          |B     &lt;br/&gt;
------------------&lt;br/&gt;
2          |3     &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</comment>
                            <comment id="12615826" author="kmarsden" created="Wed, 23 Jul 2008 00:27:20 +0100"  >&lt;p&gt;Putting this as SQL component for now. It wasn&apos;t showing up on the bug reports because there was no component.&lt;/p&gt;</comment>
                            <comment id="12616146" author="kmarsden" created="Wed, 23 Jul 2008 17:23:12 +0100"  >&lt;p&gt;If I define the function without the &quot;RETURNS NULL ON NULL INPUT&quot;  it works ok. e.g.&lt;/p&gt;

&lt;p&gt;CREATE FUNCTION FN_SMALLINT(i INT) RETURNS SMALLINT PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME &apos;Functions.smallint&apos;;&lt;/p&gt;

&lt;p&gt;instead of &lt;/p&gt;

&lt;p&gt;CREATE FUNCTION FN_SMALLINT(i INT) RETURNS SMALLINT PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME &apos;Functions.smallint&apos; RETURNS NULL ON NULL INPUT;&lt;/p&gt;</comment>
                            <comment id="12616236" author="kmarsden" created="Wed, 23 Jul 2008 20:43:25 +0100"  >&lt;p&gt;Attached is my first shot at fixing this issue. It is not for commit as no tests have been written or run.  I just verified that it resolves the repro.  I&apos;m just posting to make sure I am on the right track.&lt;/p&gt;

&lt;p&gt;Functions returning SMALLINT are a special case.  The function definition returns short but the actual java return type if RETURN NULL ON NULL INPUT is java.lang.Integer.  I think this is because getObject on a SMALLINT column returns an Integer according to the JDBC spec.  I am assuming this java return type is right.&lt;/p&gt;

&lt;p&gt;Since the java return type is Integer we need to upcast the short to an int before calling 	mbnc.pushNewComplete(1); for this case.&lt;/p&gt;

&lt;p&gt;I&apos;d appreciate if someone could validate this approach.  I will work to turn it into a full patch with tests.  It seems we don&apos;t have much in the way of testing for RETURN NULL ON NULL INPUT, so I will add tests for the other types too.&lt;/p&gt;


</comment>
                            <comment id="12616714" author="kmarsden" created="Fri, 25 Jul 2008 00:58:24 +0100"  >&lt;p&gt;Attached is a patch for this issue.  The code change is the same as I proposed earlier.  Please review.&lt;/p&gt;</comment>
                            <comment id="12616874" author="knutanders" created="Fri, 25 Jul 2008 13:22:26 +0100"  >&lt;p&gt;Looks like a reasonable fix to me. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12617079" author="kmarsden" created="Fri, 25 Jul 2008 23:05:38 +0100"  >&lt;p&gt;Ported fix to 10.4 and 10.3 branches. Please verify the fix and close the issue.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Kathey&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12376613" name="DERBY-3360-cast.tar.gz" size="8569" author="northshorefiend" created="Wed, 27 Feb 2008 10:18:58 +0000"/>
                            <attachment id="12386842" name="derby-3360_diff.txt" size="7506" author="kmarsden" created="Fri, 25 Jul 2008 00:58:24 +0100"/>
                            <attachment id="12386752" name="derby-3360_preview_diff.txt" size="1133" author="kmarsden" created="Wed, 23 Jul 2008 20:43:25 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Feb 2008 11:01:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23594</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lrj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>