<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:49 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4376/DERBY-4376.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4376] Simple select runs forever</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4376</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;On Derby 10.3.1.4 and later, I see that evaluating the statements below in ij apparently makes Derby go into an infinite loop. The select statement ran for two hours until I aborted it. I do not see this problem on Derby 10.2.2.0 or earlier.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int primary key);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; prepare ps as &apos;select * from t where x=? or x=?&apos;;&lt;br/&gt;
ij&amp;gt; execute ps using &apos;values (cast(null as int), 0)&apos;;&lt;br/&gt;
IJ WARNING: Autocommit may close using result set&lt;br/&gt;
X          &lt;br/&gt;
-----------&lt;/p&gt;</description>
                <environment></environment>
        <key id="12435691">DERBY-4376</key>
            <summary>Simple select runs forever</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Sep 2009 09:52:50 +0100</created>
                <updated>Thu, 6 May 2010 10:00:59 +0100</updated>
                            <resolved>Fri, 25 Sep 2009 18:38:01 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12755424" author="knutanders" created="Tue, 15 Sep 2009 09:55:45 +0100"  >&lt;p&gt;The query uses a MultiProbeTableScanResultSet, which was introduced in 10.4.1.3 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-47&quot; title=&quot;Some possible improvements to IN optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-47&quot;&gt;&lt;del&gt;DERBY-47&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12755499" author="knutanders" created="Tue, 15 Sep 2009 15:01:47 +0100"  >&lt;p&gt;The next probe value in an IN list (the query in the repro is rewritten to and IN query internally) is fetched by MPTSRS.getNextProbeValue() which is called called by MPTSRS.reopenScanController(). In MPTSRS&apos;s parent class (TableScanResultSet) we find this in reopenCore():&lt;/p&gt;

&lt;p&gt;		// Check whether there are any comparisons with unordered nulls&lt;br/&gt;
		// on either the start or stop position.  If there are, we can&lt;br/&gt;
		// (and must) skip the scan, because no rows can qualify&lt;br/&gt;
		if (skipScan(startPosition, stopPosition))&lt;/p&gt;
		{
			scanControllerOpened = false;
		}
&lt;p&gt;		else&lt;/p&gt;
		{
			if (scanController == null)
				openScanController((TransactionController)null);
			else
				reopenScanController();
		
		}

&lt;p&gt;So if startPosition/stopPosition contains a NULL value, reopenScanController() is not called. This means that a new probe value is not fetched, and at the next iteration we&apos;ll still be at the same position in the IN list, so we&apos;ll just continue trying to reopen the scan with start/stop==NULL again and again.&lt;/p&gt;</comment>
                            <comment id="12755984" author="knutanders" created="Wed, 16 Sep 2009 12:29:33 +0100"  >&lt;p&gt;Also, TableScanResultSet.reopenCore() will always reset the start key and the stop key to the first value in the IN list right before we check if the scan can be skipped. So when the first element in the IN list is NULL, the start/stop key will always be NULL when skipScan() is called, and skipScan() will always return true.&lt;/p&gt;

&lt;p&gt;For MultiProbeTableScanResultSet I think we need to somehow set the start/stop key to the actual probe value &lt;b&gt;before&lt;/b&gt; skipScan() is called.&lt;/p&gt;</comment>
                            <comment id="12755985" author="knutanders" created="Wed, 16 Sep 2009 12:34:09 +0100"  >&lt;p&gt;Forgot to mention that initializing start/stop key to the first value in the IN list is documented in PredicateList (see the comment below). Anyway, since it&apos;s just a placeholder, it is not correct to use that value as the argument to skipScan().&lt;/p&gt;

&lt;p&gt;		/* If we have a &quot;useful&quot; IN list probe predicate we will generate a&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;start/stop key for optTable of the form &quot;col = &amp;lt;val&amp;gt;&quot;, where &amp;lt;val&amp;gt;&lt;/li&gt;
	&lt;li&gt;is the first value in the IN-list.  Then during normal index multi-&lt;/li&gt;
	&lt;li&gt;probing (esp. as implemented by exec/MultiProbeTableScanResultSet)&lt;/li&gt;
	&lt;li&gt;we will use that start/stop key as a &quot;placeholder&quot; into which we&apos;ll&lt;/li&gt;
	&lt;li&gt;plug the values from the IN-list one at a time.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12756077" author="knutanders" created="Wed, 16 Sep 2009 16:26:16 +0100"  >&lt;p&gt;Here&apos;s a patch with a fix for this issue, and with a test case.&lt;/p&gt;

&lt;p&gt;The patch moves all the multi-probe logic out of TableScanResultSet and into MultiProbeTableScanResultSet, and instead created methods that MPTSRS could override where different logic was needed. In short:&lt;/p&gt;

&lt;p&gt;1) Initialization of the start/stop keys has been factored out of TSRS.openCore()/TSRS.reopenCore() into a helper method initStartAndStopKey().&lt;/p&gt;

&lt;p&gt;2) MPTSRS overrides initStartAndStopKey() and updates the keys with the actual probe value. This ensures that the keys now have the correct values when TSRS.reopenCore() calls skipScan().&lt;/p&gt;

&lt;p&gt;3) Methods in TSRS that take a probeValue argument have been removed, since MPTSRS.initStartAndStopKey() now does all the work with retrieving the probe value and updating the keys.&lt;/p&gt;

&lt;p&gt;4) Since the next probe value is fetched earlier now MPTSRS.reopenScanController() can no longer use the return value from getNextProbeValue() to decide whether or not it should be a no-op (it should be a no-op the next probe value was null, which means that the probe list has been exhausted). To ensure that we don&apos;t open scans in those cases, set a flag in initStartAndStopKey() to indicate whether or not the probe list was exhausted, and override skipScan() to check that flag and return true if no new probe value was found.&lt;/p&gt;

&lt;p&gt;(As a side note to 4, this should only happen when the last element in the probe list is equal to the previous element. I cannot see that this special case is tested by InListMultiProbeTest. Looking at Ole&apos;s weekly test coverage report, it looks like the code that handles duplicate values in the probe list is not exercised at all by our current tests. I will add some test cases to exercise those code paths, but in a separate patch/issue since it&apos;s not directly related to this bug.)&lt;/p&gt;

&lt;p&gt;I&apos;ve started a full run of the regression test suites.&lt;/p&gt;</comment>
                            <comment id="12756087" author="knutanders" created="Wed, 16 Sep 2009 16:43:14 +0100"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4378&quot; title=&quot;Create test cases for MultiProbeTableScanResultSet with duplicates in the probe list&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4378&quot;&gt;&lt;del&gt;DERBY-4378&lt;/del&gt;&lt;/a&gt; for the missing duplicate tests.&lt;/p&gt;</comment>
                            <comment id="12756089" author="bryanpendleton" created="Wed, 16 Sep 2009 16:48:37 +0100"  >&lt;p&gt;Ha! I misread your comment at first and it made me do a double-take.&lt;/p&gt;

&lt;p&gt;Then I re-read it, and realized that you meant &quot;missing tests of duplicate values&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;To keep this comment from being entirely light-hearted, I think your overall approach&lt;br/&gt;
(refactoring the logic so that MPTSRS can override it more cleanly) sounds excellent.&lt;/p&gt;</comment>
                            <comment id="12756202" author="knutanders" created="Wed, 16 Sep 2009 20:46:54 +0100"  >&lt;p&gt;Yes, that&apos;s what I meant to say. Writing clearly would make it too easy for the readers... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly, so I&apos;m checking Patch Available.&lt;/p&gt;</comment>
                            <comment id="12757053" author="knutanders" created="Fri, 18 Sep 2009 09:48:05 +0100"  >&lt;p&gt;Committed revision 816536.&lt;/p&gt;

&lt;p&gt;I plan to port the fix to the 10.5 branch, so I&apos;ll leave the issue open for now.&lt;/p&gt;</comment>
                            <comment id="12759643" author="knutanders" created="Fri, 25 Sep 2009 18:38:01 +0100"  >&lt;p&gt;Merged the fix to the 10.5 branch and committed revision 818924.&lt;/p&gt;</comment>
                            <comment id="12761800" author="mamtas" created="Sat, 3 Oct 2009 03:54:49 +0100"  >&lt;p&gt;Merged changes into 10.4 codeline with revision 821226. The only error I got was for BlobClob4BlobTest.testLockingWithLongRowBlob and it looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3740&quot; title=&quot;BlobClob4BlobTest.testLockingWithLongRowBlob fails with .AssertionFailedError: FAIL - statement should timeout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3740&quot;&gt;&lt;del&gt;DERBY-3740&lt;/del&gt;&lt;/a&gt; although my testing was on windows xp machine using IBM16 jdk&lt;/p&gt;

&lt;p&gt;1) testLockingBlob(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)junit.framework.AssertionFailedError: FAIL - should have gotten lock timeout&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testLockingBlob(BlobClob4BlobTest.java:2413)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:102)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="12762228" author="mamtas" created="Mon, 5 Oct 2009 16:54:03 +0100"  >&lt;p&gt;Merged into 10.3 codeline with 821557. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12463843">DERBY-4644</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="27899">DERBY-47</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12435842">DERBY-4378</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12437173">ODE-671</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12419782" name="derby-4376-1a.diff" size="16626" author="knutanders" created="Wed, 16 Sep 2009 16:26:16 +0100"/>
                            <attachment id="12419783" name="derby-4376-1a.stat" size="262" author="knutanders" created="Wed, 16 Sep 2009 16:26:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 16 Sep 2009 15:48:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24216</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0qg7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38103</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>