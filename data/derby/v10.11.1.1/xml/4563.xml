<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4563/DERBY-4563.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4563] Avoid unnecessary use of getStream and getStreamWithDescriptor</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4563</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A pattern in Derby is to use the following piece of code to determine if the data value has a stream or not:&lt;br/&gt;
    if (dvd.getStream() != null) ...&lt;/p&gt;

&lt;p&gt;Since the stream has mutable state, obtaining a reference to it just to check if it is not null is sub-optimal for several reasons:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it may throw an exception (data types not supporting streams)&lt;/li&gt;
	&lt;li&gt;the stream reference is leaked, which is unfortunately if we are / will be required to guarantee something about the stream state (for instance that the descriptor is in sync with the stream).&lt;/li&gt;
	&lt;li&gt;in cases where we have to investigate the state of the stream, we&apos;re doing unnecessary work&lt;/li&gt;
	&lt;li&gt;makes it harder to write debug code (i.e., is a stream reference obtained from the data value descriptor more than once?)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I plan to introduce the method DataValueDescriptor.hasStream, returning a boolean.&lt;br/&gt;
In addition to the obvious check if the stream variable is non-null, it can also be used to instruct Derby to treat certain data values as non-streams even though the underlying value is currently a stream. One example is CHAR and VARCHAR, whose maximum lengths are so small that they should always be materialized to avoid the added complexity coming with streams (stream state, isolation levels - extra lock to keep stream stable?, cloning).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12457149">DERBY-4563</key>
            <summary>Avoid unnecessary use of getStream and getStreamWithDescriptor</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 23 Feb 2010 12:40:41 +0000</created>
                <updated>Thu, 4 Mar 2010 13:26:28 +0000</updated>
                            <resolved>Fri, 26 Feb 2010 10:34:35 +0000</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12837228" author="kristwaa" created="Tue, 23 Feb 2010 12:53:39 +0000"  >&lt;p&gt;Attached patch 1a.&lt;/p&gt;

&lt;p&gt;The most notable change is that Derby will thrown an exception if a call to getStream or getStreamWithDescriptor is made on a data type that supports streams (i.e. SQLClob) but that doesn&apos;t have a stream. This indicates that hasStream wasn&apos;t called up front to see if the value should be represented as a stream or not.&lt;br/&gt;
Note that streams for values going in to Derby (inserts) will be obtained through the Resetable-interface, not DataValueDescriptor.&lt;/p&gt;

&lt;p&gt;Regression tests passed, patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12837548" author="dagw" created="Wed, 24 Feb 2010 00:35:42 +0000"  >&lt;p&gt;Looks like a good cleanup to me. +1&lt;/p&gt;

&lt;p&gt;This comment might be made more clear: it was not obvious just by reading the code what optimization you are referring to here:&lt;/p&gt;

&lt;p&gt;+     * Note that some data types may choose to return &lt;/p&gt;
{@code false}
&lt;p&gt; here even&lt;br/&gt;
+     * if their source is a stream. This is an optimization.&lt;/p&gt;</comment>
                            <comment id="12838320" author="kristwaa" created="Thu, 25 Feb 2010 12:21:27 +0000"  >&lt;p&gt;Thanks for reviewing the patch, Dag.&lt;br/&gt;
I decided to remove the unclear comment for now, as I realized it isn&apos;t entirely clear how this will play out yet. I do plan to revisit the issue (at latest when optimizing the cloneValue methods for BLOB/CLOB).&lt;br/&gt;
I&apos;m also having some doubts about the call to hasStream in getStream / getStreamWithDescriptor, and I did consider simply changing the implementation to do just &apos;stream != null&apos;. Again, I&apos;ll have to revisit this when / if more substantial logic is added to the hasStream-method.&lt;/p&gt;

&lt;p&gt;Committed the newly attached patch 1b to trunk with revision 916261.&lt;/p&gt;

&lt;p&gt;I will post another patch shortly, replacing the use of StreamStorable in the JDBC-layer.&lt;/p&gt;</comment>
                            <comment id="12838332" author="kristwaa" created="Thu, 25 Feb 2010 12:59:58 +0000"  >&lt;p&gt;Patch 2a replaces the two occurrences of StreamStorable in the JDBC layer, using DVD.getStream() instead.&lt;br/&gt;
I also observe that the use of setupContextStack() is inconsistent. In some places it is invoked regardless of whether the value is a stream or not, in other cases a stack is pushed only when  the value is represented by a stream.&lt;/p&gt;

&lt;p&gt;I expect to commit this tomorrow, I&apos;m just waiting for the regression tests to finish.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12838808" author="kristwaa" created="Fri, 26 Feb 2010 10:34:35 +0000"  >&lt;p&gt;Regression tests passed.&lt;/p&gt;

&lt;p&gt;Committed patch 2a to trunk with revision 916640.&lt;br/&gt;
I don&apos;t plan to do more work on this issue.&lt;/p&gt;</comment>
                            <comment id="12841238" author="kristwaa" created="Thu, 4 Mar 2010 13:26:28 +0000"  >&lt;p&gt;Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12436706" name="derby-4563-1a-dvd_hasStream.diff" size="21628" author="kristwaa" created="Tue, 23 Feb 2010 12:53:39 +0000"/>
                            <attachment id="12436707" name="derby-4563-1a-dvd_hasStream.stat" size="1007" author="kristwaa" created="Tue, 23 Feb 2010 12:53:39 +0000"/>
                            <attachment id="12436995" name="derby-4563-1b-dvd_hasStream.diff" size="21477" author="kristwaa" created="Thu, 25 Feb 2010 12:21:27 +0000"/>
                            <attachment id="12436998" name="derby-4563-2a-replace_streamstorable_in_jdbclayer.diff" size="2138" author="kristwaa" created="Thu, 25 Feb 2010 12:59:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Feb 2010 00:35:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31277</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0r0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38194</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>