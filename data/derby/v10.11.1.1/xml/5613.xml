<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5613/DERBY-5613.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5613] Queries with group by column not included in the column list for JOIN(INNER or OUTER) with NATURAL or USING does not fail</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5613</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A query like following does not raise an error even though countries.country is not part of the SELECT column list.&lt;br/&gt;
SELECT country,count(country) FROM &lt;br/&gt;
COUNTRIES JOIN CITIES USING (COUNTRY) group by countries.country &lt;/p&gt;

&lt;p&gt;This jira is related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4631&quot; title=&quot;Wrong join column returned by right outer join with NATURAL or USING and territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4631&quot;&gt;&lt;del&gt;DERBY-4631&lt;/del&gt;&lt;/a&gt;. As noted by Knut in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4631&quot; title=&quot;Wrong join column returned by right outer join with NATURAL or USING and territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4631&quot;&gt;&lt;del&gt;DERBY-4631&lt;/del&gt;&lt;/a&gt;, SQL:2003 says that the join columns in a natural join or in a named columns join should be added to the select list by coalescing the column from the left table with the column from the right table. &lt;/p&gt;

&lt;p&gt;Section 7.7, &amp;lt;joined table&amp;gt;, syntax rules: &lt;/p&gt;

&lt;p&gt;&amp;gt; 1) Let TR1 be the first &amp;lt;table reference&amp;gt;, and let TR2 be the &amp;lt;table &lt;br/&gt;
&amp;gt; reference&amp;gt; or &amp;lt;table factor&amp;gt; that is the second operand of the &lt;br/&gt;
&amp;gt; &amp;lt;joined table&amp;gt;. Let RT1 and RT2 be the row types of TR1 and TR2, &lt;br/&gt;
&amp;gt; respectively. Let TA and TB be the range variables of TR1 and TR2, &lt;br/&gt;
&amp;gt; respectively. (...) &lt;/p&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;p&gt;&amp;gt; 7) If NATURAL is specified or if a &amp;lt;join specification&amp;gt; immediately &lt;br/&gt;
&amp;gt; containing a &amp;lt;named columns join&amp;gt; is specified, then: &lt;br/&gt;
(...) &lt;br/&gt;
&amp;gt; d) If there is at least one corresponding join column, then let SLCC &lt;br/&gt;
&amp;gt; be a &amp;lt;select list&amp;gt; of &amp;lt;derived column&amp;gt;s of the form &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; COALESCE ( TA.C, TB.C ) AS C &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; for every column C that is a corresponding join column, taken in &lt;br/&gt;
&amp;gt; order of their ordinal positions in RT1. &lt;/p&gt;

&lt;p&gt;Derby has it&apos;s on logic to retrieve the join column values. It always picks up join column&apos;s value from the left table when we are working with natural left outer join and it picks up the join column&apos;s value from the right table when we are working with natural right outer join. But this logic does not work for all cases for right outer join. The fix being worked for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4631&quot; title=&quot;Wrong join column returned by right outer join with NATURAL or USING and territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4631&quot;&gt;&lt;del&gt;DERBY-4631&lt;/del&gt;&lt;/a&gt; is to pick the join column&apos;s value based on following logic &lt;br/&gt;
1)if the left table&apos;s column value is null then pick up the right table&apos;s column&apos;s value. &lt;br/&gt;
2)If the left table&apos;s column value is non-null, then pick up that value &lt;/p&gt;

&lt;p&gt;Although this new logic will in essence implement what adding a COALESCE function for a join colunm might have done but it still allows following query to compile and run&lt;br/&gt;
SELECT country,count(country) FROM &lt;br/&gt;
COUNTRIES JOIN CITIES USING (COUNTRY) group by countries.country &lt;/p&gt;

&lt;p&gt;I think query above succeeds because in case of an INNER JOIN or LEFT OUTER JOIN, Derby associates the join column with the left table during it&apos;s bind phase. In case of RIGHT OUTER JOIN, Derby associates the join column with right table during it&apos;s bind phase. I believe, for these reasons, a query like above will not give an error for the group by column.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12542441">DERBY-5613</key>
            <summary>Queries with group by column not included in the column list for JOIN(INNER or OUTER) with NATURAL or USING does not fail</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                            <label>derby_triage10_9</label>
                    </labels>
                <created>Mon, 13 Feb 2012 20:55:04 +0000</created>
                <updated>Thu, 23 Feb 2012 22:15:55 +0000</updated>
                                            <version>10.8.2.2</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13207526" author="mamtas" created="Tue, 14 Feb 2012 05:35:02 +0000"  >&lt;p&gt;There are already some tests showing the incorrect behavior in GroupByTest.java&lt;/p&gt;</comment>
                            <comment id="13207748" author="bryanpendleton" created="Tue, 14 Feb 2012 14:43:14 +0000"  >&lt;p&gt;&amp;gt; A query like following does not raise an error even though countries.country is not part of the SELECT column list. &lt;br/&gt;
&amp;gt; SELECT country,count(country) FROM  COUNTRIES JOIN CITIES USING (COUNTRY) group by countries.country&lt;/p&gt;

&lt;p&gt;I&apos;m obviously missing your point, because the &quot;country&quot; column sure looks like it is in the select column list.&lt;/p&gt;

&lt;p&gt;Is the issue here whether &quot;country&quot; means &quot;countries.country&quot; or &quot;cities.country&quot;?&lt;/p&gt;</comment>
                            <comment id="13208017" author="mamtas" created="Tue, 14 Feb 2012 21:19:00 +0000"  >&lt;p&gt;But we haven&apos;t qualified the country column with the left table or right table. Instead it is a join column which as per SQL spec should be replaced by COALESCE, I haven&apos;t looked at the spec in detail on this, but if country in SELECT is to be replaced with COALESCE(COUNTRIES.county, CITIES.country), then should we be allowing join column country in SELECT to be bound to the COUNTRIES table? When we decide to work on this issue, we probably should look into SQL spec more about the expected behavior for such a query.&lt;/p&gt;

&lt;p&gt;If the query above was rewritten to have group by on CITIES.country, the query would fail because that column is not in the SELECT list.&lt;br/&gt;
SELECT country,count(country) FROM COUNTRIES JOIN CITIES USING (COUNTRY) group by CITIES.country &lt;/p&gt;

&lt;p&gt;Currently, in Derby (based on my work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4631&quot; title=&quot;Wrong join column returned by right outer join with NATURAL or USING and territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4631&quot;&gt;&lt;del&gt;DERBY-4631&lt;/del&gt;&lt;/a&gt;), for a LEFT OUTER JOIN and INNER JOIN with USING/NATURAL, the join column in the SELECT list gets bound to the left table. For RIGHT OUTER JOIN with USING/NATURAL, the join column in the SELECT list gets bound to the right table. Based on what we find in the SQL spec, this binding logic for the join columns may or may not be correct.&lt;/p&gt;</comment>
                            <comment id="13208512" author="bryanpendleton" created="Wed, 15 Feb 2012 14:48:22 +0000"  >&lt;p&gt;If it&apos;s an inner join, aren&apos;t countries.country and cities.country equivalent? Is this issue only for outer joins (left or right)?&lt;/p&gt;

&lt;p&gt;I agree that we need to obey the sql spec&apos;s description of how the query should behave.&lt;/p&gt;

&lt;p&gt;I&apos;m not terribly familiar with USING syntax; is there a semantic difference between&lt;/p&gt;

&lt;p&gt;  SELECT country,count(country) FROM COUNTRIES JOIN CITIES USING (COUNTRY) group by country &lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;  SELECT country,count(country) FROM COUNTRIES, cities where countries.country = cities.country group by country &lt;/p&gt;</comment>
                            <comment id="13208524" author="knutanders" created="Wed, 15 Feb 2012 15:04:37 +0000"  >&lt;p&gt;&amp;gt; If it&apos;s an inner join, aren&apos;t countries.country and cities.country equivalent? Is this issue only for outer joins (left or right)? &lt;/p&gt;

&lt;p&gt;This is an issue for inner joins too, I think, since you could have case-insensitive collation, so that countries.country is, say, &apos;Oman&apos; and cities.country is &apos;OMAN&apos;, and countries.country=cities.country will still evaluate to true.&lt;/p&gt;

&lt;p&gt;&amp;gt; I&apos;m not terribly familiar with USING syntax; is there a semantic difference between&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;  SELECT country,count(country) FROM COUNTRIES JOIN CITIES USING (COUNTRY) group by country&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; and&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;  SELECT country,count(country) FROM COUNTRIES, cities where countries.country = cities.country group by country &lt;/p&gt;

&lt;p&gt;Yes, those two queries are not equivalent. The latter of these will raise a compile-time error: Column name &apos;COUNTRY&apos; is in more than one table in the FROM list.&lt;/p&gt;

&lt;p&gt;The former is (supposed to be) equivalent to:&lt;/p&gt;

&lt;p&gt;SELECT country, count(country) from (SELECT COALESCE(countries.country, cities.country) AS country FROM countries, cities WHERE countries.country = cities.country) s GROUP BY country;&lt;/p&gt;</comment>
                            <comment id="13208527" author="bryanpendleton" created="Wed, 15 Feb 2012 15:10:58 +0000"  >&lt;p&gt;Thanks! That&apos;s a good example, and clear. I&apos;ll go read the discussion in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4631&quot; title=&quot;Wrong join column returned by right outer join with NATURAL or USING and territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4631&quot;&gt;&lt;del&gt;DERBY-4631&lt;/del&gt;&lt;/a&gt; more carefully.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12463019">DERBY-4631</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Feb 2012 14:43:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>227727</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0d0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35928</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>