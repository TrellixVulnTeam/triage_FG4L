<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6576/DERBY-6576.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6576] A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6576</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Similar to the issue in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6559&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we delete a duplicate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6559&quot;&gt;&lt;del&gt;DERBY-6559&lt;/del&gt;&lt;/a&gt;, except here we modify the key in the referenced table. This leads Derby to check for any referencing FK and throw, even if there are other (formerly) duplicate rows that satisfy the FK constraint.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12713983">DERBY-6576</key>
            <summary>A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                            <label>derby_backport_reject_10_10</label>
                    </labels>
                <created>Tue, 13 May 2014 19:54:56 +0100</created>
                <updated>Thu, 9 Oct 2014 17:04:13 +0100</updated>
                            <resolved>Thu, 5 Jun 2014 23:01:04 +0100</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13996775" author="dagw" created="Tue, 13 May 2014 19:59:23 +0100"  >&lt;p&gt;The solution is similar to that of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6559&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we delete a duplicate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6559&quot;&gt;&lt;del&gt;DERBY-6559&lt;/del&gt;&lt;/a&gt;; we need to compute if any rows remain after the update to fulfill&lt;br/&gt;
the foreign key constraint.&lt;/p&gt;</comment>
                            <comment id="13996846" author="dagw" created="Tue, 13 May 2014 21:15:46 +0100"  >&lt;p&gt;Uploading a patch for this, with the needed logic, plus test cases. During the work, I discovered that the code path for deferred delete (delete was addressed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6559&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we delete a duplicate&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6559&quot;&gt;&lt;del&gt;DERBY-6559&lt;/del&gt;&lt;/a&gt;) was still broken, so this patch fixes that hole, too.&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="13996893" author="dagw" created="Tue, 13 May 2014 22:05:10 +0100"  >&lt;p&gt;Version 2 of the patch; added missing Javadoc.&lt;/p&gt;</comment>
                            <comment id="13998673" author="dagw" created="Thu, 15 May 2014 12:11:21 +0100"  >&lt;p&gt;Unfortunately, the previous patch wasn&apos;t complete enough. We need to keep better track of how many rows are deleted/modified of each key when we are doing deferred code path deletes since the actual deletes doesn&apos;t happen until after all the checking. The new patch (#3), does this by using a disk based hash table. Then after going through all the rows/key to be deleted/updated, we compare the number of key duplicate instances with the number of deletes. Unless at least one remains in the referenced table we have a violation of the foreign key constraint.&lt;/p&gt;

&lt;p&gt;Added extra tests, including a test that uses a compound fk/pk to check that the index mapping happens correctly when we save the keys to the temporary hash table. Regressions ran ok.&lt;/p&gt;</comment>
                            <comment id="14000483" author="jira-bot" created="Sat, 17 May 2014 00:16:21 +0100"  >&lt;p&gt;Commit 1595384 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1595384&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1595384&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6576&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6576&quot;&gt;&lt;del&gt;DERBY-6576&lt;/del&gt;&lt;/a&gt; A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&lt;/p&gt;

&lt;p&gt;Patch derby-6576-3. We need to keep better track of how many rows are&lt;br/&gt;
deleted/modified of each key when we are doing deferred code path&lt;br/&gt;
deletes since the actual deletes doesn&apos;t happen until after all the&lt;br/&gt;
checking.&lt;/p&gt;

&lt;p&gt;The patch does this by using a disk based hash table. Then after going&lt;br/&gt;
through all the rows/keys to be deleted/updated and adding them to the&lt;br/&gt;
hash table (one entry per unique key, with a counter), we compare the&lt;br/&gt;
number of key duplicate instances present with the number of (planned)&lt;br/&gt;
deletes. Unless at least one row would remain in the referenced table,&lt;br/&gt;
we have a violation of the foreign key constraint.&lt;/p&gt;

&lt;p&gt;This method is used for both deletes in deferred row processing mode&lt;br/&gt;
and for updates, which always has this mode in the presence of foreign&lt;br/&gt;
key).&lt;/p&gt;

&lt;p&gt;For deletes in direct delete code path, we simply check that at least&lt;br/&gt;
one row would remain when we do the delete.&lt;/p&gt;

&lt;p&gt;Added extra tests, including a test that uses a compound fk/pk to&lt;br/&gt;
check that the index mapping happens correctly when we save the keys&lt;br/&gt;
to the temporary hash table.&lt;/p&gt;</comment>
                            <comment id="14000570" author="dagw" created="Sat, 17 May 2014 01:50:17 +0100"  >&lt;p&gt;There are some problems remaining for cascading referential action in the referred delete/row update cases; the new mechanism interferes with correct operation for these, so I&apos;ll address this in an upcoming patch.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update: the interference for the SET NULL referential action too, so I&amp;#39;ll make a combined patch to cater for the cascade and set null cases&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="14008891" author="dagw" created="Mon, 26 May 2014 15:41:27 +0100"  >&lt;p&gt;Attaching &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12646799/12646799_derby-6576-cascade-setnull.diff&quot; title=&quot;derby-6576-cascade-setnull.diff attached to DERBY-6576&quot;&gt;derby-6576-cascade-setnull.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;, which adds logic to handle the case of cascading delete and set null referential actions when the referenced key is deferred. The run-time check is only done for deferrable referenced keys, so old code paths should not be impacted modulo a simple boolean check or two. &lt;/p&gt;

&lt;p&gt;For both these cases, we save all the keys that were deleted from the primary table and after deletion but before the cascading action, we check if there are still any duplicates left. If so, no cascading action is taken. &lt;/p&gt;

&lt;p&gt;Test cases added. An earlier version of this patch passed regressions, so please review.&lt;/p&gt;</comment>
                            <comment id="14009017" author="dagw" created="Mon, 26 May 2014 19:45:46 +0100"  >&lt;p&gt;Regressions passed again.&lt;/p&gt;</comment>
                            <comment id="14012592" author="dagw" created="Thu, 29 May 2014 18:44:00 +0100"  >&lt;p&gt;The latest patch isn&apos;t good enough for complicated cascade closures. I am currently investigating the way Derby computes the&lt;br/&gt;
closure of rows to be deleted as a result of a set of rows which have foreign keys. If the primary key referenced by one or more foreign keys involved has duplicates, the current computation of the closure breaks down. The current patch works only for simple one level cascade chains, and is not for commit. Unless I can find a satisfactory implementation for this soon, I might consider forbidding foreign keys with cascade action and set null referential action on deferrable primary keys, and work on a complete solution for the next major release.&lt;/p&gt;</comment>
                            <comment id="14014114" author="dagw" created="Fri, 30 May 2014 20:02:34 +0100"  >&lt;p&gt;Cf. also this note: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-532?focusedCommentId=14014105&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14014105&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Note 11.8 SR5&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14015360" author="dagw" created="Mon, 2 Jun 2014 14:06:33 +0100"  >&lt;p&gt;Attaching a patch that simplifies the code of the previous patch that handles RESTRICT and NO ACTION in combination with a deferrable primary key. It also forbids CASCADE and SET NULL of the target primary key is deferrable, at least for now until a satisfactory implementation can be found.&lt;/p&gt;</comment>
                            <comment id="14015361" author="dagw" created="Mon, 2 Jun 2014 14:06:50 +0100"  >&lt;p&gt;Regressions ran ok.&lt;/p&gt;</comment>
                            <comment id="14015985" author="jira-bot" created="Mon, 2 Jun 2014 23:36:16 +0100"  >&lt;p&gt;Commit 1599383 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1599383&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1599383&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6576&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6576&quot;&gt;&lt;del&gt;DERBY-6576&lt;/del&gt;&lt;/a&gt; A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&lt;/p&gt;

&lt;p&gt;Patch derby-6576-forbid-deferred+cascade-set-null-1. It simplifies the&lt;br/&gt;
code of the previous patch for thi sissue that handles RESTRICT and NO&lt;br/&gt;
ACTION in combination with a deferrable primary key. It also forbids&lt;br/&gt;
CASCADE and SET NULL of the target primary key is deferrable, at least&lt;br/&gt;
for now until a satisfactory implementation can be found. Test have&lt;br/&gt;
been added for the new cases.&lt;/p&gt;</comment>
                            <comment id="14019326" author="dagw" created="Thu, 5 Jun 2014 22:53:22 +0100"  >&lt;p&gt;Adding a follow-up patch, derby-6576-repeatable-read. In the case where we do not throw and exception because the deferred unique/pk constraint referenced by an fk is upheld by another row, we need to make sure that condition hold until we commit. This patch changes the check (in ReferencedKeyRIChecker#isDuplicated) to scan using repeatable read isolation level. This will set a read lock on any (well, the first we find) duplicate row till transaction end and thus ensure things are good till we commit.&lt;/p&gt;</comment>
                            <comment id="14019337" author="jira-bot" created="Thu, 5 Jun 2014 23:00:27 +0100"  >&lt;p&gt;Commit 1600779 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1600779&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1600779&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6576&quot; title=&quot;A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6576&quot;&gt;&lt;del&gt;DERBY-6576&lt;/del&gt;&lt;/a&gt; A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column&lt;/p&gt;

&lt;p&gt;A follow-up patch, derby-6576-repeatable-read. In the case where we do&lt;br/&gt;
not throw an exception because the deferred unique/pk constraint&lt;br/&gt;
referenced by an fk is upheld by another row, we need to make sure&lt;br/&gt;
that condition holds until we commit. This patch changes the check (in&lt;br/&gt;
ReferencedKeyRIChecker#isDuplicated) to scan using repeatable read&lt;br/&gt;
isolation level instead of read committed. This will set a read lock&lt;br/&gt;
on any (well, the first we find) duplicate row till transaction end&lt;br/&gt;
and thus ensure things are good till we commit.&lt;/p&gt;</comment>
                            <comment id="14165304" author="mikem" created="Thu, 9 Oct 2014 17:04:13 +0100"  >&lt;p&gt;bug is dependent on deferred constraint work which was introduced in 10.11, settling label to not backport.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12746192">DERBY-6759</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12711323">DERBY-6559</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12313704">DERBY-532</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12644702" name="derby-6576-2.diff" size="17211" author="dagw" created="Tue, 13 May 2014 22:05:10 +0100"/>
                            <attachment id="12645000" name="derby-6576-3.diff" size="37160" author="dagw" created="Thu, 15 May 2014 12:11:21 +0100"/>
                            <attachment id="12644999" name="derby-6576-3.status" size="1075" author="dagw" created="Thu, 15 May 2014 12:11:21 +0100"/>
                            <attachment id="12646799" name="derby-6576-cascade-setnull.diff" size="87236" author="dagw" created="Mon, 26 May 2014 15:41:27 +0100"/>
                            <attachment id="12646798" name="derby-6576-cascade-setnull.status" size="1691" author="dagw" created="Mon, 26 May 2014 15:41:27 +0100"/>
                            <attachment id="12647895" name="derby-6576-forbid-deferred+cascade-set-null-1.diff" size="56664" author="dagw" created="Mon, 2 Jun 2014 14:06:33 +0100"/>
                            <attachment id="12647894" name="derby-6576-forbid-deferred+cascade-set-null-1.status" size="1761" author="dagw" created="Mon, 2 Jun 2014 14:06:33 +0100"/>
                            <attachment id="12648549" name="derby-6576-repeatable-read.diff" size="2161" author="dagw" created="Thu, 5 Jun 2014 22:53:38 +0100"/>
                            <attachment id="12644688" name="derby-6576.diff" size="14681" author="dagw" created="Tue, 13 May 2014 21:15:46 +0100"/>
                            <attachment id="12644690" name="derby-6576.status" size="829" author="dagw" created="Tue, 13 May 2014 21:17:22 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 May 2014 23:16:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392296</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzpexr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392486</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>