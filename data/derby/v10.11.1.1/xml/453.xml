<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:47:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-453/DERBY-453.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-453] Create a test wrapper to run tests using BigDecimal in J2ME/CDC/Foundation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-453</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following tests are currently excluded in J2ME/CDC/Foundation because they use BigDecimal class. &lt;/p&gt;

&lt;p&gt;I18NImportExport&lt;br/&gt;
batchUpdate&lt;br/&gt;
LOBTest&lt;br/&gt;
parameterMapping&lt;br/&gt;
resultset&lt;br/&gt;
StmtCloseFunTest&lt;br/&gt;
cast&lt;br/&gt;
functions&lt;br/&gt;
outparams&lt;br/&gt;
procedure&lt;br/&gt;
triggerRefClause&lt;br/&gt;
wisconsin&lt;br/&gt;
iepnegativetests&lt;br/&gt;
ieptests&lt;br/&gt;
importExportThruIJ&lt;br/&gt;
importExport&lt;/p&gt;

&lt;p&gt;To run the above tests in this environment, test utility classes have to be written so that the methods using BigDecimal are redirected depending on the VM environment. The initial goal is to submit a patch for the test resultset.java. After this, sub-tasks will be opened if changes are needed to run the other tests.&lt;/p&gt;</description>
                <environment>J2ME/CDC/Foundation using IBM&amp;#39;s WCTME 5.7</environment>
        <key id="12312147">DERBY-453</key>
            <summary>Create a test wrapper to run tests using BigDecimal in J2ME/CDC/Foundation</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deepa">Deepa Remesh</assignee>
                                    <reporter username="deepa">Deepa Remesh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 12 Jul 2005 06:30:15 +0100</created>
                <updated>Sat, 11 Feb 2006 08:54:53 +0000</updated>
                            <resolved>Sat, 11 Feb 2006 08:52:55 +0000</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12315521" author="deepa" created="Tue, 12 Jul 2005 10:13:05 +0100"  >&lt;p&gt;This patch will allow the test resultset.java to run J2ME/Foundation. The changes are:&lt;/p&gt;

&lt;p&gt;1. Added a new class ResultSet_BD, which provides wrappers for the following ResultSet methods:&lt;/p&gt;

&lt;p&gt;getBigDecimal(int columnIndex) ~ getBigDecimalString(ResultSet rs, int columnIndex)&lt;br/&gt;
getBigDecimal(String columnName) ~ getBigDecimalStringFromName(ResultSet rs, int columnIndex)&lt;br/&gt;
getObject(int columnIndex) ~ getObjectString(ResultSet rs, int columnIndex)&lt;br/&gt;
getObject(String columnName) ~ getObjectStringFromName(ResultSet rs, int columnIndex)&lt;/p&gt;

&lt;p&gt;2 . Modified resultset.java to call methods in ResultSet_BD instead of the above ResultSet methods. &lt;/p&gt;

&lt;p&gt;3. resultset.java was using the following deprecated ResultSet methods:&lt;/p&gt;

&lt;p&gt;getBigDecimal(int columnIndex, int scale) &lt;br/&gt;
getBigDecimal(String columnName, int scale) &lt;/p&gt;

&lt;p&gt;In ResultSet_BD, getBigDecimal(int columnIndex) and getBigDecimal(String columnName) are called instead of the deprecated methods. The master file resultset.out has been changed to match this.&lt;/p&gt;

&lt;p&gt;4. The exclude flag &quot;runwithfoundation=false&quot; has been removed from resultset_app.properties&lt;/p&gt;

&lt;p&gt;I have tested this patch by running resultset.java with Sun Java 1.4.2 and IBM WCTME 5.7 Foundation profile.&lt;/p&gt;</comment>
                            <comment id="12316035" author="kmarsden" created="Mon, 18 Jul 2005 23:35:26 +0100"  >&lt;p&gt;replacing my earlier comment due to typo.&lt;/p&gt;

&lt;p&gt;I think the wrapper function for getBigDecimal by columnname, getBigDecimalStringFromName, should take a columnname parameter rather than getting it in the method. &lt;/p&gt;

&lt;p&gt;I think it would be good to have a class comment with the summary of the handling of BigDemcimal values in J2ME and an explanation of how tests that use BigDecimal values should be written so that they work with J2ME. &lt;/p&gt;

&lt;p&gt;I am not really comfortable with the mock up of data conversion exceptions for J2ME but don&apos;t really have a better idea #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. &lt;/p&gt;

&lt;p&gt;Need to check the types listed in canConvertToDecimal. I think some of them are not quite right. &lt;/p&gt;
</comment>
                            <comment id="12320692" author="kmarsden" created="Thu, 1 Sep 2005 00:09:24 +0100"  >&lt;p&gt;Part of the resolution for this issue was checked in with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-518&quot; title=&quot;Data type mismatch error for boolean to DECIMAL conversion in J2ME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-518&quot;&gt;&lt;del&gt;DERBY-518&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12322787" author="deepa" created="Wed, 7 Sep 2005 10:06:57 +0100"  >&lt;p&gt;This patch (derby_453_outparams_patch1.diff) changes tests. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;It enables the tests which use procedures in outparams.java to run in J2ME/CDC/FP. The following tests have been enabled:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lang/lang/outparams.java&lt;/li&gt;
	&lt;li&gt;jdbcapi/batchUpdate.java&lt;/li&gt;
	&lt;li&gt;jdbcapi/StmtCloseFunTest.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;It disables the test lang/dbjar.sql from J2ME/FP because it uses java.sql.Driver.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Changes to outparams.java:&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The methods &apos;takesBigDecimal&apos; and &apos;returnsBigDecimal&apos; are moved from outparams.java to a new class outparams30.java. These methods use java.Math.BigDecimal class which is not available in J2ME. This separation is needed because Connection.prepareCall looks at all the public methods available in the specified class. If the class has any public method using BigDecimal, it will fail in J2ME.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For procedure names, outparams class will be used for J2ME and outparams30 for non-J2ME.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Variables HAVE_BIGDECIMAL and CLASS_NAME are added to outparams.java. Depending on the availability of BigDecimal class in the JVM,  CLASS_NAME is initialized to outparams or outparams30. CLASS_NAME is used in the create procedure SQL instead of &quot;org.apache.derbyTesting.functionTests.tests.lang.outparams.&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The content of the arrays &apos;outputMethods&apos; and &apos;returnMethods&apos; are also decided based on value of HAVE_BIGDECIMAL. For J2ME, takesBigDecimal and returnsBigDecimal are removed from these arrays. To minimize changes to the master file, the order of these arrays is kept same. An if/else loop is used to determine which array will be used.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;callSetMethod, callSetObject and callGetMethod are changed to use wrapper methods in BigDecimalHandler class. An additional parameter &apos;int paramType&apos; is passed to callGetMethod. This is needed because ParameterMetaData is not available in JSR19. A new array &apos;paramJDBCType&apos; with the JDBC types (java.sql.Types) for the corresponding methods is used to get the param type for a method. When creating this array, I noticed that outputMethods and returnMethods do not match. To make them match, a null value has been removed from outputMethods and outProcParam arrays.&lt;/li&gt;
	&lt;li&gt;testMisc method used returnsBigDecimal to check that a set cannot be called on an output param. This check is independent of the type of output param and so returnsString is used intstead.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;test5116 method uses a procedure with nested connection, which uses java.sql.Driver. This is not available in JSR169. So this test is done only for non-JSR169 environments based on value of HAVE_DRIVER_CLASS.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Changes to org.apache.derbyTesting.functionTests.util.BigDecimalHandler.java:&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Added wrappers for following methods:&lt;br/&gt;
		CallableStatement method getBigDecimal(int parameterIndex)&lt;br/&gt;
		PreparedStatement method setBigDecimal(int parameterIndex,BigDecimal x)&lt;br/&gt;
		PreparedStatement method setObject(int parameterIndex, Object x)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Fixed the type conversions and moved it to an array, which is used in the method canConvertToDecimal.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Changes to master files:&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The master files for main and j9_13 are modified to use returnsBigDecimal instead of returnsString in output for testMisc method. On comparing the two master files, they are identical. I think the master file for j9_13 can be removed. I have not done it in this patch. Is it okay to do this?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Added a master file for j9_foundation. This is needed because of the following:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;takesBigDecimal and returnsBigDecimal methods are not in outputMethods/returnMehtods.&lt;/li&gt;
	&lt;li&gt;The exception strings for type conversion and invalid character format are different because of use of wrapper methods.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Changes to &amp;lt;testname&amp;gt;_app.properties:&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Removed excludes for J2ME for following tests:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lang/outparams.java&lt;/li&gt;
	&lt;li&gt;jdbcapi/batchUpdate.java&lt;/li&gt;
	&lt;li&gt;jdbcapi/StmtCloseFunTest.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Added exclude for J2ME to following test:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lang/dbjar.sql - This test failed when derbyall was run with J2ME. This is a new test and it uses java.sql.Driver. Hence excluded.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Changes to tests which use procedures in outparams.java &lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;jdbcapi/batchUpdate.java and jdbcapi/StmtCloseFunTest.java are modified to use outparams/outparams30 depending on value of HAVE_BIG_DECIMAL.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;jdbcapi/StmtCloseFunTest.java was using a deprecated constructor for java.sql.Date, which is not available in JSR169. So the constructor java.sql.Date(long) is used instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Tests Run&lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
This patch changes tests only. I had run derbyall in J2SE and J2ME. 1 expected failure in J2ME. But I made few changes before submitting this patch. After the changes, I ran the individual tests successfully.&lt;/p&gt;

&lt;p&gt;Please review/commit this patch.&lt;/p&gt;

&lt;p&gt;NOTE: JIRA did not give me an option to add comments when I attached the patch files. So adding it as a separate comment.	&lt;/p&gt;









</comment>
                            <comment id="12322895" author="kmarsden" created="Thu, 8 Sep 2005 08:54:38 +0100"  >&lt;p&gt;I have a question about the patch.&lt;/p&gt;

&lt;p&gt; In BigDecimalHandler,  the string representation uses setDouble().  Wouldn&apos;t  setString would be more exact?&lt;/p&gt;

&lt;p&gt;For example in setBigDecimalString  I see.&lt;br/&gt;
			case STRING_REPRESENTATION:&lt;br/&gt;
				ps.setDouble(parameterIndex,new Double(bdString).doubleValue());&lt;br/&gt;
				break;&lt;/p&gt;
</comment>
                            <comment id="12322897" author="deepa" created="Thu, 8 Sep 2005 09:17:37 +0100"  >&lt;p&gt;As you said, setString would be more exact. Also, the method setBigDecimalString takes a String parameter and it would be better to use it directly. I will change setDouble to setString and submit another patch. &lt;/p&gt;



</comment>
                            <comment id="12323056" author="deepa" created="Sat, 10 Sep 2005 02:42:33 +0100"  >&lt;p&gt;I am re-submitting the patch as derby_453_outparams_patch2.diff. In the new patch, I commented out java.sql.Types.BOOLEAN since it is not available in jdk13.&lt;/p&gt;

&lt;p&gt;I tried changing setString to setDouble in BigDecimalHandler but then, the testcase failed for takesShortPrimitive procedure. It gave a &quot;Invalid character string format exception for SMALLINT&quot;. This is because the value used is &quot;666.666&quot;. If a String which can be converted to short is used (like &quot;666&quot;), this would not be a problem. On the other hand, if setDouble is used, the conversion to short  is taken care of. &lt;/p&gt;

&lt;p&gt;So I am continuing to use setDouble. I agree this will compromise the precision of values. But since this testcase is not dependent on precision, I think it should be okay.  If you think of other reasons for this change, please share them.&lt;/p&gt;


</comment>
                            <comment id="12323059" author="djd" created="Sat, 10 Sep 2005 02:49:24 +0100"  >&lt;p&gt;setDouble is not acceptable. DECIMAL types are precise values, whereas doubles are imprecise. If the user/application wants to convert DECIMAL types to imprecise types  (double &amp;amp; float) that&apos;&apos;s fine, but test code should be ensuring an precise type remains precise.&lt;/p&gt;</comment>
                            <comment id="12323072" author="deepa" created="Sat, 10 Sep 2005 04:45:32 +0100"  >&lt;p&gt;In that case, I will change to setString. But I am little confused as to how I should proceed. I see two ways to handle the test: &lt;/p&gt;

&lt;p&gt;1. In callSetObject in outparams.java, I can continue to pass &quot;666.666&quot; to setBigDecimalString. This will give error in setString for short primitive type because the String passed is not convertible to short. This is the expected behaviour. I can update the master file for j9_foundation accordingly. &lt;/p&gt;

&lt;p&gt;2.  I can pass &quot;666&quot; to setBigDecimalString. This will work with all the object types for which conversion is valid. But we are not testing a decimal value.&lt;/p&gt;

&lt;p&gt;Please let me know which of these is a good approach or if there is another way of doing this.&lt;/p&gt;

</comment>
                            <comment id="12323286" author="deepa" created="Tue, 13 Sep 2005 07:45:24 +0100"  >&lt;p&gt;Submitting another patch derby_453_outparams_patch3.diff. This patch uses setString instead of setDouble in the wrapper method. I have changed the master file for j9_foundation accordingly. &lt;/p&gt;</comment>
                            <comment id="12329492" author="kmarsden" created="Fri, 16 Sep 2005 08:02:37 +0100"  >&lt;p&gt;Deepa and I spoke briefly about this patch.  Here&apos;s the summary of my comments.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There a couple of uses of Double still that can be removed&lt;br/&gt;
   1) in setObject it is used.&lt;br/&gt;
   2) new Double() is used in getBigDecimalString() to verify that the value is a number and an exception thrown that matches the server internal  message that is thrown if you do getBigDecimal on a non numeric value.   This may not work in all cases and seems a bit confusing.  Maybe  better to just let the caller deal with the value as returned from getString&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I noted that StmtCloseFunTest.java has  been changed to use long literal values in the Date Constructor.  (The test was using a deprecated constructor.)  Deepa said this was because Aparently J2ME doesn&apos;t have a Calendar class. so it&apos;s not clear how to construct the date except by this method which other tests use.   &lt;/p&gt;

</comment>
                            <comment id="12329496" author="deepa" created="Fri, 16 Sep 2005 08:14:40 +0100"  >&lt;p&gt;A small change to the above comment. StmtCloseFunTest.java is changed to use the constructor java.sql.Date(long) because the deprecated constructor (Date(int year, int month, int day) ) is not available in JSR169.&lt;/p&gt;</comment>
                            <comment id="12329577" author="deepa" created="Sat, 17 Sep 2005 06:38:05 +0100"  >&lt;p&gt;Submitting another patch derby_453_outparams_patch4.diff for Kathey&apos;s comments. &lt;/p&gt;</comment>
                            <comment id="12330328" author="deepa" created="Sat, 24 Sep 2005 09:45:44 +0100"  >&lt;p&gt;Attaching a patch for test jdbcapi/parameterMetaDataJdbc30.java. Changed the test to use returnsBigDecimal method from outparams30.java&lt;/p&gt;</comment>
                            <comment id="12366000" author="deepa" created="Sat, 11 Feb 2006 08:52:54 +0000"  >&lt;p&gt;The patches for the above tests have been committed. 12 tests in the list now run with j2me. 3 tests (functions.sql, procedure.java and triggerRefClause.sql) are still excluded with comments why they cannot run in j2me/fp. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-680&quot; title=&quot;In ij, executing a prepared statement with numeric/decimal parameter fails with NullPointerException in J2ME/CDC/FP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-680&quot;&gt;&lt;del&gt;DERBY-680&lt;/del&gt;&lt;/a&gt; is open for 1 test (cast.sql).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12313552">DERBY-518</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12311181" name="derby-453.diff" size="9949" author="deepa" created="Tue, 12 Jul 2005 10:13:05 +0100"/>
                            <attachment id="12311182" name="derby-453.status" size="348" author="deepa" created="Tue, 12 Jul 2005 10:13:05 +0100"/>
                            <attachment id="12312758" name="derby_453_outparams_patch1.diff" size="539982" author="" created="Wed, 7 Sep 2005 09:42:53 +0100"/>
                            <attachment id="12312759" name="derby_453_outparams_patch1.status" size="1095" author="" created="Wed, 7 Sep 2005 09:42:53 +0100"/>
                            <attachment id="12312808" name="derby_453_outparams_patch2.diff" size="539434" author="deepa" created="Sat, 10 Sep 2005 02:42:33 +0100"/>
                            <attachment id="12312845" name="derby_453_outparams_patch3.diff" size="532577" author="deepa" created="Tue, 13 Sep 2005 07:45:24 +0100"/>
                            <attachment id="12314411" name="derby_453_outparams_patch4.diff" size="521703" author="deepa" created="Sat, 17 Sep 2005 06:38:05 +0100"/>
                            <attachment id="12314528" name="parameterMetaDataJdbc30-patch.diff" size="1199" author="deepa" created="Sat, 24 Sep 2005 09:45:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 18 Jul 2005 22:35:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29554</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy176f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40813</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>