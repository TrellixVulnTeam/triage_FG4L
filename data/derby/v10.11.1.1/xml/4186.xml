<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4186/DERBY-4186.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4186] After master stop, test fails when it succeeds in connecting (rebooting) shut-down ex-slave</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4186</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Occasionally I see this error in ReplicationRun_Local_3_p3:&lt;/p&gt;

&lt;p&gt;1) testReplication_Local_3_p3_StateNegativeTests(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p3)junit.framework.AssertionFailedError: Expected SQLState&apos;08004&apos;, but got connection!&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.waitForSQLState(ReplicationRun.java:332)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p3.testReplication_Local_3_p3_StateNegativeTests(ReplicationRun_Local_3_p3.java:170)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;In the code, after a stopMaster is given to the master (should lead to fail-over),&lt;br/&gt;
the tests expects to see CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE (08004.C.7), which will only succeed if&lt;br/&gt;
the tests gets to try to connect before the failover has started. This seems wrong. If the failover has completed, it should expect a successful&lt;br/&gt;
connect (which boots the database, btw, since its shut down after auccessful failover).&lt;/p&gt;

&lt;p&gt;Quote from code:&lt;/p&gt;

&lt;p&gt;waitForSQLState(&quot;08004&quot;, 100L, 20, // 08004.C.7 - CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE&lt;br/&gt;
                slaveDatabasePath + FS + slaveDbSubPath + FS + replicatedDb,&lt;br/&gt;
                slaveServerHost, slaveServerPort); // _failOver above fails...&lt;/p&gt;

&lt;p&gt;There is a race between the failover on the slave and the test here I think.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12423725">DERBY-4186</key>
            <summary>After master stop, test fails when it succeeds in connecting (rebooting) shut-down ex-slave</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Apr 2009 19:43:09 +0100</created>
                <updated>Tue, 28 Jul 2009 22:11:11 +0100</updated>
                            <resolved>Tue, 28 Jul 2009 22:11:11 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Replication</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12702623" author="kmarsden" created="Sat, 25 Apr 2009 00:38:38 +0100"  >&lt;p&gt;Dag said:&lt;br/&gt;
&amp;gt;Occasionally I see this error in ReplicationRun_Local_3_p3: &lt;br/&gt;
FYI: This is filed and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3915&quot; title=&quot;ReplicationTests.ReplicationRun_Local_3_p3 failed with Expected SQLState&amp;#39;08004&amp;#39;, but got connection!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3915&quot;&gt;&lt;del&gt;DERBY-3915&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12702626" author="dagw" created="Sat, 25 Apr 2009 00:51:03 +0100"  >&lt;p&gt;My initial analysis was not entirely correct. Looking at the log file, I see that the&lt;br/&gt;
setting up of the master never succeeded in the cases where we see 08004.C.7.&lt;br/&gt;
This in turn lead to the stopMaster to fail (there is no master yet!), but operation does not throw because of this&lt;br/&gt;
piece of code in MasterController.tearDownNetwork called from MasterController.stopMaster&lt;/p&gt;

&lt;p&gt;            try &lt;/p&gt;
{
                ReplicationMessage mesg =
                    new ReplicationMessage(ReplicationMessage.TYPE_STOP, null);
                transmitter.sendMessage(mesg);
            }
&lt;p&gt; catch (IOException ioe) {}   // &amp;lt;************ java.net.ConnectException: Connection refused&lt;br/&gt;
            try &lt;/p&gt;
{
                transmitter.tearDown();
            }
&lt;p&gt; catch (IOException ioe) {}&lt;/p&gt;

&lt;p&gt;The end result of this is that the slave is still listening when the test comes around to calling to waitForSQLState (seethe&lt;br/&gt;
issue description), so we naturally get 08004.C.7 CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE. &lt;br/&gt;
But the test is also wrong, it should expect success here.&lt;/p&gt;

&lt;p&gt;Now the next question is, why does the test think starting the master worked? It calls the method ReplicationRun.startMaster to&lt;br/&gt;
achieve this.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2009.04.27 comment added: this turned out to be a red herring, see below.&amp;#93;&lt;/span&gt;&lt;/p&gt;

</comment>
                            <comment id="12702629" author="dagw" created="Sat, 25 Apr 2009 00:59:43 +0100"  >&lt;p&gt;Thanks for noticing the duplicate, Kathey. I closed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3915&quot; title=&quot;ReplicationTests.ReplicationRun_Local_3_p3 failed with Expected SQLState&amp;#39;08004&amp;#39;, but got connection!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3915&quot;&gt;&lt;del&gt;DERBY-3915&lt;/del&gt;&lt;/a&gt; as dup, since I already had started making comments on this issue.&lt;/p&gt;</comment>
                            <comment id="12703125" author="olesolberg" created="Mon, 27 Apr 2009 14:49:42 +0100"  >&lt;p&gt;I had a look at this test again, and see that the comment on the stop master command is missing a NOT!&lt;br/&gt;
This of course creates confusion in understanding how the test should behave.&lt;/p&gt;

&lt;p&gt;       assertException(&lt;br/&gt;
            _stopMaster(masterServerHost, masterServerPort,&lt;br/&gt;
                masterDatabasePath + FS + masterDbSubPath + FS + replicatedDb),&lt;br/&gt;
            null); // Implies failover. // OK to continue.&lt;br/&gt;
The correct is that stop master does NOT imply a failover. &lt;br/&gt;
But the stop master  implies a stop slave to the slave, &lt;br/&gt;
which then should allow connections to both the master and the slave db!&lt;/p&gt;

&lt;p&gt;The test should therefore be:&lt;br/&gt;
1. stop master should succeed. - OK&lt;br/&gt;
2. wait for connection on the master. - OK&lt;br/&gt;
3. wait for connection on the slave. - FAILS&lt;br/&gt;
   This currently fails with CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE&lt;br/&gt;
   which is incorrect!&lt;br/&gt;
   This is possibly the same error as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3617&quot; title=&quot;failover on slave hangs after stopmaster on master.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3617&quot;&gt;DERBY-3617&lt;/a&gt; - Failover on slave hangs&lt;br/&gt;
   after stopmaster on master.&lt;br/&gt;
4. failover on master should fail with REPLICATION_NOT_IN_MASTER_MODE  - OK&lt;br/&gt;
5. wait for connection on the slave.(Currently fails as in 3.!) - FAILS&lt;/p&gt;


&lt;p&gt;From the spec:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12377517/replication_funcspec_v10.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12377517/replication_funcspec_v10.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------------------------------&lt;br/&gt;
Stop master:&lt;br/&gt;
=========&lt;br/&gt;
Sends a stop slave message to the slave if the network connection is working. &lt;br/&gt;
Then shuts down all replication related functionality without shutting down the database.&lt;/p&gt;

&lt;p&gt;Stop slave:&lt;br/&gt;
========&lt;br/&gt;
All transaction log that has been received from the master is written to disk. &lt;br/&gt;
The slave replication functionality and the database is then shut down. &lt;br/&gt;
--------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;After stop master it should be possible to connect to the slave db!&lt;br/&gt;
Currently we get CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE!&lt;/p&gt;</comment>
                            <comment id="12703166" author="dagw" created="Mon, 27 Apr 2009 16:18:33 +0100"  >&lt;p&gt;Thanks for clarifying the expected behavior here, Ole. It wasn&apos;t clear to me what should happen on the&lt;br/&gt;
slave when the master is stopped. &lt;/p&gt;

&lt;p&gt;I quote from docs: &quot;To stop replication of a database, connect to the master database using the stopMaster=true connection URL attribute. The master sends the remaining log records that await shipment, and then sends a stop replication command to the slave. The slave then writes all logs to disk and shuts down the database.&quot;&lt;/p&gt;

&lt;p&gt;This seems to conflict with the spec: &quot;without shutting down the database&quot;. But the code seems to try to shut down the db.&lt;br/&gt;
So I think docs are correct, the spec is out of date on this point..?&lt;/p&gt;

&lt;p&gt;I have investigated a bit and it seems what happens when the connection is denied on the slave, is this:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The slave receives the stop message&lt;/li&gt;
	&lt;li&gt;It  stops reading log, and breaks of recover,&lt;/li&gt;
	&lt;li&gt;The boot halts, but the db doesn&apos;t really shut down completely.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I haven&apos;t been able to determine why it doesn&apos;t shut down fully yet. &lt;/p&gt;
</comment>
                            <comment id="12703302" author="dagw" created="Mon, 27 Apr 2009 20:10:23 +0100"  >&lt;p&gt;Further analysis shows that the uncaught IOException I referred to&lt;br/&gt;
when trying to send a stop message to the slave is just a part of the&lt;br/&gt;
generic MasterController.tearDownNetwork when establishment of the master fails initially.&lt;br/&gt;
The test correctly loops to wait for successful startup of the master and there will be&lt;br/&gt;
some failed attempts (waiting for the slave to be ready) which visit that failure code path.&lt;br/&gt;
It is not a problem though, just (another) red herring.&lt;/p&gt;

&lt;p&gt;I enclose a patch proposal, which addresses the real issue: the slave does not shut down when it should.&lt;br/&gt;
The scenario is that the slave receives a stop replication message before it had time to complete&lt;br/&gt;
the slave boot (race condition), see attachment bad-slave.txt. If I make the test client&lt;br/&gt;
wait instead of proceeding to stop the master, the slave log looks like the one in ok-slave.txt (attached).&lt;/p&gt;

&lt;p&gt;It would be nice if any of the original authors had a look at this patch as I am not familiar with this code.&lt;/p&gt;

&lt;p&gt;The patch also modifies the test client to loop until success, accepting intermediate state&lt;br/&gt;
CANNOT_CONNECT_TO_DB_IN_SLAVE_MODE.&lt;/p&gt;

&lt;p&gt;Running regressions. &lt;/p&gt;</comment>
                            <comment id="12704357" author="dagw" created="Wed, 29 Apr 2009 22:47:04 +0100"  >&lt;p&gt;Respin of this patch, #2, with more comments. I also talked to the author of this code off-line, J&#248;rgen L&#248;land, and he agreed with my analysis. The new patch moves the check for the lost exception to inside the method SlaveDataBase.verifySuccessfulBoot.&lt;br/&gt;
Added more explanations in the comments.&lt;/p&gt;
</comment>
                            <comment id="12704372" author="dagw" created="Wed, 29 Apr 2009 23:10:27 +0100"  >&lt;p&gt;Commited derby-4186-2 as svn 769962. Quote from the commit log:&lt;/p&gt;

&lt;p&gt;a) fixing a bug in SlaveDataBase, which loses an exception iff a&lt;br/&gt;
command to stop replication arrives from the master to the slave&lt;br/&gt;
before the initial connection (successful slave started) command&lt;br/&gt;
returns. This is a corner case race condition, and not very likely to&lt;br/&gt;
occur in practice, since it makes little sense to stop replication&lt;br/&gt;
immediately after starting it.&lt;/p&gt;

&lt;p&gt;b) fixing a bug in the test, which switched on its head what is really&lt;br/&gt;
expected behavior, and also adds a waiting loop to allow intermediate&lt;br/&gt;
state on slave after the master is stopped. Also fixed some erroneous&lt;br/&gt;
comments and removed some cruft.&lt;/p&gt;</comment>
                            <comment id="12705809" author="dagw" created="Mon, 4 May 2009 23:54:06 +0100"  >&lt;p&gt;Repost answer from J&#248;rgen (Thu, 30 Apr 2009 08:30:05 +0200) here:&lt;/p&gt;

&lt;p&gt;Dag,&lt;/p&gt;

&lt;p&gt;Thanks for analyzing and fixing this strange issue! Stopping&lt;br/&gt;
replication before the startSlave command had completed was never on&lt;br/&gt;
my mind :-/&lt;/p&gt;

&lt;p&gt;I had a look at you patch though, and I think you can fix this bug&lt;br/&gt;
with even less code.&lt;/p&gt;

&lt;p&gt;From SlaveDatabase.java:86:&lt;br/&gt;
    /** Set by the database boot thread if it fails before slave mode&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;has been started properly (i.e., if inBoot is true). This&lt;/li&gt;
	&lt;li&gt;exception will then be reported to the client connection. */&lt;br/&gt;
    private volatile StandardException bootException;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;bootException is only set in one place -&lt;br/&gt;
SlaveDatabase#handleShutdown. There you&apos;ll also see the reason for the&lt;br/&gt;
limbo state that made the tests fail: if an exception makes the slave&lt;br/&gt;
replication code call handleShutdown while booting is in progress, the&lt;br/&gt;
database is supposed to be shutdown by the client thread when it&lt;br/&gt;
receives an exception from SlaveDatabase.boot().&lt;/p&gt;

&lt;p&gt;As you already found out, that didn&apos;t happen because the bootException&lt;br/&gt;
was set during the 500 millis waiting in verifySuccesfulBoot. However,&lt;br/&gt;
this should apply to any exception in bootException, not only&lt;br/&gt;
DATABASE_SEVERITY ones (although I &lt;b&gt;think&lt;/b&gt; only DB severity exceptions&lt;br/&gt;
will be reported here).&lt;/p&gt;

&lt;p&gt;I would go with the same code that is inside the while. Thus, instead of&lt;/p&gt;

&lt;p&gt;+        if (bootException != null &amp;amp;&amp;amp;&lt;br/&gt;
+            SQLState.SHUTDOWN_DATABASE.startsWith(&lt;br/&gt;
+                bootException.getSQLState()) &amp;amp;&amp;amp;&lt;br/&gt;
+            bootException.getSeverity() ==&lt;br/&gt;
ExceptionSeverity.DATABASE_SEVERITY) {&lt;/p&gt;

&lt;p&gt;use&lt;/p&gt;

&lt;p&gt;+        if (bootException != null)&lt;/p&gt;</comment>
                            <comment id="12705810" author="dagw" created="Mon, 4 May 2009 23:56:30 +0100"  >&lt;p&gt;Thanks for your review. J&#248;rgen!&lt;br/&gt;
Your suggestion is helpful; I added the extra predicates&lt;br/&gt;
since I didn&apos;t know all code paths through this code - the simplification is way better, I&apos;ll&lt;br/&gt;
make that change once I have run the regressions again.&lt;/p&gt;</comment>
                            <comment id="12706469" author="dagw" created="Wed, 6 May 2009 16:59:57 +0100"  >&lt;p&gt;Uploading derby-4186-followup, to simplify as J&#248;rgen suggests.&lt;/p&gt;</comment>
                            <comment id="12706472" author="dagw" created="Wed, 6 May 2009 17:04:40 +0100"  >&lt;p&gt;Committed derby-4186-followup as svn 772337.&lt;/p&gt;</comment>
                            <comment id="12733443" author="mamtas" created="Tue, 21 Jul 2009 03:37:27 +0100"  >&lt;p&gt;I saw following failure on 10.5.2 (revision 794445) with ibm16 on a Windows machine&lt;br/&gt;
1) testReplication_Local_3_p3_StateNegativeTests(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p3)junit.framework.AssertionFailedError: Expected SQLState&apos;08004&apos;, but got connection!&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.waitForSQLState(ReplicationRun.java:333)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p3.testReplication_Local_3_p3_StateNegativeTests(ReplicationRun_Local_3_p3.java:170)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:106)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;</comment>
                            <comment id="12735824" author="dagw" created="Mon, 27 Jul 2009 23:46:49 +0100"  >&lt;p&gt;Reopening, Mamta&apos;s find seem to indicate the fix isn&apos;t complete enough.&lt;/p&gt;</comment>
                            <comment id="12735828" author="dagw" created="Mon, 27 Jul 2009 23:52:50 +0100"  >&lt;p&gt;The fix was not ported to 10.5 (Mamta saw it on 10.5.2), but it is a very unlikely scenario in production,&lt;br/&gt;
so unless somebody objects, I will close it again. Mamta, would you like to see this ported to the 10.5 branch?&lt;/p&gt;</comment>
                            <comment id="12735893" author="mamtas" created="Tue, 28 Jul 2009 03:38:49 +0100"  >&lt;p&gt;Dag, I didn&apos;t follow the fix that went in for this jira, so if it is not a high-risk fix, may be we should backport it to 10.5. Since you are familiar with the code change that went in, I will be fine with your judgement call for backporting.&lt;/p&gt;</comment>
                            <comment id="12736296" author="dagw" created="Tue, 28 Jul 2009 22:11:11 +0100"  >&lt;p&gt;Backported the two fixes to 10.5 branch as svn 798710:&lt;/p&gt;

&lt;p&gt;svn merge -c 769962  &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -c 772337  &lt;a href=&quot;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.eu.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Closing.&lt;/p&gt;

</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12406690">DERBY-3915</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12394296">DERBY-3632</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406559" name="bad-slave.txt" size="51143" author="dagw" created="Mon, 27 Apr 2009 20:10:23 +0100"/>
                            <attachment id="12406840" name="derby-4186-2.diff" size="8562" author="dagw" created="Wed, 29 Apr 2009 22:47:04 +0100"/>
                            <attachment id="12406841" name="derby-4186-2.stat" size="175" author="dagw" created="Wed, 29 Apr 2009 22:47:04 +0100"/>
                            <attachment id="12407365" name="derby-4186-followup.diff" size="746" author="dagw" created="Wed, 6 May 2009 16:59:57 +0100"/>
                            <attachment id="12407366" name="derby-4186-followup.stat" size="63" author="dagw" created="Wed, 6 May 2009 16:59:57 +0100"/>
                            <attachment id="12406561" name="derby-4186.diff" size="7814" author="dagw" created="Mon, 27 Apr 2009 20:10:23 +0100"/>
                            <attachment id="12406562" name="derby-4186.stat" size="175" author="dagw" created="Mon, 27 Apr 2009 20:10:51 +0100"/>
                            <attachment id="12406560" name="ok-slave.txt" size="5720" author="dagw" created="Mon, 27 Apr 2009 20:10:23 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 Apr 2009 23:38:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24086</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ryv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38349</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>