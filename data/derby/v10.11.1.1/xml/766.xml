<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:39:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-766/DERBY-766.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-766] Improve code generation to handle 5000 unions in a select the  union test  in largeCodeGen</title>
                <link>https://issues.apache.org/jira/browse/DERBY-766</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A good incremental improvement for code generation for 10.2 would be to handle 5000 unions in the  largeCodeGen test.&lt;/p&gt;

&lt;p&gt;eg.   largeUnionSelect(con, viewName, 5000);&lt;/p&gt;

&lt;p&gt;should pass.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12326794">DERBY-766</key>
            <summary>Improve code generation to handle 5000 unions in a select the  union test  in largeCodeGen</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="31093">DERBY-176</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djd">Daniel John Debrunner</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Dec 2005 09:57:25 +0000</created>
                <updated>Fri, 2 Nov 2007 15:41:27 +0000</updated>
                            <resolved>Mon, 21 Aug 2006 02:10:16 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12361153" author="djd" created="Fri, 23 Dec 2005 08:07:00 +0000"  >&lt;p&gt;I was looking at how language ResultSets are created at runtime. A UNION node will generate byte code to call this method:&lt;/p&gt;

&lt;p&gt;	NoPutResultSet	getUnionResultSet(NoPutResultSet source1,&lt;br/&gt;
					NoPutResultSet source2,&lt;br/&gt;
					Activation activation, &lt;br/&gt;
					int resultSetNumber,&lt;br/&gt;
					double optimizerEstimatedRowCount,&lt;br/&gt;
					double optimizerEstimatedCost,&lt;br/&gt;
					GeneratedMethod closeCleanup)&lt;/p&gt;

&lt;p&gt;There are three interesting items here where generated code could be reduced.&lt;/p&gt;

&lt;p&gt;1) Activation is passed into method, but it is already available to the called code from the source ResultSets (source1 or source2). Thus there is no need to pass this method in. The factory can find the activation. This technique can be used for a number of result sets, any that have a child result set.&lt;/p&gt;

&lt;p&gt;2) The optimizer costs being passed in are rarely used, in some cases they are used as estimates for sizing items.&lt;br/&gt;
They are also used if the plan is displayed, to show the costs.&lt;br/&gt;
It&apos;s possible that the cost estimates could be saved in the saved objects structure of the plan and be available by&lt;br/&gt;
result set number. E.g. .store a Hashtable in the saved objects with a key of &quot;costEstimates&quot;, the hashtable would have a key of resultSetNumber and value of a StoreCostResult.  This would also be a one time storage at compile time, rather than the current code which incurs a both a cpu and memory cost at runtime for each ResultSet and hence each active query.&lt;/p&gt;

&lt;p&gt;3)  The closeCleanup method is passed in as null for all result sets in a tree except the top one.  Instead of passing it on each new result set, it would be much more efficient to have a setCloseMethod() that is only called once for the top result set.&lt;/p&gt;

&lt;p&gt;Making all of these changes would result in a method signature like:&lt;/p&gt;

&lt;p&gt;NoPutResultSet	getUnionResultSet(NoPutResultSet source1,&lt;br/&gt;
					NoPutResultSet source2,&lt;br/&gt;
						int resultSetNumber)&lt;/p&gt;

&lt;p&gt;leading to reduced code. These techniques could obviously be applied to most of the getXXXResultSet methods in ResultSetFactory.&lt;/p&gt;

&lt;p&gt;I&apos;m going to be working on 1) and 3)&lt;/p&gt;</comment>
                            <comment id="12428218" author="djd" created="Tue, 15 Aug 2006 21:26:43 +0100"  >&lt;p&gt;Update:&lt;br/&gt;
     Change 1), don&apos;t pass in Activation when it can be obtained from another ResultSet  &lt;br/&gt;
                 Completed under this issue number.&lt;/p&gt;

&lt;p&gt;      Change 2)  The optimizer costs being passed in are rarely used.&lt;br/&gt;
                  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1699&quot; title=&quot;Save optimizer costs in saved obejcts rather than as compiled byte code, reduces memory usage and generated class size.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1699&quot;&gt;DERBY-1699&lt;/a&gt; improvement entered to address it&lt;/p&gt;

&lt;p&gt;       Change 3) The closeCleanup method is passed in as null for all result sets in a tree except the top one.&lt;br/&gt;
                  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1700&quot; title=&quot;Remove passing of closeCleanup method to every ResultSet type since only the top ResultSet requires it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1700&quot;&gt;&lt;del&gt;DERBY-1700&lt;/del&gt;&lt;/a&gt; improvement entered to address it&lt;/p&gt;

&lt;p&gt;Recent work under this issue has been to add generic code to CodeChunk and BCMethod that splits out expressions in the generated code into sub-methods if the generated code is bigger than the 64k limit imposed by the VM. Testing has shown that this increases the number of unions supported in the largeCodeGen test from ~800 to over 5,200. More testing is needed, basically running the split code at a low threshold with derbyall to ensure that the split works in all situations, e.g. split methods when they are overk 2k in size, instead of  64k.&lt;/p&gt;</comment>
                            <comment id="12429307" author="djd" created="Mon, 21 Aug 2006 00:22:41 +0100"  >&lt;p&gt;Issue now fixed, with sufficient memory seen over 6000 unions supported in largeCodeGen test.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1315&quot; title=&quot;Statement optimization/compilation fails with OutOfMemoryException in largeCodeGen test  with embedded and framework DerbyNetClient&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1315&quot;&gt;&lt;del&gt;DERBY-1315&lt;/del&gt;&lt;/a&gt; stops this being tested in the largeCodeGen test. As committed that test only checks 1000 unions.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1315&quot; title=&quot;Statement optimization/compilation fails with OutOfMemoryException in largeCodeGen test  with embedded and framework DerbyNetClient&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1315&quot;&gt;&lt;del&gt;DERBY-1315&lt;/del&gt;&lt;/a&gt; should address increasing that when the memory usage is fixed.&lt;/p&gt;</comment>
                            <comment id="12429312" author="djd" created="Mon, 21 Aug 2006 02:10:16 +0100"  >&lt;p&gt;Changes merged to the 10.2 branch (current version is 10.2.1.0)&lt;/p&gt;</comment>
                            <comment id="12538951" author="kmarsden" created="Tue, 30 Oct 2007 23:45:37 +0000"  >&lt;p&gt;I attempted to merge change 372692 to 10.1. Attached is the patch (which is NOT for commit).  I am hitting an error which should be quite obvious but as many times as I check the parameters  for getNestedLoopJoinResultSet, it seems to me to match the method that it says it can&apos;t find. Anyway, hoping another pair of eyes might take a look.  &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;


&lt;p&gt;ij(CONNECTION1)&amp;gt; create table t (i int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into t values(1);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into t values(2);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; create table t1 (i int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into t1 values(1);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; delete from t1 where exists (select * from t1);&lt;br/&gt;
java.lang.NoSuchMethodException: org.apache.derby.iapi.sql.execute.ResultSetFactory.getNestedLoopJoinResultSet(org.apach&lt;br/&gt;
e.derby.iapi.sql.execute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.&lt;br/&gt;
sql.execute.NoPutResultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod, int, boolean, boolean, double, d&lt;br/&gt;
ouble, org.apache.derby.iapi.services.loader.GeneratedMethod)&lt;br/&gt;
        at java.lang.Class.getDeclaredMethod(Class.java:1264)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:132)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:613)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1560)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1481)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1389)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1249)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DeleteNode.generate(DeleteNode.java:519)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:232)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:468)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:107)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConne&lt;br/&gt;
ctionContext.java:704)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:513)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:487)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:313)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:433)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:310)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:203)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:55)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:60)&lt;br/&gt;
Invalid method org.apache.derby.iapi.sql.execute.ResultSetFactory &amp;gt;&amp;gt; org.apache.derby.iapi.sql.execute.NoPutResultSet ge&lt;br/&gt;
tNestedLoopJoinResultSet(org.apache.derby.iapi.sql.execute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResu&lt;br/&gt;
ltSet, int, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod&lt;br/&gt;
, int, boolean, boolean, double, double, org.apache.derby.iapi.services.loader.GeneratedMethod) because java.lang.NoSuch&lt;br/&gt;
MethodException: org.apache.derby.iapi.sql.execute.ResultSetFactory.getNestedLoopJoinResultSet(org.apache.derby.iapi.sql&lt;br/&gt;
.execute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.sql.execute.NoPu&lt;br/&gt;
tResultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod, int, boolean, boolean, double, double, org.apach&lt;br/&gt;
e.derby.iapi.services.loader.GeneratedMethod)&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED Invalid method org.apache.derby.iapi.sql.execute.ResultSetFactory &amp;gt;&amp;gt; org.apa&lt;br/&gt;
che.derby.iapi.sql.execute.NoPutResultSet getNestedLoopJoinResultSet(org.apache.derby.iapi.sql.execute.ResultSetFactory,&lt;br/&gt;
 org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apach&lt;br/&gt;
e.derby.iapi.services.loader.GeneratedMethod, int, boolean, boolean, double, double, org.apache.derby.iapi.services.load&lt;br/&gt;
er.GeneratedMethod) because java.lang.NoSuchMethodException: org.apache.derby.iapi.sql.execute.ResultSetFactory.getNeste&lt;br/&gt;
dLoopJoinResultSet(org.apache.derby.iapi.sql.execute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResultSet,&lt;br/&gt;
 int, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod, int,&lt;br/&gt;
 boolean, boolean, double, double, org.apache.derby.iapi.services.loader.GeneratedMethod): org.apache.derby.iapi.service&lt;br/&gt;
s.sanity.AssertFailure&apos;.&lt;br/&gt;
org.apache.derby.iapi.services.sanity.AssertFailure: ASSERT FAILED Invalid method org.apache.derby.iapi.sql.execute.Resu&lt;br/&gt;
ltSetFactory &amp;gt;&amp;gt; org.apache.derby.iapi.sql.execute.NoPutResultSet getNestedLoopJoinResultSet(org.apache.derby.iapi.sql.ex&lt;br/&gt;
ecute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.sql.execute.NoPutRe&lt;br/&gt;
sultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod, int, boolean, boolean, double, double, org.apache.d&lt;br/&gt;
erby.iapi.services.loader.GeneratedMethod) because java.lang.NoSuchMethodException: org.apache.derby.iapi.sql.execute.Re&lt;br/&gt;
sultSetFactory.getNestedLoopJoinResultSet(org.apache.derby.iapi.sql.execute.ResultSetFactory, org.apache.derby.iapi.sql.&lt;br/&gt;
execute.NoPutResultSet, int, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.services.loade&lt;br/&gt;
r.GeneratedMethod, int, boolean, boolean, double, double, org.apache.derby.iapi.services.loader.GeneratedMethod)&lt;br/&gt;
        at org.apache.derby.iapi.services.sanity.SanityManager.THROWASSERT(SanityManager.java:150)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.d_BCValidate.checkMethod(d_BCValidate.java:191)&lt;br/&gt;
        at org.apache.derby.impl.services.bytecode.BCMethod.callMethod(BCMethod.java:613)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1560)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.JoinNode.generate(JoinNode.java:1481)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1389)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1249)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DeleteNode.generate(DeleteNode.java:519)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:232)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:468)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:107)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConne&lt;br/&gt;
ctionContext.java:704)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:513)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:487)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:313)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:433)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:310)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:203)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:55)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:60)&lt;br/&gt;
ij(CONNECTION1)&amp;gt;&lt;/p&gt;

</comment>
                            <comment id="12539116" author="mamtas" created="Wed, 31 Oct 2007 16:35:44 +0000"  >&lt;p&gt;Kathey, I created a 10.1 client and did svn merge of 372692 from trunk. Trying the ij sql that you tried in your comment gives me the same error as you.&lt;/p&gt;</comment>
                            <comment id="12539118" author="djd" created="Wed, 31 Oct 2007 16:46:34 +0000"  >&lt;p&gt;I don&apos;t have a 10.1 codeline handy but this error:&lt;/p&gt;

&lt;p&gt;java.lang.NoSuchMethodException: org.apache.derby.iapi.sql.execute.ResultSetFactory.getNestedLoopJoinResultSet(org.apach&lt;br/&gt;
e.derby.iapi.sql.execute.ResultSetFactory, org.apache.derby.iapi.sql.execute.NoPutResultSet, int, org.apache.derby.iapi.&lt;br/&gt;
sql.execute.NoPutResultSet, int, org.apache.derby.iapi.services.loader.GeneratedMethod, int, boolean, boolean, double, d &lt;/p&gt;

&lt;p&gt;says that it&apos;s looking for a getNestedLoopJoinResultSet() method with a ResultSetFactory as its first argument. I don&apos;t think any of the ResultSets constructors take a ResultSetFactory argument.&lt;/p&gt;

&lt;p&gt;The error most likely is  the wrong number of arguments (one too many)  are being passed in to the invoke method call so that it is picking up the ResultSetFactory intended for another ResultSet creation.&lt;/p&gt;</comment>
                            <comment id="12539126" author="kmarsden" created="Wed, 31 Oct 2007 17:16:57 +0000"  >&lt;p&gt;Mamta suggested changing JoinNode.getNumJoinArguments() from 12 to 11, which seemed to fix up the simple test case. Thanks Mamta! I will run the full set of tests.  What is not clear to me is why this change was not needed in the original change. Trunk returns 11 too, but that change was due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1700&quot; title=&quot;Remove passing of closeCleanup method to every ResultSet type since only the top ResultSet requires it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1700&quot;&gt;&lt;del&gt;DERBY-1700&lt;/del&gt;&lt;/a&gt; removal of a totally different parameter.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12539130" author="mamtas" created="Wed, 31 Oct 2007 17:25:19 +0000"  >&lt;p&gt;Actually, Kathey, if you look at the changes that went in as commit 372692, you will notice that there was following change in db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/JoinNode.java.        &lt;br/&gt;
protected int getNumJoinArguments()&lt;/p&gt;
       {
-               return 13;
+               return 12;
       }

&lt;p&gt;But since the current 10.1 codeline already has getNumJoinArguments at 12, the number of arguments never got decremented when we merged 372692 from trunk into 10.1 and that is why we saw the mismatch in number of arguments. Hope this explains why the merge seem to go through but the test case failed.&lt;/p&gt;</comment>
                            <comment id="12539619" author="kmarsden" created="Fri, 2 Nov 2007 15:41:27 +0000"  >&lt;p&gt;Merged to 10.1 revisions:&lt;br/&gt;
358954,372692,372934,373644,376882&lt;br/&gt;
378744,426825,428910,430193,430293&lt;br/&gt;
430306,430522,431474,432856&lt;/p&gt;

&lt;p&gt;There are still memory issues with a large number of unions in 10.1, but marking this fixed in 10.1 since all of the linkage error fixes have gone in.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12349344">DERBY-1818</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12348148">DERBY-1714</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12368729" name="372692_10_1_diff.txt" size="37688" author="kmarsden" created="Tue, 30 Oct 2007 23:45:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Dec 2005 08:07:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29693</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10uf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39787</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>