<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:42 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4712/DERBY-4712.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4712] Complex nested joins problems</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4712</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I ran a randomized test for nested joins against PostgreSQL, Derby, and H2, and found some problems with Derby. The queries below throw NullPointerExceptions; the last query an assertion. The test case is here: &lt;a href=&quot;http://code.google.com/p/h2database/source/browse/trunk/h2/src/test/org/h2/test/db/TestNestedJoins.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/h2database/source/browse/trunk/h2/src/test/org/h2/test/db/TestNestedJoins.java&lt;/a&gt; . There are probably shorter queries that are problematic, but I can&apos;t test it because Derby closes the connection after the assertion.&lt;/p&gt;

&lt;p&gt;create table t0(x int);&lt;br/&gt;
create table t1(x int);&lt;br/&gt;
create table t2(x int);&lt;br/&gt;
create table t3(x int);&lt;br/&gt;
create table t4(x int);&lt;br/&gt;
insert into t4 values(0);&lt;br/&gt;
insert into t4 values(1);&lt;br/&gt;
insert into t4 values(2);&lt;br/&gt;
insert into t4 values(3);&lt;br/&gt;
create table t5(x int);&lt;br/&gt;
insert into t5 values(0);&lt;br/&gt;
insert into t5 values(1);&lt;br/&gt;
insert into t5 values(2);&lt;br/&gt;
insert into t5 values(3);&lt;br/&gt;
insert into t5 values(4);&lt;br/&gt;
create table t6(x int);&lt;br/&gt;
insert into t6 values(0);&lt;br/&gt;
insert into t6 values(1);&lt;br/&gt;
insert into t6 values(2);&lt;br/&gt;
insert into t6 values(3);&lt;br/&gt;
insert into t6 values(4);&lt;br/&gt;
insert into t6 values(5);&lt;br/&gt;
create table t7(x int);&lt;br/&gt;
insert into t7 values(0);&lt;br/&gt;
insert into t7 values(1);&lt;br/&gt;
insert into t7 values(2);&lt;br/&gt;
insert into t7 values(3);&lt;br/&gt;
insert into t7 values(4);&lt;br/&gt;
insert into t7 values(5);&lt;br/&gt;
insert into t7 values(6);&lt;br/&gt;
create table t8(x int);&lt;br/&gt;
insert into t8 values(0);&lt;br/&gt;
insert into t8 values(1);&lt;br/&gt;
insert into t8 values(2);&lt;br/&gt;
insert into t8 values(3);&lt;br/&gt;
insert into t8 values(4);&lt;br/&gt;
insert into t8 values(5);&lt;br/&gt;
insert into t8 values(6);&lt;br/&gt;
insert into t8 values(7);&lt;br/&gt;
create table t9(x int);&lt;br/&gt;
insert into t9 values(0);&lt;br/&gt;
insert into t9 values(1);&lt;br/&gt;
insert into t9 values(2);&lt;br/&gt;
insert into t9 values(3);&lt;br/&gt;
insert into t9 values(4);&lt;br/&gt;
insert into t9 values(5);&lt;br/&gt;
insert into t9 values(6);&lt;br/&gt;
insert into t9 values(7);&lt;br/&gt;
insert into t9 values(8);&lt;br/&gt;
insert into t0 values(1);&lt;br/&gt;
insert into t1 values(2);&lt;br/&gt;
insert into t0 values(3);&lt;br/&gt;
insert into t1 values(3);&lt;br/&gt;
insert into t2 values(4);&lt;br/&gt;
insert into t0 values(5);&lt;br/&gt;
insert into t2 values(5);&lt;br/&gt;
insert into t1 values(6);&lt;br/&gt;
insert into t2 values(6);&lt;br/&gt;
insert into t0 values(7);&lt;br/&gt;
insert into t1 values(7);&lt;br/&gt;
insert into t2 values(7);&lt;br/&gt;
insert into t3 values(8);&lt;br/&gt;
insert into t0 values(9);&lt;br/&gt;
insert into t3 values(9);&lt;br/&gt;
insert into t1 values(10);&lt;br/&gt;
insert into t3 values(10);&lt;br/&gt;
insert into t0 values(11);&lt;br/&gt;
insert into t1 values(11);&lt;br/&gt;
insert into t3 values(11);&lt;br/&gt;
insert into t2 values(12);&lt;br/&gt;
insert into t3 values(12);&lt;br/&gt;
insert into t0 values(13);&lt;br/&gt;
insert into t2 values(13);&lt;br/&gt;
insert into t3 values(13);&lt;br/&gt;
insert into t1 values(14);&lt;br/&gt;
insert into t2 values(14);&lt;br/&gt;
insert into t3 values(14);&lt;br/&gt;
insert into t0 values(15);&lt;br/&gt;
insert into t1 values(15);&lt;br/&gt;
insert into t2 values(15);&lt;br/&gt;
insert into t3 values(15);&lt;br/&gt;
select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x , t6.x , t7.x , t8.x from (((t0 inner join ((t1 right outer join (t2 inner join t3 on t2.x = t3.x ) on t1.x = t2.x ) left outer join (t4 inner join t5 on t4.x = t5.x ) on t1.x = t4.x ) on t0.x = t2.x ) left outer join (t6 inner join t7 on t6.x = t7.x ) on t1.x = t6.x ) inner join t8 on t5.x = t8.x );&lt;br/&gt;
select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x , t6.x , t7.x from ((t0 right outer join t1 on t0.x = t1.x ) inner join (((t2 inner join (t3 left outer join t4 on t3.x = t4.x ) on t2.x = t3.x ) right outer join t5 on t2.x = t5.x ) left outer join (t6 inner join t7 on t6.x = t7.x ) on t4.x = t6.x ) on t0.x = t5.x );&lt;br/&gt;
select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x , t6.x , t7.x from ((((t0 left outer join t1 on t0.x = t1.x ) right outer join t2 on t0.x = t2.x ) right outer join t3 on t0.x = t3.x ) inner join ((t4 inner join t5 on t4.x = t5.x ) right outer join (t6 right outer join t7 on t6.x = t7.x ) on t4.x = t6.x ) on t1.x = t4.x );&lt;br/&gt;
select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x from (((t0 inner join t1 on t0.x = t1.x ) right outer join (t2 right outer join t3 on t2.x = t3.x ) on t0.x = t2.x ) inner join (t4 left outer join t5 on t4.x = t5.x ) on t1.x = t4.x );&lt;br/&gt;
select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x , t6.x from ((t0 right outer join (t1 right outer join (t2 left outer join (t3 left outer join t4 on t3.x = t4.x ) on t2.x = t3.x ) on t1.x = t3.x ) on t0.x = t1.x ) left outer join (t5 inner join t6 on t5.x = t6.x ) on t2.x = t5.x );&lt;/p&gt;</description>
                <environment></environment>
        <key id="12467824">DERBY-4712</key>
            <summary>Complex nested joins problems</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Jun 2010 19:13:15 +0100</created>
                <updated>Mon, 7 Feb 2011 22:52:43 +0000</updated>
                            <resolved>Mon, 7 Feb 2011 22:52:43 +0000</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12882586" author="knutanders" created="Fri, 25 Jun 2010 15:09:22 +0100"  >&lt;p&gt;Verified that this query fails on trunk too. Setting component to SQL and adding the repro attached flag.&lt;/p&gt;</comment>
                            <comment id="12885701" author="dagw" created="Tue, 6 Jul 2010 22:46:10 +0100"  >&lt;p&gt;Attaching derby.log which dump of the query tree after bind and optimization of a simplified query which also gives the ASSERT error, and an annotated drawing of the query tree after bind and optimize. The drawing shows that the column reference which gives the ASSERT during code generation points to a result column of a result column list which has been replaced during the optimization phases. This is the immediate cause of the error.&lt;/p&gt;

&lt;p&gt;The column reference is part of a join condition (T2.X=1) on the outermost left join. This has been pushed into the right side of the outermost left join so after optimization, the predicate is part of the PRN above the inner join which is the right side of the outermost left join.&lt;/p&gt;</comment>
                            <comment id="12885989" author="dagw" created="Wed, 7 Jul 2010 18:04:51 +0100"  >&lt;p&gt;Created a sub-issue for the ASSERT error analyzed above since it seems distinct from the NPE: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4736&quot; title=&quot;ASSERT FAIL when code generating a column reference in a join predicate in presence of other outer join reordering&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4736&quot;&gt;&lt;del&gt;DERBY-4736&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12904365" author="dagw" created="Mon, 30 Aug 2010 23:06:39 +0100"  >&lt;p&gt;The NPE doesn&apos;t seem tied to right outer join, although the examples all contained that. The following slightly simplified query also sees an NPE:&lt;br/&gt;
  &quot;select 1 from &quot; +&lt;br/&gt;
                &quot;( ((t3 left outer join t2 on t2.x = t3.x ) &quot; +&lt;br/&gt;
               &quot;  left outer join &quot; +&lt;br/&gt;
                &quot;  (t0 inner join t1 on t0.x = t1.x ) on t0.x = t2.x) &quot; +&lt;br/&gt;
                &quot;inner join &quot; +&lt;br/&gt;
                &quot;  t4 on t1.x = t4.x)&quot;);&lt;/p&gt;

&lt;p&gt;The relevant part of the stack trace in derby.log:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BaseActivation.getColumnFromRow(BaseActivation.java:1477)&lt;br/&gt;
	at org.apache.derby.exe.acf81e0010x012axc4fex4e37x0000035b489847.e7(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:153)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:273)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCore(NestedLoopJoinResultSet.java:116)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NestedLoopLeftOuterJoinResultSet.getNextRowCore(NestedLoopLeftOuterJoinResultSet.java:104)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(JoinResultSet.java:149)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:174)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:254)&lt;/p&gt;
</comment>
                            <comment id="12904790" author="dagw" created="Tue, 31 Aug 2010 23:04:31 +0100"  >&lt;p&gt;Uploading a drawing of the query tree after optimization for the above query that gives NPE, and and even simpler one which seems to work. The simple one is the left side of the top INNER JOIN of the first one, which contains the predicate that leads to the query NPE (x0=x2). In the simplified one that works we can see that the join predicate X0=X2 is located in the PRN &lt;b&gt;above&lt;/b&gt; the innermost INNER JOIN. In the NPE example, we can see that the join predicate has been pushed all the way down to the PRN above the base table T1.&lt;/p&gt;

&lt;p&gt;The difference &lt;b&gt;may&lt;/b&gt; account for the NPE, but I am not sure. It is unclar to me, how far &quot;across&quot; result set trees column references may point.&lt;/p&gt;</comment>
                            <comment id="12907434" author="dagw" created="Wed, 8 Sep 2010 22:17:03 +0100"  >&lt;p&gt;NPE preliminary analysis:&lt;/p&gt;

&lt;p&gt;Referring to the drawing in the uploading document &quot;drawing.txt&quot;, note&lt;br/&gt;
the following:&lt;/p&gt;

&lt;p&gt;In the simpler query that works, after optimization, there is a PRN&lt;br/&gt;
sitting above the JoinNode (labeled &quot;JN@60&quot;) which holds the predicate&lt;br/&gt;
X0=X2. In the bad query, there is no such PRN, the JoinNode (labeled&lt;br/&gt;
JN@45) sits directly underneath the Left Outer Join Node (labeled&lt;br/&gt;
LOJ@33).&lt;/p&gt;

&lt;p&gt;This seemed puzzling, since the simpler query is the exact left side of&lt;br/&gt;
the bad query.&lt;/p&gt;

&lt;p&gt;Tracing the creation of PRNs, I found that the PRN in the simpler&lt;br/&gt;
query gets created in TableOperatorNode (superclass of JoinNode) &lt;b&gt;iff&lt;/b&gt;&lt;br/&gt;
&quot;isFlattenableJoinNode()&quot; returns false for the JoinNode,&lt;br/&gt;
cf. TableOperatorNode#preprocess.&lt;/p&gt;

&lt;p&gt;Now, by tracing this in the simple, working example, I see that&lt;br/&gt;
isFlattenableJoinNode does in deed return false. However, in the bad&lt;br/&gt;
query, it returns true! Why should that be? &lt;/p&gt;

&lt;p&gt;It turns out the for the working query, FromList#preprocess calls&lt;br/&gt;
transformOuterJoins for each table in the from list. If the top node&lt;br/&gt;
in the from list is a LOJ, which it is in the simplified, working&lt;br/&gt;
query, the method called will be&lt;br/&gt;
HalfOuterJoinNode#transformOuterJoins. Since there is no WHERE&lt;br/&gt;
predicate, the argument &quot;predicateTree&quot; will be null, and&lt;br/&gt;
transformOuterJoins will return &quot;this&quot;, but only after calling&lt;/p&gt;

&lt;p&gt;  leftResultSet.notFlattenableJoin();&lt;br/&gt;
  rightResultSet.notFlattenableJoin();&lt;/p&gt;

&lt;p&gt;on its child result sets. This accounts for the fact that in the good&lt;br/&gt;
query, the PRN gets inserted.&lt;/p&gt;

&lt;p&gt;Now, in the bad query, again FromList#preprocess calls&lt;br/&gt;
transformOuterJoins, but this time on the top plain JoinNode. Also&lt;br/&gt;
here, we see the method return &quot;this&quot; is the predicateTree is null (no&lt;br/&gt;
WHERE clause), but it makes no attempt to propagate this information&lt;br/&gt;
down to any inferior outer join nodes. This accounts for the fact that&lt;br/&gt;
&quot;LOJ@33&quot; in the drawing never gets to call notFlattenableJoin on&lt;br/&gt;
&quot;JN@45&quot;, and hence it never gets a PRN above it.&lt;/p&gt;

&lt;p&gt;By adding the following lines to JoinNode#transformOuterJoins, the NPE&lt;br/&gt;
goes away for all the sample queries in DERBY4712 (I have not yet&lt;br/&gt;
verified their correctness though):&lt;br/&gt;
:&lt;br/&gt;
if (predicateTree == null) &lt;/p&gt;
{
   // Make sure any nested outer joins know we are non flattenable, too,
   // since they inform their left and right sides. If result sets are
   // not outer joins, these are no-ops. Cf. DERBY-4712.
   ((FromTable) leftResultSet).transformOuterJoins(null, numTables);   // &amp;lt;&amp;lt;&amp;lt;- added
   ((FromTable) rightResultSet).transformOuterJoins(null, numTables); // &amp;lt;&amp;lt;&amp;lt;- added
   return this;
}

&lt;p&gt;Possibly, we need to add these two extra lines to the same place in HalfOuterJoinNode, too. I&apos;ll see.&lt;/p&gt;

&lt;p&gt;So, in summary, I think that the NPE results from an query tree&lt;br/&gt;
inconsistency in that the missing PRN indicates that the JoinNode is&lt;br/&gt;
flattenable whereas it is not really, and the join predicate gets&lt;br/&gt;
pushed down to far.&lt;/p&gt;

</comment>
                            <comment id="12907648" author="dagw" created="Thu, 9 Sep 2010 16:16:30 +0100"  >&lt;p&gt;I checked the ex-NPE query results against Postgres, and the results were identical, so the fix is sound as far as correctness&lt;br/&gt;
for the NPE queries reported in this issue.&lt;/p&gt;</comment>
                            <comment id="12907818" author="dagw" created="Fri, 10 Sep 2010 00:10:08 +0100"  >&lt;p&gt;Uploading a patch which embodies the proposed fix, and a new test case fixture in OuterJoinTest; testDerby_4712_NPEs, which contains the original queries that received the NPEs.&lt;br/&gt;
Regressions ran OK. Please review.&lt;/p&gt;</comment>
                            <comment id="12907825" author="dagw" created="Fri, 10 Sep 2010 00:46:59 +0100"  >&lt;p&gt;Sadly(? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, going back to the original randomized query generator, &lt;a href=&quot;http://code.google.com/p/h2database/source/browse/trunk/h2/src/test/org/h2/test/db/TestNestedJoins.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/h2database/source/browse/trunk/h2/src/test/org/h2/test/db/TestNestedJoins.java&lt;/a&gt;, I have uncovered yet another similar bug (NPE), which is not fixed by the current patch:&lt;/p&gt;

&lt;p&gt;SELECT t0.x0,&lt;br/&gt;
       t1.x1,&lt;br/&gt;
       t2.x2,&lt;br/&gt;
       t3.x3,&lt;br/&gt;
       t4.x4,&lt;br/&gt;
       t5.x5,&lt;br/&gt;
       t6.x6,&lt;br/&gt;
       t7.x7&lt;br/&gt;
FROM   ((t0&lt;br/&gt;
         LEFT OUTER JOIN ((t1&lt;br/&gt;
                           LEFT OUTER JOIN (t2&lt;br/&gt;
                                            LEFT OUTER JOIN t3&lt;br/&gt;
                                              ON t2.x2 = t3.x3 )&lt;br/&gt;
                             ON t1.x1 = t2.x2 )&lt;br/&gt;
                          LEFT OUTER JOIN (t4&lt;br/&gt;
                                           INNER JOIN (t5&lt;br/&gt;
                                                       LEFT OUTER JOIN t6&lt;br/&gt;
                                                         ON t5.x5 = t6.x6 )&lt;br/&gt;
                                             ON t4.x4 = t5.x5 )&lt;br/&gt;
                            ON t1.x1 = t5.x5 )&lt;br/&gt;
           ON t0.x0 = t5.x5 )&lt;br/&gt;
        LEFT OUTER JOIN t7&lt;br/&gt;
          ON t3.x3 = t7.x7 );  &lt;/p&gt;

&lt;p&gt;This is apparently another bug, filed it as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12908065" author="dagw" created="Fri, 10 Sep 2010 17:05:43 +0100"  >&lt;p&gt;The original NPE fixed by the uploaded patch is visible all way back to 10.0, marking.&lt;/p&gt;</comment>
                            <comment id="12908066" author="dagw" created="Fri, 10 Sep 2010 17:07:14 +0100"  >&lt;p&gt;The new NPE found above, however, is a regression in 10.5, I will open another issue for this. (edited: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12908211" author="dagw" created="Fri, 10 Sep 2010 23:12:04 +0100"  >&lt;p&gt;By applying the current patch, and by backing out the removed lines from BaseActivation#getColumnFromRow (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt;), I was able make a successful run with the random generator referenced in the description of this issue (10000 generated queries).&lt;/p&gt;</comment>
                            <comment id="12908258" author="bryanpendleton" created="Sat, 11 Sep 2010 02:00:44 +0100"  >&lt;p&gt;Thank you very much for working on this, Dag. I&apos;ve been hoping to find time&lt;br/&gt;
to read through your thorough notes, but time has been scarce recently.&lt;/p&gt;

&lt;p&gt;On the one hand, I&apos;m a bit discouraged that the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3097&quot; title=&quot;Unnecessary if statement can be removed from BaseActivation.getColumnFromNow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3097&quot;&gt;&lt;del&gt;DERBY-3097&lt;/del&gt;&lt;/a&gt; issue has re-arisen.&lt;/p&gt;

&lt;p&gt;But on the other hand, I&apos;m glad: I never really felt that we had completely resolved&lt;br/&gt;
that problem, because there was always that comment in the code about certain&lt;br/&gt;
situations that only arose during deeply-nested joins.&lt;/p&gt;

&lt;p&gt;So, I&apos;m glad that you have been able to provoke the strange &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3097&quot; title=&quot;Unnecessary if statement can be removed from BaseActivation.getColumnFromNow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3097&quot;&gt;&lt;del&gt;DERBY-3097&lt;/del&gt;&lt;/a&gt; error&lt;br/&gt;
with your latest work, as hopefully that will let us get a bit farther into uncovering&lt;br/&gt;
what&apos;s really going on there.&lt;/p&gt;

&lt;p&gt;I still believe that that basic &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3097&quot; title=&quot;Unnecessary if statement can be removed from BaseActivation.getColumnFromNow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3097&quot;&gt;&lt;del&gt;DERBY-3097&lt;/del&gt;&lt;/a&gt; change is, at its core, correct, because&lt;br/&gt;
it just seems wrong to try to fetch a column value from a non-existent row.&lt;/p&gt;

&lt;p&gt;In the other &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3097&quot; title=&quot;Unnecessary if statement can be removed from BaseActivation.getColumnFromNow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3097&quot;&gt;&lt;del&gt;DERBY-3097&lt;/del&gt;&lt;/a&gt; scenarios, we were able to find a place higher in the&lt;br/&gt;
call tree, where the result set logic could tell that we were initializing a result&lt;br/&gt;
set which had not yet been opened, and could handle the initialization logic&lt;br/&gt;
more cleanly. Hopefully we can do that again here (and in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Once again, thank you very much for exploring these issues in such detail, and&lt;br/&gt;
for documenting your findings in your comments and writeups. These work products&lt;br/&gt;
will be of &lt;b&gt;tremendous&lt;/b&gt; value to future students of this code.&lt;/p&gt;

&lt;p&gt;And, lastly: 10,000 generated queries! That is fabulous! Someday, if I get the time,&lt;br/&gt;
I&apos;d like to use these query generation tools to continue working on the query plan&lt;br/&gt;
visualization features, so I&apos;m very pleased that you&apos;ve been able to make the tools&lt;br/&gt;
(and the queries) work properly in Derby.&lt;/p&gt;
</comment>
                            <comment id="12908328" author="dagw" created="Sat, 11 Sep 2010 16:15:00 +0100"  >&lt;p&gt;Thanks for looking at this, Bryan, and for the encouragement. Much appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ll read up a bit on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3097&quot; title=&quot;Unnecessary if statement can be removed from BaseActivation.getColumnFromNow&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3097&quot;&gt;&lt;del&gt;DERBY-3097&lt;/del&gt;&lt;/a&gt; and see if we can adapt those approaches also for the case of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt; (the NPE addressed in the patch of this issue is not related).&lt;/p&gt;

&lt;p&gt; As for the nested joins generator queries, I had to hack the generator a bit since I didn&apos;t have the h2 code (not sure if I can post my tweaked version here (it carries an H2 licence), but I can mail you a copy if you like). It doesn&apos;t really check the correctness of the queries, just that they execute without error. I ran it 10 more times successfully just to be sure it wasn&apos;t a lucky draw.&lt;/p&gt;

&lt;p&gt;Also, thanks to Thomas for alerting us to these issues! Very useful bug report, when this is all in we&apos;ll have four bug fixes in place in this area!&lt;/p&gt;</comment>
                            <comment id="12908424" author="tmueller" created="Sun, 12 Sep 2010 09:37:32 +0100"  >&lt;p&gt;Not sure what&apos;s the process to &apos;re-license&apos; the code, but you have my permission to use my code in whatever way you want.&lt;/p&gt;</comment>
                            <comment id="12909326" author="dagw" created="Tue, 14 Sep 2010 17:55:22 +0100"  >&lt;p&gt;Thanks, Thomas. I basically did a gross hack to make just the random generator do its thing for Derby.&lt;/p&gt;

&lt;p&gt;I plan to commit this patch (derby-4712a) shortly. When &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt; also goes in, Derby should be able to handle all the random queries. &lt;/p&gt;</comment>
                            <comment id="12909721" author="dagw" created="Wed, 15 Sep 2010 14:20:49 +0100"  >&lt;p&gt;Uploading derby4712b, same as &quot;a&quot;, except removed some spurious blank diffs.&lt;/p&gt;</comment>
                            <comment id="12909724" author="dagw" created="Wed, 15 Sep 2010 14:30:21 +0100"  >&lt;p&gt;Committed derby4712b as svn 997325, resolving this issue.&lt;br/&gt;
Note that the related issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4798&quot; title=&quot;NPE in nested outer join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4798&quot;&gt;&lt;del&gt;DERBY-4798&lt;/del&gt;&lt;/a&gt; must be fixed before all the bugs seen by the reporter&apos;s repro are fixed.&lt;/p&gt;
</comment>
                            <comment id="12910615" author="dagw" created="Fri, 17 Sep 2010 15:58:59 +0100"  >&lt;p&gt;Backported to 10.6 as svn 998163.&lt;/p&gt;

&lt;p&gt;I do not plan any more work on this issue, so Thomas, feel free to close it if you are OK with it. &lt;/p&gt;</comment>
                            <comment id="12989894" author="kmarsden" created="Wed, 2 Feb 2011 23:44:10 +0000"  >&lt;p&gt;Reopen for backport.&lt;/p&gt;</comment>
                            <comment id="12991550" author="kmarsden" created="Mon, 7 Feb 2011 19:51:06 +0000"  >&lt;p&gt;Assigning to myself temporarily for backport&lt;/p&gt;</comment>
                            <comment id="12991572" author="kmarsden" created="Mon, 7 Feb 2011 20:18:30 +0000"  >&lt;p&gt;In porting this fix to 10.5 I noticed the final query in the reproduction gives an assertion even with the fix on both trunk and 10.5, although the NullPointerExceptions are fixed.  Has another issue already been filed for this or should I file one?&lt;/p&gt;

&lt;p&gt;Below is the trace for trunk.&lt;/p&gt;

&lt;p&gt;2011-02-07 20:15:47.640 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 325), (SESSIONID = 1), (DATABASE = wombat), (DRDAID = null), Cleanup action starting&lt;/p&gt;

&lt;p&gt;2011-02-07 20:15:47.640 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 325), (SESSIONID = 1), (DATABASE = wombat), (DRDAID = null), Failed Statement is: select t0.x , t1.x , t2.x , t3.x , t4.x , t5.x , t6.x from ((t0 right outer join (t1 right outer join (t2 left outer join (t3 left outer join t4 on t3.x = t4.x ) on t2.x = t3.x ) on t1.x = t3.x ) on t0.x = t1.x ) left outer join (t5 inner join t6 on t5.x = t6.x ) on t2.x = t5.x )&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED sourceResultSetNumber expected to be &amp;gt;= 0 for T2.X&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ColumnReference.generateExpression(ColumnReference.java:941)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpression(BinaryOperatorNode.java:600)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1529)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1604)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1580)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1517)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.HalfOuterJoinNode.generate(HalfOuterJoinNode.java:691)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1390)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1485)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:109)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:629)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:347)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:449)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:909)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:505)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:347)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.go(Main.java:217)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.tools.ij.main(ij.java:59)&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;</comment>
                            <comment id="12991573" author="kmarsden" created="Mon, 7 Feb 2011 20:22:27 +0000"  >&lt;p&gt;Sorry, my error. I now see there is a subtask for the ASSERTION. I was mistaken in  my earlier comment that it still occurs on trunk and managed to pick up the 10.5 jars instead of trunk.&lt;/p&gt;</comment>
                            <comment id="12991680" author="kmarsden" created="Mon, 7 Feb 2011 22:52:43 +0000"  >&lt;p&gt;Closing after backport to 10.5. Note only code change was backported as OuterJoinTest is not in 10.5 branch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12443160">DERBY-4471</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12473822">DERBY-4798</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12497378">DERBY-4994</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12448824" name="assert-bind-opt-trees.log" size="140799" author="dagw" created="Tue, 6 Jul 2010 22:46:10 +0100"/>
                            <attachment id="12448823" name="assert-bind-opt-trees.txt" size="4958" author="dagw" created="Tue, 6 Jul 2010 22:46:10 +0100"/>
                            <attachment id="12453551" name="derby.log.analyzed" size="89420" author="dagw" created="Tue, 31 Aug 2010 23:04:31 +0100"/>
                            <attachment id="12453552" name="derby.log.simpler" size="44735" author="dagw" created="Tue, 31 Aug 2010 23:04:31 +0100"/>
                            <attachment id="12454252" name="derby4712a.diff" size="68106" author="dagw" created="Fri, 10 Sep 2010 00:10:08 +0100"/>
                            <attachment id="12454253" name="derby4712a.stat" size="157" author="dagw" created="Fri, 10 Sep 2010 00:10:08 +0100"/>
                            <attachment id="12454652" name="derby4712b.diff" size="15607" author="dagw" created="Wed, 15 Sep 2010 14:20:49 +0100"/>
                            <attachment id="12453550" name="drawing.txt" size="3109" author="dagw" created="Tue, 31 Aug 2010 23:04:31 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12468737">DERBY-4736</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Jun 2010 14:09:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24423</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0j7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36930</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>