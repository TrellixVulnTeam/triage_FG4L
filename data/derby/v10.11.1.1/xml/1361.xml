<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:55:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1361/DERBY-1361.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1361] positioned updates and deletes allowed after a commit without repositioning the cursor - if the table is indexed on the columns selected</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1361</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;After a commit, the cursor should be positioned before the next row (not on a row). However in Derby 10.2, I now see the following behavior if the table has an index on the selected columns:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t (id int primary key);&lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; insert into t values 1,2,3,4,5,6,7,8,9;&lt;/p&gt;

&lt;p&gt;9 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; get cursor c1 as &apos;select * from t for update&apos;;&lt;br/&gt;
ij&amp;gt; next c1;&lt;br/&gt;
ID         &lt;br/&gt;
-----------&lt;br/&gt;
1          &lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; update t set id=id+1000 where current of c1;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; update t set id=id+1000 where current of c1;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; &lt;/p&gt;

&lt;p&gt;The expected behavior is  that the UPDATE .. WHERE CURRENT OF fails with:&lt;br/&gt;
ERROR 24000: Invalid cursor state - no current row.&lt;/p&gt;

&lt;p&gt;The problem applies to both scrollable and forward-only updatable cursors.&lt;/p&gt;

&lt;p&gt;Note: If the table is created &lt;b&gt;without&lt;/b&gt; the index, I do see the expected behavior.&lt;br/&gt;
I am marking this as a regression, since this issue is not reproducible on older, released versions of derby (I have tested with 10.1.2.1).&lt;/p&gt;</description>
                <environment>Java 1.4</environment>
        <key id="12343728">DERBY-1361</key>
            <summary>positioned updates and deletes allowed after a commit without repositioning the cursor - if the table is indexed on the columns selected</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andreask">Andreas Korneliussen</assignee>
                                    <reporter username="andreask">Andreas Korneliussen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 May 2006 23:02:37 +0100</created>
                <updated>Tue, 30 Jun 2009 16:55:52 +0100</updated>
                            <resolved>Tue, 27 Jun 2006 15:59:51 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12414170" author="dagw" created="Thu, 1 Jun 2006 06:59:14 +0100"  >&lt;p&gt;I only see the error if the index is covering.&lt;br/&gt;
It may be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1087&quot; title=&quot;Updatable result sets behave different depending on the type of query used to generate the result set&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1087&quot;&gt;&lt;del&gt;DERBY-1087&lt;/del&gt;&lt;/a&gt;. For the forward-only case,&lt;br/&gt;
the behavior is correct prior to that patch. &lt;/p&gt;</comment>
                            <comment id="12414171" author="dagw" created="Thu, 1 Jun 2006 07:01:19 +0100"  >&lt;p&gt;The problem exists not only for positioned operations,  but also&lt;br/&gt;
for ResultSet#updateRow and ResultSet#deleteRow.&lt;/p&gt;</comment>
                            <comment id="12415365" author="andreask" created="Thu, 8 Jun 2006 23:33:08 +0100"  >&lt;p&gt;It seems to me that it is the store layer which has the knowledge on if a cursor has lost its position as a consequence of a commit. After a commit, the scanstate will be SCAN_HOLD_INPROGRESS.&lt;/p&gt;

&lt;p&gt;The optimization in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1087&quot; title=&quot;Updatable result sets behave different depending on the type of query used to generate the result set&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1087&quot;&gt;&lt;del&gt;DERBY-1087&lt;/del&gt;&lt;/a&gt; causes IndexRowToBaseRowResultSet (in SQL execution layer) to no longer need to ask its source resultset for the current row (and thereby doing extra qualification ). Since it does not ask its source resultset, the source resultset no longer access the store layer and gets the exception that the cursor is not on a row.&lt;/p&gt;

&lt;p&gt;I would propose to fix this by letting IndexRowToBaseRowResultSet call a new method (isCurrentPositionValid()) on its source resultset. The source resultset (i.e TableScanResultSet) may implement this by calling a new method in store&apos;s ScanController to check that the position is valid.&lt;/p&gt;

&lt;p&gt;In terms of internal interface changes, this means that if I follow the proposal, these two interfaces will be extended with a new method:&lt;/p&gt;

&lt;p&gt;org.apache.derby.iapi.sql.execute.NoPutResultSet#isCurrentPositionValid()  &amp;lt;- allows resultsets to call their source resultsets for this info&lt;br/&gt;
org.apache.derby.iapi.store.access.ScanController#isCurrentPositionValid() &amp;lt;- allows resultsets which access the ScanControllers to get this info from store layer&lt;/p&gt;

&lt;p&gt;An alternative fix is to continue calling source.getCurrentRow(), however that will mean that the row gets requalified before the update (-&amp;gt; reintroduces the problems of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1087&quot; title=&quot;Updatable result sets behave different depending on the type of query used to generate the result set&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1087&quot;&gt;&lt;del&gt;DERBY-1087&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Please let me know if anyone has better aproaches of solving this issue.&lt;/p&gt;</comment>
                            <comment id="12416186" author="andreask" created="Wed, 14 Jun 2006 20:28:12 +0100"  >&lt;p&gt;I am following the proposal outlined above. As part of testing my changes, I found that Derby offers two different SQL States / Error Codes for what is approximately the same situation:&lt;/p&gt;

&lt;p&gt;If a cursor is on beforeFirst or afterLast, and the user tries a positioned update / delete or ResultSet.updateRow(), the user get error:&lt;/p&gt;

&lt;p&gt;ERROR XCL08: Cursor &apos;C1&apos; is not on a row.&lt;/p&gt;

&lt;p&gt;If the cursor is positioned on a row, and the user does commit(), the cursor position is before the next row, and the user gets error:&lt;/p&gt;

&lt;p&gt;ERROR 24000: Invalid cursor state - no current row.&lt;/p&gt;</comment>
                            <comment id="12417059" author="andreask" created="Wed, 21 Jun 2006 16:29:01 +0100"  >&lt;p&gt;For the scrollable case, I found two problems:&lt;/p&gt;

&lt;p&gt;1. The network client will do a parsing of the SQL and reposition the cursor when there is a positioned update (if it is a scrollable cursor). Since the cursor is repositioned, no exception is thrown when doing it immediately after a commit.&lt;br/&gt;
The repositioning logic can be removed.&lt;/p&gt;

&lt;p&gt;2. Scrollable cursors will not reposition the scancontroller of indexscans. This means that the scancontroller for the index may be closed. Using the scancontroller to depend on this logic does not seem sufficient.&lt;/p&gt;

&lt;p&gt;I will go in another direction: on a commit, every activations will be notified. The activations has references to a ResultSet, and they can notify the resultsets that they should be positioned between the current row and the next row (this can be done by setting currentRow=null)&lt;/p&gt;

&lt;p&gt;As for the two different error messages, I think that this change may force me to choose one of these. It does not seem to be entirely deterministic when I get one and not the other. I think the correct message is the one with SQLSTate 24000.&lt;/p&gt;</comment>
                            <comment id="12417072" author="andreask" created="Wed, 21 Jun 2006 18:46:37 +0100"  >&lt;p&gt;BTW, this is what SQL foundation, part 2, 4.29 Cursors, says about this situation:&lt;/p&gt;

&lt;p&gt;&quot;A holdable cursor that has been held open retains its position when the new SQL-transaction is initiated. However, before either an &amp;lt;update statement: positioned&amp;gt; or a &amp;lt;delete statement: positioned&amp;gt; is permitted to reference that cursor in the new SQL-transaction, a &amp;lt;fetch statement&amp;gt; must be issued against the cursor.&quot;&lt;/p&gt;

&lt;p&gt;I assume, since Derby does not have a &amp;lt;fetch statement&amp;gt;, a repositioning which does implict fetch is required.&lt;/p&gt;</comment>
                            <comment id="12417131" author="andreask" created="Wed, 21 Jun 2006 22:52:22 +0100"  >&lt;p&gt;Attaching a patch for this issue.&lt;/p&gt;

&lt;p&gt;The patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1361&quot; title=&quot;positioned updates and deletes allowed after a commit without repositioning the cursor - if the table is indexed on the columns selected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1361&quot;&gt;&lt;del&gt;DERBY-1361&lt;/del&gt;&lt;/a&gt;.diff + stat) does the following: when a commit is issued, the resultset will clear the current row. A positioned update / delete will be prohibited until there is a fetch (reposition).&lt;br/&gt;
The sqlstate for the error message has been set to 24000.&lt;/p&gt;

&lt;p&gt;The client driver will no longer do the unnecessary repositioning before positioned updates/deletes  (unnecessary since  the resultset is already positioned)&lt;/p&gt;

&lt;p&gt;Testing: 4 new testcases added to SURTest&lt;br/&gt;
Some masterfiles have been hand-edited with new error message / sqlstate.&lt;/p&gt;

&lt;p&gt;I have run the tests which have been changed, however I have not yet run derbyall with the patch.&lt;/p&gt;</comment>
                            <comment id="12417300" author="andreask" created="Thu, 22 Jun 2006 20:59:00 +0100"  >&lt;p&gt;Attaching an updated patch. Two more master files had to be updated because of the error code change. With this latest patch, I have run derbyall with no failures.&lt;br/&gt;
I will until next week days before I commit this patch, in case anyone would like to give some review comments.&lt;/p&gt;</comment>
                            <comment id="12417790" author="kristwaa" created="Mon, 26 Jun 2006 19:42:41 +0100"  >&lt;p&gt;I reviewed the second patch. It looks good and can be committed.&lt;/p&gt;

&lt;p&gt;It should be noted that the patch also rewrites a few lines of code in &apos;BaseJDBCTestCase&apos; (functionality is not changed).&lt;/p&gt;</comment>
                            <comment id="12417973" author="andreask" created="Tue, 27 Jun 2006 15:59:51 +0100"  >&lt;p&gt;Committed revision 417366.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335723" name="DERBY-1361.diff" size="38888" author="andreask" created="Wed, 21 Jun 2006 22:52:22 +0100"/>
                            <attachment id="12335724" name="DERBY-1361.stat" size="2291" author="andreask" created="Wed, 21 Jun 2006 22:52:22 +0100"/>
                            <attachment id="12335771" name="DERBY-1361v2.diff" size="45022" author="andreask" created="Thu, 22 Jun 2006 20:59:00 +0100"/>
                            <attachment id="12335772" name="DERBY-1361v2.stat" size="2453" author="andreask" created="Thu, 22 Jun 2006 20:59:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 1 Jun 2006 05:59:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22460</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0urz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38804</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>