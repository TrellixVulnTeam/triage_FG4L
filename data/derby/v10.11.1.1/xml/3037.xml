<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3037/DERBY-3037.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3037] Language ResultSet.finish() is called even when the ResultSet is going to be re-used.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3037</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; (correctly) changed the lifetime of the language ResultSet tree to be the lifetime of the activation, but did not fix up the correct calls to ResultSet.close() and ResultSet.finish().&lt;/p&gt;

&lt;p&gt;A language ResultSet&apos;s lifetime should be driven by the activation, so activation.close() should call finish() on its ResultSet.&lt;/p&gt;

&lt;p&gt;EmbedResultSet should call close on its language ResultSet (theResults field) when the JDBC ResultSet is closed, it should not be calling finish() on its ResultSet.&lt;/p&gt;

&lt;p&gt;See comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; for some more details and issues.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12377286">DERBY-3037</key>
            <summary>Language ResultSet.finish() is called even when the ResultSet is going to be re-used.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="4" iconUrl="https://issues.apache.org/jira/images/icons/statuses/reopened.png" description="This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.">Reopened</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Sat, 1 Sep 2007 00:40:45 +0100</created>
                <updated>Wed, 17 Apr 2013 20:10:18 +0100</updated>
                                            <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12548302" author="mamtas" created="Tue, 4 Dec 2007 17:03:01 +0000"  >&lt;p&gt;I made a simple one line change in EmbedResultSet.close() so that it calls language ResultSet.close rather than finish and of course, it is causing test failures. I will investigate the failures but just wanted to share the simple code change that I made in EmbedResultSet.close()&lt;/p&gt;

&lt;p&gt;$ svn diff&lt;br/&gt;
Index: java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (revision 599587)&lt;br/&gt;
+++ java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java  (working copy)&lt;br/&gt;
@@ -567,7 +567,8 @@&lt;/p&gt;

&lt;p&gt;                        try     {&lt;br/&gt;
                                try     {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;theResults.finish(); // release the result set, don&apos;t just close it&lt;br/&gt;
+//                                     theResults.finish(); // release the result set, don&apos;t just close it&lt;br/&gt;
+                                       theResults.close();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;                                    if (this.singleUseActivation != null)&lt;br/&gt;
                                    {&lt;/p&gt;</comment>
                            <comment id="12549155" author="mamtas" created="Thu, 6 Dec 2007 19:48:07 +0000"  >&lt;p&gt;I committed a change(601830) into trunk with following commit comments&lt;/p&gt;

&lt;p&gt;DERBY3037&lt;/p&gt;

&lt;p&gt;This commit makes sure that EmbeddedResultSet.close() calls Language Resultset.close rather than Language &lt;br/&gt;
Resultset.finish. This change caused few tests to fail. The tests had runtime statistics on but the code to dump &lt;br/&gt;
the runtime statistics was in Language Resutlset.finish and not in Language Resultset.close. To fix this, I have &lt;br/&gt;
moved the code to dump runtime statistics from Language Resutlset.finish into Lanugage ResultSet.close This has &lt;br/&gt;
fixed the test failures. &lt;/p&gt;

&lt;p&gt;As for the 2nd part of this jira entry which is to have activation.close() call Language Resultset.finish(). This&lt;br/&gt;
already happens in impl.sql.execute.BaseActivation.close() and hence no work was needed for the 2nd part.&lt;/p&gt;

&lt;p&gt;Will merge this change into 10.3 codeline soon.&lt;/p&gt;</comment>
                            <comment id="12549536" author="mamtas" created="Fri, 7 Dec 2007 19:50:25 +0000"  >&lt;p&gt;Merged changes from trunk into 10.3 codeline with revision 602198.&lt;/p&gt;</comment>
                            <comment id="12549632" author="djd" created="Sat, 8 Dec 2007 01:26:37 +0000"  >&lt;p&gt;&amp;gt; See comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; for some more details and issues.&lt;/p&gt;

&lt;p&gt;The comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; show some other places where finish() is called, e.g. EmbedStatement.&lt;br/&gt;
Ideally finish() should only be called from activation.close() and implementations of finish() calling finish() on child ResultSets.&lt;/p&gt;</comment>
                            <comment id="12550131" author="mamtas" created="Mon, 10 Dec 2007 17:33:05 +0000"  >&lt;p&gt;Other than Activation.close(), there are 3 other places in the code, which call Language Resultset.finish(). Those cases are listed below&lt;br/&gt;
1)impl.jdbc..EmbedResultSet.deleteRow() line 3789&lt;br/&gt;
Here we generate internal SQL to implement deleteRow. The internal sql is DELETE FROM ..... WHERE CURRENT OF ........ After the execution of this sql, we close the Language ResultSet, then finish the Language ResultSet and then we close the Activation associated with that Language ResultSet. Theoretically, we can simply reply on Activation.close to do the jobs of closing the Language ResultSet, finishing the Language ResultSet and then closing itself. I will give this a try once I address the failure in outerjoin.sql caused by my earlier checkin for this jira entry.&lt;br/&gt;
2)impl.sql.execute.AlterTableConstantAction.executeUpdate() line 2242&lt;br/&gt;
The current code here looks like following&lt;br/&gt;
        PreparedStatement ps = lcc.prepareInternalStatement(updateStmt);&lt;/p&gt;

&lt;p&gt;        // This is a substatement; for now, we do not set any timeout&lt;br/&gt;
        // for it. We might change this behaviour later, by linking&lt;br/&gt;
        // timeout to its parent statement&apos;s timeout settings.&lt;br/&gt;
        ResultSet rs = ps.execute(lcc, true, 0L);&lt;br/&gt;
        rs.close();&lt;br/&gt;
        rs.finish();&lt;/p&gt;

&lt;p&gt;As can be seen from code above, here too we execute an internal SQL statement and after it&apos;s execution, we call close the Language ResultSet, then finish the Language ResultSet. We do not currently get the handle to Activation object in the code above. I can try to do following to avoid direct call to Language Resultset.finish&lt;br/&gt;
        PreparedStatement ps = lcc.prepareInternalStatement(updateStmt);&lt;br/&gt;
        Activation act = ps.getActivation(lcc, false);&lt;/p&gt;

&lt;p&gt;        // This is a substatement; for now, we do not set any timeout&lt;br/&gt;
        // for it. We might change this behaviour later, by linking&lt;br/&gt;
        // timeout to its parent statement&apos;s timeout settings.&lt;br/&gt;
        ResultSet rs = ps.execute(lcc, true, 0L);&lt;br/&gt;
        act.close()&lt;br/&gt;
3)And lastly, impl.jdbc.EmbedStatement.executeStatement line 1276&lt;br/&gt;
Here, for sql statements that do not return rows, we call Language Resultset.finish because we do not need the Language Resultset anymore(as per the code in the comments).  In this particular case, I do not think I can simply call activation.close to finish the Language Resultset because activation is still getting used after the Language Resultset has been finished. I would like to know if I am interpreting this incorrectly.&lt;/p&gt;

&lt;p&gt;Would appreciate feedback on these 3 items, especially item 3. I will start working on 1 and 2 after I resolve the problem with outerjoin.sql&lt;/p&gt;</comment>
                            <comment id="12550147" author="djd" created="Mon, 10 Dec 2007 18:42:37 +0000"  >&lt;p&gt;On 2) calling ps.getActivation(lcc, false); and then closing it would be incorrect. That would create a new activation unrelated to the subsequent execute() call.&lt;br/&gt;
The execute() call used here creates a single use activation (as indicated in its javadoc). A single use activation will be closed once its language ResultSet is closed (not well documented), and in fact may need cleanup since the activation.close() is called from finishAndRts() and not the result set closing.&lt;/p&gt;

&lt;p&gt;on 3) I think the comments are incorrect at line (1276) which is the justification for this bug. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; changed the code so that the activation re-uses the result set tree, so after one execution it is not true to say the result set is not needed any more. I think this should be a close() instead of a finish().&lt;/p&gt;</comment>
                            <comment id="12551221" author="mamtas" created="Thu, 13 Dec 2007 05:44:36 +0000"  >&lt;p&gt;I addressed the item 1 above and fixed the failure in outjoin.sql with revision 603823 in trunk. The commit comments were as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3261&quot; title=&quot;&amp;#39;Empty right rows returned = 0&amp;#39; expected &amp;#39;... = 1&amp;#39; in lang/outerjoin.sql&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3261&quot;&gt;&lt;del&gt;DERBY-3261&lt;/del&gt;&lt;/a&gt; and part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3037&quot; title=&quot;Language ResultSet.finish() is called even when the ResultSet is going to be re-used.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3037&quot;&gt;DERBY-3037&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The outerjoin.sql was failing because the part of the runtime statistcis info was getting erased before LanguageResultSet.close() code collected it all. I moved the erasing of runtime stat code so that it happened once the stat was collected successfully.&lt;/p&gt;

&lt;p&gt;In addition, I removed redundant code of closing and finishing the LanguageResultSet from EmbedResultSet.java because these steps happen as part of activation.close&lt;/p&gt;

&lt;p&gt;I will merge this into 10.3 codeline and fire the tests there.&lt;/p&gt;</comment>
                            <comment id="12552511" author="mamtas" created="Mon, 17 Dec 2007 19:43:09 +0000"  >&lt;p&gt;Fixed item 3) from the list above in the trunk using 604976. The commit comments were as follows (will merge these changes into 10.3 after the tests finish successfully there)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3037&quot; title=&quot;Language ResultSet.finish() is called even when the ResultSet is going to be re-used.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3037&quot;&gt;DERBY-3037&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;EmbedStatement.executeStatement at line 1276 was calling finish rather than close on the Language Resultset. I fixed that to make a call to close. In addition, I also had to move the code for collecting the stats from finish to close method in NoRowsResultSetImpl.&lt;/p&gt;</comment>
                            <comment id="12552776" author="mamtas" created="Tue, 18 Dec 2007 14:57:21 +0000"  >&lt;p&gt;Meged change 605976 into 10.3.2.2 codeline with revision 605219.&lt;/p&gt;</comment>
                            <comment id="12553502" author="mamtas" created="Wed, 19 Dec 2007 21:25:36 +0000"  >&lt;p&gt;With this patch(Derby_3037_AlterTableConstantActionChanges_v1_diff.txt), I am removing the Language Resultset.finish from AlterTableConstantAction. In addition, like Dan mentioned, what&apos;s being created in this part of AlterTableConstantAction is a single use activation which should be closed when its language Resultset is closed. In order to achieve that, I have added following code in NoRowsResultSetImpl.close to take care of the activation&lt;br/&gt;
+               if (activation.isSingleExecution())&lt;br/&gt;
+                       activation.close();&lt;/p&gt;

&lt;p&gt;The derbyall and junit tests have run with no problems. I will go ahead and check this patch by tomorrow. Any feedback?&lt;/p&gt;

&lt;p&gt;Next task can be to move close of single use activation from BasicNoPutResultSet.finishAndRTS(line 607) into NoPutResultSetImpl.close. In other words, if Language Resultset associated with single use activation is closed, we should close the activation too. Would like to know if anyone has any feedback on this.&lt;/p&gt;</comment>
                            <comment id="12553877" author="mamtas" created="Fri, 21 Dec 2007 06:01:38 +0000"  >&lt;p&gt;Commited the patch Derby_3037_AlterTableConstantActionChanges_v1_diff.txt with revision 606106 into trunk. Will merge into 10.3 later.&lt;/p&gt;</comment>
                            <comment id="12554453" author="mamtas" created="Wed, 26 Dec 2007 18:46:37 +0000"  >&lt;p&gt;Merged change 606106 from trunk into 10.3.2.2 using revision 606924.&lt;/p&gt;</comment>
                            <comment id="12555865" author="dyret" created="Fri, 4 Jan 2008 10:05:47 +0000"  >&lt;p&gt;Removing &apos;patch available&apos; since the issue only has one patch which appears to have been committed (and merged to 10.3).&lt;/p&gt;</comment>
                            <comment id="12561386" author="mamtas" created="Tue, 22 Jan 2008 17:28:58 +0000"  >&lt;p&gt;I have a very small patch for the last item left on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3037&quot; title=&quot;Language ResultSet.finish() is called even when the ResultSet is going to be re-used.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3037&quot;&gt;DERBY-3037&lt;/a&gt; which is to move close of a single use activation from BasicNoPutResultSet.finishRTS into NoPutResultSetImpl.close. The patch is attached as DERBY3037_patch_not_ready_for_commit_v2_diff.txt but I have included the diff here to explain the failure caused by the patch&lt;/p&gt;

&lt;p&gt;Index: java/engine/org/apache/derby/impl/sql/execute/BasicNoPutResultSetImpl.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/engine/org/apache/derby/impl/sql/execute/BasicNoPutResultSetImpl.java(revision 613756)&lt;br/&gt;
+++ java/engine/org/apache/derby/impl/sql/execute/BasicNoPutResultSetImpl.java(working copy)&lt;br/&gt;
@@ -603,9 +603,6 @@&lt;br/&gt;
                                close();&lt;/p&gt;

&lt;p&gt;                        finished = true;&lt;br/&gt;
-&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (isTopResultSet &amp;amp;&amp;amp; activation.isSingleExecution())&lt;/li&gt;
	&lt;li&gt;activation.close();&lt;br/&gt;
                }&lt;br/&gt;
        }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Index: java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java(revision 613756)&lt;br/&gt;
+++ java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java(working copy)&lt;br/&gt;
@@ -183,6 +183,9 @@&lt;/p&gt;

&lt;p&gt;                isOpen = false;&lt;/p&gt;

&lt;p&gt;+               if (isTopResultSet &amp;amp;&amp;amp; activation.isSingleExecution())&lt;br/&gt;
+                       activation.close();&lt;br/&gt;
+&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        /** @see NoPutResultSet#setTargetResultSet */&lt;br/&gt;
$&lt;/p&gt;



&lt;p&gt;This change in code causes a failure with lang/nestedCommit.sql. The specific test case inside nestedCommit.sql has to do with a call to a Java Stored routine (specifically, a function) which looks as follows&lt;br/&gt;
public static int doConnCommitInt() throws Throwable&lt;/p&gt;
{
	Connection conn = DriverManager.getConnection(&quot;jdbc:default:connection&quot;);
	conn.commit();
	return 1;
}

&lt;p&gt;And the stack strace in derby.log for nestedCommit.sql looks as follows&lt;br/&gt;
2008-01-21 21:52:49.328 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 157), (SESSIONID = 0), (DATABASE = wombat), (DRDAID = null), Failed Statement is: &amp;#8211; call doConnStmt(&apos;call doConnStmt(&apos;&apos;call doConnStmt(&apos;&apos;&apos;&apos;commit&apos;&apos;&apos;&apos;)&apos;&apos;)&apos;);&lt;br/&gt;
values doConnCommitInt()&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED closed&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BaseActivation.setCurrentRow(BaseActivation.java:1276)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NoPutResultSetImpl.setCurrentRow(NoPutResultSetImpl.java:316)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCore(RowResultSet.java:156)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:460)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:425)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:369)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:382)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:338)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:241)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil.java:229)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:435)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:509)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;/p&gt;

&lt;p&gt;The reason for the stack failure is that the Language ResultSet associated with the function call has been closed by the new code in NoPutResultSetImpl.close which was invoked by the commit inside the user function doConnCommitInt. &lt;/p&gt;

&lt;p&gt;During commit processing, we need to somehow distinguish the fact that the Language ResultSet is still being constructed and used and hence should not be closed. I would appreciate if anyone has any ideas on how to achieve this.&lt;/p&gt;</comment>
                            <comment id="12561408" author="mamtas" created="Tue, 22 Jan 2008 18:31:17 +0000"  >&lt;p&gt;Here is a standalone reproducible test case that shows closure of resultset when code changes of the patch DERBY3037_patch_not_ready_for_commit_v2_diff.txt are applied.&lt;/p&gt;</comment>
                            <comment id="12561442" author="djd" created="Tue, 22 Jan 2008 19:55:22 +0000"  >&lt;p&gt;This is a similar issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3304&quot; title=&quot;Explicit commit inside a java procedure makes a dynamic result sets passed out unavailable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3304&quot;&gt;&lt;del&gt;DERBY-3304&lt;/del&gt;&lt;/a&gt; where the commit inside of a routine closes the language result set that is executing the routine.&lt;br/&gt;
It seems that the commit() needs to be smarter about which language result sets to close. It&apos;s not just the current one that&apos;s the issue, actually any that are actively in use. E.g. If a procedure P1 calls procedure P2 which calls procedure P3 and P3 commits, then current all the language result sets will be closed (ignoring held result sets), but the language result sets (CallStatementResultSets) for P1, P2 and P3 should remain open.&lt;/p&gt;

&lt;p&gt;For functions it&apos;s a similar problem, though it&apos;s complicated by that fact that a function is called from a language result set that returns rows, whereas a procedure is not. So with a SQL select executed through a JDBC statement with close result sets on commit:&lt;/p&gt;

&lt;p&gt;    SELECT f(a) FROM T&lt;/p&gt;

&lt;p&gt;if f(a) commits then is the JDBC ResultSet that is processing the query closed, meaning that its next next() call will thrown an exception?&lt;/p&gt;</comment>
                            <comment id="12561831" author="djd" created="Wed, 23 Jan 2008 22:03:44 +0000"  >&lt;p&gt;Two thoughts:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What is the purpose of commit() closing the language result sets? If it&apos;s to close JDBC ResultSets that are marked close at commit then a possibility is to only close language result sets that return rows (returnRows() returns true). That would leave language result sets that do not return rows open, but by definition (I think) those are the ones that are actively executing and the very ones we don&apos;t want to close. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should commit() be allowed in all routines? I can see a commit makes sense in a procedure, to allow a section of logic to be encapsulated in a procedure with transaction semantics.  But a commit() in a function seems dubious, what should happen when a function performs a commit (or rollback) in the middle of a SELECT statement or even worse a DML statement like an INSERT?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12562216" author="mamtas" created="Thu, 24 Jan 2008 21:04:39 +0000"  >&lt;p&gt;I will explore the first suggestion of closing only language result sets that return rows and see how that goes.&lt;/p&gt;

&lt;p&gt;As for the 2nd thought, I am not sure if SQL spec has anything to say here ie should commit be allowed in a function?&lt;/p&gt;</comment>
                            <comment id="12562589" author="mamtas" created="Fri, 25 Jan 2008 17:25:59 +0000"  >&lt;p&gt;I spent some time on Dan&apos;s suggestion&lt;br/&gt;
***********************&lt;br/&gt;
What is the purpose of commit() closing the language result sets? If it&apos;s to close JDBC ResultSets that are marked close at commit then a possibility is to only close language result sets that return rows (returnRows() returns true). That would leave language result sets that do not return rows open, but by definition (I think) those are the ones that are actively executing and the very ones we don&apos;t want to close. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
***********************&lt;/p&gt;

&lt;p&gt;While debugging through the commit code path, I found that the current check for what languages resultset should be closed is the exact opposite of what we are thinking of trying. I have included the code path stack trace below&lt;br/&gt;
Thread &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; (Suspended)	&lt;br/&gt;
	ac601a400fx0117xafb0x415ax00000045b6980(BaseActivation).reset() line: 337	&lt;br/&gt;
	GenericLanguageConnectionContext.resetActivations(boolean) line: 2748	&lt;br/&gt;
	GenericLanguageConnectionContext.doCommit(boolean, boolean, int, boolean) line: 1125	&lt;br/&gt;
	GenericLanguageConnectionContext.userCommit() line: 1003	&lt;br/&gt;
	TransactionResourceImpl.commit() line: 237	&lt;br/&gt;
	EmbedConnection40(EmbedConnection).commit() line: 1288	&lt;br/&gt;
	DERBY_3304_Repro.doConnCommitInt() line: 137	&lt;br/&gt;
	ac601a400fx0117xafb0x415ax00000045b6980.e0() line: not available	&lt;br/&gt;
	DirectCall.invoke(Object) line: 139	&lt;br/&gt;
	RowResultSet.getNextRowCore() line: 148	&lt;br/&gt;
	RowResultSet(BasicNoPutResultSetImpl).getNextRow() line: 460	&lt;br/&gt;
	EmbedResultSet40(EmbedResultSet).movePosition(int, int, String) line: 425	&lt;br/&gt;
	EmbedResultSet40(EmbedResultSet).next() line: 369	&lt;br/&gt;
	DERBY_3304_Repro.doSingleDriver() line: 71	&lt;br/&gt;
	DERBY_3304_Repro.main(String[]) line: 104	&lt;/p&gt;

&lt;p&gt;Here, the Java stored procedure is issuing a commit and the code path for the commit is as shown above. In the reset() method in BaseActivation (that is where the above stack trace is), we decide what resultsets should be closed based on following logic&lt;br/&gt;
		// if resultset holdability after commit is false, close it&lt;br/&gt;
		if (resultSet != null) {&lt;br/&gt;
			if (!resultSetHoldability || !resultSet.returnsRows()) &lt;/p&gt;
{			
				// would really like to check if it is open,
				// this is as close as we can approximate that.
				resultSet.close();
			}
&lt;p&gt; else if (resultSet.returnsRows()) &lt;/p&gt;
{
				resultSet.clearCurrentRow();
			}
&lt;p&gt;		}&lt;/p&gt;

&lt;p&gt;So, if the result set holdability is false, we close the language resultset whether it returns rows or not, which sounds correct. &lt;br/&gt;
If the result set holdability is true, we close the resultset if it does not return rows. But for resultsets that do return rows and their holdablity is true, we simply clear the current row.  &lt;/p&gt;</comment>
                            <comment id="12562831" author="mamtas" created="Sat, 26 Jan 2008 07:22:43 +0000"  >&lt;p&gt;After doing a little more research, it appears that Derby code is already closing the resultsets that return rows if the holdability of the resultset is false. This is done in BaseActivation.reset method. Part of the code in the reset() method looks as follows&lt;br/&gt;
			if (!resultSetHoldability || !resultSet.returnsRows()) {			&lt;br/&gt;
				// would really like to check if it is open,&lt;br/&gt;
				// this is as close as we can approximate that.&lt;br/&gt;
				resultSet.close();&lt;/p&gt;

&lt;p&gt;The first part of the if statement above, which is !resultSetHoldability, will ensure that we will close all the resultsets(including resultsets that return rows) that have their holdability set to false. &lt;/p&gt;

&lt;p&gt;In the test case attached to this jira(DERBY_3304_Repro.java), we set the holdability of the JDBC Connection object to false and then create a Java stored function doConnCommitInt(this function, doConnCommitInt, has a Connection.commit() inside it.) Next, we execute &quot;values doConnCommitInt()&quot;. Since the holdability of the Connection object is false, the language resultset that gets created for values doConnCommitInt() also has it&apos;s holdability set to false. Next, when the doConnCommitInt() function does a Connection.commit, we come to BaseActivation.reset() and the blanket check for !resultSetHoldability causes Derby to close the language resultset associated with values doConnCommitInt() and that behavior is incorrect. So, the problem to solve here is to have additional rule for qualifying the language resultsets for closure.&lt;/p&gt;</comment>
                            <comment id="12563250" author="djd" created="Mon, 28 Jan 2008 19:09:58 +0000"  >&lt;p&gt;&amp;gt; So, the problem to solve here is to have additional rule for qualifying the language resultsets for closure. &lt;/p&gt;

&lt;p&gt;but maybe first clarify what it means to support a commit() &lt;span class=&quot;error&quot;&gt;&amp;#91;or rollback&amp;#93;&lt;/span&gt; in a function call? &lt;/p&gt;</comment>
                            <comment id="12563277" author="mamtas" created="Mon, 28 Jan 2008 20:34:32 +0000"  >&lt;p&gt;I will look into SQL spec to see what it says there.&lt;/p&gt;</comment>
                            <comment id="12563282" author="mamtas" created="Mon, 28 Jan 2008 21:03:53 +0000"  >&lt;p&gt;Found interesting info in Section 13.1&amp;lt;SQL-client module definition&amp;gt; General Rules of SQL 2003 specification&lt;br/&gt;
4) After the last time that an SQL-agent performs a call of an &amp;lt;externally-invoked procedure&amp;gt;:&lt;br/&gt;
a) A &amp;lt;rollback statement&amp;gt; or a &amp;lt;commit statement&amp;gt; is effectively executed. If an unrecoverable error has occurred, or if the SQL-agent terminated unexpectedly, or if any constraint is not satisfied, then a &amp;lt;rollback statement&amp;gt; is performed. Otherwise, the choice of which of these SQL-statements to perform is implementation-dependent. If the implementation choice is &amp;lt;commit statement&amp;gt;, then all holdable cursors are first closed. The determination of whether an SQL-agent has terminated unexpectedly is implementation-dependent.&lt;br/&gt;
b) For every SQL descriptor area that is currently allocated within an SQL-session associated with the SQL-agent, let D be the &amp;lt;descriptor name&amp;gt; of that SQL descriptor area; a &amp;lt;deallocate descriptor statement&amp;gt; that specifies&lt;br/&gt;
DEALLOCATE DESCRIPTOR D&lt;br/&gt;
is effectively executed.&lt;br/&gt;
c) All SQL-sessions associated with the SQL-agent are terminated.&lt;/p&gt;

&lt;p&gt;I am puzzled by the blurb in 4a)&quot;If the implementation choice is &amp;lt;commit statement&amp;gt;, then all holdable cursors are first closed. &quot; That seems to contradict the fact that holdable cursors by definition should be held over the commit. Also, I am probably misinterpreting 4c)&quot;All SQL-sessions associated with the SQL-agent are terminated.&quot; but does it mean that we close the resultset associated with call to &amp;lt;externally-invoked procedure&amp;gt;: that is what my patch is doing.&lt;/p&gt;</comment>
                            <comment id="12563301" author="djd" created="Mon, 28 Jan 2008 21:47:36 +0000"  >&lt;p&gt;I don&apos;t think section 13.1 applies to Derby&apos;s functions or procedures.&lt;/p&gt;

&lt;p&gt;Derby&apos;s functions &amp;amp; procedures are SQL-Invoked routines, their schema definition is defined by 11.50, specifically SQL-invoked function and SQL-invoked procedure, and execution by 10.4.&lt;/p&gt;

&lt;p&gt;Derby&apos;s functions and procedures are external routines (ie. not implemented in SQL), but they are not externally invoked routines.&lt;/p&gt;

&lt;p&gt;The behaviour for SQL-invoked routines that are external and implemented in Java is in part 13 of the SQL spec which for routines is written as a series of modifications to section 11.50 and 10.4 (and probably other sections).&lt;/p&gt;
</comment>
                            <comment id="12564417" author="mamtas" created="Thu, 31 Jan 2008 17:31:28 +0000"  >&lt;p&gt;I did further investigation into SQL specs and following is what seems to apply for what Derby supports which is SQL-invoked routines which are external routines written in Java.&lt;/p&gt;

&lt;p&gt;SQL foundation spec section 10.4&amp;lt;routine invocation&amp;gt; GR 8)f)ii)6)B) says&lt;br/&gt;
&quot;If, before the completion of the execution of P, an attempt is made to execute an SQLtransaction statement that is not &amp;lt;savepoint statement&amp;gt; or &amp;lt;release savepoint statement&amp;gt;, or is a &amp;lt;rollback statement&amp;gt; that does not specify a &amp;lt;savepoint clause&amp;gt;, then an exception condition is raised: external routine exception &#8212; prohibited SQL-statement attempted.&quot;&lt;br/&gt;
The P above is the program identified by the external name of R, where R is in an external routine.&lt;/p&gt;

&lt;p&gt;The Part 13 of the SQL spec which is specific to behavior of SQL-invoked routines which are external and written in Java does not include any modification to the general rule above. (The place to check in Part 13 would be Section 8.3 &amp;lt;routine invocation&amp;gt; Page 34 and couple pages after that.)&lt;/p&gt;

&lt;p&gt;Based on these 2 specifications, Derby is not following SQL specification by allowing commit and rollbacks inside SQL-invoked functions and SQL-invoked procedures.&lt;/p&gt;

&lt;p&gt;Other databases including Oracle, DB2, Sybase support commit and rollback inside SQL-invoked procedures so eventhough it is not a SQL standard, it appears to be a de-facto industry standard. It allows the users to finish one unit of task completely inside a stand along SQL-invoked procedures and since procedures do not directly return resultsets, supporting commit and rollback inside them do not cause a problem. &lt;/p&gt;

&lt;p&gt;But that is not true for SQL-invoked functions. A SQL-invoked function for instance can be called from a SELECT statement and SELECT statement has resultset associated with it. If the SQL-invoked function does a commit inside it, what should happen to the resultset associated with SELECT statement if the resultset set is created with holdability false? Because of this, I do not think Derby should support commit and rollback inside of a SQL-invoked function. I will go ahead and enter a Jira entry for that. I think we will need to reach some kind of resolution for that jira enty before the patch attached to this jira entry (DERBY3037_patch_not_ready_for_commit_v2_diff.txt) can be committed. This patch exposes the vulnerability of Derby explained in this paragraph through lang/nestedCommit.sql.&lt;/p&gt;

&lt;p&gt;Please let me know if anyone has any questions/comments regarding this.&lt;/p&gt;

&lt;p&gt;I will work on opening a jira entry for commit/rollback inside SQL-invoked functions.&lt;/p&gt;</comment>
                            <comment id="12727647" author="rhillegas" created="Mon, 6 Jul 2009 18:58:58 +0100"  >&lt;p&gt;Triaged for 10.5.2: Assigned normal urgency, noted that repro is available.&lt;/p&gt;</comment>
                            <comment id="13634213" author="mikem" created="Wed, 17 Apr 2013 18:19:15 +0100"  >&lt;p&gt;mamta do you still plan to work on this one?&lt;/p&gt;</comment>
                            <comment id="13634317" author="mamtas" created="Wed, 17 Apr 2013 20:10:18 +0100"  >&lt;p&gt;I am not working on this issue currently&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12327853">DERBY-827</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12373765" name="DERBY3037_patch_not_ready_for_commit_v2_diff.txt" size="1010" author="mamtas" created="Tue, 22 Jan 2008 17:28:58 +0000"/>
                            <attachment id="12373766" name="DERBY3037_patch_not_ready_for_commit_v2_stat.txt" size="161" author="mamtas" created="Tue, 22 Jan 2008 17:28:58 +0000"/>
                            <attachment id="12373771" name="DERBY_3304_Repro.java" size="2154" author="mamtas" created="Tue, 22 Jan 2008 18:31:17 +0000"/>
                            <attachment id="12371985" name="Derby_3037_AlterTableConstantActionChanges_v1_diff.txt" size="1172" author="mamtas" created="Wed, 19 Dec 2007 21:25:35 +0000"/>
                            <attachment id="12371986" name="Derby_3037_AlterTableConstantActionChanges_v1_stat.txt" size="163" author="mamtas" created="Wed, 19 Dec 2007 21:25:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Dec 2007 17:03:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23389</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0s9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38397</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>