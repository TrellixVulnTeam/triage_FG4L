<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4433/DERBY-4433.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4433] Cannot insert from EXCEPT/INTERSECT when target table has more columns than the source</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4433</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If an INSERT statement takes the rows to insert from an EXCEPT query or an INTERSECT query, the statement fails with &quot;Column position &apos;X&apos; out of range&quot; if the target table contains more columns than the result returned from EXCEPT or INTERSECT.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t (x int, y int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; select x from t except select x from t;&lt;br/&gt;
ERROR 42X77: Column position &apos;2&apos; is out of range for the query expression.&lt;br/&gt;
ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; select x from t intersect select x from t;&lt;br/&gt;
ERROR 42X77: Column position &apos;2&apos; is out of range for the query expression.&lt;/p&gt;

&lt;p&gt;The corresponding UNION query works:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; select x from t union select x from t;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;</description>
                <environment></environment>
        <key id="12439750">DERBY-4433</key>
            <summary>Cannot insert from EXCEPT/INTERSECT when target table has more columns than the source</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Nov 2009 11:44:57 +0000</created>
                <updated>Wed, 25 Nov 2009 12:55:47 +0000</updated>
                            <resolved>Wed, 25 Nov 2009 12:55:47 +0000</resolved>
                                    <version>10.6.1.0</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12773025" author="knutanders" created="Tue, 3 Nov 2009 11:46:17 +0000"  >&lt;p&gt;This bug is only seen on branches where &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4420&quot; title=&quot;NullPointerException with INSERT INTO ... from EXCEPT/INTERSECT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4420&quot;&gt;&lt;del&gt;DERBY-4420&lt;/del&gt;&lt;/a&gt; has been fixed. On branches without the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4420&quot; title=&quot;NullPointerException with INSERT INTO ... from EXCEPT/INTERSECT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4420&quot;&gt;&lt;del&gt;DERBY-4420&lt;/del&gt;&lt;/a&gt;, a NullPointerException is seen instead.&lt;/p&gt;</comment>
                            <comment id="12773029" author="knutanders" created="Tue, 3 Nov 2009 12:21:21 +0000"  >&lt;p&gt;IntersectOrExceptNode.preprocess() adds an ORDER BY clause and pushes it down to the child nodes, since its easier to calculate the difference or the intersection between two tables if they have the same ordering.&lt;/p&gt;

&lt;p&gt;The ORDER BY clause is generated from the ResultColumnList in the IntersectOrExceptNode. However, InsertNode.enhanceAndCheckForAutoincrement() adds placeholders for unspecified columns in the target table, and it also reorders the RCL to match that of the target table, so the generated ORDER BY clause does not match the column lists in the child nodes.&lt;/p&gt;

&lt;p&gt;As has been mentioned in other issues too (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4&quot; title=&quot;&amp;quot;order by&amp;quot; is not supported for &amp;quot;insert ... select&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4&quot;&gt;&lt;del&gt;DERBY-4&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4413&quot; title=&quot;INSERT from SELECT DISTINCT gives assertFailure (sane), or  NPE (insane) in presence of generated columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4413&quot;&gt;&lt;del&gt;DERBY-4413&lt;/del&gt;&lt;/a&gt;) it would be better if a ProjectRestrictNode was inserted between the InsertNode and the IntersectOrExceptNode, and the RCL of the PRN was modified instead of the IntersectOrExceptNode directly.&lt;/p&gt;</comment>
                            <comment id="12773183" author="dagw" created="Tue, 3 Nov 2009 20:39:47 +0000"  >&lt;p&gt;Using the exisiting scheme, I think I handled this issue as part of the revamped patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4&quot; title=&quot;&amp;quot;order by&amp;quot; is not supported for &amp;quot;insert ... select&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4&quot;&gt;&lt;del&gt;DERBY-4&lt;/del&gt;&lt;/a&gt;, cf. the new method OrderByColumn.findNewPos in that patch.&lt;/p&gt;</comment>
                            <comment id="12773211" author="knutanders" created="Tue, 3 Nov 2009 21:30:26 +0000"  >&lt;p&gt;Before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt;, a PRN was inserted on top of SetOperatorNodes. Perhaps reintroducing parts of the old code would help. The case &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt; solved by removing the PRN, was a UnionNode that represented a multi-row VALUES clause. I&apos;ll see if inserting a PRN for all SetOperatorNodes, except UnionNodes whose tableConstructor() method returns true, solves this issue and at the same time doesn&apos;t break the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt; cases. If that works, the approach could be extended to other node types as well, which may be helpful for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4&quot; title=&quot;&amp;quot;order by&amp;quot; is not supported for &amp;quot;insert ... select&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4&quot;&gt;&lt;del&gt;DERBY-4&lt;/del&gt;&lt;/a&gt; (both removing the need for OrderByColumn.findNewPos() and solving the problem with early evaluation of identity columns).&lt;/p&gt;</comment>
                            <comment id="12773343" author="knutanders" created="Wed, 4 Nov 2009 01:55:30 +0000"  >&lt;p&gt;The attached patch reintroduces the adding of a PRN between an InsertNode and a SetOperatorNode. In order to prevent &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt; from being reintroduced, the PRN is not added if the SetOperatorNode is a UnionNode that represents a table constructor. The patch appears to fix the problem reported in this issue, and it doesn&apos;t break the test cases added for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The patch is posted just for reference, it is not ready for commit. No tests have been run, except lang/autoincrement.sql.&lt;/p&gt;</comment>
                            <comment id="12773565" author="dagw" created="Wed, 4 Nov 2009 17:06:51 +0000"  >&lt;p&gt;Looked briefly at the patch, I think this is a move in the right direction.&lt;/p&gt;</comment>
                            <comment id="12773693" author="knutanders" created="Wed, 4 Nov 2009 23:09:51 +0000"  >&lt;p&gt;Thanks Dag! Unfortunately, there were two failures in suites.All.&lt;/p&gt;

&lt;p&gt;1) GeneratedColumnsTest:&lt;br/&gt;
&amp;gt; create table t_insert_3( a int, b int generated always as ( -a ) );&lt;br/&gt;
&amp;gt; insert into t_insert_3 values ( 2, default ), ( 3, default ), ( 4, default )&lt;br/&gt;
---&amp;gt; SQLSyntaxErrorException: You may not override the value of generated column &apos;B&apos;.&lt;/p&gt;

&lt;p&gt;2) LangScripts, union.sql:&lt;br/&gt;
&amp;gt; create table insert_test (i int, s smallint, d double precision, r real,&lt;br/&gt;
&amp;gt;         c10 char(10), c30 char(30), vc10 varchar(10), vc30 varchar(30));&lt;br/&gt;
&amp;gt; insert into insert_test (s, i) values (2, 1) union values (4, 3);&lt;br/&gt;
---&amp;gt; ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;</comment>
                            <comment id="12779709" author="knutanders" created="Wed, 18 Nov 2009 22:49:43 +0000"  >&lt;p&gt;I think the root cause of failure (1) is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4448&quot; title=&quot;ArrayIndexOutOfBoundsException when trying to override generated column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4448&quot;&gt;&lt;del&gt;DERBY-4448&lt;/del&gt;&lt;/a&gt;, which can also be seen on a clean trunk if the query is modified. With the prn.diff patch, RCL.forbidOverrides() is called on UnionNodes and RowResultSetNodes, whereas on a clean trunk it is called on all ResultSetNodes except UnionNodes and RowResultSetNodes, which is probably why the patch exposed the problem in these other queries.&lt;/p&gt;</comment>
                            <comment id="12779791" author="dagw" created="Thu, 19 Nov 2009 01:49:18 +0000"  >&lt;p&gt;Maybe we should work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt; instead, and most of these bugs seen with INSERT into column subsets would go away.. The source result set enhancement seems broken and I&apos;d love to get rid of it..&lt;/p&gt;</comment>
                            <comment id="12779903" author="knutanders" created="Thu, 19 Nov 2009 09:53:39 +0000"  >&lt;p&gt;I agree that this issue could be seen as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;, so it might make sense to shift the effort to that bug. I&apos;m cautiously optimistic, though, that the suggested approach in this issue could serve as a first step towards &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to get going on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;, then I&apos;d say just go ahead. I haven&apos;t looked much at this issue after the initial evaluation, and could put it on hold and revisit it after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt; (when there hopefully will be nothing more to do except writing a test case). If you can use some of the code I&apos;ve posted here, feel free to recycle it over at that issue.&lt;/p&gt;</comment>
                            <comment id="12779909" author="knutanders" created="Thu, 19 Nov 2009 10:02:46 +0000"  >&lt;p&gt;I&apos;m not so sure anymore that failure (1) is an instance of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4448&quot; title=&quot;ArrayIndexOutOfBoundsException when trying to override generated column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4448&quot;&gt;&lt;del&gt;DERBY-4448&lt;/del&gt;&lt;/a&gt;. The fix turned out to be simple, though. Just don&apos;t call forbidOverrides() on the top-level UnionNode if it&apos;s a table constructor. forbidOverrides() is called on each child RowResultSetNode in the table constructor, so the check is not needed on the UnionNode. The current code on trunk also skips the call to forbidOverrides() on UnionNodes that are table constructors (or actually, it skips it for all UnionNodes).&lt;/p&gt;

&lt;p&gt;The attached prn2.diff includes this change and fixes failure (1). Failure (2) is still seen, though.&lt;/p&gt;</comment>
                            <comment id="12780339" author="dagw" created="Fri, 20 Nov 2009 00:03:57 +0000"  >&lt;p&gt;I am not sure when I&apos;ll be able to have a go at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;, so I am fine with you finishing off this issue, or if you prefer, go for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;, your call. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; If we can reuse some, all the better.&lt;/p&gt;</comment>
                            <comment id="12780488" author="knutanders" created="Fri, 20 Nov 2009 09:08:35 +0000"  >&lt;p&gt;OK, in that case I&apos;ll see if I can sort out the NPE and get the patch into a committable state first. I have a hope that once it&apos;s in, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt; could be solved by moving the code that generates the ProjectRestrictNode from SetOperatorNode to ResultSetNode.&lt;/p&gt;</comment>
                            <comment id="12780493" author="knutanders" created="Fri, 20 Nov 2009 09:48:57 +0000"  >&lt;p&gt;The following is a trimmed down repro for the NPE (which happens during code generation):&lt;/p&gt;

&lt;p&gt;CREATE TABLE T (I INT, S SMALLINT);&lt;br/&gt;
INSERT INTO T (S, I) VALUES (1, 2) UNION VALUES (2, 3);&lt;/p&gt;

&lt;p&gt;Without the patch, the InsertNode will put a NormalizeResultSetNode on top of the UnionNode. The NormalizeRSN is there because the integers that are inserted into the S column need to be converted to smallints. The RCL of the NormalizeRSN contains ResultColumns that via VirtualColumnNodes point to the ResultColumns in the UnionNode.&lt;/p&gt;

&lt;p&gt;With the patch, a ProjectRestrictNode is inserted between the NormalizeResultSetNode and the UnionNode, to allow for reordering of the columns without touching the UnionNode&apos;s RCL. The ResultColumns of the NormalizeRSN now point to the RCs of the PRN, via VirtualCNs, as expected. However, the PRN&apos;s RCs don&apos;t point to the UnionNode&apos;s RC, as I think they should have done. And it looks like the UnionNode has the exact same ResultColumns as the NormalizeRSN, which also sounds wrong.&lt;/p&gt;</comment>
                            <comment id="12780507" author="knutanders" created="Fri, 20 Nov 2009 10:46:25 +0000"  >&lt;p&gt;The root cause of NPE was that the code currently on trunk that reorders and enhances the RCL is only meant to be used for replacing the RCL in a node. It does not account for the extra level in the tree caused by inserting a ProjectRestrictNode.&lt;/p&gt;

&lt;p&gt;This was easily solved by reviving more of the pre-&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1644&quot; title=&quot;NPE when inserting values to a table that has a column declared as generated by default as identity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1644&quot;&gt;&lt;del&gt;DERBY-1644&lt;/del&gt;&lt;/a&gt; code in SetOperatorNode, since that code used to insert a PRN and correctly adjusted the nesting levels of the RCs. The old code used the method ResultColumn.getExpressionType(), which does not exist anymore, but I think it should work fine to use ResultColumn.getType() instead.&lt;/p&gt;

&lt;p&gt;This solved the NPE in union.sql. I&apos;ll start the regression tests to see if it has introduced any new problems.&lt;/p&gt;

&lt;p&gt;(Updated patch attached as prn3.diff.)&lt;/p&gt;</comment>
                            <comment id="12782129" author="dagw" created="Tue, 24 Nov 2009 19:54:57 +0000"  >&lt;p&gt;Tried prn3, but I got another error in the union script:&lt;/p&gt;

&lt;p&gt;insert into insert_test (vc30) select vc10 from t1 union select c30 from t2;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;&lt;/p&gt;</comment>
                            <comment id="12782135" author="knutanders" created="Tue, 24 Nov 2009 20:12:22 +0000"  >&lt;p&gt;That&apos;s what I see too now. Don&apos;t know what has changed, or if I misread the test results.&lt;/p&gt;

&lt;p&gt;Anyways, the 1a patch attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt; (which is based on the prn3) does not cause any NPE in union.sql.&lt;/p&gt;</comment>
                            <comment id="12782200" author="dagw" created="Tue, 24 Nov 2009 22:08:40 +0000"  >&lt;p&gt;Adding the following line to SetOperatorNode#enhanceRCLForInsert just before the call to generateProjectRestrictForInsert made the above case work:&lt;/p&gt;

&lt;p&gt;    resultColumns.resetVirtualColumnIds();&lt;/p&gt;

&lt;p&gt;Cf. the following lines in SetOperatorNode#enhanceRCLForInsert:&lt;/p&gt;

&lt;p&gt;   :&lt;br/&gt;
   ResultColumnList newResultCols = getRCLForInsert(target, colMap);&lt;br/&gt;
   [ resultColumns.resetVirtualColumnIds(); ]&lt;br/&gt;
   return generateProjectRestrictForInsert(target, colMap);&lt;br/&gt;
   :&lt;br/&gt;
A priori in the example, there is one column in the source result set, so that column number has virtualColumnNumber 1.&lt;br/&gt;
However, getRCLForInsert reuses the column object for the new ResultColumnList, so the virtualColumnNumber gets set to 8 when enhancing. But in the original source result set this is wrong, so this line in generateProjectRestrictForInsert returns a null:&lt;/p&gt;

&lt;p&gt;    oldResultColumn = resultColumns.getResultColumn(colMap&lt;span class=&quot;error&quot;&gt;&amp;#91;index&amp;#93;&lt;/span&gt;+1);&lt;/p&gt;

&lt;p&gt;since the virtualColumnNumber does not match the columns position, cf the logic in ResultColumnList#getResultColumn.&lt;br/&gt;
Resetting the viirtual column ids bring it back in shape, but it is not the right solution, since the numbers would then be wacky for the PRN&apos;s RCL. I think a copy of the RC should be taken instead, cf. your observation above that the tree looks weird. &lt;/p&gt;</comment>
                            <comment id="12782217" author="dagw" created="Tue, 24 Nov 2009 22:53:43 +0000"  >&lt;p&gt;Right, this seems to be handled correctly in derby-4442-1a; that patch also works together with derby-4451d, good, running regressions for that combination now.&lt;/p&gt;</comment>
                            <comment id="12782399" author="knutanders" created="Wed, 25 Nov 2009 12:55:46 +0000"  >&lt;p&gt;I&apos;m closing this issue as a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4442&quot; title=&quot;Evaluation of default value and identity in an INSERT result set evaluated too early.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4442&quot;&gt;&lt;del&gt;DERBY-4442&lt;/del&gt;&lt;/a&gt;, since the fix for that issue will fix this issue too.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12440634">DERBY-4442</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12438891">DERBY-4420</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12440634">DERBY-4442</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12423993" name="prn.diff" size="7891" author="knutanders" created="Wed, 4 Nov 2009 01:55:30 +0000"/>
                            <attachment id="12425454" name="prn2.diff" size="8296" author="knutanders" created="Thu, 19 Nov 2009 10:02:46 +0000"/>
                            <attachment id="12425598" name="prn3.diff" size="11065" author="knutanders" created="Fri, 20 Nov 2009 10:46:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Nov 2009 20:39:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24251</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38278</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>