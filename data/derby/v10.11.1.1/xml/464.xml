<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:51:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-464/DERBY-464.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-464] Enhance Derby by adding grant/revoke support. Grant/Revoke provide finner level of privileges than currently provided by Derby that is especially useful in network configurations.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-464</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby currently provides a very simple permissions scheme, which is quite suitable for an embedded database system. End users of embedded Derby do not see Derby directly; they talk to a application that embeds Derby. So Derby left most of the access control work to the application. Under this scheme, Derby limits access on a per database or per system basis. A user can be granted full, read-only, or no access. &lt;/p&gt;

&lt;p&gt;This is less suitable in a general purpose SQL server. When end users or diverse applications can issue SQL commands directly against the database, Derby must provide more precise mechanisms to limit who can do what with the database.&lt;/p&gt;

&lt;p&gt;I propose to enhance Derby by implementing a subset of grant/revoke capabilities as specified by the SQL standard. I envision this work to involve the following tasks, at least:&lt;/p&gt;

&lt;p&gt;1) Develop a specification of what capabilities I would like to add to Derby.&lt;br/&gt;
2) Provide a high level implementation scheme.&lt;br/&gt;
3) Pursue a staged development plan, with support for DDL added to Derby first.&lt;br/&gt;
4) Add support for runtime checking of these privileges.&lt;br/&gt;
5) Address migration and upgrade issues from previous releases and from old scheme to newer database.&lt;/p&gt;

&lt;p&gt;Since I think this is a large task, I would like to invite any interested people to work with me on this large and important enhancement to Derby.&lt;/p&gt;</description>
                <environment>generic</environment>
        <key id="12312336">DERBY-464</key>
            <summary>Enhance Derby by adding grant/revoke support. Grant/Revoke provide finner level of privileges than currently provided by Derby that is especially useful in network configurations.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bandaram">Satheesh Bandaram</reporter>
                        <labels>
                    </labels>
                <created>Sat, 16 Jul 2005 10:43:29 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:41 +0100</updated>
                            <resolved>Mon, 18 Sep 2006 16:44:55 +0100</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12316108" author="forsini" created="Wed, 20 Jul 2005 01:53:56 +0100"  >&lt;p&gt;Grant/Revoke capability is a rather important and high-priority feature IMHO - I&apos;m interested in contributing to such an effort.&lt;/p&gt;</comment>
                            <comment id="12316143" author="bandaram" created="Wed, 20 Jul 2005 04:24:21 +0100"  >&lt;p&gt;Thanks for your interest, Francois... It will be good to collaborate on this important and rather large effort with you. Hope there is more interest in the community to join us. &lt;/p&gt;</comment>
                            <comment id="12356020" author="rhillegas" created="Thu, 27 Oct 2005 07:55:13 +0100"  >&lt;p&gt;At the risk of yanking on the ball of yarn: I think it would be very useful if this effort included CREATE/DROP ROLE as well. There&apos;s a real opportunity for parallel development here: one engineer can get started on GRANT/REVOKE and the other can implement roles. I question the utility of GRANT/REVOKE without roles. Administering permissions without roles lies somewhere on the continuum from brittle to nightmarish.&lt;/p&gt;</comment>
                            <comment id="12356023" author="forsini" created="Thu, 27 Oct 2005 08:32:27 +0100"  >&lt;p&gt;Agreed, CREATE/DROP ROLE as well as CREATE/DROP USER are there on my list...ROLE is frequently used out there along with Grant/Revoke - There is usually Built-in Roles and user-defined ones.&lt;/p&gt;

&lt;p&gt;I would also like to have a CREATE/DROP USER to enhance Derby useability for managing users rather than what we have now which is property-based and was done in the past with the notion of running Cloudscape/Derby embedded.&lt;/p&gt;

&lt;p&gt;Note that you can still Grant/Revoke at the user level.&lt;/p&gt;

&lt;p&gt;Grant/Revoke is a major feature and effort - it needs to be stagged in several phases as Saheesh mentioned.&lt;/p&gt;

&lt;p&gt;I could see the following major phases/steps: (which can be done in-parallel to some degree)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Create/Drop User / Role DDL (along with metadata / system catalogs {sysusers, sysroles)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Grant / Revoke privileges DDL (system and object ones) (sysprivileges, syspermissions)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Grant / Revoke runtime execution (processing)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Built-in Roles, SA user, Supoport for additional system privileges and built-in roles.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;at a minimum.&lt;/p&gt;

&lt;p&gt;We need to list the admin and object privileges we want to support in Derby and implement them in several phases.&lt;/p&gt;</comment>
                            <comment id="12356027" author="bandaram" created="Thu, 27 Oct 2005 09:30:15 +0100"  >&lt;p&gt;Good point, Francois, about adding comments in JIRA for this one. I will add comments here.&lt;/p&gt;

&lt;p&gt;I agree ROLES would be another great addition to Derby. Like I mentioned, there are many other potential enhancements possible in access control and security areas. I usually propose ideas that I can implement and want to implement in reasonable timeframe. Incremental enhancements is the prefered way in open source. Like Rick mentioned, ROLES could be developed in parallel.&lt;/p&gt;

&lt;p&gt;I am not sure about CREATE USER/DROP USER capabilities though.  Databases are not the ideal places to manage users. Derby also provides several ways to authenticate and/or manage users, including LDAP. The property based user management is only one of these options. See: &lt;a href=&quot;http://db.apache.org/derby/docs/10.1/devguide/cdevcsecure37817.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.1/devguide/cdevcsecure37817.html&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12356032" author="forsini" created="Thu, 27 Oct 2005 10:06:22 +0100"  >&lt;p&gt;The way I implememted users in Cloudscape originally was done in a &quot;Cloudscape running Embedded&quot; mindset rather than anything else - in a similar way we what ww have done for permissions via properties - defining users is one thing, authenticating them via various schemes in another - For instance today, users defined at the System level, not database one, do not have their password encrypted for the built-in authentication scheme. I agree that users can be defined outside of Derby but we can&apos;t assume all organizations have an LDAP server out there - in fact, a lot if not most of them still don&apos;t have one.&lt;/p&gt;

&lt;p&gt;What I have in mind for Derby defined users is the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Users should be defined at the System level and added to databases as required (Grant access to a database)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The notion of users defined at the system level is NOT just for Derby&apos;s built-in authentication scheme - it is there so that we can better link and integrate users from an outside realm than Derby&apos;s one - Sysusers would be a great start and I would hope to use VTI internally to materialize (known) users for a particular instance of Derby whether the built-in authentication scheme is used or not..and I agree that Derby should not care as far as how the user has been authenticated.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Most database systems out there have DDL to define users managed by the RDBMS, we don&apos;t have this at the moment - some are using a syntax such as:&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Grant Connet to username Identified by xyz;&lt;br/&gt;
or&lt;/li&gt;
	&lt;li&gt;Create User username Identified by xyz;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;as well as DDL for altering users.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduce a rea and internal notion of a User object (descriptor) in Derby - there is none today&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Now, this could be done as part of this charter or not (separate JIRA) but there would be dependencies at least how a user is instantiated internally (see my last point) and the grant/revoke implementation at the user descriptor level.&lt;/p&gt;</comment>
                            <comment id="12360186" author="bandaram" created="Mon, 12 Dec 2005 13:27:26 +0000"  >&lt;p&gt;I have submitted Grant and Revoke, Part I to trunk. Let me know if anyone would like to join developing remaining parts. It is possible to coordinate development using a Wiki. &lt;/p&gt;

&lt;p&gt;This Phase I implements:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Grant/Revoke DDL parsing and execution&lt;/li&gt;
	&lt;li&gt;Addition of several new system tables to hold the system metadata. I will update my spec to include detailed schema for new system tables, so that they can be included in 10.2 documentation.&lt;/li&gt;
	&lt;li&gt;Enhancing the syntax for routine creation to include external-security clause&lt;/li&gt;
	&lt;li&gt;Very simple tests to cover only the DDL. I would be expanding on the testing in the later submissions, including a JUnit test suite.&lt;/li&gt;
	&lt;li&gt;Grant/Revoke DDL is only supported if derby.database.defaultConnectionMode property is set to &apos;sqlStandard&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Pending items from Phase I:&lt;/p&gt;

&lt;p&gt;   1. dblook needs to be enhanced to emit DDL for grant statements.&lt;br/&gt;
   2. Enhanced JUnit based test suite with many more tests. &lt;br/&gt;
   3. Some implementation improvements possible with the current patch. It should be possible to combine several new nodes being added, to reduce number of nodes and hence foot print. Also, the patch adds a Java object to new system tables. While Derby already has some java objects in its system tables, I think, we should discourage adding new java objects to catalogs. Since Java objects can&apos;t be used in SQL easily, this makes metadata harder to use. I will explore rewriting SYSCOLPERMS and SYSREQUIREDPERM to not use FormattableBitSet type. This can be done by having multiple entries in these catalogs for each column referenced.&lt;br/&gt;
   4. Updating specification to include schema for new system tables.&lt;br/&gt;
   5. Need to change how property defaultConnectionMode is set and/or used.&lt;br/&gt;
   6. Enhance system tables to store external security clause specification.&lt;/p&gt;

&lt;p&gt;I am also working on Grant and Revoke, Phase II. This will implement permission checking for DML statement. Hopefully I will have something to submit by end of January to complete Phase I and Phase II.&lt;/p&gt;

&lt;p&gt;Also need to support upgrade and migration of legacy databases and update JDBC metadata.&lt;/p&gt;

&lt;p&gt;Let me know if I missed anything else.&lt;/p&gt;</comment>
                            <comment id="12361221" author="djd" created="Sun, 25 Dec 2005 03:14:47 +0000"  >&lt;p&gt;Some minor comments on the design spec:&lt;/p&gt;

&lt;p&gt;spec&amp;gt; DDL statements directly invoke executing mechanism simplify the implementation at the cost of a small increase in execution time.&lt;/p&gt;

&lt;p&gt;I don&apos;t think that&apos;s true. DDL&apos;&apos;s are not slower due to using a constant action. That&apos;s not the reason for the way they are handled. I think the basic idea is that DDL&apos;s are limited in structure compared to DML and can easily be represented by an object that represents an action and a set of constants. DDL did  generate a java class to execute the constant action but I cleaned that up to use a fixed implementation (sub-class) of BaseActivation , as otherwise each DDL would be generating an identical class. This was wasteful when most DDL is discarded after a single execution.&lt;/p&gt;

&lt;p&gt;In various tables you have the user name represented (I think) as VARCHAR(30) (GRANTEE, GRANTOR columns). Why 30? In the existing SYSSCHEMAs the user identifer is VARCHAR(128), I think 128 is a better limit for user names.&lt;/p&gt;

&lt;p&gt;spec&amp;gt; Permission checking is done at execution time.&lt;/p&gt;

&lt;p&gt;Could you expand on that? Are you going to match the current scheme, permissions checked when an internal ResultSet is created? Something else? &lt;/p&gt;

&lt;p&gt;spec&amp;gt; The permission checks could be done at compilation time.&lt;/p&gt;

&lt;p&gt;For the reasons given I think this is a bad idea, the statement cache. I do think we can set it up so that permissions are checked when the statement is prepared by the application, even when it picks up an existing compiled plan. This would be better than per execution of the statement. That&apos;s probably a separate discussion once you reveal what you are currently planning.&lt;/p&gt;

&lt;p&gt;spec &amp;gt; The permission checks could be done at compilation time. PreparedStatements would have to be re-compiled when permissions are revoked, as they are recompiled when tables are altered.&lt;/p&gt;

&lt;p&gt;Don&apos;t you have to recompile statement plans when permissions are revoked or granted? Even if you are checking permissions at execution time?&lt;/p&gt;

&lt;p&gt;Can you document the locking plans (e.g. what locks does grant get) and the interaction with the dependency system. I think these are key to getting the design right and secure. &lt;/p&gt;
</comment>
                            <comment id="12361222" author="djd" created="Sun, 25 Dec 2005 03:23:46 +0000"  >&lt;p&gt;spec&amp;gt; The SELECTPRIV column has value &quot;Y&quot; if the SELECT permission was granted, or &quot;N&quot; if the select permission was not granted. Similarly with the DELETEPRIV, INSERTPRIV, UPDATEPRIV, REFERENCESPRIV, and TRIGGERPRIV columns.&lt;/p&gt;

&lt;p&gt;Sound like BOOLEAN columns to me.&lt;/p&gt;</comment>
                            <comment id="12366601" author="bandaram" created="Thu, 16 Feb 2006 17:30:15 +0000"  >&lt;p&gt;I have updated Grant &amp;amp; Revoke specification. I tried to address some of Dan&apos;s questions from earlier and also changed the spec to reflect Dan&apos;s suggestion about adding new property derby.database.sqlAuthorization. Changes are high lighted in RED. Let me know if anyone have any questions or comments. I will submit Grant and Revoke, Phase II code soon. &lt;/p&gt;</comment>
                            <comment id="12366670" author="djd" created="Fri, 17 Feb 2006 05:19:21 +0000"  >&lt;p&gt;Thanks for the updated spec - some comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;This property could be set either as a system property in derby.properties file or as application property.&quot; This needs re-wording, system properties are set as JVM system proiperties, application properties is what is used to describe properties in derby.properties. You could just say &apos;this is a standard Derby property&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The design doesn&apos;t contain any mention of modifications to the statement  dependencies. It may be (after thinking about it for 10 seconds) that any grant/revoke statement does not need to invalidate any DML compiled statements. It would be good to state this and the reasons why.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I couldn&apos;t see where you are storing the owner of the database&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Can you expand on the design around the StatementPermission class and its sub-classes. Which methods are invovled in making permission checks., The Javadoc for the check method in StatementPermission  doesn&apos;t say anything. The methods have some funky equals methods with no javadoc, without understanding more it looks like equals is being overloaded for no good reason.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12366700" author="bandaram" created="Fri, 17 Feb 2006 07:45:32 +0000"  >&lt;p&gt;Thanks for your comments, Dan. I will update the spec, but some answers below:&lt;/p&gt;

&lt;p&gt;&quot;This property could be set either as a system property in derby.properties file or as application property.&quot; This needs re-wording, system properties are set as JVM system proiperties, application properties is what is used to describe properties in derby.properties. You could just say &apos;this is a standard Derby property&quot; &lt;/p&gt;

&lt;p&gt;OK... Tuning guide refers to both as System-wide properties... System-wide properties set programmatically and System-wide properties set in derby.properties. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The design doesn&apos;t contain any mention of modifications to the statement dependencies. It may be (after thinking about it for 10 seconds) that any grant/revoke statement does not need to invalidate any DML compiled statements. It would be good to state this and the reasons why.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Right... Grant and Revoke statements don&apos;t need to invalidate any existing compiled statements. This is because the compiled plan doesn&apos;t assume if any permissions are granted or not... Compilation only notes required object accesses to execute a statement. Only at runtime, these checks are performed. I will add more info to design section.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I couldn&apos;t see where you are storing the owner of the database&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Any ideas where it could be? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I haven&apos;t coded that part. I was thinking of using an internal property to store the database owner. Are there any internal use only properties in Derby currently? I thought boot password is kind of stored like this?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Can you expand on the design around the StatementPermission class and its sub-classes. Which methods are invovled in making permission checks., The Javadoc for the check method in StatementPermission doesn&apos;t say anything. The methods have some funky equals methods with no javadoc, without understanding more it looks like equals is being overloaded for no good reason.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;StatementPermission has the following hieraracy.. not sure if this will show correctly in text&lt;/p&gt;

&lt;p&gt;StatementPermission&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;       &amp;#45;---- StatementTablePermission&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;                                &amp;#45;----- StatementColumnPermission&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;       &amp;#45;----- StatementRoutinePermission&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;       &amp;#45;----- StatementSchemaPermission&lt;/p&gt;

&lt;p&gt;All implement check() interface that is used to invoke permission checking for that access descriptor. Access descriptors already know what they need to check for and are passed current user authorizationId.&lt;/p&gt;

&lt;p&gt;The equals() method is used to check if an access descriptor is already created for the specific access. For example, a query may have multiple references to same table. No need to create multiple access descriptors for the same table for the same kind of access. This becomes more important as each and every column referenced may try to add an access descriptor for the table in question.&lt;/p&gt;

&lt;p&gt;I will add these details to the design part of the spec.&lt;/p&gt;</comment>
                            <comment id="12367035" author="bandaram" created="Mon, 20 Feb 2006 23:22:06 +0000"  >&lt;p&gt;I am attaching Grant and Revoke, Part II patch to implement authorization scheme. This patch enforces permission checks that part I patch records in system catalogs. I am still adding more test cases and need to update functional spec with some review comments. Let me know if anyone has any comments or have trouble applying the patch. I moved some grant revoke tests, so may confuse patch program.&lt;/p&gt;

&lt;p&gt;Next I will work on implementing authorization for Trigger, View and Constraints, followed by some upgrade, migration and metadata changes.&lt;/p&gt;</comment>
                            <comment id="12367075" author="djd" created="Tue, 21 Feb 2006 05:55:06 +0000"  >&lt;p&gt;To quote the func spec:&lt;br/&gt;
&amp;lt;quote&amp;gt;&lt;br/&gt;
Views and triggers may only be created or dropped by the owner of the view or trigger&apos;s schema.&lt;br/&gt;
&amp;lt;/quote&amp;gt;&lt;/p&gt;

&lt;p&gt;Allowing anyone apart from the owner to create a trigger on a table seems too permissive to me:&lt;/p&gt;

&lt;p&gt;Postgres requires an TRIGGER privilege on the table to create a trigger&lt;/p&gt;

&lt;p&gt;DB2 requires ALTERIN or CONTROL on the table depending on the trigger type&lt;/p&gt;

&lt;p&gt;Oracle requires CREATE_TRIGGER privilege&lt;/p&gt;

&lt;p&gt;I assume that the owner of a table can always create triggers on the table.&lt;/p&gt;


&lt;p&gt;Views seem ok to allow anyone to create one, as long as they have access to the underlying objects as the spec says.&lt;/p&gt;</comment>
                            <comment id="12367076" author="djd" created="Tue, 21 Feb 2006 05:57:07 +0000"  >&lt;p&gt;Another quote from the spec&lt;br/&gt;
&amp;lt;quote&amp;gt;&lt;br/&gt;
A table may only be created or dropped by the owner of the table&apos;s schema. Table creation permission is not grantable. (This is the SQL2003 spec)&lt;br/&gt;
&amp;lt;/quote&amp;gt;&lt;br/&gt;
Is there a reference, page number section number, for the comment about the SQL2003 spec?&lt;/p&gt;</comment>
                            <comment id="12367077" author="djd" created="Tue, 21 Feb 2006 06:05:11 +0000"  >&lt;p&gt;Sorry, I see there is a TRIGGER privilege in the spec, so my concern on that goes away. It&apos;s kind of hard to read the spec to see what permissions are required to execute each operation when they are scattered around the document.&lt;/p&gt;</comment>
                            <comment id="12367255" author="bandaram" created="Wed, 22 Feb 2006 05:52:18 +0000"  >&lt;p&gt;Dan asked:&lt;br/&gt;
   Another quote from the spec&lt;br/&gt;
   &amp;lt;quote&amp;gt;&lt;br/&gt;
   A table may only be created or dropped by the owner of the table&apos;s schema. Table creation&lt;br/&gt;
    permission is not    grantable. (This is the SQL2003 spec)&lt;br/&gt;
   &amp;lt;/quote&amp;gt;&lt;br/&gt;
   Is there a reference, page number section number, for the comment about the SQL2003 spec?&lt;/p&gt;

&lt;p&gt;This is the best reference I can find in SQL 2003 spec. It is indirectly implied.... says persistent objects described by the (schema) descriptors are said to be owned by or to have been created by the authorizationID of the schema. Also, I couldn&apos;t find a privilege that can be granted to create tables.&lt;/p&gt;

&lt;p&gt;4.20 SQL-schemas&lt;br/&gt;
An SQL-schema is a persistent descriptor that includes:&lt;br/&gt;
? The name of the SQL-schema.&lt;br/&gt;
? The &amp;lt;authorization identifier&amp;gt; of the owner of the SQL-schema.&lt;br/&gt;
...........................................&lt;br/&gt;
In this part of ISO/IEC 9075, the term &quot;schema&quot; is used only in the sense of SQL-schema. The persistent objects&lt;br/&gt;
described by the descriptors are said to be owned by or to have been created by the &amp;lt;authorization identifier&amp;gt;&lt;br/&gt;
of the schema. Each component descriptor is one of:&lt;br/&gt;
? A domain descriptor.&lt;br/&gt;
? A base table descriptor.&lt;br/&gt;
? A view descriptor.&lt;br/&gt;
? A constraint descriptor.&lt;/p&gt;</comment>
                            <comment id="12367381" author="bandaram" created="Thu, 23 Feb 2006 03:48:37 +0000"  >&lt;p&gt;I would like to submit this patch over the weekend. Appreciate any comments before.&lt;/p&gt;</comment>
                            <comment id="12367661" author="bandaram" created="Sat, 25 Feb 2006 00:48:54 +0000"  >&lt;p&gt;Updated Part II Grant and Revoke patch... Synced to latest with more tests and some minor code changes. I have rerun the tests.&lt;/p&gt;

&lt;p&gt;I have added changeDescription to the patch.&lt;/p&gt;</comment>
                            <comment id="12370032" author="bandaram" created="Sun, 12 Mar 2006 05:01:50 +0000"  >&lt;p&gt;I have updated Grant Revoke functional specification with newer version. Changes from previous version are highlighted in RED. Main changes from previous version are:&lt;/p&gt;

&lt;p&gt;1) Added a new table showing detailed information on system routines... Who can execute and what other privileges are required. I am in two minds about whether everyone (who has owns their tables) should be able to invoke import/export routines or not, BY DEFAULT. Since import/export routines access input/output files on the server-side, I am not sure if everyone should be able to execute these, BY DEFAULT. So I am currently proposing DBA needs to grant EXECUTE privilege to be able to invoke them.&lt;/p&gt;

&lt;p&gt;2) Clarified what was discussed on the list about who owns system schemas. I am going to be changing authorizationID of system schemas from psuedo user &apos;DBA&apos; to authorizationID of database creator or to the authorizationID of the user who invokes full upgrade.&lt;/p&gt;

&lt;p&gt;3) Previous version of the spec was wrong about default EXTERNAL SECURITY clause and what SQL Standard says about it. SQL standard says default EXTERNAL SECURITY, if not specified, is implementation defined. Previous version of the spec and myself thought default value as specified by SQL standard was DEFINER, so I proposed adding DEFINER/INVOKER clause to routines now so we don&apos;t introduce forward compatibility issues by keeping INVOKER model. But the spec is very clear about default value of SECURITY, so there is no need to implement that feature NOW.&lt;/p&gt;

&lt;p&gt;Let me know if anyone have any comments.&lt;/p&gt;
</comment>
                            <comment id="12370303" author="djd" created="Tue, 14 Mar 2006 12:51:31 +0000"  >&lt;p&gt;Thanks for adding the table of system routines in the functional spec. &lt;/p&gt;

&lt;p&gt;One question on that, in the intro to the table it says&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot; For instance a user needs to have SELECT privilege on a table to be able to call SYSCS_COMPRESS_TABLE&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;but that privilege is not reflected in the last column of the table for the compress routines, is it required or not?&lt;br/&gt;
I wonder if it would be better to be general in the intro rather than an &quot;for instance&quot;, e.g. say &quot;additional privileges required are listed in the &apos;Other privileges needed&apos; column&quot;.&lt;/p&gt;

&lt;p&gt;I think it would be good to be precise &amp;amp; consistent and use the term &quot;PUBLIC&quot; rather than &quot;everyone&quot;, might lead to consistency in the user documentation which would be a good thing!&lt;/p&gt;

</comment>
                            <comment id="12370427" author="bandaram" created="Wed, 15 Mar 2006 06:00:16 +0000"  >&lt;p&gt;I will make the suggested changes to the spec. I will remove the &quot;for instance&quot; example... in the next version of the spec update. &lt;/p&gt;</comment>
                            <comment id="12372156" author="mcaisse" created="Wed, 29 Mar 2006 08:49:36 +0100"  >&lt;p&gt;If you think it&apos;s useful, you may rework the attached code to test grant/revoke functionality in Derby.&lt;/p&gt;</comment>
                            <comment id="12372172" author="mcaisse" created="Wed, 29 Mar 2006 10:20:37 +0100"  >&lt;p&gt;This attachment, Privileges2.java supercedes the previous one.  It contains the Apache license test.  My management at Sun Microsystems has authorized me to donated this code to Apache Derby. It will need substantial rework for use with Derby outside of the test framework for which it was written.  I hope that it is useful.&lt;/p&gt;</comment>
                            <comment id="12376518" author="djd" created="Thu, 27 Apr 2006 01:29:38 +0100"  >&lt;p&gt;Some comments on grantRevokeSpec_v2.html&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The primary keys for SYSTABLEPERMS, SYSCOLPERMS and SYSROUTINEPERMS do not include the GRANTOR  column.&lt;br/&gt;
Won&apos;t it make future upgrades easier if the GRANTOR  column is included in the primary key?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;How does SYSREQUIREDPERM relate to the current dependency system. Could this functionality not be incorporated into&lt;br/&gt;
the current dependency system so that we have a single system?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12422067" author="yipng" created="Wed, 19 Jul 2006 10:22:18 +0100"  >&lt;p&gt;Hi&lt;/p&gt;

&lt;p&gt;  My name is Yip Ng and I would like to contribute to the Apache Derby project.  First I thought I start off by writing a suite of testcases for Grant/Revoke functionality.  I went through the Grant/Revoke design spec described in derby-464 but I couldn&apos;t find any mentioning of the Derby system behavior for revoking the owner&apos;s own privileges.  So I ran the scenario below in ij to see how this is handled currently.  (btw, I am currently using revision 423260.)  i.e.:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:authtest&apos; user &apos;yip&apos; as conn1;&lt;br/&gt;
ij&amp;gt; create table t1 (c1 int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values 1,2,3;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; revoke select on t1 from yip;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t1;&lt;br/&gt;
C1&lt;br/&gt;
-----------&lt;br/&gt;
1&lt;br/&gt;
2&lt;br/&gt;
3&lt;/p&gt;

&lt;p&gt;3 rows selected &lt;/p&gt;


&lt;p&gt;   After revoking the owner&apos;s SELECT privilege on table t1, the owner is able to select from it as if though the REVOKE statement above has no effect(bug?).  But more importantly, I was expecting a SQLException with the appropriate SQLSTATE to be thrown when the owner attempts to revoke  privilege from himself.  Comments?    &lt;/p&gt;

&lt;p&gt;   Another problem I have found (not sure if this is already addressed in the latest codeline) is that if the owner grants himself SELECT privilege on the table he have created (redundant privilege) and when he attempts to insert another row, Derby throws a SQLException and informs that the owner needs to have permission to perform DML on the owner&apos;s table.  i.e.:  &lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:authtest&apos; user &apos;yip&apos; as conn1;&lt;br/&gt;
ij&amp;gt; create table t1 (c1 int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values 1,2,3;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; grant select on table t1 to yip;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values 4;&lt;br/&gt;
ERROR 28506: User &apos;YIP&apos; does not have insert permission on table &apos;YIP&apos;.&apos;T1&apos;.&lt;/p&gt;

&lt;p&gt;   I am currently writing more testcases and will submit them as a patch shortly.&lt;/p&gt;
</comment>
                            <comment id="12422235" author="yipng" created="Wed, 19 Jul 2006 20:57:11 +0100"  >&lt;p&gt;With revision 423580, the redundant privilege problem is resolved.  I opened up &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1538&quot; title=&quot;Unexpected behavior on self privilege revocation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1538&quot;&gt;&lt;del&gt;DERBY-1538&lt;/del&gt;&lt;/a&gt; to keep track of the self privilege revocation issue. &lt;/p&gt;</comment>
                            <comment id="12423194" author="bandaram" created="Tue, 25 Jul 2006 00:25:40 +0100"  >&lt;p&gt;Updated functional spec... Changes from v2 version are:&lt;/p&gt;

&lt;p&gt;1) Added GRANTOR column to primary key to new system tables. Removed SYSREQUIREDPERMS system table. System table schema still needs more updates to reflect Mamta&apos;s work on adding UUID column to system tables.&lt;br/&gt;
2) Added a note saying revoking owners own privileges raises an error.&lt;/p&gt;
</comment>
                            <comment id="12423197" author="bandaram" created="Tue, 25 Jul 2006 00:28:32 +0100"  >&lt;p&gt;Should this issue be marked as RESOLVED? This JIRA entry covers main GRANT/REVOKE functionality being developed. While there are a few sub-tasks still open, I don&apos;t see any active work remaining or being done under this entry.&lt;/p&gt;
</comment>
                            <comment id="12423202" author="djd" created="Tue, 25 Jul 2006 00:45:09 +0100"  >&lt;p&gt;I would say one definition of sub-task is that the main task is not complete until all of the sub-tasks are.&lt;br/&gt;
Though I think sometimes sub-tasks are added when a better choice would be to add separate tasks.&lt;br/&gt;
And the situation is not helped by Jira not allowing sub-tasks to moved once created.&lt;/p&gt;

&lt;p&gt;In this case it seems to me:&lt;/p&gt;

&lt;p&gt;   &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1023&quot; title=&quot;Add EXTERNAL SECURITY DEFINER and EXTERNAL SECURITY INVOKER  support for routines(functions or procedures)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1023&quot;&gt;&lt;del&gt;DERBY-1023&lt;/del&gt;&lt;/a&gt; is no longer part of the functional spec and should be marked no fix intended (ideally it would be moved out to be its own improvement).&lt;br/&gt;
   &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1057&quot; title=&quot;documentation to address Grant/Revoke (Derby-464)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1057&quot;&gt;&lt;del&gt;DERBY-1057&lt;/del&gt;&lt;/a&gt; should be a separate task. I would favor this model for documentation of code features, separate improvement items that are linked but not sub-tasks.&lt;/p&gt;

&lt;p&gt;All the others seem to be valid sub-tasks of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-464&quot; title=&quot;Enhance Derby by adding grant/revoke support. Grant/Revoke provide finner level of privileges than currently provided by Derby that is especially useful in network configurations.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-464&quot;&gt;&lt;del&gt;DERBY-464&lt;/del&gt;&lt;/a&gt; and so should be complete before closing this.&lt;/p&gt;</comment>
                            <comment id="12423394" author="mamtas" created="Tue, 25 Jul 2006 18:24:38 +0100"  >&lt;p&gt;Updated functional spec to include UUID column in the three new system tables. This UUID will be used by the dependency manager to track view/trigger/constraint&apos;s dependencies on various permissions,&lt;/p&gt;

&lt;p&gt;The updated spec is attached as grantRevokeSpec_v4.html&lt;/p&gt;</comment>
                            <comment id="12423418" author="kartha" created="Tue, 25 Jul 2006 20:25:48 +0100"  >&lt;p&gt;Trivial:&lt;/p&gt;

&lt;p&gt;I was starting to read the latest functional spec and noticed the date and version of the current one was not updated to reflect latest version and date. &lt;/p&gt;</comment>
                            <comment id="12423421" author="mamtas" created="Tue, 25 Jul 2006 20:44:46 +0100"  >&lt;p&gt;Rajesh, thanks for catching it. I have updated the version number to the best of my knowledge. Satheesh, feel free to change it. The spec with date and version change along with UUID changes is now attached as grantRevokeSpec_v4_1.html&lt;/p&gt;</comment>
                            <comment id="12423574" author="yipng" created="Wed, 26 Jul 2006 09:15:18 +0100"  >&lt;p&gt;Are there any new SQLSTATEs and messages introduced by this item?  There are couple of places in the latest design doc(v4) where it states Derby returns error/throws SQLException in certain scenarios (i.e. accessing tables that you don&apos;&apos;t have the rights, revoking owners own privilege, etc. ) but I don&apos;t see any SQLSTATEs being listed and I think the tech writers need this info to update the ref docs, no?&lt;/p&gt;</comment>
                            <comment id="12423655" author="djd" created="Wed, 26 Jul 2006 15:27:44 +0100"  >&lt;p&gt;Don&apos;t see any patch that hasn&apos;t been committed.&lt;/p&gt;</comment>
                            <comment id="12423663" author="mamtas" created="Wed, 26 Jul 2006 15:57:36 +0100"  >&lt;p&gt;I think I accidentally selected patch available when I attached the updated fucntional spec.&lt;/p&gt;</comment>
                            <comment id="12427756" author="bandaram" created="Sun, 13 Aug 2006 15:35:48 +0100"  >&lt;p&gt;Updated GRANT/REVOKE functional specification. Changes include:&lt;/p&gt;

&lt;p&gt;1) Added a section for database owner and how they operate in user schemas.&lt;br/&gt;
2) Clarified that synonyms can&apos;t be granted privileges and also that revoking part of a table privilege is not allowed.&lt;br/&gt;
3) Clarified upgrade model better.&lt;/p&gt;</comment>
                            <comment id="12428349" author="yipng" created="Wed, 16 Aug 2006 09:00:19 +0100"  >&lt;p&gt;In v5 of the design doc, it uses uppercase &quot;Y&quot;  or &quot;N&quot; value for each of the specific privilege for the new system tables such as sys.systableperms but in the implementation, I noticed that it is using lowercase &quot;y&quot;.  (Assuming &quot;Y&quot; is used to represent for grant option in the future.) &lt;/p&gt;</comment>
                            <comment id="12428743" author="yipng" created="Thu, 17 Aug 2006 20:00:22 +0100"  >&lt;p&gt;With respect to LOCK TABLE statement, it appears that the current implementation allows non-privileged users to lock a table that they don&apos;t have access rights to.  I think non-privilege users should not be able to perform the locking as now they have &quot;control&quot; to those tables.  In DB2, the authorization id needs to have select privilege or is DBA to perform such an action.&lt;/p&gt;</comment>
                            <comment id="12428758" author="mamtas" created="Thu, 17 Aug 2006 20:14:22 +0100"  >&lt;p&gt;Yip, it looks like for LOCK TABLE statement, during the compile time we do not collect the privilege requirements like we do for say SELECT, INSERT etc. And hence privilege violation for LOCK TABLE does not get caught at execution time (which is when we verify if the required privileges are inplace).&lt;/p&gt;</comment>
                            <comment id="12428760" author="yipng" created="Thu, 17 Aug 2006 20:19:39 +0100"  >&lt;p&gt;It appears so.  I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1708&quot; title=&quot;Unprivileged user can perform lock table statement on a table which he/she does not have any access rights&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1708&quot;&gt;&lt;del&gt;DERBY-1708&lt;/del&gt;&lt;/a&gt; to track the lock table issue.&lt;/p&gt;</comment>
                            <comment id="12435105" author="mikem" created="Fri, 15 Sep 2006 21:13:29 +0100"  >&lt;p&gt;Satheesh is having trouble accessing JIRA, he asked me to unassign him from this issue.  He&lt;br/&gt;
has completed all the work he plans to do on this issue for 10.2.  I think this issue is ready to &lt;br/&gt;
be closed for 10.2, remaining bugs/additions I believe are being tracked by separate JIRA entries.  &lt;br/&gt;
If anyone believes this entry should remain open let me know, otherwise I will close it next week.&lt;/p&gt;</comment>
                            <comment id="12435503" author="mikem" created="Mon, 18 Sep 2006 16:44:55 +0100"  >&lt;p&gt;All planned improvement work for this feature has been completed for 10.2.  All subtasks are done.  Future improvements as well as any known outstanding bugs are being tracked as separate jira issues, so closing this for 10.2.&lt;/p&gt;</comment>
                            <comment id="12551282" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:41 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12346116">DERBY-1523</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346113">DERBY-1521</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12343810">DERBY-1367</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346534">DERBY-1579</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346114">DERBY-1522</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12427678">DERBY-4268</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346274">DERBY-1538</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346312">DERBY-1542</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346593">DERBY-1582</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346595">DERBY-1583</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346679">DERBY-1592</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348102">DERBY-1708</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348159">DERBY-1715</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348172">DERBY-1716</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348190">DERBY-1723</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348205">DERBY-1724</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348251">DERBY-1729</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348344">DERBY-1738</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12349878">DERBY-1847</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12346116">DERBY-1523</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12346651">DERBY-1589</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323369" name="GrantRevokePartII.stat" size="3469" author="bandaram" created="Sat, 25 Feb 2006 00:48:54 +0000"/>
                            <attachment id="12323370" name="GrantRevokePartII.txt" size="192226" author="bandaram" created="Sat, 25 Feb 2006 00:48:54 +0000"/>
                            <attachment id="12323191" name="GrantRevokePartII.txt" size="192226" author="bandaram" created="Mon, 20 Feb 2006 23:22:06 +0000"/>
                            <attachment id="12324690" name="Privileges.java" size="47890" author="mcaisse" created="Wed, 29 Mar 2006 08:49:36 +0100"/>
                            <attachment id="12324695" name="Privileges2.java" size="48557" author="mcaisse" created="Wed, 29 Mar 2006 10:20:36 +0100"/>
                            <attachment id="12323368" name="changeDescriptionPartII" size="4000" author="bandaram" created="Sat, 25 Feb 2006 00:48:54 +0000"/>
                            <attachment id="12321173" name="grantRevoke.patch.Dec5" size="457246" author="bandaram" created="Wed, 7 Dec 2005 00:15:53 +0000"/>
                            <attachment id="12321172" name="grantRevoke.stat.Dec5" size="5218" author="bandaram" created="Wed, 7 Dec 2005 00:15:14 +0000"/>
                            <attachment id="12323047" name="grantRevokeSpec.html" size="27451" author="bandaram" created="Thu, 16 Feb 2006 17:30:15 +0000"/>
                            <attachment id="12324061" name="grantRevokeSpec_v2.html" size="33401" author="bandaram" created="Sun, 12 Mar 2006 05:01:49 +0000"/>
                            <attachment id="12337435" name="grantRevokeSpec_v3.html" size="29409" author="bandaram" created="Tue, 25 Jul 2006 00:25:40 +0100"/>
                            <attachment id="12337481" name="grantRevokeSpec_v4.html" size="32442" author="mamtas" created="Tue, 25 Jul 2006 18:24:38 +0100"/>
                            <attachment id="12337491" name="grantRevokeSpec_v4_1.html" size="32439" author="mamtas" created="Tue, 25 Jul 2006 20:44:46 +0100"/>
                            <attachment id="12338762" name="grantRevokeSpec_v5.html" size="32516" author="bandaram" created="Sun, 13 Aug 2006 15:35:48 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12329300">DERBY-1023</subtask>
                            <subtask id="12329481">DERBY-1057</subtask>
                            <subtask id="12343197">DERBY-1330</subtask>
                            <subtask id="12346211">DERBY-1532</subtask>
                            <subtask id="12346315">DERBY-1543</subtask>
                            <subtask id="12346316">DERBY-1544</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Jul 2005 00:53:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29560</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0srr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>