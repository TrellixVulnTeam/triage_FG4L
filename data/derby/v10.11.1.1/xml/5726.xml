<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5726/DERBY-5726.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5726] Make it more difficult to forget calling super.tearDown() from BaseJDBCTestCase&apos;s subclasses</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5726</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Many of the classes that extend BaseJDBCTestCase and override the tearDown() method, forget to call super.tearDown(), and thereby prevent resources from being freed after completion. We should add a mechanism that enforces the correct behaviour.&lt;/p&gt;

&lt;p&gt;If we were starting from scratch, we might have made BaseJDBCTestCase.tearDown() final and added a new overridable method that was called from BaseJDBCTestCase.tearDown() before it freed the statements and connections. Then there would be no way to prevent BaseJDBCTestCase.tearDown() from running in the subclasses. That would however require us to change all existing overrides of BaseJDBCTestCase.tearDown() (current count: 131), which would be a chunk of work.&lt;/p&gt;

&lt;p&gt;I&apos;d rather suggest that we add an override of runBare() in BaseJDBCTestCase that asserts that the connection has been cleared out when a test case has completed successfully. Something like this:&lt;/p&gt;

&lt;p&gt;    public void runBare() throws Throwable &lt;/p&gt;
{
        super.runBare();
        // It&apos;s quite common to forget to call super.tearDown() when
        // overriding tearDown() in sub-classes.
        assertNull(
            &quot;Connection should be null by now. &quot; +
            &quot;Missing call to super.tearDown()?&quot;, conn);
    }

&lt;p&gt;Then it would still be possible to forget to call super.tearDown(), but it would be discovered when trying to run the test.&lt;/p&gt;

&lt;p&gt;Adding the above method to BaseJDBCTestCase and running InternationalConnectTest gave this result:&lt;/p&gt;

&lt;p&gt;.....F.F....F&lt;br/&gt;
Time: 5,748&lt;br/&gt;
There were 3 failures:&lt;br/&gt;
1) testDriverManagerConnect(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)junit.framework.AssertionFailedError: Connection should be null by now. Missing call to super.tearDown()?&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:431)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
2) testBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)junit.framework.AssertionFailedError: Connection should be null by now. Missing call to super.tearDown()?&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:431)&lt;br/&gt;
(...)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12552638">DERBY-5726</key>
            <summary>Make it more difficult to forget calling super.tearDown() from BaseJDBCTestCase&apos;s subclasses</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Apr 2012 13:46:20 +0100</created>
                <updated>Tue, 24 Jul 2012 18:28:06 +0100</updated>
                            <resolved>Wed, 2 May 2012 10:35:13 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13261603" author="rhillegas" created="Wed, 25 Apr 2012 13:53:30 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;That sounds like a good idea. Maybe you can apply your first suggestion to the runBare() solution, making runBare() final and having it call an overridable method. Shouldn&apos;t be too messy. I only see overrides of runBare() in a handful of classes.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13261847" author="knutanders" created="Wed, 25 Apr 2012 18:51:16 +0100"  >&lt;p&gt;There were no failures in suites.All when running with the above mentioned runBare() method in BaseJDBCTestCase, as well as the uncommitted patches attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5721&quot; title=&quot;ParameterMappingTest lacks call to super.tearDown()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5721&quot;&gt;&lt;del&gt;DERBY-5721&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5722&quot; title=&quot;InternationalConnectTest forgets to call super.tearDown()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5722&quot;&gt;&lt;del&gt;DERBY-5722&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5723&quot; title=&quot;LongColumnTest doesn&amp;#39;t call super.tearDown()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5723&quot;&gt;&lt;del&gt;DERBY-5723&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5725&quot; title=&quot;ErrorStreamTest doesn&amp;#39;t call super.tearDown()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5725&quot;&gt;&lt;del&gt;DERBY-5725&lt;/del&gt;&lt;/a&gt;. So at least it looks like we&apos;ve smoked out most of these problems now.&lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can modify the patch as Rick suggested. There is actually just one override of BaseJDBCTestCase.runBare(), and that&apos;s in JDBCPerfTestCase. The other runBare() overrides are in direct subclasses of BaseTestCase, which doesn&apos;t have any connections or statements to close.&lt;/p&gt;</comment>
                            <comment id="13264750" author="knutanders" created="Mon, 30 Apr 2012 10:26:53 +0100"  >&lt;p&gt;Attaching a patch that adds the assert to BaseJDBCTestCase.runBare(), makes runBare() final to prevent sub-classes from being able to bypass the check, and add an overridable method (runBareOverridable) that is called from the final runBare() method.&lt;/p&gt;

&lt;p&gt;I successfully ran suites.All and perf.basic._Suite (which is the suite that contains the only tests that override BaseJDBCTestCase.runBare()).&lt;/p&gt;</comment>
                            <comment id="13265015" author="kmarsden" created="Mon, 30 Apr 2012 17:36:41 +0100"  >&lt;p&gt;This sounds like a good idea to ensure teardown gets called and things get cleaned up.  I remember sometime back doing a test cleanup cleanup effort, but can&apos;t exactly remember my motivation. It might have been making sure things run in the default heap or maybe it had something to do with permgen space.  Why is the cleanup important?&lt;/p&gt;

</comment>
                            <comment id="13266463" author="knutanders" created="Wed, 2 May 2012 10:33:25 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I think this cleanup is important because memory leaks in the test framework may prevent us from discovering real memory leaks in the product, and also because if we keep letting new leaks into the tests, the amount of memory required for running the tests will just keep growing.&lt;/p&gt;

&lt;p&gt;For the record, with all the latest patches, suites.All now passes with 64MB heap in my environment if I disable the following test cases:&lt;/p&gt;

&lt;p&gt;TriggerTest&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testBlobInTriggerTable&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Derby2017LayerATest&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;cs_FailedStreamInsertCharBufferBoundaries&lt;/li&gt;
	&lt;li&gt;cs_StreamInsertCharBufferBoundary&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;StatementJdbc30Test&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;xtestMaxOpenStatementsWithQueryTimeout&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ClobReclamationTest&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testBlobLinkedListReclamationOnRollback&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When running the tests standalone, TriggerTest requires 165MB heap to pass, and the other three tests pass with 85MB.&lt;/p&gt;</comment>
                            <comment id="13266465" author="knutanders" created="Wed, 2 May 2012 10:35:13 +0100"  >&lt;p&gt;Committed revision 1332967.&lt;/p&gt;</comment>
                            <comment id="13273576" author="dagw" created="Fri, 11 May 2012 21:18:44 +0100"  >&lt;p&gt;Would it make sense to run these memory hungry tests in forked VMs, so we can have them as part of the regression tests, but keep the main VM to 64MB requirement you have squeezed it down to?&lt;/p&gt;</comment>
                            <comment id="13274537" author="knutanders" created="Mon, 14 May 2012 11:09:41 +0100"  >&lt;p&gt;If someone wants to run the tests with limited amount of memory, it might make more sense to have a way to disable known memory-hungry tests, as forking the tests would still require much memory in the sub-process. I&apos;m not sure we&apos;d want to introduce a hard limit on 64MB for running suites.All, though, as that was a number I picked rather arbitrarily to smoke out the leaks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12552297">DERBY-5710</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552300">DERBY-5711</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552327">DERBY-5718</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552330">DERBY-5719</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552332">DERBY-5720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552549">DERBY-5721</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552550">DERBY-5722</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552551">DERBY-5723</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12552631">DERBY-5725</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12525050" name="d5726-1a.diff" size="3247" author="knutanders" created="Mon, 30 Apr 2012 10:26:52 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Apr 2012 12:53:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>237477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0aof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35548</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>