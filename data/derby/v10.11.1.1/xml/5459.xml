<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5459/DERBY-5459.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5459] Result set metadata are out of sync on client after underlying table is altered</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5459</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Cf the discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3823&quot; title=&quot;NullPointerException in stress.multi test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3823&quot;&gt;&lt;del&gt;DERBY-3823&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The enclosed repro program shows what happens. When I run it with&lt;br/&gt;
client/server and embedded respectively we see these two differing&lt;br/&gt;
results:&lt;/p&gt;

&lt;p&gt;client/server:&lt;/p&gt;

&lt;p&gt;$ java -cp .:$CLASSPATH Repo&lt;br/&gt;
Done loading data&lt;br/&gt;
executing alter&lt;br/&gt;
execp.getResultDescription: select * from t1&lt;br/&gt;
2. PS#getMetaData: char column length is 8&lt;br/&gt;
Reexecuting ps on changed table...&lt;br/&gt;
3. RS#getMetadata: char column length is 8&lt;br/&gt;
data:1 12345678&lt;/p&gt;

&lt;p&gt;dag@T61pOS:~/java/sb/apps/derby3823$ !rm&lt;br/&gt;
rm -rf DERBY3823DB&lt;/p&gt;

&lt;p&gt;embedded:&lt;/p&gt;

&lt;p&gt;dag@T61pOS:~/java/sb/apps/derby3823$ java -cp .:$CLASSPATH Repro 2&lt;br/&gt;
execp.getResultDescription: insert into t1 values(?,&apos;aaaaa&apos;)&lt;br/&gt;
execp.getResultDescription: insert into t1 values(?,&apos;aaaaa&apos;)&lt;br/&gt;
Done loading data&lt;br/&gt;
execp.getResultDescription: select * from t1&lt;br/&gt;
execp.getResultDescription: select * from t1&lt;br/&gt;
executing alter&lt;br/&gt;
2. PS#getMetaData: char column length is 5&lt;br/&gt;
Reexecuting ps on changed tableh...&lt;br/&gt;
3. RS#getMetadata: char column length is 5&lt;br/&gt;
data:1 12345678&lt;/p&gt;


&lt;p&gt;As we can see, the metadata results are different after the ALTER&lt;br/&gt;
TABLE. The trace from EmbedPreparedData&lt;br/&gt;
(&quot;execp.getResultDescription:&quot;) lines (see repro-patch.diff) show that&lt;br/&gt;
after ALTER, the metadata are not refreshed on the server side.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12526969">DERBY-5459</key>
            <summary>Result set metadata are out of sync on client after underlying table is altered</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Oct 2011 04:22:31 +0100</created>
                <updated>Tue, 13 Aug 2013 21:31:26 +0100</updated>
                            <resolved>Thu, 24 Nov 2011 23:36:33 +0000</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                    <version>10.6.2.1</version>
                    <version>10.7.1.1</version>
                    <version>10.8.1.2</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13126324" author="dagw" created="Thu, 13 Oct 2011 04:37:48 +0100"  >&lt;p&gt;Note: both the result of the PreparedStatement#getMetaData and the result set&apos;s ResultSet#getMetaData are wrong.&lt;/p&gt;</comment>
                            <comment id="13126328" author="dagw" created="Thu, 13 Oct 2011 04:44:09 +0100"  >&lt;p&gt;Linking to two other issues with differences between embedded and client/server which may or may not be related (different result set handling is a common denominator). See also discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3823&quot; title=&quot;NullPointerException in stress.multi test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3823&quot;&gt;&lt;del&gt;DERBY-3823&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13127208" author="dagw" created="Fri, 14 Oct 2011 02:22:29 +0100"  >&lt;p&gt;When this issues is resolved, the test added to AlterTableTest in svn 1182570 should be modified to assert the now corrected behavior.&lt;/p&gt;</comment>
                            <comment id="13127290" author="dagw" created="Fri, 14 Oct 2011 07:13:22 +0100"  >&lt;p&gt;From looking at the code in client PreparedStatement#getMetaData, which calls getMetadataX, there is no attempt to verify that the prepared statement&apos;s metadata is still up-to-date. Repreparing the ps does bring it up to date, though. Perhaps we should just disabled this caching and reprepare whenever PreparedStatement#getMetaData is called. On the server this will not necessarily lead to a recompilation, of course. It does, however, incur a client server round-trip, but since we don&apos;t have any push service, I think polling is the only way to get the correct behavior. &lt;/p&gt;

&lt;p&gt;But it doesn&apos;t stop there: if we (re)execute the prepared statement (for which the cached metadata on the client is out of date), a new result set resulting from a query using that ps will inherit the stale metadata from the ps, cf. Statement#completeOpenQuery ca line 1493:&lt;/p&gt;

&lt;p&gt;          resultSet.resultSetMetaData_ = resultSetMetaData_;&lt;/p&gt;

&lt;p&gt;so  the metadata for the newly retrieved result set will also be stale (since the execution doesn&apos;t presently signal that the metadata has changed in any way). Thinking aloud, maybe we could version the metadata and attach the version number to the query result. If the cached version were out of date the client would need to retrieve the result set&apos;s metadata before closing the result set (so it would be guaranteed to be correct: the server does keep the info as long as the rs is open I think).&lt;/p&gt;</comment>
                            <comment id="13127339" author="dagw" created="Fri, 14 Oct 2011 08:49:35 +0100"  >&lt;p&gt;I confirmed that something like:&lt;/p&gt;

&lt;p&gt;     private ColumnMetaData getMetaDataX() throws SqlException &lt;/p&gt;
{
         super.checkForClosedStatement();
+        initResetPreparedStatement();
+        prepare();
         return resultSetMetaData_;
     }

&lt;p&gt;did give the correct result for the case of PreparedStatement#getMetaData in the repro. But how to fix ResultSet#getMetaData is probably not so easy. I&apos;ll try to find out of the protocol even allows metadata transfer outside or doing a prepare...&lt;/p&gt;</comment>
                            <comment id="13127355" author="dagw" created="Fri, 14 Oct 2011 09:09:36 +0100"  >&lt;p&gt;Note to self (may not be relevant): Found this little comment in NetStatementReply#parseSQLDTARDarray:&lt;/p&gt;

&lt;p&gt;// add a quick check to see if the table is altered (columns are added or deleted)&lt;br/&gt;
// before reusing the cached cursor.  note: this check does not catch the case&lt;br/&gt;
// where the number of columns stay the same, but the column type or length changes,&lt;br/&gt;
// i.e. from integer to char.&lt;/p&gt;</comment>
                            <comment id="13127663" author="kmarsden" created="Fri, 14 Oct 2011 17:16:50 +0100"  >&lt;p&gt;Is this issue a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2402&quot; title=&quot;client ResultSetMetaData for select * after alter table does not return added columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2402&quot;&gt;&lt;del&gt;DERBY-2402&lt;/del&gt;&lt;/a&gt; or are the issues different problems related to alter table and client?&lt;/p&gt;</comment>
                            <comment id="13146899" author="dagw" created="Wed, 9 Nov 2011 09:48:58 +0000"  >&lt;p&gt;Yes, Kathey, I believe &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2402&quot; title=&quot;client ResultSetMetaData for select * after alter table does not return added columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2402&quot;&gt;&lt;del&gt;DERBY-2402&lt;/del&gt;&lt;/a&gt; is the same problem. When I have a fix to prove it, I&apos;ll make them duplicates. For now, I link it as related.&lt;/p&gt;</comment>
                            <comment id="13150519" author="dagw" created="Tue, 15 Nov 2011 14:30:25 +0000"  >&lt;p&gt;Uploading a trial patch, derby-5459-1, which fixes the problem in the following way: Each time we (recompile) a statement, a counter is incremented. When we first explicitly prepare a statement from the client, we make a note in DRDAStatement to which version of the compiled statement the prepare corresponds. Later, when executing the statement, if it returns data, we compare the current version of the prepared statement with the one current when the stament was compiled. If the versions differ we can be sure the client has stale metadata for the prepared statement, and we attach a SQLDARD block to the retiurned data. This is picked up by the client ok, it seems, cf the code in NetStatementReply#parseOpenQuery:&lt;/p&gt;

&lt;p&gt;     if (peekCP == CodePoint.SQLDARD)&lt;/p&gt;

&lt;p&gt;The patch also updates the test  PrepStmtMetaDataTest to assert metadata for the result set after an ALTER statement.&lt;/p&gt;

&lt;p&gt;Note, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2402&quot; title=&quot;client ResultSetMetaData for select * after alter table does not return added columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2402&quot;&gt;&lt;del&gt;DERBY-2402&lt;/del&gt;&lt;/a&gt; also notes that before executing a query after the ALTER, the client&apos;s ps metadata is out of synch. The patch does not address this problem: it is fairly easy make the client&apos;s getMetaData method always do a reprepare but this may not be what we want. &lt;/p&gt;

&lt;p&gt;Comments welcome on the approach as well as on the implementation: particularily, should we perhaps also do a reprepare when PS.getmetadata is called or is that too heavy handed..&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="13151194" author="dagw" created="Wed, 16 Nov 2011 13:43:37 +0000"  >&lt;p&gt;The regressions showed that one more test, AlterTableTest#testAddColumn, contained code to work around this issue for the client case. Uploading a patch that removes that special client code in the test, rerunning regressions.&lt;/p&gt;</comment>
                            <comment id="13151214" author="dagw" created="Wed, 16 Nov 2011 14:10:16 +0000"  >&lt;p&gt;Thinking more about this, I don&apos;t believe we should force a reprepare when (on the client) we do ps.getMetaData: since it may be become stale at any time between after the prepare and the execute, I think it is sufficient to re-send the metadata with the execute (current patch): it can&apos;t be fully trusted to predict the actual query results in the general case. Technically, this is in break of the Javadoc wording: &lt;/p&gt;

&lt;p&gt;&quot;Retrieves a ResultSetMetaData object that contains information about the columns of the ResultSet object that will be returned when this PreparedStatement object is executed.&quot;&lt;/p&gt;

&lt;p&gt;If this were to always hold, we&apos;d need to lock all involved tables from DDL operations till all prepared statements are closed. I don&apos;t think we want to go there. Or? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13152115" author="dagw" created="Thu, 17 Nov 2011 15:59:57 +0000"  >&lt;p&gt;Regressions passed. I&apos;ll await a review before I commit this this change. Experienced DRDA folks might want to check if what I am doing here violates the protocol: although the client code accepts the SQLDARD block in parseOpenQuery, that could be &quot;accidental&quot; (intended for other cases). I tried to grok the standard on this point; it seemed to me that for this block to be returned, the app should &lt;b&gt;ask&lt;/b&gt; for it. However, I have not changed to client code to do this. Obviously, it&apos;s nice not to have the change the client code for compatibility reasons. And this the block is sent as a result of a server event, it would be impossible to have the client ask for it, unless we choose to always return it.&lt;/p&gt;</comment>
                            <comment id="13152809" author="knutanders" created="Fri, 18 Nov 2011 12:17:12 +0000"  >&lt;p&gt;I haven&apos;t checked what the DRDA spec says, but it looks like a reasonable way to fix this problem to me. I agree that we shouldn&apos;t force a re-prepare when calling getMetaData(), as there&apos;s no guarantee that the meta-data won&apos;t change again before execution. (That said, if the underlying tables have changed in a way so that the types and names of the returned columns are no longer the same, it could possibly be argued that it&apos;s more appropriate to let the execution fail and force the user to recompile manually, since she might be executing a completely different query that the one she initially compiled, which may not be what she wants. Outside the scope of this issue, though.)&lt;/p&gt;</comment>
                            <comment id="13154751" author="dagw" created="Tue, 22 Nov 2011 00:10:21 +0000"  >&lt;p&gt;Thanks, Knut! As for your parenthesis comment, I wonder how other databases treat this case. I&apos;ll have a look.&lt;/p&gt;</comment>
                            <comment id="13154980" author="knutanders" created="Tue, 22 Nov 2011 09:48:10 +0000"  >&lt;p&gt;I agree with Dag&apos;s reading of the DRDA spec. DRDA v4, vol 3 says that an OPNQRY command may return an SQLDARD object (see last paragraph on page 541). However, there are some variables in the OPNQRY command that controls whether or not to return it, so the opportunistic approach in the patch is probably not strictly adhering to the spec. Sounds like a reasonable extension, though, but it might warrant a code comment saying it is an extension (possibly also on the client side, so that no one accidentally removes the code that reads the SQLDARD object because the client code hasn&apos;t requested it).&lt;/p&gt;

&lt;p&gt;Before checking in the changes, it might be useful to run the regression tests with a modified patch that sends an SQLDARD unconditionally, and see if that smokes out hidden problems.&lt;/p&gt;</comment>
                            <comment id="13155385" author="dagw" created="Tue, 22 Nov 2011 20:00:55 +0000"  >&lt;p&gt;Thanks for reading the spec on this, Knut! Adding a comment that this is an extension sounds prudent. I&apos;ll also run the smoke test you propose, good idea.&lt;/p&gt;</comment>
                            <comment id="13155908" author="dagw" created="Wed, 23 Nov 2011 15:05:51 +0000"  >&lt;p&gt;Uploaded patch derby-5459-3 which updates comments. The stress test did not blow any fuses. Committed at svn 1205426, resolving.&lt;/p&gt;</comment>
                            <comment id="13155911" author="dagw" created="Wed, 23 Nov 2011 15:11:17 +0000"  >&lt;p&gt;This is a backport candidate, but I am not doing it for now, so closing. Feel free to reopen and backport it if you think its valuable.&lt;/p&gt;</comment>
                            <comment id="13155913" author="bryanpendleton" created="Wed, 23 Nov 2011 15:14:01 +0000"  >&lt;p&gt;Hi Dag, thanks for working on this; it&apos;s been very interesting to follow along on your analysis.&lt;/p&gt;

&lt;p&gt;What is the (approximate, general) overhead of sending the result set metadata to the client?&lt;/p&gt;

&lt;p&gt;I guess I&apos;m wondering if we should just &lt;b&gt;always&lt;/b&gt; send that data. Such an approach might be&lt;br/&gt;
simpler, and I&apos;m always interested in raising the question of whether a simpler implementation&lt;br/&gt;
might work adequately.&lt;/p&gt;</comment>
                            <comment id="13156669" author="dagw" created="Thu, 24 Nov 2011 12:47:42 +0000"  >&lt;p&gt;Thanks for you interest in this one, Bryan! &lt;br/&gt;
I did briefly consider it, it but I went for the more complex versioning approach since it does save some payload and seemed not unduly complex to me. I imagine the overhead isn&apos;t all that great so what you are suggesting may have merit. I&apos;ll see if I can measure it. &lt;/p&gt;
</comment>
                            <comment id="13685315" author="knutanders" created="Mon, 17 Jun 2013 10:19:39 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                            <comment id="13715386" author="jira-bot" created="Mon, 22 Jul 2013 18:17:09 +0100"  >&lt;p&gt;Commit 1505734 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1505734&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1505734&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5459&quot; title=&quot;Result set metadata are out of sync on client after underlying table is altered&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5459&quot;&gt;&lt;del&gt;DERBY-5459&lt;/del&gt;&lt;/a&gt;(Result set metadata are out of sync on client after underlying table is altered)&lt;/p&gt;

&lt;p&gt;Backporting to 10.8. Fix contributed by Dag.&lt;/p&gt;</comment>
                            <comment id="13738785" author="jira-bot" created="Tue, 13 Aug 2013 21:31:26 +0100"  >&lt;p&gt;Commit 1513639 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=myrna&quot; class=&quot;user-hover&quot; rel=&quot;myrna&quot;&gt;Myrna van Lunteren&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1513639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1513639&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5459&quot; title=&quot;Result set metadata are out of sync on client after underlying table is altered&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5459&quot;&gt;&lt;del&gt;DERBY-5459&lt;/del&gt;&lt;/a&gt;; Result set metadata are out of sync on client after underlying table is altered&lt;br/&gt;
  fix javadoc warning; merge of revision 1205757 from trunk.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12435264">DERBY-4373</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12656863">DERBY-6289</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12364171">DERBY-2402</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12402360">DERBY-3839</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12498846" name="Repro.java" size="2896" author="dagw" created="Thu, 13 Oct 2011 04:25:02 +0100"/>
                            <attachment id="12503742" name="derby-5459-1.diff" size="9547" author="dagw" created="Tue, 15 Nov 2011 14:30:25 +0000"/>
                            <attachment id="12503743" name="derby-5459-1.stat" size="670" author="dagw" created="Tue, 15 Nov 2011 14:30:25 +0000"/>
                            <attachment id="12503882" name="derby-5459-2.diff" size="10948" author="dagw" created="Wed, 16 Nov 2011 13:44:21 +0000"/>
                            <attachment id="12503883" name="derby-5459-2.stat" size="760" author="dagw" created="Wed, 16 Nov 2011 13:44:21 +0000"/>
                            <attachment id="12504882" name="derby-5459-3.diff" size="12529" author="dagw" created="Wed, 23 Nov 2011 15:05:51 +0000"/>
                            <attachment id="12504883" name="derby-5459-3.stat" size="831" author="dagw" created="Wed, 23 Nov 2011 15:05:51 +0000"/>
                            <attachment id="12498847" name="repro-patch.diff" size="610" author="dagw" created="Thu, 13 Oct 2011 04:36:04 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Oct 2011 16:16:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>85282</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ehz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36167</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>