<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:32:17 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2152/DERBY-2152.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2152] Support diagnostic vti tables that take parameters, such as SpaceTable</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2152</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Expand the work of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt; to support the remaining diagnostic tables that take parameters.&lt;/p&gt;

&lt;p&gt;Syntax would use the table constructor, like (not sure if an &apos;AS&apos; clause will be required:&lt;/p&gt;

&lt;p&gt;select * from TABLE(SYSCS_DIAG.SPACE_TABLE(?, ?))&lt;/p&gt;

&lt;p&gt;Diagnostic VTIs that could be handled this way are:&lt;/p&gt;

&lt;p&gt;ErrorLogReader(String log file name)&lt;br/&gt;
SpaceTable(String tableName)&lt;br/&gt;
SpaceTable(String schemaName, String tableName)&lt;br/&gt;
StatementDuration(String inputFileName)&lt;/p&gt;

&lt;p&gt;This is the second stage mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12357812">DERBY-2152</key>
            <summary>Support diagnostic vti tables that take parameters, such as SpaceTable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Dec 2006 19:00:49 +0000</created>
                <updated>Thu, 2 May 2013 03:29:03 +0100</updated>
                            <resolved>Wed, 10 Jan 2007 21:29:29 +0000</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12458911" author="army" created="Fri, 15 Dec 2006 20:16:49 +0000"  >&lt;p&gt;Attaching a first attempt at a solution for this issue.  There are two patches involved:&lt;/p&gt;

&lt;p&gt;  1. d2152_engine_v1.patch:  Changes to the Derby engine code to allow&lt;br/&gt;
     diagnostic VTI table mappings for VTIs that take parameters.&lt;/p&gt;

&lt;p&gt;  2. d2152_testing_v1.patch: Addition of a new JUnit test class&lt;br/&gt;
     for testing the new VTI mappings.&lt;/p&gt;

&lt;p&gt;The engine patch pretty much does what is written in the description for this issue: namely, it allows the user to query the Derby diagnostic VTIs by using the following syntax:&lt;/p&gt;

&lt;p&gt;  SELECT &amp;lt;rcList&amp;gt; from TABLE (SYSCS_DIAG.&amp;lt;vti-table-name&amp;gt; (&amp;lt;arg list&amp;gt;) )&lt;br/&gt;
    [ AS ] corrlationName&lt;/p&gt;

&lt;p&gt; Note that:&lt;/p&gt;

&lt;p&gt;  a. We only support VTI table names in the SYSCS_DIAG schema&lt;br/&gt;
  b. The correlation name &lt;b&gt;is&lt;/b&gt; required, though use of the &quot;AS&quot; keyword&lt;br/&gt;
     is optional (section 7.6 of the SQL 2003 spec, &quot;&amp;lt;table primary&amp;gt;&quot;).&lt;br/&gt;
  c. The argument list can be empty.&lt;/p&gt;

&lt;p&gt;The VTI table names that have been added are as follows:&lt;/p&gt;

&lt;p&gt;  SYSCS_DIAG.SPACE_TABLE maps to org.apache.derby.diag.SpaceTable&lt;br/&gt;
  SYSCS_DIAG.ERROR_LOG_READER maps to org.apache.derby.diag.ErrorLogReader&lt;br/&gt;
  SYSCS_DIAG.STATEMENT_DURATION maps to org.apache.derby.diag.StatementDuration&lt;/p&gt;

&lt;p&gt;Given all of that, the following are some areas/issues/questions for which I am hoping to get feedback.  If anyone out there can review and/or provide insight/opinions on these, I&apos;d apprecate it.&lt;/p&gt;

&lt;p&gt;  1. Since the argument list can be empty, a user now as two different ways&lt;br/&gt;
     to invoke diagnostic VTIs that take zero parameters.  Ex:&lt;/p&gt;

&lt;p&gt;       A. As of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt;:  SELECT * FROM SYSCS_DIAG.LOCK_TABLE&lt;br/&gt;
       B. With my patch:    SELECT * FROM TABLE (SYSCS_DIAG.LOCK_TABLE()) x&lt;/p&gt;

&lt;p&gt;     Is it okay to have &lt;b&gt;both&lt;/b&gt; of these syntaxes?  Note that, as it turns&lt;br/&gt;
     out, the only diagnostic VTI that does &lt;b&gt;not&lt;/b&gt; allow zero arguments&lt;br/&gt;
     is SpaceTable; all of the other VTIs will have two different syntax&lt;br/&gt;
     variations that work.&lt;/p&gt;

&lt;p&gt;  2. What error should we throw if the user specifies a table name that&lt;br/&gt;
     is not a valid VTI table-mapped name?  Ex.&lt;/p&gt;

&lt;p&gt;       select * from TABLE (APP.T1()) x&lt;/p&gt;

&lt;p&gt;     With the _v1 patch we&apos;ll throw a syntax error as follows:&lt;/p&gt;

&lt;p&gt;       ERROR 42X01: Syntax error: APP.T1&lt;/p&gt;

&lt;p&gt;     But that does not seem particularly helpful to me.  Should I add a new&lt;br/&gt;
     error message that gives more detail, or is this okay?  One other thing to&lt;br/&gt;
     note about this: in some cases, this error could be misleading.  Ex:&lt;/p&gt;

&lt;p&gt;       set schema APP&lt;br/&gt;
       select * from TABLE (SPACE_TABLE(&apos;APP&apos;, &apos;T1&apos;)) x&lt;/p&gt;

&lt;p&gt;     In this case we will throw a syntax error--but strictly speaking, this&lt;br/&gt;
     is &lt;em&gt;not&lt;/em&gt; a syntax error.  Rather, it&apos;s an error caused by the fact that&lt;br/&gt;
     SPACE_TABLE is not in the &quot;APP&quot; schema.  So if, for example, I did the&lt;br/&gt;
     following:&lt;/p&gt;

&lt;p&gt;       set schema SYSCS_DIAG&lt;br/&gt;
       select * from TABLE (SPACE_TABLE(&apos;APP&apos;, &apos;T1&apos;)) x&lt;/p&gt;

&lt;p&gt;     the SELECT statement now works fine.  Since the same statement works&lt;br/&gt;
     in one case and fails in the other, I don&apos;t think it&apos;s technically&lt;br/&gt;
     a syntax error.  Should I bother creating a new error message, then?&lt;/p&gt;

&lt;p&gt;  3. When writing the JUnit test I took a look at some of the negative test&lt;br/&gt;
     cases in store/TransactionTable.sql.  I noticed that the following&lt;br/&gt;
     statement actually &lt;b&gt;works&lt;/b&gt;:&lt;/p&gt;

&lt;p&gt;       call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE(&lt;br/&gt;
           &apos;SYSCS_DIAG&apos;, &apos;TRANSACTION_TABLE&apos;, 1, 1, 1);&lt;/p&gt;

&lt;p&gt;     That statement works even without my changes.  But on the other&lt;br/&gt;
     hand, the COMPRESS_TABLE call (i.e. without the &quot;INPLACE&quot;) throws&lt;br/&gt;
     an error (42X62) as I would expect.  Is this inconsistency a known&lt;br/&gt;
     issue, or should I file a separate Jira for this?  As things are&lt;br/&gt;
     now, the above call will &quot;work&quot; with all VTI table names (those from&lt;br/&gt;
     &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt; and the ones I&apos;ve added with my _v1 patch)--and again,&lt;br/&gt;
     please note that this is not the result of my changes.&lt;/p&gt;

&lt;p&gt;  4. As a result of my changes there is one master update that is required.&lt;br/&gt;
     In lang/valuesclause.sql there is a slight diff in the error message&lt;br/&gt;
     for three queries.  With my patch the error message now shows a token&lt;br/&gt;
     where previously no token was given.  Ex:&lt;/p&gt;

&lt;p&gt;       select * from  table target;&lt;br/&gt;
       &amp;lt; ERROR 42X01: Syntax error: Encountered &quot;&quot; at line 3, column 13.&lt;br/&gt;
       &amp;gt; ERROR 42X01: Syntax error: Encountered &quot;target&quot; at line 3, column 13.&lt;/p&gt;

&lt;p&gt;     I assume this is okay, but if anyone feels otherwise, please let me know.&lt;/p&gt;

&lt;p&gt;  5. The new JUnit test that I&apos;ve added currently runs without a security&lt;br/&gt;
     manager.  The reason is that two of the VTIs--ErrorLogReader and&lt;br/&gt;
     StatementDuration--take as an (optional) argument the name of a log file&lt;br/&gt;
     as input.  I created a small test log file that I use for the tests, but&lt;br/&gt;
     when I tried running the JUnit test with a security manager, there was&lt;br/&gt;
     a failure when the VTI tried to read the log file.  My guess is that&lt;br/&gt;
     this is a separate bug--perhaps a privileged block missing somewhere in&lt;br/&gt;
     the VTI code?--but I would appreciate a second opinion.  For now I just&lt;br/&gt;
     have the test running with the security manager disabled; this can be&lt;br/&gt;
     changed when the permissions problem is resolved.&lt;/p&gt;

&lt;p&gt;And of course, any other comments/suggestions would be much appreciated, as well.&lt;/p&gt;</comment>
                            <comment id="12458972" author="djd" created="Fri, 15 Dec 2006 23:25:14 +0000"  >&lt;p&gt;Is there any reason to make SYSCS_DIAG part of the syntax, much more flexible for it to be a standard schema name that is passed into the bind code and then onto the data dictionary?&lt;/p&gt;</comment>
                            <comment id="12458975" author="djd" created="Fri, 15 Dec 2006 23:57:14 +0000"  >&lt;p&gt;On issue 1 I would say that the no-argument lock table should not be supported as a TABLE(function). I guess I&apos;d thought about having separate resolution for the two different types, tables that map to vtis and table functions that map to vtis.&lt;br/&gt;
I think with the way you have combined it this select will kind of be accepted (at least the name will be bound)&lt;/p&gt;

&lt;p&gt;SELECT * FROM SYSCS_DIAG.SPACE_TABLE&lt;/p&gt;

&lt;p&gt;but I think this should fail with a table not found exception.&lt;/p&gt;

&lt;p&gt;From looking at the patch I now see that the SYSCS_DIAG is not part of the syntax grammar, but matches the existing use for the diagnostic tables.&lt;/p&gt;</comment>
                            <comment id="12458980" author="army" created="Sat, 16 Dec 2006 00:30:55 +0000"  >&lt;p&gt;&amp;gt; I guess I&apos;d thought about having separate resolution for the two different types,&lt;br/&gt;
&amp;gt; tables that map to vtis and table functions that map to vtis. &lt;/p&gt;

&lt;p&gt;Hmm...okay, I&apos;ll have to ponder this a bit to see if this separation is a better approach.  I&apos;m not quite clear on what exactly that means just yet...&lt;/p&gt;

&lt;p&gt;&amp;gt; From looking at the patch I now see that the SYSCS_DIAG is not part of the &lt;br/&gt;
&amp;gt; syntax grammar, but matches the existing use for the diagnostic tables.&lt;/p&gt;

&lt;p&gt;Right, I think my Jira comments were misleading in that regard (sorry).  But this did prompt me to push the relevant code further down into DataDictionary, which I think makes things a bit cleaner.  So I&apos;ll include those changes in subsequent patches.&lt;/p&gt;

&lt;p&gt;I&apos;ll wait another day or so before posting a followup patch (probably on Monday or Tuesday) in case there is more discussion re: the other issues I mentioned in my previous comment.&lt;/p&gt;

&lt;p&gt;Thank you for the quick feedback!&lt;/p&gt;</comment>
                            <comment id="12459435" author="jmsynge" created="Mon, 18 Dec 2006 19:25:36 +0000"  >&lt;p&gt;How interesting (i.e. convenient for me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ) that you&apos;re working on this at the same&lt;br/&gt;
time that I&apos;m working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-47&quot; title=&quot;Some possible improvements to IN optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-47&quot;&gt;&lt;del&gt;DERBY-47&lt;/del&gt;&lt;/a&gt; (IN optimization).  I&apos;m experimenting with&lt;br/&gt;
transforming a query such as:&lt;/p&gt;

&lt;p&gt;SELECT * FROM tableA WHERE columnB IN (constC, ?, ?, constD)&lt;/p&gt;

&lt;p&gt;into&lt;/p&gt;

&lt;p&gt;SELECT * FROM tableA WHERE columnB IN (SELECT vti.column1 FROM new ArgsToRowsVTI(SomeArgs))&lt;/p&gt;

&lt;p&gt;An issue I&apos;ve not yet resolved is when/how to pass the arguments to the ArgsToRowsVTI instance.&lt;br/&gt;
It needs to have one column with the same type as columnB (known at compile/bind time).&lt;br/&gt;
And it needs to have N rows (4 in the example above), with the values in the original IN list&lt;br/&gt;
(including parameter markers).&lt;/p&gt;

&lt;p&gt;I&apos;m interested in any thoughts regarding when and how to pass the arguments.  For example, I could&lt;br/&gt;
imagine that InListOperatorNode.preprocess will return a SubqueryNode, such that the original&lt;br/&gt;
query show above would become:&lt;/p&gt;


&lt;p&gt;SELECT * FROM tableA WHERE columnB IN (SELECT vti.column1 FROM new ArgsToRowsVTI(typeOfColumnB, constC, ?, ?, constD))&lt;/p&gt;

&lt;p&gt;Any thoughts/advice?&lt;/p&gt;</comment>
                            <comment id="12459507" author="army" created="Tue, 19 Dec 2006 00:57:44 +0000"  >&lt;p&gt;Posting a second version of the patch, d2152_engine_v2.patch and d2152_testing_v2.patch, to address Dan&apos;s review comments.  In particular this version of the patch separates VTI &quot;tables&quot; (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt;) from VTI &quot;table functions&quot;.  So the following statement:&lt;/p&gt;

&lt;p&gt;  select * from syscs_diag.space_table&lt;/p&gt;

&lt;p&gt;will now throw error 42X05 (&quot;table not found&quot;).  That&apos;s also what will happen for the other table functions defined in this issue (namely, statement_duration and error_log_reader).  Similarly, the following statement:&lt;/p&gt;

&lt;p&gt;  select * from table (syscs_diag.lock_table())&lt;/p&gt;

&lt;p&gt;will now throw error 42Y03 (&quot;not recognized as a function or procedure&quot;).  That&apos;s also what will happen for the other VTI tables defined in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt; (namely, statement_cache, transaction_table, and error_messages).&lt;/p&gt;

&lt;p&gt;To accomplish this separation the _v2 patches have the following changes from the _v1 patches:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Renamed the &quot;getVTIClass()&quot; method in DataDictionary to &quot;getVTIClassForTable()&quot;&lt;/li&gt;
	&lt;li&gt;Added new method, &quot;getVTIClassForTableFunction()&quot;, to the DataDictionary&lt;br/&gt;
    interface and implementation classes.  The new method takes two strings:&lt;br/&gt;
    one for the schema name of the table function and one for the function name&lt;br/&gt;
    itself (ex. &quot;space_table&quot;).  Also pushed the logic that checks the schema&lt;br/&gt;
    name (i.e. to make sure it is &quot;SYSCS_DIAG&quot;) down into the new DataDictionary&lt;br/&gt;
    method, as mentioned in my previous comment.&lt;/li&gt;
	&lt;li&gt;Changed NewInvocation.java to call the new getVTIClassForTableFunction()&lt;br/&gt;
    method.&lt;/li&gt;
	&lt;li&gt;Changed the error thrown by NewInvocation for an invalid table function name&lt;br/&gt;
    to be error 42Y03 (&quot;not recognized as a function or procedure&quot;) instead of&lt;br/&gt;
    a syntax error.&lt;/li&gt;
	&lt;li&gt;Added new test cases to the JUnit class to make sure that the correct errors&lt;br/&gt;
    are thrown if VTI tables are used in the TABLE constructor (42Y03) or if VTI&lt;br/&gt;
    table functions are used as base tables (42X05).  Also updated the expected&lt;br/&gt;
    SQLSTATEs for existing test cases as appropriate.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I ran deryall as a sanity check on Red Hat Linux with ibm142 and there were no failures.&lt;/p&gt;

&lt;p&gt;I &lt;b&gt;think&lt;/b&gt; this patch accomplishes the separation of &quot;tables&quot; from &quot;table functions&quot; that Dan mentioned, but of course I could still be missing something.  Any review comments one way or the other would be appreciated.&lt;/p&gt;</comment>
                            <comment id="12459739" author="djd" created="Tue, 19 Dec 2006 19:48:50 +0000"  >&lt;p&gt;The separation looks good.&lt;br/&gt;
The javadoc comments for getVTIClassForTableFunction says &lt;br/&gt;
   @param funcSchema Schema part of the function name if specified&lt;br/&gt;
but I think the schema name for the function will always be passed in, even if it isn&apos;t explicitly set in the SQL statement.&lt;/p&gt;

&lt;p&gt;The lack of consistency between getVTIClassForTableFunction() and getVTIClassForTable() seems strange, though I can see why you did it that way. Once the code has been committed maybe some cleanup could be done, could be the old code to match the new code, or some other common ground. The differences are:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getVTIClassFor*() methods take different argument styles to represent the same information&lt;/li&gt;
	&lt;li&gt;one resolves the vti class outside the NewInvocationNode, one inside.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12459780" author="army" created="Tue, 19 Dec 2006 22:38:34 +0000"  >&lt;p&gt;&amp;gt; I think the schema name for the function will always be passed in,&lt;br/&gt;
&amp;gt; even if it isn&apos;t explicitly set in the SQL statement. &lt;/p&gt;

&lt;p&gt;Yes, you&apos;re right.  In cases where the schema isn&apos;t explicitly specified the code will simply pass the current schema name to the DataDictionary.  In NewInvocation.java:&lt;/p&gt;

&lt;p&gt;+    /* If no schema was specified then we want to default to the&lt;br/&gt;
+     * current schema; that&apos;s what the following line does.&lt;br/&gt;
+     */&lt;br/&gt;
+    String funcSchema =&lt;br/&gt;
+        getSchemaDescriptor(funcName.getSchemaName()).getSchemaName();&lt;/p&gt;

&lt;p&gt;So I removed the words &quot;if specified&quot; from the javadoc comment.  Thank you for pointing this out.&lt;/p&gt;

&lt;p&gt;&amp;gt; Once the code has been committed maybe some cleanup could be done,&lt;br/&gt;
&amp;gt; could be the old code to match the new code, or some other common&lt;br/&gt;
&amp;gt; ground.&lt;/p&gt;

&lt;p&gt;Good idea, thank you for bringing this up.  I committed the _v2 patches (after updating the javadoc as mentioned above) with svn revision #488827.  I&apos;ll look at creating a follow-up patch to make the two getVTIClassFor* methods more consistent with each other.  That said, I&apos;m leaving town tomorrow so I probably won&apos;t be posting any follow-up patches until January...&lt;/p&gt;

&lt;p&gt;Thank you for the review!&lt;/p&gt;</comment>
                            <comment id="12459915" author="knutanders" created="Wed, 20 Dec 2006 12:16:35 +0000"  >&lt;p&gt;I got three failures in SysDiagVTIMappingTest when I ran the All suite on a clean trunk. The stack traces are attached in junit-errors.txt. I saw the errors only once. The tests were run on Solaris 10 with Sun&apos;s JVM 1.5.0_06. I reran the tests many times, but never saw the errors again. A timing issue, perhaps?&lt;/p&gt;</comment>
                            <comment id="12460335" author="army" created="Thu, 21 Dec 2006 20:13:49 +0000"  >&lt;p&gt;&amp;gt;  I got three failures in SysDiagVTIMappingTest when I ran the All suite on a clean trunk.&lt;/p&gt;

&lt;p&gt;It looks like these same failures also occurred in the nightly test results for Sun 1.6:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sol/489139-_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/sol/489139-_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This looks like a nested exception problem: the ASSERT statement checks for SQLSTATE 42X62, but that&apos;s actually a &lt;b&gt;nested&lt;/b&gt; SQLSTATE; the top-level error has SQLSTATE 38000.&lt;/p&gt;

&lt;p&gt;My first reaction was that we&apos;re seeing a case of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1440&quot; title=&quot;jdk 1.6 client driver omits SQLStates and chained exceptions in error messages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1440&quot;&gt;&lt;del&gt;DERBY-1440&lt;/del&gt;&lt;/a&gt;, which seems particularly likely because the failures only occur when running against the Derby Client.  But that said:&lt;/p&gt;

&lt;p&gt;  1) When I run the test locally with jdk16, I don&apos;t see the failures (which surprised me).&lt;br/&gt;
  2) &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1440&quot; title=&quot;jdk 1.6 client driver omits SQLStates and chained exceptions in error messages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1440&quot;&gt;&lt;del&gt;DERBY-1440&lt;/del&gt;&lt;/a&gt; only talks about jdk16; it does not mention 1.5.  But Knut Anders reported the failures for 1.5, which is odd.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a patch, d2152_junit_jdk16_fix.patch, that should resolve the failure for jdk16 (and thus in the nightlies).  But that said, I don&apos;t understand why I&apos;m not seeing the failure on my local machine, and I don&apos;t understand why Knut Anders was seeing it with jdk15...?&lt;/p&gt;

&lt;p&gt;Note: I&apos;m currently on vacation so I&apos;m not able to investigate this further.  If anyone has a chance to track this down and s/he determines that the attached patch should in fact be committed, then please commit it!  I would commit it myself, but since I don&apos;t understand the two points mentioned above and since I am not actively monitoring the lists, I don&apos;t want to make things worse...&lt;/p&gt;</comment>
                            <comment id="12460420" author="knutanders" created="Fri, 22 Dec 2006 10:13:47 +0000"  >&lt;p&gt;A B wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; But that said, I don&apos;t understand why I&apos;m not seeing the failure on&lt;br/&gt;
&amp;gt; my local machine, and I don&apos;t understand why Knut Anders was seeing&lt;br/&gt;
&amp;gt; it with jdk15...?&lt;/p&gt;

&lt;p&gt;I rechecked my script which runs all the test suites and then I&lt;br/&gt;
remembered that I changed it to use jdk6 for the JUnit tests some time&lt;br/&gt;
ago. But that still doesn&apos;t explain why you don&apos;t see the failure on&lt;br/&gt;
jdk6. Did you build the JDBC 4.0 drivers? I don&apos;t think you will see&lt;br/&gt;
these failures if you run with the JDBC 3.0 drivers on jdk6.&lt;/p&gt;

&lt;p&gt;Your patch fixes the failure in my environment. Thank you! I have&lt;br/&gt;
committed it to trunk with revision 489597.&lt;/p&gt;</comment>
                            <comment id="12462267" author="army" created="Thu, 4 Jan 2007 18:09:02 +0000"  >&lt;p&gt;Attached d2152_vtiMappingCleanup_v1.patch, which does some reorganization of the code added for this issue and for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-571&quot; title=&quot;Virtual Table Mapping for no argument Diagnostic tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-571&quot;&gt;&lt;del&gt;DERBY-571&lt;/del&gt;&lt;/a&gt; to make them more consistent with each other.  In particular, the patch addresses the following review comment from Dan:&lt;/p&gt;

&lt;p&gt;&amp;gt; The lack of consistency between getVTIClassForTableFunction() and&lt;br/&gt;
&amp;gt; getVTIClassForTable() seems strange, though I can see why you did&lt;br/&gt;
&amp;gt; it that way. Once the code has been committed maybe some cleanup&lt;br/&gt;
&amp;gt; could be done, could be the old code to match the new code, or&lt;br/&gt;
&amp;gt; some other common ground. The differences are:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; - getVTIClassFor*() methods take different argument styles to&lt;br/&gt;
&amp;gt;   represent the same information&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; - one resolves the vti class outside the NewInvocationNode, one inside.&lt;/p&gt;

&lt;p&gt;In an attempt to resolve these differences, the patch does the following:&lt;/p&gt;

&lt;p&gt;  1. Creates a new &quot;init()&quot; method for NewInvocationNode that is specifically targeted for mapping VTI &quot;tables&quot; and VTI &quot;table functions&quot; to their corresponding class names.  The new init() method takes both a TableDescriptor and a TableName, exactly one of which must be null.  If the TableDescriptor is null then we will resolve the TableName to a VTI &quot;table function&quot;; if the TableName is null then we will resolve the TableDescriptor to a VTI &quot;table&quot;.  Thus VTI classes are now consistently resolved inside the NewInvocationNode class.&lt;/p&gt;

&lt;p&gt;  2. Updates NodeFactory.mapTableAsVTI() to make use of the new &quot;init()&quot; method in NewInvocationNode.  mapTableAsVTI() used to take as a parameter the resolved VTI class name; now it just passes the received TableDescriptor to the new init() method in NewInvocationNode and the latter resolves the VTI class.&lt;/p&gt;

&lt;p&gt;  3. Combines the getVTIClassForTable() and getVTIClassForTableFunction() methods of DataDictionary into a new method, &quot;getVTIClass()&quot;, that takes a TableDescriptor and a boolean value.  The boolean indicates the kind of mapping to do-&lt;del&gt;&quot;table&quot; or &quot;table function&quot;&lt;/del&gt;-while the TableDescriptor holds the schema and name information used for resolving the class.  This resolves the inconsistency between the argument styles used in the old getVTIClassFor*() methods.&lt;/p&gt;

&lt;p&gt;I ran suites.All on Windows 2000 with ibm142 and there were no failures.  I also ran derbyall on Red Hat Linux with ibm142 and all was clean.  And as a sanity check I ran SysDiagVTIMappingTest against jdk16 (after building JDBC 4.0) and the test ran without problem.&lt;/p&gt;

&lt;p&gt;Review comments/suggestions are appreciated, as always.&lt;/p&gt;</comment>
                            <comment id="12463333" author="army" created="Tue, 9 Jan 2007 16:17:50 +0000"  >&lt;p&gt;I haven&apos;t heard anything regarding the latest patch for this issue (d2152_vtiMappingCleanup_v1.patch), so I&apos;m inclined to commit it.  If anyone is planning to review, please let me know; otherwise I&apos;ll go ahead and commit it tomorrow (Wednesday) PST.&lt;/p&gt;</comment>
                            <comment id="12463661" author="djd" created="Wed, 10 Jan 2007 18:36:50 +0000"  >&lt;p&gt;Cleanup looks good.&lt;/p&gt;</comment>
                            <comment id="12463726" author="army" created="Wed, 10 Jan 2007 21:29:29 +0000"  >&lt;p&gt;Thank you for taking a look, Dan.  I committed the cleanup patch with svn #494993.  I&apos;m resolving the issue now and will close it in a couple of days if nothing further comes up.&lt;/p&gt;</comment>
                            <comment id="12464844" author="army" created="Mon, 15 Jan 2007 16:18:45 +0000"  >&lt;p&gt;The patch for this issue has been committed and I haven&apos;t seen any fallout, so I&apos;m marking it as closed.&lt;/p&gt;</comment>
                            <comment id="12468815" author="scotsmatrix" created="Tue, 30 Jan 2007 22:58:40 +0000"  >&lt;p&gt;The documentation issue for Derby2152 is Derby1520.&lt;/p&gt;</comment>
                            <comment id="12468816" author="scotsmatrix" created="Tue, 30 Jan 2007 23:00:39 +0000"  >&lt;p&gt;There is a documentation fissue that needs to incorporate the updates made by Derby2152.&lt;br/&gt;
The documentation issue is Derby1520.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12536241">DERBY-5554</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12346111">DERBY-1520</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12347315" name="d2152_engine_v1.patch" size="7677" author="army" created="Fri, 15 Dec 2006 20:16:49 +0000"/>
                            <attachment id="12347454" name="d2152_engine_v2.patch" size="11404" author="army" created="Tue, 19 Dec 2006 00:57:44 +0000"/>
                            <attachment id="12347697" name="d2152_junit_jdk16_fix.patch" size="1144" author="army" created="Thu, 21 Dec 2006 20:13:49 +0000"/>
                            <attachment id="12347316" name="d2152_testing_v1.patch" size="30064" author="army" created="Fri, 15 Dec 2006 20:16:49 +0000"/>
                            <attachment id="12347455" name="d2152_testing_v2.patch" size="31818" author="army" created="Tue, 19 Dec 2006 00:57:44 +0000"/>
                            <attachment id="12347317" name="d2152_v1.stat" size="729" author="army" created="Fri, 15 Dec 2006 20:16:49 +0000"/>
                            <attachment id="12347456" name="d2152_v2.stat" size="879" author="army" created="Tue, 19 Dec 2006 00:57:44 +0000"/>
                            <attachment id="12348282" name="d2152_vtiMappingCleanup_v1.patch" size="16470" author="army" created="Thu, 4 Jan 2007 18:07:06 +0000"/>
                            <attachment id="12348283" name="d2152_vtiMappingCleanup_v1.stat" size="587" author="army" created="Thu, 4 Jan 2007 18:07:06 +0000"/>
                            <attachment id="12347565" name="junit-errors.txt" size="5841" author="knutanders" created="Wed, 20 Dec 2006 12:16:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 15 Dec 2006 20:16:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30300</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0b93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35641</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>