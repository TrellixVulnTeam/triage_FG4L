<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2142/DERBY-2142.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2142] NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2142</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We are using the Derby&apos;s Transactional DataSource  class ( org.apache.derby.jdbc.EmbeddedXADataSource ) to create a pool of  XAConnections in our application.&lt;br/&gt;
Whenever a thread in a JTA transaction requests for a SQLConnection , we retrieve an XAConnection from the pool. From the XAConnection , we  register the XAResource with the TransactionManager &amp;amp; return a java.sql.Connection to the application. &lt;br/&gt;
A class implementing the ConnectionEventListener is registered with the XAConnection to get callback  connectionClosed ( ) when the thead closes the java.sql.Connection. In this callback,  we invoke XAResource.end &amp;amp; return the XAConnection to our pool  so that other threads can use it.&lt;/p&gt;

&lt;p&gt;We have encountered NullPointerException  , when performing operation on java.sql.Connection.&lt;br/&gt;
The stacktrace is as follows&lt;br/&gt;
at&lt;br/&gt;
org.apache.derby.jdbc.XAStatementControl.&amp;lt;init&amp;gt;(XAStatementControl.java:71)&lt;br/&gt;
   at&lt;br/&gt;
org.apache.derby.jdbc.EmbedXAConnection.wrapStatement(EmbedXAConnection.java:162)&lt;br/&gt;
   at&lt;br/&gt;
org.apache.derby.iapi.jdbc.BrokeredConnection.createStatement(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
   at&lt;br/&gt;
com.gemstone.gemfire.internal.datasource.ConnectionPoolingTest$1.run(ConnectionPoolingTest.java:174)&lt;br/&gt;
   at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;


&lt;p&gt;I have done some debugging on source code of  db-derby-10.2.1.6-src &amp;amp; have following explanation of the bug &amp;amp; a suggested fix. However, I want to confirm that it is genuinely a bug &amp;amp; not a problem in our understanding of the Datasource spec behaviour.&lt;/p&gt;

&lt;p&gt;Reason for the bug:-&lt;/p&gt;

&lt;p&gt;The class EmbedPooledConnection.java   stores in the field currentConnectionHandle ( of  class BrokeredConnection)  a reference of the java.sql.Connection object , being returned to the application, &lt;br/&gt;
Now ,whenever the client closes the java.sql.Connection ,  the code flow is &lt;/p&gt;

&lt;p&gt;EmbedPooledConnection.close() --&amp;gt; EmbedPooledConnection.notifyClose().&lt;br/&gt;
In the function EmbedPooledConnection.notifyClose(), it notifies  my listener ( javax.sql.ConnectionEventListener) ) where I return the XAConnection to the pool ( after deregistering the XAResource). &lt;br/&gt;
The last line of EmbedPooledConnection.close()  makes the currentConnectionHandle  field as null.&lt;/p&gt;

&lt;p&gt;The issue here is that  javax.sql.ConnectionEventListener.connectionClosed is invoked before making the currentConenctionHandle field as null.  Thus XAConnection is returned to the pool , ready for pickup by a new thread. This new thread obtains a java.sql.Connection whose reference gets assigned to the currentConnectionHandle field, meanwhile the previous thread completes the EmbedPooledConnection.close  making the newly assigned currentConnectionHandle as null.&lt;/p&gt;

&lt;p&gt;Thus a previous thread&apos;s close makes a field null of an XAConnection, which has been assigned to a new thread.&lt;br/&gt;
The bug is easily reproducible  in a multi threaded scenario ( 20 threads or so) with a pool size of around 4 XAConnections so that there is heavy  contention on XAConnection. &lt;/p&gt;

&lt;p&gt;The fix is to rearrange the code of EmbedPooledConenction.java &apos;s closingConnection () as&lt;/p&gt;

&lt;p&gt;bug :&lt;br/&gt;
public  boolean closingConnection() &lt;/p&gt;
{
     notifyClose();
     currentConnectionHandle = null;
    return false;

}

&lt;p&gt;bug fix :&lt;br/&gt;
public  boolean closingConnection() {&lt;br/&gt;
     currentConnectionHandle = null;&lt;br/&gt;
     notifyClose();&lt;br/&gt;
     return false;&lt;br/&gt;
}&lt;/p&gt;







</description>
                <environment>The issue can appear in any environment as the bug is in the source code . The bug has been verified in Suse Linux env.</environment>
        <key id="12357598">DERBY-2142</key>
            <summary>NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="ashahid">Asif H. Shahid</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Dec 2006 10:54:28 +0000</created>
                <updated>Fri, 21 Jan 2011 17:49:31 +0000</updated>
                            <resolved>Fri, 1 Feb 2008 19:59:04 +0000</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12457478" author="djd" created="Mon, 11 Dec 2006 21:22:46 +0000"  >&lt;p&gt;Thanks Asif for the suggested change and detailed analysis. I think you are correct in that it would make sense to re-order the code as you have shown, though possibly some investigation should be made to see if clearing currentConnectionHandle before notifyClose() breaks any assumptions during the notification of the close. Since the listeners can get a handed to the PooledConnection or XAConnection &amp;amp; XAResource we would just have to ensure that any method they can call on those interfaces behaves correctly.&lt;/p&gt;

&lt;p&gt;I also think in addition synchronization should be added, probably by making closingConnection() a synchronized method.&lt;/p&gt;</comment>
                            <comment id="12457906" author="rhillegas" created="Tue, 12 Dec 2006 22:13:23 +0000"  >&lt;p&gt;Adjusting urgency and priority to the standard levels.&lt;/p&gt;</comment>
                            <comment id="12559726" author="kmarsden" created="Wed, 16 Jan 2008 23:06:39 +0000"  >&lt;p&gt;Asif, do you have a reproduction for this issue?&lt;/p&gt;</comment>
                            <comment id="12562782" author="kmarsden" created="Sat, 26 Jan 2008 00:39:07 +0000"  >&lt;p&gt;Attached is patch for this issue with Asif&apos;s suggetion. (Thank you Asif.)  plus making closingConnection synchronized as Dan suggested.  I am still kind of fuzzy on what I have to check to make sure PooledConnection, XAConnection and XAResource methods behave correctly, but am trying to figure that out. Any tips would be greatly appreciated.  suites.All passed, running derbyall now.&lt;/p&gt;</comment>
                            <comment id="12563238" author="mamtas" created="Mon, 28 Jan 2008 18:39:24 +0000"  >&lt;p&gt;The ConnectionEventListner javadoc for connectionClosed says&lt;br/&gt;
          Notifies this ConnectionEventListener that the application has called the method close on its representation of a pooled connection.&lt;/p&gt;

&lt;p&gt;It does not say whether the notification has been sent after the pooled connection is marked closed or before the pooled connection will be marked closed so it seems like it will be ok for us to mark currentConnectionHandle as null and then send the notifications.&lt;/p&gt;</comment>
                            <comment id="12563270" author="djd" created="Mon, 28 Jan 2008 20:08:25 +0000"  >&lt;p&gt;Section 11.2 &amp;amp; 12.5 of JDBC 4 specification indicate that the connection can be returned to the pool when the ConnectionEventListener.connectionClosed() is called, so the pooled connection must be (as Asif suggested) set into the correct state before the callback is made.&lt;/p&gt;</comment>
                            <comment id="12563273" author="djd" created="Mon, 28 Jan 2008 20:18:09 +0000"  >&lt;p&gt;There&apos;s some potential for minor cleanup here - notifyClose() is synchronized and only ever called from closingConnection.&lt;br/&gt;
So with the current patch the synchronization will be obtained twice. Merging the two methods into one would avoid this and the indication that notifyClose() can be called from other code.&lt;/p&gt;</comment>
                            <comment id="12563274" author="kmarsden" created="Mon, 28 Jan 2008 20:18:10 +0000"  >&lt;p&gt;Thanks Dan and Mamta for the input. Dan could you elaborate on your comment:&lt;br/&gt;
&quot;Since the listeners can get a handed to the PooledConnection or XAConnection &amp;amp; XAResource we would just have to ensure that any method they can call on those interfaces behaves correctly.&quot; &lt;/p&gt;

&lt;p&gt;What exactly do I need to be checking?&lt;/p&gt;
</comment>
                            <comment id="12563276" author="djd" created="Mon, 28 Jan 2008 20:27:14 +0000"  >&lt;p&gt;&amp;gt;&amp;gt; &quot;Since the listeners can get a handed to the PooledConnection or XAConnection &amp;amp; XAResource we would just have to ensure that any method they can call on those interfaces behaves correctly.&quot;&lt;br/&gt;
&amp;gt; What exactly do I need to be checking?&lt;/p&gt;

&lt;p&gt;Nothing. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s covered by my recent comment which probably was posted while you were writing yours.&lt;/p&gt;

&lt;p&gt;Sections 11.2 and 12.5 state that at the time of the callback they can return the PooledConnection to the pool for re-use, thus at time of the callback the PooledConnection must be disassociated from its previous logical connection. Note the logical connection is being closed, not the pooled connection.&lt;/p&gt;

&lt;p&gt;The buggy code passes the PooledConnection to the callbacks in a state where it is still associated to the just closed logical connection, my original concern was what is the expected state of the PooledConnection for the listeners: still associated or disassociated. I hadn&apos;t researched the details then.&lt;/p&gt;</comment>
                            <comment id="12563309" author="kmarsden" created="Mon, 28 Jan 2008 22:04:03 +0000"  >&lt;p&gt;Attached is a revised patch rolling notifyClose into closingConnection().derby-2142_diff2.txt&lt;/p&gt;</comment>
                            <comment id="12563319" author="djd" created="Mon, 28 Jan 2008 22:32:59 +0000"  >&lt;p&gt;Patch 2 seems to have lost the synchronization on the closingConnection() method.&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;This comment here is lacking the &quot;why&quot;, it&apos;s really just describing the code so it&apos;s not adding any value.&lt;br/&gt;
Why it needs to be before is the important information here.&lt;/p&gt;

&lt;p&gt;+		//&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2142&quot; title=&quot;NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2142&quot;&gt;&lt;del&gt;DERBY-2142&lt;/del&gt;&lt;/a&gt; - Null out the connection handle BEFORE notifying listeners.&lt;br/&gt;
 		currentConnectionHandle = null;&lt;/p&gt;


</comment>
                            <comment id="12563333" author="kmarsden" created="Mon, 28 Jan 2008 23:19:44 +0000"  >&lt;p&gt;Thanks Dan for catching that!  I was reeditting with emacs to get the white space right and botched the change #&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I sure would feel better if I had a repro for this.&lt;br/&gt;
running tests now on derby-2142_diff3.txt&lt;/p&gt;</comment>
                            <comment id="12563398" author="djd" created="Tue, 29 Jan 2008 06:06:16 +0000"  >&lt;p&gt;I added a test fixture DataSourceTest.testPooledReuseOnClose that covers this bug. Failed before revision 616141 and passes now on embedded.&lt;/p&gt;

&lt;p&gt;It fails for network client, I didn&apos;t investigate that, just didn&apos;t run the test in that environment. Either a new bug should be added or it should be fixed under this bug.&lt;/p&gt;

&lt;p&gt;It would be good if you could make this code comment have value (see earlier issue comment):&lt;/p&gt;

&lt;p&gt;+ //&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2142&quot; title=&quot;NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2142&quot;&gt;&lt;del&gt;DERBY-2142&lt;/del&gt;&lt;/a&gt; - Null out the connection handle BEFORE notifying listeners. &lt;/p&gt;

&lt;p&gt;adding the why might help ensure the code doesn&apos;t get re-ordered in the future and explain it for anyone reading the code.&lt;/p&gt;
</comment>
                            <comment id="12563472" author="kristwaa" created="Tue, 29 Jan 2008 11:16:07 +0000"  >&lt;p&gt;Thanks for adding the test fixture Dan.&lt;/p&gt;

&lt;p&gt;I think the client driver might have the same problem as the embedded driver. I&apos;m currently working in that area of the code, and I&apos;ll investigate it.&lt;br/&gt;
If required, I&apos;d like to attach a patch to this issue.&lt;/p&gt;</comment>
                            <comment id="12563658" author="kmarsden" created="Tue, 29 Jan 2008 20:45:32 +0000"  >&lt;p&gt;Hi Dan,&lt;/p&gt;

&lt;p&gt;Thanks for the fixture.  Here is the revised comment, gleaned from the comments in this issue and my understanding of it.&lt;/p&gt;


&lt;p&gt;		//&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2142&quot; title=&quot;NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2142&quot;&gt;&lt;del&gt;DERBY-2142&lt;/del&gt;&lt;/a&gt;-Null out the connection handle BEFORE notifying listeners.&lt;br/&gt;
		//At time of the callback the PooledConnection must be &lt;br/&gt;
		//disassociated from its previous logical connection.&lt;br/&gt;
		//If not, there is a risk that the Pooled&lt;br/&gt;
		//Connection could be returned to the pool, ready for pickup by a &lt;br/&gt;
		//new thread. This new thread then might obtain a java.sql.Connection &lt;br/&gt;
		//whose reference might get assigned to the currentConnectionHandle &lt;br/&gt;
		//field, meanwhile the previous thread completes the close making &lt;br/&gt;
		//the newly assigned currentConnectionHandle null, resulting in an NPE.&lt;/p&gt;

</comment>
                            <comment id="12564406" author="kmarsden" created="Thu, 31 Jan 2008 17:02:09 +0000"  >&lt;p&gt;I ported the embedded fix to 10.3, 10.2 and 10.1.  If the client fix won&apos;t be going to all those branches, it might make sense to make a new issue for that.&lt;/p&gt;</comment>
                            <comment id="12564914" author="kmarsden" created="Fri, 1 Feb 2008 19:59:04 +0000"  >&lt;p&gt;Resolving this issue for embedded. Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3379&quot; title=&quot;&amp;quot;No Current connection&amp;quot; on PooledConnection.getConnection() if pooled connection is reused during connectionClosed processing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3379&quot;&gt;&lt;del&gt;DERBY-3379&lt;/del&gt;&lt;/a&gt; for client.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12387665">DERBY-3379</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374106" name="derby-2142_diff.txt" size="651" author="kmarsden" created="Sat, 26 Jan 2008 00:39:07 +0000"/>
                            <attachment id="12374222" name="derby-2142_diff2.txt" size="1806" author="kmarsden" created="Mon, 28 Jan 2008 22:04:03 +0000"/>
                            <attachment id="12374227" name="derby-2142_diff3.txt" size="1819" author="kmarsden" created="Mon, 28 Jan 2008 23:19:44 +0000"/>
                            <attachment id="12374107" name="derby-2142_stat.txt" size="69" author="kmarsden" created="Sat, 26 Jan 2008 00:39:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Dec 2006 21:22:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22908</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mtz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37517</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>