<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6213/DERBY-6213.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6213] Deprecate support for Java 5 and CDC</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6213</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The developer community has approved the proposal to sunset support for Java 5 and CDC: &lt;a href=&quot;http://apache-database.10148.n7.nabble.com/VOTE-Sunsetting-support-for-Java-5-and-CDC-td129832.html#a129925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-database.10148.n7.nabble.com/VOTE-Sunsetting-support-for-Java-5-and-CDC-td129832.html#a129925&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This issue tracks a number of tasks needed to implement this proposal:&lt;/p&gt;

&lt;p&gt;I) Remove build support for Java 5 and CDC.&lt;/p&gt;

&lt;p&gt;II) Purge user doc references to Java 5, CDC, and the JDBC 4 DataSources.&lt;/p&gt;

&lt;p&gt;III) Remove the JDBC 4 version of the public api from the published javadoc. The recently introduced CP2 DataSources would need to migrate to the JDBC 3 version of the published javadoc. The JDBC 4 versions of the DataSources would still exist, but they would be vacuous extensions of their JDBC 3 counterparts.&lt;/p&gt;

&lt;p&gt;IV) On the wiki, document our expectation that maintenance releases will support the same platforms as the original feature release cut from their branch.&lt;/p&gt;

&lt;p&gt;V) Decide what to do with the SimpleMobileApp. Probably we want to just remove this demo since its purpose is to show how to run Derby on the deprecated CDC platform.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646087">DERBY-6213</key>
            <summary>Deprecate support for Java 5 and CDC</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 May 2013 19:29:56 +0100</created>
                <updated>Wed, 21 Jan 2015 00:23:32 +0000</updated>
                            <resolved>Wed, 5 Feb 2014 08:37:32 +0000</resolved>
                                    <version>10.11.1.1</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>Build tools</component>
                    <component>Documentation</component>
                    <component>Javadoc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13649932" author="rhillegas" created="Mon, 6 May 2013 19:07:15 +0100"  >&lt;p&gt;Attaching derby-6213-01-aa-collapsePublishedAPI.diff. This patch removes the JDBC4 public javadoc. This makes the following changes to address task (III):&lt;/p&gt;

&lt;p&gt;1) Adjusts the top level build script to produce one version of the public api and removes the separate jdbc3 and jdbc4 forks.&lt;/p&gt;

&lt;p&gt;2) Adds the CP2 DataSources to the single version of the public api.&lt;/p&gt;

&lt;p&gt;3) Adjusts the top level index.html to link to the single version of the public api. This index.html is the landing page included in release distributions.&lt;/p&gt;

&lt;p&gt;I have verified that the javadoc generates correctly. Note that we will need to rewrite the javadoc headers for the DataSource implementations once we collapse the JDBC4 methods into the JDBC3 implementations. I have also generated a dummy release and verified that the landing page links correctly to the single version of the public api.&lt;/p&gt;

&lt;p&gt;When we commit this patch, we&apos;ll need to adjust the Documentation tab on the Derby website so that the alpha version of the public api links to the single version rather than separate jdbc3 and jdbc4 forks.&lt;/p&gt;

&lt;p&gt;If this patch is committed, then the alpha public api will not describe the current state of the trunk. That is because the DataSources themselves have not been collapsed yet and their javadoc headers haven&apos;t been rewritten.&lt;/p&gt;

&lt;p&gt;I think it&apos;s safe to commit these changes despite this discrepancy between the actual state of the trunk and what the Documentation tab would say. However, I&apos;ll hold off to give people an opportunity to object.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       build.xml&lt;/p&gt;

&lt;p&gt;(1)&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;D       tools/javadoc/publishedapi_jdbc3.ant&lt;br/&gt;
D       tools/javadoc/publishedapi_jdbc4.ant&lt;br/&gt;
A       tools/javadoc/publishedapi_jdbc.ant&lt;/p&gt;

&lt;p&gt;(2)&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       index.html&lt;/p&gt;

&lt;p&gt;(3)&lt;/p&gt;</comment>
                            <comment id="13650763" author="rhillegas" created="Tue, 7 May 2013 13:30:15 +0100"  >&lt;p&gt;Committed derby-6213-01-aa-collapsePublishedAPI.diff at subversion revision 1479881.&lt;/p&gt;</comment>
                            <comment id="13650879" author="rhillegas" created="Tue, 7 May 2013 15:22:50 +0100"  >&lt;p&gt;Attaching derby-6213-02-aa-org.apache.derby.vti.diff. This patch converts the org.apache.derby.vti package to Java 6. I am running tests now.&lt;/p&gt;

&lt;p&gt;When I check this in, it&apos;s likely that we will begin to see failures in the test runs on Java 5 and CDC. This will be a sign that we need to stop running the trunk tests on those platforms.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/vti/build.xml&lt;/p&gt;

&lt;p&gt;Simplified the build script.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/vti/ForeignTableVTI.java&lt;/p&gt;

&lt;p&gt;Parameterized a HashMap usage.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;D       java/engine/org/apache/derby/vti/VTITemplateBase.java&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;

&lt;p&gt;Merged VTITemplateBase into VTITemplate. The first class was added as a trick to help people write VTIs and table functions for Java 5 and CDC.&lt;/p&gt;</comment>
                            <comment id="13651019" author="rhillegas" created="Tue, 7 May 2013 17:27:43 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-02-aa-org.apache.derby.vti.diff. Committed at subversion revision 1479972.&lt;/p&gt;</comment>
                            <comment id="13651135" author="rhillegas" created="Tue, 7 May 2013 19:17:37 +0100"  >&lt;p&gt;Attaching derby-6213-03-aa-misc.diff. This patch converts the following packages to Java 6:&lt;/p&gt;

&lt;p&gt;org.apache.derby.tools&lt;br/&gt;
org.apache.derby.authentication&lt;br/&gt;
org.apache.derby.agg&lt;br/&gt;
org.apache.derby.diag&lt;br/&gt;
org.apache.derby.database&lt;br/&gt;
org.apache.derby.catalog...&lt;br/&gt;
org.apache.derby.drda&lt;/p&gt;

&lt;p&gt;The biggest change involved adding dummy implementations of Statement/PreparedStatement methods to UpdatableVTITemplate so that TriggerNewTransitionRows would compile.&lt;/p&gt;

&lt;p&gt;I am running tests now.&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/tools/PlanExporter.java&lt;br/&gt;
M       java/tools/org/apache/derby/tools/SignatureChecker.java&lt;br/&gt;
M       java/tools/org/apache/derby/tools/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/authentication/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/agg/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/vti/UpdatableVTITemplate.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/LockTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorMessages.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementCache.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementDuration.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorLogReader.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/database/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/TriggerNewTransitionRows.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/build.xml&lt;br/&gt;
M       java/drda/org/apache/derby/drda/NetServlet.java&lt;br/&gt;
M       java/drda/org/apache/derby/drda/build.xml&lt;/p&gt;</comment>
                            <comment id="13651236" author="rhillegas" created="Tue, 7 May 2013 20:53:51 +0100"  >&lt;p&gt;Attaching derby-6213-04-aa-vtiPackageOnJava7.diff. This patch fixes some compilation problems with derby-6213-02-aa-org.apache.derby.vti.diff when compiling on Java 7. Committed at subversion revision 1480052.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/vti/ForeignTableVTI.java&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTITemplate.java&lt;/p&gt;</comment>
                            <comment id="13651274" author="knutanders" created="Tue, 7 May 2013 21:39:01 +0100"  >&lt;p&gt;Maybe VTITemplate.notImplemented() should return an SQLFeatureNotSupportedException rather than a plain SQLException now?&lt;/p&gt;</comment>
                            <comment id="13651849" author="rhillegas" created="Wed, 8 May 2013 13:34:10 +0100"  >&lt;p&gt;Thanks, Knut. That&apos;s a good idea. I will roll that onto a future submission.&lt;/p&gt;</comment>
                            <comment id="13651852" author="rhillegas" created="Wed, 8 May 2013 13:38:31 +0100"  >&lt;p&gt;Attaching derby-6213-03-ab-misc.diff. This slightly changes the previous version of the patch. The previous version did not compile cleanly on Java 7. The new version compiles cleanly on Java 6-8. Tests passed cleanly on the previous version. Committed derby-6213-03-ab-misc.diff at subversion revision 1480251.&lt;/p&gt;</comment>
                            <comment id="13651997" author="rhillegas" created="Wed, 8 May 2013 16:42:28 +0100"  >&lt;p&gt;Attaching derby-6213-05-ab-misc2.diff. This patch converts the following packages to Java 6:&lt;/p&gt;

&lt;p&gt;org.apache.derby.io&lt;br/&gt;
org.apache.derby.iapi/types&lt;br/&gt;
most of the packages under org.apache.derby.iapi.services&lt;/p&gt;

&lt;p&gt;The patch introduces a temporary lint warning in the build output. This is the first of what I expect will be a number of lint warnings caused by unchecked operations. I have come to the conclusion that the next step will be to convert the rest of the code to Java 6 and live with the lint warnings for a while as we clean up the actual code which causes the compiler to complain about unchecked operations.&lt;/p&gt;

&lt;p&gt;I am running tests now.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/services/property/PropertyValidation.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/info/JVMInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/classfile/ClassHolder.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/classfile/ClassInvestigator.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/classfile/ClassEnumeration.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/classfile/MemberTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/classfile/Attributes.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/locks/ShExLockable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/locks/Lockable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTITemplate.java&lt;br/&gt;
M       java/engine/org/apache/derby/io/build.xml&lt;/p&gt;</comment>
                            <comment id="13652086" author="rhillegas" created="Wed, 8 May 2013 18:25:50 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-05-ab-misc2.diff. Committed at subversion revision 1480365.&lt;/p&gt;</comment>
                            <comment id="13653097" author="rhillegas" created="Thu, 9 May 2013 20:46:58 +0100"  >&lt;p&gt;Attaching derby-6213-06-aa-convertProductToJava6.diff. This patch converts the product build to Java 6. I will run tests.&lt;/p&gt;

&lt;p&gt;We will need to decide what to do with SimpleMobileApp demo. It was supposed to show how to run Derby on a CDC platform. I think that we should just remove the demo altogether, but I will wait to see if anyone objects.&lt;/p&gt;

&lt;p&gt;With this patch, the build now produces ten instances of the following warning. We will need to clean these up in follow-on patches:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: Some input files use unchecked or unsafe operations.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: Recompile with -Xlint:unchecked for details.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/build.xml&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/crypto/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/io/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/db/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/store/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/reference/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/osgi/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/db/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/mbeans/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/security/build.xml&lt;br/&gt;
M       java/drda/org/apache/derby/impl/drda/build.xml&lt;/p&gt;

&lt;p&gt;1) Converts the build scripts to use Java 6, eliminating the separate targets for CDC and Java 5 classes.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;D       java/engine/org/apache/derby/jdbc/Driver169.java&lt;br/&gt;
D       java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java&lt;br/&gt;
M       java/tools/org/apache/derby/tools/SignatureChecker.java&lt;br/&gt;
M       java/demo/simplemobile/SimpleMobileApp.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/tools/RollBackWrappingWhenFailOnImportTest.java&lt;br/&gt;
M       tools/jar/extraDBMSclasses.properties&lt;br/&gt;
M       java/engine/org/apache/derby/modules.properties&lt;/p&gt;

&lt;p&gt;2) Removes the CDC DataSource and Driver.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement30.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement30.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSetMetaData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/InternalDriver.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/Driver20.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/Driver30.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbedXAConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/LockTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorMessages.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/SpaceTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementCache.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ContainedRoles.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementDuration.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/TransactionTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorLogReader.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/GetProcedureColumns.java&lt;/p&gt;

&lt;p&gt;3) Makes a number of 1.4 and older JDBC implementations abstract. Over time, we can further clean this up by collapsing the *20, *30, and *40 classes single implementations.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/stubs/jdbc4/javax/sql/ConnectionEvent.java&lt;/p&gt;

&lt;p&gt;4) Corrects an error in one of the JDBC stubs.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/error/ExceptionUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/DoubleProperties.java&lt;/p&gt;

&lt;p&gt;5) Cleans up a couple generics issues.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/load/ImportBlob.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ImportClob.java&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTIMetaDataTemplate.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedBaseDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedDriver.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/AutoloadedDriver.java&lt;/p&gt;

&lt;p&gt;6) Adds some Java 6/7 methods to some classes in order to get them to build under Java 6/7.&lt;/p&gt;

&lt;p&gt;----------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/io/DirFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/JarDBFile.java&lt;/p&gt;

&lt;p&gt;7) Fixes some code to not call deprecated methods.&lt;/p&gt;</comment>
                            <comment id="13653254" author="myrna" created="Thu, 9 May 2013 22:37:22 +0100"  >&lt;p&gt;I think removing the simplemobileapp demo (from trunk) is the right thing to do. It&apos;s available in the older branches and releases if anyone wants it for some reason.&lt;/p&gt;


</comment>
                            <comment id="13653596" author="knutanders" created="Fri, 10 May 2013 08:00:52 +0100"  >&lt;p&gt;After derby-6213-05-ab-misc2.diff I saw that a build job started failing when compiling SqlXmlUtil.java:&lt;/p&gt;

&lt;p&gt;compile_types:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 67 source files to /code/derby/trunk/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /code/derby/trunk/java/engine/org/apache/derby/iapi/types/SqlXmlUtil.java:47: error: package org.w3c.dom.xpath does not exist&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import org.w3c.dom.xpath.XPathEvaluator;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                         ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /code/derby/trunk/java/engine/org/apache/derby/iapi/types/SqlXmlUtil.java:48: error: package org.w3c.dom.xpath does not exist&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import org.w3c.dom.xpath.XPathExpression;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                         ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /code/derby/trunk/java/engine/org/apache/derby/iapi/types/SqlXmlUtil.java:49: error: package org.w3c.dom.xpath does not exist&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import org.w3c.dom.xpath.XPathResult;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                         ^&lt;br/&gt;
(...)&lt;/p&gt;

&lt;p&gt;This seems to happen only if I build with JDK 7, have j15lib set explicitly, and j16lib is NOT set.&lt;/p&gt;

&lt;p&gt;The patch in question removed the separate build target for SqlXmlUtil which put $&lt;/p&gt;
{xmlApis} on the class path when compiling this file. ${xmlApis}
&lt;p&gt; contains some interfaces that are not part of the Java SE specification. The interfaces happen to be included in Oracle JDK 6 and 7 (and, I think, in OpenJDK and IBM&apos;s SDK as well), which is why it works when java16compile.classpath is based on libraries from Java 6 or newer. But even if this particular build problem will probably go away once PropertySetter is updated to ignore j15lib, we may want to reintroduce the separate build target for SqlXmlUtil with $&lt;/p&gt;
{xmlApis}
&lt;p&gt; on the class path in order to&lt;/p&gt;

&lt;p&gt;a) make sure it compiles on JDK implementations that don&apos;t include the non-standard XML interfaces&lt;/p&gt;

&lt;p&gt;b) make it less likely that dependencies on the non-standard interfaces creep into other classes&lt;/p&gt;</comment>
                            <comment id="13654400" author="rhillegas" created="Fri, 10 May 2013 12:58:59 +0100"  >&lt;p&gt;Thanks for that analysis, Knut. Could you make the necessary changes to revive that build target? I&apos;m busy tracking down issues with derby-6213-06-aa-convertProductToJava6.diff. More hands on this conversion effort will be much appreciated. Thanks.&lt;/p&gt;</comment>
                            <comment id="13654426" author="knutanders" created="Fri, 10 May 2013 13:42:50 +0100"  >&lt;p&gt;Yes, I&apos;ll take a look at reviving the xml build target.&lt;/p&gt;</comment>
                            <comment id="13654458" author="knutanders" created="Fri, 10 May 2013 14:14:31 +0100"  >&lt;p&gt;Rick, which sub-directories do you think it would be safe for others to start working on without interfering with what you are or will soon be working on? Thanks.&lt;/p&gt;</comment>
                            <comment id="13654501" author="knutanders" created="Fri, 10 May 2013 15:17:09 +0100"  >&lt;p&gt;Attaching revive-sqlxmlutil-target.diff which revives the target that adds xml-apis.jar to the compile classpath.&lt;/p&gt;

&lt;p&gt;I&apos;ve verified that it compiles cleanly both with and without ant.properties pointing to various JDKs, including the failing case with j15lib defined and j16lib not defined.&lt;/p&gt;

&lt;p&gt;The patch also adds some type parameters to SqlXmlUtil.java to silence compiler warnings, and it removes some reflection magic that&apos;s only needed to make SqlXmlUtil work on Java 1.4 and CDC.&lt;/p&gt;

&lt;p&gt;Running regression tests.&lt;/p&gt;</comment>
                            <comment id="13654751" author="rhillegas" created="Fri, 10 May 2013 20:19:20 +0100"  >&lt;p&gt;I am abandoning the previous patch in favor of splitting it up into a series of smaller patches. There are too many speed bumps with the big patch.&lt;/p&gt;

&lt;p&gt;Attaching derby-6213-06-ab-removeCDC.diff. This patch carves out item (2) and part of item (3) from the previous patch, removing the CDC DataSource and Driver, and converting the diagnostic VTIs to use the JDBC 4 metadata rather than the JDBC 3 metadata. I will run tests.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/tools/SignatureChecker.java&lt;br/&gt;
M       java/stubs/jdbc4/javax/sql/ConnectionEvent.java&lt;br/&gt;
M       java/demo/simplemobile/SimpleMobileApp.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/build.xml&lt;br/&gt;
D       java/engine/org/apache/derby/jdbc/Driver169.java&lt;br/&gt;
D       java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/modules.properties&lt;br/&gt;
M       java/engine/org/apache/derby/diag/LockTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorMessages.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/SpaceTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementCache.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ContainedRoles.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/StatementDuration.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/TransactionTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/diag/ErrorLogReader.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/tools/RollBackWrappingWhenFailOnImportTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java&lt;br/&gt;
M       tools/jar/extraDBMSclasses.properties&lt;/p&gt;</comment>
                            <comment id="13654756" author="rhillegas" created="Fri, 10 May 2013 20:23:17 +0100"  >&lt;p&gt;Thanks for that feedback, Myrna.&lt;/p&gt;

&lt;p&gt;Knut: I think I need to chunk in the pieces of derby-6213-06-aa-convertProductToJava6.diff before we can start dividing up the product packages to remove the lint warnings. Unfortunately, I&apos;m hitting more speedbumps than I expected.&lt;/p&gt;

&lt;p&gt;In the meantime, however, I think that a parallel effort could be started on the test classes: first converting the test build to Java 6, then dividing up the test packages to remove lint warnings.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13654827" author="knutanders" created="Fri, 10 May 2013 22:02:19 +0100"  >&lt;p&gt;Thanks, Rick. I can make a first stab at the tests.&lt;/p&gt;

&lt;p&gt;I&apos;ve committed the revive-sqlxmlutil-target.diff patch with revision 1481187.&lt;/p&gt;</comment>
                            <comment id="13655101" author="rhillegas" created="Sat, 11 May 2013 02:40:42 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-06-ab-removeCDC.diff on Java 8. Committed at subversion revision 1481248.&lt;/p&gt;</comment>
                            <comment id="13655246" author="rhillegas" created="Sat, 11 May 2013 14:06:30 +0100"  >&lt;p&gt;Attaching derby-6213-07-aa-restOfProductExceptJDBC.diff. This is the rest of the derby-6213-06-aa-convertProductToJava6.diff patch except for the JDBC packages. I will run tests.&lt;/p&gt;

&lt;p&gt;After applying this patch, I get 8 instances of the lint warning when I build Derby:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: Some input files use unchecked or unsafe operations.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Note: Recompile with -Xlint:unchecked for details.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/impl/tools/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/crypto/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/io/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/db/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/error/ExceptionUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/store/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/DoubleProperties.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/reference/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/osgi/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ImportBlob.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ImportClob.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/db/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/DirFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/JarDBFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/vti/VTIMetaDataTemplate.java&lt;br/&gt;
M       java/engine/org/apache/derby/mbeans/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/security/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/GetProcedureColumns.java&lt;br/&gt;
M       java/drda/org/apache/derby/impl/drda/build.xml&lt;/p&gt;</comment>
                            <comment id="13655318" author="rhillegas" created="Sat, 11 May 2013 18:20:24 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-07-aa-restOfProductExceptJDBC.diff on Java 8. Committed at subversion revision 1481379.&lt;/p&gt;</comment>
                            <comment id="13655882" author="knutanders" created="Mon, 13 May 2013 11:04:01 +0100"  >&lt;p&gt;Attaching testcode.diff which makes the test code compile against the Java 6 libraries. It adds quite a few new instances of unchecked warnings, and also some deprecation warnings, that should be cleaned up later.&lt;/p&gt;

&lt;p&gt;Almost all the test code was compiled against $&lt;/p&gt;
{compile.classpath}
&lt;p&gt;, which is supposed to point to the lowest supported platform. I changed compile.classpath to point to java16compile.classpath rather than jsr169compile.classpath, as Java 6 is now the lowest supported platform on trunk.&lt;/p&gt;

&lt;p&gt;The compile.classpath property is not used much outside of the tests. However, it is used in one build target for org.apache.derby.iapi.jdbc to ensure that the classes work on JSR-169, and that target currently fails when it is compiled against Java 6 libraries. I therefore changed the target to use jsr169compile.classpath explicitly for now. I hope that doesn&apos;t interfere too much with the changes Rick is doing in the same area.&lt;/p&gt;

&lt;p&gt;Most changes are in build.xml files only. Some exceptions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Calls to ResultSet.updateBlob(int,Blob) and ResultSet.updateClob(int,Clob) are ambiguous if the second argument is an untyped null, because JDBC 4 introduced ResultSet.updateBlob(int,InputStream) and ResultSet.updateClob(int,Reader). Had to add some casts so that the compiler would know which method to call.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test classes that implemented their own Blob, Clob or ResultSet classes needed to add the new methods introduced in JDBC 4.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve started the regression tests.&lt;/p&gt;</comment>
                            <comment id="13655925" author="knutanders" created="Mon, 13 May 2013 13:22:29 +0100"  >&lt;p&gt;Regression tests ran cleanly. Committed testcode.diff to trunk with revision 1481818.&lt;/p&gt;</comment>
                            <comment id="13655948" author="rhillegas" created="Mon, 13 May 2013 14:12:52 +0100"  >&lt;p&gt;Thanks, Knut. I have just sync&apos;d with your latest changes. I see the deprecation warnings. They look like the ones I cleaned up in DirFile and JarDBFile, so I&apos;m going to clean them up in my next patch. There was indeed a conflict in the build file for org.apache.derby.iapi.jdbc. I am going with my change (changing the compile classpath to java16compile.classpath) and will see what happens. I&apos;m also seeing the following error, which I plan to clean up in my next patch too:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/RollBackWrappingWhenFailOnImportTest.java:51: error: RollBackWrappingWhenFailOnImportTest.MockInternalDriver.MockConnectionFailWhenRollBack is not abstract and does not override abstract method setClientInfo(String,String) in Connection&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         public class MockConnectionFailWhenRollBack extends EmbedConnection {&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13655986" author="rhillegas" created="Mon, 13 May 2013 15:07:20 +0100"  >&lt;p&gt;After making those changes, other warnings and errors surfaced in the build. I have cleaned those up in my next patch. At this point I have a patch whose build only produces lint warnings again on Java 8. I see deprecation warnings when I build on Java 6 and Java 7 but I&apos;m not going to tackle them now. I&apos;m going to stop pulling on the ball of yarn for a while. I&apos;m going to move on to tests.&lt;/p&gt;

&lt;p&gt;Could you do me a favor and not checkin more changes until I get my current patch in? We may have to leap-frog one another for a while, to give each other the opportunity to merge with one another&apos;s changes. Thanks.&lt;/p&gt;

&lt;p&gt;These are the additional warnings and errors I cleaned up:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java:64: error: unreported exception SQLException; must be caught or declared to be thrown&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         int dmMajor = dm.getDriverMajorVersion();&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                               ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java:79: error: unreported exception SQLException; must be caught or declared to be thrown&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         int dmMinor = dm.getDriverMinorVersion();&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/demo/CheckToursDBTest.java:185: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked conversion&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             AccessController.doPrivileged(new PrivilegedExceptionAction() {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                           ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   required: PrivilegedExceptionAction&amp;lt;T&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   found:    &amp;lt;anonymous PrivilegedExceptionAction&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where T is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     T extends Object declared in method &amp;lt;T&amp;gt;doPrivileged(PrivilegedExceptionAction&amp;lt;T&amp;gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/demo/CheckToursDBTest.java:185: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked method invocation: method doPrivileged in class AccessController is applied to given types&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             AccessController.doPrivileged(new PrivilegedExceptionAction() {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                          ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   required: PrivilegedExceptionAction&amp;lt;T&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   found:     &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/demo/CheckToursDBTest.java:185: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked conversion&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             AccessController.doPrivileged(new PrivilegedExceptionAction() {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                           ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   required: PrivilegedExceptionAction&amp;lt;T&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   found:    &amp;lt;anonymous PrivilegedExceptionAction&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where T is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     T extends Object declared in method &amp;lt;T&amp;gt;doPrivileged(PrivilegedExceptionAction&amp;lt;T&amp;gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/demo/CheckToursDBTest.java:185: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked method invocation: method doPrivileged in class AccessController is applied to given types&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             AccessController.doPrivileged(new PrivilegedExceptionAction() {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                          ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   required: PrivilegedExceptionAction&amp;lt;T&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   found: &amp;lt;anonymous PrivilegedExceptionAction&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where T is a type-variable:&lt;br/&gt;
&amp;lt;anonymous PrivilegedExceptionAction&amp;gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where T is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     T extends Object declared in method &amp;lt;T&amp;gt;doPrivileged(PrivilegedExceptionAction&amp;lt;T&amp;gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 2 warnings&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:94: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             CONNECTIONS.add(con);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                            ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:111: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         STATEMENTS.add(stmt);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                       ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:113: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             CONNECTIONS.add(con);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                            ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:131: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         STATEMENTS.add(pStmt);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                       ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:133: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             CONNECTIONS.add(con);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                            ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java:231: warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;unchecked&amp;#93;&lt;/span&gt; unchecked call to add(E) as a member of the raw type ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         DATABASES.add(dbName + userAttr);&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                      ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where E is a type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     E extends Object declared in class ArrayList&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 6 warnings&lt;/p&gt;

</comment>
                            <comment id="13656003" author="knutanders" created="Mon, 13 May 2013 15:34:36 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I&apos;ll hold off checking in more changes until you&apos;ve got your next patch in. I have a patch almost ready that cleans up unchecked conversion warnings in org.apache.derbyTesting.junit package, as well as the deprecation warnings in the tests. It sounds as if you may have fixed some those as well, so I&apos;ll just wait and see what the overlap is.&lt;/p&gt;</comment>
                            <comment id="13656086" author="rhillegas" created="Mon, 13 May 2013 17:36:16 +0100"  >&lt;p&gt;Attaching derby-6213-08-ab-jdbc.diff. This applies the last (JDBC) bits of the derby-6213-06-aa-convertProductToJava6.diff patch. In addition, this patch incorporates the merge with Knut&apos;s last checkin. Tests passed cleanly for me when building the patch against Java 8 and running the result on Java 8. Before committing this patch, I want to use the Java 8 build to run the tests on Java 6 and 7 also.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement30.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement30.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSetMetaData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnection40.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/RecordId.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedBaseDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedDriver.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/InternalDriver.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/Driver20.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/AutoloadedDriver.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/Driver30.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbedXAConnection.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/NativeAuthenticationServiceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/dbjarUtil.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/demo/CheckToursDBTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/demo/build.xml&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC4FromJDBC3DataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceSerializationTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoAPITest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeClassLoader.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/build.xml&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeTrajectoryTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/MemoryDbManager.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/build.xml&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/junit/SupportFilesSetup.java&lt;/p&gt;</comment>
                            <comment id="13656275" author="rhillegas" created="Mon, 13 May 2013 20:34:37 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-08-ab-jdbc.diff on Java 6 and Java 7 too. Committed at subversion revision 1482044. Your turn, Knut.&lt;/p&gt;</comment>
                            <comment id="13656277" author="rhillegas" created="Mon, 13 May 2013 20:38:11 +0100"  >&lt;p&gt;I think that we could start carving up the product build targets in order to remove the lint warnings. Here are scripts with build targets which are generating lint diagnostics:&lt;/p&gt;

&lt;p&gt;trunk/java/engine/org/apache/derby/security/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/iapi/types/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/services/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/io/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/store/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/db/build.xml&lt;br/&gt;
trunk/java/engine/org/apache/derby/impl/load/build.xml&lt;/p&gt;

&lt;p&gt;For the moment, I&apos;m going to claim all of these scripts since I don&apos;t have a sense of how twisted the ball of yarn is yet.&lt;/p&gt;</comment>
                            <comment id="13656406" author="knutanders" created="Mon, 13 May 2013 22:27:54 +0100"  >&lt;p&gt;Thanks, Rick. I&apos;ve resolved the conflict and posted a patch to clean up the warnings over at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5840&quot; title=&quot;Clean up compiler warnings introduced by using Java 5 language features&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5840&quot;&gt;&lt;del&gt;DERBY-5840&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After the 1482044 commit, I see that building trunk fails in my environment if j15lib is defined:&lt;/p&gt;

&lt;p&gt;compile_jdbc3:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 17 source files to /code/derby/trunk/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /code/derby/trunk/java/engine/org/apache/derby/jdbc/AutoloadedDriver.java:29: error: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import java.sql.SQLFeatureNotSupportedException;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   symbol:   class SQLFeatureNotSupportedException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   location: package java.sql&lt;/p&gt;

&lt;p&gt;It works fine if I remove j15lib from ant.properties.&lt;/p&gt;</comment>
                            <comment id="13656896" author="knutanders" created="Tue, 14 May 2013 09:41:11 +0100"  >&lt;p&gt;The attached buildbreak.diff patch fixes the broken build by removing the separate JDBC 3 target in java/engine/org/apache/derby/jdbc/build.xml. Since the classes compiled by that target now use classes only found in JDBC 4, they need to be compiled using the JDBC 4 target.&lt;/p&gt;

&lt;p&gt;Now I can build trunk both with and without j15lib defined.&lt;/p&gt;

&lt;p&gt;Committed revision 1482252.&lt;/p&gt;</comment>
                            <comment id="13656902" author="knutanders" created="Tue, 14 May 2013 09:46:40 +0100"  >&lt;p&gt;I&apos;ll take a look at changing the build target for the network client. I don&apos;t expect any interference between that target and those Rick are looking at in the engine. Also, the client is already at Java 5, so most of the work getting it to compile cleanly should be done already.&lt;/p&gt;</comment>
                            <comment id="13657086" author="knutanders" created="Tue, 14 May 2013 15:31:23 +0100"  >&lt;p&gt;The attached patch, client.diff, changes the build target for the network client so that it is built against Java 6 instead of Java 5. Since the base level now supports JDBC 4, all functionality that used to be in *40 classes, has been moved to the base classes and the specialized *40 classes have been removed. (One exception: ClientDriver40 is preserved for backward compatibility, as that class was part of the public API in Derby 10.10.) Some tests also needed updates because they checked the class names of the returned JDBC objects.&lt;/p&gt;

&lt;p&gt;Tests ran cleanly with the patch on Java 6, 7 and 8.&lt;/p&gt;</comment>
                            <comment id="13657107" author="rhillegas" created="Tue, 14 May 2013 15:58:55 +0100"  >&lt;p&gt;Attaching derby-6213-09-ab-lint1.diff. This patch generifies several packages and eliminates a couple lint warnings. I am running tests now.&lt;/p&gt;

&lt;p&gt;These seemed to be low hanging fruit. I abandoned attempts to generify org/apache/derby/iapi/jdbc and org/apache/derby/impl/services. They produce hundreds of generics-related warnings and will have to be tackled in separate patches.&lt;/p&gt;

&lt;p&gt;The affected packages are:&lt;/p&gt;

&lt;p&gt;org/apache/derby/iapi/types...&lt;br/&gt;
org/apache/derby/impl/load...&lt;br/&gt;
org/apache/derby/impl/db...&lt;br/&gt;
org/apache/derby/impl/io...&lt;br/&gt;
org/apache/derby/security...&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/types/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ImportReadData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ImportLobFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ColumnInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/Import.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/Export.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/load/ExportWriteData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/db/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/VFMemoryStorageFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/io/vfmem/DataStore.java&lt;br/&gt;
M       java/engine/org/apache/derby/security/DatabasePermission.java&lt;br/&gt;
M       java/engine/org/apache/derby/security/SystemPermission.java&lt;br/&gt;
M       java/engine/org/apache/derby/security/build.xml&lt;/p&gt;</comment>
                            <comment id="13657140" author="knutanders" created="Tue, 14 May 2013 16:40:35 +0100"  >&lt;p&gt;The client.diff patch was committed with revision 1482405.&lt;/p&gt;</comment>
                            <comment id="13657193" author="rhillegas" created="Tue, 14 May 2013 17:44:13 +0100"  >&lt;p&gt;Tests passed cleanly for me on Java 8 with the derby-6213-09-ab-lint1.diff patch. Committed at subversion revision 1482443.&lt;/p&gt;</comment>
                            <comment id="13657327" author="knutanders" created="Tue, 14 May 2013 19:23:12 +0100"  >&lt;p&gt;The Jenkins build job didn&apos;t like my client.diff patch, apparently: &lt;a href=&quot;https://builds.apache.org/job/Derby-trunk/1787/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Derby-trunk/1787/console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 146 source files to /home/jenkins/jenkins-slave/workspace/Derby-trunk/trunk/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/Derby-trunk/trunk/java/client/org/apache/derby/jdbc/ClientDataSource.java:93: error: ClientDataSource is not abstract and does not override abstract method getParentLogger() in CommonDataSource&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; public class ClientDataSource extends ClientBaseDataSource {&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;        ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/Derby-trunk/trunk/java/client/org/apache/derby/jdbc/ClientConnectionPoolDataSource.java:41: error: ClientConnectionPoolDataSource is not abstract and does not override abstract method getParentLogger() in CommonDataSource&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; public class ClientConnectionPoolDataSource extends ClientDataSource &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;        ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/Derby-trunk/trunk/java/client/org/apache/derby/jdbc/ClientXADataSource.java:47: error: ClientXADataSource is not abstract and does not override abstract method getParentLogger() in CommonDataSource&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; public class ClientXADataSource&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;        ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 3 errors&lt;/p&gt;

&lt;p&gt;I&apos;ll look into it. And sorry about the noise.&lt;/p&gt;</comment>
                            <comment id="13657331" author="kmarsden" created="Tue, 14 May 2013 19:25:43 +0100"  >&lt;p&gt;FYI: After I synched up I got this error with JAVA_HOME set to jdk 17. I was able to work around it by setting it to jdk 16.&lt;/p&gt;</comment>
                            <comment id="13657343" author="knutanders" created="Tue, 14 May 2013 19:38:25 +0100"  >&lt;p&gt;If I build with JDK 7 and don&apos;t have j16lib set, java16compile.classpath is set to the exact same value as java17compile.classpath. I had expected that the JDBC 4.0 stubs would be prepended to java16compile.classpath in that case.&lt;/p&gt;

&lt;p&gt;The build failure happens because ClientDataSource &amp;amp; co are compiled against java16compile.classpath, which is actually java7compile.classpath, and therefore expect the JDBC 4.0 DataSources to implement the JDBC 4.1 interface.&lt;/p&gt;

&lt;p&gt;It&apos;s probably a good idea to push the JDBC 4.1 methods into the base DataSource classes now anyway, so I think I&apos;ll do that. Even so, it looks as if there may be a bug in the property setter.&lt;/p&gt;</comment>
                            <comment id="13657385" author="rhillegas" created="Tue, 14 May 2013 20:02:12 +0100"  >&lt;p&gt;Attaching derby-6213-10-aa-lint2-implServices.diff. This patch generifies the impl/services packages. I will run tests.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/services/timer/SingletonTimerFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/jce/JCECipherFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/cache/Clock.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/daemon/BasicDaemon.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/daemon/SingleThreadDaemonFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/JarLoader.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/ReflectClassesJava2.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/ReflectGeneratedClass.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/UpdateLoader.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/LoadedGeneratedClass.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/LockTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/LockSpace.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/LockSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/TableNameInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/Deadlock.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/Control.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/Timeout.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/locks/LockControl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/stream/SingleStream.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/bytecode/d_BCValidate.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/bytecode/BCMethod.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/bytecode/BCClass.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/bytecode/GClass.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/build.xml&lt;/p&gt;</comment>
                            <comment id="13657481" author="knutanders" created="Tue, 14 May 2013 21:34:51 +0100"  >&lt;p&gt;Attaching buildbreak2-datasource.diff which makes trunk build again when java16compile.classpath is really java17compile.classpath.&lt;/p&gt;

&lt;p&gt;The patch moves the JDBC 4.1 getParentLogger() method into ClientBaseDataSourceRoot and removes it from all the *40 leaf classes.&lt;/p&gt;

&lt;p&gt;The patch also updates the javadoc for the client&apos;s DataSource implementations so that they correctly specify which platforms they work on in the new world order.&lt;/p&gt;

&lt;p&gt;After this patch, there is no difference in functionality between the Client(ConnectionPool|XA)?DataSource classes and their corresponding Client(ConnectionPool|XA)?DataSource40 classes. The latter are preserved for backward compatibility, though.&lt;/p&gt;

&lt;p&gt;Running tests...&lt;/p&gt;</comment>
                            <comment id="13657495" author="rhillegas" created="Tue, 14 May 2013 21:47:21 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-10-aa-lint2-implServices.diff. Committed at subversion revision 1482578.&lt;/p&gt;</comment>
                            <comment id="13657630" author="knutanders" created="Tue, 14 May 2013 23:44:38 +0100"  >&lt;p&gt;Tests passed with the buildbreak2-datasource.diff patch on Java 6, 7 and 8.&lt;/p&gt;

&lt;p&gt;Committed revision 1482632.&lt;/p&gt;</comment>
                            <comment id="13658508" author="rhillegas" created="Wed, 15 May 2013 17:25:45 +0100"  >&lt;p&gt;Attaching derby-6213-11-aa-lint3-implStore.diff. This patch generifies the impl/store packages. I am running tests now.&lt;/p&gt;

&lt;p&gt;Generifying RAMTransaction disclosed a mis-factoring of the Store interfaces which we may want to correct. It appears to have been around since Nat wrote the original Store code 16 years ago. Nat seems to have been aware of this because he included this comment in the variables section of RAMTransaction:&lt;/p&gt;

&lt;p&gt;	// XXX (nat) management of the controllers is still embryonic.&lt;br/&gt;
	// XXX (nat) would be nice if sort controllers were like conglom controllers&lt;/p&gt;

&lt;p&gt;This mis-factoring may indicate a future brittleness which needs to be fixed. I don&apos;t think the mis-factoring actually causes a bug today. The problem appeared when I gave RAMTransaction.storeControllers the refined type of ArrayList&amp;lt;ScanManager&amp;gt;. This is the type which that variable needs in order to satisfy the loop in closeControllers(). But this caused two problems:&lt;/p&gt;

&lt;p&gt;1) In RAMTransaction.openSortScan(), the return type of Sort.openSortScan() was ScanController rather than ScanManager. That I fixed by changing the type of Sort.openSortScan() to ScanManager (all of its implementations actually return ScanManager).&lt;/p&gt;

&lt;p&gt;2) In RAMTransaction.openSortRowSource(), the return type of Sort.openSortRowSource() is also not a ScanManager. The Sort implementations actually return a ScanManager but I didn&apos;t want to just adjust the return type. I think this needs to be looked at.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/store/access/conglomerate/Sort.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/sort/MergeScan.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/sort/MergeSort.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/sort/MergeInserter.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/sort/MergeScanRowSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/PropertyConglomerate.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/RAMTransaction.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/RAMAccessManager.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/xact/Xact.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/xact/TransactionMapFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/xact/ConcurrentTransactionMapFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/log/LogAccessFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/RawStore.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/MemByteHolder.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/StreamFileContainer.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/EncryptOrDecryptData.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/RFResource.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/replication/net/ReplicationMessageTransmit.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/replication/net/ReplicationMessageReceive.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/replication/buffer/ReplicationLogBuffer.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/build.xml&lt;/p&gt;</comment>
                            <comment id="13658615" author="rhillegas" created="Wed, 15 May 2013 19:06:45 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-11-aa-lint3-implStore.diff. Committed at subversion revision 1482984.&lt;/p&gt;</comment>
                            <comment id="13660772" author="rhillegas" created="Fri, 17 May 2013 16:07:08 +0100"  >&lt;p&gt;Attaching derby-6213-12-aa-lint4-implSqlCatalog-implSqlDepend.diff. This patch generifies the impl/sql/catalog and impl/sql/depend packages. I am running tests now.&lt;/p&gt;

&lt;p&gt;The bulk of the work in this patch involved generifying the DataDictionary. This turned out to be more than just a mechanical process. I ended up re-factoring the TupleDescriptors in order to get DataDictionaryImpl.getDescriptorViaIndex() and DataDictionaryImpl.getDescriptorViaHeap() to work on generic Lists of TupleDescriptors. More specifically, I changed UniqueTupleDescriptor, UniqueSQLObjectDescriptor, and PrivilegedSQLObject from interfaces into abstract classes and inserted them in the appropriate place in the hierarchy of TupleDescriptor classes. It may be possible to further collapse UniqueTupleDescriptor and UniqueSQLObjectDescriptor into a single class, but I did not want to pursue that investigation at this time.&lt;/p&gt;

&lt;p&gt;I gave up on another problem. I wanted to end up with the following relationships:&lt;/p&gt;

&lt;p&gt;GenericDescriptorList extends ArrayList&amp;lt;UniqueTupleDescriptor&amp;gt;&lt;br/&gt;
ColumnDescriptorList extends ArrayList&amp;lt;ColumnDescriptor&amp;gt;&lt;/p&gt;

&lt;p&gt;...hoping they would work with generified DataDictionaryImpl.getDescriptorViaIndex() and DataDictionaryImpl.getDescriptorViaHeap() methods which operated on List&amp;lt;? extends TupleDescriptor&amp;gt;. However, this caused the compiler to object:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     method Collection.add(CAP#1) is not applicable&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       (argument mismatch; UUID cannot be converted to CAP#1)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     method List.add(CAP#1) is not applicable&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       (argument mismatch; UUID cannot be converted to CAP#1)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     method List.add(int,CAP#1) is not applicable&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;       (actual and formal argument lists differ in length)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   where CAP#1 is a fresh type-variable:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     CAP#1 extends TupleDescriptor from capture of ? extends TupleDescriptor&lt;/p&gt;

&lt;p&gt;I punted by making&lt;/p&gt;

&lt;p&gt;GenericDescriptorList extends ArrayList&amp;lt;TupleDescriptor&amp;gt;&lt;br/&gt;
ColumnDescriptorList extends ArrayList&amp;lt;TupleDescriptor&amp;gt;&lt;/p&gt;

&lt;p&gt;...and by making the DataDictionaryImpl.getDescriptorViaIndex() and DataDictionaryImpl.getDescriptorViaHeap() methods operate on List&amp;lt;TupleDescriptor&amp;gt; instead. Maybe someone else can figure this one out.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/dictionary/SchemaDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/GenericDescriptorList.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptorList.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/UniqueTupleDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/AliasDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/SubConstraintDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/PrivilegedSQLObject.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/SequenceDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptorList.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/UniqueSQLObjectDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DependencyDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DefaultDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/ColumnDescriptorList.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/FileInfoDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CollectNodesVisitor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/depend/BasicDependencyManager.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/RoleClosureIteratorImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java&lt;/p&gt;</comment>
                            <comment id="13660850" author="rhillegas" created="Fri, 17 May 2013 17:53:27 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-12-aa-lint4-implSqlCatalog-implSqlDepend.diff. Committed at subversion revision 1483911.&lt;/p&gt;</comment>
                            <comment id="13662007" author="rhillegas" created="Mon, 20 May 2013 14:54:49 +0100"  >&lt;p&gt;Attaching derby-6213-13-aa-lint4-implSqlConn.diff. This patch generifies the code in the org.apache.derby.impl.sql.conn package. I am running tests now.&lt;/p&gt;

&lt;p&gt;This ball of yarn pulled in the grammar. Generifying the grammar, in turn, required me to generify some code generated by javacc which is not in sqlgrammar.jj itself. Probably the right solution to this problem is to upgrade our version of javacc. However, I didn&apos;t want to keep pulling on the ball of yarn. Instead, I added some more expression rewriting to the build target which compiles the grammar. The build target now performs these transformations on the code invented by javacc:&lt;/p&gt;

&lt;p&gt;     java.util.Vector -&amp;gt;  java.util.Vector&amp;lt;Object&amp;gt;&lt;br/&gt;
     java.util.Enumeration -&amp;gt;  java.util.Enumeration&amp;lt;Object&amp;gt;&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/TablePrivilegesNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/PrivilegeNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/shared/build.xml&lt;/p&gt;</comment>
                            <comment id="13662085" author="rhillegas" created="Mon, 20 May 2013 16:33:36 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-13-aa-lint4-implSqlConn.diff. Committed at subversion revision 1484498.&lt;/p&gt;</comment>
                            <comment id="13662169" author="rhillegas" created="Mon, 20 May 2013 18:17:03 +0100"  >&lt;p&gt;Attaching derby-6213-14-aa-lint6-implSqlCompile-implSqlExecute.diff. This patch generifies code in the impl/sql/compile and impl/sql/execute packages. I am running tests now.&lt;/p&gt;

&lt;p&gt;This patch also fixes a build bug introduced by my previous submission. As of the previous patch, if you build the codeline twice in a row, you will see errors like the following. The current patch will fix these:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /Users/rh161140/derby/mainline/trunk/generated/java/org/apache/derby/impl/sql/compile/SQLParser.java:21661: error: &amp;lt;identifier&amp;gt; expected&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;   private java.util.Vector&amp;lt;Object&amp;gt;&amp;lt;Object&amp;gt; jj_expentries = new java.util.Vector&amp;lt;Object&amp;gt;();&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                   ^&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/GrantNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DeleteNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CreateIndexNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/HashJoinStrategy.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealBasicNoPutResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealMaterializedResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealSortStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RunTimeStatisticsImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealAnyResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealUnionResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealSetOpResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealNormalizeResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealScalarAggregateStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealRowCountStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealWindowResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealIndexRowToBaseRowStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealProjectRestrictStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealScrollInsensitiveResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealNestedLoopJoinStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealOnceResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealNoRowsResultSetStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealGroupedAggregateStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/rts/RealDistinctScalarAggregateStatistics.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/xplain/XPLAINSystemTableVisitor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/UserDefinedAggregator.java&lt;/p&gt;</comment>
                            <comment id="13662286" author="rhillegas" created="Mon, 20 May 2013 20:06:26 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-14-aa-lint6-implSqlCompile-implSqlExecute.diff. Committed at subversion revision 1484566.&lt;/p&gt;</comment>
                            <comment id="13662907" author="knutanders" created="Tue, 21 May 2013 12:34:39 +0100"  >&lt;p&gt;I took a look at the problems with generifying GenericDescriptorList and ColumnDescriptorList, as well as DataDictionaryImpl.getDescriptorViaIndex() and DataDictionaryImpl.getDescriptorViaHeap(). It looks like the compilation problems Rick saw happen because CatalogRowFactory.buildDescriptor() is not generified, so that it will have to return TupleDescriptor regardless of the type of the list passed in to the getDescriptor* methods. Unfortunately, generifying it wouldn&apos;t help much the way the code is structured currently, because the dictionary gets the row factory instance via a couple of indirections, one of which is through an array where any type parameters would be lost.&lt;/p&gt;

&lt;p&gt;There is however a trick that could be used. The getDescriptor* methods could take a Class parameter that describes the expected type of the returned descriptors. They can use the Class instance to do an explicit cast of the value returned by CatalogRowFactory.buildDescriptor(), so that it can safely be added to the list. There will still be a cast, but that cast will be hidden inside the getDescriptor* methods, instead of having each caller cast the descriptors to the desired sub-type like they do now.&lt;/p&gt;

&lt;p&gt;The attached patch, descriptor-lists.diff, changes the descriptor list classes so that they extend a more specific type, and it changes the signatures of getDescriptorViaHeap() and getDescriptorViaIndex() so that they accept the more specific list types. It also changes the callers of these methods, since there&apos;s now an extra argument.&lt;/p&gt;

&lt;p&gt;All tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13662936" author="rhillegas" created="Tue, 21 May 2013 13:33:16 +0100"  >&lt;p&gt;Thanks for untangling the TupleDescriptor readers, Knut. If you are looking for other puzzles, you might want to grep the code for&lt;/p&gt;

&lt;p&gt;    @SuppressWarnings(&quot;unchecked&quot;)&lt;/p&gt;

&lt;p&gt;These mark other problems which we punted. Thanks.&lt;/p&gt;</comment>
                            <comment id="13662951" author="rhillegas" created="Tue, 21 May 2013 13:55:25 +0100"  >&lt;p&gt;Attaching derby-6213-15-aa-lint7.diff. This generifies several classes pulled in by the build targets in java/engine/org/apache/derby/iapi/types/build.xml. This patch eliminates one of the lint diagnostics. I am running tests now.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/depend/ProviderList.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/context/ContextManager.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/context/ContextService.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/info/ProductVersionHolder.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/cache/ClassSize.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/loader/ClassInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/loader/ClassInspector.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/io/FormatableHashtable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/io/FileUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/XML.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/UserType.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/NumberDataType.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/store/access/DiskHashtable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/store/access/BackingStoreHashtable.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/store/raw/ContainerKey.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/InterruptStatus.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/util/IdUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/monitor/TopService.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/monitor/ProtocolKey.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/PropertyConglomerate.java&lt;/p&gt;</comment>
                            <comment id="13663015" author="rhillegas" created="Tue, 21 May 2013 15:32:10 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-15-aa-lint7.diff. Committed at subversion revision 1484818.&lt;/p&gt;</comment>
                            <comment id="13663035" author="knutanders" created="Tue, 21 May 2013 15:49:43 +0100"  >&lt;p&gt;Committed descriptor-lists.diff with revision 1484821.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at the suppressed warnings and see if some of them can be removed without too much rewriting.&lt;/p&gt;</comment>
                            <comment id="13664251" author="rhillegas" created="Wed, 22 May 2013 17:54:42 +0100"  >&lt;p&gt;Attaching derby-6213-16-aa-lint8.diff. This generifies classes pulled by the build targets in java/engine/org/apache/derby/iapi/jdbc/build.xml. I am running tests now.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/compile/CompilerContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/execute/ExecPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DDUtils.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/DRDAServerStarter.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/loader/ClassInspector.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/services/io/ArrayUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/transaction/TransactionControl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CastNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ResultSetNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/TernaryOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/FromTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/OrNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/LikeEscapeOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/Predicate.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CompilerContextImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/BinaryOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SingleChildResultSetNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UnaryLogicalOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/BinaryArithmeticOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SelectNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SubqueryNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/QueryTreeNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/AggregateNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ProjectRestrictNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ResultColumn.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/GroupByNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/BinaryComparisonOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UnaryDateTimestampOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DeleteNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ColumnDefinitionNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CursorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ColumnOrdering.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/VTIDeferModPolicy.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/NewInvocationNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UnaryArithmeticOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CollectNodesVisitor.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/OrderedColumnList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/GroupByColumn.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/JavaToSQLValueNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ConditionalNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UnaryComparisonOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/RowOrderingImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/TimestampOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UpdateNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/WindowResultSetNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/FromList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SimpleStringOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/JoinNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SQLToJavaValueNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/FromVTI.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/RowResultSetNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/TestConstraintNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/RowNumberFunctionNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UserAggregateDefinition.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/FromBaseTable.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/SetOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ValueNodeList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/IsNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/GroupByList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/WindowFunctionNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/JavaValueNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DB2LengthOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/TableElementList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/BinaryLogicalOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/LengthOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/OptimizerImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ConcatenationOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/AndNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/QueryTreeNodeVector.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/UnaryOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/AggregateWindowFunctionNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/PredicateList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/BinaryListOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/IndexToBaseRowNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/NonStaticMethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ColumnReference.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ValueNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/DefaultNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/GenerationClauseNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/GenericResultDescription.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/DeleteCascadeResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/InsertResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/TriggerEventActivator.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/JarUtil.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/GenericRIChecker.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/GroupedAggregateResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/SetConstraintsConstantAction.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/BaseActivation.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/FKInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/BasicSortObserver.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/DDLConstantAction.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/DDLSingleTableConstantAction.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/InternalTriggerExecutionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/AggregatorInfoList.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/execute/GenericAggregateResultSet.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/CursorInfo.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnectionContext.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/LOBStreamControl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/daemon/IndexStatisticsDaemonImpl.java&lt;/p&gt;</comment>
                            <comment id="13664410" author="rhillegas" created="Wed, 22 May 2013 19:51:37 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-16-aa-lint8.diff. Merged and committed at subversion revision 1485333.&lt;/p&gt;</comment>
                            <comment id="13665349" author="rhillegas" created="Thu, 23 May 2013 17:52:39 +0100"  >&lt;p&gt;Attaching derby-6213-17-aa-lint9.diff. This patch generifies the remaining classes needed to remove the lint warnings. I am running tests now.&lt;/p&gt;

&lt;p&gt;As part of this patch, I generalized the parser hacking (introduced by derby-6213-13-aa-lint4-implSqlConn.diff) so that it could be applied to our other 2 grammars: ij.jj and mtGrammar.jj.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/tools/JDBCDisplayUtil.java&lt;br/&gt;
M       java/tools/org/apache/derby/tools/dblook.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/URLCheck.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/AttributeHolder.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ConnectionEnv.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/xaHelper.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/util.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ijResultImpl.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/Session.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ij.jj&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ijResult.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/mtGrammar.jj&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/utilMain.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ijVectorResult.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/Main.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/ij/ijMultipleResultSetResult.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/planexporter/CreateXMLFile.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/sysinfo/Main.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/build.xml&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/SystemProcedures.java&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/sanity/SanityManager.java&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/sanity/AssertFailure.java&lt;br/&gt;
M       java/shared/build.xml&lt;br/&gt;
M       build.xml&lt;/p&gt;</comment>
                            <comment id="13665484" author="rhillegas" created="Thu, 23 May 2013 19:48:53 +0100"  >&lt;p&gt;Attaching derby-6213-17-ab-lint9.diff. The previous rev of the patch produced some formatting diffs in the output of the ij xa_recover command in 2 unit tests. I think that the new formatting looks as good or better than the old formatting, so I&apos;m canonizing it. Committed at subversion revision 1485822.&lt;/p&gt;

&lt;p&gt;Touches the following additional files:&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/master/xaOffline1.out&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/master/encryptDatabaseTest2.out&lt;/p&gt;</comment>
                            <comment id="13665578" author="rhillegas" created="Thu, 23 May 2013 21:02:12 +0100"  >&lt;p&gt;Attaching derby-6213-18-aa-collapseEmbeddedDataSources.diff. This patch collapses the *40 embedded data sources into their non *40 superclasses. I need to adjust the javadoc further. I am running tests now.&lt;/p&gt;

&lt;p&gt;With this patch, the *40 data sources become vacuous extensions of their non *40 superclasses. I also note the following curiosity:&lt;/p&gt;

&lt;p&gt;o Now BasicEmbeddedDataSource40 is a vacuous extension of EmbeddedBaseDataSource.&lt;/p&gt;

&lt;p&gt;This makes me wonder whether we could rework the DataSource graph further and eliminate all of the Basic* DataSources from the public javadoc, leaving us with just the &lt;b&gt;Base&lt;/b&gt; versions. That might help clarify to users how we name our DataSources. But that is outside the scope of this patch.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/jdbc/EmbeddedDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/BasicEmbeddedDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedXADataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedXADataSource.java&lt;/p&gt;</comment>
                            <comment id="13668305" author="rhillegas" created="Tue, 28 May 2013 14:44:29 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-18-aa-collapseEmbeddedDataSources.diff except for the known Heisenbug &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5941&quot; title=&quot;Assert failure in jdbcapi.InvalidLDAPServerAuthenticationTest.testInvalidLDAPServerConnectionError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5941&quot;&gt;&lt;del&gt;DERBY-5941&lt;/del&gt;&lt;/a&gt;. Committed at subversion revision 1486921.&lt;/p&gt;</comment>
                            <comment id="13668354" author="rhillegas" created="Tue, 28 May 2013 16:03:36 +0100"  >&lt;p&gt;Attaching derby-6213-19-aa-cleanupJavadoc.diff. This patch adjusts the javadoc for the DataSources which still appear in our published api javadoc and for the *40 DataSources which have been removed from the published api javadoc. Committed at subversion revision 1486949.&lt;/p&gt;

&lt;p&gt;This patch makes the following changes:&lt;/p&gt;

&lt;p&gt;1) Removes the extensive header comments from the *40 DataSources. Instead, adds a brief blurb stating that these DataSources are vacuous and deprecated and remain in the codeline only for backward compatibilty reasons.&lt;/p&gt;

&lt;p&gt;2) Homogenizes the initial sentences of the published DataSource header comments.&lt;/p&gt;

&lt;p&gt;3) Adds a lot of closing tags to the package html for the published org.apache.derby.jdbc package. Probably a little more work is needed to make this file valid xhtml, but this patch improves the situation.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/jdbc/EmbeddedConnectionPoolDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedXADataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/EmbeddedDataSource40.java&lt;br/&gt;
M       java/engine/org/apache/derby/jdbc/package.html&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientConnectionPoolDataSource.java&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientConnectionPoolDataSource40.java&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientXADataSource.java&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientXADataSource40.java&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientDataSource.java&lt;br/&gt;
M       java/client/org/apache/derby/jdbc/ClientDataSource40.java&lt;/p&gt;</comment>
                            <comment id="13668459" author="rhillegas" created="Tue, 28 May 2013 18:11:04 +0100"  >&lt;p&gt;Attaching derby-6213-20-aa-remove.java15.compile.classpath.diff. This patch removes support for compilation on Java 5 as well as the JDBC 3 and JSR 169 stubs. I am running tests now.&lt;/p&gt;

&lt;p&gt;The patch introduces a lint diagnostic. I will remove that in a later patch.&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/build/org/apache/derbyBuild/build.xml&lt;br/&gt;
M       java/build/org/apache/derbyPreBuild/PropertySetter.java&lt;br/&gt;
M       java/storeless/build.xml&lt;br/&gt;
M       java/demo/toursdb/build.xml&lt;br/&gt;
M       java/demo/build.xml&lt;br/&gt;
M       build.xml&lt;/p&gt;

&lt;p&gt;Remove references to the Java 5 and JSR 169 compiler variables.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;D       java/stubs/jdbc3&lt;br/&gt;
D       java/stubs/jdbc3/java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Connection.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/BatchUpdateException.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Timestamp.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Statement.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Types.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/DatabaseMetaData.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLPermission.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Savepoint.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Ref.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/DriverPropertyInfo.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Date.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Blob.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Array.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLException.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLInput.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Clob.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/DataTruncation.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLOutput.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/ParameterMetaData.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/CallableStatement.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Struct.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLWarning.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/DriverManager.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/PreparedStatement.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/SQLData.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/ResultSet.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Driver.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/ResultSetMetaData.java&lt;br/&gt;
D       java/stubs/jdbc3/java/sql/Time.java&lt;br/&gt;
D       java/stubs/jdbc3/javax&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetInternal.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetWriter.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/ConnectionEvent.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/PooledConnection.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSet.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/XADataSource.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/ConnectionPoolDataSource.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetMetaData.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetEvent.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetReader.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/ConnectionEventListener.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/XAConnection.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/RowSetListener.java&lt;br/&gt;
D       java/stubs/jdbc3/javax/sql/DataSource.java&lt;br/&gt;
D       java/stubs/jsr169&lt;br/&gt;
D       java/stubs/jsr169/java&lt;br/&gt;
D       java/stubs/jsr169/java/sql&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Connection.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Timestamp.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/BatchUpdateException.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Types.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Statement.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/DatabaseMetaData.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Savepoint.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Date.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Blob.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/SQLException.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Clob.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/DataTruncation.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/CallableStatement.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/SQLWarning.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/PreparedStatement.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/ResultSet.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/ResultSetMetaData.java&lt;br/&gt;
D       java/stubs/jsr169/java/sql/Time.java&lt;br/&gt;
D       java/stubs/jsr169/javax&lt;br/&gt;
D       java/stubs/jsr169/javax/sql&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetInternal.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetWriter.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSet.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetMetaData.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetEvent.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetReader.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/RowSetListener.java&lt;br/&gt;
D       java/stubs/jsr169/javax/sql/DataSource.java&lt;/p&gt;

&lt;p&gt;Remove the JDBC 3 and JSR 169 stubs.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       BUILDING.html&lt;/p&gt;

&lt;p&gt;Adjust the top level build instructions to reflect the fact that we support building on Java 8 now and we don&apos;t support building on Java 5.&lt;/p&gt;</comment>
                            <comment id="13668566" author="rhillegas" created="Tue, 28 May 2013 20:01:44 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-20-aa-remove.java15.compile.classpath.diff. Committed at subversion revision 1487040.&lt;/p&gt;</comment>
                            <comment id="13668573" author="rhillegas" created="Tue, 28 May 2013 20:13:09 +0100"  >&lt;p&gt;Attaching derby-6213-21-aa-felixLint.diff. This patch generifies the Felix stubs in order to remove the lint diagnostic introduced by the previous patch. Committed at subversion revision 1487051.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/stubs/felix/org/osgi/framework/AdminPermission.java&lt;br/&gt;
M       java/stubs/felix/org/osgi/framework/PackagePermission.java&lt;br/&gt;
M       java/stubs/felix/org/osgi/framework/ServicePermission.java&lt;br/&gt;
M       java/stubs/felix/org/osgi/framework/BundlePermission.java&lt;br/&gt;
M       java/stubs/felix/org/osgi/framework/FrameworkUtil.java&lt;br/&gt;
M       build.xml&lt;/p&gt;</comment>
                            <comment id="13668611" author="rhillegas" created="Tue, 28 May 2013 21:01:09 +0100"  >&lt;p&gt;Attaching derby-6213-22-aa-remove1.4and1.5sourceAndTargetLevels.diff. This patch converts source and target levels 1.4 and 1.5 to 1.6. Along the way a couple more classes needed to be generified. I will run tests.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/build/org/apache/derbyBuild/build.xml&lt;br/&gt;
M       java/build/org/apache/derbyPreBuild/build.xml&lt;br/&gt;
M       java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java&lt;br/&gt;
M       java/tools/org/apache/derby/iapi/tools/build.xml&lt;br/&gt;
M       java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java&lt;br/&gt;
M       java/storeless/build.xml&lt;br/&gt;
M       java/demo/toursdb/build.xml&lt;br/&gt;
M       java/demo/nserverdemo/SimpleNetworkClientSample.java&lt;br/&gt;
M       java/demo/simple/SimpleApp.java&lt;br/&gt;
M       java/demo/build.xml&lt;br/&gt;
M       build.xml&lt;br/&gt;
M       tools/l10n/build.xml&lt;/p&gt;</comment>
                            <comment id="13668726" author="rhillegas" created="Tue, 28 May 2013 23:01:32 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6213-22-aa-remove1.4and1.5sourceAndTargetLevels.diff. Committed at subversion revision 1487133.&lt;/p&gt;</comment>
                            <comment id="13669196" author="rhillegas" created="Wed, 29 May 2013 13:40:09 +0100"  >&lt;p&gt;Attaching derby-6213-23-aa-removeSimpleMobileApp.diff. This patch removes SimpleMobileApp. Committed at subversion revision 1487461.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M       java/demo/build.xml&lt;br/&gt;
D       java/demo/simplemobile&lt;br/&gt;
D       java/demo/simplemobile/SimpleMobileApp.java&lt;/p&gt;

&lt;p&gt;Remove the demo app.&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M       java/demo/demo.html&lt;br/&gt;
D       java/demo/simplemobile/readme.html&lt;br/&gt;
M       java/demo/navbar.html&lt;/p&gt;

&lt;p&gt;Remove documentation about the app.&lt;/p&gt;</comment>
                            <comment id="13669362" author="rhillegas" created="Wed, 29 May 2013 16:58:07 +0100"  >&lt;p&gt;Here is my understanding of the current status of this issue:&lt;/p&gt;

&lt;p&gt;(I), (III), and (V) have been addressed by the patches applied under this issue.&lt;/p&gt;

&lt;p&gt;(II) will be addressed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6236&quot; title=&quot;Remove references to old JVMs (pre-Java 6) from the user guides&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6236&quot;&gt;&lt;del&gt;DERBY-6236&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(IV) is addressed by a paragraph on the wiki: &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbySnapshotOrRelease#Expectations&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbySnapshotOrRelease#Expectations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, I think I&apos;m ready to write a release note. Let me know if you think there is more work to be done on this issue. Thanks.&lt;/p&gt;</comment>
                            <comment id="13669468" author="rhillegas" created="Wed, 29 May 2013 18:33:54 +0100"  >&lt;p&gt;Attaching derby-6213-24-aa-makeBasicConnectionPoolDataSource40public.diff. This patch makes BasicClientConnectionPoolDataSource40 public so that it will appear in the published api javadoc. Committed at subversion revision 1487559.&lt;/p&gt;

&lt;p&gt;I don&apos;t know when this class ceased being public. It must have been public when the 10.10 release was cut because the class turns up in the published api javadoc for that release.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/client/org/apache/derby/jdbc/BasicClientConnectionPoolDataSource40.java&lt;/p&gt;</comment>
                            <comment id="13669496" author="rhillegas" created="Wed, 29 May 2013 18:53:19 +0100"  >&lt;p&gt;Attaching the first rev of a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="13673050" author="knutanders" created="Mon, 3 Jun 2013 13:03:34 +0100"  >&lt;p&gt;I&apos;ve found a small number of code comments that suggest code can be simplified once the base level is at least Java 5. The attached patch, simplify-with-java5.diff, makes the suggested changes.&lt;/p&gt;

&lt;p&gt;SqlXmlUtil: Simplify formatting of numbers by using BigDecimal methods introduced in Java 5&lt;/p&gt;

&lt;p&gt;StringUtil: stringify(int[]) is documented to be equivalent to java.util.Arrays.toString(int[]) in Java 5. However, it&apos;s unused, so the patch removes it. If new code ever needs this functionality, it could call Arrays.toString() directly.&lt;/p&gt;

&lt;p&gt;OverflowInputStream: A comment suggests wrapping of an exception could be simplified by using one of IOException&apos;s new constructors. The patch makes the error handler use the new constructor.&lt;/p&gt;

&lt;p&gt;I&apos;ve started the regression tests.&lt;/p&gt;</comment>
                            <comment id="13673056" author="knutanders" created="Mon, 3 Jun 2013 13:11:41 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;The release note looks fine to me. Maybe the comment about the classes removed from the public API could be stronger. It says they may be deprecated in the future. IMO we&apos;ve already deprecated them by removing them from the public API, so the note could rather say &quot;may be removed in the future&quot;. Even though we&apos;re not currently planning to remove them, mentioning the possibility that they could be removed at some point, gives the users more incentive to do the migration.&lt;/p&gt;</comment>
                            <comment id="13673062" author="rhillegas" created="Mon, 3 Jun 2013 13:20:22 +0100"  >&lt;p&gt;Thanks, Knut, that&apos;s a good suggestion. Attaching a second rev of the release note which says that the classes may be removed in the future.&lt;/p&gt;</comment>
                            <comment id="13673097" author="knutanders" created="Mon, 3 Jun 2013 14:26:02 +0100"  >&lt;p&gt;Would it make sense to also add @deprecated tags to the class javadoc of the deprecated data sources? Then users who reference them directly from their application code will see warnings like this when compiling the application:&lt;/p&gt;

&lt;p&gt;warning: &lt;span class=&quot;error&quot;&gt;&amp;#91;deprecation&amp;#93;&lt;/span&gt; EmbeddedDataSource40 in org.apache.derby.jdbc has been deprecated&lt;/p&gt;

&lt;p&gt;See the attached patch, deprecate-datasources.diff. The patch also removes references to the deprecated data sources from SignatureChecker and two test classes so that we don&apos;t get deprecation warnings in our build (and so that our tests use the classes that we tell our users to migrate to).&lt;/p&gt;</comment>
                            <comment id="13673156" author="rhillegas" created="Mon, 3 Jun 2013 15:28:59 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;I have a slight reservation that we are losing airtight confidence that the deprecated DataSources behave correctly, because we won&apos;t be testing them directly anymore and will instead just rely on the fact that the deprecated DataSources extend tested DataSources. But I think that there is only a small chance that we will mess this up accidentally. +1&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13673158" author="knutanders" created="Mon, 3 Jun 2013 15:35:02 +0100"  >&lt;p&gt;There were three failures in suites.All with the simplify-with-java5.diff patch. The failures were all in XML tests where the result from an XPath query would be represented as &quot;0.0&quot; instead of the expected &quot;0&quot;. The reason for this is that the BigDecimal.stripTrailingZeros() method does not strip trailing zeros from a zero value. See &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6480539&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6480539&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;simplify-with-java5-v2.diff is an updated patch that makes SqlXmlUtil.numberToString() look for zero and short-circuit the logic in that case.&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly with the updated patch.&lt;/p&gt;</comment>
                            <comment id="13673178" author="knutanders" created="Mon, 3 Jun 2013 15:53:35 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I agree that testing against the deprecated DataSources still has some value. Note that I only changed the tests that had direct references to the deprecated classes. Most of the tests obtain DataSources from the test harness by calling JDBCDataSource.getDataSource(), which still returns instances of the deprecated classes (using reflection, so there&apos;s no warning). So most of the DataSource tests use the deprecated classes even after these changes.&lt;/p&gt;</comment>
                            <comment id="13674199" author="knutanders" created="Tue, 4 Jun 2013 10:10:51 +0100"  >&lt;p&gt;Committed simplify-with-java5-v2.diff with revision 1489348.&lt;br/&gt;
Committed deprecate-datasources.diff with revision 1489349.&lt;/p&gt;</comment>
                            <comment id="13680367" author="knutanders" created="Tue, 11 Jun 2013 11:55:39 +0100"  >&lt;p&gt;The attached patch, jvminfo-j2me.diff, removes the J2ME static field from the JVMInfo class, since it&apos;s always false on the platforms supported on trunk, and it removes the code that&apos;s only executed when the field is true. This includes folding DirFile4 and DirStorageFactory4 into their base classes.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13681044" author="jira-bot" created="Wed, 12 Jun 2013 09:29:25 +0100"  >&lt;p&gt;Commit 1492111 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1492111&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1492111&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Deprecate support for Java 5 and CDC&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove checks for the JVMInfo.J2ME constant&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Move functionality from DirStorageFactory4 to the base class&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13681046" author="knutanders" created="Wed, 12 Jun 2013 09:36:01 +0100"  >&lt;p&gt;Attaching jvminfo-oldconstants.diff, which removes constants for unsupported platforms from the JVMInfo class. It also removes checks for these constants. All tests passed.&lt;/p&gt;</comment>
                            <comment id="13681047" author="jira-bot" created="Wed, 12 Jun 2013 09:37:57 +0100"  >&lt;p&gt;Commit 1492116 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1492116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1492116&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Deprecate support for Java 5 and CDC&lt;/p&gt;

&lt;p&gt;Remove constants for no longer supported Java versions in JVMInfo.&lt;/p&gt;

&lt;p&gt;Remove checks for Java version where same action would be taken&lt;br/&gt;
for all supported Java versions.&lt;/p&gt;</comment>
                            <comment id="13690084" author="dagw" created="Fri, 21 Jun 2013 08:18:26 +0100"  >&lt;p&gt;It seems that EmbeddedSimpleDataSource was removed as part of this patch, but references to it are still present in the tests through reflection. Should they also be removed? Or are they kept for ease of backports?&lt;/p&gt;</comment>
                            <comment id="13690213" author="rhillegas" created="Fri, 21 Jun 2013 13:11:43 +0100"  >&lt;p&gt;Thanks for noticing that, Dag. The reflective references should probably be removed too. Thanks.&lt;/p&gt;</comment>
                            <comment id="13690269" author="rhillegas" created="Fri, 21 Jun 2013 14:29:09 +0100"  >&lt;p&gt;Attaching derby-6213-25-aa-remove-reflective-references-to-EmbeddedSimpleDataSource.diff. This patch removes additional references to EmbeddedSimpleDataSource. I am running tests now.&lt;/p&gt;

&lt;p&gt;I don&apos;t see any more when I grep the codeline. Let me know if you spot more.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/testing/README.htm&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC4FromJDBC3DataSourceTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/store/StoreScriptsTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij3Test.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij2Test.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/util/HarnessJavaTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/util/SecurityCheck.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/junit/JDBCClient.java&lt;/p&gt;</comment>
                            <comment id="13690367" author="jira-bot" created="Fri, 21 Jun 2013 16:12:31 +0100"  >&lt;p&gt;Commit 1495471 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1495471&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1495471&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Remove more references to EmbeddedSimpleDataSource; tests passed cleanly on derby-6213-25-aa-remove-reflective-references-to-EmbeddedSimpleDataSource.diff.&lt;/p&gt;</comment>
                            <comment id="13747470" author="knutanders" created="Thu, 22 Aug 2013 13:22:55 +0100"  >&lt;p&gt;There&apos;s still some code to support different implementations of the DECIMAL data type depending on whether the BigDecimal class is available. There is only one implementation of the DECIMAL data type now, so we can remove the existing logic for plugging in the correct implementation.&lt;/p&gt;

&lt;p&gt;The attached decimal-type.diff patch makes the following changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Stop using reflection to access the BigDecimal class.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fold J2SEDataValueFactory into DataValueFactoryImpl.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Make the parser represent DECIMAL literals as BigDecimal instead of String.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove (now unused) DataValueFactory methods that manipulate strings representing DECIMAL values.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Clean up some comments that mention CDC support.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All regression tests ran cleanly.&lt;/p&gt;</comment>
                            <comment id="13748366" author="jira-bot" created="Fri, 23 Aug 2013 08:17:00 +0100"  >&lt;p&gt;Commit 1516715 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1516715&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1516715&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Deprecate support for Java 5 and CDC&lt;/p&gt;

&lt;p&gt;Remove reflection code that guards access to the BigDecimal class,&lt;br/&gt;
which is now available on all supported platforms.&lt;/p&gt;

&lt;p&gt;Remove J2SEDataValueFactory and move all functionality to the base&lt;br/&gt;
class DataValueFactoryImpl.&lt;/p&gt;

&lt;p&gt;Remove initalization code for DECIMAL in DataValueFactory.boot(), no&lt;br/&gt;
longer needed since there is just a single implementation of the&lt;br/&gt;
DECIMAL type.&lt;/p&gt;

&lt;p&gt;Make the parser represent DECIMAL literals as BigDecimals instead of&lt;br/&gt;
Strings.&lt;/p&gt;

&lt;p&gt;Remove now unused methods in DataValueFactory for constructing&lt;br/&gt;
SQLDecimal values from String values.&lt;/p&gt;

&lt;p&gt;Clean up references to CDC in comments.&lt;/p&gt;</comment>
                            <comment id="13891911" author="knutanders" created="Wed, 5 Feb 2014 08:35:31 +0000"  >&lt;p&gt;Checking the Release Note Needed flag so that the attached release note will show up when the release notes are generated for the next release.&lt;/p&gt;</comment>
                            <comment id="13891914" author="knutanders" created="Wed, 5 Feb 2014 08:37:32 +0000"  >&lt;p&gt;It looks like all the work is done on this issue, except for updating the user manuals, which is tracked separately by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6236&quot; title=&quot;Remove references to old JVMs (pre-Java 6) from the user guides&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6236&quot;&gt;&lt;del&gt;DERBY-6236&lt;/del&gt;&lt;/a&gt;. Resolving the issue.&lt;/p&gt;</comment>
                            <comment id="13911643" author="knutanders" created="Tue, 25 Feb 2014 15:03:41 +0000"  >&lt;p&gt;One more DECIMAL-related patch: sqldecimal-reflection.diff&lt;/p&gt;

&lt;p&gt;This patch removes reflection code used to call BigDecimal.toPlainString() and BigDecimal.precision() from the SQLDecimal class. Those methods were added in Java 5 and could now be called directly.&lt;/p&gt;

&lt;p&gt;Running regression tests...&lt;/p&gt;</comment>
                            <comment id="13912596" author="jira-bot" created="Wed, 26 Feb 2014 07:07:26 +0000"  >&lt;p&gt;Commit 1571938 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1571938&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1571938&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Deprecate support for Java 5 and CDC&lt;/p&gt;

&lt;p&gt;Remove reflection code in SQLDecimal.&lt;/p&gt;</comment>
                            <comment id="13987613" author="knutanders" created="Fri, 2 May 2014 12:54:28 +0100"  >&lt;p&gt;Attaching netbeans.diff which changes the source level in the NetBeans project from 1.5 to 1.6, so that it matches the minimum source level on trunk.&lt;/p&gt;</comment>
                            <comment id="13987614" author="jira-bot" created="Fri, 2 May 2014 12:54:54 +0100"  >&lt;p&gt;Commit 1591878 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1591878&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1591878&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6213&quot; title=&quot;Deprecate support for Java 5 and CDC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6213&quot;&gt;&lt;del&gt;DERBY-6213&lt;/del&gt;&lt;/a&gt;: Change source level to 1.6 in the NetBeans project&lt;/p&gt;</comment>
                            <comment id="14284818" author="myrna" created="Wed, 21 Jan 2015 00:23:32 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12651646">DERBY-6253</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12615666">DERBY-5988</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12468267">DERBY-4726</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12597240">DERBY-5840</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12649919">DERBY-6236</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12650294">DERBY-6240</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12650314">DERBY-6241</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12650317">DERBY-6242</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12583098" name="buildbreak.diff" size="3309" author="knutanders" created="Tue, 14 May 2013 09:41:11 +0100"/>
                            <attachment id="12583206" name="buildbreak2-datasource.diff" size="16778" author="knutanders" created="Tue, 14 May 2013 21:34:51 +0100"/>
                            <attachment id="12583131" name="client.diff" size="232924" author="knutanders" created="Tue, 14 May 2013 15:31:23 +0100"/>
                            <attachment id="12599428" name="decimal-type.diff" size="42693" author="knutanders" created="Thu, 22 Aug 2013 13:22:55 +0100"/>
                            <attachment id="12585848" name="deprecate-datasources.diff" size="13141" author="knutanders" created="Mon, 3 Jun 2013 14:26:02 +0100"/>
                            <attachment id="12581922" name="derby-6213-01-aa-collapsePublishedAPI.diff" size="10791" author="rhillegas" created="Mon, 6 May 2013 19:07:15 +0100"/>
                            <attachment id="12582094" name="derby-6213-02-aa-org.apache.derby.vti.diff" size="44773" author="rhillegas" created="Tue, 7 May 2013 15:22:50 +0100"/>
                            <attachment id="12582142" name="derby-6213-03-aa-misc.diff" size="21403" author="rhillegas" created="Tue, 7 May 2013 19:17:37 +0100"/>
                            <attachment id="12582287" name="derby-6213-03-ab-misc.diff" size="21632" author="rhillegas" created="Wed, 8 May 2013 13:38:31 +0100"/>
                            <attachment id="12582157" name="derby-6213-04-aa-vtiPackageOnJava7.diff" size="2702" author="rhillegas" created="Tue, 7 May 2013 20:53:51 +0100"/>
                            <attachment id="12582308" name="derby-6213-05-ab-misc2.diff" size="20303" author="rhillegas" created="Wed, 8 May 2013 16:42:28 +0100"/>
                            <attachment id="12582500" name="derby-6213-06-aa-convertProductToJava6.diff" size="112642" author="rhillegas" created="Thu, 9 May 2013 20:46:58 +0100"/>
                            <attachment id="12582668" name="derby-6213-06-ab-removeCDC.diff" size="40825" author="rhillegas" created="Fri, 10 May 2013 20:19:20 +0100"/>
                            <attachment id="12582781" name="derby-6213-07-aa-restOfProductExceptJDBC.diff" size="40064" author="rhillegas" created="Sat, 11 May 2013 14:06:30 +0100"/>
                            <attachment id="12582945" name="derby-6213-08-ab-jdbc.diff" size="69509" author="rhillegas" created="Mon, 13 May 2013 17:36:16 +0100"/>
                            <attachment id="12583132" name="derby-6213-09-ab-lint1.diff" size="18109" author="rhillegas" created="Tue, 14 May 2013 15:58:55 +0100"/>
                            <attachment id="12583183" name="derby-6213-10-aa-lint2-implServices.diff" size="37957" author="rhillegas" created="Tue, 14 May 2013 20:02:12 +0100"/>
                            <attachment id="12583334" name="derby-6213-11-aa-lint3-implStore.diff" size="55733" author="rhillegas" created="Wed, 15 May 2013 17:25:45 +0100"/>
                            <attachment id="12583663" name="derby-6213-12-aa-lint4-implSqlCatalog-implSqlDepend.diff" size="58557" author="rhillegas" created="Fri, 17 May 2013 16:07:08 +0100"/>
                            <attachment id="12583833" name="derby-6213-13-aa-lint4-implSqlConn.diff" size="33441" author="rhillegas" created="Mon, 20 May 2013 14:54:49 +0100"/>
                            <attachment id="12583857" name="derby-6213-14-aa-lint6-implSqlCompile-implSqlExecute.diff" size="31401" author="rhillegas" created="Mon, 20 May 2013 18:17:03 +0100"/>
                            <attachment id="12584006" name="derby-6213-15-aa-lint7.diff" size="53020" author="rhillegas" created="Tue, 21 May 2013 13:55:25 +0100"/>
                            <attachment id="12584333" name="derby-6213-16-aa-lint8.diff" size="160808" author="rhillegas" created="Wed, 22 May 2013 17:54:42 +0100"/>
                            <attachment id="12584525" name="derby-6213-17-aa-lint9.diff" size="53126" author="rhillegas" created="Thu, 23 May 2013 17:52:38 +0100"/>
                            <attachment id="12584548" name="derby-6213-17-ab-lint9.diff" size="55853" author="rhillegas" created="Thu, 23 May 2013 19:48:53 +0100"/>
                            <attachment id="12584567" name="derby-6213-18-aa-collapseEmbeddedDataSources.diff" size="19328" author="rhillegas" created="Thu, 23 May 2013 21:02:12 +0100"/>
                            <attachment id="12585044" name="derby-6213-20-aa-remove.java15.compile.classpath.diff" size="1013263" author="rhillegas" created="Tue, 28 May 2013 18:11:04 +0100"/>
                            <attachment id="12585063" name="derby-6213-21-aa-felixLint.diff" size="5610" author="rhillegas" created="Tue, 28 May 2013 20:13:09 +0100"/>
                            <attachment id="12585072" name="derby-6213-22-aa-remove1.4and1.5sourceAndTargetLevels.diff" size="13155" author="rhillegas" created="Tue, 28 May 2013 21:01:09 +0100"/>
                            <attachment id="12585190" name="derby-6213-23-aa-removeSimpleMobileApp.diff" size="34919" author="rhillegas" created="Wed, 29 May 2013 13:40:09 +0100"/>
                            <attachment id="12585251" name="derby-6213-24-aa-makeBasicConnectionPoolDataSource40public.diff" size="663" author="rhillegas" created="Wed, 29 May 2013 18:33:54 +0100"/>
                            <attachment id="12589060" name="derby-6213-25-aa-remove-reflective-references-to-EmbeddedSimpleDataSource.diff" size="9313" author="rhillegas" created="Fri, 21 Jun 2013 14:29:09 +0100"/>
                            <attachment id="12583997" name="descriptor-lists.diff" size="49035" author="knutanders" created="Tue, 21 May 2013 12:34:39 +0100"/>
                            <attachment id="12587232" name="jvminfo-j2me.diff" size="37821" author="knutanders" created="Tue, 11 Jun 2013 11:55:39 +0100"/>
                            <attachment id="12587398" name="jvminfo-oldconstants.diff" size="12319" author="knutanders" created="Wed, 12 Jun 2013 09:36:01 +0100"/>
                            <attachment id="12643033" name="netbeans.diff" size="1358" author="knutanders" created="Fri, 2 May 2014 12:54:28 +0100"/>
                            <attachment id="12585839" name="releaseNote.html" size="3407" author="rhillegas" created="Mon, 3 Jun 2013 13:20:22 +0100"/>
                            <attachment id="12585260" name="releaseNote.html" size="3410" author="rhillegas" created="Wed, 29 May 2013 18:53:19 +0100"/>
                            <attachment id="12582624" name="revive-sqlxmlutil-target.diff" size="8028" author="knutanders" created="Fri, 10 May 2013 15:17:09 +0100"/>
                            <attachment id="12585864" name="simplify-with-java5-v2.diff" size="4647" author="knutanders" created="Mon, 3 Jun 2013 15:35:02 +0100"/>
                            <attachment id="12585837" name="simplify-with-java5.diff" size="3891" author="knutanders" created="Mon, 3 Jun 2013 13:03:34 +0100"/>
                            <attachment id="12630959" name="sqldecimal-reflection.diff" size="3958" author="knutanders" created="Tue, 25 Feb 2014 15:03:41 +0000"/>
                            <attachment id="12582913" name="testcode.diff" size="61707" author="knutanders" created="Mon, 13 May 2013 11:04:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>43.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 May 2013 20:39:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326445</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hze633:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326790</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>