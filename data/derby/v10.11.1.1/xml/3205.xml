<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3205/DERBY-3205.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3205] Replication: Add connection url command options for starting, stopping slave and for failover</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3205</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Add commands to start and stop the replication slave using properties or connection url. Example:&lt;/p&gt;

&lt;p&gt;&apos;jdbc:derby:&amp;lt;host&amp;gt;&amp;lt;dbname&amp;gt;;startSlave=true&apos;;&lt;br/&gt;
&apos;jdbc:derby:&amp;lt;host&amp;gt;&amp;lt;dbname&amp;gt;;stopSlave=true&apos;;&lt;br/&gt;
&apos;jdbc:derby:&amp;lt;host&amp;gt;&amp;lt;dbname&amp;gt;;failover=true;&lt;/p&gt;

&lt;p&gt;Connection url options that must be recognized:&lt;br/&gt;
startSlave=true&lt;br/&gt;
stopSlave=true&lt;br/&gt;
failover=true&lt;br/&gt;
slaveHost=&amp;lt;host&amp;gt; (optional, defaults to localhost) (only for startSlave)&lt;br/&gt;
slavePort=&amp;lt;port&amp;gt; (optional, defaults to 8001) (only for startSlave)&lt;/p&gt;

&lt;p&gt;See functional specification on Derby-2872 for further details.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382570">DERBY-3205</key>
            <summary>Replication: Add connection url command options for starting, stopping slave and for failover</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12372418">DERBY-2872</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jorgenlo">J&#248;rgen L&#248;land</assignee>
                                    <reporter username="jorgenlo">J&#248;rgen L&#248;land</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Nov 2007 12:05:12 +0000</created>
                <updated>Thu, 2 May 2013 03:29:12 +0100</updated>
                            <resolved>Mon, 3 Mar 2008 11:50:00 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12542749" author="jorgenlo" created="Thu, 15 Nov 2007 12:19:10 +0000"  >&lt;p&gt;This issue is meant to handle the aforementioned start/stop commands &lt;b&gt;after&lt;/b&gt; the database has been copied to the correct slave location. An issue for copying the database over the master/slave network connection will be added later.&lt;/p&gt;

&lt;p&gt;I played a bit with startSlave in the proof of concept code. Using a &quot;two phase&quot; login like in encrypt database seems like a good plan since we need to authenticate and authorize users starting the slave replication behavior (if these security measures are turned on). A quick and dirty implementation of the plan below seems to work fine in the proof of concept code:&lt;/p&gt;

&lt;p&gt;EmbedConnection#&amp;lt;init&amp;gt; &lt;br/&gt;
if (isReplicationSlaveStart == true)&lt;br/&gt;
1) boot database with Property value REPLICATION_MODE=PRE_SLAVE_MODE set (property not in codeline yet). This ensures that LogToFile does not write anything to the log files (very important!! Functionality not in codeline yet)&lt;br/&gt;
2) authenticate user with the booted database. &lt;br/&gt;
3) shut the database down&lt;br/&gt;
4) boot the database with Property value REPLICATION_MODE=SLAVE_MODE set (property already in the codeline). This ensures that the slave replication functionality is booted, and that the logging system does not leave LogToFile#recover() (functionality already in codeline)&lt;/p&gt;</comment>
                            <comment id="12543074" author="jorgenlo" created="Fri, 16 Nov 2007 13:51:45 +0000"  >&lt;p&gt;Attaching the startslave code that I already tested in the proof of concept codeline. This code needs cleanup, but should give an idea of how the two-phase boot of startSlave could be done. The patch is not intended for commit!&lt;/p&gt;</comment>
                            <comment id="12555084" author="narayanan" created="Mon, 31 Dec 2007 12:00:43 +0000"  >&lt;p&gt;Pls find attached preliminary patches for stopSlave and failover. These patches&lt;br/&gt;
conflict with 3189 and 3254 and can be committed only after these patches&lt;br/&gt;
are committed.&lt;/p&gt;

&lt;p&gt;I request for these patches to be considered for reviews and comments.&lt;/p&gt;</comment>
                            <comment id="12556837" author="jorgenlo" created="Tue, 8 Jan 2008 08:05:05 +0000"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;While working on derby-3184, I needed the startSlave command for testing. The attached patch, startSlave_1a, is extracted from that work. Have a look at it and see if it fits into your plan for this issue. All tests passed for this patch combined with patch 2a on derby-3184.&lt;/p&gt;</comment>
                            <comment id="12556838" author="jorgenlo" created="Tue, 8 Jan 2008 08:25:00 +0000"  >&lt;p&gt;I had a look at the stopSlave and failover v1 patch.  A few comments:&lt;/p&gt;

&lt;p&gt;You cannot get a connection to a database in replication slave mode. This implies that:&lt;/p&gt;

&lt;p&gt;1) (I have not tried it, but...) I think the new method EmbedConnection#handleStopReplicationSlave will not work because the call to getLanguageConnection() will throw an exception (cannot connect...). See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2872&quot; title=&quot;Add Replication functionality to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2872&quot;&gt;&lt;del&gt;DERBY-2872&lt;/del&gt;&lt;/a&gt; discussion and funcspec for more details why authorization cannot be performed on a database in slave mode.&lt;/p&gt;

&lt;p&gt;2) Since you cannot get a connection to the database, tr.getDatabase().&amp;lt;method&amp;gt; will not work. The stopSlave command must be handed to the slave database through connect, i.e. by setting a value in the Properties object and calling tr.getDatabase(). Instead of tr.getDatabase().stopReplicationSlave(), you need to do:&lt;/p&gt;

&lt;p&gt;p.setProperty(SlaveFactory.REPLICATION_MODE, SlaveFactory.STOP);&lt;br/&gt;
tr.getDatabase();&lt;/p&gt;

&lt;p&gt;And in SlaveDatabase.setupConnection, you will need:&lt;/p&gt;

&lt;p&gt;String isStop = p.getProperty(SlaveFactory.REPLICATION_MODE);&lt;br/&gt;
if (isStop.equals(SlaveFactory.STOP)) &lt;/p&gt;
{
  slaveFac.stopReplicationSlave();
}</comment>
                            <comment id="12558539" author="jorgenlo" created="Mon, 14 Jan 2008 08:15:50 +0000"  >&lt;p&gt;I&apos;ve been thinking about this issue for a few days, and I think my second comment may be disregarded. That is, it may be possible to call getDatabase().stopDatabase() as long as you do this before any call to getDatabase().getTransaction().  &lt;/p&gt;</comment>
                            <comment id="12558631" author="oysteing" created="Mon, 14 Jan 2008 15:18:21 +0000"  >&lt;p&gt;I applied the startSlave_1a.diff patch, and was able to start a slave, and a master was able to connect.&lt;/p&gt;

&lt;p&gt;However, I am not quite satisfied with the messages I got:&lt;/p&gt;

&lt;p&gt;&amp;gt; java -jar jars/sane/derbyrun.jar ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:slaveDB;startSlave=true&apos;;&lt;br/&gt;
ERROR 08004: Connection refused to database &apos;slaveDB&apos; because it is in replication slave mode.&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:slaveDB&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED Unexpected - There is no valid authentication service for the database!: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:slaveDB;startSlave=true&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED Unexpected - There is no valid authentication service for the database!: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
ij&amp;gt; &lt;/p&gt;

&lt;p&gt;For the first connection, I think it would be good if it said something&lt;br/&gt;
about the slave having been started.  The current message may lead one&lt;br/&gt;
to think that the database was already in slave mode before the&lt;br/&gt;
connection was attempted.&lt;/p&gt;

&lt;p&gt;For the second connection, I would have expected the first message.  I&lt;br/&gt;
have not tried to run an insane version to see what happens when the&lt;br/&gt;
assert is not hit.&lt;/p&gt;

&lt;p&gt;For the third connection, it would be good if a warning was given that&lt;br/&gt;
the database was already in slave mode.&lt;/p&gt;</comment>
                            <comment id="12558976" author="jorgenlo" created="Tue, 15 Jan 2008 08:53:11 +0000"  >&lt;p&gt;Hi &#216;ystein - thanks for reviewing this patch.&lt;/p&gt;

&lt;p&gt;I agree that the first connection should give a more meaningful exception. I will change this to &quot;Connection refused - replication slave mode started successfully for database &apos;x&apos;&quot;&lt;/p&gt;

&lt;p&gt;Connection attempt 2-&amp;gt; will get the  exception from the first conn attempt once patch 3 on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3184&quot; title=&quot;Replication: Connection attempts to a database in slave mode must fail&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3184&quot;&gt;&lt;del&gt;DERBY-3184&lt;/del&gt;&lt;/a&gt; is in.&lt;/p&gt;</comment>
                            <comment id="12559029" author="jorgenlo" created="Tue, 15 Jan 2008 11:55:39 +0000"  >&lt;p&gt;The attached startslave patch, v1b, adds exceptions in the following cases:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;if startSlave is combined with any of create/shutdown/encrypt*/upgrade*&lt;/li&gt;
	&lt;li&gt;if startSlave is requested on an already booted database&lt;/li&gt;
	&lt;li&gt;if startSlave completes successfully, throws a more descriptive exception than v1a&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12559036" author="oysteing" created="Tue, 15 Jan 2008 12:24:59 +0000"  >&lt;p&gt;After my latest commit, the v1b patch does not apply cleanly anymore.&lt;br/&gt;
Please, could you regenerate the patch?&lt;/p&gt;</comment>
                            <comment id="12559048" author="jorgenlo" created="Tue, 15 Jan 2008 13:19:11 +0000"  >&lt;p&gt;startSlave v1c changes SQLState of the new exceptions to reflect changes in other patches.&lt;/p&gt;</comment>
                            <comment id="12559407" author="oysteing" created="Wed, 16 Jan 2008 09:21:20 +0000"  >&lt;p&gt;If I first try to start the slave with another user than the database&lt;br/&gt;
owner (DBO), and then try the DBO afterwards, the following happens:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:slaveDB;user=johndoe;password=pass;startSlave=true&apos;;&lt;br/&gt;
ERROR 08004: User &apos;JOHNDOE&apos; cannot issue a replication operation on database &apos;slaveDB&apos;. Only the database owner can perform this operation.&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:slaveDB;user=oystein;password=pass;startSlave=true&apos;;&lt;br/&gt;
ERROR XRE09: Cannot start replication slave mode for database &apos;slaveDB&apos;. The database has already been booted. &lt;br/&gt;
ij&amp;gt;&lt;/p&gt;

&lt;p&gt;Both users are defined as system users before creating the master&lt;br/&gt;
(derby.properties are shared between master and slave).&lt;/p&gt;
</comment>
                            <comment id="12559413" author="oysteing" created="Wed, 16 Jan 2008 09:33:57 +0000"  >&lt;p&gt;I still get the assert if try to connect to a booted slave:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:slaveDB;user=oystein;password=pass;startSlave=true&apos;;&lt;br/&gt;
ERROR XRE08: Replication slave mode started successfully for database &apos;slaveDB&apos;. Connection refused because the database is in replication slave mode. &lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:slaveDB;user=johndoe;password=pass&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED Unexpected - There is no valid authentication service for the database!: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
ij&amp;gt; &lt;/p&gt;</comment>
                            <comment id="12559421" author="oysteing" created="Wed, 16 Jan 2008 09:56:05 +0000"  >&lt;p&gt;The code for the  startSlave_1c.diff looks good, but I wonder whether it would be possible to avoid the duplication of code with respect to the other multi-phase boot scenario.  Would it be possible to integrate the multiphase for the slave with the existing code?&lt;/p&gt;

&lt;p&gt;I must also admit that I do not quite understand why there is two Attribute.java files.&lt;/p&gt;</comment>
                            <comment id="12559851" author="jorgenlo" created="Thu, 17 Jan 2008 07:54:54 +0000"  >&lt;p&gt;Hi &#216;ystein, &lt;/p&gt;

&lt;p&gt;Thanks for reviewing the patch. The attached patch is improved over the last one in the following ways:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Removes duplication of code by wiring in on the other two phase boot code in EmbedConnection&lt;/li&gt;
	&lt;li&gt;Shuts down the database after the first boot if authentication fails, which means you will be able to retry startSlave with other credentials&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And regarding two Attribute.java file - I have no idea why there are two of them. Maybe one could be removed?&lt;/p&gt;</comment>
                            <comment id="12560312" author="oysteing" created="Fri, 18 Jan 2008 09:28:02 +0000"  >&lt;p&gt;Thanks for the new patch, J&#248;rgen&lt;br/&gt;
Committed patch, startSlave_1d.diff, as revision 613097.&lt;/p&gt;</comment>
                            <comment id="12560785" author="narayanan" created="Sun, 20 Jan 2008 08:52:56 +0000"  >&lt;p&gt;This patch has been used to submit patches for the failover url also hence&lt;br/&gt;
updating the issue description to reflect the same.&lt;/p&gt;</comment>
                            <comment id="12560786" author="narayanan" created="Sun, 20 Jan 2008 08:58:50 +0000"  >&lt;p&gt;I have been trying to integrate the preliminary failover patch here and the failover&lt;br/&gt;
implementation patch submitted as part of Derby-3254 and I found a few issues in&lt;br/&gt;
both patches.&lt;/p&gt;

&lt;p&gt;1) The patch  failover_impl_3205_NotForCommit_v1.diff needs to use Monitor#findServiceModule&lt;br/&gt;
     instead of Monitor#bootServiceModule in RawStore#failover().&lt;/p&gt;

&lt;p&gt;I shall enumerate the issues found in the failover implementation in the jira for that issue.&lt;/p&gt;
</comment>
                            <comment id="12560929" author="narayanan" created="Mon, 21 Jan 2008 04:21:25 +0000"  >&lt;p&gt;I have addressed the issues found in the earlier failover url.&lt;br/&gt;
Pls note that this patch is dependent on the failover implementation&lt;br/&gt;
that being done as part of Derby-3254 and will not compile without&lt;br/&gt;
the startFailover method introduced in 3254.&lt;/p&gt;</comment>
                            <comment id="12561008" author="jorgenlo" created="Mon, 21 Jan 2008 13:47:23 +0000"  >&lt;p&gt;The attached patch, stopSlave v1a, adds the functionality for stopSlave=true.&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc...;stopSlave=true&apos; gives the following results:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Unbooted DB or DB booted without startSlave: &quot;ERROR XRE40: Could not stop replication because the database is not in replication slave mode.&quot;&lt;/li&gt;
	&lt;li&gt;Connection with master is up: &quot;ERROR XRE41: Replication operation &apos;failover&apos; or &apos;stopSlave&apos; failed because the connection with the master is working. Issue the &apos;failover&apos; or &apos;stopMaster&apos; operation on the master database instead.&quot;&lt;/li&gt;
	&lt;li&gt;No connection with master: &quot;ERROR 08006: Database &apos;test&apos; shutdown.&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All tests passed. The patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12561972" author="narayanan" created="Thu, 24 Jan 2008 08:35:40 +0000"  >&lt;p&gt;I ran tests on  failover_impl_3205_v1.diff and found some failures which were replicated on a fresh workspace&lt;br/&gt;
also. I request for this patch to be considered for reviews and if everything is OK a commit too.&lt;/p&gt;</comment>
                            <comment id="12562070" author="jorgenlo" created="Thu, 24 Jan 2008 13:49:04 +0000"  >&lt;p&gt;I have tested start/stop slave a little bit. What strikes me is that I get a &quot;replication started successfully&quot; even when it does not. Added to todo-list.&lt;/p&gt;</comment>
                            <comment id="12562392" author="jorgenlo" created="Fri, 25 Jan 2008 08:09:25 +0000"  >&lt;p&gt;stopSlave is almost ready now, but I can&apos;t see any way of closing the ServerSocket listening for incoming Master connections. Do you know if teardown functionality of the replication network is something we have forgotten to add Narayanan?&lt;/p&gt;</comment>
                            <comment id="12562404" author="narayanan" created="Fri, 25 Jan 2008 08:48:19 +0000"  >&lt;p&gt;You are right in your observation Jorgen. I have attached a patch here that adds this new functionality. Pls feel free to use it for the patch you are working on. &lt;/p&gt;</comment>
                            <comment id="12562498" author="jorgenlo" created="Fri, 25 Jan 2008 13:53:15 +0000"  >&lt;p&gt;Thanks for the quick reply, Narayanan. I included your socket close fix in stopSlave v1b, and it fixes the problem. I&apos;m now able to unplug the socket.&lt;/p&gt;

&lt;p&gt;Version 1b of stopSlave has the following functionality changes compared to 1a:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Bugfix: Unplugs ServerSocket when slave is stopped&lt;/li&gt;
	&lt;li&gt;stopMaster command shuts down the slave as well (in v1a: stopMaster did not stop slave replication)&lt;/li&gt;
	&lt;li&gt;More error messages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To be able to shutdown the slave database when stop is requested from the master, I had to establish a connection in SlaveDatabase. The reason is that some cleanup is needed in TransactionResourceImpl, and this only happens when the thread shutting down the database has the EmbedConnectionContext.&lt;/p&gt;

&lt;p&gt;All tests passed. The patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12563424" author="jorgenlo" created="Tue, 29 Jan 2008 08:29:36 +0000"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;I had a look at the failover_impl_3205_v1 patch, which looks good for the most part. I have some comments - most of which are nits:&lt;/p&gt;

&lt;p&gt;1) Indentation in EmbedConnection around line 340 is strange - do you use tab length of four spaces? From the diff file I would guess you have a tab space of 8...&lt;br/&gt;
2) Typo in javadoc of EmbedConnection#isReplicationFailover - &quot;stopSlave&quot; instead of &quot;failover&quot;.&lt;br/&gt;
3) AccessFactory - I think the new method &quot;failover&quot; would be easier to find if it was placed close to the other replication methods. Feel free to ignore...&lt;br/&gt;
4) There are two Attribute.java files. I&apos;m not sure if both are in use, but previously replication attributes have been added to both files. We either need some insight on which file can be ignored or continue to add the attributes to both files.&lt;br/&gt;
5) RawStore.failover - Do you intend to write a follow-up patch with error handling for the case that MasterFactory is not found by the Monitor?&lt;br/&gt;
6) The javadoc for failover in all the classes say StandardException is thrown on error, but MasterController will always throw an exception. It would be easier to understand the code if the javadoc described the reason for throwing an exception even if failover was successful.&lt;br/&gt;
7) I tried to run the failover command on the master, which seems to work fine as long as the master and slave are still connected. If the slave has been stopped for some reason, however, failover hangs on MasterController#startFailover here: &lt;br/&gt;
ack = transmitter.readMessage();&lt;br/&gt;
I&apos;m not sure if this patch is the right one to fix this bug...&lt;/p&gt;</comment>
                            <comment id="12563931" author="narayanan" created="Wed, 30 Jan 2008 10:00:58 +0000"  >&lt;p&gt;Thank you for the review and comments on the patch Jorgen!&lt;/p&gt;

&lt;p&gt;I have fixed issues 1-6 pointed out and have raised Derby-3364 for 7.&lt;/p&gt;

&lt;p&gt;&amp;gt;4) There are two Attribute.java files. I&apos;m not sure if both are in use, but previously &lt;br/&gt;
&amp;gt;replication attributes have been added to both files. We either need some insight on &lt;br/&gt;
&amp;gt;which file can be ignored or continue to add the attributes to both files.&lt;/p&gt;

&lt;p&gt;I used the following comments to in  org.apache.derby.iapi.reference.Attributes to&lt;br/&gt;
conclude that we need to place the failover attribute in both the files.&lt;/p&gt;

&lt;p&gt;    &quot;At some point this class should be replaced by&lt;br/&gt;
    org.apache.derby.shared.common.reference.Attribute.&lt;br/&gt;
    The issue is that this class is used by ij to check attributes,&lt;br/&gt;
    ij uses reflection on this class to get the list of valid attributes.&lt;br/&gt;
    The expanded class in shared has the client attributes as well.&lt;br/&gt;
    Ideally ij would work of an explicit list of attributes and not&lt;br/&gt;
    infer the set from reflection. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1151&quot; title=&quot;ij does not issue a warning if the attribute verifyKey.dat is set on an embedded URL.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1151&quot;&gt;DERBY-1151&lt;/a&gt;&quot;&lt;/p&gt;

&lt;p&gt;I shall run tests on this patch and shall post results by today evening.&lt;/p&gt;</comment>
                            <comment id="12563987" author="jorgenlo" created="Wed, 30 Jan 2008 11:58:49 +0000"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;The failover patch v2 looks good to me, although I think SQLState.REPLICATION_UNABLE_TO_STOP_MASTER would give a better error message than REPLICATION_FAILOVER_UNSUCCESSFUL in RawStore#failover if that message was slightly changed to &quot;Could not perform replication operation because... &quot;. I don&apos;t consider this a blocker for the patch.&lt;/p&gt;

&lt;p&gt;I also ran all tests without any error.  +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12564354" author="narayanan" created="Thu, 31 Jan 2008 10:08:26 +0000"  >&lt;p&gt;failover patch v2 did not give any failures in the junit all run.&lt;/p&gt;</comment>
                            <comment id="12564686" author="oysteing" created="Fri, 1 Feb 2008 08:50:11 +0000"  >&lt;p&gt;Thanks for the patch, J&#248;rgen.  It looks good, and most of my comments&lt;br/&gt;
are minor.  If you like, I can  commit the current version of the&lt;br/&gt;
patch, and you can handle my comments in a follow-up patch.&lt;/p&gt;

&lt;p&gt;To my comments:&lt;/p&gt;

&lt;p&gt;1. EmbedConnection: &lt;/p&gt;

&lt;p&gt;   a. handleDBNotFound(): The comment &quot;the finally clause below&quot; is&lt;br/&gt;
      not right anymore.  Also, the finally clause referred to is only&lt;br/&gt;
      in one of the calling methods.&lt;/p&gt;

&lt;p&gt;   b. handleStopReplicationSlave(): The two cases makes me wonder&lt;br/&gt;
      whether this should rather be two methods.  Javadoc:  &quot;call case&lt;br/&gt;
      2)&quot; sounds a bit strange.  The case 2) description ends with an&lt;br/&gt;
      incomplete sentence.&lt;/p&gt;

&lt;p&gt;2. SlaveDatabase:&lt;/p&gt;

&lt;p&gt;   a. Unused imports of MessageId and ReplicationLogger&lt;/p&gt;

&lt;p&gt;   b. Does not slaveFac need to be volatile?  The synchronization in&lt;br/&gt;
      setSlaveFactory() does not seem to be of any help since other&lt;br/&gt;
      access is not synchronized.&lt;/p&gt;

&lt;p&gt;   c. stop():  I would like a comment explaining when and for what&lt;br/&gt;
      purpose this method is called.&lt;/p&gt;

&lt;p&gt;   d. verifyShutdownSlave(): Why does this method need to be&lt;br/&gt;
      synchronized when shutdownInitiated is volatile?&lt;/p&gt;

&lt;p&gt;   e. handleShutdown(): Seems a bit strange to use the external JDBC&lt;br/&gt;
      API in an internal class.  Is there not some method that can be&lt;br/&gt;
      called to shut down a Database directly?  If doing this at JDBC&lt;br/&gt;
      level, I wonder whether it would be better use&lt;br/&gt;
      EmbeddedDataSource instead of using the DriverManager.&lt;/p&gt;

&lt;p&gt;3. SlaveController:&lt;/p&gt;

&lt;p&gt;   a. When I experiment with stopSlave, I see that the slave shutdown&lt;br/&gt;
      message is written to derby.log twice.  I have not looked into&lt;br/&gt;
      why, but I think once should be sufficient &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;   b. stop(): Javadoc says that this should be called after either&lt;br/&gt;
      stopSlave and failover, but I think this method is used by&lt;br/&gt;
      Monitor when stopping the services of a system, and I am not&lt;br/&gt;
      sure you can control the shutdown sequence for the services.&lt;/p&gt;

&lt;p&gt;   c. startSlave(): The assumption that if it is not LogToFile, it&lt;br/&gt;
      must be ReadOnly is right today.  However, this assumption makes&lt;br/&gt;
      the code brittle since it is will be hard to detect for people&lt;br/&gt;
      that want to add new implementations of LogFactory.&lt;/p&gt;

&lt;p&gt;   d. stopSlave(): Javadoc still says it is not implemented yet.&lt;/p&gt;

&lt;p&gt;   e. stopSlave(boolean): Javadoc: &quot;database system shutdown&quot;.  Do you&lt;br/&gt;
      mean the shutdown of this database, or the entire system by this&lt;br/&gt;
      term.  For the explanation of forceStop, I would rather say that&lt;br/&gt;
      &quot;if true, the slave will be shut down even if connected to the&lt;br/&gt;
      master&quot;, or something.  (Note: Same javadoc in SlaveFactory.&lt;br/&gt;
      Maybe you should consider to use @see instead?)&lt;/p&gt;

&lt;p&gt;4. LogToFile: &lt;/p&gt;

&lt;p&gt;   a. AFAICT when the slave is stopped, recovery thread will complete&lt;br/&gt;
      the redo of the current log file before stopping.  Is that&lt;br/&gt;
      intentional?&lt;/p&gt;

&lt;p&gt;   b. stopReplicationSlaveMode() and stopReplicationSlaveRole() is&lt;br/&gt;
      confusingly similar names.  At least, it confused me.  I am not&lt;br/&gt;
      sure of the distinction between mode and role here, and but I do&lt;br/&gt;
      not think the names reflect that the first causes the slave to&lt;br/&gt;
      stop while the latter causes it to do failover.&lt;/p&gt;

&lt;p&gt;5. messages:&lt;/p&gt;

&lt;p&gt;   a. Generally, it seems like the names of several of the SQLState&lt;br/&gt;
      constants are more general that the associated text.  That can&lt;br/&gt;
      lead people to reuse constants when the message is not really&lt;br/&gt;
      appropriate.&lt;/p&gt;

&lt;p&gt;   b. XRE40: Would it be an idea to mention the database name here?&lt;/p&gt;

&lt;p&gt;   c. XRE41: Maybe the message could say more explicitly that the&lt;br/&gt;
      operation was requested on a slave database.&lt;/p&gt;

&lt;p&gt;   d. XRE43: First sentence is general, but the second sentence seems&lt;br/&gt;
      to assume a very specific context.&lt;/p&gt;
</comment>
                            <comment id="12564742" author="jorgenlo" created="Fri, 1 Feb 2008 12:55:13 +0000"  >&lt;p&gt;Thanks for reviewing stopSlave v1b &#216;ystein.&lt;/p&gt;

&lt;p&gt;I have addressed most of your comments in patch 1c. Comments:&lt;/p&gt;

&lt;p&gt;2e: When a database is shut down, the TransactionResource needs to be cleaned. I found no other way of doing this than setting up a connection.&lt;/p&gt;

&lt;p&gt;3a: I don&apos;t know why the message is logged twice in derby.log. The same applies to startSlave. I will fix this in a later patch.&lt;/p&gt;

&lt;p&gt;4a: You are right, but this is not harmful since recover() is only allowed to redo log files that have been completed. The only problem with letting recover complete redo of a log file is that it may take a little longer before the database is shut down. To fix this, we could use a reference to the recovery thread and interrupt it, or we could make FileLogger check for the replicationSlaveException between every redone log record. However, I don&apos;t think this added complexity is justified at the moment. At least not until we get feedback that this is unacceptable. Unless you feel strongly about it, I will not address this now.&lt;/p&gt;

&lt;p&gt;5b: XRE40 is thrown from locations where the database name is unknown (in BasicDatabase). I&apos;m reluctant to add the dbname to the method signature only to get it into the exception text, especially since this exception is only thrown from connection-attempts that have to specify the db name.&lt;/p&gt;</comment>
                            <comment id="12564772" author="oysteing" created="Fri, 1 Feb 2008 14:16:14 +0000"  >&lt;p&gt;Thanks, J&#248;rgen.  Committed stopSlave_v1c.diff as revision 617501.&lt;/p&gt;

&lt;p&gt;One thing that probably needs correction is the Javadoc of EmbedConnection#handleStopReplicationSlave which says &quot;this operation will cause SlaveDatabase to call internalStopReplicationSlave&quot;.  This doe not seem to be correct.&lt;/p&gt;

&lt;p&gt;I do not understand your comment on 2e. about the TransactionResource needed to be cleaned.  When you set up a new connection, don&apos;t you get a new TransactionResource? If so, I do not understand why you need to create a new TransactionResource just to clean it.&lt;/p&gt;</comment>
                            <comment id="12564782" author="jorgenlo" created="Fri, 1 Feb 2008 14:35:38 +0000"  >&lt;p&gt;Thanks for committing the patch, &#216;ystein.&lt;/p&gt;

&lt;p&gt;&amp;gt; One thing that probably needs correction is the Javadoc of EmbedConnection#handleStopReplicationSlave which says &quot;this operation will cause SlaveDatabase to call internalStopReplicationSlave&quot;. This doe not seem to be correct. &lt;/p&gt;

&lt;p&gt;I agree - the javadoc could be clearer. But it wil, in fact, cause SlaveDatabase to call internalStopReplicationSlave from the thread used to boot services. After the thread in LogToFile.recover() is told to throw an exception (LogToFile.stopReplicationSlaveMode), the exception is propagates all the way down to SlaveDatabase and causes handleShutdown to be called.&lt;/p&gt;

&lt;p&gt;&amp;gt; I do not understand your comment on 2e. about the TransactionResource needed to be cleaned. When you set up a new connection, don&apos;t you get a new TransactionResource? If so, I do not understand why you need to create a new TransactionResource just to clean it. &lt;/p&gt;

&lt;p&gt;I&apos;m actually not sure about how the connection/transactionresource code works. It could be the root connection that messes things up.&lt;/p&gt;</comment>
                            <comment id="12564786" author="oysteing" created="Fri, 1 Feb 2008 14:44:59 +0000"  >&lt;p&gt;I am not sure, but maybe a shutdown can be achieved by calling ContextManager#cleanupOnError with a shutdown exception?  If so you should be able to use the ContextManager of the boot thread.&lt;/p&gt;</comment>
                            <comment id="12564789" author="jorgenlo" created="Fri, 1 Feb 2008 14:56:27 +0000"  >&lt;p&gt;&amp;gt; I am not sure, but maybe a shutdown can be achieved by calling ContextManager#cleanupOnError with a shutdown exception? If so you should be able to use the ContextManager of the boot thread.&lt;/p&gt;

&lt;p&gt;I tried doing that in handleShutdown first, but then I get an ASSERT error the next time I try to connect to the database that used to be slave. I think the problem is that that thread does not have a connection context. But I must admit I&apos;m fumbling blindly here...&lt;/p&gt;</comment>
                            <comment id="12564798" author="oysteing" created="Fri, 1 Feb 2008 15:30:48 +0000"  >&lt;p&gt;The failover patch (v2) has some conflicts with the stopSlave patch I just committed.  (E.g., the name of an SQLState used by the patch has got a new name). Could you please regenerate the patch.&lt;/p&gt;</comment>
                            <comment id="12564802" author="jorgenlo" created="Fri, 1 Feb 2008 15:43:38 +0000"  >&lt;p&gt;&#216;ystein,&lt;/p&gt;

&lt;p&gt;It&apos;s a few days since I wrote this patch, and I just remembered what caused problem: When the stop slave command comes from the master, we can&apos;t throw the database severity exception to a thread that will hand it to TransactionResourceImpl#handleException. I&apos;m not sure why, but there seems to be some caching or a reference to the booted database in the EmbedConnection layer which needs to be cleaned up. Hence the internal connection in SlaveDatabase#handleShutdown&lt;/p&gt;

&lt;p&gt;In the case that stopSlave is executed on the slave database (from a client, through EmbedConnection#handleStopReplicationSlave), everything works fine without the internal connection.&lt;/p&gt;</comment>
                            <comment id="12565091" author="narayanan" created="Sat, 2 Feb 2008 17:41:26 +0000"  >&lt;p&gt;fixed the conflicts in v2 of the failover patch.&lt;/p&gt;</comment>
                            <comment id="12565295" author="oysteing" created="Mon, 4 Feb 2008 09:36:15 +0000"  >&lt;p&gt;Thanks for the patch, Narayanan. v3 of the failover patch looks very good.&lt;br/&gt;
I have only a few minor comments.&lt;/p&gt;

&lt;p&gt;1. EmbedConnection#handleFailover: There seems to be a cut&amp;amp;paste error&lt;br/&gt;
   for comment in handleFailover (talks about ready to start&lt;br/&gt;
   replication)&lt;/p&gt;

&lt;p&gt;2. a. Exception javadocs:  A missing comment after &quot;If the failover&lt;br/&gt;
      succeeds&quot;&lt;br/&gt;
   b. I think you could use @see a bit more instead of repeating the&lt;br/&gt;
      javadoc.  Makes it less brittle if the behavior changes.&lt;/p&gt;

&lt;p&gt;3. RawStore#failover: Use another version of newException to chain the&lt;br/&gt;
   caught exception, se, to the REPLICATION_FAILOVER_UNSUCCESSFUL&lt;br/&gt;
   exception.&lt;/p&gt;</comment>
                            <comment id="12565312" author="narayanan" created="Mon, 4 Feb 2008 12:00:58 +0000"  >&lt;p&gt;&amp;gt;a. Exception javadocs: A missing comment after &quot;If the failover&lt;br/&gt;
&amp;gt;      succeeds&quot; &lt;/p&gt;

&lt;p&gt;Are you pointing out these diffs&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @throws StandardException 1) If the failover succeeds&lt;br/&gt;
+     * @throws StandardException 1) If the failover succeeds an exception is&lt;br/&gt;
+     *                              thrown to indicate that the master database&lt;br/&gt;
+     *                              was shutdown after a successful failover&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There is a &apos;-&apos; sign before the first line which is being replaced by the second&lt;br/&gt;
lines with the &apos;&lt;ins&gt;&apos; lines. The lines with the &apos;&lt;/ins&gt;&apos; lines are complete.&lt;/p&gt;

&lt;p&gt;Do you see a place in the patch where I have not replaced the original one&lt;br/&gt;
liner with the better and more complete comment?&lt;/p&gt;</comment>
                            <comment id="12565313" author="narayanan" created="Mon, 4 Feb 2008 12:03:36 +0000"  >&lt;p&gt;&amp;gt;b. I think you could use @see a bit more instead of repeating the&lt;br/&gt;
&amp;gt;      javadoc. Makes it less brittle if the behavior changes.&lt;/p&gt;

&lt;p&gt;I need to change the whole gamut of call propagations to change this&lt;br/&gt;
in this patch now. (which incidentally is the very reason you are asking&lt;br/&gt;
me to do this change :-D)&lt;/p&gt;

&lt;p&gt;But, can you please  allow me to do this as a follow-up?&lt;/p&gt;</comment>
                            <comment id="12565343" author="oysteing" created="Mon, 4 Feb 2008 12:53:40 +0000"  >&lt;p&gt;If I do failover on a database where replication has not been started, I get the following:&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;failover=true&apos;;&lt;br/&gt;
ERROR XRE21: Error occurred while performing failover for database &apos;masterDB&apos;, Failover attempt was aborted.&lt;/p&gt;

&lt;p&gt;I think I should rather get an error that says that database is not being replicated.  (I get that if I try to stop replication on a non-replicated database).&lt;/p&gt;


</comment>
                            <comment id="12565352" author="oysteing" created="Mon, 4 Feb 2008 13:27:10 +0000"  >&lt;p&gt;After executing a failover, I am told that the database is shut down, but I still able to use the connection to access the database:&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_freeze_database();&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;startMaster=true;slaveHost=localhost&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; call syscs_util.syscs_unfreeze_database();&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; connect &apos;jdbc:derby:masterDB;user=oystein;password=pass;failover=true&apos;;&lt;br/&gt;
ERROR XRE20: Failover performed successfully for database &apos;null&apos;, the database has been shutdown.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; select * from t;&lt;br/&gt;
I          &lt;br/&gt;
-----------&lt;br/&gt;
1          &lt;br/&gt;
2          &lt;br/&gt;
3          &lt;br/&gt;
4          &lt;br/&gt;
5          &lt;br/&gt;
6          &lt;br/&gt;
7          &lt;br/&gt;
8          &lt;br/&gt;
9          &lt;br/&gt;
10         &lt;br/&gt;
10         &lt;/p&gt;

&lt;p&gt;11 rows selected&lt;br/&gt;
ij(CONNECTION1)&amp;gt; &lt;/p&gt;</comment>
                            <comment id="12565706" author="narayanan" created="Tue, 5 Feb 2008 11:21:15 +0000"  >&lt;p&gt;Thank you for the comments!&lt;/p&gt;

&lt;p&gt;I have fixed all the issues pointed out in the previous patch I had submitted.&lt;/p&gt;

&lt;p&gt;&amp;gt;I think you could use @see a bit more instead of repeating the&lt;br/&gt;
&amp;gt;      javadoc. Makes it less brittle if the behavior changes.&lt;/p&gt;

&lt;p&gt;I retained the original javadoc in the interfaces and used the @see in the&lt;br/&gt;
implementations. i generated the javadoc and saw that the javadocs were&lt;br/&gt;
inherited correctly with a comment like&lt;/p&gt;

&lt;p&gt;&quot;    Description copied from interface: AccessFactory&lt;br/&gt;
    Start the failover for this database.&quot;&lt;/p&gt;

&lt;p&gt;In the case of the RamAccessManager class. So I concluded that I have done&lt;br/&gt;
the right thing in the @see tags.&lt;/p&gt;

&lt;p&gt;I request for this patch to be considered for a commit.&lt;/p&gt;

</comment>
                            <comment id="12565732" author="oysteing" created="Tue, 5 Feb 2008 12:45:33 +0000"  >&lt;p&gt;Committed v4 of the failover patch as revision 618632.  Thanks for the good work, Narayanan.&lt;/p&gt;</comment>
                            <comment id="12565737" author="narayanan" created="Tue, 5 Feb 2008 13:07:21 +0000"  >&lt;p&gt;Thank you for the commit and the guidance through the patch Oystein &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Narayanan&lt;/p&gt;

</comment>
                            <comment id="12566965" author="jorgenlo" created="Fri, 8 Feb 2008 09:01:42 +0000"  >&lt;p&gt;Assigning myself to this issue since I submitted most of the slave-side url patches.&lt;/p&gt;

&lt;p&gt;Apart from adding junit tests for the patches, the only work left on this issue is to enable the failover command on the slave side. I&apos;ll start working on slave side failover now&lt;/p&gt;</comment>
                            <comment id="12568133" author="jorgenlo" created="Tue, 12 Feb 2008 14:17:38 +0000"  >&lt;p&gt;The attached patch, failover-slave-1a, adds failover functionality to the slave-side. I have not found the proper way to remove the SlaveFactory module from the Monitor after a failover, so I&apos;ll leave that task to a follow-up patch. Request for review.&lt;/p&gt;</comment>
                            <comment id="12568454" author="jorgenlo" created="Wed, 13 Feb 2008 07:09:44 +0000"  >&lt;p&gt;All tests passed for patch failover slave v1a&lt;/p&gt;</comment>
                            <comment id="12571436" author="oysteing" created="Fri, 22 Feb 2008 15:14:29 +0000"  >&lt;p&gt;Thanks for the failover patch for slave, J&#248;rgen.  It looks good to me,&lt;br/&gt;
but I have not had a chance to try it out yet.  My only concern from&lt;br/&gt;
reading the code is whether there a scenarios where we get into a&lt;br/&gt;
situation where the master fails and the slave refuses to do failover.&lt;br/&gt;
As far as I can tell, the only way the slave will recognize that the&lt;br/&gt;
connection with the master is lost is if the LogReceiver gets a&lt;br/&gt;
EOFException.  Are you sure that covers all the situations where the&lt;br/&gt;
master fails?&lt;/p&gt;

&lt;p&gt;A minor issue: I do not quite understand the comment for &quot;if&lt;br/&gt;
(isFailoverMasterBoot)&quot;.  Are you saying this must happen after&lt;br/&gt;
startTransaction in order for authentication/authorization to happen&lt;br/&gt;
first?&lt;/p&gt;</comment>
                            <comment id="12572042" author="jorgenlo" created="Mon, 25 Feb 2008 10:18:22 +0000"  >&lt;p&gt;Re lost replication connection: &lt;br/&gt;
I have experimented a bit and not found a way to loose the connection without the slave noticing, but I&apos;m afraid I&apos;m not 100% sure. Maybe Socket.isConnected can be used? Otherwise, pinging the master would be a way to be absolutely sure. That would require more work though.&lt;/p&gt;

&lt;p&gt;Re comment on EmbedConnection isFailoverMasterBoot:&lt;br/&gt;
Authentication is checked as part of startTransaction. That is why the slave-side failover must be performed before startTransaction while master-side failover must be performed after startTransaction. However, I see that db ownership is not checked for any of startMaster, stopMaster or masterside failover. If it is ok with you, I&apos;ll move these three down a few lines to the following block:&lt;/p&gt;

&lt;p&gt;if (isTwoPhaseEncryptionBoot ||&lt;br/&gt;
    isTwoPhaseUpgradeBoot ||&lt;br/&gt;
    isStartSlaveBoot) &lt;/p&gt;
{
...}

&lt;p&gt;in a followup patch.&lt;/p&gt;</comment>
                            <comment id="12572052" author="oysteing" created="Mon, 25 Feb 2008 11:04:17 +0000"  >&lt;p&gt;One concern is what will have if the master process hangs or something.  What will then happen to the TCP connection?  I guess one solution is that the administrator will have to kill the master process if it becomes unresponsive, before attempting failover on the slave.&lt;/p&gt;

&lt;p&gt;I am glad that my question on authentication made you think of other issues.  Anyhow, it would be good if you could make the comment a bit clearer. &lt;/p&gt;</comment>
                            <comment id="12572055" author="oysteing" created="Mon, 25 Feb 2008 11:06:43 +0000"  >&lt;p&gt;I have briefly tested the added functionality, and it worked for me.&lt;br/&gt;
Patch, failover-slave-1a.diff, committed as revision 630806.&lt;/p&gt;</comment>
                            <comment id="12572503" author="jorgenlo" created="Tue, 26 Feb 2008 14:48:33 +0000"  >&lt;p&gt;Patch failover-slave 2a is a follow-up of 1a. It does:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ensures that no other operation is used in the same conn&lt;br/&gt;
   attempt as failover (also added this check for all other&lt;br/&gt;
   repliation operations)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;checks that the caller of master-side failover is db&lt;br/&gt;
   owner (also added to other master-side replication commands)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/slave/SlaveController.java&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;replication network connection is shutdown (including streams&lt;br/&gt;
   and socket) when failover is processed&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All tests passed.&lt;/p&gt;</comment>
                            <comment id="12572876" author="oysteing" created="Wed, 27 Feb 2008 11:19:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3472&quot; title=&quot;Replication: Thread deadlock when deleting many records.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3472&quot;&gt;&lt;del&gt;DERBY-3472&lt;/del&gt;&lt;/a&gt; illustrates the concern I have with the current limitation on slave-initiated failover.&lt;br/&gt;
A thread deadlock occurs on the master, but the slave is not allowed to do failover because the connection to the master is still up.&lt;/p&gt;</comment>
                            <comment id="12573264" author="oysteing" created="Thu, 28 Feb 2008 13:07:39 +0000"  >&lt;p&gt;I have look at the failover-slave-2a patch, and the EmbedConnection&lt;br/&gt;
changes looks good.  I have also tested that if I am not the database&lt;br/&gt;
owner, I am not allowed to initiate failover.&lt;/p&gt;

&lt;p&gt;For the SlaveController changes, I do not quite understand the&lt;br/&gt;
catching of SecurityException in stopReceiverThread.  Is this&lt;br/&gt;
something you get when you run with the security manager?  Does this&lt;br/&gt;
mean that this should ideally be put in a doPrivileged call?  If it&lt;br/&gt;
happens, I guess the thread will not be interrupted, but according to&lt;br/&gt;
the comment this is OK since the thread will stop anyway.  So why call&lt;br/&gt;
interrupt in the first place?&lt;/p&gt;

&lt;p&gt;I tested a scenario where I started replication and directly killed&lt;br/&gt;
the master without performing any database operations.  When I&lt;br/&gt;
performed failover on the slave, the statement never completed.  The&lt;br/&gt;
derby.log file showed that the recovery thread had got an error&lt;br/&gt;
similar to what I reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3475&quot; title=&quot;Replication:  Slave reports ERROR XSLA7: Cannot redo operation null in the log.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3475&quot;&gt;&lt;del&gt;DERBY-3475&lt;/del&gt;&lt;/a&gt; after it had detected that&lt;br/&gt;
the master had died.  This caused the boot thread to terminate, but&lt;br/&gt;
my connection attempt was still hanging in the sleep call of&lt;br/&gt;
SlaveDatabase#failover.  It seems there is some more clean-up that is&lt;br/&gt;
missing.&lt;/p&gt;</comment>
                            <comment id="12573765" author="jorgenlo" created="Fri, 29 Feb 2008 14:38:31 +0000"  >&lt;p&gt;Thanks for reviewing the patch, &#216;ystein&lt;/p&gt;

&lt;p&gt;The security exception can be thrown if SecurityManager is used. But according to the API and some testing, you cannot interrupt a thread listening to a stream on a Socket. Hence, the interrupt does not have any effect unless we decide to use an InterruptableChannel instead of a plain Socket. In patch v2b, I simply removed the interrupt. In testing, the log receiver thread consistently gets an EOFException when teardownNetwork is called. Will report back with test results.&lt;/p&gt;</comment>
                            <comment id="12574370" author="jorgenlo" created="Mon, 3 Mar 2008 07:50:45 +0000"  >&lt;p&gt;All tests passed for patch failover slave 2b.&lt;/p&gt;</comment>
                            <comment id="12574443" author="oysteing" created="Mon, 3 Mar 2008 11:42:35 +0000"  >&lt;p&gt;Patch, failover-slave-2b.diff committed as revision 633043.&lt;/p&gt;</comment>
                            <comment id="12574449" author="jorgenlo" created="Mon, 3 Mar 2008 11:50:00 +0000"  >&lt;p&gt;All issues on this jira have been addressed. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12382092">DERBY-3189</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12381988">DERBY-3184</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12374145">DERBY-2954</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12374012" name="Socket_Close_Fix_v1.diff" size="1891" author="narayanan" created="Fri, 25 Jan 2008 08:48:19 +0000"/>
                            <attachment id="12374013" name="Socket_Close_Fix_v1.stat" size="185" author="narayanan" created="Fri, 25 Jan 2008 08:48:19 +0000"/>
                            <attachment id="12372355" name="StopSlave_impl_3205_NotForCommit_v1.diff" size="8758" author="narayanan" created="Mon, 31 Dec 2007 12:00:39 +0000"/>
                            <attachment id="12372356" name="StopSlave_impl_3205_NotForCommit_v1.stat" size="541" author="narayanan" created="Mon, 31 Dec 2007 12:00:42 +0000"/>
                            <attachment id="12369659" name="derby-3205_startslave_dontcommit.diff" size="9473" author="jorgenlo" created="Fri, 16 Nov 2007 13:51:45 +0000"/>
                            <attachment id="12369660" name="derby-3205_startslave_dontcommit.stat" size="453" author="jorgenlo" created="Fri, 16 Nov 2007 13:51:45 +0000"/>
                            <attachment id="12375362" name="failover-slave-1a.diff" size="18992" author="jorgenlo" created="Tue, 12 Feb 2008 14:17:38 +0000"/>
                            <attachment id="12375361" name="failover-slave-1a.stat" size="624" author="jorgenlo" created="Tue, 12 Feb 2008 14:17:38 +0000"/>
                            <attachment id="12376492" name="failover-slave-2a.diff" size="9902" author="jorgenlo" created="Tue, 26 Feb 2008 14:48:33 +0000"/>
                            <attachment id="12376491" name="failover-slave-2a.stat" size="156" author="jorgenlo" created="Tue, 26 Feb 2008 14:48:33 +0000"/>
                            <attachment id="12376830" name="failover-slave-2b.diff" size="9169" author="jorgenlo" created="Fri, 29 Feb 2008 14:38:31 +0000"/>
                            <attachment id="12372357" name="failover_impl_3205_NotForCommit_v1.diff" size="7757" author="narayanan" created="Mon, 31 Dec 2007 12:00:43 +0000"/>
                            <attachment id="12372359" name="failover_impl_3205_NotForCommit_v1.stat" size="469" author="narayanan" created="Mon, 31 Dec 2007 12:01:22 +0000"/>
                            <attachment id="12373655" name="failover_impl_3205_v1.diff" size="8359" author="narayanan" created="Mon, 21 Jan 2008 04:21:25 +0000"/>
                            <attachment id="12373656" name="failover_impl_3205_v1.stat" size="541" author="narayanan" created="Mon, 21 Jan 2008 04:21:25 +0000"/>
                            <attachment id="12374353" name="failover_impl_3205_v2.diff" size="13678" author="narayanan" created="Wed, 30 Jan 2008 10:00:36 +0000"/>
                            <attachment id="12374354" name="failover_impl_3205_v2.stat" size="795" author="narayanan" created="Wed, 30 Jan 2008 10:00:46 +0000"/>
                            <attachment id="12374609" name="failover_impl_3205_v3.diff" size="13784" author="narayanan" created="Sat, 2 Feb 2008 17:41:26 +0000"/>
                            <attachment id="12374610" name="failover_impl_3205_v3.stat" size="795" author="narayanan" created="Sat, 2 Feb 2008 17:41:26 +0000"/>
                            <attachment id="12374760" name="failover_impl_3205_v4.diff" size="12370" author="narayanan" created="Tue, 5 Feb 2008 11:21:15 +0000"/>
                            <attachment id="12374761" name="failover_impl_3205_v4.stat" size="795" author="narayanan" created="Tue, 5 Feb 2008 11:21:15 +0000"/>
                            <attachment id="12372695" name="startSlave_1a.diff" size="6940" author="jorgenlo" created="Tue, 8 Jan 2008 08:05:05 +0000"/>
                            <attachment id="12372694" name="startSlave_1a.stat" size="208" author="jorgenlo" created="Tue, 8 Jan 2008 08:05:04 +0000"/>
                            <attachment id="12373161" name="startSlave_1b.diff" size="9159" author="jorgenlo" created="Tue, 15 Jan 2008 11:55:39 +0000"/>
                            <attachment id="12373160" name="startSlave_1b.stat" size="335" author="jorgenlo" created="Tue, 15 Jan 2008 11:55:39 +0000"/>
                            <attachment id="12373166" name="startSlave_1c.diff" size="9231" author="jorgenlo" created="Tue, 15 Jan 2008 13:19:10 +0000"/>
                            <attachment id="12373368" name="startSlave_1d.diff" size="10715" author="jorgenlo" created="Thu, 17 Jan 2008 07:54:54 +0000"/>
                            <attachment id="12373678" name="stopSlave_v1a.diff" size="18160" author="jorgenlo" created="Mon, 21 Jan 2008 13:47:23 +0000"/>
                            <attachment id="12373679" name="stopSlave_v1a.stat" size="624" author="jorgenlo" created="Mon, 21 Jan 2008 13:47:23 +0000"/>
                            <attachment id="12374039" name="stopSlave_v1b.diff" size="31756" author="jorgenlo" created="Fri, 25 Jan 2008 13:53:15 +0000"/>
                            <attachment id="12374038" name="stopSlave_v1b.stat" size="950" author="jorgenlo" created="Fri, 25 Jan 2008 13:53:14 +0000"/>
                            <attachment id="12374546" name="stopSlave_v1c.diff" size="35594" author="jorgenlo" created="Fri, 1 Feb 2008 12:55:11 +0000"/>
                            <attachment id="12374545" name="stopSlave_v1c.stat" size="1084" author="jorgenlo" created="Fri, 1 Feb 2008 12:55:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Dec 2007 12:00:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30768</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0z9b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39530</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>