<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1368/DERBY-1368.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1368] EOFException when reading from blob&apos;s binary stream</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1368</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;reading the &apos;length()&apos; of a blob reads a previously aquired binary stream.&lt;/p&gt;

&lt;p&gt;test case:&lt;/p&gt;

&lt;p&gt;    public static void main(String[] argv) throws Exception &lt;/p&gt;
{
        String driver = &quot;org.apache.derby.jdbc.EmbeddedDriver&quot;;
        String url = &quot;jdbc:derby:derby/test;create=true&quot;;
        Class.forName(driver);
        Connection con = DriverManager.getConnection(url, &quot;sa&quot;, &quot;&quot;);
        con.setAutoCommit(true);

        // create table
        System.out.println(&quot;1) creating table...&quot;);
        Statement stmt = con.createStatement();
        stmt.execute(&quot;create table T1 (ID char(32) PRIMARY KEY, DATA blob(2G) not null)&quot;);
        stmt.close();

        // add row
        System.out.println(&quot;2) adding row...&quot;);
        byte[] data = new byte[1024*1024*1];
        data[0] = 1;
        data[1] = 2;

        PreparedStatement s = con.prepareStatement(&quot;insert into T1 (ID, DATA) values (?, ?)&quot;);
        s.setString(1, &quot;id&quot;);
        s.setBytes(2, data);
        s.execute();
        s.close();

        // read row
        System.out.println(&quot;3) reading row...&quot;);
        s = con.prepareStatement(&quot;select DATA from T1 where ID = ?&quot;);
        s.setString(1, &quot;id&quot;);
        s.execute();
        ResultSet rs = s.getResultSet();
        rs.next();
        Blob b = rs.getBlob(1);

        // test output
        System.out.println(&quot;4) Length: &quot; + b.length());
        InputStream in = b.getBinaryStream();
        System.out.println(&quot;   First Byte: &quot; + in.read());
        in.close();

        in = b.getBinaryStream();
        System.out.println(&quot;5) Length: &quot; + b.length());
        System.out.println(&quot;   First Byte: &quot; + in.read());
        in.close();

        rs.close();
        s.close();
        con.close();
    }


&lt;p&gt;gives:&lt;/p&gt;

&lt;p&gt;1) creating table...&lt;br/&gt;
2) adding row...&lt;br/&gt;
3) reading row...&lt;br/&gt;
4) Length: 1048576&lt;br/&gt;
   First Byte: 1&lt;br/&gt;
5) Length: 1048576&lt;br/&gt;
   First Byte: -1&lt;/p&gt;

&lt;p&gt;imo, 5) is wrong.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12343847">DERBY-1368</key>
            <summary>EOFException when reading from blob&apos;s binary stream</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tripod">Tobias Bocanegra</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Jun 2006 17:30:25 +0100</created>
                <updated>Wed, 27 Feb 2008 19:43:36 +0000</updated>
                            <resolved>Tue, 8 Jan 2008 18:47:54 +0000</resolved>
                                    <version>10.1.2.1</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12414446" author="djd" created="Fri, 2 Jun 2006 23:41:13 +0100"  >&lt;p&gt;I think this is fixed for most cases in the 10.2/trunk line. For any newly inserted value it will be. In some cases with an value from an upgraded database it will not be, though your test program will not show that case.  In most cases now the length is stored with the value, if not the first call to length() on the Blob will save the determined value.&lt;/p&gt;</comment>
                            <comment id="12415444" author="skambha" created="Fri, 9 Jun 2006 06:51:27 +0100"  >&lt;p&gt;I took the testcase code snippet  and ran the program  Derby1368 on 10.2.0.3 alpha classes ( 412194) and it works OK as Dan pointed out.   &lt;/p&gt;

&lt;p&gt;Here is the output:&lt;br/&gt;
C:\TESTING&amp;gt;java Derby1368&lt;br/&gt;
1) creating table...&lt;br/&gt;
2) adding row...&lt;br/&gt;
3) reading row...&lt;br/&gt;
4) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;br/&gt;
5) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;/p&gt;</comment>
                            <comment id="12415445" author="mikem" created="Fri, 9 Jun 2006 06:53:44 +0100"  >&lt;p&gt;This test passed against the trunk  as Dan supposed, the problem is fixed there.  Marking&lt;br/&gt;
it fixed against the trunk.  If it needs to get back ported, one will have to find the actual change - &lt;br/&gt;
there is no change associated with this jira.&lt;/p&gt;</comment>
                            <comment id="12418747" author="kmarsden" created="Sat, 1 Jul 2006 09:00:07 +0100"  >&lt;p&gt;This issue was marked Fixed with no comments, but I verified the  program output on 10.2&lt;br/&gt;
$ java Derby1368&lt;br/&gt;
1) creating table...&lt;br/&gt;
2) adding row...&lt;br/&gt;
3) reading row...&lt;br/&gt;
4) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;br/&gt;
5) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;/p&gt;

&lt;p&gt;So it does seem to be fixed but don&apos;t know exactly what fixed it.&lt;br/&gt;
Perhaps Tobias can close if the fix is ok.&lt;/p&gt;
</comment>
                            <comment id="12419350" author="djd" created="Thu, 6 Jul 2006 06:28:24 +0100"  >&lt;p&gt;I think this will still be an issue if the binary value passed in does not have a length associated with it, e.g. with the new methods added in JDBC 4.0 by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1417&quot; title=&quot;Add new, lengthless overloads to the streaming api&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1417&quot;&gt;&lt;del&gt;DERBY-1417&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12435833" author="rhillegas" created="Tue, 19 Sep 2006 15:52:45 +0100"  >&lt;p&gt;Moving to 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12458247" author="djd" created="Wed, 13 Dec 2006 19:43:02 +0000"  >&lt;p&gt;No one is working on it at the moment.&lt;/p&gt;</comment>
                            <comment id="12477155" author="bayard" created="Fri, 2 Mar 2007 01:23:00 +0000"  >&lt;p&gt;&lt;a href=&quot;http://jira.opensymphony.com/browse/QUARTZ-560&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.opensymphony.com/browse/QUARTZ-560&lt;/a&gt; appears to be a similar problem. An empty blob (I think) goes in and when it comes out it sometimes fires an EOFException.&lt;/p&gt;</comment>
                            <comment id="12534928" author="kmarsden" created="Mon, 15 Oct 2007 19:21:13 +0100"  >&lt;p&gt;This looks fixed with 10.3&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;C:/kmarsden/repro/DERBY-1368&amp;#93;&lt;/span&gt; java TestDerby1368&lt;br/&gt;
1) creating table...&lt;br/&gt;
2) adding row...&lt;br/&gt;
3) reading row...&lt;br/&gt;
4) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;br/&gt;
5) Length: 1048576&lt;br/&gt;
 First Byte: 1&lt;/p&gt;

&lt;p&gt;I will leave it open to add a test.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12551946" author="kmarsden" created="Fri, 14 Dec 2007 21:34:06 +0000"  >&lt;p&gt;Attaching a test for this issue. I added it into the JDBC4 tests so that we could test with lengthless overrides, since Dan had indicated that that might be a problem, but all seems to work fine.&lt;/p&gt;

&lt;p&gt;It also works fine calling getBinaryStream twice on the Blob as in the repro.  That also works fine with the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2892&quot; title=&quot;Closing a resultset after retrieving a large &amp;gt; 32665 bytes value with Network Server does not release locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2892&quot;&gt;&lt;del&gt;DERBY-2892&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;


</comment>
                            <comment id="12553387" author="kristwaa" created="Wed, 19 Dec 2007 15:55:47 +0000"  >&lt;p&gt;I had a look at the test, and it looks good to me. I ran the test with and without the patch and observed that the test count changed (98 vs 100). The test succeeded.&lt;/p&gt;

&lt;p&gt;I have two questions:&lt;br/&gt;
 a) Is the test all about getting the stream and the length twice? If so, maybe the JavaDoc could say this.&lt;br/&gt;
 b) Would it add any value to the test if we drained the stream before getting the stream the second time?&lt;br/&gt;
 c) Would it make sense to also run this with the JDBC-method taking a length argument?&lt;/p&gt;

&lt;p&gt;FYI, I noticed there is now a dropTable method in BaseJDBCTestCase, but I&apos;m not sure it adds value in this test.&lt;/p&gt;

&lt;p&gt;+1 to commit&lt;/p&gt;</comment>
                            <comment id="12556756" author="kmarsden" created="Mon, 7 Jan 2008 23:02:31 +0000"  >&lt;p&gt;Kristian asked ..&lt;br/&gt;
&amp;gt;a) Is the test all about getting the stream and the length twice? If so, maybe the JavaDoc could say this.&lt;/p&gt;

&lt;p&gt;I went back to 10.1 and tested the repro, it does in fact require you get the stream and length twice. Added this to the javadoc, but I am not actually sure if this is a legal operation.&lt;/p&gt;

&lt;p&gt;&amp;gt; b) Would it add any value to the test if &amp;gt;we drained the stream before getting &amp;gt;the stream the second time?&lt;br/&gt;
I don&apos;t know if it adds value but I added the draining of the stream.&lt;/p&gt;

&lt;p&gt; c) Would it make sense to also run this with the JDBC-method taking a length argument?&lt;/p&gt;

&lt;p&gt;added this.&lt;/p&gt;

&lt;p&gt;See new patch derby-1368_diff2.txt&lt;/p&gt;</comment>
                            <comment id="12556974" author="kmarsden" created="Tue, 8 Jan 2008 18:47:54 +0000"  >&lt;p&gt;Per Dan&apos;s comment this has been fixed since 10.2.  I added a test.&lt;/p&gt;</comment>
                            <comment id="12557188" author="kristwaa" created="Wed, 9 Jan 2008 09:08:57 +0000"  >&lt;p&gt;I see the test has been committed (&apos;derby-1368_diff2.txt&apos;). Thanks for working on it Kathey!&lt;/p&gt;</comment>
                            <comment id="12573048" author="tripod" created="Wed, 27 Feb 2008 19:43:36 +0000"  >&lt;p&gt;thanks for fixing this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335234" name="Derby1368.java" size="1787" author="skambha" created="Fri, 9 Jun 2006 06:51:27 +0100"/>
                            <attachment id="12371696" name="derby-1368_diff.txt" size="1960" author="kmarsden" created="Fri, 14 Dec 2007 21:34:06 +0000"/>
                            <attachment id="12372676" name="derby-1368_diff2.txt" size="2597" author="kmarsden" created="Mon, 7 Jan 2008 23:02:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Jun 2006 22:41:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22464</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zan:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39536</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>