<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-940/DERBY-940.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-940] Add JDBC 4 Wrapper support</title>
                <link>https://issues.apache.org/jira/browse/DERBY-940</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;As described in the JDBC 4 spec, sections 21 and 3.1.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12328824">DERBY-940</key>
            <summary>Add JDBC 4 Wrapper support</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Feb 2006 04:41:49 +0000</created>
                <updated>Wed, 1 Jul 2009 01:34:43 +0100</updated>
                            <resolved>Wed, 3 Jan 2007 01:36:19 +0000</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12365959" author="bandaram" created="Sat, 11 Feb 2006 05:01:15 +0000"  >&lt;p&gt;It would be useful to set Component, Affect version and/or Fix version if known, especially if someone is actually working on it!&lt;/p&gt;

&lt;p&gt;Also, more details in the description is needed. Not everyone has access to JDBC 4 specs (licensing issues?) so it would be good to list functionality being planned for development in JIRA.&lt;/p&gt;</comment>
                            <comment id="12365963" author="anurag" created="Sat, 11 Feb 2006 05:17:35 +0000"  >&lt;p&gt;JDBC 4.0 interface wrapper java.sql.Wrapper is meant to provide a&lt;br/&gt;
standurd way to access vender specific extention to jdbc calls. The&lt;br/&gt;
method isWrapperFor is to check if the object is implementing a&lt;br/&gt;
perticular object or not and unWrap returns the handle of the object&lt;br/&gt;
which implements the vender specific interface using which the vender&lt;br/&gt;
specific method can be invoked.&lt;/p&gt;

&lt;p&gt;for example in case of oracle one can get the handle of&lt;br/&gt;
oracle.jdbc.OracleStatement and invoke oracle specific calls.&lt;/p&gt;

&lt;p&gt;In case of derby we have two jdbc driver Emdeded driver Network Client&lt;br/&gt;
driver but these classes don&apos;t implement from common interface and in&lt;br/&gt;
most cases derby doesn&apos;t have any properitory set of interfaces&lt;br/&gt;
equivalent of jdbc interface. &lt;/p&gt;

&lt;p&gt;I am thinking to create new interface for all the classes required to&lt;br/&gt;
have wrapper impimentation. These interfaces will have non standurd&lt;br/&gt;
methods which are common to both types of driver. Doing this will make&lt;br/&gt;
sure the application code doesn&apos;t changes if the application want to&lt;br/&gt;
switch from embeded mode to network client of vice versa. &lt;/p&gt;

&lt;p&gt;These interface will also extend from respective sql interface so that&lt;br/&gt;
jdbc methods will be available to the application even after unwrapping&lt;br/&gt;
the object to derby interface. &lt;/p&gt;</comment>
                            <comment id="12365965" author="djd" created="Sat, 11 Feb 2006 05:23:11 +0000"  >&lt;p&gt;&amp;gt;  These interfaces will have non standurd&lt;br/&gt;
methods which are common to both types of driver&lt;/p&gt;

&lt;p&gt;Derby doesn&apos;t implement non-standard methods on JDBC objects, that would be against the charter.&lt;/p&gt;</comment>
                            <comment id="12365967" author="anurag" created="Sat, 11 Feb 2006 05:56:21 +0000"  >&lt;p&gt;&amp;gt;Derby doesn&apos;t implement non-standard methods on JDBC objects, that would be against the charter.&lt;/p&gt;

&lt;p&gt;In that case won&apos;t it be appropriate to leave method unimplemented ? I am assuming the application trying to get unwrapped object will be the once who are aware what method they can get from such object. In case an application is expecting derby, it will be aware that derby doesn&apos;t have any no standard method in unwrapped object so will not try to unwrapped object.&lt;/p&gt;</comment>
                            <comment id="12365980" author="djd" created="Sat, 11 Feb 2006 06:35:29 +0000"  >&lt;p&gt;Seems like Wrapper.isWrapperFor () could return false unless the class does implement in the passed in interface.&lt;/p&gt;

&lt;p&gt;Similar for unwrap either return the object itself or throw a SQLException&lt;/p&gt;</comment>
                            <comment id="12372216" author="narayanan" created="Wed, 29 Mar 2006 20:24:30 +0100"  >&lt;p&gt;attaching patch and explanation for the embedded side .&lt;/p&gt;</comment>
                            <comment id="12372228" author="knutanders" created="Wed, 29 Mar 2006 21:35:31 +0100"  >&lt;p&gt;I noticed that three new classes were introduced: EmbedStatement40,&lt;br/&gt;
EmbedParameterMetaData40, EmbedResultSetMetaData40. These classes only&lt;br/&gt;
contain the wrapper methods.&lt;/p&gt;

&lt;p&gt;The description of the patch says:&lt;/p&gt;

&lt;p&gt;&amp;gt; The wrapper interface has two new methods &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; isWrapperFor&lt;br/&gt;
&amp;gt; unwrap&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; both of which use generics in their signature. Thus the classes in&lt;br/&gt;
&amp;gt; derby had to be extended and these methods had to be implemented in&lt;br/&gt;
&amp;gt; those extended classes so that the extended classes can then be&lt;br/&gt;
&amp;gt; compiled with jdk1.6.&lt;/p&gt;

&lt;p&gt;Although the methods have Class&amp;lt;?&amp;gt; in their signatures, they don&apos;t&lt;br/&gt;
require jdk1.6. Class&amp;lt;?&amp;gt; is equivalent to Class. The compiler did not&lt;br/&gt;
complain when I compiled this code:&lt;/p&gt;

&lt;p&gt;  public class wrapperimpl implements java.sql.Wrapper {&lt;br/&gt;
      public Object unwrap(Class interfaces) &lt;/p&gt;
{
          return null;
      }
&lt;p&gt;      public boolean isWrapperFor(Class interfaces) &lt;/p&gt;
{
          return false;
      }
&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;Note that I used Class instead of Class&amp;lt;?&amp;gt;. So I don&apos;t think you need&lt;br/&gt;
to introduce new 4.0 classes just to implement the wrapper methods.&lt;/p&gt;</comment>
                            <comment id="12372274" author="narayanan" created="Thu, 30 Mar 2006 02:03:58 +0100"  >&lt;p&gt;thanx for the comments knut. Making changes and uploading patch again.&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12372684" author="narayanan" created="Sat, 1 Apr 2006 01:22:17 +0100"  >&lt;p&gt;My previous patch made use of TestCallableStatementMethods.java. This is no more there in the current derby trunk and has been replaced by CallableStatementTest.java. I have moved the wrapper test to this new file. Can someone please take a look at this patch and point out issues if they think are there so that I can fix them.&lt;br/&gt;
thanx in advance&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12372694" author="kristwaa" created="Sat, 1 Apr 2006 02:20:22 +0100"  >&lt;p&gt;I only had a look at the test code for CallableStatementTest.java.&lt;/p&gt;

&lt;p&gt;I have the following comments (also see the separate comment at the end):&lt;br/&gt;
1) Tests should be small, and you should consider splitting your single test into two. This should be easy, as you have already marked parts of the test code &quot;Case1&quot; and &quot;Case2&quot;.&lt;br/&gt;
2) Use descriptive test method names. Long method names are not frowned upon in JUnit &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
3) Remove double spaces in comments (nit-pick).&lt;br/&gt;
4) Consider moving the try-catch block for cStmt.unwrap (Case2) into the else to more clearly indicate were the exception is expected to be thrown. &lt;br/&gt;
5) Using SQLState is not encouraged, as it is not part of the public API. As I understand, you can either hardcore the SQL states to be checked for, create you own local constants, or use the newly created file &apos;functionTests/util/SQLStateConstants.java&apos;. Also, instead of throwing an exception, you can use assertSQLState (from BaseJDBCTestCase).&lt;/p&gt;

&lt;p&gt;My last separate comment might need some feedback from others, so I guess you can ignore it for now. It is about the &quot;skip if running under DerbyNetClient&quot; issue. What is done with the current approach, is that the test passes even though nothing is tested. This is in general not good. Another approach would be to only add this test to the suite when running under embedded. Since we don&apos;t keep count of the number of tests run in JUnit, it doesn&apos;t matter too much now, but by putting logic for skipping the test in the test method itself it can be easily forgotten.&lt;/p&gt;

&lt;p&gt;Here is a suggestion on how this could have been done in the suite-method, which requires that the tests that need special handling are renamed:&lt;br/&gt;
TestSuite suite = new TestSuite(CallableStatementTest.class, &quot;suitename&quot;);&lt;br/&gt;
if (!usingDerbyNetClient()) &lt;/p&gt;
{
    suite.addTest(&quot;specialTestWrapperSupport1&quot;); // Name must not start with &quot;test&quot;
    suite.addTest(&quot;specialTestWrapperSupport2&quot;);
}
&lt;p&gt;return suite;&lt;/p&gt;

&lt;p&gt;Any opinions on this?&lt;/p&gt;</comment>
                            <comment id="12372723" author="rhillegas" created="Sat, 1 Apr 2006 06:57:18 +0100"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;Thanks for all the good work. I think that, going forward, we should stop writing the old-style tests and concentrate on writing JUnit tests. With a little effort, you should be able to recast TestDataSourceMethods as a junit test extending BaseJDBCTestCase. If you do that, then you can eliminate the main() method and the &quot;if(usingEmbeddedClient())&quot; logic. Thanks to some recent work, you can now get the DataSource in a client-agnostic way from BaseJDBCTestCase.getDataSource(). To prevent the test from running under the Network client, you should add the test name (and a comment) to java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClient.exclude.&lt;/p&gt;

&lt;p&gt;I think that Kristian has a good solution to the problem of excluding individual test cases from client-specific runs. In any event, the exclusion is a temporary piece of scaffolding which you will be removing soon enough.&lt;/p&gt;</comment>
                            <comment id="12373252" author="narayanan" created="Wed, 5 Apr 2006 17:42:03 +0100"  >&lt;p&gt;I have attached three new files wrapper_ver4_embedded.diff,wrapper_ver4_embedded.stat,&lt;br/&gt;
DERBY940_v4_embedded.html. I have explained my work and tried to justify a few issues that arose in DERBY940_v4_embedded.html. &lt;br/&gt;
thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12373391" author="knutanders" created="Thu, 6 Apr 2006 01:02:15 +0100"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;I haven&apos;t read your code, just looked at the description you provided&lt;br/&gt;
in DERBY940_v4_embedded.html, so I&apos;m just commenting on what you have&lt;br/&gt;
written there.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;First, you say that the compiler generates warnings because the unwrap&lt;br/&gt;
methods have code like this:&lt;/p&gt;

&lt;p&gt;    if(iface.isInstance(this)) &lt;/p&gt;
{
        return (T)this;
    }
&lt;p&gt; else &lt;/p&gt;
{
        throw newSQLException....
    }&lt;br/&gt;
&lt;br/&gt;
I think you can avoid the warning by using Class.cast(). Also, the&lt;br/&gt;
code above calls isInstance() twice (the cast does it internally to&lt;br/&gt;
decide whether it should throw ClassCastException), so I think it&lt;br/&gt;
would be better to rewrite it like this:&lt;br/&gt;
&lt;br/&gt;
    try {
        return iface.cast(this);
    } catch (ClassCastException cce) {
        throw newSQLException....
    }

&lt;hr /&gt;

&lt;p&gt;JUnit:&lt;/p&gt;

&lt;p&gt;You write that you didn&apos;t find any TestSuite.addTest(String) method,&lt;br/&gt;
just TestSuite.addTest(Test), so you have to write new classes. I&lt;br/&gt;
don&apos;t know much about JUnit tests, but I suspect that there&apos;s a typo&lt;br/&gt;
in Kristian&apos;s advice. I think what he meant to say was:&lt;/p&gt;

&lt;p&gt;  TestSuite suite = new TestSuite(CallableStatementTest.class, &quot;suitename&quot;);&lt;br/&gt;
  if (!usingDerbyNetClient()) &lt;/p&gt;
{
      suite.addTest(new CallableStatementTest(&quot;specialTestWrapperSupport1&quot;)); // Name must not start with &quot;test&quot;
      suite.addTest(new CallableStatementTest(&quot;specialTestWrapperSupport2&quot;));
  }

&lt;p&gt;If you do it like this, you don&apos;t have to create a new class for each&lt;br/&gt;
special case.&lt;/p&gt;</comment>
                            <comment id="12373659" author="narayanan" created="Sat, 8 Apr 2006 01:50:34 +0100"  >&lt;p&gt;Thank You for the comments Knut. I have made the changes to remove the compilation warnings. I have retained the change in the test since this is only a temporary abberration which I shall remove as soon as the Client side of this patch is submitted.&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12373823" author="knutanders" created="Mon, 10 Apr 2006 17:21:47 +0100"  >&lt;p&gt;The last patch conflicts with some recent i18n changes.&lt;/p&gt;

&lt;p&gt;C      java/engine/org/apache/derby/loc/messages_en.properties&lt;br/&gt;
C      java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;br/&gt;
C      java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClient.exclude&lt;/p&gt;</comment>
                            <comment id="12373829" author="narayanan" created="Mon, 10 Apr 2006 18:37:14 +0100"  >&lt;p&gt;Hi knut,&lt;br/&gt;
thanx for taking a look at the patch.&lt;/p&gt;

&lt;p&gt;I did a svn update for my workspace and got the C for DerbyNetClient.exclude only. I fixed it.&lt;/p&gt;

&lt;p&gt;I had got a C upon doing a &quot;svn update&quot; during the version 4 days of this patch but it has been resolved since version 5. I am uploading after changes to DerbyNetClient.exclude. &lt;/p&gt;

&lt;p&gt;I had run derbyall upto version 5. But have not run for version 6 since the only change was to DerbyNetClient.exclude. However I did run jdbc4 tests and they passed.&lt;br/&gt;
thanx once again&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12373918" author="rhillegas" created="Tue, 11 Apr 2006 04:06:41 +0100"  >&lt;p&gt;Thanks, Narayanan. I&apos;m running tests now. When this commits, we&apos;ll have to warn people to switch to a version of mustang at rev 78 or higher.&lt;/p&gt;</comment>
                            <comment id="12374042" author="rhillegas" created="Tue, 11 Apr 2006 23:28:06 +0100"  >&lt;p&gt;Committed at subversion revision 393221. Because of this submission, you will need to upgrade your jdk1.6 to mustang revision 78 or higher: the signatures for the wrapper methods have changed and the jdbc4 support will fail to compile against older jdks.&lt;/p&gt;</comment>
                            <comment id="12374152" author="narayanan" created="Wed, 12 Apr 2006 17:45:45 +0100"  >&lt;p&gt;Thanx for the commit Rick&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12374964" author="narayanan" created="Wed, 19 Apr 2006 00:26:18 +0100"  >&lt;p&gt;Attaching the patch for the wrapper support to the Network Client. Please find attached also a html file containing the details of the changes made as part of this patch&lt;/p&gt;

&lt;p&gt;thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12375129" author="rhillegas" created="Wed, 19 Apr 2006 21:50:17 +0100"  >&lt;p&gt;Looks good to me. The JDBC4 tests cleanly modulo the expected diffs. Derbyall ran cleanly modulo the wisconsin diffs plus the following diff in DerbyNetAutoStart:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: DerbyNetAutoStart jdk1.4.2_08 DerbyNet derbynetmats:derbynetmats 2006-04-18 15:45:41 ***&lt;br/&gt;
1a2,3&lt;br/&gt;
&amp;gt; org.apache.derby.iapi.services.context.ShutdownException: &lt;br/&gt;
&amp;gt; agentThread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,derby.daemons&amp;#93;&lt;/span&gt;&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   DerbyNetAutoStart jdk1.4.2_08 DerbyNet derbynetmats:derbynetmats 2006-04-18 15:46:24 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I manually reran the test and it passed. We should keep our eye on the instability in this test.&lt;/p&gt;

&lt;p&gt;I committed this patch at subversion revision 395245.&lt;/p&gt;</comment>
                            <comment id="12412321" author="narayanan" created="Thu, 18 May 2006 18:03:48 +0100"  >&lt;p&gt;Patch for this issue has been submitted and committed.&lt;br/&gt;
thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12324711" name="DERBY940_embedded.html" size="6061" author="narayanan" created="Wed, 29 Mar 2006 20:24:30 +0100"/>
                            <attachment id="12324968" name="DERBY940_v4_embedded.html" size="16551" author="narayanan" created="Wed, 5 Apr 2006 17:42:03 +0100"/>
                            <attachment id="12325507" name="Derby940_wrapper_Client.html" size="9152" author="narayanan" created="Wed, 19 Apr 2006 00:26:18 +0100"/>
                            <attachment id="12325505" name="wrapper_client_v1.diff" size="54286" author="narayanan" created="Wed, 19 Apr 2006 00:26:18 +0100"/>
                            <attachment id="12325506" name="wrapper_client_v1.stat" size="2148" author="narayanan" created="Wed, 19 Apr 2006 00:26:18 +0100"/>
                            <attachment id="12324709" name="wrapper_ver1_embedded.diff" size="66908" author="narayanan" created="Wed, 29 Mar 2006 20:24:30 +0100"/>
                            <attachment id="12324710" name="wrapper_ver1_embedded.stat" size="1912" author="narayanan" created="Wed, 29 Mar 2006 20:24:30 +0100"/>
                            <attachment id="12324727" name="wrapper_ver2_embedded.diff" size="53105" author="narayanan" created="Thu, 30 Mar 2006 02:03:52 +0100"/>
                            <attachment id="12324728" name="wrapper_ver2_embedded.stat" size="1500" author="narayanan" created="Thu, 30 Mar 2006 02:03:56 +0100"/>
                            <attachment id="12324813" name="wrapper_ver3_embedded.diff" size="51649" author="narayanan" created="Sat, 1 Apr 2006 01:21:45 +0100"/>
                            <attachment id="12324814" name="wrapper_ver3_embedded.stat" size="1493" author="narayanan" created="Sat, 1 Apr 2006 01:22:07 +0100"/>
                            <attachment id="12324966" name="wrapper_ver4_embedded.diff" size="77080" author="narayanan" created="Wed, 5 Apr 2006 17:42:03 +0100"/>
                            <attachment id="12324967" name="wrapper_ver4_embedded.stat" size="2415" author="narayanan" created="Wed, 5 Apr 2006 17:42:03 +0100"/>
                            <attachment id="12325059" name="wrapper_ver5_embedded.diff" size="84891" author="narayanan" created="Sat, 8 Apr 2006 01:50:34 +0100"/>
                            <attachment id="12325060" name="wrapper_ver5_embedded.stat" size="2528" author="narayanan" created="Sat, 8 Apr 2006 01:50:34 +0100"/>
                            <attachment id="12325129" name="wrapper_ver6_embedded.diff" size="81557" author="narayanan" created="Mon, 10 Apr 2006 18:37:14 +0100"/>
                            <attachment id="12325130" name="wrapper_ver6_embedded.stat" size="2528" author="narayanan" created="Mon, 10 Apr 2006 18:37:14 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 11 Feb 2006 05:01:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29791</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0sp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38467</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>