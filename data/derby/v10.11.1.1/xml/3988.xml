<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3988/DERBY-3988.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3988] Set the Java 6 complilation path based on the Java 5 compilation path so that the JDBC4 support is always built</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3988</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Now that we have checked in the JDBC4 stubs, it ought to be possible to build the JDBC4 support with just the Java 5 libraries and compiler. Set java16compile.classpath=$&lt;/p&gt;
{jdbc4stubs}
&lt;p&gt;:$&lt;/p&gt;
{java15compile.classpath}
&lt;p&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12410602">DERBY-3988</key>
            <summary>Set the Java 6 complilation path based on the Java 5 compilation path so that the JDBC4 support is always built</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Dec 2008 19:18:51 +0000</created>
                <updated>Thu, 2 May 2013 03:29:19 +0100</updated>
                            <resolved>Thu, 8 Jan 2009 16:48:05 +0000</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Build tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12656149" author="rhillegas" created="Fri, 12 Dec 2008 20:13:03 +0000"  >&lt;p&gt;Attaching derby-3988-01-aa-alwaysCompileJDBC4.diff. This patch makes it possible to build the entire Derby product given only the Derby source and a Java 5 environment. Makes the following changes:&lt;/p&gt;

&lt;p&gt;1) Sets java16compile.classpath=$&lt;/p&gt;
{jdbc4stubs}
&lt;p&gt;:$&lt;/p&gt;
{java15compile.classpath}

&lt;p&gt;2) Eliminates the jdk16 conditional variable.&lt;/p&gt;

&lt;p&gt;3) Changes the Java 6 targets to compile to Java 5 byte code and to use the default compiler.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      build.xml&lt;/p&gt;

&lt;p&gt;Changes needed for (1).&lt;/p&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/build.xml&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/build.xml&lt;br/&gt;
M      java/engine/build.xml&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/build.xml&lt;br/&gt;
M      java/client/build.xml&lt;/p&gt;

&lt;p&gt;Changes needed for (2) and (3).&lt;/p&gt;</comment>
                            <comment id="12656295" author="knutanders" created="Sat, 13 Dec 2008 15:44:49 +0000"  >&lt;p&gt;I think removing the jdk16 variable and using the same compiler for all the classes is a good move, as it makes it easier to understand the build and which compiler has been used for which classes. But as I said in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3966&quot; title=&quot;Do not require JRE 1.4 libraries at compile time since SUN&amp;#39;s JDK 1.4 went out of support and can be used on JRE 1.4 without any problem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3966&quot;&gt;&lt;del&gt;DERBY-3966&lt;/del&gt;&lt;/a&gt;, I&apos;m not sure if compiling all classes with JDK 5 is what we want. The issues I see are:&lt;/p&gt;

&lt;p&gt;  1) We&apos;re restricted to using a subset of Java SE 6 in code that is only ever used on Java SE 6&lt;/p&gt;

&lt;p&gt;  2) We must compile the classes with target=1.5 instead of target=1.6, so we don&apos;t get the benefits of the new class format, like faster class loading&lt;/p&gt;

&lt;p&gt;Is there any reason why we couldn&apos;t just take the full step and require JDK 6 instead of JDK 5? It&apos;s been two years since Java SE 6 was released, so I don&apos;t think it&apos;s unreasonable to expect that any serious Java development environment contains a Java 6 compiler these days.&lt;/p&gt;

&lt;p&gt;Some possible improvements to the patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the compile_jdbc4 targets don&apos;t need fork=&quot;yes&quot; anymore, I think&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;instead of always setting target=1.5 we could have a property that had the value 1.5 or 1.6 depending of the actual compiler used&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;instead of making jdbc4_modules_edit in java/engine/build.xml non-optional, we should remove that target and make the necessary changes to modules.properties&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12656596" author="knutanders" created="Mon, 15 Dec 2008 10:11:36 +0000"  >&lt;p&gt;Bryan Pendleton &amp;lt;bpendleton@amberpoint.com&amp;gt; writes:&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; Is there any reason why we couldn&apos;t just take the full step and&lt;br/&gt;
&amp;gt;&amp;gt; require JDK 6 instead of JDK 5?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; To be clear, you propose to require JDK 6 for &lt;b&gt;building&lt;/b&gt; Derby, but&lt;br/&gt;
&amp;gt; the code, once built, would continue to run in the current set of&lt;br/&gt;
&amp;gt; environments (JDK 1.4+, small environment, etc.)?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; If so, that approach seems fine to me.&lt;/p&gt;

&lt;p&gt;Yes, that&apos;s what I meant. Require JDK 6 (or later) to build Derby, but&lt;br/&gt;
Derby should continue to run on the same platforms as before.&lt;/p&gt;</comment>
                            <comment id="12656637" author="rhillegas" created="Mon, 15 Dec 2008 14:45:44 +0000"  >&lt;p&gt;Thanks for the feedback, Knut and Bryan. For the record, there is still no production version of the Java 6 JDK available for 32-bit Intel Macs. There is a beta version of the Java 6 JDK for that platform, but it has problems. I don&apos;t know when a production release will appear. I think that this is an important platform and I would be reluctant to require a Java 6 compiler at this time.&lt;/p&gt;</comment>
                            <comment id="12656649" author="rhillegas" created="Mon, 15 Dec 2008 16:17:11 +0000"  >&lt;p&gt;Attaching derby-3988-01-ab-alwaysCompileJDBC4.diff. This patch makes the 3 improvements suggested by Knut:&lt;/p&gt;

&lt;p&gt;1) Doesn&apos;t fork while compiling the JDBC4 support&lt;/p&gt;

&lt;p&gt;2) Compiles the JDBC4 support to Java 6 byte code if possible&lt;/p&gt;

&lt;p&gt;3) Removes the &quot;optional&quot; prefixes on the JDBC4 modules in modules.properties&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/build.xml&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/build.xml&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/build.xml&lt;br/&gt;
M      java/engine/org/apache/derby/modules.properties&lt;br/&gt;
M      java/engine/build.xml&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/build.xml&lt;br/&gt;
M      java/client/build.xml&lt;br/&gt;
M      build.xml&lt;/p&gt;</comment>
                            <comment id="12656946" author="knutanders" created="Tue, 16 Dec 2008 10:41:58 +0000"  >&lt;p&gt;The patch looks good to me. Perhaps it&apos;s better to have 16 in the name of the new property (java16compiler.level or something) in case we want to use a similar mechanism for other versions in the future (new JDKs, new JDBC revisions...). I guess this is an OK compromise for now. We can revisit how to add Java 6 methods if/when we want to introduce some of them in the code.&lt;/p&gt;

&lt;p&gt;Just one more question: what&apos;s the recommended setting for java16compile.classpath for those of us who have JDK 6 installed? For all the other *compile.classpath properties we recommend that developers point them to the real thing (that is, a real implementation of that version of the class library) to get maximum compile-time checking. For java16compile.classpath, pointing to the real thing would give less compile-time checking, as it doesn&apos;t necessarily discover that a change will break the build for those who don&apos;t have JDK 6.&lt;/p&gt;</comment>
                            <comment id="12656996" author="rhillegas" created="Tue, 16 Dec 2008 14:46:15 +0000"  >&lt;p&gt;Attaching derby-3988-01-ac-alwaysCompileJDBC4.diff. This renames compilerLevel -&amp;gt; compilerLevel16 as Knut suggested.&lt;/p&gt;

&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;This patch doesn&apos;t change what java16compile.classpath should be set to. I have been setting java16compile.classpath to the list of jar files in my Java 6 JDK, just as java15compile.classpath is automatically set to the list of jar files in my Java 5 JDK.&lt;/p&gt;

&lt;p&gt;Please get me back on track if I&apos;m not following you: I think you&apos;re wondering about what happens if someone, who compiles using Java 6, checks some logic into the JDBC4 driver which mentions a new class introduced by Java 6. Today (before applying this patch) that would not be noticed by other developers who compile using Java 5. After this patch is applied, you are right, this will break the build for people who compile using Java 5. Probably we would have to back out that patch until we decided how to handle these Java 6 references.&lt;/p&gt;

&lt;p&gt;The only solutions which have been proposed so far are:&lt;/p&gt;

&lt;p&gt;1) Require the Java 6 compiler rather than the Java 5 compiler&lt;/p&gt;

&lt;p&gt;2) Check in some more Java 6 stubs&lt;/p&gt;

&lt;p&gt;I agree that we can probably wait to solve this problem until we have a concrete situation in front of us. By then, Java 6 may be supported on all the platforms we care about and (1) may be an uncontroversial solution.&lt;/p&gt;

&lt;p&gt;Are you planning to add references to new Java 6 classes/methods soon? If so, do you have some other proposals in mind besides (1) and (2)?&lt;/p&gt;</comment>
                            <comment id="12657022" author="knutanders" created="Tue, 16 Dec 2008 15:33:17 +0000"  >&lt;p&gt;&amp;gt; Are you planning to add references to new Java 6 classes/methods soon?&lt;/p&gt;

&lt;p&gt;No.&lt;/p&gt;

&lt;p&gt;&amp;gt; If so, do you have some other proposals in mind besides (1) and (2)?&lt;/p&gt;

&lt;p&gt;You also have this option:&lt;/p&gt;

&lt;p&gt;3) Build JDBC 4.0 only when using JDK 6 or later (though automatically, as you suggested, without setting the jdk16 property)&lt;/p&gt;

&lt;p&gt;Then JDBC 4.0 support will be built automatically for everyone who has installed JDK 6, it won&apos;t break the build for those who are still using JDK 5, and it doesn&apos;t prevent using the full power of JDK 6 in code that is written for JDK 6. The downside is that the JDBC 4.0 driver is not compiled on platforms where JDK 6 is not yet available.&lt;/p&gt;

&lt;p&gt;But I&apos;m fine with the latest proposal for now.&lt;/p&gt;</comment>
                            <comment id="12657049" author="rhillegas" created="Tue, 16 Dec 2008 16:36:19 +0000"  >&lt;p&gt;Right. I should  have been more precise. I&apos;m most interested in solutions which satisfy these goals:&lt;/p&gt;

&lt;p&gt;A) Give us a build that works out-of-the-box, building the entire Derby product&lt;/p&gt;

&lt;p&gt;B) Let us take advantage of improvements introduced by advanced VMs&lt;/p&gt;

&lt;p&gt;Sounds like you&apos;re ok with the current patch. I intend to commit it soon unless someone raises an objection.&lt;/p&gt;</comment>
                            <comment id="12657095" author="rhillegas" created="Tue, 16 Dec 2008 18:25:37 +0000"  >&lt;p&gt;Committed derby-3988-01-ac-alwaysCompileJDBC4.diff at subversion revision 727106.&lt;/p&gt;</comment>
                            <comment id="12657166" author="myrna" created="Tue, 16 Dec 2008 21:18:02 +0000"  >&lt;p&gt;I didn&apos;t get a chance to test out the patch before your commit.&lt;/p&gt;

&lt;p&gt;Now, when I build with sun jvms/jres all is fine, but when I build with ibm jres, I get this:&lt;br/&gt;
compile_jdbc4:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 5 source files to C:\derbyt\svn\trunk\classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:&amp;lt;myrnaspathto&amp;gt;trunk\java\engine\org\apache\derby\iapi\jdbc\BrokeredCallableStatement40.java:26: cannot access java.sql.Blob&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; bad class file: c:&amp;lt;myrnaspathtoibm16&amp;gt;\jre\lib\sql.jar(java/sql/Blob.class)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; class file has wrong version 50.0, should be 49.0&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Please remove or make sure it appears in the correct subdirectory of the classpath.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; import java.sql.Blob;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 1 error&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compile failed; see the compiler error output for details.&lt;/p&gt;

&lt;p&gt;I see errors like this for:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;\java\engine\org\apache\derby\iapi\jdbc\BrokeredCallableStatement40.java:26: cannot access java.sql.Blob&lt;/li&gt;
	&lt;li&gt;java\engine\org\apache\derby\impl\jdbc\EmbedCallableStatement40.java:26: cannot access java.sql.Blob&lt;/li&gt;
	&lt;li&gt;java\engine\org\apache\derby\jdbc\Driver40.java:24: cannot access java.sql.DatabaseMetaData&lt;/li&gt;
	&lt;li&gt;java\testing\org\apache\derbyTesting\functionTests\tests\jdbc4\BlobClobTestSetup.java:79: cannot access java.sql.SQLException&lt;/li&gt;
	&lt;li&gt;java\client\org\apache\derby\client\ClientPooledConnection40.java:24: cannot access java.sql.PreparedStatement&lt;/li&gt;
	&lt;li&gt;java\testing\org\apache\derbyTesting\functionTests\tests\jdbc4\BlobClobTestSetup.java:79: cannot access java.sql.SQLException&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;My ant.properties looks like this:&lt;br/&gt;
-----------------------------&lt;br/&gt;
j14lib=c:&amp;lt;myrnaspathtoibm142&amp;gt;/jre/lib&lt;br/&gt;
j15lib=c:&amp;lt;myrnaspathtoibm15&amp;gt;/jre/lib&lt;br/&gt;
jdk16=c:&amp;lt;myrnaspathtoibm16&amp;gt;&lt;br/&gt;
j16lib=$&lt;/p&gt;
{jdk16}
&lt;p&gt;/jre/lib&lt;/p&gt;

&lt;p&gt;java14compile.classpath=$&lt;/p&gt;
{j14lib}/core.jar;${j14lib}
&lt;p&gt;/server.jar;$&lt;/p&gt;
{j14lib}/xml.jar;${j14lib}
&lt;p&gt;/ibmjcefw.jar;$&lt;/p&gt;
{j14lib}
&lt;p&gt;/security.jar&lt;br/&gt;
java15compile.classpath=$&lt;/p&gt;
{j15lib}/vm.jar;${j15lib}
&lt;p&gt;/core.jar;$&lt;/p&gt;
{j15lib}/server.jar;${j15lib}
&lt;p&gt;/xml.jar;$&lt;/p&gt;
{j15lib}/ibmjcefw.jar;${j15lib}
&lt;p&gt;/security.jar&lt;br/&gt;
java16compile.classpath=$&lt;/p&gt;
{j16lib}/sql.jar;${j16lib}
&lt;p&gt;/xml.jar;$&lt;/p&gt;
{j16lib}/ibmjcefw.jar;${j16lib}
&lt;p&gt;/security.jar;$&lt;/p&gt;
{j16lib}/rt.jar;${j16lib}
&lt;p&gt;/security.jar;$&lt;/p&gt;
{j16lib}/vm.jar;${j16lib}
&lt;p&gt;/java.util.jar;$&lt;/p&gt;
{j16lib}
&lt;p&gt;/jndi.jar&lt;/p&gt;

&lt;p&gt;jsr169compile.classpath=C:&amp;lt;myrnaspathtoweme6.1&amp;gt;/lib/jclFoundation11/classes.zip;C:&amp;lt;myrnaspathtoweme6.1&amp;gt;/lib/jdbc.jar&lt;/p&gt;

&lt;p&gt;junit=c:&amp;lt;myrnaspathtojunit&amp;gt;/java/junit.jar&lt;/p&gt;

&lt;p&gt;build.compiler=modern&lt;br/&gt;
proceed=true&lt;br/&gt;
sane=true&lt;br/&gt;
#sane=false&lt;br/&gt;
----------------------------------&lt;/p&gt;

&lt;p&gt;Where the &apos;myrnaspathto...&apos; is the appropriate paths.&lt;/p&gt;

&lt;p&gt;Suggestions?&lt;/p&gt;</comment>
                            <comment id="12657174" author="rhillegas" created="Tue, 16 Dec 2008 21:40:50 +0000"  >&lt;p&gt;Hi Myrna,&lt;/p&gt;

&lt;p&gt;Thanks for running that experiment. Could you try the following:&lt;/p&gt;

&lt;p&gt;1) Put the following line into your ant.properties&lt;/p&gt;

&lt;p&gt;printCompilerProperties=true&lt;/p&gt;

&lt;p&gt;2) Then do a clean build with your Sun environment&lt;/p&gt;

&lt;p&gt;3) Then do a clean build with your IBM environment&lt;/p&gt;

&lt;p&gt;Early on in your builds, you will see a block of diagnostics reporting what the build thinks your classpaths and compiler levels are. Could you let us know what these blocks are for your Sun and IBM builds? The blocks look like this:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = $&lt;/p&gt;
{jsr169compile.classpath}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = $&lt;/p&gt;
{j14lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = ${java14compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = ${j15lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = ${java15compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = ${java16compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  jsr169compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jsr169:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/charsets.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/dt.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/jce.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/jsse.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/laf.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/sunrsasign.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j14lib = ${j14lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java14compile.classpath = /System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/charsets.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/dt.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/jce.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/jsse.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/laf.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/sunrsasign.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j15lib = $&lt;/p&gt;
{j15lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java15compile.classpath = /System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/charsets.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/dt.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jce.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jconsole.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jsse.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/laf.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java16compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jdbc4:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/charsets.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/dt.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jce.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jconsole.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/jsse.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/laf.jar:/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Classes/ui.jar&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12657222" author="myrna" created="Tue, 16 Dec 2008 23:38:07 +0000"  >&lt;p&gt;That&apos;s interesting - my ibm jvm environment is missing the jdbc4 stubs after the second setting of compilerLevel 1.5.&lt;br/&gt;
As an experiment, I added the hardcode path to my classes/stubs/jdbc4 to my java16compile.classpath and it took care of most of the errors - only the java\testing\org\apache\derbyTesting\functionTests\tests\jdbc4\BlobTest.java:146: cannot access java.util.HashMap warning was still there.&lt;br/&gt;
Without that addition, this is what was printed out with my env set to use sun jvms (with some continuation markers [] to improve the view in jira)&lt;br/&gt;
--------------------------------------------&lt;br/&gt;
printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = C:/jvms/weme6.1/ive/lib/jclFoundation11/classes.zip;C:/jvms/weme6.1/ive/lib/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = c:/jvms/jdk142/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = $&lt;/p&gt;
{java14compile.classpath}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = c:/jvms/jdk15/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = $&lt;/p&gt;
{java15compile.classpath}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = $&lt;/p&gt;
{java16compile.classpath}
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Setting property java14compile.classpath to c:\jvms\jdk142\jre\lib\charsets.jar;c:\jvms\jdk142\jre\lib\jce.jar;[]&lt;br/&gt;
c:\jvms\jdk142\jre\lib\jsse.jar;c:\jvms\jdk142\jre\lib\plugin.jar;c:\jvms\jdk142\jre\lib\plugin_g.jar;[]&lt;br/&gt;
c:\jvms\jdk142\jre\lib\rt.jar;c:\jvms\jdk142\jre\lib\sunrsasign.jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Setting property java15compile.classpath to c:\jvms\jdk15\jre\lib\charsets.jar;c:\jvms\jdk15\jre\lib\deploy.jar;c:\jvms\jdk15\jre\lib\javaws.jar;c:\jvms\jdk15\jre\lib\jce.jar;c:\jvms\jdk15\jre\lib\jsse.jar;c:\jvms\jdk15\jre\lib\plugin.jar;c:\jvms\jdk15\jre\lib\rt.jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Setting property java14compile.classpath to c:\jvms\jdk142\jre\lib\charsets.jar;c:\jvms\jdk142\jre\lib\jce.jar;c:\jvms\jdk142\jre\lib\jsse.jar;c:\jvms\jdk142\jre\lib\plugin.jar;c:\jvms\jdk142\jre\lib\plugin_g.jar;c:\jvms\jdk142\jre\lib\rt.jar;c:\jvms\jdk142\jre\lib\sunrsasign.jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Setting property java15compile.classpath to c:\jvms\jdk15\jre\lib\charsets.jar;c:\jvms\jdk15\jre\lib\deploy.jar;c:\jvms\jdk15\jre\lib\javaws.jar;c:\jvms\jdk15\jre\lib\jce.jar;c:\jvms\jdk15\jre\lib\jsse.jar;c:\jvms\jdk15\jre\lib\plugin.jar;c:\jvms\jdk15\jre\lib\rt.jar&lt;/p&gt;

&lt;p&gt;printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  jsr169compile.classpath = C:/jvms/weme6.1/ive/lib/jclFoundation11/classes.zip;C:/jvms/weme6.1/ive/lib/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j14lib = c:/jvms/jdk142/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java14compile.classpath = c:\jvms\jdk142\jre\lib\charsets.jar;c:\jvms\jdk142\jre\lib\jce.jar;c:\jvms\jdk142\jre\lib\jsse.jar;[]&lt;br/&gt;
c:\jvms\jdk142\jre\lib\plugin.jar;c:\jvms\jdk142\jre\lib\plugin_g.jar;c:\jvms\jdk142\jre\lib\rt.jar;c:\jvms\jdk142\jre\lib\sunrsasign.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j15lib = c:/jvms/jdk15/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java15compile.classpath = c:\jvms\jdk15\jre\lib\charsets.jar;c:\jvms\jdk15\jre\lib\deploy.jar;[]&lt;br/&gt;
c:\jvms\jdk15\jre\lib\javaws.jar;c:\jvms\jdk15\jre\lib\jce.jar;c:\jvms\jdk15\jre\lib\jsse.jar;c:\jvms\jdk15\jre\lib\plugin.jar;c:\jvms\jdk15\jre\lib\rt.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java16compile.classpath = C:\derbyt\svn\trunk/classes/stubs/jdbc4:c:\jvms\jdk15\jre\lib\charsets.jar;[]&lt;br/&gt;
c:\jvms\jdk15\jre\lib\deploy.jar;c:\jvms\jdk15\jre\lib\javaws.jar;c:\jvms\jdk15\jre\lib\jce.jar;c:\jvms\jdk15\jre\lib\jsse.jar;[]&lt;br/&gt;
c:\jvms\jdk15\jre\lib\plugin.jar;c:\jvms\jdk15\jre\lib\rt.jar&lt;br/&gt;
--------------------------------------------&lt;br/&gt;
And this is what was printed out with my env set to use ibm jvms:&lt;br/&gt;
--------------------------------------------&lt;br/&gt;
printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = C:/jvms/weme6.1/lib/jclFoundation11/classes.zip;C:/jvms/weme6.1/lib/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = c:/jvms/ibm142/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = c:/jvms/ibm142/jre/lib/core.jar;c:/jvms/ibm142/jre/lib/server.jar;[]&lt;br/&gt;
c:/jvms/ibm142/jre/lib/xml.jar;c:/jvms/ibm142/jre/lib/ibmjcefw.jar;c:/jvms/ibm142/jre/lib/security.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = c:/jvms/ibm15/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = c:/jvms/ibm15/jre/lib/vm.jar;c:/jvms/ibm15/jre/lib/core.jar;[]&lt;br/&gt;
c:/jvms/ibm15/jre/lib/server.jar;c:/jvms/ibm15/jre/lib/xml.jar;c:/jvms/ibm15/jre/lib/ibmjcefw.jar;c:/jvms/ibm15/jre/lib/security.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = c:/jvms/ibm16/jre/lib/sql.jar;c:/jvms/ibm16/jre/lib/xml.jar;[]&lt;br/&gt;
c:/jvms/ibm16/jre/lib/ibmjcefw.jar;c:/jvms/ibm16/jre/lib/security.jar;c:/jvms/ibm16/jre/lib/rt.jar;c:/jvms/ibm16/jre/lib/security.jar;[]&lt;br/&gt;
c:/jvms/ibm16/jre/lib/vm.jar;c:/jvms/ibm16/jre/lib/java.util.jar;c:/jvms/ibm16/jre/lib/jndi.jar&lt;/p&gt;

&lt;p&gt;printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerLevel16 = 1.5&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  jsr169compile.classpath = C:/jvms/weme6.1/lib/jclFoundation11/classes.zip;C:/jvms/weme6.1/lib/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j14lib = c:/jvms/ibm142/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java14compile.classpath = c:/jvms/ibm142/jre/lib/core.jar;c:/jvms/ibm142/jre/lib/server.jar;[]&lt;br/&gt;
c:/jvms/ibm142/jre/lib/xml.jar;c:/jvms/ibm142/jre/lib/ibmjcefw.jar;c:/jvms/ibm142/jre/lib/security.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j15lib = c:/jvms/ibm15/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java15compile.classpath = c:/jvms/ibm15/jre/lib/vm.jar;c:/jvms/ibm15/jre/lib/core.jar;[]&lt;br/&gt;
c:/jvms/ibm15/jre/lib/server.jar;c:/jvms/ibm15/jre/lib/xml.jar;c:/jvms/ibm15/jre/lib/ibmjcefw.jar;c:/jvms/ibm15/jre/lib/security.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java16compile.classpath = c:/jvms/ibm16/jre/lib/sql.jar;c:/jvms/ibm16/jre/lib/xml.jar;[]&lt;br/&gt;
c:/jvms/ibm16/jre/lib/ibmjcefw.jar;c:/jvms/ibm16/jre/lib/security.jar;c:/jvms/ibm16/jre/lib/rt.jar;c:/jvms/ibm16/jre/lib/security.jar;[]&lt;br/&gt;
c:/jvms/ibm16/jre/lib/vm.jar;c:/jvms/ibm16/jre/lib/java.util.jar;c:/jvms/ibm16/jre/lib/jndi.jar&lt;br/&gt;
----------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12657238" author="rhillegas" created="Wed, 17 Dec 2008 00:21:15 +0000"  >&lt;p&gt;Thanks for the extra information, Myrna. It looks to me like:&lt;/p&gt;

&lt;p&gt;BEFORE this patch:&lt;/p&gt;

&lt;p&gt;1) In your Sun environment, the build did NOT compile the JDBC4 driver&lt;/p&gt;

&lt;p&gt;2) In your IBM environment, the build compiled the JDBC4 driver using the IBM Java 6 compiler and the IBM Java 6 libraries&lt;/p&gt;

&lt;p&gt;AFTER this patch:&lt;/p&gt;

&lt;p&gt;1) In your Sun environment, the build compiled the JDBC4 driver using the Sun Java 5 compiler and Derby&apos;s stubs (which were compiled by the Sun Java 5 compiler)&lt;/p&gt;

&lt;p&gt;2) In your IBM environment, the build tried to compile the JDBC4 driver using the IBM Java 5 compiler and the IBM Java 6 libraries. This is what raised the version mismatch error.&lt;/p&gt;

&lt;p&gt;Here are some possible solutions to this problem:&lt;/p&gt;

&lt;p&gt;A) If you are using the Java 5 environment, then the build should ignore the setting of java16compile.classpath and force it to be the classpath composed of the jdbc4 stubs followed by the java5compile.classpath&lt;/p&gt;

&lt;p&gt;B) If you are using the Java 5 environment and java16compile.classpath is set, then the build should raise an error saying that it can&apos;t handle the mixed signals&lt;/p&gt;

&lt;p&gt;I would like to solicit other opinions and sleep on this.&lt;/p&gt;

&lt;p&gt;And you raised another issue: I seem to be going blind and I don&apos;t see the java.util.HashMap warning. Can you post that by itself?&lt;/p&gt;

&lt;p&gt;Thanks for running these experiments!&lt;/p&gt;</comment>
                            <comment id="12657246" author="myrna" created="Wed, 17 Dec 2008 00:55:29 +0000"  >&lt;p&gt;Re hashMap warning...You&apos;re not blind, I am...After adding the stubs/jdbc4 dir to the java16compile.classpath, I get a new set of warnings (and I only spotted 1):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;java\engine\org\apache\derby\iapi\jdbc\BrokeredConnection40.java:33: cannot access java.util.Properties&lt;/li&gt;
	&lt;li&gt;java\engine\org\apache\derby\impl\jdbc\EmbedConnection40.java:33: cannot access java.util.HashMap&lt;/li&gt;
	&lt;li&gt;java\engine\org\apache\derby\jdbc\Driver40.java:48: cannot access java.util.Properties&lt;/li&gt;
	&lt;li&gt;java\client\org\apache\derby\client\am\LogicalConnection40.java:32: cannot access java.util.Properties&lt;/li&gt;
	&lt;li&gt;java\testing\org\apache\derbyTesting\functionTests\tests\jdbc4\BlobTest.java:146: cannot access java.util.HashMap&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And re 40 driver getting built, I can assure you it got built.&lt;br/&gt;
I can svn update to that state and build and send the result, but in the mean time, I&apos;ve got a non-working environment.&lt;br/&gt;
Can you back out your latest commit until we&apos;ve figured out a solution?&lt;/p&gt;</comment>
                            <comment id="12657385" author="rhillegas" created="Wed, 17 Dec 2008 13:42:41 +0000"  >&lt;p&gt;Hi Myrna: I have backed out the commit at subversion revision 727379.&lt;/p&gt;</comment>
                            <comment id="12657551" author="myrna" created="Wed, 17 Dec 2008 20:51:57 +0000"  >&lt;p&gt;Thanks Rick...&lt;/p&gt;

&lt;p&gt;I noticed something interesting - on a (linux) machine where I had set up to build with the ibm jvms there was no problem after your changes. I think the relevant difference between the two systems is the ant version.&lt;br/&gt;
So, your changes worked (even with ibm jvms) with ant 1.6.5, but not with ant 1.7...&lt;/p&gt;
</comment>
                            <comment id="12657873" author="myrna" created="Thu, 18 Dec 2008 19:51:03 +0000"  >&lt;p&gt;Another experiment showed that with my tree sync-ed up to revision 727106, if I remove the java16compile.classpath from the $HOME/ant.properties, the build succeeds with ibm jvm also.&lt;br/&gt;
The stubs/jdbc4 directory is then prepended.&lt;/p&gt;

&lt;p&gt;Re building Driver40 with my sun setup; I maybe should have mentioned that when I build with the sun jvms, there is no need for the java*compile.classpath settings...&lt;/p&gt;

&lt;p&gt;As another experiment, I set up my sun jdk settings in $HOME/ant.properties, but added a java16compile.classpath setting, and all was still fine.&lt;br/&gt;
So, I suspect there is a bug in the ibm jvm where it picks the wrong libraries (1.6) if both 1.5 and 1.6 are available; maybe the difference I attributed to ant version difference then is a difference in the windows jvm.&lt;/p&gt;

&lt;p&gt;Anyway, I have a workaround to &apos;cope&apos; with this quirky behavior and the changes as per 727106; remove the java16compile.classpath setting.&lt;br/&gt;
The build then uses the stubs (which I assume must get built with 1.6?) and 1.5 for everything else...&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I hope I understand this correctly.&lt;/p&gt;

&lt;p&gt;It&apos;s a little frustrating that I&apos;ll have to use a different ant.properties for the different branches but I can live with that....&lt;/p&gt;
</comment>
                            <comment id="12657908" author="rhillegas" created="Thu, 18 Dec 2008 21:17:27 +0000"  >&lt;p&gt;Thanks for the additional information, Myrna. I have reproduced your original results on Ubuntu Linux. I ran the following experiments:&lt;/p&gt;

&lt;p&gt;1) My environment has Sun and IBM JDKs for both Java 5 and Java 6&lt;/p&gt;

&lt;p&gt;2) I built Derby with each of those four compilers. For each compiler, I ran the build twice: first with no setting for java16compile.classpath, then later with java16compile.classpath set to the Java 6 libraries supplied by the compiler&apos;s vendor. So a total of eight builds:&lt;/p&gt;

&lt;p&gt;i) Sun Java 5 compiler, java16compile.classpath NOT initially set&lt;br/&gt;
ii) Sun Java 5 compiler, java16compile.classpath initially set to Sun Java 6 libraries&lt;br/&gt;
iii) Sun Java 6 compiler, java16compile.classpath NOT initially set&lt;br/&gt;
iv) Sun Java 6 compiler, java16compile.classpath initially set to Sun Java 6 libraries&lt;br/&gt;
v) IBM Java 5 compiler, java16compile.classpath NOT initially set&lt;br/&gt;
vi) IBM Java 5 compiler, java16compile.classpath initially set to IBM Java 6 libraries&lt;br/&gt;
vii) IBM Java 6 compiler, java16compile.classpath NOT initially set&lt;br/&gt;
viii) IBM Java 6 compiler, java16compile.classpath initially set to IBM Java 6 libraries&lt;/p&gt;

&lt;p&gt;All of the builds succeeded except for (vi), That build died with a &quot;class file has wrong version 50.0, should be 49.0&quot; error when compiling java.sql.Blob, as you discovered.&lt;/p&gt;
</comment>
                            <comment id="12657913" author="rhillegas" created="Thu, 18 Dec 2008 21:27:52 +0000"  >&lt;p&gt;Hi Myrna,&lt;/p&gt;

&lt;p&gt;I also want to follow up on another comment you made:&lt;/p&gt;

&lt;p&gt;&amp;gt; Re building Driver40 with my sun setup; I maybe should have mentioned that when I build with the sun jvms, there is no need for the java*compile.classpath settings... &lt;/p&gt;

&lt;p&gt;This says to me that the PropertySetter program is correctly finding your Sun JDKs. That&apos;s good. Has the build been failing for you when you use an IBM compiler but don&apos;t set the java*compile.classpath variables? That would be bad. That suggests to me that PropertySetter isn&apos;t smart enough to find your IBM JDKs. We may be able to fix PropertySetter so that it finds the IBM JDKs on your machine.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12657947" author="myrna" created="Fri, 19 Dec 2008 00:26:17 +0000"  >&lt;p&gt;I believe that at one time, I found it necessary to set these properties or the PropertySetter didn&apos;t correctly find my ibm jdks. I seem to remember it assumed some default names for the installations.&lt;br/&gt;
However, I did some more experimenting just now, (still with my tree environment at the 727106 revision level) including having a sun jdk compiler and getting ibm jdks, and it all seems fine.&lt;br/&gt;
So, I don&apos;t know anymore what made me decide to need the *compile.classpath variables...&lt;/p&gt;
</comment>
                            <comment id="12658178" author="rhillegas" created="Fri, 19 Dec 2008 20:39:51 +0000"  >&lt;p&gt;Attaching derby-3988-01-ad-alwaysCompileJDBC4.diff. This is identical to the previous patch except that it adds a check to PropertySetter. The check aborts the build if the IBM Java 5 compiler is being used and java16compile.classpath is set. In that case, the build aborts, telling the user to either use a Java 6 compiler or unset java16compile.classpath.&lt;/p&gt;

&lt;p&gt;Myrna, please let me know if this is an acceptable solution. I think that you should be able to use the same ant.properties for your 10.5 and 10.4 builds as long as you use a Java 6 compiler for both.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12658246" author="myrna" created="Sat, 20 Dec 2008 01:32:48 +0000"  >&lt;p&gt;I did some more experimenting, and I think  this is acceptable.&lt;br/&gt;
Thank you for your patience.&lt;br/&gt;
+1 to commit patch &lt;b&gt;ad&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12658539" author="rhillegas" created="Mon, 22 Dec 2008 13:52:36 +0000"  >&lt;p&gt;Thanks for running more experiments and for the +1, Myrna. I have committed derby-3988-01-ad-alwaysCompileJDBC4.diff at subversion revision 728693.&lt;/p&gt;</comment>
                            <comment id="12662967" author="rhillegas" created="Mon, 12 Jan 2009 14:56:27 +0000"  >&lt;p&gt;Attaching derby-3988-02-aa-fixJarProperties.diff. This uncomments the JDBC4 data sources in the list of extra classes which need to be pulled in when we build the jars. When the jdk16 property was deprecated, these classes were no longer pulled into derby.jar. Touches the following file:&lt;/p&gt;

&lt;p&gt;M      tools/jar/extraDBMSclasses.properties&lt;/p&gt;</comment>
                            <comment id="12662979" author="knutanders" created="Mon, 12 Jan 2009 15:52:58 +0000"  >&lt;p&gt;The fixJarProperties patch looks good to me. By the way, the jdk16 property is still used in build.xml (for building javadoc and running JUnit tests) even though it&apos;s been removed from the build instructions.&lt;/p&gt;

&lt;p&gt;Should the same change also be made to tools/jar/dnc.properties?&lt;/p&gt;

&lt;p&gt;Could we now remove this target from build.xml?&lt;/p&gt;

&lt;p&gt;  &amp;lt;target name=&quot;jdbc4_classlist_edit&quot; if=&quot;jdk16&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;!-- uncomment jdbc4 classes if jdk 1.6 is available --&amp;gt;&lt;br/&gt;
    &amp;lt;echo level=&quot;info&quot; message=&quot;uncommenting jdbc4 classes&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;replaceregexp file=&quot;$&lt;/p&gt;
{jar.classlist}
&lt;p&gt;&quot;&lt;br/&gt;
     match=&quot;^#jdbc4_optional_(.*)&quot;&lt;br/&gt;
     replace=&quot;\1&quot;&lt;br/&gt;
     byline=&quot;true&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/target&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12663043" author="rhillegas" created="Mon, 12 Jan 2009 18:51:56 +0000"  >&lt;p&gt;Thanks, Knut. Attaching derby-3988-02-ab-fixJarProperties.diff. This adjusts dnc.properties and the master build.xml as you suggest.&lt;/p&gt;</comment>
                            <comment id="12663272" author="knutanders" created="Tue, 13 Jan 2009 09:03:14 +0000"  >&lt;p&gt;Thanks, Rick. The ab patch looks fine. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12663348" author="rhillegas" created="Tue, 13 Jan 2009 14:52:42 +0000"  >&lt;p&gt;Thanks, Knut. Committed derby-3988-02-ab-fixJarProperties.diff at subversion revision 734146.&lt;/p&gt;</comment>
                            <comment id="12663555" author="dagw" created="Wed, 14 Jan 2009 00:00:03 +0000"  >&lt;p&gt;I can confirm that after fixJarProperties  was committed I can now run off jars again, thanks, Rick.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12412293">DERBY-4017</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12412505">DERBY-4022</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12409405">DERBY-3966</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12410606">DERBY-3989</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12395968" name="derby-3988-01-aa-alwaysCompileJDBC4.diff" size="4991" author="rhillegas" created="Fri, 12 Dec 2008 20:13:03 +0000"/>
                            <attachment id="12396101" name="derby-3988-01-ab-alwaysCompileJDBC4.diff" size="7277" author="rhillegas" created="Mon, 15 Dec 2008 16:17:11 +0000"/>
                            <attachment id="12396191" name="derby-3988-01-ac-alwaysCompileJDBC4.diff" size="7305" author="rhillegas" created="Tue, 16 Dec 2008 14:46:14 +0000"/>
                            <attachment id="12396511" name="derby-3988-01-ad-alwaysCompileJDBC4.diff" size="10509" author="rhillegas" created="Fri, 19 Dec 2008 20:39:51 +0000"/>
                            <attachment id="12397691" name="derby-3988-02-aa-fixJarProperties.diff" size="1290" author="rhillegas" created="Mon, 12 Jan 2009 14:56:27 +0000"/>
                            <attachment id="12397704" name="derby-3988-02-ab-fixJarProperties.diff" size="4401" author="rhillegas" created="Mon, 12 Jan 2009 18:51:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 Dec 2008 15:44:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31085</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0xzr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39325</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>