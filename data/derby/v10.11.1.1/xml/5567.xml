<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:17:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5567/DERBY-5567.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5567] AlterTableTest#testDropColumn fails: drop view cannot be performed due to dependency</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5567</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Saw this when running suitesAll on 10.8.2.2:&lt;/p&gt;

&lt;p&gt;1) testDropColumn(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)java.sql.SQLException: Operation &apos;DROP VIEW&apos; cannot be performed on object &apos;ATDC_VW_5A_1&apos; because VIEW &apos;ATDC_VW_5A_2&apos; is dependent on that object.&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropColumn(AlterTableTest.java:2465)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Operation &apos;DROP VIEW&apos; cannot be performed on object &apos;ATDC_VW_5A_1&apos; because VIEW &apos;ATDC_VW_5A_2&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeSqlca(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeExecuteImmediate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.parseEXCSQLIMMreply(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.readExecuteImmediate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.StatementReply.readExecuteImmediate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatement.readExecuteImmediate_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.readExecuteImmediate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.flowExecute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeUpdateX(Unknown Source)&lt;br/&gt;
	... 55 more&lt;/p&gt;

&lt;p&gt;Prior to this, though, I saw this on the console, but no error/failure. Probably not related, I believe we have seen this before:&lt;/p&gt;

&lt;p&gt;java.lang.Exception: DRDA_InvalidReplyTooShort.S:Invalid reply from network server: Insufficient data.&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWork(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessage(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBuffer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.readResult(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpen(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.drda.NetworkServerControlImpl.ping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.drda.NetworkServerControl.ping(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUp(NetworkServerTestSetup.java:567)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.canPingServer(ServerPropertiesTest.java:280)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.ServerPropertiesTest.ttestSetPortPriority(ServerPropertiesTest.java:472)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:601)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:164)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:130)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:121)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:185)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:143)&lt;/p&gt;</description>
                <environment>Windows 7 Enterprise SP1, Java 1.7u4 prerelease, -d64</environment>
        <key id="12537319">DERBY-5567</key>
            <summary>AlterTableTest#testDropColumn fails: drop view cannot be performed due to dependency</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Jan 2012 13:35:04 +0000</created>
                <updated>Thu, 1 Nov 2012 21:10:43 +0000</updated>
                            <resolved>Tue, 9 Oct 2012 19:55:11 +0100</resolved>
                                    <version>10.8.2.2</version>
                                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13180810" author="knutanders" created="Thu, 5 Jan 2012 20:23:17 +0000"  >&lt;p&gt;Here&apos;s the sequence of statements that fails (line numbers have changed from 10.8.2.2 to trunk). It&apos;s the last statement (alter table ... drop column) that fails.&lt;/p&gt;

&lt;p&gt;        // cascade processing should transitively drop a view &lt;br/&gt;
        // dependent on a view dependent in turn on the column &lt;br/&gt;
        // being dropped:&lt;/p&gt;

&lt;p&gt;        st.executeUpdate(&quot;create table atdc_5a (a int, b int, c int)&quot;);&lt;/p&gt;

&lt;p&gt;        st.executeUpdate(&lt;br/&gt;
                &quot; create view atdc_vw_5a_1 (vw_5a_b, vw_5a_c) as &quot; +&lt;br/&gt;
                &quot;select b,c from atdc_5a&quot;);&lt;/p&gt;

&lt;p&gt;        st.executeUpdate(&lt;br/&gt;
                &quot; create view atdc_vw_5a_2 (vw_5a_c_2) as select &quot; +&lt;br/&gt;
                &quot;vw_5a_c from atdc_vw_5a_1&quot;);&lt;/p&gt;

&lt;p&gt;        st.executeUpdate(&quot;alter table atdc_5a drop column b cascade&quot;);&lt;/p&gt;

&lt;p&gt;This looks like a fairly straightforward and independent piece of code. Since the table and the views were created successfully just before the ALTER TABLE statement, and there are no dependencies on other tables, I don&apos;t see how this failure could be caused by a problem in the test itself. It feels like a real bug.&lt;/p&gt;

&lt;p&gt;I don&apos;t suppose it&apos;s reproducible?&lt;/p&gt;</comment>
                            <comment id="13181214" author="dagw" created="Fri, 6 Jan 2012 09:22:55 +0000"  >&lt;p&gt;Not standalone anyway (tried 5 iterations).&lt;/p&gt;</comment>
                            <comment id="13183279" author="dagw" created="Tue, 10 Jan 2012 13:50:10 +0000"  >&lt;p&gt;I was able to repeat this on my 64 bits Windows (in a VM) again, running full suitesAll, at attempt #14, so not easy to reproduce.&lt;br/&gt;
I tried just running the lang suite but that didn&apos;t pop it yet.&lt;/p&gt;</comment>
                            <comment id="13192201" author="dagw" created="Tue, 24 Jan 2012 15:05:51 +0000"  >&lt;p&gt;By running suitesAll but removing suites after lang I can reproduce this more often on 10.8 (sane trunk this time), 16 out of 47 runs.&lt;/p&gt;</comment>
                            <comment id="13192301" author="dagw" created="Tue, 24 Jan 2012 17:32:36 +0000"  >&lt;p&gt;Apprently this error happens due to a special fixture ordering in the new VM. I observed similar fixture ordering in the runs that saw the error. I enclose a version of AlterTableTest which uses fixed deterministic fixture ordering, using the observed ordering in the erroneous runs. This reproduces the error on my Solaris box fairly easily, although not on every run (about 50-70% of runs).&lt;/p&gt;

</comment>
                            <comment id="13192406" author="dagw" created="Tue, 24 Jan 2012 19:22:24 +0000"  >&lt;p&gt;Using the fixed ordering, I am also able to reproduce on the trunk, not just 10.8 head.&lt;/p&gt;</comment>
                            <comment id="13192410" author="dagw" created="Tue, 24 Jan 2012 19:24:40 +0000"  >&lt;p&gt;Another data point: In all cases, it is the client version of the test fixture that fails.&lt;/p&gt;</comment>
                            <comment id="13192417" author="dagw" created="Tue, 24 Jan 2012 19:28:15 +0000"  >&lt;p&gt;The stack trace on the server side (from derby.log) looks like this (trunk):&lt;/p&gt;

&lt;p&gt;ERROR X0Y23: Operation &apos;DROP VIEW&apos; cannot be performed on object &apos;ATDC_VW_5A_1&apos; because VIEW &apos;ATDC_VW_5A_2&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:335)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.ViewDescriptor.prepareToInvalidate(ViewDescriptor.java:308)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.coreInvalidateFor(BasicDependencyManager.java:437)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.invalidateFor(BasicDependencyManager.java:298)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.ViewDescriptor.drop(ViewDescriptor.java:428)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.ViewDescriptor.makeInvalid(ViewDescriptor.java:365)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.coreInvalidateFor(BasicDependencyManager.java:460)&lt;br/&gt;
	at org.apache.derby.impl.sql.depend.BasicDependencyManager.invalidateFor(BasicDependencyManager.java:298)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.dropColumnFromTable(AlterTableConstantAction.java:1362)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(AlterTableConstantAction.java:507)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(AlterTableConstantAction.java:276)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:61)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:179)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLIMM(DRDAConnThread.java:5215)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:779)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:295)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;</comment>
                            <comment id="13192570" author="dagw" created="Tue, 24 Jan 2012 21:48:42 +0000"  >&lt;p&gt;Looking at the dependencies being recorded it looks like when the error occur in the client suite, the dependencies are registered in a slightly different order than when it succeeds for the table/two views in question:&lt;/p&gt;

&lt;p&gt;This order seems to always (as traced from CreateViewConstantAction#executeConstantAction: dm.addDependency);&lt;/p&gt;

&lt;p&gt;TDC_VW_5A_1 depends on t ATDC_5A&lt;br/&gt;
ATDC_VW_5A_2 depends on t ATDC_5A&lt;br/&gt;
ATDC_VW_5A_2 depends on v ATDC_VW_5A_1&lt;/p&gt;

&lt;p&gt;Sometimes however, the depdendencies are registered in this order (no&lt;br/&gt;
idea why yet):&lt;/p&gt;

&lt;p&gt;ATDC_VW_5A_1 depends on t ATDC_5A&lt;br/&gt;
ATDC_VW_5A_2 depends on v ATDC_VW_5A_1&lt;br/&gt;
ATDC_VW_5A_2 depends on t ATDC_5A&lt;/p&gt;

&lt;p&gt;If this happens for the client of the test, the drop column will give&lt;br/&gt;
the seen error. &lt;/p&gt;

&lt;p&gt;A possible theory is that when invalidating from dropping the column&lt;br/&gt;
&quot;b&quot;, the &lt;b&gt;direct&lt;/b&gt; dependency &quot;ATDC_VW_5A_2 depends on t ATDC_5A&quot; is&lt;br/&gt;
inspected first and the view ATDC_VW_5A_2 is dropped because the action&lt;br/&gt;
DROP_COLUMN allows this (CASCADE).&lt;/p&gt;

&lt;p&gt;If, however, the invalidation first picks up the &lt;b&gt;indirect depedency&lt;/b&gt;&lt;br/&gt;
transitively (as seems to happen in the stack trace, cf the two levels&lt;br/&gt;
of invalidateFor), i.e. it inspects the direct dependency&lt;br/&gt;
&quot;ATDC_VW_5A_1 depends on t ATDC_5A&quot; first:&lt;/p&gt;

&lt;p&gt;     ATDC_VW_5A_1 depends on t ATDC_5A  -&amp;gt; leads to&lt;br/&gt;
     ATDC_VW_5A_2 depends on v ATDC_VW_5A_1&lt;/p&gt;

&lt;p&gt;and the last action is DROP_VIEW when one hits the dependent&lt;br/&gt;
ATDC_VW_5A_2 (from ATDC_VW_5A_1), cf.&lt;br/&gt;
ViewDescripotor#prepareToInvalidate cease &quot;default&quot; which throws an&lt;br/&gt;
error as seen.&lt;/p&gt;

&lt;p&gt;Presumaby, if the invalidation first inspects &quot;ATDC_VW_5A_2 depends on&lt;br/&gt;
t ATDC_5A&quot;, the indirect depdency will be removed (since ATDC_VW_5A_2&lt;br/&gt;
is now gone) before it is inspected and the action DROP_VIEW is used.&lt;/p&gt;
</comment>
                            <comment id="13194187" author="dagw" created="Thu, 26 Jan 2012 21:16:03 +0000"  >&lt;p&gt;I was questioning whether this test case is actually correct, although I think it is. In our doc for DROP VIEW we state the following:&lt;/p&gt;

&lt;p&gt;&quot;Any statements referencing the view are invalidated on a DROP VIEW statement. DROP VIEW is disallowed if there are any views or open cursors dependent on the view. The view must be dropped before any objects that it is dependent on can be dropped.&quot;&lt;/p&gt;

&lt;p&gt;The last sentence is pertinent: It states that a view must be dropped &lt;b&gt;before&lt;/b&gt; any object it is dependent on can be dropped. In this case the view is clearly dependent on the column being dropped. This run contrary to the CASCADE semantics for DROP COLUMN.  We also state: &quot;DROP VIEW is disallowed if there are any views or open cursors dependent on the view.&quot;&lt;/p&gt;

&lt;p&gt;Probably the intension is that the CASCADE should win here: The statement &quot;The view must be dropped before any objects that it is dependent on can be dropped.&quot; should be qualified with something like &quot;unless as a result of a drop with CASCADE&quot;.&lt;/p&gt;

&lt;p&gt;If so, the code that performs view drop here should carry the invalidation action DROP_COLUMN all the way, not switch to DROP_VIEW. I&apos;ll try to make a fix doing that and see how it works out.&lt;/p&gt;

&lt;p&gt;If invalidation of view 2 proceeds indirectly, we have what is seen in&lt;br/&gt;
the stack dump I posted:&lt;/p&gt;

&lt;p&gt;  drop column&lt;br/&gt;
  invalidateFor(DROP_COLUMN): find deps on table and iterate, we find view 1 first&lt;br/&gt;
  drop view 1&lt;br/&gt;
  invalidateFor(DROP_VIEW)&lt;br/&gt;
  check is dependents? yes, view 2 =&amp;gt; error&lt;/p&gt;

&lt;p&gt;Mostly we see this call order, which works:&lt;/p&gt;

&lt;p&gt;  drop column&lt;br/&gt;
  invalidateFor(DROP_COLUMN): find deps on table and iterate, we find view 2 first&lt;br/&gt;
  drop view 2&lt;br/&gt;
  invalidateFor(DROP_VIEW)&lt;br/&gt;
  check is dependents? no&lt;br/&gt;
  drop view 1&lt;br/&gt;
  invalidateFor(DROP_VIEW)&lt;br/&gt;
  check is dependents? no&lt;br/&gt;
  OK&lt;/p&gt;

&lt;p&gt;I think we need to keep the action DROP_COLUMN when we recurse here: dropping view 1 here is not a result of a DROP VIEW, which would be illegal, but a result of the DROP COLUMN CASCADE, which should be legal.&lt;/p&gt;

</comment>
                            <comment id="13194925" author="dagw" created="Fri, 27 Jan 2012 17:21:49 +0000"  >&lt;p&gt;Uploading a patch derby-5567-1, which implements the strategy described above. In addition to retaining the original invalidation action when recursing through views to their dependents, I added a check in ViewDescriptor#makeInvalid to see if the data dictionary entry is already gone lest we try to remove it twice. An absence of this test would lead to a NPE in the case under consideration (td would be null).&lt;/p&gt;

&lt;p&gt;In addition to dropping columns, revoking privileges or dropping roles will also lead to dependent views being dropped in the current implementation. The bug seen may or may not occur in that case, but the patch makes the code retain those invalidation actions also, when recursing invalidation through a view&apos;s dependents.&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;</comment>
                            <comment id="13194932" author="dagw" created="Fri, 27 Jan 2012 17:26:15 +0000"  >&lt;p&gt;As for tests, the only way I know to provoke this error frequently is by running AlterTableTest with a fixed ordering, cf the attachment. We probably do not want to commit that change, so the patch only includes the change to ViewDescriptor. For test driving the patch, I would suggest using the attached test since that is likely to pop the error.&lt;/p&gt;</comment>
                            <comment id="13195612" author="dagw" created="Sat, 28 Jan 2012 19:42:34 +0000"  >&lt;p&gt;Regressions passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13195879" author="dagw" created="Sun, 29 Jan 2012 23:48:16 +0000"  >&lt;p&gt;For the record, the reason the dependencies are sometimes accessed in a different order is the fact they are held in a hash table keyed by their UUID, cf.&lt;br/&gt;
ProviderList.addProvider. Although the dependencies are always added in the same order in the bind phase, when they are retrieved, they may come back in a different order, cf BasicDependencyManager.getPersistentProvideInfos which retrieves an Enumeration from the hash table.&lt;/p&gt;</comment>
                            <comment id="13197943" author="rhillegas" created="Wed, 1 Feb 2012 16:38:35 +0000"  >&lt;p&gt;Hi Dag,&lt;/p&gt;

&lt;p&gt;Your reasoning sounds good to me and it looks like the patch does what you described in the comment on 2012-01-27. +1.&lt;/p&gt;</comment>
                            <comment id="13199311" author="dagw" created="Thu, 2 Feb 2012 22:48:36 +0000"  >&lt;p&gt;Committed patch (added javadocs) as svn 1239898.&lt;/p&gt;</comment>
                            <comment id="13199320" author="dagw" created="Thu, 2 Feb 2012 22:52:51 +0000"  >&lt;p&gt;Thanks for looking at the patch, Rick. I&apos;ll backport this to 10.8 branch, then close it. It can likely be backported further if anyone is interested, the error goes further back.&lt;/p&gt;
</comment>
                            <comment id="13199903" author="dagw" created="Fri, 3 Feb 2012 17:40:35 +0000"  >&lt;p&gt;Backported to 10.8 branch as svn 1240258.&lt;/p&gt;</comment>
                            <comment id="13471666" author="myrna" created="Mon, 8 Oct 2012 17:57:53 +0100"  >&lt;p&gt;Indeed this exists further back, looks like it happened on 10.6 with weme6.2:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_6/windows/testlog/weme6.2/1394343-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_6/windows/testlog/weme6.2/1394343-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So at some point, this could get backported further.&lt;/p&gt;</comment>
                            <comment id="13471735" author="mamtas" created="Mon, 8 Oct 2012 19:29:57 +0100"  >&lt;p&gt;I can work on backporting this.&lt;/p&gt;</comment>
                            <comment id="13472110" author="mamtas" created="Tue, 9 Oct 2012 04:49:44 +0100"  >&lt;p&gt;Backported to 10.7 branch as svn 1395854. &lt;/p&gt;</comment>
                            <comment id="13472477" author="mamtas" created="Tue, 9 Oct 2012 16:42:40 +0100"  >&lt;p&gt;Backported to 10.6 branch as svn 1396083. &lt;/p&gt;</comment>
                            <comment id="13472630" author="mamtas" created="Tue, 9 Oct 2012 19:53:56 +0100"  >&lt;p&gt;Backported to 10.5 branch as svn 1396197&lt;/p&gt;</comment>
                            <comment id="13472635" author="mamtas" created="Tue, 9 Oct 2012 19:55:03 +0100"  >&lt;p&gt;Finished backporting upto 10.5 codeline&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12540381">DERBY-5591</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12511693" name="AlterTableTest.java" size="156857" author="dagw" created="Tue, 24 Jan 2012 17:33:46 +0000"/>
                            <attachment id="12512191" name="derby-5567-1.diff" size="3637" author="dagw" created="Fri, 27 Jan 2012 17:21:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Jan 2012 20:23:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>222827</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy06m7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34890</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>