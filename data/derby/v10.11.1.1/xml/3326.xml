<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3326/DERBY-3326.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3326] Introduce a caching logical connection and logical prepared statement in the client driver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3326</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A logical connection with statement caching capabilities is required to support JDBC prepared statement pooling. Further, a logical prepared statement object is also needed.&lt;br/&gt;
The logical prepared statements will be generated by the logical connection&apos;s &apos;prepareStatement&apos;-method.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12386516">DERBY-3326</key>
            <summary>Introduce a caching logical connection and logical prepared statement in the client driver</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12385979">DERBY-3313</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Jan 2008 17:11:28 +0000</created>
                <updated>Mon, 14 Apr 2008 14:33:39 +0100</updated>
                            <resolved>Thu, 3 Apr 2008 16:52:54 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12561654" author="kristwaa" created="Wed, 23 Jan 2008 12:27:42 +0000"  >&lt;p&gt;&apos;derby-3326-1a_cpds_testing_preparation.diff&apos; is a preparation step for reusing existing tests with a ConnectionPoolDataSource producing connections with statement pooling enabled.&lt;br/&gt;
Summary of changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;TestConfiguration&lt;br/&gt;
  Added method &apos;connectionCPDecorator&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ConnectionPoolDataSourceConnector&lt;br/&gt;
  Added new class (basically a copy of XADataSourceConnector).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12563131" author="kristwaa" created="Mon, 28 Jan 2008 12:42:58 +0000"  >&lt;p&gt;&apos;derby-3326-1b_cpds_testing_preparation.diff&apos; contains a few additional documentation changes, and deprecates version 1a.&lt;/p&gt;

&lt;p&gt;Committed version 1b to trunk with revision 615861.&lt;/p&gt;</comment>
                            <comment id="12568001" author="kristwaa" created="Tue, 12 Feb 2008 08:18:50 +0000"  >&lt;p&gt;&apos;derby-3326-2a-method_rename.diff&apos; renames the method ClientPooledConnection.trashConnection to informListeners, as this reflects better what the method does.&lt;/p&gt;</comment>
                            <comment id="12568959" author="kristwaa" created="Thu, 14 Feb 2008 15:21:47 +0000"  >&lt;p&gt;When working on this patch, I found a possible problematic area with&lt;br/&gt;
regards to synchronization. The problem is that a physical statement can&lt;br/&gt;
be taken out of the statement cache before it has been reset for reuse.&lt;br/&gt;
Calls will still be synchronized in the physical statement, but I think&lt;br/&gt;
there is a possibilty for nasty side effects due to ordering.&lt;br/&gt;
I have just introduced the method &apos;resetForReuse&apos; for now, it does not&lt;br/&gt;
yet exists. It will/would involve actions like closing result sets.&lt;/p&gt;

&lt;p&gt;Current situation, in a new file/method LogicalStatementEntity.close:&lt;br/&gt;
    // Try to insert the statement into the cache.&lt;br/&gt;
    if (cache.cacheStatement(stmtKey, temporaryPsRef)) &lt;/p&gt;
{
        temporaryPsRef.resetForReuse();
    }
&lt;p&gt; else &lt;/p&gt;
{
        // Statement was already in the cache, so we can close it.
        temporaryPsRef.close();
    }&lt;br/&gt;
&lt;br/&gt;
There is a possibility for another thread to grab the physical statement&lt;br/&gt;
(named &apos;temporaryPsRef&apos; above) just after it has been inserted.&lt;br/&gt;
There are several solutions, I describe some of the below. They all have&lt;br/&gt;
pros and cons...&lt;br/&gt;
&lt;br/&gt;
* Solution #1: Do it unconditionally before insertion.&lt;br/&gt;
Change code to something like this:&lt;br/&gt;
    temporaryPsRef.resetForReuse();&lt;br/&gt;
    // Try to insert the statement into the cache.&lt;br/&gt;
    if (!cache.cacheStatement(stmtKey, temporaryPsRef)) {
        // Statement was already in the cache, so we can close it.
        temporaryPsRef.close();
    }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We end up doing some unnecessary work if stmt is discarded&lt;br/&gt;
    (this probably means an extra round-trip, but should rarely happen)&lt;/li&gt;
	&lt;li&gt;Harder to use the cache correctly?&lt;br/&gt;
  + No changes to statement cache, simple.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Solution #2: Let the cache to the work.&lt;br/&gt;
One could add another interace, say &apos;ReusableStatement&apos;, with two&lt;br/&gt;
methods: discard() and resetForReuse(). Both would throw SQLException.&lt;br/&gt;
One would simply call cache.cacheStatement(stmtKey, temporaryPsRef), which&lt;br/&gt;
could do something like this while holding synchronization on the cache:&lt;br/&gt;
    final boolean alreadyCached = this.statements.containsKey(statementKey);&lt;br/&gt;
    if (!alreadyCached) 
{
        ps.resetForReuse();
        statements.put(statementKey, ps);
    }
&lt;p&gt; else &lt;/p&gt;
{
        ps.discard();
    }
&lt;p&gt;    return !alreadyCached;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One could also imagine making the cache more generic, by introducing say&lt;br/&gt;
&apos;ReusableJDBCObject&apos; and rename the cache methods etc.&lt;/p&gt;

&lt;p&gt;  + encapsulation&lt;br/&gt;
  + ease of use&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;yet another interface&lt;/li&gt;
	&lt;li&gt;cache methods throw exceptions&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Solution #3: Introduce a synchronization object to the cache&lt;br/&gt;
Partially as done other places in Derby, introducing a synchronization&lt;br/&gt;
object for doing composite actions. This would typically be the&lt;br/&gt;
connection instance. With regards to solution #1, the code would change&lt;br/&gt;
to the code below and the cache would have to synchronize on the same&lt;br/&gt;
object internally:&lt;br/&gt;
    synchronized (cache.getSynchronizationObject()) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {        // Try to insert the statement into the cache.        if (cache.cacheStatement(stmtKey, temporaryPsRef)) {
            temporaryPsRef.resetForReuse();
        } else {
            // Statement was already in the cache, so we can close it.
            temporaryPsRef.close();
        }    }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  + flexibility???&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;error prone&lt;/li&gt;
	&lt;li&gt;cache can be locked down by clients&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One could also introduce some other variation of the above, but I was&lt;br/&gt;
in general hoping to avoid having to synchronize too much in the logical&lt;br/&gt;
entities, since the associated physical entity will synchronize as well&lt;br/&gt;
and the reference to the physical entity will be synchronized. The&lt;br/&gt;
common forwarding pattern I have intended to use is:&lt;br/&gt;
    getPhys&lt;span class=&quot;error&quot;&gt;&amp;#91;CP&amp;#93;&lt;/span&gt;s().&amp;lt;methodName&amp;gt;(&amp;lt;args&amp;gt;);&lt;br/&gt;
The get methods will throw an exception if the logical entity has been&lt;br/&gt;
closed, and the get methods and the close method will synchronize on the&lt;br/&gt;
same object (currently this is the LogicalStatementEntity).&lt;/p&gt;

&lt;p&gt;Have I forgotten anything essential?&lt;br/&gt;
Other pieces of advice anyone want to share with me?&lt;/p&gt;


&lt;p&gt;For my current patch I will go for solution #1 due to its simplicity,&lt;br/&gt;
but will consider changing it later based on feedback and further&lt;br/&gt;
investigation.&lt;/p&gt;

&lt;p&gt;I expect to post patches for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3326&quot; title=&quot;Introduce a caching logical connection and logical prepared statement in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3326&quot;&gt;&lt;del&gt;DERBY-3326&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3328&quot; title=&quot;Extend client JDBC object factory with methods to create objects required for statement pooling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3328&quot;&gt;&lt;del&gt;DERBY-3328&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3329&quot; title=&quot;Enable statement pooling in the client JDBC driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3329&quot;&gt;&lt;del&gt;DERBY-3329&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
tomorrow. What&apos;s left for sure then, is to integrate &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3192&quot; title=&quot;Cache session data in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3192&quot;&gt;&lt;del&gt;DERBY-3192&lt;/del&gt;&lt;/a&gt;, which&lt;br/&gt;
will happen under the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3326&quot; title=&quot;Introduce a caching logical connection and logical prepared statement in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3326&quot;&gt;&lt;del&gt;DERBY-3326&lt;/del&gt;&lt;/a&gt; issue.&lt;br/&gt;
These patches might need more work, but it should then be possible to&lt;br/&gt;
apply a set of patches and test the feature from trunk.&lt;/p&gt;</comment>
                            <comment id="12569325" author="kristwaa" created="Fri, 15 Feb 2008 17:19:44 +0000"  >&lt;p&gt;&apos;derby-3326-3a-new_classes.diff&apos; introduces the new classes to support statement pooling.&lt;br/&gt;
Note that some of the classes are almost pure forwarding classes, and the patch basically contains two classes with special logic (LogicalStatementEntity and StatementCacheInteractor), two connection classes with special logic and four forwarding classes (two for each of Prepared- and CallableStatement).&lt;br/&gt;
The &quot;special logic classes&quot; were introduced because I cannot inherit from two classes. I&apos;m sure there are other design choices too.&lt;/p&gt;

&lt;p&gt;I&apos;m not quite happy with the code in LogicalStatementEntity, any suggestions for improvement?&lt;br/&gt;
Further, these things need more work:&lt;br/&gt;
 1) Integrate &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3192&quot; title=&quot;Cache session data in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3192&quot;&gt;&lt;del&gt;DERBY-3192&lt;/del&gt;&lt;/a&gt; (compilation schema)&lt;br/&gt;
 2) The &apos;am.PreapredStatement.reset(true)&apos; is just a &quot;placeholder&quot;, and I have to check it and possibly write a special reset method for pooling.&lt;/p&gt;

&lt;p&gt;If I get no major pushback on the design/approach, I will commit the patch rather quickly as part of incremental development. The code won&apos;t be enabled yet anyway.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12569577" author="kristwaa" created="Sat, 16 Feb 2008 15:30:41 +0000"  >&lt;p&gt;&apos;derby-3326-3b-new_classes.diff&apos; is a new version with changes in LogicalStatementEntity and a test.&lt;br/&gt;
The test is a package private test, and can be built and run with &apos;ant pptesting junit-pptesting&apos;.&lt;/p&gt;

&lt;p&gt;It is hard to write a proper &quot;normal&quot; test, as statement pooling is supposed to be transparent to the user and there are no methods to obtain information about the cache itself etc.&lt;br/&gt;
The only ideas I have come up with so far, is making sure it is enabled (by checking implementation details, like which class is used), and making sure nothing fails if you overflow the cache etc.&lt;/p&gt;

&lt;p&gt;To test the logical forwarding classes, I will identify some suitable existing tests and run them with a connection pool data source decorator.&lt;/p&gt;</comment>
                            <comment id="12570763" author="kristwaa" created="Wed, 20 Feb 2008 17:19:07 +0000"  >&lt;p&gt;&apos;derby-3326-3c-new_classes.diff&apos; contains some changes from the earlier versions, but the design is the same.&lt;br/&gt;
I will commit this later today and use it as a baseline for further work, unless someone want time to review it before it goes in.&lt;/p&gt;

&lt;p&gt;I expect there will be some changes later, and please note that the patch in partial and does not enable any of the statement pooling code.&lt;/p&gt;</comment>
                            <comment id="12570994" author="kristwaa" created="Thu, 21 Feb 2008 10:27:00 +0000"  >&lt;p&gt;Committed &apos;derby-3326-3c-new_classes.diff&apos; to trunk with revision 629734. The commit also included a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3328&quot; title=&quot;Extend client JDBC object factory with methods to create objects required for statement pooling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3328&quot;&gt;&lt;del&gt;DERBY-3328&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12571006" author="kristwaa" created="Thu, 21 Feb 2008 10:47:13 +0000"  >&lt;p&gt;Committed &apos;derby-3326-2a-method_rename.diff&apos; to trunk with revision 629739.&lt;/p&gt;</comment>
                            <comment id="12571132" author="kristwaa" created="Thu, 21 Feb 2008 18:29:49 +0000"  >&lt;p&gt;&apos;derby-3326-4a-cpdsc_shutEngine.diff&apos; implements Connector.shutEngine for ConnectionPoolDataSourceConnector.&lt;br/&gt;
store.BootAllTest passes when run with TestConfiguration.connectionCPDecorator.&lt;br/&gt;
BTW, is there a reason why shutEngine isn&apos;t implemented for the XA connector?&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12571133" author="kristwaa" created="Thu, 21 Feb 2008 18:30:51 +0000"  >&lt;p&gt;The small patch &apos;derby-3326-4a-cpdsc_shutEngine.diff&apos; is ready for review.&lt;/p&gt;</comment>
                            <comment id="12571780" author="kristwaa" created="Sat, 23 Feb 2008 19:26:51 +0000"  >&lt;p&gt;Attached &apos;derby-3326-5a-enable_logicalstmtentity_pptest.diff&apos; which enables the package private test LogicalStatementEntityTest to be run as part of the junit-pptesting ant target.&lt;br/&gt;
Committed the patch to trunk with revision 630512.&lt;/p&gt;

&lt;p&gt;Note that the previously attached patch 4a is still uncommitted and up for review.&lt;/p&gt;</comment>
                            <comment id="12572380" author="kristwaa" created="Tue, 26 Feb 2008 08:12:11 +0000"  >&lt;p&gt;Committed &apos;derby-3326-4a-cpdsc_shutEngine.diff&apos; to trunk with revision 631123.&lt;/p&gt;</comment>
                            <comment id="12572509" author="kristwaa" created="Tue, 26 Feb 2008 14:58:55 +0000"  >&lt;p&gt;&apos;derby-3326-6a-npe_fix_synch_CLC.diff&apos;  fixes an obvious NPE I overlooked and adds synchronization for the close method.&lt;/p&gt;</comment>
                            <comment id="12572517" author="kristwaa" created="Tue, 26 Feb 2008 15:49:46 +0000"  >&lt;p&gt;&apos;derby-3326-6b-npe_fix_synch_CLC.diff&apos; removes one line from each of the two affected files, that belonged to another JIRA/patch.&lt;/p&gt;

&lt;p&gt;Committed patch 6b to trunk with revision 631258.&lt;/p&gt;</comment>
                            <comment id="12572578" author="kristwaa" created="Tue, 26 Feb 2008 17:53:12 +0000"  >&lt;p&gt;&apos;derby-3326-7a-prepare_column_indexes_names_fix.diff&apos; fixes bug where statements prepared with prepareStatement(String,String[]|int[]) were always prepared with Statement.RETURN_GENERATED_KEYS.&lt;br/&gt;
The code now checks if the arrays are null or empty.&lt;/p&gt;

&lt;p&gt;There is a related problem when the array has more than one element. The client driver currently doesn&apos;t throw an exception, and the assert kicks in (see CachingLogicalConnection). I haven&apos;t decided what to do with this. The easiest is probably to ignore this fact and collapse the if to handle only the null/empty case and the not-empty case.&lt;br/&gt;
Comments?&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12572887" author="kristwaa" created="Wed, 27 Feb 2008 12:06:42 +0000"  >&lt;p&gt;Committed &apos;derby-3326-7a-prepare_column_indexes_names_fix.diff&apos; to trunk with revision 631569.&lt;/p&gt;</comment>
                            <comment id="12573401" author="kristwaa" created="Thu, 28 Feb 2008 18:57:44 +0000"  >&lt;p&gt;&apos;derby-3326-8a-use_session_data_caching.diff&apos; enables the use of the cached session data (the current schema) brought by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3192&quot; title=&quot;Cache session data in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3192&quot;&gt;&lt;del&gt;DERBY-3192&lt;/del&gt;&lt;/a&gt;. Thanks Dyre &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Committed 8a to trunk with revision 632088.&lt;/p&gt;</comment>
                            <comment id="12585146" author="kristwaa" created="Thu, 3 Apr 2008 16:41:49 +0100"  >&lt;p&gt;&apos;derby-3326-9a-temp_table_test.diff&apos; adds a test in jdbcapi.StatementPoolingTest that tests that temporary tables are deleted and not visible across logical connections.&lt;br/&gt;
Also set the createDatabase to create on the data source for some of the tests, so they can be run individually and not fail if the database hasn&apos;t been created yet.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 644360 and to the 10.4 branch with revision 644373.&lt;/p&gt;</comment>
                            <comment id="12585153" author="kristwaa" created="Thu, 3 Apr 2008 16:52:54 +0100"  >&lt;p&gt;Resolving the issue.&lt;br/&gt;
There is still a minor issue regarding the prepare calls taking an int and a string array. The assert will trigger in sane builds, whereas in insane builds enabling statement caching will give you the same behavior as without caching.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12386521">DERBY-3329</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12389388">DERBY-3457</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12389250">DERBY-3446</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12386514">DERBY-3324</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12386520">DERBY-3328</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12373819" name="derby-3326-1a_cpds_testing_preparation.diff" size="8525" author="kristwaa" created="Wed, 23 Jan 2008 12:27:42 +0000"/>
                            <attachment id="12373820" name="derby-3326-1a_cpds_testing_preparation.stat" size="162" author="kristwaa" created="Wed, 23 Jan 2008 12:27:42 +0000"/>
                            <attachment id="12374177" name="derby-3326-1b_cpds_testing_preparation.diff" size="8808" author="kristwaa" created="Mon, 28 Jan 2008 12:42:57 +0000"/>
                            <attachment id="12375330" name="derby-3326-2a-method_rename.diff" size="2195" author="kristwaa" created="Tue, 12 Feb 2008 08:18:50 +0000"/>
                            <attachment id="12375687" name="derby-3326-3a-new_classes.diff" size="74181" author="kristwaa" created="Fri, 15 Feb 2008 17:19:44 +0000"/>
                            <attachment id="12375688" name="derby-3326-3a-new_classes.stat" size="612" author="kristwaa" created="Fri, 15 Feb 2008 17:19:44 +0000"/>
                            <attachment id="12375754" name="derby-3326-3b-new_classes.diff" size="87895" author="kristwaa" created="Sat, 16 Feb 2008 15:30:41 +0000"/>
                            <attachment id="12375755" name="derby-3326-3b-new_classes.stat" size="691" author="kristwaa" created="Sat, 16 Feb 2008 15:30:41 +0000"/>
                            <attachment id="12376040" name="derby-3326-3c-new_classes.diff" size="92985" author="kristwaa" created="Wed, 20 Feb 2008 17:19:06 +0000"/>
                            <attachment id="12376146" name="derby-3326-4a-cpdsc_shutEngine.diff" size="732" author="kristwaa" created="Thu, 21 Feb 2008 18:29:49 +0000"/>
                            <attachment id="12376315" name="derby-3326-5a-enable_logicalstmtentity_pptest.diff" size="2466" author="kristwaa" created="Sat, 23 Feb 2008 19:26:51 +0000"/>
                            <attachment id="12376493" name="derby-3326-6a-npe_fix_synch_CLC.diff" size="2353" author="kristwaa" created="Tue, 26 Feb 2008 14:58:55 +0000"/>
                            <attachment id="12376494" name="derby-3326-6b-npe_fix_synch_CLC.diff" size="2225" author="kristwaa" created="Tue, 26 Feb 2008 15:49:46 +0000"/>
                            <attachment id="12376531" name="derby-3326-7a-prepare_column_indexes_names_fix.diff" size="3184" author="kristwaa" created="Tue, 26 Feb 2008 17:53:11 +0000"/>
                            <attachment id="12376755" name="derby-3326-8a-use_session_data_caching.diff" size="4766" author="kristwaa" created="Thu, 28 Feb 2008 18:57:44 +0000"/>
                            <attachment id="12379273" name="derby-3326-9a-temp_table_test.diff" size="4270" author="kristwaa" created="Thu, 3 Apr 2008 16:41:49 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30808</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0yyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39481</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>