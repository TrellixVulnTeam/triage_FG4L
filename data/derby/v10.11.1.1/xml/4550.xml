<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:48 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4550/DERBY-4550.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4550] Using ij to copy data from one DB to an other</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4550</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;It is possible to have open connections to several databases while running ij, but it is not currently possible to copy data from one DB to an other one.&lt;/p&gt;

&lt;p&gt;Not only such a feature would allow to copy data between Derby databases. But, ij being mostly DB agnostic, if will ease import/export from any JDBC compliant data source.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://old.nabble.com/Using-IJ-to-copy-data-from-one-DB-to-an-other-one-td27598138.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://old.nabble.com/Using-IJ-to-copy-data-from-one-DB-to-an-other-one-td27598138.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12456419">DERBY-4550</key>
            <summary>Using ij to copy data from one DB to an other</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sleroux">Sylvain Leroux</assignee>
                                    <reporter username="sleroux">Sylvain Leroux</reporter>
                        <labels>
                            <label>ij</label>
                    </labels>
                <created>Tue, 16 Feb 2010 11:30:40 +0000</created>
                <updated>Wed, 12 Jan 2011 18:57:26 +0000</updated>
                            <resolved>Mon, 15 Mar 2010 09:44:49 +0000</resolved>
                                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12834204" author="sleroux" created="Tue, 16 Feb 2010 13:22:15 +0000"  >&lt;p&gt;Here is a first attempt to solve this issue.&lt;/p&gt;

&lt;p&gt;Basically, I add an optional &quot;ON&quot; clause to the PREPARE statement, allowing to prepare the statement on an alternate connection, instead of the current one. I don&apos;t know if this is the most elegant way of doing, but it appears to work.&lt;/p&gt;

&lt;p&gt;The file &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4550&quot; title=&quot;Using ij to copy data from one DB to an other&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4550&quot;&gt;&lt;del&gt;DERBY-4550&lt;/del&gt;&lt;/a&gt;.sql contains a sample script demonstrating that.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;As Rick Hillegas suggested it on the mailing list, I will take a look at PreparedStatement.addBatch() and Statement.executeBatch() for an alternative option.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;I focused mostly on prepared statements as it was my first idea. But cursors might benefit of the same improvement.&lt;/p&gt;</comment>
                            <comment id="12834302" author="rhillegas" created="Tue, 16 Feb 2010 16:52:40 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;This is a very interesting proposal. To me the limitation in ij seems to be the inability to reference identifiers created by other connections. A more extensible solution might be to add a level to the identifier namespace:&lt;/p&gt;

&lt;p&gt;    identifier ::= [ connectionName . ] unqualifiedIdentifierName&lt;/p&gt;

&lt;p&gt;Then you could write the following script:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:dummy;create=true;user=fred&apos; as fred_conn;&lt;/p&gt;

&lt;p&gt;create table t1( a int, b int );&lt;br/&gt;
insert into t1( a, b ) values ( 1, 100 ), ( 2, 200 );&lt;/p&gt;

&lt;p&gt;autocommit off;&lt;/p&gt;

&lt;p&gt;prepare select_from_t1 as &apos;select * from t1&apos;;&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:dummy;user=alice&apos; as alice_conn;&lt;/p&gt;

&lt;p&gt;create table t3( a int, b int );&lt;/p&gt;

&lt;p&gt;execute &apos;insert into t3( a, b ) values ( ?, ? )&apos; using fred_conn.select_from_t1;&lt;/p&gt;


&lt;p&gt;We might want to consider the meaning of this fragment:&lt;/p&gt;

&lt;p&gt;set connection fred_conn;&lt;/p&gt;

&lt;p&gt;prepare alice_conn.second_select as &apos;select * from t1&apos;;&lt;/p&gt;

&lt;p&gt;To be conservative, we might want to start out saying that you can&apos;t create or remove identifiers in another connection&apos;s namespace.&lt;/p&gt;

&lt;p&gt;I think that being able to reference identifers created by other connections would be generally useful and would solve other problems besides the bulk import issue you are addressing right now.&lt;/p&gt;



</comment>
                            <comment id="12834349" author="sleroux" created="Tue, 16 Feb 2010 18:06:29 +0000"  >&lt;p&gt;Thanks for your comments Rick.&lt;/p&gt;

&lt;p&gt;Using a level on indirection to reference identifiers created by another connection will definitively be more readable  from an user point of view. I will work on that direction.&lt;/p&gt;


&lt;p&gt;As you propose, I think it would be a good starting point to state that other connection&apos;s namespace are &quot;read only&quot;.  New prepared statements (or maybe cursors or even other objects?), could only be added to the current connection namespace.&lt;/p&gt;

&lt;p&gt;So that fragment would be invalid:&lt;br/&gt;
ij&amp;gt; set connection fred_conn;&lt;br/&gt;
ij&amp;gt; prepare alice_conn.second_select as &apos;select * from t1&apos;; &lt;/p&gt;

&lt;p&gt;But what about:&lt;br/&gt;
ij&amp;gt; set connection fred_conn;&lt;br/&gt;
ij&amp;gt; prepare fred_conn.second_select as &apos;select * from t1&apos;; &lt;/p&gt;

&lt;p&gt;One option would be to only allow unqualified identifiers when introducing a /new/ identifier. And only using qualified identifiers for referencing /existing/ identifiers. &lt;/p&gt;</comment>
                            <comment id="12834381" author="rhillegas" created="Tue, 16 Feb 2010 18:52:58 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;I think that we should allow your second example:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; set connection fred_conn;&lt;br/&gt;
ij&amp;gt; prepare fred_conn.second_select as &apos;select * from t1&apos;;&lt;/p&gt;

&lt;p&gt;There ought to be a name-resolution phase in ij (or at least identifier-resolution). A connection-qualified identifier could be allowed in this situation provided that the connection is the current connection.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12834530" author="sleroux" created="Tue, 16 Feb 2010 22:43:01 +0000"  >&lt;p&gt;Concerning the PREPARE statement:&lt;br/&gt;
ij&amp;gt; prepare fred_conn.second_select as &apos;select * from t1&apos;; &lt;/p&gt;

&lt;p&gt;From the user point of view, I think it could be frustrating to discover that qualified names are allowed, but only if it refers to the current connection.&lt;/p&gt;

&lt;p&gt;Couldn&apos;t it be more consistent to:&lt;br/&gt;
1) only allow unqualified identifiers here, thus enforcing the fact that you only can create/remove an identifier in the current connection&apos;s namespace.&lt;br/&gt;
2) /or/ allow qualified identifiers here, allowing implicitly to create identifiers in an other connection&apos;s namespace.&lt;/p&gt;


&lt;p&gt;After a second thought, the later has my favors. Since it made possible to create/use/remove a prepared statement without requiring to explicitly switch connection:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; CONNECT &apos;.....&apos; AS alice_conn;&lt;br/&gt;
ij&amp;gt; CONNECT &apos;....&apos; AS fred_conn;&lt;br/&gt;
ij&amp;gt; PREPARE alice_conn.source_stmt AS &apos;SELECT * FROM T1&apos;;&lt;br/&gt;
ij&amp;gt; EXECUTE &apos;INSERT INTO T2 VALUES&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&apos; USING alice_conn.source.stmt;&lt;br/&gt;
ij&amp;gt; REMOVE alice_conn.source_stmt;&lt;/p&gt;

&lt;p&gt;With that option, the above PREPARE statement has for meaning:&lt;br/&gt;
    &quot; in the context of the connection alice_conn, prepare the statement &apos;SELECT * FROM T1&apos; &quot;&lt;/p&gt;


&lt;p&gt;I attach both a patch and sql example to demonstrate that option.&lt;/p&gt;</comment>
                            <comment id="12835028" author="sleroux" created="Wed, 17 Feb 2010 22:37:32 +0000"  >&lt;p&gt;Attaching the third version of this patch. The following statements now use qualifiedIdentifiers:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;PREPARE&lt;/li&gt;
	&lt;li&gt;EXECUTE ... USING ...&lt;/li&gt;
	&lt;li&gt;REMOVE&lt;/li&gt;
	&lt;li&gt;GET CURSOR&lt;/li&gt;
	&lt;li&gt;NEXT/PREVIOUS/FIRST/LAST/BEFORE FIRST/AFTER LAST/RELATIVE/ABSOLUTE/GETCURRENTROWNUMBER&lt;/li&gt;
	&lt;li&gt;CLOSE&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I added support for qualified identifiers on cursors as well, since I think it might be useful (as part of a different JIRA issue) to extend EXECUTE in order to accept cursors in the USING clause.&lt;/p&gt;

&lt;p&gt;I add some tests at the end of ij7.sql. I wasn&apos;t able to add GETCURRENTROWNUMBER in the test suite since it writes directly on the output, and somehow, the test tool does not take that output into account. I filed a JIRA issue on this (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4553&quot; title=&quot;In ij GETCURRENTROWNUMBER directly writeits result  to output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4553&quot;&gt;&lt;del&gt;DERBY-4553&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;ToolScript test suite ran without any error.&lt;/p&gt;</comment>
                            <comment id="12835774" author="rhillegas" created="Fri, 19 Feb 2010 15:23:02 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;I see your point about how confusing it would be if qualified names behaved differently in some contexts. I think you are right that &lt;/p&gt;

&lt;p&gt;  PREPARE alice_conn.source_stmt AS &apos;SELECT * FROM T1&apos;; &lt;/p&gt;

&lt;p&gt;should mean&lt;/p&gt;

&lt;p&gt;    &quot; in the context of the connection alice_conn, prepare the statement &apos;SELECT * FROM T1&apos; &quot;&lt;/p&gt;

&lt;p&gt;Off the top of my head, it seems to me that there are 3 kinds of names recognized by ij:&lt;/p&gt;

&lt;p&gt;1) Connection names. These are used in the CONNECT, DISCONNECT, and SET CONNECTION commands.&lt;/p&gt;

&lt;p&gt;2) Schema object names in the DESCRIBE commands. These are already handled by their own production, caIdentifier().&lt;/p&gt;

&lt;p&gt;3) Connection-scoped variables. These include the names of prepared statements, cursors, and protocols.&lt;/p&gt;

&lt;p&gt;I think it would be less confusing to users if all connection-scoped variables were treated as qualified identifiers.&lt;/p&gt;

&lt;p&gt;This brings us to the topic of what a QualifiedIdentifer is. Conceptually, I think it is just an ordered pair of names. Probably we will get into fewer maintenance issues if we model it that way. I don&apos;t think that we should store prepared statements, cursors, and protocols inside QualifiedIdentifiers. Instead, I think it would be better to use QualifiedIdentifiers to find prepared statements, cursors, and protocols using a two step process:&lt;/p&gt;

&lt;p&gt;i) Look up the Session by the connection name stored in the QualifiedIdentifier.&lt;/p&gt;

&lt;p&gt;ii) Then look inside the Session for the prepared statement, cursor, or protocol using the unqualified object name in the QualifiedIdentifer.&lt;/p&gt;


</comment>
                            <comment id="12835842" author="sleroux" created="Fri, 19 Feb 2010 17:34:07 +0000"  >&lt;p&gt;Thanks for your comments Rick,&lt;/p&gt;

&lt;p&gt;My first idea was to model qualifiedIdentifiers as a &quot;pair of string&quot;. But, at some point, I was wondering if there could be some obscure corner case where the same session name will resolve to a different session object. That&apos;s why I chose to model qualified identifiers as &lt;/p&gt;
{Session,String}
&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;But, since there&apos;s no variable in ij, dynamic scoping shouldn&apos;t be an issue. I will rework that way.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Concerning the second kind of names recognized by ij you identified:&lt;br/&gt;
&amp;gt; 2) Schema object names in the DESCRIBE commands.&lt;br/&gt;
&amp;gt; These are already handled by their own production, caIdentifier().&lt;br/&gt;
Even if it could be useful to examine the tables in a different connection, I already set aside the DESCRIBE command, since offering such a possibility will lead to difficult situations:&lt;br/&gt;
CONNECT &apos;....&apos; AS C;&lt;br/&gt;
DESCRIBE C.T;&lt;br/&gt;
Would the above statement describe the &quot;table T of the default schema of the connection C&quot; - or &quot;table T of the schema C of the current connection&quot;. For compatibility the latter would have my preference. But it&apos;s a little bit confusing anyway - especially if you bring it closer to a statement allowing qualified identifier like that:&lt;/p&gt;

&lt;p&gt;CONNECT &apos;....&apos; AS C;&lt;br/&gt;
DESCRIBE C.T;        &amp;#8211; Here, C is a schema&lt;br/&gt;
PREPARE C.ST AS .... &amp;#8211; Here, C is a session&lt;/p&gt;</comment>
                            <comment id="12835859" author="rhillegas" created="Fri, 19 Feb 2010 18:00:24 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;I agree that having two kinds of dot-separated names is confusing. I was only suggesting that we use qualified identifiers for connection-scoped variables. So in the example which you just gave...&lt;/p&gt;

&lt;p&gt;  DESCRIBE C.T;&lt;/p&gt;

&lt;p&gt;...I agree with you that the meaning should continue to be &quot;the table T in the schema C of the database of the current connection&quot;.&lt;/p&gt;

&lt;p&gt;Maybe we shouldn&apos;t use PERIOD to separate the two parts of a qualified identifier. It may give rise to too much confusion. Maybe the separator should be some other character which can&apos;t appear in an identifier, like @. If we use @ we might want to flip the order&lt;/p&gt;

&lt;p&gt;  variableName @ connectionName&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;</comment>
                            <comment id="12835885" author="sleroux" created="Fri, 19 Feb 2010 18:51:16 +0000"  >&lt;p&gt;I like the &apos;@&apos; idea.&lt;/p&gt;

&lt;p&gt;Quite readable indeed:&lt;br/&gt;
PREPARE stmt@alice_conn AS &apos;SELECT * FROM T1&apos;;&lt;br/&gt;
PREPARE stmt@fred_conn AS &apos;INSERT INTO T2 VALUES&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&apos;;&lt;br/&gt;
EXECUTE stmt@fred_conn USING stmt@alice_conn;&lt;/p&gt;</comment>
                            <comment id="12836646" author="sleroux" created="Mon, 22 Feb 2010 14:35:38 +0000"  >&lt;p&gt;Attaching a new patch for this issue.&lt;/p&gt;

&lt;p&gt;Currently, Session objects hold reference for prepared statements, cursors/cursor statements and asynchronous statements.&lt;br/&gt;
All now accept the &apos;@&apos; notation to design an identifier outside of the current connection. See the attached SQL file for example.&lt;/p&gt;

&lt;p&gt;Add some tests to ij7.sql.&lt;br/&gt;
Changed a test result in ij2.out to reflect the fact that error messages now provides the session name as well as the faulty statement:&lt;br/&gt;
  ij&amp;gt; Connect &apos;jdbc:derby:memory:dummy;create=true&apos;;&lt;br/&gt;
  ij&amp;gt; EXECUTE stmt;&lt;br/&gt;
  IJ ERROR: Unable to establish prepared statement STMT@CONNECTION0&lt;/p&gt;

&lt;p&gt;Pass derbytool and ToolScript test suites.&lt;/p&gt;

&lt;p&gt;Ready for review.&lt;/p&gt;</comment>
                            <comment id="12836652" author="sleroux" created="Mon, 22 Feb 2010 14:53:16 +0000"  >&lt;p&gt;Forgot to add QualifiedIdentifier.java in the patch.&lt;/p&gt;</comment>
                            <comment id="12836740" author="rhillegas" created="Mon, 22 Feb 2010 17:31:42 +0000"  >&lt;p&gt;Thanks for the patch, Sylvain. I think this is a great increment. Maybe someone will want to make PROTOCOL ids qualified identifiers too. I am running tests now.&lt;/p&gt;

&lt;p&gt;I made one change: I made the @ a token rather than a quoted string. Is there some reason that @ should not be a token?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12836866" author="rhillegas" created="Mon, 22 Feb 2010 20:00:07 +0000"  >&lt;p&gt;Thanks again for the patch, Sylvain. I am seeing errors in the following tests:&lt;/p&gt;

&lt;p&gt;derbylang/cursorerrors&lt;br/&gt;
derbylang/holdCursorIJ&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;org.apache.derbyTesting.functionTests.tests.lang.LangScripts&lt;/p&gt;
</comment>
                            <comment id="12837269" author="sleroux" created="Tue, 23 Feb 2010 15:01:25 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Thanks for the review.&lt;br/&gt;
I will look at those tests to see what&apos;s going wrong.&lt;/p&gt;</comment>
                            <comment id="12837785" author="sleroux" created="Wed, 24 Feb 2010 13:42:26 +0000"  >&lt;p&gt;Here is the 5th version of this patch.&lt;/p&gt;

&lt;p&gt;As I suspected first, the errors in some tests are caused by the fact that ij now reports the connection as part as the identifier when an error in encountered.&lt;/p&gt;

&lt;p&gt;As you noticed here, this slightly breaks the observable behavior of ij. But I think from an user point of view it is important to report the connection name as well as the unqualified identifier in order to clearly distinguish a faulty statement.&lt;/p&gt;

&lt;p&gt;I chose to update all the related tests in order to reflect that. Here are some examples of such changes (extract from the attached patch):&lt;br/&gt;
  Index: java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
  -IJ ERROR: Unable to establish cursor&lt;br/&gt;
  +IJ ERROR: Unable to establish cursor JDK4@CONNECTION0&lt;/p&gt;

&lt;p&gt;  Index: java/testing/org/apache/derbyTesting/functionTests/master/implicitConversions.out&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
  -IJ ERROR: Unable to establish prepared statement P1&lt;br/&gt;
  +IJ ERROR: Unable to establish prepared statement P1@CONNECTION0&lt;/p&gt;


&lt;p&gt;Now pass the following tests without any error:&lt;br/&gt;
 java org.apache.derbyTesting.functionTests.harness.RunSuite derbylang&lt;br/&gt;
 java org.apache.derbyTesting.functionTests.harness.RunSuite derbytools&lt;br/&gt;
 java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.lang.LangScripts&lt;br/&gt;
 java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.tools.ToolScripts &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Concerning a possible use of qualified identifiers in the PROTOCOL statement:&lt;/p&gt;

&lt;p&gt;I didn&apos;t notice a previous comment on this:&lt;br/&gt;
  &amp;gt; 3) Connection-scoped variables. These include the names of prepared statements, cursors, and protocols. &lt;/p&gt;

&lt;p&gt;In fact, protocols are not connection-scoped: protocols identifiers are currently bound the parser instance, not to a session object. It feels like some kind of global identifier to me. Moreover, the PROTOCOL statement could be issued before opening any connection (i.e.: before any session object was available):&lt;br/&gt;
  sh$  java org.apache.derby.tools.ij &lt;br/&gt;
  ij version 10.6&lt;br/&gt;
  ij&amp;gt; PROTOCOL &apos;jdbc:derby:memory:&apos; AS memory;&lt;br/&gt;
  ij&amp;gt; CONNECT &apos;a;create=true;user=fred&apos; PROTOCOL memory;&lt;br/&gt;
  ij&amp;gt; CONNECT &apos;b;create=true&apos; PROTOCOL memory;&lt;/p&gt;

&lt;p&gt;Please note I never really used that statement, so it&apos;s quite possible I missed some important point here.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;An other possible candidate for qualified identifiers could be the DESCRIBE statement. But I think this is part of an other issue, since DESCRIBE requires some special treatment (it uses its own production caIdentifier).&lt;/p&gt;</comment>
                            <comment id="12837789" author="sleroux" created="Wed, 24 Feb 2010 13:55:49 +0000"  >&lt;p&gt;By the way, since it was the original purpose of this issue, I successfully copied data from MySQL to Derby using this patch. As reference here is an example:&lt;br/&gt;
  ij&amp;gt; CONNECT &apos;jdbc:mysql://localhost/test?user=fred&apos;;&lt;br/&gt;
  ij&amp;gt; CONNECT &apos;jdbc:derby:destination;create=true&apos;;&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; CREATE TABLE t(a int, b int);&lt;br/&gt;
  0 rows inserted/updated/deleted&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; PREPARE src@connection0 as &apos;SELECT a,b FROM t&apos;;&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; AUTOCOMMIT OFF;&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; EXECUTE &apos;INSERT INTO t(a,b) VALUES(?,?)&apos; USING src@connection0;&lt;br/&gt;
  1 row inserted/updated/deleted&lt;br/&gt;
  1 row inserted/updated/deleted&lt;br/&gt;
  1 row inserted/updated/deleted&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; COMMIT;&lt;br/&gt;
  ij(CONNECTION1)&amp;gt; DISCONNECT CONNECTION0;&lt;br/&gt;
  ij&amp;gt; SHOW CONNECTIONS;&lt;br/&gt;
  CONNECTION1* - 	jdbc:derby:destination&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;= current connection&lt;br/&gt;
  ij&amp;gt; SELECT * FROM t;&lt;br/&gt;
  A          |B          &lt;br/&gt;
  -----------------------&lt;br/&gt;
  1          |100        &lt;br/&gt;
  2          |200        &lt;br/&gt;
  3          |300        &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  3 rows selected&lt;/p&gt;</comment>
                            <comment id="12837877" author="rhillegas" created="Wed, 24 Feb 2010 16:52:36 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;I think that you left QualifiedIdentifier out of the patch.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12837899" author="sleroux" created="Wed, 24 Feb 2010 17:34:16 +0000"  >&lt;p&gt;Sorry about that, Rick...&lt;/p&gt;

&lt;p&gt;Here is a 6th version of the patch. This time I double-checked - everything should be all right.&lt;/p&gt;

&lt;p&gt;  M      java/tools/org/apache/derby/impl/tools/ij/ConnectionEnv.java&lt;br/&gt;
  M      java/tools/org/apache/derby/impl/tools/ij/ij.jj&lt;br/&gt;
  A      java/tools/org/apache/derby/impl/tools/ij/QualifiedIdentifier.java&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij7.sql&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/ij2.out&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/implicitConversions.out&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/nonreserved.out&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/ij7.out&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/cursorerrors.out&lt;br/&gt;
  M      java/testing/org/apache/derbyTesting/functionTests/master/holdCursorIJ.out&lt;/p&gt;</comment>
                            <comment id="12838046" author="rhillegas" created="Wed, 24 Feb 2010 22:43:51 +0000"  >&lt;p&gt;Thanks for the revised patch, Sylvain. The tests ran cleanly for me except for discrepancies in DerbyNet/holdCursorIJ and DerbyNetClient/holdCursorIJ. I updated the canons for those tests. There was also an error in OnlineCompressTest, which I thought was an instability in that test: it didn&apos;t seem related to your work and the error did not recur when I ran the test standalone. Committed at subversion revision 916014.&lt;/p&gt;

&lt;p&gt;Thanks for this great feature. I will add a doc issue so that we don&apos;t forget to update the ij documentation accordingly.&lt;/p&gt;
</comment>
                            <comment id="12839002" author="rhillegas" created="Fri, 26 Feb 2010 19:54:58 +0000"  >&lt;p&gt;Hi Sylvain,&lt;/p&gt;

&lt;p&gt;Could you take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4570&quot; title=&quot;test failure in ij7 with cdc foundation profile (ibm&amp;#39;s weme6.2)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4570&quot;&gt;&lt;del&gt;DERBY-4570&lt;/del&gt;&lt;/a&gt;? The test for the new functionality fails on small devices because you can&apos;t use the CONNECT command there. I think that the solution is to move the new test into its own script and have the ToolScript driver not invoke that script on small devices. Thanks-Rick&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12457470">DERBY-4570</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12457355">DERBY-4567</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12435974" name="DERBY-4550.diff" size="2763" author="sleroux" created="Tue, 16 Feb 2010 13:22:15 +0000"/>
                            <attachment id="12435975" name="DERBY-4550.sql" size="678" author="sleroux" created="Tue, 16 Feb 2010 13:22:15 +0000"/>
                            <attachment id="12436049" name="DERBY-4550_2.diff" size="6291" author="sleroux" created="Tue, 16 Feb 2010 22:43:01 +0000"/>
                            <attachment id="12436050" name="DERBY-4550_2.sql" size="798" author="sleroux" created="Tue, 16 Feb 2010 22:43:01 +0000"/>
                            <attachment id="12436140" name="DERBY-4550_3.patch" size="20079" author="sleroux" created="Wed, 17 Feb 2010 22:37:32 +0000"/>
                            <attachment id="12436141" name="DERBY-4550_3.sql" size="1355" author="sleroux" created="Wed, 17 Feb 2010 22:37:32 +0000"/>
                            <attachment id="12436575" name="DERBY-4550_4.patch" size="21288" author="sleroux" created="Mon, 22 Feb 2010 14:53:16 +0000"/>
                            <attachment id="12436573" name="DERBY-4550_4.sql" size="430" author="sleroux" created="Mon, 22 Feb 2010 14:35:38 +0000"/>
                            <attachment id="12436847" name="DERBY-4550_5.patch" size="23577" author="sleroux" created="Wed, 24 Feb 2010 13:42:26 +0000"/>
                            <attachment id="12436871" name="DERBY-4550_6.patch" size="25339" author="sleroux" created="Wed, 24 Feb 2010 17:34:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 16 Feb 2010 16:52:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31271</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0o7b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37739</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>