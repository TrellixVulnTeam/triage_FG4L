<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2916/DERBY-2916.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2916] Change/error? in &apos;Ordered null semantics&apos; output from &apos;SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()&apos; in lang/wisconsin.java</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2916</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS() on&lt;/p&gt;


&lt;p&gt;&apos;Statement Text: &lt;br/&gt;
	select * from TENKTUP1&lt;br/&gt;
		left outer join TENKTUP2 on&lt;br/&gt;
		(&lt;br/&gt;
			TENKTUP1.unique1 = TENKTUP2.unique1&lt;br/&gt;
		)&lt;br/&gt;
		left outer join ONEKTUP on&lt;br/&gt;
		(&lt;br/&gt;
			TENKTUP2.unique2 = ONEKTUP.unique2&lt;br/&gt;
		)&lt;br/&gt;
		left outer join BPRIME on&lt;br/&gt;
		(&lt;br/&gt;
			ONEKTUP.onePercent = BPRIME.onePercent&lt;br/&gt;
		)&lt;br/&gt;
&apos;&lt;/p&gt;

&lt;p&gt;now returns extra &quot;0&quot; in&lt;/p&gt;

&lt;p&gt;&apos;	Ordered null semantics on the following columns: &lt;br/&gt;
0 &lt;br/&gt;
					stop position: &lt;br/&gt;
	&amp;gt; on first 1 column(s).&lt;br/&gt;
	Ordered null semantics on the following columns: &lt;br/&gt;
0 &lt;br/&gt;
&apos;&lt;/p&gt;</description>
                <environment>OS: All&lt;br/&gt;
JVM: All</environment>
        <key id="12373447">DERBY-2916</key>
            <summary>Change/error? in &apos;Ordered null semantics&apos; output from &apos;SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()&apos; in lang/wisconsin.java</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                            <label>derby_triage10_12</label>
                            <label>derby_triage10_8</label>
                    </labels>
                <created>Tue, 10 Jul 2007 20:58:59 +0100</created>
                <updated>Thu, 22 Jan 2015 23:54:50 +0000</updated>
                                            <version>10.4.1.3</version>
                                                    <component>Services</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12511567" author="djd" created="Tue, 10 Jul 2007 21:43:27 +0100"  >&lt;p&gt;It&apos;s probably one of my &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt; changes, but I don&apos;t know what that portion of the query plan really means.&lt;/p&gt;

&lt;p&gt;There was a chance before my changes that the nullability of a result column at runtime could be changed incorrectly by having multiple nodes referring to the same DataTypeDescriptor object and one node changing the nullability would change it for all other nodes that referenced the same object. That potential bug goes away with the changes, so that change in plan (but not results) may be a result of that.&lt;/p&gt;</comment>
                            <comment id="12515724" author="bryanpendleton" created="Thu, 26 Jul 2007 15:58:57 +0100"  >&lt;p&gt;I&apos;m hoping Army or somebody else pipes in , but here&apos;s my thoughts: I believe that &quot;Ordered null semantics&quot; has to do with a performance optimization that the optimizer can choose and pass down to the store&apos;s index scan code. There is a crucial comment in PredicateList.java that discusses this, around line 3501 of the trunk code:&lt;/p&gt;

&lt;p&gt;/* beetle 4464, performance work.  If index column is not nullable&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(which is frequent), we should treat it as though nulls are&lt;/li&gt;
	&lt;li&gt;ordered (indeed because they don&apos;t exist) so that we do not have&lt;/li&gt;
	&lt;li&gt;to check null at scan time for each row, each column.  This is&lt;/li&gt;
	&lt;li&gt;an overload to &quot;is null&quot; operator, so that we have less overhead,&lt;/li&gt;
	&lt;li&gt;provided that they don&apos;t interfere.  It doesn&apos;t interfere if it&lt;/li&gt;
	&lt;li&gt;doesn&apos;t overload if key is null.  If key is null, but operator&lt;/li&gt;
	&lt;li&gt;is not orderedNull type (is null), skipScan will use this flag&lt;/li&gt;
	&lt;li&gt;(false) to skip scan.&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now, in the case of the particular query in question, we have an OUTER join, which means that there is an implicit IS NULL or IS NOT NULL (I&apos;m not positive which) predicate that is included in the join predicate.&lt;/p&gt;

&lt;p&gt;But this implicit NULL check only makes sense for a NULLable column, so that&apos;s what the optimizer is checking for (and reporting on in the query plan output).&lt;/p&gt;

&lt;p&gt;So I think that this portion of the query plan output is trying to tell us about the optimizer&apos;s decision with respect to whether or not it will instruct the store&apos;s index scanning code that it can safely omit null checking during the index scanning.&lt;/p&gt;

&lt;p&gt;Unfortunately, I&apos;m not quite sure whether the change in output means that the optimizer is now including the performance optimization for column 0, and was not including it before, or vice versa.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;</comment>
                            <comment id="12516426" author="army" created="Mon, 30 Jul 2007 16:53:08 +0100"  >&lt;p&gt;Thank you for taking the time to investigate this issue, Bryan.&lt;/p&gt;

&lt;p&gt;I am not very familiar with the particular peformance optimization that is described here, but your explanation seems reasonable to me based on what I could grasp from the code comments (the code comments themselves are a tad hard to follow).&lt;/p&gt;

&lt;p&gt;&amp;gt; Unfortunately, I&apos;m not quite sure whether the change in output means that the optimizer is now &lt;br/&gt;
&amp;gt; including the performance optimization for column 0, and was not including it before, or vice versa.&lt;/p&gt;

&lt;p&gt;The code comments suggest that the intended optimization is to &quot;treat &lt;span class=&quot;error&quot;&gt;&amp;#91;the index column&amp;#93;&lt;/span&gt; as though nulls are ordered&quot;.  So given that we know are seeing &quot;null ordered semantics&quot; on column &quot;0&quot; where we were not before, I think this is a case where we now include a performance optimization that we didn&apos;t include before.  If that&apos;s the correct conclusion then Dan&apos;s change is enabling an optimization that didn&apos;t exist before, in which case I think it is a good thing.  So the resolution to this issue would simply be to update the master...(and maybe the make the associated code comments a bit clearer, if possible...)&lt;/p&gt;

&lt;p&gt;Thanks again for your input, Bryan!&lt;/p&gt;</comment>
                            <comment id="12517008" author="djd" created="Wed, 1 Aug 2007 17:43:31 +0100"  >&lt;p&gt;Thanks Bryan &amp;amp; Army for investigating this, provides a very useful starting point.&lt;/p&gt;</comment>
                            <comment id="12517273" author="djd" created="Thu, 2 Aug 2007 15:13:29 +0100"  >&lt;p&gt;Changed master file to match current output as Army points out the change is a valid optimization.&lt;br/&gt;
Will still research why the change occurred but wanted to avoid failing tests for now.&lt;/p&gt;</comment>
                            <comment id="12526498" author="kmarsden" created="Tue, 11 Sep 2007 16:35:47 +0100"  >&lt;p&gt;Unchecking Regession checkbox as this is not a confirmed product regression&lt;/p&gt;</comment>
                            <comment id="12648242" author="kmarsden" created="Mon, 17 Nov 2008 18:46:52 +0000"  >&lt;p&gt;I wonder if this issue can be closed. The comments indicate that the master was updated to avoid the failure.  Is there more research that is still needed?&lt;/p&gt;</comment>
                            <comment id="12751053" author="knutanders" created="Thu, 3 Sep 2009 16:21:36 +0100"  >&lt;p&gt;The nullability of the columns on the right side of a left outer join is modified rather late in the bind phase (in JoinNode.buildRCL()), and other nodes higher up in the tree may already have picked up the original nullability before it is changed. Before the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt; changes, the change in nullability would be propagated automatically. After the changes, they will still see the old nullability after buildRCL() has done its work.&lt;/p&gt;

&lt;p&gt;This caused problems when fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4284&quot; title=&quot;All Columns become Nullable when Using left join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4284&quot;&gt;&lt;del&gt;DERBY-4284&lt;/del&gt;&lt;/a&gt; because cast nodes that referred to columns on the right side of a left outer join could end up non-nullable even though they actually could have NULL values. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4284&quot; title=&quot;All Columns become Nullable when Using left join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4284&quot;&gt;&lt;del&gt;DERBY-4284&lt;/del&gt;&lt;/a&gt; therefore added a workaround by setting the nullability in JoinNode.getMatchingColumn() in addition to the existing code in buildRCL(). That workaround also made the query plan mentioned in this issue go back to its original form.&lt;/p&gt;

&lt;p&gt;I agree that the plan selected after the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2775&quot; title=&quot;DataTypeDescriptor should be immutable so that multiple ValueNode referring to the same DTD do not have unexpected state changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2775&quot;&gt;DERBY-2775&lt;/a&gt; changes uses a valid optimization. After &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4284&quot; title=&quot;All Columns become Nullable when Using left join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4284&quot;&gt;&lt;del&gt;DERBY-4284&lt;/del&gt;&lt;/a&gt; it again picks a plan without that optimization, which is unfortunate, but I believe the more optimized plan was picked just by accident because the nullability was retrieved before the columns in the join node were fully bound.&lt;/p&gt;

&lt;p&gt;Perhaps we need to do two things before this issue is fully resolved:&lt;/p&gt;

&lt;p&gt;1) Find a better place (earlier) in the bind phase for setting the nullability of the right-side columns in a left outer join so that all the nodes above it see the correct nullabililty. This will solve the problem for cast nodes seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4284&quot; title=&quot;All Columns become Nullable when Using left join&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4284&quot;&gt;&lt;del&gt;DERBY-4284&lt;/del&gt;&lt;/a&gt;, and the workaround in JoinNode.getMatchingColumn() can be removed, but I don&apos;t think that this will make the query plan pick up the ordered nulls optimization again.&lt;/p&gt;

&lt;p&gt;2) To re-enable the ordered nulls optimization, it may be necessary to change the code that makes right side of left outer join nullable create new nodes on top of the non-nullable columns instead of changing their nullability directly. Since the column in question cannot be null down in the index scan (hence it&apos;s ok for the plan to use the ordered null optimization), but it can be null from the join node and up, the scan and the join should probably have different physical result column objects and not share the same one. I haven&apos;t verified that this is in fact the problem, but that&apos;s what I suspect.&lt;/p&gt;</comment>
                            <comment id="12751217" author="dagw" created="Fri, 4 Sep 2009 00:22:50 +0100"  >&lt;p&gt;Thanks for this analysis, Knut. Your characterization of the issue seems correct to me.&lt;br/&gt;
I don&apos;t know what it would take for the optimizer to pick up the optimization again, but your theory&lt;br/&gt;
warrants investigation, I think.&lt;/p&gt;</comment>
                            <comment id="14288476" author="myrna" created="Thu, 22 Jan 2015 23:54:50 +0000"  >&lt;p&gt;I don&apos;t think Dan is working on this anymore.&lt;br/&gt;
Also, it seems this is no longer an issue dealing with the Tests, although it initially showed up as a change in the test. Changing components.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12428537">DERBY-4284</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Jul 2007 20:43:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23319</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0hp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>