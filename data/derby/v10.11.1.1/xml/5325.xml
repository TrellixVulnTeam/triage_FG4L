<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5325/DERBY-5325.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5325] Checkpoint fails with ClosedChannelException in InterruptResilienceTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5325</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Seen here: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol/1144688-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol/1144688-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was 1 error:&lt;br/&gt;
1) testRAFWriteInterrupted(org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest)java.sql.SQLException: The exception &apos;java.sql.SQLException: Log Record has been sent to the stream, but it cannot be applied to the store (Object null).  This may cause recovery problems also.&apos; was thrown while evaluating an expression.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testRAFWriteInterrupted(InterruptResilienceTest.java:217)&lt;br/&gt;
(...)&lt;br/&gt;
Caused by: java.nio.channels.ClosedChannelException&lt;br/&gt;
	at sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:94)&lt;br/&gt;
	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:691)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.RAFContainer4.writeFull(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.RAFContainer4.writeAtOffset(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.FileContainer.writeHeader(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.RAFContainer.writeRAFHeader(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.RAFContainer.clean(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAndUnkeepEntry(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.cleanCache(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.cleanAll(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.checkpoint(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTran(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.checkpoint(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.checkpoint(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.performWork(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.serviceClient(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.work(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.BasicDaemon.run(Unknown Source)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:722)&lt;/p&gt;</description>
                <environment>Solaris 10 5/08 s10x_u5wos_10 X86&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.7.0-b147)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 21.0-b17 mixed mode)</environment>
        <key id="12513487">DERBY-5325</key>
            <summary>Checkpoint fails with ClosedChannelException in InterruptResilienceTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Jul 2011 09:05:14 +0100</created>
                <updated>Tue, 25 Oct 2011 18:09:49 +0100</updated>
                            <resolved>Wed, 27 Jul 2011 21:20:26 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.2.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13062910" author="knutanders" created="Mon, 11 Jul 2011 09:13:34 +0100"  >&lt;p&gt;Attaching derby.log and error-stacktrace.out from the failed run.&lt;/p&gt;</comment>
                            <comment id="13063995" author="dagw" created="Tue, 12 Jul 2011 18:00:32 +0100"  >&lt;p&gt;This seems to be a hitherto unseen corner case that is not adequately addressed: writeRAFHeader is not always interrupt safe. It should be solvable using the existing pattern.&lt;/p&gt;</comment>
                            <comment id="13065566" author="dagw" created="Thu, 14 Jul 2011 23:14:49 +0100"  >&lt;p&gt;Uploading a patch for this issue, derby-5325a.&lt;/p&gt;

&lt;p&gt;With NIO, writeRAFHeader has two methods leading to interruptible IO:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getEmbryonicPage&lt;/li&gt;
	&lt;li&gt;writeHeader&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Currently, getEmbryonicPage may throw InterruptDetectedException and hence, so may writeRAFHeader.&lt;/p&gt;

&lt;p&gt;writeHeader may throw ClosedByInterruptException, AsynchronousCloseException and ClosedChannelException because writeHeader does not use RAFContainer4#writePage, but rather uses RAFContainer4#writeAtOffset, which does not currently attempt to recover after interrupt.&lt;/p&gt;

&lt;p&gt;So currently, clients of writeRAFHeader need to be prepared for all of InterruptDetectedException, ClosedByInterruptException, AsynchronousCloseException and ClosedChannelException.&lt;/p&gt;

&lt;p&gt;writeRAFHeader is used in three locations:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RAFContainer#clean&lt;/li&gt;
	&lt;li&gt;RAFContainer#run(CREATE_CONTAINER_ACTION)&lt;/li&gt;
	&lt;li&gt;RAFContainer#run(STUBBIFY_ACTION)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;RAFContainer#clean is prepared for InterruptDetectedException only. The issue shows that ClosedChannelException may also occur, and it is not prepared for that (this bug).&lt;/p&gt;

&lt;p&gt;RAFContainer#run(CREATE_CONTAINER_ACTION) is prepared for ClosedByInterruptException and AsynchronousCloseException. Since IO during container creation is single-threaded, this is sufficient: it should never need to handle ClosedChannelException/InterruptDetectedException, both of which signal that another thread saw interrupt on the container channel.&lt;/p&gt;

&lt;p&gt;RAFContainer#run(STUBBIFY_ACTION) is part of the removeContainer operation which should happen after the container is closed, so it should be single-threaded on the container as well&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. It should handle ClosedByInterruptException and AsynchronousCloseException and do retry, but doesn&apos;t, currently.&lt;/p&gt;

&lt;p&gt;If we let writeAtOffset clean up just like writePage, RAFContainer4#writeAtOffset (i.e.also writeHeader) would only only throw InterruptDetectedException, i.e. another thread saw interrupt, so retry. This would simplify logic in RAFContainer: we could remove the retry logic from RAFContainer#run(CREATE_CONTAINER_ACTION). This could also cover retry logic for RAFContainer#run(STUBBIFY_ACTION) wrt its use of writeRAFHeader.&lt;/p&gt;

&lt;p&gt;Next, RAFContainer#clean is already handling InterruptDetectedException and would with this change no longer see ClosedByInterruptException, AsynchronousCloseException or ClosedChannelException. This should solve &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5325&quot; title=&quot;Checkpoint fails with ClosedChannelException in InterruptResilienceTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5325&quot;&gt;&lt;del&gt;DERBY-5325&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I did not add a new test for this issue yet since I don&apos;t know how to force this scenario. We have only seen it once, I believe. I&apos;ll be running InterruptResilienceTest continuously with this patch along with the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5312&quot; title=&quot;InterruptResilienceTest failed with ERROR 40XD1: Container was opened in read-only mode.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5312&quot;&gt;&lt;del&gt;DERBY-5312&lt;/del&gt;&lt;/a&gt; on several platforms to gain more confidence.&lt;/p&gt;</comment>
                            <comment id="13065969" author="dagw" created="Fri, 15 Jul 2011 15:33:37 +0100"  >&lt;p&gt;Regressions passed.&lt;/p&gt;</comment>
                            <comment id="13067071" author="dagw" created="Mon, 18 Jul 2011 16:07:04 +0100"  >&lt;p&gt;I ran 1000 iteration of InterruptResilienceTest on two different x86/solaris boxes with JDK 1.7 b147 with no incidents after applying both patches. Interestingly, I no longer see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5333&quot; title=&quot;Intermittent assert failure in testInterruptShutdown: thread&amp;#39;s interrupted flag lost after shutdown&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5333&quot;&gt;&lt;del&gt;DERBY-5333&lt;/del&gt;&lt;/a&gt; either whereas as before the patches I did see it typically a few times per 100 iterations.&lt;/p&gt;</comment>
                            <comment id="13067584" author="knutanders" created="Tue, 19 Jul 2011 09:52:47 +0100"  >&lt;p&gt;Thanks for the detailed analysis, Dag. The patch looks fine to me. It&apos;s great that the CREATE_CONTAINER_ACTION in RAFContainer could be simplified, so the checking of the name of the thrown exception was removed, since that approach would probably break down if some implementation threw a sub-class of the expected exception type, or if some later version of the specification refined the exception hierarchy.&lt;/p&gt;

&lt;p&gt;Two minor comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;copy/paste: The debug string in writeAtOffset says that it&apos;s in writePage.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RAFContainer4 now has three almost identical blocks of error handling code for the interrupted case. Would it be possible to factor this out? For example just do a catch IOException in readPage/writePage/writeAtOffset and do the processing of the IOException in a separate method?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13067719" author="dagw" created="Tue, 19 Jul 2011 14:35:25 +0100"  >&lt;p&gt;Thanks for looking at this, Knut. I am aware of the redundancy, it was painful to add it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I think refactoring that would be a good next step.&lt;/p&gt;</comment>
                            <comment id="13067748" author="dagw" created="Tue, 19 Jul 2011 15:30:59 +0100"  >&lt;p&gt;Fixed the cut/paste typo and committed as svn 1148354. Will look to simplify the redundancy in a follow-up patch.&lt;/p&gt;
</comment>
                            <comment id="13067804" author="dagw" created="Tue, 19 Jul 2011 17:03:24 +0100"  >&lt;p&gt;Attaching a patch to refactor the redundancies discussed, rerunning regressions and my back-to-back runs.&lt;/p&gt;</comment>
                            <comment id="13068205" author="knutanders" created="Wed, 20 Jul 2011 08:56:01 +0100"  >&lt;p&gt;Thanks, Dag. The refactoring patch looks good to me. Some minor comments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It would be good if the javadoc comment for the new method had a short description of the method, and not just of its parameters.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Typo: InterruptedDetectedException -&amp;gt; InterruptDetectedException&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The assert in the else block is probably redundant since the declared type of the parameter e is ClosedChannelException. (Perhaps rename the parameter to &quot;cce&quot; to make this more obvious?)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Not directly related to the refactoring, but I noticed just now: Perhaps a short comment in writeAtOffset() explaining why we always set stealthMode to true would be in order?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13070818" author="dagw" created="Mon, 25 Jul 2011 23:20:45 +0100"  >&lt;p&gt;Attaching version &quot;b&quot; of the refactoring patch, which addresses Knut&apos;s comments, thanks!&lt;/p&gt;</comment>
                            <comment id="13071155" author="dagw" created="Tue, 26 Jul 2011 16:27:20 +0100"  >&lt;p&gt;Back-ported derby-5325a to 10.8 branch at svn 1151135.&lt;/p&gt;</comment>
                            <comment id="13071968" author="dagw" created="Wed, 27 Jul 2011 21:12:32 +0100"  >&lt;p&gt;Committed the &quot;-b&quot; version of the refactoring patch at svn 1151612.&lt;/p&gt;</comment>
                            <comment id="13071974" author="dagw" created="Wed, 27 Jul 2011 21:19:58 +0100"  >&lt;p&gt;Back-ported to 10.8 branch as svn 1151614, resolving.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12469090">DERBY-4741</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12487763" name="derby-5325-refactor-b.diff" size="14261" author="dagw" created="Mon, 25 Jul 2011 23:20:45 +0100"/>
                            <attachment id="12487017" name="derby-5325-refactor.diff" size="10194" author="dagw" created="Tue, 19 Jul 2011 17:03:24 +0100"/>
                            <attachment id="12487018" name="derby-5325-refactor.stat" size="76" author="dagw" created="Tue, 19 Jul 2011 17:03:24 +0100"/>
                            <attachment id="12486522" name="derby-5325a.diff" size="11710" author="dagw" created="Thu, 14 Jul 2011 23:23:50 +0100"/>
                            <attachment id="12486521" name="derby-5325a.stat" size="151" author="dagw" created="Thu, 14 Jul 2011 23:14:49 +0100"/>
                            <attachment id="12486025" name="derby.log" size="158711" author="knutanders" created="Mon, 11 Jul 2011 09:13:34 +0100"/>
                            <attachment id="12486026" name="error-stacktrace.out" size="9377" author="knutanders" created="Mon, 11 Jul 2011 09:13:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 Jul 2011 17:00:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24772</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0epj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36201</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>