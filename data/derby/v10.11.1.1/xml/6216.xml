<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6216/DERBY-6216.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6216] XPLAIN feature does not work and gives ERROR XCL16: ResultSet not open</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6216</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I am running Derby 10.9.1.0 and am trying to figure out a  performance problem with query taking too long.   I don&#8217;t actually want to run the query so from the documentation, I try:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
call syscs_util.syscs_set_xplain_schema(&apos;STATS&apos;);&lt;br/&gt;
call syscs_util.syscs_set_xplain_mode(1);&lt;br/&gt;
&amp;#8212; my query here&lt;br/&gt;
call syscs_util.syscs_set_runtimestatistics(0);&lt;br/&gt;
call syscs_util.syscs_set_xplain_schema(&apos;&apos;);&lt;br/&gt;
call syscs_util.syscs_set_xplain_mode(0);&lt;/p&gt;

&lt;p&gt;When it runs my query, I get:&lt;/p&gt;

&lt;p&gt;ERROR XCL16: ResultSet not open. Operation &apos;getMetaData&apos; not permitted. Verify that autocommit is OFF.&lt;/p&gt;

&lt;p&gt;I try the following with IJ just to see:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
call syscs_util.syscs_set_xplain_schema(&apos;STATS&apos;);&lt;br/&gt;
call syscs_util.syscs_set_xplain_mode(1);&lt;br/&gt;
select sql_text from syscs_diag.transaction_table where status != &apos;IDLE&apos;;&lt;br/&gt;
call syscs_util.syscs_set_runtimestatistics(0);&lt;br/&gt;
call syscs_util.syscs_set_xplain_schema(&apos;&apos;);&lt;br/&gt;
call syscs_util.syscs_set_xplain_mode(0);&lt;/p&gt;

&lt;p&gt;Note I have tried this with real tables as apposed to the syscs_diag.transaction_table with the same result.  The only reason that I posted this with this table is that it is a table that is accessible for any database.&lt;/p&gt;</description>
                <environment>Solaris 10, MacOS X 10.6, Windows XP</environment>
        <key id="12646605">DERBY-6216</key>
            <summary>XPLAIN feature does not work and gives ERROR XCL16: ResultSet not open</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="bbergquist">Brett Bergquist</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                            <label>features</label>
                    </labels>
                <created>Wed, 8 May 2013 13:15:40 +0100</created>
                <updated>Wed, 21 Jan 2015 00:23:33 +0000</updated>
                            <resolved>Wed, 5 Mar 2014 19:28:36 +0000</resolved>
                                    <version>10.6.2.4</version>
                    <version>10.7.1.4</version>
                    <version>10.8.3.3</version>
                    <version>10.9.1.0</version>
                                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13660662" author="bbergquist" created="Fri, 17 May 2013 13:11:41 +0100"  >&lt;p&gt;I found that if:&lt;/p&gt;

&lt;p&gt;	call syscs_util.syscs_set_xplain_mode(1);&lt;/p&gt;

&lt;p&gt;is used.  When this is used, then you get:&lt;/p&gt;

&lt;p&gt;	ERROR XCL16: ResultSet not open. Operation &apos;getMetaData&apos; not permitted. Verify that autocommit is OFF.&lt;/p&gt;

&lt;p&gt;Using XPLAIN in NOEXECUTE mode to me is the most important function especially when trying to figure out why a query that might be taking hours to run is doing so.   Without this working you have to wait hours for the query to run to figure out why.&lt;/p&gt;</comment>
                            <comment id="13660870" author="mikem" created="Fri, 17 May 2013 18:14:12 +0100"  >&lt;p&gt;tried in 10.8 and saw same results.  Also set autocommit off to make sure that was not the issue, but same result.&lt;br/&gt;
There is nothing in derby.log about the error.&lt;/p&gt;

&lt;p&gt;ij(C1)&amp;gt; call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;STATS&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_mode(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; select sql_text from syscs_diag.transaction_table where status != &apos;IDLE&apos;;&lt;br/&gt;
ERROR XCL16: ResultSet not open. Operation &apos;getMetaData&apos; not permitted. Verify that autocommit is OFF.&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_runtimestatistics(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_mode(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; autocommit off;&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;STATS&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_mode(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; select sql_text from syscs_diag.transaction_table where status != &apos;IDLE&apos;;&lt;br/&gt;
ERROR XCL16: ResultSet not open. Operation &apos;getMetaData&apos; not permitted. Verify that autocommit is OFF.&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_runtimestatistics(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(C1)&amp;gt; call syscs_util.syscs_set_xplain_mode(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;</comment>
                            <comment id="13660950" author="mikem" created="Fri, 17 May 2013 19:57:05 +0100"  >&lt;p&gt;also tried in 10.7 and it did not work.&lt;/p&gt;</comment>
                            <comment id="13661062" author="mikem" created="Fri, 17 May 2013 22:30:01 +0100"  >&lt;p&gt;does not work in 10.6, starting to think that this never worked and is not a regression.&lt;/p&gt;</comment>
                            <comment id="13661090" author="mikem" created="Fri, 17 May 2013 23:13:54 +0100"  >&lt;p&gt;it looks like this mode is never tested.  See below todo comments in the XplainStatisticsTest test:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;FIXME &amp;#8211; some general to-do items that I don&apos;t want to forget:&lt;/li&gt;
	&lt;li&gt;- should resultSetNumber be its own column in sysxplain_resultsets?&lt;/li&gt;
	&lt;li&gt;- need tests of xplain-only mode&lt;/li&gt;
	&lt;li&gt;- need a test of external sorting/merging&lt;/li&gt;
	&lt;li&gt;- need to cross-check the result set types, and verify that they&apos;re&lt;/li&gt;
	&lt;li&gt;all tested at least once&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661097" author="mikem" created="Fri, 17 May 2013 23:25:30 +0100"  >&lt;p&gt;It would be good to determine if the code actually ever supported&lt;br/&gt;
the no execute mode, and if not probably should log a doc bug and to &lt;br/&gt;
remove this mode and file a new JIRA if anyone has time/interest to complete&lt;br/&gt;
this feature. It could of been something the original contributer was working&lt;br/&gt;
on but did not finish and then when it got committed much later was missed&lt;br/&gt;
that it did not work.&lt;/p&gt;

&lt;p&gt; I don&apos;t really know anything about this code, but&lt;br/&gt;
some simple searching looked like the only work done was:&lt;br/&gt;
o support for setting the option&lt;br/&gt;
o 2 code changes to BasicNoPutResultSetImpl.java, to no opt open of tables and&lt;br/&gt;
   get next rows of tables.  Would this really stop execution of all queries that&lt;br/&gt;
   can be executed in derby?&lt;br/&gt;
o no tests written for this mode, with a TODO in the only test file for the feature.&lt;/p&gt;</comment>
                            <comment id="13661379" author="bryanpendleton" created="Sat, 18 May 2013 16:43:17 +0100"  >&lt;p&gt;Urk. Sorry about that. At least the to-dos give us some idea of the scope of the problem.&lt;/p&gt;

&lt;p&gt;It will require a fair bit of research to answer the questions you raise.&lt;/p&gt;

&lt;p&gt;Interestingly it looks like, about 18 months ago, somebody else encountered&lt;br/&gt;
this and at the time I off-handedly answered without doing any research then, either:&lt;br/&gt;
&lt;a href=&quot;http://apache-database.10148.n7.nabble.com/Statistics-are-not-capturing-in-XPLAIN-only-mode-td104392.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-database.10148.n7.nabble.com/Statistics-are-not-capturing-in-XPLAIN-only-mode-td104392.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The history of the development of this feature is primarily in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2487&quot; title=&quot;Enhance Derby with EXPLAIN Functionality&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2487&quot;&gt;&lt;del&gt;DERBY-2487&lt;/del&gt;&lt;/a&gt;, but&lt;br/&gt;
it may be hard to contact the original contributor, as it has been more than 6 years&lt;br/&gt;
since this feature was implemented.&lt;/p&gt;

&lt;p&gt;I do recall thinking at the time about the no-execute mode, but I don&apos;t recall&lt;br/&gt;
explicitly testing it in any detail, and I think if I had I would have included those&lt;br/&gt;
tests in the regression suite.&lt;/p&gt;

&lt;p&gt;So perhaps I never really tested that behavior back then.&lt;/p&gt;</comment>
                            <comment id="13661385" author="bryanpendleton" created="Sat, 18 May 2013 17:23:28 +0100"  >&lt;p&gt;I think that the basic idea was: in XPLAIN-only mode, the execution logic would&lt;br/&gt;
simply not open the tables. The &quot;get&quot; methods would immediately return &quot;EOF&quot;;&lt;br/&gt;
the &quot;update&quot; methods would immediately return &quot;SUCCESS&quot;. Nothing would&lt;br/&gt;
actually happen to the actual tables, but the execution tree of result set nodes&lt;br/&gt;
would be constructed and executed; it would simply complete instantly.&lt;/p&gt;

&lt;p&gt;Hopefully it&apos;s actually not much code.&lt;/p&gt;

&lt;p&gt;But the fact that we get a &quot;ResultSet Not open&quot; clearly indicates that at least&lt;br/&gt;
some of the execution ResultSet nodes would need to be changed to plant&lt;br/&gt;
&quot;if XPLAIN-only mode, return EOF&quot; logic into them.&lt;/p&gt;</comment>
                            <comment id="13686197" author="bryanpendleton" created="Tue, 18 Jun 2013 00:53:18 +0100"  >
&lt;p&gt;It&apos;s clearly been a while since I worked with this part of the system,&lt;br/&gt;
and I&apos;m now working on a new machine, so there may be some build/setup&lt;br/&gt;
issues in my environment.&lt;/p&gt;

&lt;p&gt;Still, XplainStatisticsTest is exhibiting some very strange behaviors:&lt;/p&gt;

&lt;p&gt;1) When, in an empty test directory, I run:&lt;/p&gt;

&lt;p&gt;     java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest&lt;/p&gt;

&lt;p&gt;   I get:&lt;/p&gt;

&lt;p&gt;     ........................&lt;br/&gt;
     Time: 30.222&lt;/p&gt;

&lt;p&gt;     OK (23 tests)&lt;/p&gt;

&lt;p&gt;   The test appears to pass successfully, with no errors.&lt;/p&gt;

&lt;p&gt;   But I see errors like the following in my system\derby.log:&lt;/p&gt;

&lt;p&gt;   Mon Jun 17 16:34:07 PDT 2013 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 450127), (SESSIONID = 19), (DATABASE = wombat), (DRDAID = null),&lt;br/&gt;
            Failed Statement is: insert into &quot;XPLTEST&quot;.&quot;SYSXPLAIN_RESULTSETS&quot;(RS_ID,OP_IDENTIFIER,OP_DETAILS,NO_OPENS,&lt;br/&gt;
	    NO_INDEX_UPDATES,LOCK_MODE,LOCK_GRANULARITY,PARENT_RS_ID,EST_ROW_COUNT,EST_COST,AFFECTED_ROWS,DEFERRED_ROWS,&lt;br/&gt;
	    INPUT_ROWS,SEEN_ROWS,SEEN_ROWS_RIGHT,FILTERED_ROWS,RETURNED_ROWS,EMPTY_RIGHT_ROWS,INDEX_KEY_OPT,SCAN_RS_ID,&lt;br/&gt;
	    SORT_RS_ID,STMT_ID,TIMING_ID) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)&lt;br/&gt;
   ERROR 42X14: &apos;RS_ID&apos; is not a column in table or VTI &apos;XPLTEST.SYSXPLAIN_RESULTSETS&apos;.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:265)&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:260)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumn.bindResultColumnByName(ResultColumn.java:832)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.bindResultColumnsByName(ResultColumnList.java:908)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.InsertNode.bindStatement(InsertNode.java:297)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:403)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:100)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1107)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:134)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:101)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1734)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1562)&lt;br/&gt;
        at org.apache.derby.catalog.SystemProcedures.createXplainTable(SystemProcedures.java:2148)&lt;br/&gt;
        at org.apache.derby.catalog.SystemProcedures.SYSCS_SET_XPLAIN_SCHEMA(SystemProcedures.java:2082)&lt;br/&gt;
        at org.apache.derby.exe.acf8e7c29bx013fx547cxa652x00004fd8b4bd3.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:453)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:334)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1337)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:704)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:631)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.enableXplainStyle(XplainStatisticsTest.java:501)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testTableNotValid(XplainStatisticsTest.java:2546)&lt;/p&gt;

&lt;p&gt;   Although the stack trace is perfectly reasonable, the presence of&lt;br/&gt;
   this exception confuses me:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;why is this exception occurring? RS_ID is a perfectly fine column.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;why is this exception not causing the test suite to fail? Is something on&lt;br/&gt;
     this stack catching and ignoring this exception?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     Is it perhaps the dynamically-generated bytecode which is calling&lt;br/&gt;
     SYSCS_SET_XPLAIN_SCHEMA which is hiding this error?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if something is hiding the prepareStatement() exception, why isn&apos;t that&lt;br/&gt;
     causing further problems down the road?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2) I tried to diagnose the first problem by running, in an empty directory:&lt;/p&gt;

&lt;p&gt;     java -Dderby.language.logStatementText=true junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest&lt;/p&gt;

&lt;p&gt;   (That is, the same test invocation, but with logStatementText=true)&lt;/p&gt;

&lt;p&gt;   Once again, the test appears to pass fine, with no JUnit-level errors&lt;br/&gt;
   in the test report.&lt;/p&gt;

&lt;p&gt;   However, this time, when I look in system/derby.log, all of the above&lt;br/&gt;
   exceptions are gone! Again, this confuses me:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;why does -Dderby.language.logStatementText=true affect whether or not&lt;br/&gt;
     the prepareStatement exception is thrown?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d be much obliged if somebody could repeat these steps and tell me whether&lt;br/&gt;
they can confirm my findings or not.&lt;/p&gt;</comment>
                            <comment id="13686385" author="dagw" created="Tue, 18 Jun 2013 05:43:15 +0100"  >&lt;p&gt;I see the error also when running with  -Dderby.language.logStatementText=true (confirmed by running the debugger to catch the exception throw).&lt;/p&gt;

&lt;p&gt;After the exception is thrown, I see the execution flow ending up on line 2518 in XplainStatisticsTest:&lt;br/&gt;
        :&lt;br/&gt;
        catch (SQLException e)&lt;br/&gt;
        {&lt;br/&gt;
            assertSQLState(&quot;Expected 42X14 error for missing column&quot;,&lt;br/&gt;
                    &quot;42X14&quot;, e);&lt;br/&gt;
            if (e.getMessage().indexOf(&quot;RS_ID&quot;) &amp;lt; 0)&lt;br/&gt;
                fail(&quot;Expected message about missing column RS_ID, not &quot; +&lt;br/&gt;
                        e.getMessage());&lt;/p&gt;

&lt;p&gt;so it seems it&apos;s expected?&lt;/p&gt;</comment>
                            <comment id="13688854" author="dagw" created="Thu, 20 Jun 2013 05:24:11 +0100"  >&lt;p&gt;Triaged for 10.11.&lt;/p&gt;</comment>
                            <comment id="13690978" author="bryanpendleton" created="Sat, 22 Jun 2013 01:57:24 +0100"  >&lt;p&gt;Thanks Dag! I knew it had been too long since I worked on this code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13690999" author="bryanpendleton" created="Sat, 22 Jun 2013 02:25:20 +0100"  >&lt;p&gt;So I wonder if there are differences in behavior here between&lt;br/&gt;
running queries using IJ, and running queries directly to JDBC.&lt;/p&gt;

&lt;p&gt;Attached is &apos;addTests.diff, which tries to use xplain-only mode&lt;br/&gt;
both in XplainStatisticsTest and in a new xplain.sql test script.&lt;/p&gt;

&lt;p&gt;When I use xplain-only mode in XplainStatisticsTest, it seems &lt;br/&gt;
to work correctly; I don&apos;t get the ResultSet not open.&lt;/p&gt;

&lt;p&gt;But when I use xplain-only mode in xplain.sql, I get the &lt;br/&gt;
ResultSet not open message, just as describe in the issue&lt;br/&gt;
description.&lt;/p&gt;

&lt;p&gt;This patch is not ready for commit, just shows some of the&lt;br/&gt;
testing work I&apos;ve been doing to better understand the behavior.&lt;/p&gt;</comment>
                            <comment id="13691011" author="bryanpendleton" created="Sat, 22 Jun 2013 02:41:25 +0100"  >&lt;p&gt;So here, I think, is the place where the &quot;ResultSet not open&quot; error is thrown:&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.impl.jdbc.EmbedResultSet.checkIfClosed(EmbedResultSet.java:4599)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.getMetaData(EmbedResultSet.java:1726)&lt;br/&gt;
        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:357)&lt;br/&gt;
        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:344)&lt;br/&gt;
        at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:247)&lt;br/&gt;
        at org.apache.derby.tools.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil.java:235)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:454)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:528)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.goScript(utilMain.java:265)&lt;/p&gt;


&lt;p&gt;I wonder if it is possible for this generic IJ code to recognize that we are in &quot;xplain only mode&quot;&lt;br/&gt;
and thus not throw this error?&lt;/p&gt;</comment>
                            <comment id="13691018" author="bryanpendleton" created="Sat, 22 Jun 2013 03:21:32 +0100"  >&lt;p&gt;OK, I think it&apos;s more complicated than just ignoring the &quot;not open&quot; error in IJ code somewhere;&lt;br/&gt;
under the covers we&apos;re not actually recording the query plan if we don&apos;t execute the query.&lt;/p&gt;

&lt;p&gt;I think that the &lt;/p&gt;

&lt;p&gt;    if( !isOpen)&lt;br/&gt;
        return;&lt;/p&gt;

&lt;p&gt;statements in NoPutResultSetImpl.close() and NoRowsResultSetIml.close() are short-circuiting&lt;br/&gt;
the collection of the query plan information in xplain-only mode.&lt;/p&gt;

&lt;p&gt;More study still needed, but at least I&apos;m making some progress...&lt;/p&gt;</comment>
                            <comment id="13691759" author="knutanders" created="Mon, 24 Jun 2013 08:50:04 +0100"  >&lt;p&gt;Maybe it would be easier to get it to work if we moved the short-circuiting from open() to getNextRowCore()? Then executeQuery() would return an empty ResultSet of the correct shape instead of a closed ResultSet, which would make getMetaData() and close() behave more like we want them to (that is, return meta-data and record the query plan).&lt;/p&gt;</comment>
                            <comment id="13691992" author="bryanpendleton" created="Mon, 24 Jun 2013 15:07:50 +0100"  >&lt;p&gt;Yes, I like that suggestion. I&apos;ll spend a few days pursuing that approach. Thanks!&lt;/p&gt;</comment>
                            <comment id="13692713" author="bryanpendleton" created="Tue, 25 Jun 2013 04:23:32 +0100"  >&lt;p&gt;I think that the approach suggested by Knut Anders is promising.&lt;/p&gt;

&lt;p&gt;One downside is that there are a number of ResultSet types&lt;br/&gt;
which define getNextRowCore, so the diff touches a number&lt;br/&gt;
of classes (in a small way).&lt;/p&gt;

&lt;p&gt;Early testing has been promising, but I have much more testing&lt;br/&gt;
to do. Attaching the diff to track my progress; it is NOT ready&lt;br/&gt;
for commit.&lt;/p&gt;</comment>
                            <comment id="13696156" author="bryanpendleton" created="Sat, 29 Jun 2013 18:09:59 +0100"  >&lt;p&gt;OK, I think I&apos;ve finally got a patch worth consideration by the community, and would appreciate any feedback.&lt;/p&gt;

&lt;p&gt;This patch follows the approach suggested by Knut Anders,&lt;br/&gt;
in which we allow the result set(s) to be opened, but then&lt;br/&gt;
short-circuit the &quot;get next row&quot; routine if we are in xplain-only mode.&lt;/p&gt;

&lt;p&gt;One interesting detail is that, for queries such as GROUP BY&lt;br/&gt;
and other complex situations where we have internal sort&lt;br/&gt;
operations and other intermediate results, to get a true&lt;br/&gt;
explain-only mode of operation we need to check in the&lt;br/&gt;
result set constructor, and not wait until the result set is&lt;br/&gt;
opened, since many result sets do substantial work even&lt;br/&gt;
in their low-level constructors.&lt;/p&gt;

&lt;p&gt;The patch includes a complete set of code changes, which&lt;br/&gt;
touch a number of files but are quite small, and a small set&lt;br/&gt;
of test changes. Undoubtedly we need more tests, but they&lt;br/&gt;
take a while to write and maintain so suggestions about&lt;br/&gt;
particularly high-value tests to write would be appreciated.&lt;/p&gt;

&lt;p&gt;In my particular environment, I don&apos;t have a large amount&lt;br/&gt;
of computing horsepower, so I&apos;ve only run a subset of the&lt;br/&gt;
tests. In particular, I&apos;ve run o.a.dT.functionTests.tests.lang._Suite with zero errors.&lt;/p&gt;

&lt;p&gt;If anyone has the time/resources to run other regression&lt;br/&gt;
tests with this patch, that would be very nice.&lt;/p&gt;</comment>
                            <comment id="13696157" author="bryanpendleton" created="Sat, 29 Jun 2013 18:12:45 +0100"  >&lt;p&gt;By the way, it&apos;s not obvious to me that this is a &quot;regression&quot;, strictly speaking, since&lt;br/&gt;
it&apos;s not clear that the xplain-only mode ever worked (though I didn&apos;t go back to the&lt;br/&gt;
2006-era code to check that out thoroughly). I think this was broken when I first&lt;br/&gt;
checked it in. It might well have worked in the original research which resulted&lt;br/&gt;
in the XPLAIN contribution, but have broken sometime between when the original&lt;br/&gt;
research was done and when I ported it over to the Derby trunk.&lt;/p&gt;</comment>
                            <comment id="13696675" author="knutanders" created="Mon, 1 Jul 2013 10:39:42 +0100"  >&lt;p&gt;Thanks for the patch, Bryan. I&apos;ll start a run with the full regression test suite on it.&lt;/p&gt;

&lt;p&gt;Just a small reminder: remember to run &quot;svn propset svn:eol-style native&quot; on the added files before you commit. (Might be worth adding &lt;a href=&quot;https://www.apache.org/dev/svn-eol-style.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.apache.org/dev/svn-eol-style.txt&lt;/a&gt; to your subversion config so that the property is set automatically for many file types at the time they are added with &quot;svn add&quot;.)&lt;/p&gt;</comment>
                            <comment id="13696697" author="knutanders" created="Mon, 1 Jul 2013 11:20:42 +0100"  >&lt;p&gt;I like that the patch introduces a local flag so that the result set doesn&apos;t have to go through the LCC and check if xplain is enabled for every row it looks at. It might be a problem that the flag is set in the constructor, though. The constructor is only called the first time a PreparedStatement is executed, so it may cause some surprises if the same statement is used both with xplain mode enabled and disabled.&lt;/p&gt;

&lt;p&gt;Example ij session:&lt;/p&gt;

&lt;p&gt;ij version 10.11&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; prepare ps1 as &apos;values &apos;&apos;Compiled before xplain mode was enabled&apos;&apos;&apos;;&lt;br/&gt;
ij&amp;gt; execute ps1;&lt;br/&gt;
1                                      &lt;br/&gt;
---------------------------------------&lt;br/&gt;
Compiled before xplain mode was enabled&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_runtimestatistics(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;STATS&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_xplain_mode(1);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; execute ps1;&lt;br/&gt;
1                                      &lt;br/&gt;
---------------------------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt; prepare ps2 as &apos;values &apos;&apos;Compiled when xplain mode was enabled&apos;&apos;&apos;;&lt;br/&gt;
ij&amp;gt; execute ps2;&lt;br/&gt;
1                                    &lt;br/&gt;
-------------------------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_runtimestatistics(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_xplain_schema(&apos;&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_xplain_mode(0);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; execute ps1;&lt;br/&gt;
1                                      &lt;br/&gt;
---------------------------------------&lt;br/&gt;
Compiled before xplain mode was enabled&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; execute ps2;&lt;br/&gt;
1                                    &lt;br/&gt;
-------------------------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt; &lt;/p&gt;


&lt;p&gt;The statement that was compiled before xplain was enabled actually behaved as desired. It returned results if xplain mode was disabled, and returned empty results if it was enabled. I think this statement works because BasicNoPutResultSetImpl.getNextRow() still checks the LCC instead of the local flag. (Note: this was in getNextRow(), not in getNextRowCore().)&lt;/p&gt;

&lt;p&gt;The statement that was compiled when xplain was enabled, on the other hand, continued returning empty results even after xplain had been disabled. I think it would be more reasonable if it had returned results after disabling xplain mode.&lt;/p&gt;

&lt;p&gt;I think it might work better if the flag is initialized in open() instead of the constructor.&lt;/p&gt;</comment>
                            <comment id="13696712" author="knutanders" created="Mon, 1 Jul 2013 11:47:30 +0100"  >&lt;p&gt;Derbyall and suites.All ran cleanly with the patch in my environment.&lt;/p&gt;</comment>
                            <comment id="13696828" author="bryanpendleton" created="Mon, 1 Jul 2013 15:00:55 +0100"  >&lt;p&gt;Good catch on the PreparedStatement issue. In practice, I imagine&lt;br/&gt;
that Xplain-Only mode is only likely to be used in special debugging&lt;br/&gt;
situations, not in production applications, so it seems uncommon that&lt;br/&gt;
an application would routinely be switching it on and off.&lt;/p&gt;

&lt;p&gt;But I can see that in many situations it might be easiest for an&lt;br/&gt;
application writer to insert the Xplain-Only requests into an existing&lt;br/&gt;
application in a way that mimics the scenarios you outline, so we&lt;br/&gt;
should try to give these patterns of use reasonable behaviors.&lt;/p&gt;

&lt;p&gt;Perhaps I should set the flag in both locations: in the constructor,&lt;br/&gt;
and again in open(). I don&apos;t think it&apos;s an expensive check to make.&lt;/p&gt;

&lt;p&gt;I&apos;ll update the patch with some additional tests using PreparedStatements.&lt;/p&gt;

&lt;p&gt;And thanks for the testing, and for the catch on the eol-style; this&lt;br/&gt;
is a new machine and I missed that part.&lt;/p&gt;
</comment>
                            <comment id="13697506" author="bryanpendleton" created="Tue, 2 Jul 2013 06:03:25 +0100"  >&lt;p&gt;I added several tests of the behavior with PreparedStatements.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I understand the behavior completely. But the&lt;br/&gt;
current behavior may be acceptable, for now; at least it&lt;br/&gt;
doesn&apos;t crash.&lt;/p&gt;

&lt;p&gt;In addition to the new tests, I also added code to set the&lt;br/&gt;
isXplainOnlyMode member variable in BasicNoPutResultSetImpl&lt;/p&gt;

&lt;p&gt;As Knut Anders observed, it&apos;s not completely obvious where&lt;br/&gt;
that variable should be set. Candidate locations include: the&lt;br/&gt;
constructor, the open() method, the reopen() method, and&lt;br/&gt;
perhaps other places.&lt;/p&gt;

&lt;p&gt;The isXplainOnlyMode variable appears to be holding the&lt;br/&gt;
expected value, but the behavior of complex ResultSet&lt;br/&gt;
trees is intricate and indicates I may not have the right&lt;br/&gt;
location for this code yet.&lt;/p&gt;</comment>
                            <comment id="13697864" author="knutanders" created="Tue, 2 Jul 2013 16:10:05 +0100"  >&lt;p&gt;It might be that caching the xplain-only flag is premature optimization, and that it would be better in the first increment to check the flag via the lcc on each call to getNextRowCore(). I&apos;d expect that to make it easier to get the correct behaviour and write tests whose results are easier to understand. When we have well-behaved tests for the feature, it may be easier to introduce optimizations later without breaking anything.&lt;/p&gt;

&lt;p&gt;The patch attempts to reset the flag in the reopenCore() method. It looks like many subclasses override that method without calling super.reopenCore(), so that may not be the most robust place for it.&lt;/p&gt;

&lt;p&gt;If we are to cache the value in BasicNoPutResultSetImpl/NoPutResultSetImpl, I&apos;m wondering if it might be better if the flag has three possible values: true, false, unknown. The flag is initialized to unknown in the constructor. If getNextRowCore() sees that it is unknown, it initializes by looking up the value in the lcc. The flag could be reset to unknown in close(). (Of course, it still has the weakness that subclasses that override close() must remember to call super.close(), but at least that requirement is called out in NoPutResultSetImpl.close()&apos;s javadoc comment, so it&apos;s a bug if a class doesn&apos;t already do that.)&lt;/p&gt;</comment>
                            <comment id="13701483" author="bryanpendleton" created="Sun, 7 Jul 2013 03:46:57 +0100"  >&lt;p&gt;Attached &apos;noMemberField.diff&apos; patch proposal follows the&lt;br/&gt;
suggestion made by Knut Anders: this patch does not attempt&lt;br/&gt;
to remember the xplainOnly mode in a local variable.&lt;/p&gt;

&lt;p&gt;With this patch, prepared statements behave in a reasonable&lt;br/&gt;
manner, obeying the xplainOnly mode even when it is switched&lt;br/&gt;
on and off without re-preparing the statement.&lt;/p&gt;

&lt;p&gt;Existing tests are all passing with this patch, as well as the&lt;br/&gt;
new tests added by the patch, so I think I&apos;m starting to get close.&lt;/p&gt;</comment>
                            <comment id="13703068" author="knutanders" created="Tue, 9 Jul 2013 09:52:52 +0100"  >&lt;p&gt;Tests passed in my environment too. The patch looks fine to me. +1&lt;/p&gt;</comment>
                            <comment id="13707754" author="jira-bot" created="Sat, 13 Jul 2013 16:02:43 +0100"  >&lt;p&gt;Commit 1502795 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bryanpendleton&quot; class=&quot;user-hover&quot; rel=&quot;bryanpendleton&quot;&gt;Bryan Pendleton&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1502795&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1502795&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6216&quot; title=&quot;XPLAIN feature does not work and gives ERROR XCL16: ResultSet not open&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6216&quot;&gt;&lt;del&gt;DERBY-6216&lt;/del&gt;&lt;/a&gt;: XPLAIN feature does not work, gives XCL16: ResultSet not open&lt;/p&gt;

&lt;p&gt;This change adjusts the implementation of the explain-only mode feature,&lt;br/&gt;
which is enabled via syscs_util.syscs_set_xplain_mode(1).&lt;/p&gt;

&lt;p&gt;Prior to this change, the implementation short-circuited the open() method&lt;br/&gt;
of the ResultSet classes, causing the execution engine to terminate&lt;br/&gt;
immediately because the result sets were not open.&lt;/p&gt;

&lt;p&gt;This change takes an alternate approach, suggested by Knut Anders: the open()&lt;br/&gt;
is allowed to proceed normally, but we short-circuit the getNextRow()&lt;br/&gt;
method of the ResultSet classes. This way, the result sets all appear to be&lt;br/&gt;
normal result sets, open and ready for business, but they do no work and&lt;br/&gt;
always produce an empty result.&lt;/p&gt;

&lt;p&gt;Then, at the end of the execution, the statistics are gathered. They show&lt;br/&gt;
that no work was done, but they contain information about the overall &quot;shape&quot;&lt;br/&gt;
of the query plan (which result sets were constructed, and what the overall&lt;br/&gt;
result set tree looks like).&lt;/p&gt;

&lt;p&gt;We also discovered that we were completely missing regression tests for the&lt;br/&gt;
explain-only feature, so this change adds a handful of regression tests,&lt;br/&gt;
including an IJ-based test, a simple embedded query, and a test that verifies&lt;br/&gt;
that explain-only mode can be turned on and off between executions of a&lt;br/&gt;
prepared query.&lt;/p&gt;

&lt;p&gt;More testing would clearly be beneficial, but this should at least give us&lt;br/&gt;
a feature that basically works.&lt;/p&gt;</comment>
                            <comment id="13707755" author="bryanpendleton" created="Sat, 13 Jul 2013 16:05:16 +0100"  >&lt;p&gt;Thanks all for the help, suggestions, and feedback.&lt;/p&gt;

&lt;p&gt;I think this patch is good enough to share with the community,&lt;br/&gt;
and we can continue to improve the feature with additional&lt;br/&gt;
patches subsequently.&lt;/p&gt;

&lt;p&gt;Committed to the trunk as revision 1502795.&lt;/p&gt;</comment>
                            <comment id="13708312" author="knutanders" created="Mon, 15 Jul 2013 09:37:49 +0100"  >&lt;p&gt;It looks like there is an instability in one of the new test cases:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579342-report/javadb-task-3689858.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579342-report/javadb-task-3689858.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    junit.framework.AssertionFailedError: Column value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;1&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;2&amp;lt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1278)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1190)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1077)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1000)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:957)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:915)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSet(JDBC.java:900)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleXplainOnly(XplainStatisticsTest.java:1148)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:439)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:456)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="13708474" author="bryanpendleton" created="Mon, 15 Jul 2013 15:00:24 +0100"  >&lt;p&gt;Thanks for catching this. What do you think is the simplest way to reproduce this failure?&lt;/p&gt;

&lt;p&gt;I expect that the code in enableXplainStyle which clears out all the statistics from the&lt;br/&gt;
previous test case is somehow failing to clear out the old values:&lt;/p&gt;

&lt;p&gt;        for (int i = 0; i &amp;lt; tableNames.length; i++)&lt;br/&gt;
            if (hasTable(s, &quot;XPLTEST&quot;, tableNames&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;))&lt;br/&gt;
                s.execute(&quot;delete from XPLTEST.&quot; + tableNames&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt;But beyond that, I&apos;m not sure what&apos;s wrong.&lt;/p&gt;</comment>
                            <comment id="13708550" author="knutanders" created="Mon, 15 Jul 2013 16:36:06 +0100"  >&lt;p&gt;I managed to reproduce it in my environment.&lt;/p&gt;

&lt;p&gt;I changed the suite method so that it only ran the testSimpleXplainOnly test case. That is, I replaced&lt;/p&gt;

&lt;p&gt;            TestSuite allTests = new TestSuite(XplainStatisticsTest.class,&lt;br/&gt;
                                    &quot;XplainStatisticsTest&quot;);&lt;/p&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;p&gt;            Test allTests = new XplainStatisticsTest(&quot;testSimpleXplainOnly&quot;);&lt;/p&gt;

&lt;p&gt;Then I ran the test 20 times, and it failed 17 times. So it looks like it can be reproduced, but not 100% reliably. This was with Java 7u25, 64-bit, on Linux.&lt;/p&gt;</comment>
                            <comment id="13708578" author="knutanders" created="Mon, 15 Jul 2013 17:02:14 +0100"  >&lt;p&gt;I added a call to dumpStatements() right before the failing assert. This is what it printed (the getSchemas statement is unexpected):&lt;/p&gt;

&lt;p&gt;c9d6825c-013f-e304-f57a-000058ee2be7,null,   ,EXECUTE STATEMENT SYS.&quot;getSchemas&quot;,8,Linux,F,2013-07-15 17:48:43.56,Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt;,13846,3,wombat,null,null&lt;br/&gt;
c70a4272-013f-e304-f57a-000058ee2be7,2,S  ,select sql_text from syscs_diag.transaction_table where status != &apos;IDLE&apos;,8,Linux,O,2013-07-15 17:48:43.583,Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt;,13846,3,wombat,null,null&lt;/p&gt;</comment>
                            <comment id="13709386" author="bryanpendleton" created="Tue, 16 Jul 2013 03:24:38 +0100"  >&lt;p&gt;I don&apos;t seem to have your touch, unfortunately; I ran the test 100 times on my&lt;br/&gt;
environment without a single failure. This is with Java 7, 64 bit, on Windows 8,&lt;br/&gt;
which is the only environment I have access to right now for running Derby.&lt;/p&gt;

&lt;p&gt;There don&apos;t seem to be any direct calls to getSchemas in XplainStatisticsTest,&lt;br/&gt;
so the call must be made from some other code.&lt;/p&gt;

&lt;p&gt;I found one call in CleanDatabaseTestSetup.removeObjects(), which seems&lt;br/&gt;
like a possibility since XplainStatisticsTest uses a CleanDatabaseTestSetup&lt;br/&gt;
decorator in its suite.&lt;/p&gt;

&lt;p&gt;Since it reproduces for you with some regularity, can you try putting&lt;/p&gt;

&lt;p&gt;    new Exception(&quot;How did I get here&quot;).printStackTrace();&lt;/p&gt;

&lt;p&gt;into EmbedDatabaseMetaData.getSchemas(String catalog, String schemaPattern)&lt;br/&gt;
and paste in the stack trace that shows how we are getting to that getSchemas call?&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;</comment>
                            <comment id="13709787" author="bryanpendleton" created="Tue, 16 Jul 2013 14:52:51 +0100"  >&lt;p&gt;Dag reported on derby-dev that a similar, but not identical, failure occurred last night:&lt;/p&gt;

&lt;p&gt;-------- Original Message --------&lt;br/&gt;
Subject: Re: &lt;span class=&quot;error&quot;&gt;&amp;#91;Java DB - testing&amp;#93;&lt;/span&gt; Failure nightly trunk (rev 1503157)&lt;br/&gt;
Date: Tue, 16 Jul 2013 14:45:41 +1000&lt;br/&gt;
From: Dag Wanvik &amp;lt;dag.wanvik@oracle.com&amp;gt;&lt;/p&gt;

&lt;p&gt;Intermittent, it seems (last night:&lt;br/&gt;
&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579365-report/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579365-report/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Dag&lt;/p&gt;

&lt;p&gt;org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleXplainOnly    &lt;br/&gt;
2.437 s&lt;/p&gt;

&lt;p&gt; junit.framework.AssertionFailedError: Column value mismatch @ column&lt;br/&gt;
&apos;1&apos;, row 1:&lt;br/&gt;
 Expected: &amp;gt;4&amp;lt;&lt;br/&gt;
 Found:    &amp;gt;7&amp;lt;&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1278)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1190)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(JDBC.java:1077)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:1000)&lt;br/&gt;
    at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:957)&lt;br/&gt;
    at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:915)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertSingleValueResultSet(JDBC.java:900)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testSimpleXplainOnly(XplainStatisticsTest.java:1183)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:439)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:456)&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
    at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;


&lt;p&gt;On 16.07.2013 10:53, ingemar.aberg@oracle.com wrote:&lt;br/&gt;
&amp;gt; Java DB testing and reporting infrastructure.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Failure nightly trunk (rev 1503157)&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; There were 1 failures.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Test report: &lt;br/&gt;
&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579365-report/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579365-report/&lt;/a&gt;&lt;/p&gt;


</comment>
                            <comment id="13711077" author="bryanpendleton" created="Wed, 17 Jul 2013 14:33:08 +0100"  >&lt;p&gt;The SYSCS_SET_XPLAIN_SCHEMA system procedure contains a getSchemas() call.&lt;/p&gt;

&lt;p&gt;And XplainStatisticsTest calls that system procedure regularly.&lt;/p&gt;

&lt;p&gt;So there must be some reason why the new test cases, intermittently, cause that&lt;br/&gt;
getSchemas() call to capture its runtime statistics into the XPLAIN tables.&lt;/p&gt;

&lt;p&gt;I&apos;ll have to keep thinking about this...&lt;/p&gt;

&lt;p&gt;Perhaps we should open a new JIRA to track the intermittent test failure.&lt;/p&gt;</comment>
                            <comment id="13712198" author="knutanders" created="Thu, 18 Jul 2013 11:27:30 +0100"  >&lt;p&gt;I&apos;ve filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6297&quot; title=&quot;Intermittent failures in XplainStatisticsTest.testSimpleXplainOnly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6297&quot;&gt;&lt;del&gt;DERBY-6297&lt;/del&gt;&lt;/a&gt; for the intermittent test failure.&lt;/p&gt;</comment>
                            <comment id="13736906" author="kmarsden" created="Mon, 12 Aug 2013 15:33:51 +0100"  >&lt;p&gt;Should this be backported to 10.10? It would be good to have the feature work, but it does look like a significant change and comes with an intermittent test failure.  I appreciate opinions on whether it makes sense to try to backport.&lt;/p&gt;</comment>
                            <comment id="13913296" author="mikem" created="Wed, 26 Feb 2014 18:43:46 +0000"  >&lt;p&gt;consider for 10.10 backport&lt;/p&gt;</comment>
                            <comment id="13914910" author="mikem" created="Thu, 27 Feb 2014 19:13:32 +0000"  >&lt;p&gt;Since the last comment by kathey it looks like the intermittent failures have been fixed and backported&lt;br/&gt;
to 10.10.  Anyone have opinions if we should put this change into the upcoming 10.10 point release.&lt;br/&gt;
I lean toward not backporting as the amount of changes are more of the level of a feature than a fix, but &lt;br/&gt;
now that there do not seem to be test issues if someone felt strongly that this should be put into 10.10 I &lt;br/&gt;
would not stand in the way.  &lt;/p&gt;</comment>
                            <comment id="13914933" author="bbergquist" created="Thu, 27 Feb 2014 19:22:26 +0000"  >&lt;p&gt;It really is a bug fix and not a feature.  The documentation said the feature was there in the earlier releases but they did not work and produced an error.   So no we have a fix with an intermittent test failure.  I really don&apos;t think it is any worse than it was before (not working at all) and as long as the other tests run seem to be unaffected by this (other than the intermittent test failure), I don&apos;t think the risk is too great.&lt;/p&gt;

&lt;p&gt;The feature is extremely useful when trying to analyze performance of queries where the is a very large amount of data to be processed.  Without the feature, I had to wait many hours (the query was running a bad plan) just to see that it was choosing a bad plan.  &lt;/p&gt;

&lt;p&gt;Of course this is just my opinion &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13915135" author="myrna" created="Thu, 27 Feb 2014 22:37:39 +0000"  >&lt;p&gt;I think it would be good to have this working in the next release of 10.10. I don&apos;t much care backporting it further. The XPLAIN functionality was actually added in 10.6.&lt;br/&gt;
If we do backport this, we should make sure the tests get backported too - looks like that part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6297&quot; title=&quot;Intermittent failures in XplainStatisticsTest.testSimpleXplainOnly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6297&quot;&gt;&lt;del&gt;DERBY-6297&lt;/del&gt;&lt;/a&gt; was &lt;b&gt;not&lt;/b&gt; backported to the 10.10 branch.&lt;/p&gt;</comment>
                            <comment id="13918404" author="myrna" created="Mon, 3 Mar 2014 18:44:29 +0000"  >&lt;p&gt;I will take a look at backporting this to 10.10. Reopening and assigning to myself for now.&lt;/p&gt;</comment>
                            <comment id="13918742" author="jira-bot" created="Mon, 3 Mar 2014 23:43:48 +0000"  >&lt;p&gt;Commit 1573813 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=myrna&quot; class=&quot;user-hover&quot; rel=&quot;myrna&quot;&gt;Myrna van Lunteren&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1573813&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1573813&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6216&quot; title=&quot;XPLAIN feature does not work and gives ERROR XCL16: ResultSet not open&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6216&quot;&gt;&lt;del&gt;DERBY-6216&lt;/del&gt;&lt;/a&gt;; XPLAIN feature does not work and gives ERROR XCL16: ResultSet not open&lt;br/&gt;
   backport of revision 1502795 from trunk; &lt;br/&gt;
   clean merge, but added modifications to XplainStatisticsTest from revision 1518111 (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6297&quot; title=&quot;Intermittent failures in XplainStatisticsTest.testSimpleXplainOnly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6297&quot;&gt;&lt;del&gt;DERBY-6297&lt;/del&gt;&lt;/a&gt;) not previously backported.&lt;/p&gt;</comment>
                            <comment id="13921272" author="myrna" created="Wed, 5 Mar 2014 19:28:36 +0000"  >&lt;p&gt;Backport to 10.10 branch complete. Resolving again, resetting assignee.&lt;/p&gt;</comment>
                            <comment id="14284820" author="myrna" created="Wed, 21 Jan 2015 00:23:33 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12658485">DERBY-6297</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12365794">DERBY-2487</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12695601">DERBY-6481</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12589226" name="addTests.diff" size="6754" author="bryanpendleton" created="Sat, 22 Jun 2013 02:25:20 +0100"/>
                            <attachment id="12589541" name="emptyRS.diff" size="24726" author="bryanpendleton" created="Tue, 25 Jun 2013 04:23:32 +0100"/>
                            <attachment id="12591105" name="noMemberField.diff" size="46676" author="bryanpendleton" created="Sun, 7 Jul 2013 03:46:57 +0100"/>
                            <attachment id="12590367" name="preparedTests.diff" size="47507" author="bryanpendleton" created="Tue, 2 Jul 2013 06:03:25 +0100"/>
                            <attachment id="12590169" name="xplain-only.diff" size="38943" author="bryanpendleton" created="Sat, 29 Jun 2013 18:09:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 17 May 2013 17:14:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326963</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hze99z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327307</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>