<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3526/DERBY-3526.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3526] AsynchronousLogShipper#workToDo is blocked while the log shipper sends a log chunk</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3526</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The replication log shipper thread synchronizes on &apos;this&apos; both when shipping log records (shipALogChunk) and when it waits between log shipments. &lt;/p&gt;

&lt;p&gt;Transaction threads may try to wake up the log shipper because log has arrived that should be shipped (i.e., through the method workToDo). These threads should not have to wait for the monitor if the log shipper is currently busy shipping log. The solution is to have two monitors - one for log shipment and one for waiting between log shipment.&lt;/p&gt;

&lt;p&gt;This may seem like a minor issue, but if the TCP connection between master and slave is lost e.g. because a network cable has been unplugged, the log shipper will block for 2 minutes on ObjectOutputStream#writeObject.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12390849">DERBY-3526</key>
            <summary>AsynchronousLogShipper#workToDo is blocked while the log shipper sends a log chunk</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="jorgenlo">J&#248;rgen L&#248;land</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Mar 2008 14:39:49 +0000</created>
                <updated>Thu, 2 May 2013 03:29:13 +0100</updated>
                            <resolved>Mon, 7 Apr 2008 09:47:06 +0100</resolved>
                                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12578138" author="narayanan" created="Thu, 13 Mar 2008 03:49:40 +0000"  >&lt;p&gt;Good catch Jorgen! Thank you for raising this JIRA.&lt;/p&gt;

&lt;p&gt;I am confused about having to use different monitors for log shipment&lt;br/&gt;
and for waiting between log shipment.&lt;/p&gt;

&lt;p&gt;I am more confused because the javadoc for notify says this&lt;/p&gt;

&lt;p&gt;&quot;This method should only be called by a thread that is the owner of this object&apos;s monitor.&quot;&lt;/p&gt;

&lt;p&gt;So would it be right to use two monitors one to run the thread to do the log shipping&lt;br/&gt;
and another to wait and notify this same thread.&lt;/p&gt;

&lt;p&gt;I am not arguing against the scenario raised, I think the JIRA is a fantastic catch.&lt;/p&gt;</comment>
                            <comment id="12578155" author="oysteing" created="Thu, 13 Mar 2008 05:31:51 +0000"  >&lt;p&gt;To use another monitor you will have to use another object to synchronize on.  Hence instead of:&lt;/p&gt;

&lt;p&gt;synchronized(this) &lt;/p&gt;
{ wait(); }

&lt;p&gt;you will do:&lt;/p&gt;

&lt;p&gt;synchronized(obj) &lt;/p&gt;
{ obj.wait(); }</comment>
                            <comment id="12578161" author="narayanan" created="Thu, 13 Mar 2008 06:08:25 +0000"  >&lt;p&gt;&amp;gt; To use another monitor you will have to use another object to synchronize on. Hence instead of:&lt;/p&gt;

&lt;p&gt;Ah! Use a different object into whose waiting pool the log shipping thread&lt;br/&gt;
will be put in waiting mode.&lt;/p&gt;

&lt;p&gt;so calling a notify will release this thread and it will start performing log shipping.&lt;br/&gt;
If the thread is already shipping log the waiting pool will be empty and notify has &lt;br/&gt;
no work. In both cases the workToDo method returns immediately. &lt;/p&gt;

&lt;p&gt;So we are basically not using the current object for doing, log shipping and waiting, and, notifying&lt;br/&gt;
the log shipping thread simultaneously.&lt;/p&gt;

&lt;p&gt;I guess that is what is meant by&lt;/p&gt;

&lt;p&gt;&quot;Transaction threads may try to wake up the log shipper because log has arrived that should be shipped (i.e., through the method workToDo). These threads should not have to wait for the monitor if the log shipper is currently busy shipping log. The solution is to have two monitors - one for log shipment and one for waiting between log shipment. &quot;&lt;/p&gt;

&lt;p&gt;Got it &amp;lt; The incandescent lamp inside Narayanan&apos;s head starts burning brightly :-D &amp;gt;&lt;/p&gt;

&lt;p&gt;Great! Thanks Oystein and Jorgen &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; .&lt;/p&gt;

&lt;p&gt;And once more fantastic catch.&lt;/p&gt;</comment>
                            <comment id="12578601" author="narayanan" created="Fri, 14 Mar 2008 04:30:53 +0000"  >&lt;p&gt;Attached patch that uses a different object to synchronize&lt;br/&gt;
on while calling wait and notifying the log shipper thread.&lt;/p&gt;

&lt;p&gt;I am not sure on how to add a test to the replication suite to&lt;br/&gt;
test this feature (Should failing the slave be a good test for this)&lt;br/&gt;
but then again is the complication of the 2 minute wait.&lt;/p&gt;

&lt;p&gt;I did not run the replication suite which I hope to in the afternoon.&lt;br/&gt;
But I did test starting the slave, master, executing a few transactions,&lt;br/&gt;
failing over and it worked fine.&lt;/p&gt;</comment>
                            <comment id="12578701" author="jorgenlo" created="Fri, 14 Mar 2008 11:53:35 +0000"  >&lt;p&gt;I think this issue requires failure injection to be tested. Linking issue to 3539&lt;/p&gt;</comment>
                            <comment id="12582146" author="narayanan" created="Wed, 26 Mar 2008 06:50:07 +0000"  >&lt;p&gt;Would it be OK to commit the attached patch and address 3539 as a follow-up?&lt;/p&gt;</comment>
                            <comment id="12582552" author="oysteing" created="Thu, 27 Mar 2008 08:58:35 +0000"  >&lt;p&gt;Code looks good.  My only suggestion is that for the following code:&lt;/p&gt;

&lt;p&gt;               synchronized(objLSTSync) {&lt;br/&gt;
                    shippingInterval = calculateSIfromFI();&lt;br/&gt;
                    if (shippingInterval != -1) &lt;/p&gt;
{
                        objLSTSync.wait(shippingInterval);
                    }
&lt;p&gt;                }&lt;/p&gt;

&lt;p&gt;the synchronization should be done within the if-block.&lt;br/&gt;
shippingInterval does not seem to be accessed by other threads, so it&lt;br/&gt;
does not need to be protected by synchronization.&lt;/p&gt;
</comment>
                            <comment id="12582592" author="narayanan" created="Thu, 27 Mar 2008 10:46:27 +0000"  >&lt;p&gt;Thanks for looking at the issue oystein. Fixed issue pointed!&lt;/p&gt;</comment>
                            <comment id="12582971" author="oysteing" created="Fri, 28 Mar 2008 10:28:46 +0000"  >&lt;p&gt;Thanks for the update, Narayanan.&lt;br/&gt;
Patch Derby3526_1.diff committed at revision 642184.&lt;/p&gt;</comment>
                            <comment id="12584124" author="oysteing" created="Tue, 1 Apr 2008 13:49:27 +0100"  >&lt;p&gt;Fix merged to 10.4 branch at revision 643377.&lt;/p&gt;

&lt;p&gt;Merge command: &lt;br/&gt;
svn merge -r642183:642184 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12874545" author="kristwaa" created="Wed, 2 Jun 2010 12:13:34 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12391435">DERBY-3539</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12377865" name="Derby3526.diff" size="2164" author="narayanan" created="Fri, 14 Mar 2008 04:30:53 +0000"/>
                            <attachment id="12377866" name="Derby3526.stat" size="94" author="narayanan" created="Fri, 14 Mar 2008 04:30:53 +0000"/>
                            <attachment id="12378705" name="Derby3526_1.diff" size="2272" author="narayanan" created="Thu, 27 Mar 2008 10:46:27 +0000"/>
                            <attachment id="12378706" name="Derby3526_1.stat" size="94" author="narayanan" created="Thu, 27 Mar 2008 10:46:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Mar 2008 03:49:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0q5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38056</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>