<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2087/DERBY-2087.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2087] Clean up of a database server directory after running junit tests.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2087</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;If I create a test using multiple connections using code like this &lt;/p&gt;

&lt;p&gt;	DataSource ds1 = JDBCDataSource.getDataSource(&quot;FIRSTDB1&quot;);&lt;br/&gt;
	JDBCDataSource.setBeanProperty(ds1, &quot;connectionAttributes&quot;, &quot;create=true&quot;);&lt;br/&gt;
	Connection conn1 = ds1.getConnection();&lt;/p&gt;

&lt;p&gt;the files created on a server does not get cleaned.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12355711">DERBY-2087</key>
            <summary>Clean up of a database server directory after running junit tests.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="julo">Julius Stroffek</assignee>
                                    <reporter username="julo">Julius Stroffek</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Nov 2006 12:27:14 +0000</created>
                <updated>Wed, 28 Feb 2007 12:55:13 +0000</updated>
                            <resolved>Wed, 28 Feb 2007 12:54:47 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12450100" author="djd" created="Wed, 15 Nov 2006 16:29:13 +0000"  >&lt;p&gt;One alternative is to provide a variant of TestConfiguration.singleUseDatabaseDecorator that creates a database but does not set it as the default database. Maybe the name could be passed in:&lt;/p&gt;

&lt;p&gt;  TestConfiguration.singleUseDatabaseDecorator(String dbName)&lt;/p&gt;

&lt;p&gt;Another alternative is to for tests to always have access to a small number of databases, e.g. a method of BaseJJDBCTestCase like&lt;br/&gt;
  DataSource getDataSource(int dbnum)&lt;/p&gt;

&lt;p&gt;where num &amp;gt;=2 and &amp;lt;= 4&lt;/p&gt;

</comment>
                            <comment id="12450422" author="julo" created="Thu, 16 Nov 2006 15:19:56 +0000"  >&lt;p&gt;Will the org.apache.derbyTesting.junit package be used for other tests like performance, stress, long running, etc.? In that case I think it might be possible that someone would like to create connections to many databases. Even the number of databases might be configurable.&lt;/p&gt;

&lt;p&gt;However all the database resources should be cleaned just after the test finishes. If I will use JDBCDataSource.getDataSource to get a connection, it is not possible to automatically remove the directory on a server. What about modifying the DropDatabaseSetup where it will be possible to register databases for removal?&lt;/p&gt;</comment>
                            <comment id="12450426" author="julo" created="Thu, 16 Nov 2006 15:31:08 +0000"  >&lt;p&gt;Will the org.apache.derbyTesting.junit package be used for other tests like performance, stress, long running, etc.? If yes I think it might be possible that someone would like to create connections to many databases. Even the number of databases might be configurable.&lt;/p&gt;

&lt;p&gt;However all the database resources should be cleaned just after the test finishes. If I will use JDBCDataSource.getDataSource to get a connection, it is not possible to automatically remove the directory on a server. What about modifying the DropDatabaseSetup where it will be possible to register database for removal?&lt;/p&gt;</comment>
                            <comment id="12466059" author="julo" created="Fri, 19 Jan 2007 14:22:31 +0000"  >&lt;p&gt;I thought about this again anf I found out that my previous comment was a bit out. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I had not undertood the test configurations enough before.&lt;/p&gt;

&lt;p&gt;I created a TestConfiguration.singleUseDatabaseDecorator(String dbName) as Dan suggested and also the methods openConnection(databaseName) to BaseJDBCTestCase and all the required infrustructure below. I renamed the TestConfiguration.getDatabaseName to getDefaultDatabaseName, since it is more accurate now.&lt;/p&gt;

&lt;p&gt;I ran derbyall and suites.All suites without failures.&lt;/p&gt;

&lt;p&gt;Any further comments are welcomed.&lt;/p&gt;</comment>
                            <comment id="12466137" author="djd" created="Fri, 19 Jan 2007 20:07:30 +0000"  >&lt;p&gt;I think the patch is generally fine but some of the comments in the TestConfiguration methods confuse me and I&apos;m not sure exactly what the model is you are following. By model I mean how databases are handled, is there stil only a single default database or does the configuration now handle &amp;amp; track multple databases. I think the latter is the case but I&apos;m not sure.&lt;/p&gt;

&lt;p&gt;singleUseDatabaseDecorator(Test test, String dbName)&lt;br/&gt;
Its javadoc is copied from &apos;singleUseDatabaseDecorator(Test test)&apos; but I don&apos;t think it&apos;s doing the same thing. The original method is setting the default database to a new single use database. I think the method being added is making a new single use database available but is not making it the default. However this is not clear from the javadoc. If the new method is making the new database the default then I&apos;m not sure of the benefit over the old one.&lt;/p&gt;

&lt;p&gt;How does this database name relate to the singleUse folder?&lt;/p&gt;

&lt;p&gt;Diff (from TestConfiguration) &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Obtain a new configuration identical to the passed in&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* one except for the database name.&lt;br/&gt;
+     * one except for the database name (change/removal).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The words &apos;(change/removal)&apos; have been added but I don&apos;t understand what they are meant to imply in this context.&lt;/p&gt;</comment>
                            <comment id="12466738" author="julo" created="Tue, 23 Jan 2007 13:56:39 +0000"  >&lt;p&gt;I extended some off the comments and added one more parameter to singleUseDatabaseDecorator(Test test, String dbName, boolean defaultDb) indicating whether the passed dbName should be a default database.&lt;/p&gt;

&lt;p&gt;Currently, the TestConfiguration manages a list of databases in use in a usedDbNames property. The singleUseDatabaseDecorator creates a new configuration and appends a passed (or generated) database name at the end of the old database list. Optionally, if specified, the default database might be also changed.&lt;/p&gt;

&lt;p&gt;The DropDatabaseSetup will delete only the last database in the list at tearDown.&lt;/p&gt;

&lt;p&gt;The added singleUseDatabaseDecorator has nothing common with a singleUse folder. Shall I change it to create databases in that folder?&lt;/p&gt;

&lt;p&gt;I ran all junit and harness tests again. lang/subquery.sql test failed in derbyall, when I ran it again multiple times it succeeded every time.&lt;/p&gt;

&lt;p&gt;I also added a check to TestConfiguration.openConnection method. The passed database name have to exist in the list of used databases otherwise an exception is thrown.&lt;/p&gt;

&lt;p&gt;If there is still something to do please let me now.&lt;/p&gt;</comment>
                            <comment id="12466772" author="djd" created="Tue, 23 Jan 2007 17:21:15 +0000"  >&lt;p&gt;I&apos;m planning on committing this today. The comments in TestConfiguration.openDatabase(String databaseName) need a little cleanup.&lt;br/&gt;
  1) It opens the specified database not the default database&lt;br/&gt;
  2) Some comment about requiring a singleUseDatabase decorator should be added&lt;/p&gt;

&lt;p&gt;I&apos;ll add these in the commit.&lt;/p&gt;

&lt;p&gt;Putting the single use databases in the singleUse folder could be a follow on patch. It seems like it would make the usage consistent with the default case and with the folder usage described in&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyJunitTestConfiguration#head-af5a240fccda5c96f104776dfbd20a8cabde55e0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyJunitTestConfiguration#head-af5a240fccda5c96f104776dfbd20a8cabde55e0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would also allow the database names to be unique thus allowing the potential for tests to be run in parallel rather than limited to being single thread by a fixed database name.&lt;/p&gt;

&lt;p&gt;Of course the api would need some thinking out in terms of how TestConfiguration.openDatabase(String databaseName) works, but it could be TestConfiguration automatically provides a mapping between the logical name &quot;DB1&quot; and the actual name in use  &quot;singleUse/oneUse42&quot;.&lt;/p&gt;</comment>
                            <comment id="12466777" author="djd" created="Tue, 23 Jan 2007 17:30:54 +0000"  >&lt;p&gt;Is there a good usage case for a test passing true to the singleUseDecorator to indicate the new database is the default database? Isn&apos;t this handled by the existing singleUseDecorator method that just takes a test?&lt;/p&gt;

&lt;p&gt;If not, a clearer api may be to make the three argument singleUseDecorator private to TestConfiguration and have a two argument version, possibly with a changed name:&lt;/p&gt;

&lt;p&gt; additionalDatabaseDecorator(Test test, String dbName)&lt;/p&gt;</comment>
                            <comment id="12466806" author="djd" created="Tue, 23 Jan 2007 19:21:00 +0000"  >&lt;p&gt;Patch d2087_try2.diff  Committed revision 499100 - Thanks Julius&lt;/p&gt;</comment>
                            <comment id="12466966" author="julo" created="Wed, 24 Jan 2007 10:01:06 +0000"  >&lt;p&gt;Dan, Thank You very much for your comments and for providing some cleanup.&lt;/p&gt;</comment>
                            <comment id="12466973" author="julo" created="Wed, 24 Jan 2007 10:19:16 +0000"  >&lt;p&gt;I&apos;ll create and additional patch. It will contain the mapping between logical names and &quot;singleUse/oneUseXX&quot; and required corresponding changes.&lt;/p&gt;</comment>
                            <comment id="12469515" author="julo" created="Thu, 1 Feb 2007 17:25:05 +0000"  >&lt;p&gt;I created an additional patch which uses logical database names in additionalDatabaseDecorator function (which replaces singleUseDatabaseDecorator with database name). I added also a openConnection method where one can specify a connection attributes as a string.&lt;/p&gt;

&lt;p&gt;Since the prototype of new method openConnection(String dbName, String connectionAttributes) added to Connector interface conflicts&lt;br/&gt;
with the openConnection(String user, String password) and this method is not used I commented it and have a plan to remove it since it is possible to specify user name and password in connection attributes. Is ok to do it this way or it is better to define connection properties in Properties object instead of string? I think that using String for connection attributes is simpler to use.&lt;/p&gt;

&lt;p&gt;I ran derbyall and suites.All without failures. Please, give me any comments or suggestions.&lt;/p&gt;</comment>
                            <comment id="12469634" author="djd" created="Fri, 2 Feb 2007 01:03:34 +0000"  >&lt;p&gt;Dumb question, but how do you see an open method with connection attributes being used by a test?&lt;/p&gt;</comment>
                            <comment id="12470225" author="kristwaa" created="Mon, 5 Feb 2007 14:25:22 +0000"  >&lt;p&gt;For instance when you are testing creation of encrypted databases, with a strong focus on the inputs specified by the user as connection attributes?&lt;/p&gt;

&lt;p&gt;I need to do this somehow in the EncryptionKey test that I said I would convert to JUnit a long time ago. It might be that it doesn&apos;t fit too well with the current state of the JUnit harness, but it is definitely useful to me for rewriting that test.&lt;/p&gt;

&lt;p&gt;If the usage of such a method  goes against &quot;best practice&quot;, we should try to communicate that. You can always do the work yourself in the test, but maybe it&apos;s good have a &quot;single point of entry&quot;?&lt;/p&gt;

&lt;p&gt;I&apos;m on thin ice here, as I haven&apos;t studied the code, but I think the method with username and password should be available to the tester. I don&apos;t see it as a requirement that it is available in an internal class.&lt;/p&gt;</comment>
                            <comment id="12470248" author="djd" created="Mon, 5 Feb 2007 15:25:49 +0000"  >&lt;p&gt;dan&amp;gt; how do you see an open method with connection attributes being used by a test?&lt;br/&gt;
kristian&amp;gt; ...a strong focus on the inputs specified by the user as connection attributes? &lt;/p&gt;

&lt;p&gt;In this case the focus of the test would be setting JDBC connection attributes or JDBC DataSource properties.&lt;br/&gt;
I think in this case it&apos;s clearer code if the test directly goes aganst the Derby api, ie. manufactures JDBC URLs,&lt;br/&gt;
Properties for DriverManager.getConnection(), or Java bean properties for a DataSource.&lt;/p&gt;

&lt;p&gt;I think the utility methods in the infrastructure are there to reduce the amount of code in a test class/fixture so that the focus of the code is the item being tested. This means in some cases the utility methods are not the best approach, e.g. in this case the openConnection() methods are probably not the best, in a test of CallableStatement the prepareCall() utility method is probably not the best approach.&lt;/p&gt;

&lt;p&gt;Such an open method would have (at least) two underlying mechanisms to open a connection, one through JDBC URLs and one through DataSource properties. This leads (I think) to two issues:&lt;br/&gt;
  A) code in the test harness to decode the connection attributes as a different breakout might be needed for DataSource properties. Thus how would negative tests be handled, which piece of code is catching the error, the harness or the driver?&lt;br/&gt;
  B) tests being written against the test api and not Derby&apos;s api.&lt;/p&gt;
</comment>
                            <comment id="12472761" author="kristwaa" created="Tue, 13 Feb 2007 16:54:19 +0000"  >&lt;p&gt;In my opinion, Dans issues are valid.&lt;br/&gt;
Thus I will have to write my own connection-handling for my test, but that might in deed be the best approach.&lt;/p&gt;

&lt;p&gt;Unless there is still a strong wish to add the new method(s), what else remains to wrap up this Jira issue?&lt;br/&gt;
I&apos;m a bit unsure if there are any more patches requiring review (the first follow-up patch?).&lt;/p&gt;</comment>
                            <comment id="12474087" author="julo" created="Mon, 19 Feb 2007 08:07:13 +0000"  >&lt;p&gt;I agree not having a proposed method. It is only I shortcut and does not bring any new functionality. However, I thought it might be useful.&lt;/p&gt;

&lt;p&gt;I do not understand your question about more patches to review. Actually, there is no another new patch, but would like to create the similar one as the last one except it will not contain the discussed method. I also unchecked the &apos;Patch Available&apos; check-box.&lt;/p&gt;</comment>
                            <comment id="12474209" author="julo" created="Mon, 19 Feb 2007 15:51:27 +0000"  >&lt;p&gt;I created the same patch as the previous one except it does not contain the function openConnection(String dbName, String connectionAttributes). I ran derbyall and Suites.All with two failures in Suites.All. Both of these failures appear to me also on trunk without any modifications.&lt;/p&gt;

&lt;p&gt;The failing tests are:&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest&lt;/p&gt;
</comment>
                            <comment id="12474235" author="djd" created="Mon, 19 Feb 2007 17:18:30 +0000"  >&lt;p&gt;Patch d2087_round2_try3.diff Committed revision 509258 Thanks Julius.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12349262" name="d2087.diff" size="24780" author="julo" created="Fri, 19 Jan 2007 14:14:25 +0000"/>
                            <attachment id="12349263" name="d2087.stat" size="1339" author="julo" created="Fri, 19 Jan 2007 14:14:25 +0000"/>
                            <attachment id="12350149" name="d2087_round2.diff" size="20671" author="julo" created="Thu, 1 Feb 2007 15:46:45 +0000"/>
                            <attachment id="12350150" name="d2087_round2.stat" size="701" author="julo" created="Thu, 1 Feb 2007 15:46:45 +0000"/>
                            <attachment id="12350158" name="d2087_round2_try2.diff" size="22588" author="julo" created="Thu, 1 Feb 2007 17:25:05 +0000"/>
                            <attachment id="12350159" name="d2087_round2_try2.stat" size="773" author="julo" created="Thu, 1 Feb 2007 17:25:05 +0000"/>
                            <attachment id="12351514" name="d2087_round2_try3.diff" size="15050" author="julo" created="Mon, 19 Feb 2007 15:51:27 +0000"/>
                            <attachment id="12351515" name="d2087_round2_try3.stat" size="478" author="julo" created="Mon, 19 Feb 2007 15:51:27 +0000"/>
                            <attachment id="12349445" name="d2087_try2.diff" size="27153" author="julo" created="Tue, 23 Jan 2007 13:38:06 +0000"/>
                            <attachment id="12349446" name="d2087_try2.stat" size="1339" author="julo" created="Tue, 23 Jan 2007 13:38:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Nov 2006 16:29:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1393:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40177</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>