<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:36:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6443/DERBY-6443.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6443] ArrayIndexOutOfBoundsException when calling function from trigger</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6443</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I&apos;m having problems will calling functions from within a trigger.&lt;br/&gt;
The problem seems to be with the outer function call (FLOOR() in this case, but it also happens with other functions). It works fine in the SELECT statement, but when used in the trigger it throws a ArrayIndexOutOfBoundsException.&lt;br/&gt;
Remove the FLOOR() part from the trigger and it works fine.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-- create source table and some data
CREATE TABLE foo (name VARCHAR(20), val DOUBLE);
INSERT INTO foo (name, val) VALUES (&apos;A&apos;, 10), (&apos;A&apos;, 20), (&apos;B&apos;, 30), (&apos;C&apos;, 40);

-- calling the function works fine here
SELECT name, FLOOR(AVG(LOG10(val))), COUNT(*)
FROM foo
GROUP BY name;

-- create target table &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; trigger
CREATE TABLE summary (name VARCHAR(20), aver DOUBLE, size INT);

-- create the trigger
CREATE TRIGGER trg_foo AFTER INSERT ON foo
REFERENCING NEW TABLE AS changed FOR EACH STATEMENT MODE DB2SQL
INSERT INTO summary (name, aver, size)
SELECT name, FLOOR(AVG(LOG10(val))), COUNT(*)
FROM changed
GROUP BY name;

-- insert rows to cause trigger to fire
INSERT INTO foo (name, val) VALUES (&apos;A&apos;, 10), (&apos;A&apos;, 20), (&apos;B&apos;, 30), (&apos;C&apos;, 40);

SELECT * FROM foo;
SELECT * FROM summary;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12686834">DERBY-6443</key>
            <summary>ArrayIndexOutOfBoundsException when calling function from trigger</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="tdudgeon">Tim Dudgeon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 Dec 2013 09:37:49 +0000</created>
                <updated>Wed, 21 Jan 2015 00:23:26 +0000</updated>
                            <resolved>Wed, 5 Feb 2014 12:15:02 +0000</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.10.1.1</version>
                                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13860235" author="knutanders" created="Thu, 2 Jan 2014 14:50:00 +0000"  >&lt;p&gt;When running in a debug build, it fails already in the CREATE TRIGGER statement:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ERROR XJ001: Java exception: &apos;ASSERT FAILED sourceResultSetNumber expected to be &amp;gt;= 0 for null.SQLCol3: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A similar, simpler trigger produces another assert failure, which seems to give some more details about what has gone wrong:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; create table t1(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create table t2(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create trigger tr after insert on t1 insert into t2 select floor(avg(x)) from t1;
ERROR XJ001: Java exception: &apos;ASSERT FAILED generateExpression() should never be called on an AggregateNode.  replaceAggregatesWithColumnReferences should have been called prior to generateExpression: org.apache.derby.shared.common.sanity.AssertFailure&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13860248" author="knutanders" created="Thu, 2 Jan 2014 15:02:05 +0000"  >&lt;p&gt;The assert failures can also be seen when the INSERT statement is executed outside of the trigger:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; INSERT INTO summary (name, aver, size)
&amp;gt; SELECT name, FLOOR(AVG(LOG10(val))), COUNT(*)
&amp;gt; FROM foo
&amp;gt; GROUP BY name;
ERROR XJ001: Java exception: &apos;ASSERT FAILED sourceResultSetNumber expected to be &amp;gt;= 0 for null.SQLCol3: org.apache.derby.shared.common.sanity.AssertFailure&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; create table t(x int);
0 rows inserted/updated/deleted
ij&amp;gt; insert into t select floor(avg(x)) from t;
ERROR XJ001: Java exception: &apos;ASSERT FAILED generateExpression() should never be called on an AggregateNode.  replaceAggregatesWithColumnReferences should have been called prior to generateExpression: org.apache.derby.shared.common.sanity.AssertFailure&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13862995" author="knutanders" created="Mon, 6 Jan 2014 13:55:02 +0000"  >&lt;p&gt;The repro in the bug description doesn&apos;t reproduce the ArrayIndexOutOfBoundsException on 10.4.1.3 and earlier. Instead, it fails with a different kind of error message, probably because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3649&quot; title=&quot;can&amp;#39;t call a stored function with an aggregate argument without getting the following error: ERROR 42Y29&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3649&quot;&gt;&lt;del&gt;DERBY-3649&lt;/del&gt;&lt;/a&gt;. Also, on 10.0 and 10.1 the FLOOR and LOG10 functions used in the repro are not available.&lt;/p&gt;

&lt;p&gt;The following code reproduces the ArrayIndexOutOfBoundsException all the way back to the initial version (10.0.2.1), so it seems this is not a new bug:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.0
ij&amp;gt; connect &apos;jdbc:derby:db;create=true&apos;;
ij&amp;gt; create table t1(a int);
0 rows inserted/updated/deleted
ij&amp;gt; create table t2(b int);
0 rows inserted/updated/deleted
ij&amp;gt; create function f(x int) returns int language java parameter style java external name &apos;java.lang.Math.abs&apos; no sql;
0 rows inserted/updated/deleted
ij&amp;gt; insert into t1 select f(avg(b)) from t2;
ERROR XJ001: Java exception: &apos;-1: java.lang.ArrayIndexOutOfBoundsException&apos;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13863061" author="knutanders" created="Mon, 6 Jan 2014 16:02:10 +0000"  >&lt;p&gt;InsertNode.bindStatement() binds the underlying SelectNode twice. First here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
		/* If any underlying ResultSetNode is a SelectNode, then we
		 * need to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; a full bind(), including the expressions
		 * (since the fromList may include a FromSubquery).
		 */
		DataDictionary dataDictionary = getDataDictionary();
		&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.bindResultSetsWithTables(dataDictionary);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
		/* Bind the expressions now that the result columns are bound 
		 * NOTE: This will be the 2nd time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; those underlying ResultSets
		 * that have tables (no harm done), but it is necessary &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; those
		 * that &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not have tables.  It&apos;s too hard/not work the effort to
		 * avoid the redundancy.
		 */
		&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.bindExpressions();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first time the node is bound, the AggregateNode (for the AVG function) is found and added to SelectNode.selectAggregates. The second time it is bound, the original selectAggregates list is replaced with a fresh, empty list first. For some reason, the AggregateNode is not found in this round, and the selectAggregates list stays empty. Because of the empty selectAggregates list, some transformations required for queries with aggregates are not performed, which eventually leads to assert failures or IndexOutOfBoundsExceptions.&lt;/p&gt;

&lt;p&gt;As a quick hack, I changed SelectNode.bindExpressions() so that it didn&apos;t drop the original selectAggregates list the second time it was called. This made the queries succeed. To fix it properly, I think we need to find out why the AggregateNode is not found the second time the SelectNode is bound, and possibly make adjustments so that it is found.&lt;/p&gt;</comment>
                            <comment id="13863065" author="knutanders" created="Mon, 6 Jan 2014 16:05:47 +0000"  >&lt;p&gt;StaticMethodCallNode.bindExpression() starts with this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
		&lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a function we can get called recursively
&lt;/span&gt;		&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (alreadyBound)
			&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the function call that&apos;s wrapped around the call to AVG is represented by a StaticMethodCallNode, that would probably explain why we don&apos;t see the AVG function the second time the node is bound.&lt;/p&gt;</comment>
                            <comment id="13864113" author="knutanders" created="Tue, 7 Jan 2014 11:14:46 +0000"  >&lt;p&gt;Attaching d6443-1a.diff which contains a fix for the bug and a regression test case to verify the fix.&lt;/p&gt;

&lt;p&gt;The point of the alreadyBound flag in StaticMethodCallNode seems to be to prevent infinite recursion, since StaticMethodCallNode.bindExpression() can be called recursively in some circumstances. If the check for the flag is removed, many regression tests fail with StackOverflowError.&lt;/p&gt;

&lt;p&gt;Since the purpose of the flag is to prevent infinite recursion, not to prevent re-binding of the node, I changed it so that it is only true when bindExpression() is executing. This means recursive calls will see that it&apos;s true, and return immediately. It is reset to false when the top-level call to bindExpression() returns, so that re-binding the node will actually do some work. The flag was also renamed from alreadyBound to isInsideBind to reflect its new meaning.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13866670" author="jira-bot" created="Thu, 9 Jan 2014 14:18:28 +0000"  >&lt;p&gt;Commit 1556809 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1556809&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1556809&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6443&quot; title=&quot;ArrayIndexOutOfBoundsException when calling function from trigger&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6443&quot;&gt;&lt;del&gt;DERBY-6443&lt;/del&gt;&lt;/a&gt;: ArrayIndexOutOfBoundsException when calling function from trigger&lt;/p&gt;

&lt;p&gt;StaticMethodCallNode.bindExpression() was a no-op if the node had&lt;br/&gt;
already been bound. This caused problems for queries that need to bind&lt;br/&gt;
expressions multiple times (for example INSERT INTO ... SELECT).&lt;/p&gt;

&lt;p&gt;This fix makes StaticMethodCallNode.bindExpression() work if it&apos;s&lt;br/&gt;
called a second time, while still making it a no-op if it is called&lt;br/&gt;
recursively in order to prevent infinite recursion.&lt;/p&gt;</comment>
                            <comment id="13892039" author="jira-bot" created="Wed, 5 Feb 2014 12:14:47 +0000"  >&lt;p&gt;Commit 1564730 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1564730&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1564730&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6443&quot; title=&quot;ArrayIndexOutOfBoundsException when calling function from trigger&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6443&quot;&gt;&lt;del&gt;DERBY-6443&lt;/del&gt;&lt;/a&gt;: ArrayIndexOutOfBoundsException when calling function from trigger&lt;/p&gt;

&lt;p&gt;Merged revision 1556809 from trunk.&lt;/p&gt;</comment>
                            <comment id="14284802" author="myrna" created="Wed, 21 Jan 2015 00:23:26 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12621775" name="d6443-1a.diff" size="6187" author="knutanders" created="Tue, 7 Jan 2014 11:14:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Jan 2014 14:50:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>365827</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzkwpz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>366134</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>