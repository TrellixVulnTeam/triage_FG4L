<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:23 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4009/DERBY-4009.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4009] Accommodate  length delimited DRDA strings where character  length does not equal byte length</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4009</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently the drda code in server and client assumes that the byte length of ddm parameters is equal to the character length.  In the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt;, ddm parameters such as RDBNAM will be in UTF-8 and the character and byte length may not match.  The code needs to allow for this.&lt;/p&gt;

&lt;p&gt;The primary purpose of this Jira is to enforce the DRDA length checking which is in bytes.  For example for RDBNAM (database name), the limit  is 255 bytes in length, not 255 characters.   The limits are somewhat arbitrary and sad in my opinion. Certainly for Derby there should be no problem  removing the limits, except for the DRDA spec constraint. With &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt; and the introduction of UNICODEMGR, characters can take up to 4 bytes, so the calculation is more difficult.&lt;/p&gt;

&lt;p&gt;(I actually tried to sneak removing or expanding the limits in the ACR 7007 for UNICODEMGR but was told, rightfully so, that such a proposal needed to be a separate ACR. I am a bit concerned that especially since database names can be full paths we may rapidly exceed the limits) &lt;/p&gt;</description>
                <environment></environment>
        <key id="12411969">DERBY-4009</key>
            <summary>Accommodate  length delimited DRDA strings where character  length does not equal byte length</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12326016">DERBY-728</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Jan 2009 19:41:19 +0000</created>
                <updated>Fri, 21 Jan 2011 18:30:37 +0000</updated>
                            <resolved>Wed, 16 Jun 2010 19:02:13 +0100</resolved>
                                    <version>10.5.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12668172" author="kmarsden" created="Wed, 28 Jan 2009 21:40:35 +0000"  >&lt;p&gt;Attached is a sample method change for this issue (derby-4009-sample_diff.txt). It is not for commit. There are other methods that need to be changed, but I wanted to post this one as a sample because I am a bit concerned about the approach. Instead of converting directly into the buffer,  I am converting to a byte[] and then writing the bytes to the buffer. This is because I need to know the length of the byte array up front to call ensureLength().   I am concerned that this will have a performance impact. Does anyone have input on a more efficient way to change these methods that write the length before the bytes.&lt;/p&gt;

</comment>
                            <comment id="12668644" author="kmarsden" created="Thu, 29 Jan 2009 22:30:19 +0000"  >&lt;p&gt;Marking patch available even though the patch is not for commit.  I&apos;m hoping to get feedback on whether this approach might cause a performance problem and if so what to do about it.&lt;/p&gt;</comment>
                            <comment id="12670078" author="kmarsden" created="Tue, 3 Feb 2009 19:43:32 +0000"  >&lt;p&gt;attaching derby-4009_sample2_diff.txt that takes a different approach.  This patch will call ensureLength() based on the largest possible converted byte length of the string. Then writes the bytes directly into the buffer and then pokes the length in in the end.&lt;br/&gt;
 This is similar to writeLDString in DDMWriter.  I think this approach will have less of a performance impact.  The only risk is that we might potentially expand the buffer unnecessarily, but since the buffer is big 32K and most DDM paramters are small, I don&apos;t think this is likely to occur. I think I prefer this approach.&lt;/p&gt;
</comment>
                            <comment id="12676368" author="kmarsden" created="Tue, 24 Feb 2009 19:08:54 +0000"  >&lt;p&gt;Attached is derby-4009_a_diff.txt that makes the changes for client RDBNAM, USERID, and PASSWD.  There are more changes to go, but just want to check this in as an interim patch.&lt;/p&gt;</comment>
                            <comment id="12873651" author="espinha" created="Mon, 31 May 2010 14:37:36 +0100"  >&lt;p&gt;I was going through the derby/client/net/Request class and I have some questions.&lt;/p&gt;

&lt;p&gt;@ Kathey, should I rely on the code you have provided for the writeScalarString() method? You mentioned some performance concerns and I have been trying to understand the code without much luck. Maybe you can help me here. &lt;/p&gt;

&lt;p&gt;For example, why do we always shift the codePoint right by 8 bits? Also, we do a &#171;logical and&#187; with binary 255 twice, does this have a reason? If we &#171;AND&#187; a byte against 255 doesn&apos;t that always give us the initial byte?&lt;/p&gt;

&lt;p&gt;We also have some hardcoded values that I would like to convert into constants, or at least put some inline comments explaining exactly what they are. For instance, at some point we increment the offset by 2 and before this we also invoke ensureLength() by adding the offset_, maxByteLength and 4. Why 4?&lt;/p&gt;


&lt;p&gt;Finally, I&apos;ll be submitting a patch later today that addresses EXTNAM, PRDID, SRVCLSNM, SRVNAM, SRVRLSLV and TYPDEFNAM as these seem to be the only codepoints that actually write strings of variable size. There are fields like RDBACCCL that just write bytes or words and to my understanding, these will be left untouched, as these are not encoding strings into bytes.&lt;/p&gt;</comment>
                            <comment id="12873808" author="espinha" created="Mon, 31 May 2010 23:35:27 +0100"  >&lt;p&gt;I&apos;m attaching a small patch that should convert the remaining commands to use the new writeScalarString method.&lt;/p&gt;

&lt;p&gt;It needs to be noted that I didn&apos;t change a few of the commands I initially mentioned:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;PRDID - it is already using the new method implicitly&lt;/li&gt;
	&lt;li&gt;SRVCLSNM - same as above&lt;/li&gt;
	&lt;li&gt;SRVRLSLV - same as above&lt;/li&gt;
	&lt;li&gt;TYPDEFNAM - there doesn&apos;t seem to be a length restriction on this command&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch is NOT intended for inclusion as I have not run regressions yet.&lt;/p&gt;</comment>
                            <comment id="12874832" author="kmarsden" created="Wed, 2 Jun 2010 23:32:18 +0100"  >&lt;p&gt;I think the patch looks fine. If regressions pass I&apos;ll commit.  I will take a look back at writeScalarString and try to understand it.  Is this code I added or preexisting? &lt;/p&gt;</comment>
                            <comment id="12875761" author="espinha" created="Fri, 4 Jun 2010 22:26:36 +0100"  >&lt;p&gt;There&apos;s a small problem with the patch, which lead to the following failure:&lt;/p&gt;

&lt;p&gt;There was 1 failure:&lt;br/&gt;
1) test_errorcode(org.apache.derbyTesting.functionTests.tests.lang.ErrorCodeTest&lt;br/&gt;
)junit.framework.AssertionFailedError: Unexpected row count expected:&amp;lt;161&amp;gt; but w&lt;br/&gt;
as:&amp;lt;163&amp;gt;&lt;/p&gt;

&lt;p&gt;That test basically asserts all the possible error messages that the system can through. Since these messages are in fact hardcoded into the test, it wasn&apos;t expecting the two additional messages that I added.&lt;/p&gt;

&lt;p&gt;I&apos;ve added the lines to the ErrorCodeTest and the test passes by itself now (it wouldn&apos;t before), so I think it&apos;s safe to say that it is ready for commit.&lt;/p&gt;</comment>
                            <comment id="12875762" author="espinha" created="Fri, 4 Jun 2010 22:27:16 +0100"  >&lt;p&gt;Marking as patch available.&lt;/p&gt;</comment>
                            <comment id="12879427" author="espinha" created="Wed, 16 Jun 2010 19:02:13 +0100"  >&lt;p&gt;Regressions ran fine, closing the issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12446369" name="DERBY-4009.diff" size="4963" author="espinha" created="Fri, 4 Jun 2010 22:26:36 +0100"/>
                            <attachment id="12445966" name="DERBY-4009.diff" size="3465" author="espinha" created="Mon, 31 May 2010 23:35:26 +0100"/>
                            <attachment id="12398931" name="derby-4009-sample_diff.txt" size="2091" author="kmarsden" created="Wed, 28 Jan 2009 21:40:35 +0000"/>
                            <attachment id="12400871" name="derby-4009_a_diff.txt" size="10350" author="kmarsden" created="Tue, 24 Feb 2009 19:08:54 +0000"/>
                            <attachment id="12399378" name="derby-4009_sample2_diff.txt" size="3241" author="kmarsden" created="Tue, 3 Feb 2009 19:43:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 May 2010 13:37:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31098</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0jmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36999</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>