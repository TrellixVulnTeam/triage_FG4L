<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1002/DERBY-1002.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1002] Check that DRDAStatement and DRDAResultSet states are reset when they are re-used</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1002</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Network server re-uses DRDAStatement and DRDAResultSet objects when client sends a request with same section number. When re-using DRDAStatement, it&apos;s close() method is called which inturn calls close() method of DRDAResultSet. For re-use to work properly, we have to ensure the states of these objects are reset. This is not a bug but it is an area for possible improvements like:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The reset of all states are not in the close() methods. The states get re-initialized at different places in the code. Fo example, in case of DRDAResultSet, they get initialized in some other DRDAStatement methods - like addResultSet, setRsDefaultOptions, setOPNQRYOptions, setQueryOptions etc. It will be good to have all resets in one method.&lt;/li&gt;
	&lt;li&gt;The method name &quot;close&quot; is confusing since it is also called when objects get re-used. For clarity, it may be good to have a method named reset(). And then have the close method call reset.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12329124">DERBY-1002</key>
            <summary>Check that DRDAStatement and DRDAResultSet states are reset when they are re-used</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deepa">Deepa Remesh</assignee>
                                    <reporter username="deepa">Deepa Remesh</reporter>
                        <labels>
                    </labels>
                <created>Sat, 18 Feb 2006 02:04:54 +0000</created>
                <updated>Tue, 13 Jun 2006 22:42:31 +0100</updated>
                            <resolved>Tue, 13 Jun 2006 22:42:31 +0100</resolved>
                                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12367537" author="deepa" created="Fri, 24 Feb 2006 02:13:22 +0000"  >&lt;p&gt;I had checked and thought the reset/re-initialization of DRDAStatement and DRDAResultSet states is happening correctly in the network server code. Hence I had marked this issue to be an improvement. I found I was wrong. Sorry about that.&lt;/p&gt;

&lt;p&gt;Things I had not understood correctly:&lt;/p&gt;

&lt;p&gt;1) DRDAStatement.rsClose() has this check: if (currentDrdaRs.getResultSet() == null) return;&lt;br/&gt;
I had thought the condition will evaluate to true only when DRDAResultSet is constructed or after DRDAResultSet.close() has been called. So the DRDAResultSet would have been already reset whenever this condition is true. This is not correct.&lt;/p&gt;

&lt;p&gt;2) Fields like DRDAResultSet.qryclsimp get set only in OPNQRY path. However, writeQRYDTA method used for OPNQRY and EXCSQLSTT are same. Hence, in EXCSQLSTT path, it is possible for the query to use a left-over qryclsimp. Because of 1) above, if hasdata value is also not reset and is false, server will close a query wrongly (even when the query should not be closed implicitly and actually has more data). One possible error case is - A client  which expects a QRYDTA as reply to CNTQRY may get a QRYNOPRM from the server.&lt;/p&gt;

&lt;p&gt;In short, this part of network server code is not correct and is causing bugs which are easy to repro with my patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-210&quot; title=&quot;Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-210&quot;&gt;DERBY-210&lt;/a&gt; but also occur with the current trunk. This issue blocks &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-210&quot; title=&quot;Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-210&quot;&gt;DERBY-210&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have a repro for a bug against the trunk which I will upload shortly with some more context.&lt;/p&gt;</comment>
                            <comment id="12367564" author="deepa" created="Fri, 24 Feb 2006 04:01:38 +0000"  >&lt;p&gt;Attaching  a repro &apos;derby1002.java&apos; which shows how queries can get closed on the server unexpectedly which leads to protocol exception. To run the repro:&lt;/p&gt;

&lt;p&gt;1. Start network server on port 2222.&lt;br/&gt;
2. Run the command: java derby1002&lt;br/&gt;
3. Output should be:&lt;/p&gt;

&lt;p&gt;******************************************&lt;br/&gt;
testImplicitClose&lt;br/&gt;
******************************************&lt;br/&gt;
FAILED (no exception thrown)&lt;/p&gt;

&lt;p&gt;******************************************&lt;br/&gt;
jira491Test&lt;br/&gt;
******************************************&lt;br/&gt;
JIRA-491 FAILURE:&lt;br/&gt;
Client sends CNTQRY and expects QRYDTA. Server sends QRYNOPRM because the query has been implicitly&lt;br/&gt;
closed&lt;br/&gt;
Caught Exception:&lt;br/&gt;
java.sql.SQLException: Execution failed due to a distribution protocol error that caused deallocatio&lt;br/&gt;
n of the conversation.  The identified cursor is not open.&lt;br/&gt;
        at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:285)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:269)&lt;br/&gt;
        at derby1002.jira491Test(derby1002.java:123)&lt;br/&gt;
        at derby1002.main(derby1002.java:26)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: Execution failed due to a distribution pr&lt;br/&gt;
otocol error that caused deallocation of the conversation.  The identified cursor is not open.&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.parseQRYNOPRM(NetResultSetReply.java:331)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.parseFetchError(NetResultSetReply.java:226)&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.client.net.NetResultSetReply.parseCNTQRYreply(NetResultSetReply.java:177&lt;br/&gt;
)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSetReply.readFetch(NetResultSetReply.java:38)&lt;br/&gt;
        at org.apache.derby.client.net.ResultSetReply.readFetch(ResultSetReply.java:40)&lt;br/&gt;
        at org.apache.derby.client.net.NetResultSet.readFetch_(NetResultSet.java:181)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.flowFetch(ResultSet.java:4034)&lt;br/&gt;
        at org.apache.derby.client.net.NetCursor.completeSplitRow(NetCursor.java:1057)&lt;br/&gt;
        at org.apache.derby.client.net.NetCursor.skipFdocaBytes(NetCursor.java:537)&lt;br/&gt;
        at org.apache.derby.client.net.NetCursor.calculateColumnOffsetsForRow_(NetCursor.java:251)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.stepNext(Cursor.java:172)&lt;br/&gt;
        at org.apache.derby.client.am.Cursor.next(Cursor.java:185)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.nextX(ResultSet.java:293)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.next(ResultSet.java:260)&lt;br/&gt;
        ... 2 more&lt;/p&gt;

&lt;p&gt;I have taken parts of tests for jira 821 and jira 491 from lang/procedure.java to create the repro.&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------&lt;br/&gt;
Context:&lt;br/&gt;
--------------------------------------------------------&lt;br/&gt;
After Kathey suggested to separate out finalizer changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-210&quot; title=&quot;Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-210&quot;&gt;DERBY-210&lt;/a&gt;, I updated my workpace and I was running derbynetclientmats suite in a loop with my patches. I was seeing a new intermittent failure in lang/procedure.java, which was not there last week. The failure was related to implicit closing of result sets and hence seeing it this week. Here are the two failures I see on repeated runs of this test with my patches. Sometimes I get either one of these failures or none: &lt;/p&gt;

&lt;p&gt;1) Failure in testImplicitClose(). This tests to see that the resultsets opened by EXCSQLSTT do not get implicitly closed. However, implicit close happens because stmt.hasdata() is evaluating to false at the end of writeQRYDTA. And the result set&apos;s qryclsimp value is also left over from a previous OPNQRY.&lt;/p&gt;

&lt;p&gt;942 del&lt;br/&gt;
&amp;lt; testImplicitClose(): PASSED&lt;br/&gt;
942 add&lt;br/&gt;
&amp;gt; testImplicitClose(): FAILED (no exception thrown)&lt;br/&gt;
Test Failed.&lt;/p&gt;

&lt;p&gt;2) In this failure also, implicit close happens because stmt.hasdata() is evaluating to false at the end of writeQRYDTA&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: procedure jdk1.5.0_02 DerbyNetClient 2006-02-21 23:36:42 ***&lt;br/&gt;
940 del&lt;br/&gt;
&amp;lt; JIRA-491 Successful.&lt;br/&gt;
941 del&lt;br/&gt;
&amp;lt; JIRA-492 successful &amp;#8211; no hang!&lt;br/&gt;
942 del&lt;br/&gt;
&amp;lt; testImplicitClose(): PASSED&lt;br/&gt;
942 add&lt;br/&gt;
&amp;gt; JIRA-491 FAILURE: Caught Exception:&lt;br/&gt;
&amp;gt; java.sql.SQLException: Execution failed due to a distribution protocol error that caused deallocation of the conversation.  The identified cursor is not open.&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.DisconnectException: Execution failed due to a distribution protocol error that caused deallocation of the conversation.  The identified cursor is not open.&lt;br/&gt;
&amp;gt; 	... 3 more&lt;br/&gt;
&amp;gt; JIRA-492: FAILURE in data setup:&lt;br/&gt;
&amp;gt; java.sql.SQLException: Invalid operation: statement closed&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.SqlException: Invalid operation: statement closed&lt;br/&gt;
&amp;gt; 	... 3 more&lt;br/&gt;
&amp;gt; JIRA-492: FAILURE in procedure creation:&lt;br/&gt;
&amp;gt; java.sql.SQLException: Invalid operation: statement closed&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.SqlException: Invalid operation: statement closed&lt;br/&gt;
&amp;gt; 	... 3 more&lt;br/&gt;
&amp;gt; ERROR (no SQLState): invalid operation: connection closed&lt;br/&gt;
&amp;gt; java.sql.SQLException: invalid operation: connection closed&lt;br/&gt;
&amp;gt; Caused by: org.apache.derby.client.am.SqlException: invalid operation: connection closed&lt;br/&gt;
&amp;gt; 	... 3 more&lt;br/&gt;
Test Failed.&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;On looking at these, I found there could still be problems in the network server code where DRDAStatement and DRDAResultSet get re-used. Also, it seemed to me these failures are not related to my patch and should happen without my patch. I was able to create a repro using parts of the procedure test and creating/closing statements at right time to provoke this bug without my patch. &lt;/p&gt;

&lt;p&gt;--------------------------------------------------------&lt;br/&gt;
Details of what repro does:&lt;br/&gt;
--------------------------------------------------------&lt;br/&gt;
1) Run a select statement so that OPNQRY will be sent to server and qryclsimp will be set to CodePoint.QRYCLSIMP_YES&lt;br/&gt;
2) Close the above statement so that network server will re-use its DRDAStatement for the next statement.&lt;br/&gt;
3) Create a callabale statement and execute a procedure and get all data so that hasdata for the DRDAResultSet will be false.&lt;br/&gt;
4) Close the above statement so that network server will re-use its DRDAStatement for the next statement.&lt;br/&gt;
5a) Run testImplicitClose() from procedure test. This test checks that result sets do not get implicitly closed when using EXCSQLSTT. But this will fail since the DRDAResultSet has wrong states and the &apos;writeQRYDTA&apos; method used by OPNQRYRM and EXCSQLSTT commands is the same.&lt;br/&gt;
5b) Run the test for jira 491. The QRYDTA will be split and hence hasdata must be true at the time of sending first QRYDTA. However, hasdata evaluates to false and hence server closes the result set. Client sends CNTQRY to get the next QRYDTA. Since server has closed the query, it sends back QRYNOPRM which causes a protocol exception.&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------&lt;br/&gt;
Summary:&lt;br/&gt;
--------------------------------------------------------&lt;br/&gt;
Network server code should be changed and reviewed thoroughly to see that the re-use of objects happens correctly. &lt;/p&gt;</comment>
                            <comment id="12367753" author="deepa" created="Sat, 25 Feb 2006 10:40:24 +0000"  >&lt;p&gt;Attaching a draft patch &apos;derby1002-patch1-draft1.diff&apos;. This patch is only for review.&lt;/p&gt;

&lt;p&gt;Summary of patch: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Adds reset() methods to DRDAStatement and DRDAResultSet objects. The purpose of reset method is to reset  the states of all variables so that the objects can be re-used and will not have left-over states.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In case of DRDAStatement, the following variables are not reset:&lt;br/&gt;
+     * 1. database - This variable gets initialized in the constructor and by&lt;br/&gt;
+     * call to setDatabase.&lt;br/&gt;
+     * 2. members which get initialized in setPkgnamcsn (pkgnamcsn, pkgcnstkn, &lt;br/&gt;
+     * pkgid, pkgsn, isolationLevel, cursorName). pkgnamcsn is the key used to &lt;br/&gt;
+     * find if the DRDAStatement can be re-used. Hence its value will not change &lt;br/&gt;
+     * when the object is re-used.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;close() methods are changed to only close and dereference objects.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;DRDAStatement.rsClose() method is not used in close() or reset(). This method has some checks which were causing the method to return without resetting currentDrdaRs. Now, close() calls currentDrdaRs.close() and reset() calls currentDrdaRs.reset().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In Database.newDrdaStatement, close() method is called followed by reset() when the server finds the statement can be re-used.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Initially, I was thinking reset should also call close methods for the jdbc objects instead of just resetting them to null so that the jdbc objects get cleaned up properly if just reset() is called. Any comments on how it is done now? I was also thinking about calling reset at places where DRDAStatement.initialize is currently called to re-use default statements. On looking more into the code, I find default statements are different in the way they get initialized and used. e.g: stmt variable used in default statement is created only once in Database.makeConnection. I have to see the usage of default statements to see what exactly it means to re-initialize them. &lt;/p&gt;

&lt;p&gt;There are some TODO items identified in discussion with Knut and Kathey in the following mail thread: &lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/-DRDA-Question-about-DRDAStatement.initialize%28%29-method-t1177861.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-DRDA-Question-about-DRDAStatement.initialize%28%29-method-t1177861.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TODOs:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add the repro to test suite.&lt;/li&gt;
	&lt;li&gt;pkgcnstkn, pkgid, pkgsn variables can be removed from DRDAStatement since these are derived from pkgnamcsn object.&lt;/li&gt;
	&lt;li&gt;Look into what is required by initialize() of default statement. Currently, initialize just calls setTypDefValues().&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I ran my repro with this patch. derbyall is not complete. I will update with results of test run later. Please take a look at this patch. Thanks.&lt;/p&gt;</comment>
                            <comment id="12367841" author="deepa" created="Mon, 27 Feb 2006 02:41:12 +0000"  >&lt;p&gt;Attaching &apos;derby1002-patch1-v1.diff&apos;. No changes from the draft patch. Ran derbyall with the patch (3 failures also seen in nightlies). I have also run derbynetclientmats 10 times in a loop with my patch for derby-210 since the problem was found there. &lt;/p&gt;</comment>
                            <comment id="12367843" author="deepa" created="Mon, 27 Feb 2006 02:58:20 +0000"  >&lt;p&gt;Attaching a patch for the test &apos;derby1002-patch2-v1.diff&apos;. This patch adds the test in the repro to lang/procedure.java. This patch has to be committed only after patch1 is reviewed and committed. &lt;/p&gt;

&lt;p&gt;The addtion to the test is a method which creates and uses statements in such a way as to provoke re-use of statements and result sets on network server. Before pacth1, re-use happens incorrectly and this causes the server to close queries wrongly. Without patch1, lang/procedure.java fails with DerbyNetClient framework. With patch1, lang/procedure.java passes with all three frameworks. Tests run with Sun JDK1.4.2 on Windows XP. &lt;/p&gt;

&lt;p&gt;Please look at patch1 and patch2. &lt;/p&gt;

&lt;p&gt;NOTE: Patch2 can be committed only after patch1 has been reviewed and committed&lt;/p&gt;</comment>
                            <comment id="12368008" author="deepa" created="Tue, 28 Feb 2006 03:44:32 +0000"  >&lt;p&gt;Attaching &apos;derby1002-patch2-v2.diff&apos; for Bryans&apos; comments in the following derby-dev mail:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-1002%29-Check-that-DRDAStatement-and-DRDAResultSet-states-are-reset-when-they-are-re-used-p3135530.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-1002%29-Check-that-DRDAStatement-and-DRDAResultSet-states-are-reset-when-they-are-re-used-p3135530.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This patch modifies only one file: lang/procedure.java. With this patch, I have re-run lang/procedure.java. &lt;/p&gt;

&lt;p&gt;Please take a look at following two patches - patch 1 contains code changes and patch 2 contains tests. These have to be committed together.&lt;/p&gt;

&lt;p&gt;------------------------------------------&lt;br/&gt;
1. derby1002-patch1-v1&lt;br/&gt;
------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Adds reset() methods to DRDAStatement and DRDAResultSet objects. The purpose of reset method is to reset the states of all variables so that the objects can be re-used and will not have left-over states.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In case of DRDAStatement, the following variables are not reset:&lt;br/&gt;
+ * 1. database - This variable gets initialized in the constructor and by&lt;br/&gt;
+ * call to setDatabase.&lt;br/&gt;
+ * 2. members which get initialized in setPkgnamcsn (pkgnamcsn, pkgcnstkn,&lt;br/&gt;
+ * pkgid, pkgsn, isolationLevel, cursorName). pkgnamcsn is the key used to&lt;br/&gt;
+ * find if the DRDAStatement can be re-used. Hence its value will not change&lt;br/&gt;
+ * when the object is re-used.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;close() methods are changed to only close and dereference objects.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;DRDAStatement.rsClose() method is not used in close() or reset(). This method has some checks which were causing the method to return without resetting currentDrdaRs. Now, close() calls currentDrdaRs.close() and reset() calls currentDrdaRs.reset().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In Database.newDrdaStatement, close() method is called followed by reset() when the server finds the statement can be re-used.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;------------------------------------------&lt;br/&gt;
2. derby1002-patch2-v2&lt;br/&gt;
------------------------------------------&lt;br/&gt;
Modifies test lang/procedure.java. Adds a method &apos;setupStatementReuse&apos; which creates and uses statements in such a way as to provoke re-use of statements and result sets on network server. This method is called from tests for jira-491 and &apos;testImplicitClose&apos;.&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------------------------------&lt;br/&gt;
Remaining TODOs for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1002&quot; title=&quot;Check that DRDAStatement and DRDAResultSet states are reset when they are re-used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1002&quot;&gt;&lt;del&gt;DERBY-1002&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
------------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;pkgcnstkn, pkgid, pkgsn variables can be removed from DRDAStatement since these are derived from pkgnamcsn object.&lt;/li&gt;
	&lt;li&gt;Look into what is required by initialize() of default statement. Currently, initialize just calls setTypDefValues(). Once the purpose of this method is confirmed, we may need to modify the comments at places it is currently called.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;NOTE: patch 1 contains code changes and patch 2 contains tests. These have to be committed together.&lt;/p&gt;</comment>
                            <comment id="12370255" author="deepa" created="Tue, 14 Mar 2006 06:13:49 +0000"  >&lt;p&gt;There are two minor todo items for this issue. I am not working on them currently, hence unassigning myself.&lt;/p&gt;</comment>
                            <comment id="12415173" author="deepa" created="Thu, 8 Jun 2006 01:09:04 +0100"  >&lt;p&gt;Unchecking patch available check box as the patches submitted so far for this issue were committed. Also, this issue no longer blocks &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-210&quot; title=&quot;Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-210&quot;&gt;DERBY-210&lt;/a&gt;. I do not see a way how I can &quot;unlink&quot; these issues in JIRA.&lt;/p&gt;</comment>
                            <comment id="12415175" author="deepa" created="Thu, 8 Jun 2006 01:20:33 +0100"  >&lt;p&gt;Just after posting this, I found I can delete links by using &quot;Manage Links&quot;. I have removed the links.&lt;/p&gt;</comment>
                            <comment id="12415898" author="deepa" created="Tue, 13 Jun 2006 03:14:09 +0100"  >&lt;p&gt;Patch 1 and 2 have been committed to trunk as well as 10.1 branch.&lt;/p&gt;</comment>
                            <comment id="12415957" author="fuzzylogic" created="Tue, 13 Jun 2006 14:12:20 +0100"  >&lt;p&gt;This has been partially fixed in 10.1.3. I&apos;m thinking the right thing to do is mark it affects 10.1.3, then move the FixIn for the issue out to 10.1.4 and make a note of the partial fix in the release notes. Unless anyone has any objections, that&apos;s the course I&apos;ll take when putting together the release notes.&lt;/p&gt;</comment>
                            <comment id="12416012" author="kmarsden" created="Tue, 13 Jun 2006 21:07:32 +0100"  >&lt;p&gt;Deepa said:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Patch 1 and 2 have been committed to trunk as well as 10.1 branch.&lt;br/&gt;
Andrew said:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; This has been partially fixed in 10.1.3.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;What hasn&apos;t gone to 10.1.x?&lt;/p&gt;</comment>
                            <comment id="12416016" author="deepa" created="Tue, 13 Jun 2006 21:45:08 +0100"  >&lt;p&gt;The actual issue reported in this JIRA is fixed. There were some code cleanup TODOs as noted in previous comment:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;pkgcnstkn, pkgid, pkgsn variables can be removed from DRDAStatement since these are derived from pkgnamcsn object.&lt;/li&gt;
	&lt;li&gt;Look into what is required by initialize() of default statement. Currently, initialize just calls setTypDefValues(). Once the purpose of this method is confirmed, we may need to modify the comments at places it is currently called.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I had not resolved this issue in trunk or 10.1 because of these TODO items. To avoid confusion, I will mark this issue fixed and open a minor issue for code cleanup.&lt;/p&gt;</comment>
                            <comment id="12416022" author="deepa" created="Tue, 13 Jun 2006 22:42:31 +0100"  >&lt;p&gt;Resolved by svn revisions 381937 in trunk (10.2) and 408612 in 10.1 branch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12323398" name="derby1002-patch1-draft1.diff" size="7014" author="deepa" created="Sat, 25 Feb 2006 10:40:24 +0000"/>
                            <attachment id="12323399" name="derby1002-patch1-draft1.status" size="187" author="deepa" created="Sat, 25 Feb 2006 10:40:24 +0000"/>
                            <attachment id="12323427" name="derby1002-patch1-v1.diff" size="7014" author="deepa" created="Mon, 27 Feb 2006 02:41:12 +0000"/>
                            <attachment id="12323428" name="derby1002-patch1-v1.status" size="187" author="deepa" created="Mon, 27 Feb 2006 02:41:12 +0000"/>
                            <attachment id="12323465" name="derby1002-patch2-v2.diff" size="4080" author="deepa" created="Tue, 28 Feb 2006 03:44:32 +0000"/>
                            <attachment id="12323466" name="derby1002-patch2-v2.status" size="85" author="deepa" created="Tue, 28 Feb 2006 03:44:32 +0000"/>
                            <attachment id="12323335" name="derby1002.java" size="6648" author="deepa" created="Fri, 24 Feb 2006 04:01:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jun 2006 13:12:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22254</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy164v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>