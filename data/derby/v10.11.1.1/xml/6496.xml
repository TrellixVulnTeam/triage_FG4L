<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6496/DERBY-6496.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6496] Optional tool registration may fail because the CompilerContext is not always available at execution time.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6496</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;For reasons which elude me, the CompilerContext is sometimes available at execution time and sometimes not. When the CompilerContext is not available at execution time, optional tool loading fails on an NPE:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.catalog.Java5SystemProcedures.SYSCS_REGISTER_TOOL(Java5SystemProcedures.java:104)&lt;br/&gt;
	at org.apache.derby.exe.ac4d3680a5x0144x93adx0136xffffe1d7aa3e0.g0(Unknown Source)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:470)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:349)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1338)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12698951">DERBY-6496</key>
            <summary>Optional tool registration may fail because the CompilerContext is not always available at execution time.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Mar 2014 19:24:22 +0000</created>
                <updated>Wed, 22 Oct 2014 19:15:04 +0100</updated>
                            <resolved>Wed, 22 Oct 2014 19:15:04 +0100</resolved>
                                    <version>10.11.1.1</version>
                                    <fixVersion>10.10.2.1</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13921282" author="rhillegas" created="Wed, 5 Mar 2014 19:35:26 +0000"  >&lt;p&gt;Attaching derby-6496-01-aa-useClassFactoryContext.diff. This patch makes the optional tool loader get the ClassFactory out of the ClassFactoryContext rather than the CompilerContext. Hopefully, that is a more reliable source for class factories. I am running tests now.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;/p&gt;

&lt;p&gt;The fix.&lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/Test_6496.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java&lt;/p&gt;

&lt;p&gt;A test case which fails without the fix but succeeds with it.&lt;/p&gt;</comment>
                            <comment id="13921335" author="knutanders" created="Wed, 5 Mar 2014 20:04:30 +0000"  >&lt;p&gt;This might be the same bug as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6442&quot; title=&quot;NPE when loading optional tools from multiple threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6442&quot;&gt;&lt;del&gt;DERBY-6442&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13921448" author="rhillegas" created="Wed, 5 Mar 2014 21:36:35 +0000"  >&lt;p&gt;Attaching a second rev of the patch, derby-6496-01-ab-useClassFactoryContext.diff. This rev makes the two cases in the test symmetric. The test failed when run in the full suite, probably due to a test-case ordering issue. I will re-run the tests.&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous rev.&lt;/p&gt;</comment>
                            <comment id="13921917" author="jira-bot" created="Thu, 6 Mar 2014 02:25:55 +0000"  >&lt;p&gt;Commit 1574752 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1574752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1574752&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6496&quot; title=&quot;Optional tool registration may fail because the CompilerContext is not always available at execution time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6496&quot;&gt;&lt;del&gt;DERBY-6496&lt;/del&gt;&lt;/a&gt;: Fix NPE while loading optional tools; tests passed cleanly on derby-6496-01-ab-useClassFactoryContext.diff.&lt;/p&gt;</comment>
                            <comment id="13922174" author="knutanders" created="Thu, 6 Mar 2014 08:51:27 +0000"  >&lt;p&gt;The fix makes the repro for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6442&quot; title=&quot;NPE when loading optional tools from multiple threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6442&quot;&gt;&lt;del&gt;DERBY-6442&lt;/del&gt;&lt;/a&gt; pass too, so it seems they indeed do have the same root cause. Thanks for fixing it.&lt;/p&gt;

&lt;p&gt;I was a little confused by the test case, though. The comments indicate that it tests something related to granting permissions, but I don&apos;t see anything permission-related in the actual test.&lt;/p&gt;

&lt;p&gt;I wonder if the test might be clearer if the two test methods are merged into one test method. In its current shape, someone without context might see that the two test methods are identical, think that the second one is redundant, and remove it.&lt;/p&gt;

&lt;p&gt;Is it essential for the test that the connections are opened as the TEST_DBO user? If not, it&apos;s probably better to use openDefaultConnection() instead of openUserConnection(TEST_DBO).&lt;/p&gt;

&lt;p&gt;Nit: Most of the imports in the test are unused, and org.apache.derbyTesting.junit.JDBC is imported three times.&lt;/p&gt;</comment>
                            <comment id="13922188" author="knutanders" created="Thu, 6 Mar 2014 09:12:38 +0000"  >&lt;p&gt;I think I understand why the compiler context is sometimes available at execution time. It shouldn&apos;t be available, but there is an optimization that prevents the topmost compiler context from being removed from the stack when it&apos;s popped. Instead, it just marks the context as unused so that it can be reused later. See the methods firstOnStack(), isFirstOnStack(), setInUse(), getInUse() in CompilerContext.&lt;/p&gt;

&lt;p&gt;If the connection has done some compilation before the procedure is executed, the compiler context will be available. (But its getInUse() method will return false, so it&apos;s not in a valid state.) In the failing case, a fresh connection has been opened, and the compiled statement is already available in the statement cache, so no compilation happens before the procedure is executed, and the compiler context won&apos;t be available.&lt;/p&gt;</comment>
                            <comment id="13922313" author="knutanders" created="Thu, 6 Mar 2014 11:04:22 +0000"  >&lt;p&gt;I disabled the optimization in my sandbox, so that popCompilerContext() always removed the context from the stack, and ran the full regression test suite to see if we try to access the compiler context at execution time any other places in the code. There was one failure in OptionalToolsTest.test_04_customOptimizerTrace() which suggests that we need a similar fix in OptimizerTracer.loadTool().&lt;/p&gt;

&lt;p&gt;I was able to reproduce that problem with a clean trunk as well:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.11
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;
ij&amp;gt; call syscs_util.syscs_register_tool(&apos;optimizerTracing&apos;, true, &apos;custom&apos;, &apos;org.apache.derbyTesting.functionTests.tests.lang.DummyOptTrace&apos;);
0 rows inserted/updated/deleted
ij&amp;gt; call syscs_util.syscs_register_tool(&apos;optimizerTracing&apos;, false);
0 rows inserted/updated/deleted
ij&amp;gt; connect &apos;jdbc:derby:memory:db&apos;;
ij(CONNECTION1)&amp;gt; call syscs_util.syscs_register_tool(&apos;optimizerTracing&apos;, true, &apos;custom&apos;, &apos;org.apache.derbyTesting.functionTests.tests.lang.DummyOptTrace&apos;);
ERROR 38000: The exception &apos;java.sql.SQLException&apos; was thrown while evaluating an expression.
ERROR (no SQLState): (no message)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;derby.log tells that the root cause is a NullPointerException in OptimizerTracer.loadTool():&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.lang.NullPointerException
	at org.apache.derby.impl.sql.compile.OptimizerTracer.loadTool(OptimizerTracer.java:111)
	at org.apache.derby.catalog.Java5SystemProcedures.SYSCS_REGISTER_TOOL(Java5SystemProcedures.java:116)
	at org.apache.derby.exe.ac4d3680a5x0144x970cx763cx00000d4d4fe50.g0(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(ReflectMethod.java:46)
	at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(CallStatementResultSet.java:75)
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:470)
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:349)
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1337)
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:704)
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:631)
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:527)
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:369)
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)
	at org.apache.derby.tools.ij.main(ij.java:59)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13922444" author="dagw" created="Thu, 6 Mar 2014 12:42:38 +0000"  >&lt;blockquote&gt;

&lt;p&gt;If the connection has done some compilation before the procedure is executed, the compiler context will be available. (But its getInUse() method will return false, so it&apos;s not in a valid state.)&lt;/p&gt;
&lt;/blockquote&gt; 

&lt;p&gt;Why is its usage allowed when it&apos;s&#160;not in a valid state, though? No check?&lt;/p&gt;
</comment>
                            <comment id="13922461" author="rhillegas" created="Thu, 6 Mar 2014 13:00:24 +0000"  >&lt;p&gt;Thanks for taking a look at the first rev of the patch, Knut. I noticed the goofy naming of the test cases also and renamed them to something bland in the second rev. To answer your other questions:&lt;/p&gt;

&lt;p&gt;1) Yes, I found it was necessary to open the connection as TEST_DBO. The bug was not popped when I used the default connection.&lt;/p&gt;

&lt;p&gt;2) And I found it was also necessary to separate the two tool-loadings into distinct test-cases. When combined into a single test case, the bug did not pop.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at OptimizerTracer.loadTool(). Thanks for finding that.&lt;/p&gt;</comment>
                            <comment id="13922518" author="rhillegas" created="Thu, 6 Mar 2014 13:47:33 +0000"  >&lt;p&gt;Attaching derby-6496-02-aa-optimizerTracer.diff. This patch fixes the corresponding problem which Knut found in OptimizerTracer. I am running tests now.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/OptimizerTracer.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/Test_6496.java&lt;/p&gt;</comment>
                            <comment id="13922531" author="knutanders" created="Thu, 6 Mar 2014 13:58:14 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1) Yes, I found it was necessary to open the connection as TEST_DBO. The bug was not popped when I used the default connection.&lt;/p&gt;

&lt;p&gt;2) And I found it was also necessary to separate the two tool-loadings into distinct test-cases. When combined into a single test case, the bug did not pop.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How odd. It seems to reproduce in a single test case in my environment. Also with the default user:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt;  void    test_001()
        &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception
    {
        Connection c1 = openDefaultConnection();
        goodStatement( c1, LOAD_TOOL );
        goodStatement( c1, UNLOAD_TOOL );

        Connection c2 = openDefaultConnection();
        goodStatement( c2, LOAD_TOOL );
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13922536" author="rhillegas" created="Thu, 6 Mar 2014 14:01:34 +0000"  >&lt;p&gt;Thanks, Knut. That&apos;s not the experiment I ran. I used the same connection for both runs of the test. Feel free to simplify the test if you want. Thanks.&lt;/p&gt;</comment>
                            <comment id="13922666" author="jira-bot" created="Thu, 6 Mar 2014 15:48:25 +0000"  >&lt;p&gt;Commit 1574927 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1574927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1574927&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6496&quot; title=&quot;Optional tool registration may fail because the CompilerContext is not always available at execution time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6496&quot;&gt;&lt;del&gt;DERBY-6496&lt;/del&gt;&lt;/a&gt;: Fix NPE in loading of the optimizer tracing tool; tests passed cleanly on derby-6496-02-aa-optimizerTracer.diff.&lt;/p&gt;</comment>
                            <comment id="13922675" author="knutanders" created="Thu, 6 Mar 2014 15:58:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;&amp;gt; If the connection has done some compilation before the procedure is&lt;br/&gt;
&amp;gt; executed, the compiler context will be available. (But its&lt;br/&gt;
&amp;gt; getInUse() method will return false, so it&apos;s not in a valid state.)&lt;/p&gt;

&lt;p&gt;Why is its usage allowed when it&apos;s not in a valid state, though? No check?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s right. ContextService.getContext(String) doesn&apos;t know about the&lt;br/&gt;
CompilerContext.getInUse() method, since it&apos;s not part of the Context&lt;br/&gt;
interface. The reuse is handled at a higher level. It would have been&lt;br/&gt;
more robust, I suppose, if it were handled inside of the&lt;br/&gt;
ContextManager, so that ContextService.getContext() had returned null&lt;br/&gt;
instead of an invalid context.&lt;/p&gt;</comment>
                            <comment id="13922702" author="knutanders" created="Thu, 6 Mar 2014 16:23:15 +0000"  >&lt;p&gt;Thanks, Rick. That makes sense.&lt;/p&gt;

&lt;p&gt;I&apos;ve simplified the test and also added a comment based on our updated understanding of the bug explaining the repro. See the attached simplify-test.diff. I&apos;ve verified that the test cases still reproduce the bugs.&lt;/p&gt;</comment>
                            <comment id="13922704" author="jira-bot" created="Thu, 6 Mar 2014 16:23:30 +0000"  >&lt;p&gt;Commit 1574946 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1574946&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1574946&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6496&quot; title=&quot;Optional tool registration may fail because the CompilerContext is not always available at execution time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6496&quot;&gt;&lt;del&gt;DERBY-6496&lt;/del&gt;&lt;/a&gt;: Simplify the test case&lt;/p&gt;</comment>
                            <comment id="14013695" author="rhillegas" created="Fri, 30 May 2014 15:37:53 +0100"  >&lt;p&gt;I believe that work on this issue is done. Resolving.&lt;/p&gt;</comment>
                            <comment id="14178609" author="myrna" created="Tue, 21 Oct 2014 17:40:01 +0100"  >&lt;p&gt;reopening for evaluation backport to 10.10&lt;/p&gt;</comment>
                            <comment id="14179430" author="jira-bot" created="Wed, 22 Oct 2014 01:56:22 +0100"  >&lt;p&gt;Commit 1633504 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=myrna&quot; class=&quot;user-hover&quot; rel=&quot;myrna&quot;&gt;Myrna van Lunteren&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1633504&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1633504&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6496&quot; title=&quot;Optional tool registration may fail because the CompilerContext is not always available at execution time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6496&quot;&gt;&lt;del&gt;DERBY-6496&lt;/del&gt;&lt;/a&gt;; Optional tool registration may fail because the CompilerContext is not always available at execution time.&lt;br/&gt;
   backport of revision 1574752, revision 15749237 and revision 1574946 from trunk.&lt;/p&gt;</comment>
                            <comment id="14180270" author="myrna" created="Wed, 22 Oct 2014 19:15:04 +0100"  >&lt;p&gt;Backport to 10.10 complete. Resetting to original owner and closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12686788">DERBY-6442</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12746192">DERBY-6759</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12698380">DERBY-6492</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12686788">DERBY-6442</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12632896" name="derby-6496-01-aa-useClassFactoryContext.diff" size="7288" author="rhillegas" created="Wed, 5 Mar 2014 19:35:26 +0000"/>
                            <attachment id="12632917" name="derby-6496-01-ab-useClassFactoryContext.diff" size="7342" author="rhillegas" created="Wed, 5 Mar 2014 21:36:35 +0000"/>
                            <attachment id="12633134" name="derby-6496-02-aa-optimizerTracer.diff" size="5854" author="rhillegas" created="Thu, 6 Mar 2014 13:47:33 +0000"/>
                            <attachment id="12633167" name="simplify-test.diff" size="3206" author="knutanders" created="Thu, 6 Mar 2014 16:23:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Mar 2014 20:04:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377298</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzmv93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377593</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>