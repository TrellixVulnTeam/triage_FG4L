<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:23 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3446/DERBY-3446.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3446] Make ResultSet.getStatement return the correct statement when created by a logical statement</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3446</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;ResultSet.getStatement must return the correct statement, that is the statement that created the result set.&lt;/p&gt;

&lt;p&gt;It is particularly important for result set created by logical statements, as leaking of physical statements can cause all kinds of side effects in a connection pooling environment.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12389250">DERBY-3446</key>
            <summary>Make ResultSet.getStatement return the correct statement when created by a logical statement</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Feb 2008 20:17:09 +0000</created>
                <updated>Mon, 4 May 2009 19:22:35 +0100</updated>
                            <resolved>Wed, 2 Jul 2008 10:21:20 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12571181" author="kristwaa" created="Thu, 21 Feb 2008 20:54:16 +0000"  >&lt;p&gt;&apos;derby-3446-1a_rs_getstatement.diff&apos; is a proposal of how to make ResultSet.getStatement return the correct statement when using logical statements to create the result set. The changes are pretty isolated.&lt;/p&gt;

&lt;p&gt;I think there are alternative approaches, but when I tried one of them it caused massive code changes to classes in both am and net. I observe that the issue is handled in a similar way as in the patch in the embedded driver.&lt;/p&gt;

&lt;p&gt;If you want to run the test with and without the implementing code, remember to also apply the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3329&quot; title=&quot;Enable statement pooling in the client JDBC driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3329&quot;&gt;&lt;del&gt;DERBY-3329&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12571182" author="kristwaa" created="Thu, 21 Feb 2008 20:54:45 +0000"  >&lt;p&gt;Patch 1a ready for review.&lt;/p&gt;</comment>
                            <comment id="12571318" author="knutanders" created="Fri, 22 Feb 2008 09:13:06 +0000"  >&lt;p&gt;The patch looks fine to me. Two small questions:&lt;/p&gt;

&lt;p&gt;Does ResultSet.creatingStatement have to be volatile? It seems like it&apos;s always set before the ResultSet is returned to the user, and not modified later, so I can&apos;t see that there are any threading/visibility issues even if it&apos;s not volatile.&lt;/p&gt;

&lt;p&gt;Have you considered this alternative approach:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;have a field called owner in am.Statement&lt;/li&gt;
	&lt;li&gt;in LogicalStatementEntity&apos;s constructor, cast physicalPS to am.PreparedStatement and set the owner&lt;/li&gt;
	&lt;li&gt;implement am.ResultSet.getStatement() as &quot;if (statement_.owner != null) return statement_.owner; else return statement_;&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I may have overlooked something, but it sounds like this requires even fewer changes, and, more importantly, it&apos;s more robust as it will work automatically if more methods that return ResultSets are added to the JDBC interfaces later.&lt;/p&gt;</comment>
                            <comment id="12571362" author="kristwaa" created="Fri, 22 Feb 2008 11:29:40 +0000"  >&lt;p&gt;Thanks for looking at the patch Knut Anders.&lt;/p&gt;

&lt;p&gt;I think you are correct about the volatile, I will remove it if we end with that approach.&lt;/p&gt;

&lt;p&gt;I like the alternative approach, but I couldn&apos;t implement it exactly as you suggest. Have I misunderstood?&lt;br/&gt;
LogicalStatementEntity does not implement java.sql.Statement, and can&apos;t be set as the owner.  A solution would be to move the setting of the ownership into the subclasses, which would currently also only need to happen once due to the class hierarchy (in LogicalPreparedStatement).&lt;/p&gt;

&lt;p&gt;The other thing that changes, is that the physical statement now has a reference to the logical statement. This could stop the most recently used logical statement from being garbage collected, which is not a big deal I believe. However, I&apos;m wondering if there are other scenarios where this reference could cause side effects / problems?&lt;br/&gt;
I added a reset of the owner to LogicalStatementEntity.close.&lt;br/&gt;
I also moved the tests to lang.ResultSetsFromPreparedStatementTest, to have the code tested for other JVM versions than Java SE 6 as well.&lt;/p&gt;

&lt;p&gt;Have a look at patch (2a) and comment / change it if you want to. I think I like approach 2 better.&lt;/p&gt;</comment>
                            <comment id="12571365" author="knutanders" created="Fri, 22 Feb 2008 11:54:17 +0000"  >&lt;p&gt;Patch 2a is exactly what I was thinking, except I assumed LogicalStatementEntity that was implementing Statement. Since all sub-classes of LogicalStatementEntity are implementing Statement, and LogicalStatementEntity is an abstract class (actually, it&apos;s not declared as abstract, but in reality it is used as an abstract class I think), either of these approaches should work and make the code even simpler:&lt;/p&gt;

&lt;p&gt;  a) Declare LogicalStatementEntity as an abstract class than implements java.sql.Statement, and move calls to setOwner() from the sub-classes&apos; constructors into LSE&apos;s constructor.&lt;/p&gt;

&lt;p&gt;  b) Remove calls to setOwner() from the sub-classes, and do this in LSE&apos;s constructor: physicalPS.setOwner((java.sql.Statement) this);&lt;/p&gt;

&lt;p&gt;I think I prefer (a) since these two approaches are essentially identical, only (a) makes the assumptions verifiable at compile time.&lt;/p&gt;</comment>
                            <comment id="12571372" author="kristwaa" created="Fri, 22 Feb 2008 12:17:22 +0000"  >&lt;p&gt;Attached &apos;derby-3446-2b_rs_getstatement_alternative.diff&apos;.&lt;/p&gt;

&lt;p&gt;a) Actually, I had LogicalStatementEntity as an abstract class, until a tool told me it shouldn&apos;t be because it didn&apos;t have any abstract methods. So I removed the abstract keyword and made the constructor protected instead... I didn&apos;t let LSE implement java.sql.Statement, because I saw no need for it (until now).&lt;/p&gt;

&lt;p&gt;It does make sense with the current plan, and I have implemented approach a in patch 2b.&lt;br/&gt;
Thanks for the input &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m also wondering if it would make sense to refer to the prepared statements as am.PreparedStatement, since casts are starting to pop up in the code. Is the code a little too generic? This would be handled in another issue though, and it needs to investigated.&lt;/p&gt;</comment>
                            <comment id="12571374" author="knutanders" created="Fri, 22 Feb 2008 12:19:32 +0000"  >&lt;p&gt;Regarding gc, we don&apos;t do any clean-up in the logical statement&apos;s finalizer, and the only resource the logical statement holds on to is the physical statement. This means that the reference from the physical statement which could keep the logical statement alive a while longer, only affects the lifetime of the physical statement. So it&apos;s kind of a self reference, and once all other references to the physical statement are gone, it can be gc&apos;ed (except when the logical statement is still open and referenced, but that&apos;s not changed with this patch). If it turns out to be a problem, it can probably be fixed easily with a weak reference.&lt;/p&gt;

&lt;p&gt;If the user remembers to close the logical statement there will definitely not be any problem at all, since you reset the reference in LSE.close().&lt;/p&gt;</comment>
                            <comment id="12571398" author="knutanders" created="Fri, 22 Feb 2008 13:11:40 +0000"  >&lt;p&gt;+1 to 2b&lt;/p&gt;

&lt;p&gt;I think you are right that it would make sense to refer to the PreparedStatements as am.PreparedStatement. This cache is probably going to be tied to the client driver anyway, and in the client driver you don&apos;t get more generic than the am (&apos;Abstract Machine&apos;) package... And as long as you need to cast to am.PreparedStatement, it&apos;s probably better to declare them as am.PreparedStatement (if nothing else, avoiding the casts gives better compile-time error checking).&lt;/p&gt;</comment>
                            <comment id="12572039" author="kristwaa" created="Mon, 25 Feb 2008 09:57:28 +0000"  >&lt;p&gt;Attached &apos;derby-3446-2c_rs_getstatement_alternative.diff&apos;, which is the same as 2b except the tests have been removed. I don&apos;t think the tests are in the correct location, as they will only be executed for the embedded driver with the current patch. I will a also look into enabling the tests for both CPDS and XADS.&lt;br/&gt;
I will see if there is a better place for the tests.&lt;/p&gt;

&lt;p&gt;Committed patch 2c to trunk with revision 630784.&lt;/p&gt;</comment>
                            <comment id="12609516" author="kristwaa" created="Tue, 1 Jul 2008 11:08:51 +0100"  >&lt;p&gt;&apos;derby-3446-3a-stmtpool_test.diff&apos; adds the two tests to jdbcapi.StatementPoolingTest. The case of non-statement pooling environments is already tested in several other tests.&lt;/p&gt;

&lt;p&gt;I also tried running the two new tests in a XA environment, and they passed.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12609847" author="kristwaa" created="Wed, 2 Jul 2008 10:20:36 +0100"  >&lt;p&gt;Committed patch 3a to trunk with revision 673327.&lt;br/&gt;
Backported to 10.4 with revision 673329.&lt;/p&gt;

&lt;p&gt;Updated fix versions and fixed typo in the summary.&lt;br/&gt;
The addition of the test concludes the work on this issue.&lt;/p&gt;</comment>
                            <comment id="12612422" author="kristwaa" created="Thu, 10 Jul 2008 10:48:00 +0100"  >&lt;p&gt;Fix implemented, test runs cleanly.&lt;br/&gt;
Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12386516">DERBY-3326</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376167" name="derby-3446-1a_rs_getstatement.diff" size="7355" author="kristwaa" created="Thu, 21 Feb 2008 20:54:16 +0000"/>
                            <attachment id="12376168" name="derby-3446-1a_rs_getstatement.stat" size="226" author="kristwaa" created="Thu, 21 Feb 2008 20:54:16 +0000"/>
                            <attachment id="12376223" name="derby-3446-2a_rs_getstatement_alternative.diff" size="6781" author="kristwaa" created="Fri, 22 Feb 2008 11:29:40 +0000"/>
                            <attachment id="12376224" name="derby-3446-2a_rs_getstatement_alternative.stat" size="382" author="kristwaa" created="Fri, 22 Feb 2008 11:29:40 +0000"/>
                            <attachment id="12376226" name="derby-3446-2b_rs_getstatement_alternative.diff" size="6611" author="kristwaa" created="Fri, 22 Feb 2008 12:17:22 +0000"/>
                            <attachment id="12376392" name="derby-3446-2c_rs_getstatement_alternative.diff" size="3158" author="kristwaa" created="Mon, 25 Feb 2008 09:57:28 +0000"/>
                            <attachment id="12385025" name="derby-3446-3a-stmtpool_test.diff" size="2099" author="kristwaa" created="Tue, 1 Jul 2008 11:08:51 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Feb 2008 09:13:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30857</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0xj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39250</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>