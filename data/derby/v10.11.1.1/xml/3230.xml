<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3230/DERBY-3230.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3230] Selecting data from a Table raises Error XN008: Query processing has been terminated due to an error on the server</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3230</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I got a table (PCLASS) in my database where I cannot select the data via a simple select statement:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If I execute &apos;select * from PCLASS&apos;: XN008: Query processing has been terminated due to an error on the server&lt;/li&gt;
	&lt;li&gt;If I execute &apos;select * from PCLASS order by CLASSNAME&apos;: it works&lt;/li&gt;
	&lt;li&gt;If I add or remove only one row to/from the table: it works&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If I use the embedded driver everything works fine. But as soon as I use the derby network client to access the database, this problem occurs.&lt;/p&gt;

&lt;p&gt;This is very odd. I spent a lot of time to do some research on this behavior because I could not believe that the network client produces errors depending on the data contained in a table. But after all it looks like I managed to fill the table with an exact amount of data that causes this error to arise.&lt;/p&gt;

&lt;p&gt;To reproduce the problem download the attached file and follow these instructions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;extract test.rar to $derby.system.home$&lt;/li&gt;
	&lt;li&gt;start derby network server&lt;/li&gt;
	&lt;li&gt;start ji utility and execute the following commands:
	&lt;ul&gt;
		&lt;li&gt;connect to database test using client driver:&lt;br/&gt;
	connect &apos;jdbc:derby://localhost/test;user=ZOL;password=zol&apos;;&lt;/li&gt;
		&lt;li&gt;select content of table PCLASS&lt;br/&gt;
	select * from PCLASS;&lt;br/&gt;
--&amp;gt; Error XN008: Query processing has been terminated due to an error on the server &lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;disconnect from database&lt;br/&gt;
	disconnect;&lt;/li&gt;
		&lt;li&gt;shutdown database &apos;test&apos;&lt;br/&gt;
	connect &apos;jdbc:derby://localhost/test;user=ZOL;password=zol;shutdown=true&apos;;&lt;/li&gt;
		&lt;li&gt;connect to database &apos;test&apos; using embedded driver:&lt;br/&gt;
	connect &apos;jdbc:derby:test;user=ZOL;password=zol&apos;;&lt;/li&gt;
		&lt;li&gt;select content of table PCLASS&lt;br/&gt;
	select * from PCLASS;&lt;br/&gt;
--&amp;gt; everything o.k.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>Windows XP</environment>
        <key id="12383297">DERBY-3230</key>
            <summary>Selecting data from a Table raises Error XN008: Query processing has been terminated due to an error on the server</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="s_huber">Stefan Huber</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Nov 2007 09:50:35 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:09 +0000</updated>
                            <resolved>Thu, 17 Jan 2008 18:11:24 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12545863" author="bryanpendleton" created="Tue, 27 Nov 2007 14:52:55 +0000"  >&lt;p&gt;What is the error that you get on the server? Can you look in derby.log?&lt;/p&gt;</comment>
                            <comment id="12545878" author="s_huber" created="Tue, 27 Nov 2007 15:46:23 +0000"  >&lt;p&gt;Sorry, but I forgot to mention that there is no error reported in the server log file. &lt;br/&gt;
I tried it with the &quot;derby.drda.debug&quot; property set to &quot;true&quot; and i got pretty much output in derby.log. But no errors or exceptions were reported.&lt;br/&gt;
I also tried to use the debug libraries to get more information on the error, but there were still  no error messages. &lt;br/&gt;
All the rows of the table are reported in derby.log. This is one of the reasons why I believe that it could be a client problem. I used the debugger on the client side and got to the line in method&lt;br/&gt;
        org.apache.derby.client.net.NetCursor.checkAndThrowReceivedEndqryrm&lt;br/&gt;
where the exception is thrown. &lt;br/&gt;
At the time when the exception is thrown all data are already transferred to the client side and it seems like there is just one byte missing for method readFdocaOneByte (which is than calling checkAndThrowReceivedEndqryrm because position_ == lastValidBytePosition_) but the server connection is already closed.&lt;/p&gt;

&lt;p&gt;I&apos;ve been working with derby for a long time and i never got such a behavior. I&apos;m curious about an explanation for this.&lt;/p&gt;</comment>
                            <comment id="12546080" author="bryanpendleton" created="Wed, 28 Nov 2007 02:01:19 +0000"  >&lt;p&gt;What tool do I use to unpack a .rar file?&lt;/p&gt;</comment>
                            <comment id="12546082" author="fuzzylogic" created="Wed, 28 Nov 2007 02:22:26 +0000"  >&lt;p&gt;I know of WinRAR for Windows (&lt;a href=&quot;http://www.rarlab.com/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.rarlab.com/&lt;/a&gt;), and there&apos;s GNU unrar for the various Unix OSes.&lt;/p&gt;</comment>
                            <comment id="12546090" author="bryanpendleton" created="Wed, 28 Nov 2007 03:21:28 +0000"  >&lt;p&gt;Thanks Andrew, WinRAR worked fine.&lt;/p&gt;

&lt;p&gt;I was able to reproduce the problem with the current trunk code and the provided test.rar file.&lt;/p&gt;</comment>
                            <comment id="12546096" author="bryanpendleton" created="Wed, 28 Nov 2007 04:12:22 +0000"  >&lt;p&gt;Stepping through the code on the server side is interesting. When the entire dataset is fetched&lt;br/&gt;
via IJ, it just so happens that the last row ends up at position 32706 in the buffer, meaning that&lt;br/&gt;
there is 61 bytes of space available in the buffer. But by the time DRDAConnThread.doneData()&lt;br/&gt;
has finished writing the various bits and pieces of housekeeping data to the end of the buffer,&lt;br/&gt;
it has gone beyond 32767 bytes and hence needs to be split. The splitQRYDTA processing&lt;br/&gt;
then ends up splitting the QRYDTA block in the midst of the doneData SQLCAGRP bytes,&lt;br/&gt;
rather than in the middle of some normal row data, which is how most QRYDTA splits work.&lt;br/&gt;
The client code then gets into the processing of the doneData SQLCAGRP, but does not expect&lt;br/&gt;
that the DRDA response block might have been split there, so instead of requesting the&lt;br/&gt;
remainder of the block with a CNTQRY, the client code throws an exception.&lt;/p&gt;

&lt;p&gt;I&apos;m sorry, I know that the above is kind of dense and jargon-y. I think that the bottom line is that&lt;br/&gt;
this problem is closely related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-614&quot; title=&quot;Execution failed because of a Distributed Protocol Error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-614&quot;&gt;&lt;del&gt;DERBY-614&lt;/del&gt;&lt;/a&gt; and has to do with the fact that this query had&lt;br/&gt;
the bad luck to need to split the query results at a point that was:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;after the last row of the results&lt;/li&gt;
	&lt;li&gt;but before the end of the message&lt;/li&gt;
	&lt;li&gt;and hence at a place where the client code didn&apos;t expect the block to have been split.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12546098" author="bryanpendleton" created="Wed, 28 Nov 2007 04:17:37 +0000"  >&lt;p&gt;It may be an off-by-one bug; it appears that the final buffer is exactly 1 byte too long,&lt;br/&gt;
and the splitting of the buffer splits it into a 32767 byte portion and a 1 byte portion.&lt;/p&gt;</comment>
                            <comment id="12557482" author="kmarsden" created="Wed, 9 Jan 2008 23:44:35 +0000"  >&lt;p&gt;Thanks Bryan for your comments on this issue so far.&lt;/p&gt;

&lt;p&gt;I am taking a look at this issue and have a question about the position logic in the client. The failure occurs in this code because position_ = lastValidBytePosition_ in the following code in NetCursor.&lt;/p&gt;

&lt;p&gt;  private int readFdocaOneByte() throws org.apache.derby.client.am.DisconnectException, SqlException {&lt;br/&gt;
        // For singleton select, the complete row always comes back, even if multiple query blocks are required,&lt;br/&gt;
        // so there is no need to drive a flowFetch (continue query) request for singleton select.&lt;br/&gt;
        if (position_ == lastValidBytePosition_) {&lt;br/&gt;
            // Check for ENDQRYRM, throw SqlException if already received one.&lt;br/&gt;
            checkAndThrowReceivedEndqryrm();&lt;br/&gt;
     .......&lt;/p&gt;

&lt;p&gt;There is no javadoc for lastValidBytePosition, nor currentRowPosition and nextRowPosition which seem to be at play here as well. I haven&apos;t really been able to figure it all out from the code yet.&lt;/p&gt;

&lt;p&gt;  I&apos;d most appreciate an explanation of the interplay of the various positions if someone understands it, so I can understand why position == lastValidBytePosition and why that is a bad thing in this case.  I will add any explanation as comments to the code.&lt;/p&gt;


&lt;p&gt;Kathey&lt;/p&gt;

</comment>
                            <comment id="12559124" author="kmarsden" created="Tue, 15 Jan 2008 17:11:18 +0000"  >&lt;p&gt;In order to better understand what is going on here I thought I would try to develop a repro without the user database.  I thought all that was needed was to produce data of the correct size approaching 32K. I wrote this not very intelligent program to just increment the size of a varchar by 1 to try to find the correct size and reproduce the error, but was unsuccessful in reproducing it.  Anyway, I am quite out of ideas on how to approach this issue, either in creating a reproduction or fixing and would most appreciate advice on next steps.  &lt;/p&gt;</comment>
                            <comment id="12559160" author="bryanpendleton" created="Tue, 15 Jan 2008 18:26:14 +0000"  >&lt;p&gt;Hi Kathey, I think that you are proceeding along the right course; developing a&lt;br/&gt;
standalone repro seems like the right plan. I agree that it should be very data&lt;br/&gt;
dependent.  Unfortunately, I am temporarily without a computer as my main&lt;br/&gt;
computer has died, so I&apos;m kind of handicapped until I get another computer set up.&lt;/p&gt;

&lt;p&gt;Can you (using a debugger) examine how the server behaves with your repro?&lt;br/&gt;
In particular, I thought it was particularly fascinating that with the original repro&lt;br/&gt;
we had a call to splitQRYDTA made from doneData, because I had never seen&lt;br/&gt;
that case happen before while stepping through the server code. With your&lt;br/&gt;
repro, can you tell whether there is a splitQRYDTA call made from doneData?&lt;/p&gt;</comment>
                            <comment id="12559226" author="kmarsden" created="Tue, 15 Jan 2008 20:53:02 +0000"  >&lt;p&gt;Thank you Bryan for the help.  I see that the reason my repro does not trigger the problem is because the server proactively ends the DSS in this code because it would not be able to fit another 15K row.   If I comment out &lt;br/&gt;
//				if ((stmt.getBlksize() - endLength ) &amp;lt; rowsize)&lt;br/&gt;
//					getMoreData = false;&lt;/p&gt;

&lt;p&gt;I can trigger the problem. I will work to adjust my rowsizes so I don&apos;t trigger this condition.&lt;/p&gt;

&lt;p&gt;			// if we don&apos;t have enough room for a row of the &lt;br/&gt;
			// last row&apos;s size, don&apos;t try to cram it in.&lt;br/&gt;
			// It would get split up but it is not very efficient.&lt;br/&gt;
			if (getMoreData == true)&lt;br/&gt;
			{&lt;br/&gt;
				int endLength = writer.getDSSLength();&lt;br/&gt;
				int rowsize = endLength - startLength;&lt;br/&gt;
				if ((stmt.getBlksize() - endLength ) &amp;lt; rowsize)&lt;br/&gt;
					getMoreData = false;&lt;/p&gt;
</comment>
                            <comment id="12559312" author="kmarsden" created="Wed, 16 Jan 2008 00:48:19 +0000"  >&lt;p&gt;Attached is a repro for this issue without the user database, Repro3230.java.   Thanks Bryan for the help in narrowing the case down.&lt;/p&gt;</comment>
                            <comment id="12559639" author="kmarsden" created="Wed, 16 Jan 2008 19:24:35 +0000"  >&lt;p&gt;Marking as a regression because this passes with 10.1.3.1 client, with 10.4 server.  It fails with 10.2.1.6.  Even with 10.1.3.1, we pass through splitQRYDTA in doneData, so I assume this is a regression in the client being able to handle this case.&lt;/p&gt;</comment>
                            <comment id="12559662" author="kmarsden" created="Wed, 16 Jan 2008 21:10:29 +0000"  >&lt;p&gt;I think this dates back to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-821&quot; title=&quot;Client driver: Implicitly close exhausted result sets on the server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-821&quot;&gt;&lt;del&gt;DERBY-821&lt;/del&gt;&lt;/a&gt; when we added the following code to NetCursor.calculateColumnOffsetsForRow()&lt;br/&gt;
                    if (sqlcode == SqlCode.END_OF_DATA.getCode()) {&lt;br/&gt;
                        setAllRowsReceivedFromServer(true);&lt;/p&gt;

&lt;p&gt;This marked the ResultSet as closed on the server before we sent that final CNTQRY to get the null indicator.   Moving the line &lt;br/&gt;
daNullIndicator = readFdocaOneByte();  up before we do the check and mark the result set as closed, seems to resolve the issue.  I don&apos;t see why this can&apos;t happen sooner rather than later.    I will work up a patch and run some tests.&lt;/p&gt;
</comment>
                            <comment id="12559747" author="kmarsden" created="Thu, 17 Jan 2008 00:01:04 +0000"  >&lt;p&gt;Attached is a patch for this issue.  The solution was to move the retrieval of all of the data associated with the QRYDTA before the ResultSet is marked as closed on the server.&lt;br/&gt;
Ran suites.All and derbynetclientmats.&lt;/p&gt;</comment>
                            <comment id="12559752" author="kmarsden" created="Thu, 17 Jan 2008 00:08:51 +0000"  >&lt;p&gt;Please review derby-3230_diff.txt&lt;/p&gt;</comment>
                            <comment id="12559794" author="bryanpendleton" created="Thu, 17 Jan 2008 03:21:15 +0000"  >&lt;p&gt;The change looks solid to me, Kathey. The new test failed as expected without the&lt;br/&gt;
code fix, and passed as expected with the code fix applied. Thanks for the careful&lt;br/&gt;
research against the different versions to figure out what changed and why; your&lt;br/&gt;
explanation makes good sense to me. +1 to commit.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12373220" name="Repro3230.java" size="2571" author="kmarsden" created="Wed, 16 Jan 2008 00:48:19 +0000"/>
                            <attachment id="12373179" name="TestBoundaries.java" size="1878" author="kmarsden" created="Tue, 15 Jan 2008 17:11:17 +0000"/>
                            <attachment id="12373341" name="derby-3230_diff.txt" size="3334" author="kmarsden" created="Thu, 17 Jan 2008 00:06:25 +0000"/>
                            <attachment id="12373340" name="derby-3230_stat.txt" size="163" author="kmarsden" created="Thu, 17 Jan 2008 00:00:58 +0000"/>
                            <attachment id="12370284" name="test.rar" size="367000" author="s_huber" created="Tue, 27 Nov 2007 09:53:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Nov 2007 14:52:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lvz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37364</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>