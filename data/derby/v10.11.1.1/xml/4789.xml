<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4789/DERBY-4789.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4789] Always apply the bulk-insert optimization when inserting from a table function.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4789</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Inserting from a table function is a lot like importing from a file:&lt;/p&gt;

&lt;p&gt;1) Derby has limited visibility into the size of the external data source.&lt;/p&gt;

&lt;p&gt;2) The user is often trying to import a large data set.&lt;/p&gt;

&lt;p&gt;The import procedures assume that Derby should always apply the bulk-insert optimization when importing from a file. The same assumption seems reasonable whenever a table function appears in the source stream of an INSERT.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12473035">DERBY-4789</key>
            <summary>Always apply the bulk-insert optimization when inserting from a table function.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Sep 2010 14:26:54 +0100</created>
                <updated>Fri, 14 Jun 2013 18:33:15 +0100</updated>
                            <resolved>Thu, 20 Sep 2012 19:54:10 +0100</resolved>
                                                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12905924" author="rhillegas" created="Fri, 3 Sep 2010 15:41:07 +0100"  >&lt;p&gt;Attaching derby-4789-01-ab-alwaysForTableFunctions.diff. This patch enables the bulk-insert optimization when the source stream of an INSERT statement includes a table function. I am running regression tests now.&lt;/p&gt;

&lt;p&gt;This patch does the following:&lt;/p&gt;

&lt;p&gt;1) At the end of optimization of an INSERT statement, bulk-insert is turned on if a user-defined table function is found in the source stream of the INSERT.&lt;/p&gt;

&lt;p&gt;2) No changes are made to bulk-insert itself. New conglomerates are created only if the target table is empty&lt;/p&gt;

&lt;p&gt;The patch is tested using an INSERT from a table function and an INSERT from a view which wraps a table function. In both cases, bulk-insert occurs if the target table is empty.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;------------&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/sql/compile/HasTableFunctionVisitor.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/compile/FromVTI.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/compile/HasNodeVisitor.java&lt;/p&gt;

&lt;p&gt;Creates a new Visitor which reports whether the AST contains a user-defined table function.&lt;/p&gt;


&lt;p&gt;------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/InsertNode.java&lt;/p&gt;

&lt;p&gt;Logic to support (1).&lt;/p&gt;


&lt;p&gt;------------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java&lt;/p&gt;

&lt;p&gt;New test cases.&lt;/p&gt;</comment>
                            <comment id="12905968" author="rhillegas" created="Fri, 3 Sep 2010 18:22:52 +0100"  >&lt;p&gt;Tests ran cleanly for me except for the following Heisenbug in NetworkServerMBeanTest. The problem did not recur when I ran the test standalone. I do not believe this error is related to the changes in this patch:&lt;/p&gt;

&lt;p&gt;There was 1 error:&lt;br/&gt;
1) testAttributeAccumulatedConnectionCount(org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest)java.security.PrivilegedActionException: javax.management.InstanceNotFoundException: org.apache.derby:type=NetworkServer,system=c013800d-012a-d86c-d402-ffffe1d7aa3e&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest.getAttribute(MBeanTest.java:379)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest.testAttributeAccumulatedConnectionCount(NetworkServerMBeanTest.java:93)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: javax.management.InstanceNotFoundException: org.apache.derby:type=NetworkServer,system=c013800d-012a-d86c-d402-ffffe1d7aa3e&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1010)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:627)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:659)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.management.MBeanTest$4.run(MBeanTest.java:382)&lt;br/&gt;
	... 41 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 8905,  Failures: 0,  Errors: 1&lt;/p&gt;</comment>
                            <comment id="12906110" author="lilywei" created="Fri, 3 Sep 2010 22:26:18 +0100"  >&lt;p&gt;Question: I am not totally know whether this should trigger a bulk insert or not. &lt;br/&gt;
It is a self join that wrap a table function in a view. &lt;br/&gt;
When test with bulkInsertTable empty, I got bulk insert by having different conglomeratenumber. &lt;br/&gt;
However, when test by adding the following code:&lt;br/&gt;
        vetBulkInsert&lt;br/&gt;
            (&lt;br/&gt;
             conn,&lt;br/&gt;
             &quot;insert into bulkInsertTable select * from bulkInsertView b where 1 = (select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from bulkInsertView bc where b.column0 &amp;gt; bc.column0)&quot;,&lt;br/&gt;
             true&lt;br/&gt;
             );&lt;br/&gt;
It did not trigger bulk insert. &lt;/p&gt;</comment>
                            <comment id="12906807" author="rhillegas" created="Tue, 7 Sep 2010 15:09:54 +0100"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;I am unable to reproduce your result. I get bulk-insert behavior (a new conglomerate) when I insert into an empty table using a fancier query involving a table function in a view and a self-join:&lt;/p&gt;

&lt;p&gt;  insert into t select * from newEngineEnglish b where 1 = (select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from newEngineEnglish bc where b.messageID &amp;gt; bc.messageID)&lt;/p&gt;

&lt;p&gt;Was the target table empty for your second insert?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12906813" author="rhillegas" created="Tue, 7 Sep 2010 15:20:34 +0100"  >&lt;p&gt;Committed derby-4789-01-ab-alwaysForTableFunctions.diff at subversion revision 993374.&lt;/p&gt;</comment>
                            <comment id="12906834" author="lilywei" created="Tue, 7 Sep 2010 16:26:09 +0100"  >&lt;p&gt;Hi Rick:&lt;br/&gt;
     Thank you so much for looking at my question. &lt;br/&gt;
     When my target table was empty, I do get bulk insert like we both expected.&lt;br/&gt;
It is when I add the test to TableFunctionTest.java like the file I attach, I am getting false instead of true for the same query which indicate it is not using bulk insert. Do we have to clean the table for the test I am inserting to TableFunctionTest.java?&lt;/p&gt;</comment>
                            <comment id="12906870" author="rhillegas" created="Tue, 7 Sep 2010 17:51:59 +0100"  >&lt;p&gt;Thanks for the extra information, Lily. The optimization is only applied if the target table is empty. Please see item (2) in the comment I added when I attached the patch. Thanks.&lt;/p&gt;</comment>
                            <comment id="12907352" author="lilywei" created="Wed, 8 Sep 2010 19:31:53 +0100"  >&lt;p&gt;Hi Rick:&lt;br/&gt;
     You are right. The optimization only applied if the target table is empty. It can be efficient to have optimization when table is not empty. &lt;br/&gt;
     I change my tests so we have one more test if we like. I will see whether I can add more tests. Thanks!&lt;/p&gt;</comment>
                            <comment id="12908566" author="lilywei" created="Sun, 12 Sep 2010 23:11:12 +0100"  >&lt;p&gt;I do add more tests for bulk insert. My hope is to add more tests. Please review it. If it is okay with everybody. I would like to check it in to trunk branch. Thanks!&lt;/p&gt;</comment>
                            <comment id="12908567" author="lilywei" created="Sun, 12 Sep 2010 23:15:37 +0100"  >&lt;p&gt;I forgot to mention I did not find any more issue. Thank to great work of bulk insert. And, I was attaching my version of TableFunctionTest.java instead of the .diff that only include the tests on top of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4789&quot; title=&quot;Always apply the bulk-insert optimization when inserting from a table function.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4789&quot;&gt;&lt;del&gt;DERBY-4789&lt;/del&gt;&lt;/a&gt;-QuestionTest2.diff. Sorry for the confusion. Thanks.&lt;/p&gt;</comment>
                            <comment id="12908765" author="rhillegas" created="Mon, 13 Sep 2010 13:44:18 +0100"  >&lt;p&gt;Thanks for adding more tests, Lily. These look good to me.&lt;/p&gt;</comment>
                            <comment id="13458872" author="mamtas" created="Wed, 19 Sep 2012 18:28:31 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4789&quot; title=&quot;Always apply the bulk-insert optimization when inserting from a table function.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4789&quot;&gt;&lt;del&gt;DERBY-4789&lt;/del&gt;&lt;/a&gt; (Always apply the bulk-insert optimization when inserting from a table function.)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5614&quot; title=&quot;NullPointerException with INSERT INTO [global temporary table] SELECT ... FROM [VTI]&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5614&quot;&gt;&lt;del&gt;DERBY-5614&lt;/del&gt;&lt;/a&gt; (NullPointerException with INSERT INTO &lt;span class=&quot;error&quot;&gt;&amp;#91;global temporary table&amp;#93;&lt;/span&gt; SELECT ... FROM &lt;span class=&quot;error&quot;&gt;&amp;#91;VTI&amp;#93;&lt;/span&gt;)&lt;/p&gt;

&lt;p&gt;The changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5614&quot; title=&quot;NullPointerException with INSERT INTO [global temporary table] SELECT ... FROM [VTI]&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5614&quot;&gt;&lt;del&gt;DERBY-5614&lt;/del&gt;&lt;/a&gt; depend on the changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4789&quot; title=&quot;Always apply the bulk-insert optimization when inserting from a table function.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4789&quot;&gt;&lt;del&gt;DERBY-4789&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Backported both these jiras into 10.6.2.3 with revision 1387685.&lt;/p&gt;</comment>
                            <comment id="13458875" author="mamtas" created="Wed, 19 Sep 2012 18:31:16 +0100"  >&lt;p&gt;Reopening for backport&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12473034">DERBY-4788</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454414" name="DERBY-4789-AddMoreTests3.diff" size="6154" author="lilywei" created="Sun, 12 Sep 2010 23:15:37 +0100"/>
                            <attachment id="12454024" name="DERBY-4789-QuestionTest.diff" size="982" author="lilywei" created="Tue, 7 Sep 2010 16:26:09 +0100"/>
                            <attachment id="12454133" name="DERBY-4789-QuestionTest2.diff" size="1351" author="lilywei" created="Wed, 8 Sep 2010 19:31:53 +0100"/>
                            <attachment id="12454413" name="TableFunctionTest.java" size="90484" author="lilywei" created="Sun, 12 Sep 2010 23:11:12 +0100"/>
                            <attachment id="12453778" name="derby-4789-01-ab-alwaysForTableFunctions.diff" size="12080" author="rhillegas" created="Fri, 3 Sep 2010 15:41:07 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Sep 2010 21:26:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31378</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy09rz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35402</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>