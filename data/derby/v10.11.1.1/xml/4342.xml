<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4342/DERBY-4342.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4342] SQLSTATE 38000 (NullPointerException) at inner self join and value(x1, x2...)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4342</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;create table xyz (c1 int, c2 int);&lt;br/&gt;
insert into xyz values(1,2);&lt;/p&gt;

&lt;p&gt;select * from xyz t1 inner join xyz t2 on t1.c1 = t2.c1 where value(t1.c1, t1.c2) = 1;&lt;/p&gt;



&lt;p&gt;causes the following error:&lt;/p&gt;

&lt;p&gt;FEHLER 38000: Bei der Auswertung eines Ausdrucks wurde die Ausnahme &apos;java.lang.NullPointerException&apos; ausgeloest.&lt;br/&gt;
FEHLER XJ001: Java-Ausnahme: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;</description>
                <environment>WINXP</environment>
        <key id="12432434">DERBY-4342</key>
            <summary>SQLSTATE 38000 (NullPointerException) at inner self join and value(x1, x2...)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="xyz123@quantentunnel.de ">Hubert Garm</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Aug 2009 20:22:10 +0100</created>
                <updated>Fri, 21 Jan 2011 17:52:32 +0000</updated>
                            <resolved>Fri, 25 Sep 2009 21:59:20 +0100</resolved>
                                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12740260" author="dagw" created="Thu, 6 Aug 2009 22:39:02 +0100"  >&lt;p&gt;I was able to reproduce this on trunk. The interesting part of the stack trace is:&lt;br/&gt;
:&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BaseActivation.getColumnFromRow(BaseActivation.java:1451)&lt;br/&gt;
	at org.apache.derby.exe.acf81e0010x0122xf19ex21cdx0000001421800.g0(Unknown Source)&lt;br/&gt;
	at org.apache.derby.exe.acf81e0010x0122xf19ex21cdx0000001421800.e1(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:141)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(JoinResultSet.java:148)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:248)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
	... 10 more&lt;/p&gt;</comment>
                            <comment id="12740262" author="dagw" created="Thu, 6 Aug 2009 22:41:31 +0100"  >&lt;p&gt;Marking &quot;repro attached&quot;, normal urgency, unmarking &quot;newcomer&quot; (this field means the devs consider it easy to fix).&lt;/p&gt;</comment>
                            <comment id="12740293" author="dagw" created="Thu, 6 Aug 2009 23:48:18 +0100"  >&lt;p&gt;Normal join and left outer join raises no error.&lt;/p&gt;

&lt;p&gt;This query variant: &lt;/p&gt;

&lt;p&gt;     select * from xyz t1 right outer  join xyz t2 on t1.c1 = t2.c1 where value(t1.c1, t1.c2) = 1;&lt;/p&gt;

&lt;p&gt;gives an ASSERT on sane build:&lt;/p&gt;

&lt;p&gt;Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED sourceResultSetNumber expected to be &amp;gt;= 0 for T1.C1&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ColumnReference.generateExpression(ColumnReference.java:941)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CoalesceFunctionNode.generateExpression(CoalesceFunctionNode.java:262)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.BinaryOperatorNode.generateExpression(BinaryOperatorNode.java:600)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1521)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JoinNode.getJoinArguments(JoinNode.java:1577)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1555)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JoinNode.generateCore(JoinNode.java:1492)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.HalfOuterJoinNode.generate(HalfOuterJoinNode.java:691)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1390)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ProjectRestrictNode.java:1390)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.generate(ProjectRestrictNode.java:1341)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode.generate(ScrollInsensitiveResultSetNode.java:109)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.generate(CursorNode.java:606)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StatementNode.generate(StatementNode.java:347)&lt;/p&gt;</comment>
                            <comment id="12740296" author="dagw" created="Thu, 6 Aug 2009 23:55:16 +0100"  >&lt;p&gt;This one gives the NPE also:&lt;br/&gt;
    select * from xyz t1 join xyz t2 on t1.c1 = t2.c1 where value(t1.c1, t1.c2) = 1;&lt;/p&gt;</comment>
                            <comment id="12759144" author="knutanders" created="Thu, 24 Sep 2009 16:16:01 +0100"  >&lt;p&gt;I&apos;ve had a look at the INNER JOIN case and compared it with a similar, but working, query where VALUE was replaced by MOD. That is&lt;br/&gt;
    select * from xyz t1 inner join xyz t2 on t1.c1 = t2.c1 where value(t1.c1, t1.c2) = 1&lt;br/&gt;
vs&lt;br/&gt;
    select * from xyz t1 inner join xyz t2 on t1.c1 = t2.c1 where mod(t1.c1, t1.c2) = 1&lt;/p&gt;

&lt;p&gt;The node trees for the queries had the exact same structure (except of course that the CoalesceFunctionNode was replaced by a BinaryArithmeticOperatorNode) after the parsing phase and the bind phase. After the optimize phase, there was one difference: The columns under the BinaryArithmeticOperatorNode (for the MOD query) referenced the base table whereas the columns under the CoalesceFunctionNode (for the VALUE query) referenced the result columns from the JoinNode.&lt;/p&gt;

&lt;p&gt;At the time when these columns are accessed during execution, no rows have propagated from the base tables to the join results, so the VALUE query gets null instead of a row in getColumnFromRow() and fails with NPE.&lt;/p&gt;

&lt;p&gt;The difference between CoalesceFunctionNode and BinaryArithmeticOperatorNode that makes the two queries access the columns differently, is remapColumnReferencesToExpressions(). CFN inherits the method from ValueNode, where it is a no-op. BAON inherits it from BinaryOperatorNode, where remapColumnReferencesToExpressions() is called recursively on the operands.&lt;/p&gt;

&lt;p&gt;I tried to add this method to CFN&lt;/p&gt;

&lt;p&gt;    public ValueNode remapColumnReferencesToExpressions()&lt;br/&gt;
            throws StandardException&lt;br/&gt;
    {&lt;br/&gt;
        for (int i = 0; i &amp;lt; argumentsList.size(); i++) &lt;/p&gt;
{
            ValueNode vn = (ValueNode) argumentsList.elementAt(i);
            vn.remapColumnReferencesToExpressions();
        }
&lt;p&gt;        return this;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;and then the INNER JOIN did not fail and it returned the expected result.&lt;/p&gt;

&lt;p&gt;Unfortunately, the RIGHT OUTER JOIN still raised an assert failure, so either that&apos;s a separate problem, or adding the method was not the right fix. (I did try to compare the node trees for VALUE vs MOD in the outer join case too, and there the two queries produced completely different trees.)&lt;/p&gt;</comment>
                            <comment id="12759539" author="knutanders" created="Fri, 25 Sep 2009 15:12:11 +0100"  >&lt;p&gt;As far as I can see, all node types that have arguments or operands override ValueNode.remapColumnReferencesToExpressions() so that it is called recursively on all arguments/operands. I haven&apos;t been able to find anything indicating that the method was left out of CFN intentionally. The javadoc comment in ValueNode says that it should remap &quot;all ColumnReferences in this tree&quot;, so calling it recursively on the arguments on CFN sounds like the right thing to do.&lt;/p&gt;

&lt;p&gt;I therefore believe that the suggested change in CoalesceFunctionNode is the correct fix for this issue, and the assert failure in the right outer join is probably a different bug. (Note also that a similar NPE with a right outer join, but without VALUE/COALESCE, has been logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4388&quot; title=&quot;NullPointerException in RIGHT JOIN with NOT BETWEEN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4388&quot;&gt;&lt;del&gt;DERBY-4388&lt;/del&gt;&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;The attached patch adds the missing method override to CoalesceFunctionNode, and it also adds a regression test case to CoalesceTest.&lt;/p&gt;</comment>
                            <comment id="12759540" author="knutanders" created="Fri, 25 Sep 2009 15:12:55 +0100"  >&lt;p&gt;All the regression tests ran cleanly. The patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12759724" author="bryanpendleton" created="Fri, 25 Sep 2009 21:15:44 +0100"  >&lt;p&gt;The patch seems fine to me. I think this was just an oversight in CoalesceFunctionNode. Test case looks appropriate. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12759743" author="knutanders" created="Fri, 25 Sep 2009 21:59:20 +0100"  >&lt;p&gt;Thanks for reviewing the patch, Bryan. Committed revision 819006.&lt;/p&gt;

&lt;p&gt;I will file a separate issue for the assert failure in the right outer join and link it to this issue.&lt;/p&gt;</comment>
                            <comment id="12759913" author="knutanders" created="Sat, 26 Sep 2009 16:39:57 +0100"  >&lt;p&gt;For the record, there have also been problems with missing overrides in CoalesceFunctionNode before:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-883&quot; title=&quot;Enhance GROUP BY clause to support expressions instead of just column references.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-883&quot;&gt;&lt;del&gt;DERBY-883&lt;/del&gt;&lt;/a&gt; added missing accept() method&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1574&quot; title=&quot;NullPointerException in UPDATE with COALESCE and subquery&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1574&quot;&gt;&lt;del&gt;DERBY-1574&lt;/del&gt;&lt;/a&gt; added missing preprocess() and printSubNodes() methods&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12760260" author="knutanders" created="Mon, 28 Sep 2009 15:25:27 +0100"  >&lt;p&gt;Merged fix to 10.5 (had to resolve a conflict with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4087&quot; title=&quot;Clean up debug printing of the abstract syntax trees after parsing, binding and optimization &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4087&quot;&gt;&lt;del&gt;DERBY-4087&lt;/del&gt;&lt;/a&gt; manually). Committed revision 819547.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12436597">DERBY-4388</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12436643">DERBY-4389</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12420558" name="derby-4342-1a.diff" size="2500" author="knutanders" created="Fri, 25 Sep 2009 15:12:11 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Aug 2009 21:39:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24198</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37221</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>