<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:39:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1075/DERBY-1075.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1075] Combine the script and the test available for upgrade testing into a java test</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1075</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Separating a part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-514&quot; title=&quot;Integrate upgrade tests into test suite&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-514&quot;&gt;&lt;del&gt;DERBY-514&lt;/del&gt;&lt;/a&gt; into a sub-task. This sub-task is to combine the script &apos;runphases.ksh&apos; and the java file &apos;phaseTester.java&apos; into a single java test. This will help to later add the upgrade tests into the regression suite. Also, this sub-task can be done independent of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1049&quot; title=&quot;make existing derby release jars available for upgrade testing and client/server compatibility testing with derbyall&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1049&quot;&gt;&lt;del&gt;DERBY-1049&lt;/del&gt;&lt;/a&gt; which is blocking &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-514&quot; title=&quot;Integrate upgrade tests into test suite&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-514&quot;&gt;&lt;del&gt;DERBY-514&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12329754">DERBY-1075</key>
            <summary>Combine the script and the test available for upgrade testing into a java test</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12313520">DERBY-514</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deepa">Deepa Remesh</assignee>
                                    <reporter username="deepa">Deepa Remesh</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Mar 2006 06:34:08 +0000</created>
                <updated>Wed, 7 Jun 2006 22:05:20 +0100</updated>
                            <resolved>Wed, 7 Jun 2006 22:05:00 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12368809" author="deepa" created="Sat, 4 Mar 2006 07:17:17 +0000"  >&lt;p&gt;I have written a small java program &apos;loader.java&apos; to test that I can load different version of derby classes using a classloader. After loading a particular version of Derby, I get a connection and check the product version in the connection metadata. I found that I can switch between versions without problems. I also checked that the classloader ignores the settings in the class path and uses only what is specified in the program. So all the following commands result in same output:&lt;/p&gt;

&lt;p&gt;1. java -classpath . loader C:\deepa\Derby\10.1\classes C:\deepa\Derby\trunk\classes&lt;br/&gt;
2. java -classpath .;C:\deepa\Derby\10.1\classes loader C:\deepa\Derby\10.1\classes C:\deepa\Derby\trunk\classes&lt;br/&gt;
3. java -classpath .;C:\deepa\Derby\trunk\classes loader C:\deepa\Derby\10.1\classes C:\deepa\Derby\trunk\classes&lt;/p&gt;

&lt;p&gt;However, I found I cannot use DriverManager to get a connection. The reason I think is this statement from the javadoc &quot;When the method getConnection is called, the DriverManager will attempt to locate a suitable driver from amongst those loaded at initialization and those loaded explicitly using the same classloader as the current applet or application.&quot;. Use of DataSource to get connection works fine. I hope it is okay to proceed by using DataSource. I would appreciate if someone can take a quick look at the attached program and let me know if this is the right direction.&lt;/p&gt;</comment>
                            <comment id="12368824" author="deepa" created="Sat, 4 Mar 2006 09:56:45 +0000"  >&lt;p&gt;Attaching a newer version of test program &apos;loader_v2.java&apos;. I noticed I was creating new classloader for each test instead of re-using the classloader.&lt;/p&gt;</comment>
                            <comment id="12370626" author="deepa" created="Thu, 16 Mar 2006 09:02:01 +0000"  >&lt;p&gt;Attaching  a draft patch &apos;derby-1075-patch1-draft.diff&apos;. This patch combines runphases.ksh and phaseTester.java into a single java class &apos;UpgradeTester&apos;. This patch is only for review and not for commit.&lt;/p&gt;

&lt;p&gt;Summary of patch:&lt;/p&gt;

&lt;p&gt;1. The new class UpgradeTester does the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Creates two class loaders using the jar locations provided for old and new release&lt;/li&gt;
	&lt;li&gt;Switches between these two class loaders to run the different upgrade phases with old or new release.&lt;/li&gt;
	&lt;li&gt;Has a main method which takes following inputs: &amp;lt;location of old jars&amp;gt;, &amp;lt;location of new jars&amp;gt;, &amp;lt;old major version&amp;gt;, &amp;lt;old minor version&amp;gt;&lt;br/&gt;
This is same as inputs needed by runphases.ksh. Once the previous release jars are available in svn, we can avoid taking command-line inputs and it should be possible to add this as a harness test. It should be possible to add more tests using the jar locations for each old/new release combination to be tested. &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2. The new master added &apos;UpgradeTester.out&apos; is based on phaseTester.out with few diffs in the statements printed out.&lt;/p&gt;

&lt;p&gt;To run upgrade tests using this class, use the command: &lt;br/&gt;
java UpgradeTester &amp;lt;location of old jars&amp;gt; &amp;lt;location of new jars&amp;gt; &amp;lt;old major version&amp;gt; &amp;lt;old minor version&amp;gt;&lt;br/&gt;
e.g, java UpgradeTester C:\derby\10.1\lib C:\derby\trunk\lib 10 1&lt;/p&gt;

&lt;p&gt;The test run still has to be compared manually to the out file &apos;UpgradeTester.out&apos; and will show many diffs. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1076&quot; title=&quot;Resolve the ouput differences in upgrade test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1076&quot;&gt;&lt;del&gt;DERBY-1076&lt;/del&gt;&lt;/a&gt; is open to resolve these diffs.&lt;/p&gt;

&lt;p&gt;I am continuing with few minor changes on the patch and will upload a newer version when done. In the meantime, I would appreciate any feedback on the patch. Specifically, I would like to know if I have missed anything when converting the test.&lt;/p&gt;</comment>
                            <comment id="12371325" author="deepa" created="Wed, 22 Mar 2006 06:45:48 +0000"  >&lt;p&gt;Attaching a patch &apos;derby-1075-v1.diff&apos;. This patch is based on the draft patch with some additional changes.&lt;/p&gt;

&lt;p&gt;Summary of patch:&lt;/p&gt;

&lt;p&gt;1. Creates a class UpgradeTester which does the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Creates two class loaders using the jar locations provided for old and new release&lt;/li&gt;
	&lt;li&gt;Switches between these two class loaders to run the different upgrade phases with old or new release.&lt;/li&gt;
	&lt;li&gt;This class can be used to write tests for upgrades from different releases.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2. Adds a new test Upgrade_10_1_10_2 which uses UpgradeTester to test upgrade from 10.1 to 10.2. This test has not been added to any suite. Till the jars from previous release are available in svn, the test has to be run manually using the command:&lt;br/&gt;
java Upgrade_10_1_10_2 &amp;lt;location of old jars&amp;gt; &amp;lt;location of new jars&amp;gt;&lt;br/&gt;
e.g, java Upgrade_10_1_10_2 C:\derby\10.1\lib C:\derby\trunk\lib&lt;/p&gt;

&lt;p&gt;Also, there are some issues in running the test using the harness because of use of security manager. These are mentioned in &lt;a href=&quot;http://www.nabble.com/Upgrade-test-and-security-permissions-p3517019.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Upgrade-test-and-security-permissions-p3517019.html&lt;/a&gt;. Any suggestions to resolve these are welcome. I am planning to open separate sub-task for making this test run with a security manager.&lt;/p&gt;

&lt;p&gt;3. Creates a new package upgradeTests under org.apache.derbyTesting.functionTests.tests. This package is for UpgradeTester class and the individual upgrade tests.&lt;/p&gt;

&lt;p&gt;4. Adds a master &apos;Upgrade_10_1_10_2.out&apos;. I have tried to reduce the diffs by doing version check in the code and removing reference to local machine paths. Still, there are few more diffs. I am planning to look at these once this patch is reviewed/committed.&lt;/p&gt;

&lt;p&gt;This patch only adds new files. I verified that build is successful and I can run the new test. I would appreciate if someone can take a look at this patch and review/commit it.&lt;/p&gt;</comment>
                            <comment id="12371334" author="davidvc" created="Wed, 22 Mar 2006 07:14:51 +0000"  >&lt;p&gt;I looked at this patch and it looks &lt;b&gt;very good&lt;/b&gt;!  Thanks, Deepa, for addressing a very important issue and writing code that is very easy to read and follow.&lt;/p&gt;

&lt;p&gt;I did have one little eensy weensy comment &amp;#8211; I am not &lt;b&gt;sure&lt;/b&gt; you need to set the context classloader, but I suspect this may be needed by the underlying classloader stuff in the engine.  &lt;/p&gt;

&lt;p&gt;Also, if you tire of reflection, there is another way to do this using interfaces that makes writing test code much easier.  Basically, you define an interface that is implemented by the class you are trying to work with (e.g. the metadata test class).  Then you can cast the class you load with your specialized classloader into the interface you have defined.  It&apos;s OK that the interface and the implementation are loaded by different classloaders (as long as the interface class is &lt;b&gt;only&lt;/b&gt; loaded by your default classloader and not by the specialized one, which is generally the case).  After that you can invoke methods on the interface using regular, type-checked Java code.&lt;/p&gt;

&lt;p&gt;I have some code that shows how this is done sitting in my sandbox for the classloading work I was doing for shared code if you&apos;d like to see an example.&lt;/p&gt;

&lt;p&gt;Right now, it&apos;s not a lot of reflection, but in case it starts getting a little hairy...&lt;/p&gt;

&lt;p&gt;I vote +1 on this patch, but I personally hesitate to commit it without some other folks reviewing it.  Deepa, if you don&apos;t get any other reviews in the next few days, let me know, and I&apos;ll go ahead and commit.&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12371355" author="deepa" created="Wed, 22 Mar 2006 07:55:35 +0000"  >&lt;p&gt;Thanks David for looking at the patch.&lt;/p&gt;

&lt;p&gt;The reason I have the call to setContextClassLoader is to ensure that any classes which are used in a particular phase of the test get loaded by the specified class loader. After I saw David&apos;s comment, I re-read the javadoc for this and now I am not sure it serves the purpose I just mentioned. To ensure the classes get loaded by a specific class loader, I am explicitly using Class.forName by specifying a class loader (to load TestUtil and metadata classes). Maybe the call to setContextClassLoader is not serving any purpose. I would appreciate any insights into use of setContextClassLoader.&lt;/p&gt;

&lt;p&gt;David, I would like to see your example to understand how to use interfaces to achieve the same thing. It would be nice if you can upload the example. Thanks.&lt;/p&gt;
</comment>
                            <comment id="12371362" author="davidvc" created="Wed, 22 Mar 2006 08:13:45 +0000"  >&lt;p&gt;This is a very common misunderstanding of setContextClassLoader, and one that has thrown many of us, including myself, for quite a loop.  It turns out that setContextClassLoader() is of &lt;b&gt;absolutely no use&lt;/b&gt; unless someone later on in the same thread decides to grab it using getContextClassLoader() and use it.  It appears to be most commonly used by application servers, who want to use a separate classloader for each thread.&lt;/p&gt;

&lt;p&gt;That said, it is worth noting that org.apache.derby.impl.services.reflect.ReflectClassesJava2 appears to use getContextClassLoader.  It appears to be used to load classes that are not in derby.jar (e.g. application classes), I &lt;b&gt;think&lt;/b&gt; if the class can&apos;t be found by the default classloader.   I&apos;m not sure if this is the right thing to do, but this is what it does.  You might just try not setting the context classloader and see what happens, but I guess if you want to be safe you might as well go and set it.&lt;/p&gt;

&lt;p&gt;But you&apos;re right, the way to get a class to use a specific classloader as its &lt;b&gt;default&lt;/b&gt; classloader (which is &lt;b&gt;different&lt;/b&gt; from the context classloader) is to use Class.forName() or otherwise explicitly load that class using the classloader you want.  Then whenever it does &quot;new&quot; it uses that classloader.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach the code, once I find it.&lt;/p&gt;</comment>
                            <comment id="12371363" author="davidvc" created="Wed, 22 Mar 2006 08:19:53 +0000"  >&lt;p&gt;Hi, Deepa.  This is a copy of engine/org/apache/derby/jdbc in my sandbox.  DerbyLoader.jar is a classloader I wrote to handle code sharing.  You will notice that there are two things going on:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A number of the classes have been split up into a &quot;proxy&quot; and its underlying implementation that it delegates to&lt;/li&gt;
	&lt;li&gt;The underlying implementation implements an interface defined in the &quot;interfaces&quot; package.  The interfaces need to be a separate package to avoid sealing issues&lt;/li&gt;
	&lt;li&gt;The proxy class loads the implementation class using DerbyLoader and then casts it to the appropriate interface, and then invokes methods via that interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let me know if you have any questions.  It&apos;s been a while since I worked on this but I think I can get the cogs working again if need be.&lt;/p&gt;

&lt;p&gt;I have granted license for this in case Deepa wants to use some or all of this code herself, but in general it is &lt;b&gt;not&lt;/b&gt; intended for checkin as is.&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12371406" author="andreask" created="Wed, 22 Mar 2006 17:39:02 +0000"  >&lt;p&gt;Recently it was added a case called caseReusableRecordIdSequenceNumber() to phaseTester.java. It seems like this case is not included in this patch. Would it be ok to add it to the upgrade test as part of this patch ?&lt;/p&gt;</comment>
                            <comment id="12371444" author="deepa" created="Thu, 23 Mar 2006 02:08:36 +0000"  >&lt;p&gt;Thanks Andreas for pointing out the new case added to phaseTester. I had not noticed the change as it was committed after I uploaded my first patch. I have added this test to UpgradeTester and also updated the master. The new patch is uploaded as &apos;derby-1075-v2.diff&apos;. With this patch, I have built and run the new upgrade test on WinXP using Sun JDK 1.4.2. Once this patch gets reviewed and committed, it will replace phaseTester.java and runPhases.ksh and we can remove these files. &lt;/p&gt;

&lt;p&gt;David, thanks for uploading your classloader work. I extracted the jar file using jar command but I find DerbyLoader.java in unreadable format. I am curious to understand what you have done but do not plan to work on it immediately. So whenever you get time, please check the jar file to see if you are able to read DerbyLoader.java. &lt;/p&gt;</comment>
                            <comment id="12371460" author="kmarsden" created="Thu, 23 Mar 2006 04:15:15 +0000"  >&lt;p&gt;Thanks Deepa&lt;/p&gt;

&lt;p&gt;I will try to commit this patch today.  I think even if I have comments I will go ahead and commit as it is important to make this available to the community as soon as possible.&lt;/p&gt;



</comment>
                            <comment id="12371513" author="kmarsden" created="Thu, 23 Mar 2006 13:46:09 +0000"  >&lt;p&gt;I checked in this patch as it looks like great progress on this issue.  I did not review the code change in detail but I  tried to run the test and noticed a couple of things.&lt;/p&gt;

&lt;p&gt;1) The build does not build the new directory. Probably planned in a later patch but thought I would mention it.&lt;/p&gt;

&lt;p&gt;2) The instructions to run the test had the package ommitted. Should be:&lt;br/&gt;
ava org.apache.derbyTesting.functionTests.tests.upgradeTests.Upgrade_10_1_10_2 &amp;lt;location of old jars&amp;gt; &amp;lt;location of new jars&amp;gt;&lt;br/&gt;
e.g, java org.apache.derbyTesting.functionTests.tests.upgradeTests.Upgrade_10_1_10_2 C:\derby\10.1\lib C:\derby\trunk\lib &lt;/p&gt;

&lt;p&gt;3) When I tried to run the test it terminated witha a Table does not exist message.   What might I be doing wrong?&lt;/p&gt;

&lt;p&gt;START - phase CREATE&lt;br/&gt;
END - PASS - phase CREATE&lt;/p&gt;


&lt;p&gt;START - phase SOFT UPGRADE&lt;br/&gt;
complete caseVersionCheck - passed true&lt;br/&gt;
caseReusableRecordIdSequenceNumber - Running compress&lt;br/&gt;
SQLException:&lt;br/&gt;
SQLSTATE(42X05): Table &apos;APP.CT1&apos; does not exist.&lt;/p&gt;

</comment>
                            <comment id="12371635" author="deepa" created="Fri, 24 Mar 2006 04:13:03 +0000"  >&lt;p&gt;Thanks Kathey. Please see answers for your questions:&lt;/p&gt;

&lt;p&gt;1) The build does not build the new directory. Probably planned in a later patch but thought I would mention it.&lt;/p&gt;

&lt;p&gt;I do not understand what is different in your environment. For me, the new directory gets built and packaged into derbyTesting.jar (sane build)&lt;/p&gt;

&lt;p&gt;2) The instructions to run the test had the package ommitted. &lt;/p&gt;

&lt;p&gt;Thanks. I&apos;ll change this&lt;/p&gt;

&lt;p&gt;3) When I tried to run the test it terminated witha a Table does not exist message. What might I be doing wrong?&lt;/p&gt;

&lt;p&gt;Again, not sure what is the problem here. The table you mention is created in the old release and should be present after soft upgrade. Can you post the whole output from the test? I&apos;ll take a look.&lt;/p&gt;

</comment>
                            <comment id="12371722" author="knutanders" created="Fri, 24 Mar 2006 20:44:12 +0000"  >&lt;p&gt;The canon seems to be based on Derby 10.1.2.2. Shouldn&apos;t we use an official release (10.1.2.1) instead? If not, where can I find 10.1.2.2?&lt;/p&gt;</comment>
                            <comment id="12415146" author="deepa" created="Wed, 7 Jun 2006 22:04:59 +0100"  >&lt;p&gt;Resolving issue as upgrade test has been converted to a java test. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12324431" name="classloader.jar" size="156657" author="davidvc" created="Wed, 22 Mar 2006 08:19:51 +0000"/>
                            <attachment id="12324244" name="derby-1075-patch1-draft.diff" size="188532" author="deepa" created="Thu, 16 Mar 2006 09:02:01 +0000"/>
                            <attachment id="12324245" name="derby-1075-patch1-draft.status" size="161" author="deepa" created="Thu, 16 Mar 2006 09:02:01 +0000"/>
                            <attachment id="12324428" name="derby-1075-v1.diff" size="194647" author="deepa" created="Wed, 22 Mar 2006 06:45:47 +0000"/>
                            <attachment id="12324429" name="derby-1075-v1.status" size="364" author="deepa" created="Wed, 22 Mar 2006 06:45:48 +0000"/>
                            <attachment id="12324457" name="derby-1075-v2.diff" size="196887" author="deepa" created="Thu, 23 Mar 2006 02:08:36 +0000"/>
                            <attachment id="12324458" name="derby-1075-v2.status" size="364" author="deepa" created="Thu, 23 Mar 2006 02:08:36 +0000"/>
                            <attachment id="12323703" name="loader.java" size="3943" author="deepa" created="Sat, 4 Mar 2006 07:17:17 +0000"/>
                            <attachment id="12323708" name="loader_v2.java" size="4244" author="deepa" created="Sat, 4 Mar 2006 09:56:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Mar 2006 07:14:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy167j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40656</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>