<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3130/DERBY-3130.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3130] Reduce memory footprint of StoredRecordHeader</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3130</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby&apos;s page cache often has a memory footprint that is much larger than pageSize*pageCacheSize. One large contributor to the footprint is the array of StoredPageHeader objects in BasePage. The memory consumed by these objects can be as large as, and sometimes even larger than, the byte arrays containing the raw page data. (See for instance &lt;a href=&quot;http://www.nabble.com/How-much-derby-need-memory--tf3307655.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/How-much-derby-need-memory--tf3307655.html&lt;/a&gt;.) Reducing the size of the StoredPageHeader objects could therefore reduce Derby&apos;s memory footprint significantly, especially if the page cache is large and contains many pages from tables with small records or from indices.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12380406">DERBY-3130</key>
            <summary>Reduce memory footprint of StoredRecordHeader</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Sun, 14 Oct 2007 17:49:34 +0100</created>
                <updated>Wed, 11 Dec 2013 14:14:04 +0000</updated>
                            <resolved>Thu, 3 Apr 2008 09:04:45 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12534645" author="knutanders" created="Sun, 14 Oct 2007 18:03:41 +0100"  >&lt;p&gt;From a quick look at the class, it seems like there are at least two obvious candidates for improvement:&lt;/p&gt;

&lt;p&gt;  1) Only four bits of the status field are in use, so it could be changed from int to byte&lt;/p&gt;

&lt;p&gt;  2) The fields overflowId (int), overflowPage (long) and firstField (int) are only used if the records are overflowed. Factoring out these fields could reduce the object size when there&apos;s no overflow (which is the common case). One could either (a) create an inner class with these three fields and let StoredRecordHeader have a reference to such an object, or null if the fields are not needed, or (b) create a subclass of StoredRecordHeader which contains the extra fields.&lt;/p&gt;

&lt;p&gt;With Sun&apos;s Java 6 running in 32-bit mode, doing 1+2a will reduce the object size from 48 bytes to 32 bytes. Doing 1+2b will reduce the size further down to 24 bytes. In 64-bit mode, the sizes are 56 bytes -&amp;gt; 48 bytes -&amp;gt; 40 bytes. (I haven&apos;t actually implemented the changes to find the numbers, only changed variable types and made variables static to see how eliminating them would affect the size).&lt;/p&gt;</comment>
                            <comment id="12534648" author="knutanders" created="Sun, 14 Oct 2007 18:19:07 +0100"  >&lt;p&gt;Attached is a test which fills a table with 500000 small records (consisting of a single int) and than waits for the user to press enter before it finishes. With a default sized page cache (4000 pages), this is what jmap -histo:live says about the contents of the heap when all the records have been inserted (Sun Java 6, 32-bit):&lt;/p&gt;

&lt;p&gt;num   #instances    #bytes  class name&lt;br/&gt;
--------------------------------------&lt;br/&gt;
  1:    136814     6567072  org.apache.derby.impl.store.raw.data.StoredRecordHeader&lt;br/&gt;
  2:      5239     4568104  [B&lt;br/&gt;
  3:     14465     1447800  &amp;lt;constMethodKlass&amp;gt;&lt;br/&gt;
  4:     14465     1158248  &amp;lt;methodKlass&amp;gt;&lt;br/&gt;
  5:     17416      808920  &amp;lt;symbolKlass&amp;gt;&lt;br/&gt;
  6:      1000      559280  [Lorg.apache.derby.impl.store.raw.data.StoredRecordHeader;&lt;/p&gt;

&lt;p&gt;The page cache is expected to contain ~4MB of byte arrays, but the StoredRecordHeader objects consume even more memory, ~6.5MB.&lt;/p&gt;</comment>
                            <comment id="12534771" author="kristwaa" created="Mon, 15 Oct 2007 09:55:34 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;I think this is a good fix. I have gotten into trouble with larger databases when pulling in lots of indexes (normally using a SELECT COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ). The problem for me has been that the page cache gets bigger when it is filled with index pages than when it is filled with data pages.&lt;br/&gt;
In some cases, the only way around it has been to reduce the page cache size, but then Derby is not allowed to utilize all the memory it could have during normal processing.&lt;/p&gt;

&lt;p&gt;I think there is a typo in your last comment, the default page cache size is 1000 pages, not 4000.&lt;/p&gt;

&lt;p&gt;If a patch is created I can test it out in one of my runs that experience the described problem.&lt;/p&gt;</comment>
                            <comment id="12534776" author="knutanders" created="Mon, 15 Oct 2007 10:11:44 +0100"  >&lt;p&gt;Thanks Kristian. You&apos;re right, it should be 1000 pages, not 4000. I&apos;ll try to create a patch you can test.&lt;/p&gt;</comment>
                            <comment id="12534827" author="knutanders" created="Mon, 15 Oct 2007 13:15:34 +0100"  >&lt;p&gt;The attached patch srh.diff implements 1+2a, which is not the optimal solution, but it reduces the object size to 32 bytes. The patch is only for testing, and not ready for commit. Here&apos;s the output from &quot;jmap -histo:live&quot; when running SmallRecordsTest:&lt;/p&gt;

&lt;p&gt;num   #instances    #bytes  class name&lt;br/&gt;
--------------------------------------&lt;br/&gt;
  1:      5879     4644664  [B&lt;br/&gt;
  2:    136814     4378048  org.apache.derby.impl.store.raw.data.StoredRecordHeader&lt;br/&gt;
  3:     22064     2226240  &amp;lt;constMethodKlass&amp;gt;&lt;br/&gt;
  4:     22064     1769032  &amp;lt;methodKlass&amp;gt;&lt;br/&gt;
  5:      3517     1457848  [I&lt;br/&gt;
  6:     29809     1266424  &amp;lt;symbolKlass&amp;gt;&lt;/p&gt;

&lt;p&gt;The memory consumed by StoredRecordHeader is reduced by ~2.2 MB.&lt;/p&gt;</comment>
                            <comment id="12534895" author="bryanpendleton" created="Mon, 15 Oct 2007 17:48:44 +0100"  >&lt;p&gt;Could you educate us a bit more about the StoredRecordHeader? What is&lt;br/&gt;
the life cycle of a StoredRecordHeader? (when are they created and when&lt;br/&gt;
reclaimed?). I&apos;m trying to understand why your benchmark has 136,814&lt;br/&gt;
instances of the StoredRecordHeader: is that because your test touched&lt;br/&gt;
that many records in a single transaction? Or because you touched that&lt;br/&gt;
many records during the entire benchmark? Or because there were 136.8 records&lt;br/&gt;
per page and you had 1,000 pages in memory? Or some other reason? Thanks!&lt;/p&gt;</comment>
                            <comment id="12534918" author="knutanders" created="Mon, 15 Oct 2007 19:01:59 +0100"  >&lt;p&gt;A StoredRecordHeader object is created the first time its corresponding record is accessed after a page has been fetched into the page cache. When a page is evicted from the cache, all its StoredRecordHeader objects can be gc&apos;ed. The number 136814 means that there are 1000 pages, on each of which 136.8 records have been accessed.&lt;/p&gt;</comment>
                            <comment id="12536603" author="kristwaa" created="Mon, 22 Oct 2007 10:09:37 +0100"  >&lt;p&gt;I ran the patch with the load I experience problems with, and it fixes the problem for my configuration.&lt;br/&gt;
As I mentioned earlier, the patch may not solve the problem for other configurations due to the amount of heap available and the size of the Derby page cache.&lt;br/&gt;
In my case Derby was able to keep under 3.5 GB of heap with a page cache of size 262144 (which with 4K pages would be around 1 GB + overhead).&lt;/p&gt;

&lt;p&gt;Here&apos;s the start out the heap histogram:&lt;br/&gt;
num   #instances    #bytes  class name&lt;br/&gt;
--------------------------------------&lt;br/&gt;
  1:  33176246   1061639872  org.apache.derby.impl.store.raw.data.StoredRecordHeader&lt;br/&gt;
  2:  __683347   _961070736  [B&lt;br/&gt;
  3:  33402612   _801662688  org.apache.derby.impl.store.raw.data.RecordId&lt;br/&gt;
  4:  __226889   _136070680  [Lorg.apache.derby.impl.store.raw.data.StoredRecordHeader;&lt;br/&gt;
  5:  __226729    __43531968  org.apache.derby.impl.store.raw.data.StoredPage&lt;br/&gt;
  6:  __237426    __40619752  [C&lt;br/&gt;
  7:  __226653    __14505792  org.apache.derby.impl.store.access.btree.LeafControlRow&lt;br/&gt;
  8:  __226890     ___9075600  org.apache.derby.iapi.services.io.FormatIdInputStream&lt;br/&gt;
  9:  __226698     ___9068064  [Lorg.apache.derby.iapi.types.DataValueDescriptor;&lt;/p&gt;

&lt;p&gt;The total is reported like this, which I interpret to mean that the heap usage is around 2.9 GB:&lt;br/&gt;
Total 70589681   -1158738416&lt;/p&gt;

&lt;p&gt;Using the 48 byte version of StoredRecordHeader would add another 500 MB, causing the heap to be filled to the rim (I haven&apos;t checked if these objects refer other objects as well) which in turn effectively brings the application to an halt. With a 32-bit VM you can&apos;t give Derby more heap, and the only option would be to reduce the page cache size.&lt;/p&gt;

&lt;p&gt;+1 from me based on testing the patch  (I haven&apos;t reviewed the code changes).&lt;br/&gt;
In this specific case, 8 more bytes saved per instance would sum up to 253 MB.&lt;/p&gt;</comment>
                            <comment id="12536651" author="knutanders" created="Mon, 22 Oct 2007 13:46:26 +0100"  >&lt;p&gt;Thanks for testing the patch, Kristian. I&apos;m glad it solved the problems for you, but I think the patch needs to be tidied before it can be committed.&lt;/p&gt;</comment>
                            <comment id="12583601" author="knutanders" created="Mon, 31 Mar 2008 10:16:00 +0100"  >&lt;p&gt;I have cleaned up the srh.diff patch and attached it as d3130-1a.diff. Derbyall ran cleanly, and suites.All had 3 known failures (caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3519&quot; title=&quot;junit regression test failure in testInertTime(org.apache.derbyTesting.functionTests.tests.lang.TimeHandlingTest)junit.framework.AssertionFailedError: expected:&amp;lt;2&amp;gt; but was:&amp;lt;3&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3519&quot;&gt;&lt;del&gt;DERBY-3519&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3561&quot; title=&quot;testStartStopManagementFromApplication(org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest)junit.framework.AssertionFailedError: expected:&amp;lt;2&amp;gt; but was:&amp;lt;5&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3561&quot;&gt;&lt;del&gt;DERBY-3561&lt;/del&gt;&lt;/a&gt;). Although implementing alternative 2b would save even more space, it seems like it&apos;s a much bigger rewrite, so I don&apos;t think it&apos;s worth doing it at this point.&lt;/p&gt;</comment>
                            <comment id="12584543" author="knutanders" created="Wed, 2 Apr 2008 13:32:13 +0100"  >&lt;p&gt;Committed revision 643875.&lt;br/&gt;
I also plan to merge the fix to the 10.4 branch.&lt;/p&gt;</comment>
                            <comment id="12585002" author="knutanders" created="Thu, 3 Apr 2008 09:04:45 +0100"  >&lt;p&gt;Committed to 10.4 with revision 644209.&lt;/p&gt;</comment>
                            <comment id="12753308" author="mikem" created="Wed, 9 Sep 2009 23:39:18 +0100"  >&lt;p&gt;commited 813145:&lt;/p&gt;

&lt;p&gt;backporting fix (revision 643875) from trunk to 10.3 branch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12637173">DERBY-6111</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12367716" name="SmallRecordsTest.java" size="924" author="knutanders" created="Sun, 14 Oct 2007 18:19:07 +0100"/>
                            <attachment id="12378936" name="d3130-1a.diff" size="16392" author="knutanders" created="Mon, 31 Mar 2008 10:16:00 +0100"/>
                            <attachment id="12367749" name="srh.diff" size="12822" author="knutanders" created="Mon, 15 Oct 2007 13:15:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 15 Oct 2007 08:55:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30735</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rsv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38322</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>