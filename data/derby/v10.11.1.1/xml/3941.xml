<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3941/DERBY-3941.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3941] Unsafe use of DataInput.skipBytes() in StoredPage and StoredFieldHeader</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3941</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Some methods in StoredFileHeader and StoredPage call java.io.DataInput.skipBytes(int) with the assumption that it always skips the requested number of bytes. According to the javadoc for skipBytes, it may skip fewer bytes than requested, possibly 0, even if the end of the stream hasn&apos;t been reached.&lt;/p&gt;

&lt;p&gt;The problem exists in these methods:&lt;/p&gt;

&lt;p&gt;  StoredFieldHeader.readFieldDataLength()&lt;br/&gt;
  StoredPage.readRecordFromStream()&lt;br/&gt;
  StoredPage.skipField()&lt;br/&gt;
  StoredPage.readOneColumnFromPage()&lt;br/&gt;
  StoredPage.readRecordFromArray()&lt;/p&gt;

&lt;p&gt;We should change the code so that it works correctly even if skipBytes() were to skip fewer bytes than requested.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12408014">DERBY-3941</key>
            <summary>Unsafe use of DataInput.skipBytes() in StoredPage and StoredFieldHeader</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yunlee">Yun Lee</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Nov 2008 14:14:04 +0000</created>
                <updated>Tue, 30 Jun 2009 17:06:44 +0100</updated>
                            <resolved>Fri, 17 Apr 2009 22:51:57 +0100</resolved>
                                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12693521" author="yunlee" created="Sun, 29 Mar 2009 06:23:51 +0100"  >&lt;p&gt;Hi, Knut. I&apos;m interested in this issue, and  wonder what&apos;s your favorite way to correct this problem. &lt;/p&gt;

&lt;p&gt;1.) to throw a IOException.&lt;br/&gt;
2.) retry to skip  for some define times, if failed throw a IOExcetion.&lt;/p&gt;

&lt;p&gt;Besides, there are still many other invocation on skipBytes(), i.e.*ImageReader, BlockDataInputStream, an so on. Should they be correct altogether for this issue? If so, is there a wrapped function to resolve this problem uniformly.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12694040" author="knutanders" created="Tue, 31 Mar 2009 10:53:23 +0100"  >&lt;p&gt;Hi Yun,&lt;/p&gt;

&lt;p&gt;My preferred solution would be to have a variant of org.apache.derby.iapi.services.io.InputStreamUtil.skipFully() that could take a DataInput argument. That method uses skip until 0 is returned, then it uses read() which is guaranteed to block until there is something to read. If read returns -1, an EOFException is thrown. Currently skipFully() is only implemented for InputStream, I think.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I understand your question about *ImageReader and BlockDataInputStream. Those classes are part of the JDK, aren&apos;t they? I didn&apos;t find any references to them in the Derby code.&lt;/p&gt;</comment>
                            <comment id="12694125" author="yunlee" created="Tue, 31 Mar 2009 15:20:25 +0100"  >&lt;p&gt;Knut, thanks for your advice! &lt;/p&gt;

&lt;p&gt;&amp;gt;My preferred solution would be to have a variant of org.apache.derby.iapi.services.io.InputStreamUtil.skipFully() that could take a DataInput argument. That method uses skip until 0 is returned, then it uses read() which is guaranteed to block until there is something to read. If read returns -1, an EOFException is thrown. Currently skipFully() is only implemented for InputStream, I think. &lt;/p&gt;

&lt;p&gt;With the util, the problem can be resolved easily. I just doubt, skipPersistent() used in InputStreamUtil.skipFully() will cause a new problem on time efficiency, as it&apos;s possible to wait a long time for the block finishing.&lt;/p&gt;

&lt;p&gt;&amp;gt;I&apos;m not sure I understand your question about *ImageReader and BlockDataInputStream. Those classes are part of the JDK, aren&apos;t they? I didn&apos;t find any references to them in the Derby code.&lt;/p&gt;

&lt;p&gt;I&apos;m sorry to have seen the two classes in a careless look at &apos;call hierachy&apos; window in Eclipse, &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I will post a patch on this weekend.&lt;/p&gt;

&lt;p&gt;Yun&lt;/p&gt;</comment>
                            <comment id="12698063" author="yunlee" created="Sat, 11 Apr 2009 09:12:31 +0100"  >&lt;p&gt;Knut, I have added a function skipFullyDataInput(DataInput di, int skippedBytes) in InputStreamUtil following by one test case, and applied it to replace the calling to DataInput.skipBytes() in StoredFieldHeader, StoredPage and ClassInvestigator. Also, I have removed unused import clauses and organized the import part too.&lt;/p&gt;

&lt;p&gt;Please check it! Thanks!&lt;/p&gt;

&lt;p&gt;Yun&lt;/p&gt;</comment>
                            <comment id="12698112" author="knutanders" created="Sat, 11 Apr 2009 18:30:19 +0100"  >&lt;p&gt;Thanks for the patch, Yun!&lt;/p&gt;

&lt;p&gt;I have some small comments:&lt;/p&gt;

&lt;p&gt;1) skipPersistentDataInput() checks if DataInput.readByte() returns -1 to detect that EOF has been reached, but I think that that method will throw EOFException and not return -1 on EOF&lt;/p&gt;

&lt;p&gt;2) I think I would have renamed skipPersistentDataInput() and skipFullyDataInput() to skipPersistent() and skipFully().&lt;/p&gt;</comment>
                            <comment id="12698212" author="yunlee" created="Sun, 12 Apr 2009 12:32:25 +0100"  >&lt;p&gt;Knut, &lt;/p&gt;

&lt;p&gt;&amp;gt;1) skipPersistentDataInput() checks if DataInput.readByte() returns -1 to detect that EOF has been reached, but I think that that method will throw EOFException and not return -1 on EOF &lt;/p&gt;

&lt;p&gt;I have changed both  skipPersistentDataInput() and skipPersistent() to perform like what you need, and changed the document of UTF8Util.internalSkip(final InputStream in, final long charsToSkip) which used the skipPersistent(). I think the new revision can act smartlier. Please check the new patches, thanks!&lt;/p&gt;

&lt;p&gt;&amp;gt;2) I think I would have renamed skipPersistentDataInput() and skipFullyDataInput() to skipPersistent() and skipFully().&lt;/p&gt;

&lt;p&gt;I have tried this before providing the first patches, however, I found it&apos;s not able to use overload here, as it will lead to some compiling-time error on ambiguous use, i.e. InputStreamUtil.skipFully(null, int), and InputStreamUtil.skipFully(dis, int) where dis is an instance of DataInputStream.&lt;/p&gt;

&lt;p&gt;Yun&lt;/p&gt;</comment>
                            <comment id="12698237" author="knutanders" created="Sun, 12 Apr 2009 17:37:51 +0100"  >&lt;p&gt;Hi Yun,&lt;/p&gt;

&lt;p&gt;My point about DataInput.readByte() was that -1 is not an indication that the end of the stream has been reached, so it&apos;s not correct to throw an EOFException when readByte() returns -1. I think skipFully() will have to be implemented along the lines of this untested code:&lt;/p&gt;

&lt;p&gt;    public static void skipFully(DataInput in, int bytesToSkip)&lt;br/&gt;
        throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        if (in == null) &lt;/p&gt;
{
            throw new NullPointerException();
        }

&lt;p&gt;        while (bytesToSkip &amp;gt; 0) {&lt;br/&gt;
            int skipped = in.skipBytes(bytesToSkip);&lt;br/&gt;
            if (skipped == 0) &lt;/p&gt;
{
                // No bytes skipped, read one byte to see if EOF has been
                // reached. DataInput.readByte() will throw an EOFException
                // if there&apos;s nothing more to read.
                in.readByte();
                // Still more data to read. Account for the byte we just read.
                skipped++;
            }
&lt;p&gt; &lt;br/&gt;
            bytesToSkip -= skipped;&lt;br/&gt;
       }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;The changes to the javadoc for skipPersistent(InputStream,int) also look wrong, as that method is not supposed to throw an EOFException if end of stream is reached before all the bytes have been skipped. If it reaches end of stream prematurely, it returns the number of bytes actually skipped, just as the old javadoc said.&lt;/p&gt;

&lt;p&gt;As to the compile errors when using the same name for the different variants of skipFully(), it should be possible to disambiguate the method calls by using a cast, like this:&lt;br/&gt;
    InputStreamUtil.skipFully((InputStream) null, x);&lt;br/&gt;
or&lt;br/&gt;
    InputStreamUtil.skipFully((DataInput) null, x);&lt;/p&gt;

&lt;p&gt;But perhaps the problem here is that we&apos;re trying to overload InputStreamUtil too much. Since a DataInput is not (necessarily) an InputStream it might be cleaner to create a new class, DataInputUtil, where we can collect utility methods for DataInputs without conflicting with the utilities for InputStreams.&lt;/p&gt;</comment>
                            <comment id="12698386" author="yunlee" created="Mon, 13 Apr 2009 14:23:46 +0100"  >&lt;p&gt;Knut, I think you are right! DataInput.readByte() does act differently from InputStream.read(), and throws a EOF Exception when EOF is met.&lt;/p&gt;

&lt;p&gt;I have moved the code into a new util class DataInputUtil, and wrote the corresponding test class. Please check it, thanks!&lt;/p&gt;

&lt;p&gt;Yun&lt;/p&gt;</comment>
                            <comment id="12698789" author="knutanders" created="Tue, 14 Apr 2009 15:38:26 +0100"  >&lt;p&gt;Thanks for the new patch. I think it looks good. Two tiny comments:&lt;/p&gt;

&lt;p&gt;1) The license header is missing in the new test class.&lt;/p&gt;

&lt;p&gt;2) Much of the diff in StoredPage is just reorganizing import statements. It&apos;s probably better to do that in a separate patch, if we think those statements need to be tidied up.&lt;/p&gt;</comment>
                            <comment id="12699710" author="yunlee" created="Thu, 16 Apr 2009 15:08:17 +0100"  >&lt;p&gt;Knut.  I agree with you, derby-3941-4.diff  and derby-3941-4.stat gives change on skipFully(), while  derby-3941-5.diff  and derby-3941-5.stat gives a pure change on import organize on StoredPage. I think importer reorganization is necessary to keep code clean. Wish for your check.&lt;/p&gt;

&lt;p&gt;Yun&lt;/p&gt;</comment>
                            <comment id="12700122" author="knutanders" created="Fri, 17 Apr 2009 11:57:31 +0100"  >&lt;p&gt;Thanks Yun! I committed patch #5 to trunk (revision 765943). Will take a look at #4 shortly.&lt;/p&gt;</comment>
                            <comment id="12700342" author="knutanders" created="Fri, 17 Apr 2009 22:51:57 +0100"  >&lt;p&gt;Committed revision 766163.&lt;br/&gt;
Thanks for your work on this issue, Yun!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12399905">DERBY-3770</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12405222" name="derby-3941-1.diff" size="13431" author="yunlee" created="Sat, 11 Apr 2009 09:12:31 +0100"/>
                            <attachment id="12405223" name="derby-3941-1.stat" size="401" author="yunlee" created="Sat, 11 Apr 2009 09:12:31 +0100"/>
                            <attachment id="12405270" name="derby-3941-2.diff" size="14842" author="yunlee" created="Sun, 12 Apr 2009 12:32:25 +0100"/>
                            <attachment id="12405271" name="derby-3941-2.stat" size="463" author="yunlee" created="Sun, 12 Apr 2009 12:32:25 +0100"/>
                            <attachment id="12405317" name="derby-3941-3.diff" size="14615" author="yunlee" created="Mon, 13 Apr 2009 14:23:46 +0100"/>
                            <attachment id="12405318" name="derby-3941-3.stat" size="473" author="yunlee" created="Mon, 13 Apr 2009 14:23:46 +0100"/>
                            <attachment id="12405649" name="derby-3941-4.diff" size="11973" author="yunlee" created="Thu, 16 Apr 2009 15:08:17 +0100"/>
                            <attachment id="12405650" name="derby-3941-4.stat" size="471" author="yunlee" created="Thu, 16 Apr 2009 15:08:17 +0100"/>
                            <attachment id="12405651" name="derby-3941-5.diff" size="4182" author="yunlee" created="Thu, 16 Apr 2009 15:08:58 +0100"/>
                            <attachment id="12405652" name="derby-3941-5.stat" size="76" author="yunlee" created="Thu, 16 Apr 2009 15:08:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 29 Mar 2009 05:23:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23927</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0un3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38782</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>