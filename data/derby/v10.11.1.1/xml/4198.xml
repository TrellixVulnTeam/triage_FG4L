<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4198/DERBY-4198.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4198] When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4198</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This problem occurs on both Client/Server and Embedded.&lt;/p&gt;

&lt;p&gt;With the Embedded driver, the JVM crashes with the following error:&lt;br/&gt;
------------------------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-----------------------------------&lt;br/&gt;
1) testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED statementContext is not expected to equal statementContexts&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.popStatementContext(GenericLanguageConnectionContext.java:2286)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.updateRow(EmbedResultSet.java:3740)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug.testReproduction(ReproHoldCursorBug.java:71)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
-----------------------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;--------------------------------------------&lt;br/&gt;
(It shows a stack trace after this, but I&apos;m attaching the result folders since those are more thorough.)&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;On the client driver, the JVM does not crash but it also errors out:&lt;br/&gt;
1) testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
(more detail on the log files)&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The error does not show as long as the &quot;OF DATA&quot; isn&apos;t specified. It also won&apos;t show if the whole FOR UPDATE clause is omitted.&lt;/p&gt;

&lt;p&gt;I would also like some comments and advice on how to proceed on converting holdCursorJDBC30.sql as it is affected by this problem. The original test does an update on a cursor with the &quot;FOR UPDATE OF DATA&quot; clause, and this isn&apos;t working on the Java version of the test. Do I go around it by removing the FOR UPDATE clause or should I wait for this bug to get fixed?&lt;/p&gt;

&lt;p&gt;Attachments:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; - ErrorOutput_Embedded.tar.gz - Error output files of the Embedded run&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; - ErrorOutput_Client.tar.gz - Error output files of the Client/Server run&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; - ReproHoldCursorBug.java - The reproduction of the errors&lt;/p&gt;</description>
                <environment></environment>
        <key id="12424171">DERBY-4198</key>
            <summary>When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Apr 2009 16:00:47 +0100</created>
                <updated>Fri, 21 Jan 2011 17:52:24 +0000</updated>
                            <resolved>Tue, 16 Jun 2009 12:29:29 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12705610" author="dagw" created="Mon, 4 May 2009 15:46:21 +0100"  >&lt;p&gt;There are actually two errors in this issue.&lt;/p&gt;

&lt;p&gt;The first is the underlying error which has this stack trace (disguised by error 2, see below):&lt;/p&gt;

&lt;p&gt;Error 1&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;1) testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2201)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.updateRow(EmbedResultSet.java:3743)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug.testReproduction(ReproHoldCursorBug.java:78)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:105)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	... 36 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.getEstimatedMemUsage(BackingStoreHashtable.java:533)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDisk(BackingStoreHashtable.java:481)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.add_row_to_hash_table(BackingStoreHashtable.java:403)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.putRow(BackingStoreHashtable.java:731)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ScrollInsensitiveResultSet.java:992)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.updateRow(ScrollInsensitiveResultSet.java:1125)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.CurrentOfResultSet.updateRow(CurrentOfResultSet.java:334)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.updateRow(ProjectRestrictResultSet.java:587)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NormalizeResultSet.updateRow(NormalizeResultSet.java:407)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:560)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeSubStatement(GenericPreparedStatement.java:286)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.updateRow(EmbedResultSet.java:3722)&lt;br/&gt;
	... 29 more&lt;/p&gt;

&lt;p&gt;Error 2&lt;br/&gt;
-------&lt;br/&gt;
The error handling in EmbedResultSet.updateRow performs a redundant &lt;br/&gt;
call to popStatementContext causing the assert error seen. &lt;br/&gt;
There is a missing catch of Throwable at the end:&lt;br/&gt;
                  :&lt;br/&gt;
		} catch (Throwable t) &lt;/p&gt;
{
	             throw handleException(t);
                }
&lt;p&gt; finally {&lt;br/&gt;
                   :&lt;br/&gt;
                }&lt;br/&gt;
This handling is lacking from insertRow and deleteRow as well.&lt;/p&gt;</comment>
                            <comment id="12705626" author="dagw" created="Mon, 4 May 2009 16:24:05 +0100"  >&lt;p&gt;Uploading a patch to fix the lacking error handling in updateRow, insertRow and deleteRow.&lt;br/&gt;
This addresses the second error. Running regressions. &lt;/p&gt;</comment>
                            <comment id="12707410" author="dagw" created="Fri, 8 May 2009 17:49:03 +0100"  >&lt;p&gt;Given CREATE TABLE mytab (id int primary key, name varchar(50)), some&lt;br/&gt;
failure modes and observations:&lt;/p&gt;

&lt;p&gt;a) rs = s.executeQuery(&quot;SELECT name from mytab for update of name&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateString(1,&quot;foobar&quot;);&lt;/p&gt;

&lt;p&gt;   fails because sourceRow of&lt;br/&gt;
   ScrollInsensitiveResultSet.addRowToHashTable is null, because&lt;br/&gt;
   ScrollInsensitiveResultSet.updateRow calls:&lt;/p&gt;

&lt;p&gt;           prRS.doBaseRowProjection(row);&lt;/p&gt;

&lt;p&gt;   but here the passed down row (UpdateResultSet.newBaseRow) is only 1&lt;br/&gt;
   long, so projection as done in the SELECT (projecting &quot;name&quot; out of&lt;br/&gt;
   the underlying base tables columns; which is what&lt;br/&gt;
   prRS.doBaseRowProjection does) is wrong.&lt;/p&gt;

&lt;p&gt;   But projection is needed (see case f) if one does not use FOR&lt;br/&gt;
   UPDATE OF &amp;lt;col&amp;gt; since then one gets handed down a row whose # of&lt;br/&gt;
   columns is that of the basetable, and the hash table only wants the&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;of rows selected, i.e. a projection is necessary.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;   This one runs correct if the call to prRS.doBaseRowProjection(row)&lt;br/&gt;
   is removed.&lt;/p&gt;


&lt;p&gt;b) rs = s.executeQuery(&quot;SELECT id from mytab for update of id&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateString(1,20);&lt;/p&gt;

&lt;p&gt;   works OK, but only accidentally, since projection of col 1 is a&lt;br/&gt;
   no-op.&lt;/p&gt;

&lt;p&gt;c) rs = s.executeQuery(&quot;SELECT * from mytab for update of id&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateInt(1,20);&lt;/p&gt;

&lt;p&gt;   fails with empty pointer since hashRowArray is now one column&lt;br/&gt;
   longer (and the vacant position left in hash table is never set;&lt;br/&gt;
   the row passed down is only 1 long (it does not contain a value for&lt;br/&gt;
   column 2)&lt;/p&gt;

&lt;p&gt;d) rs = s.executeQuery(&quot;SELECT * from mytab for update of name&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateInt(2,&quot;foobar&quot;);&lt;/p&gt;

&lt;p&gt;   fails similarly to c, but in addition, column 2&apos;s (&quot;name&quot;) new value&lt;br/&gt;
   is now set in the position of column 1 in the hash table.&lt;/p&gt;

&lt;p&gt;e) rs = s.executeQuery(&quot;SELECT * from mytab for update of id, name&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateInt(1, 20);&lt;br/&gt;
   rs.updateString(2,&quot;foobar&quot;);&lt;br/&gt;
   rs.updateRow();&lt;/p&gt;

&lt;p&gt;   works OK, since now both columns are updated.&lt;/p&gt;

&lt;p&gt;f) rs = s.executeQuery(&quot;SELECT * from mytab for update of id, name&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateInt(1, 20);&lt;br/&gt;
   // rs.updateString(2,&quot;foobar&quot;);&lt;br/&gt;
   rs.updateRow();&lt;/p&gt;

&lt;p&gt;   again fails.&lt;/p&gt;


&lt;p&gt;g) If we remove prRS.doBaseRowProjection(row); this query(for example)&lt;br/&gt;
   fails with arrayOutOfBounds&lt;/p&gt;

&lt;p&gt;   rs = s.executeQuery(&quot;SELECT id from mytab for update&quot;);&lt;br/&gt;
   rs.next();&lt;br/&gt;
   rs.updateInt(1,20);&lt;br/&gt;
   rs.updateRow();&lt;/p&gt;

&lt;p&gt;   because passed down row now has 2 columns, whereas hashRowArray&lt;br/&gt;
   only has space for one.&lt;/p&gt;

&lt;p&gt;h) rs = s.executeQuery(&quot;SELECT id from mytab for update of id, name&quot;);&lt;br/&gt;
   String cursorname = rs.getCursorName();&lt;br/&gt;
   rs.next();&lt;br/&gt;
   con.createStatement().executeUpdate(&quot;update mytab set name=&apos;foobar&apos; where current of &quot; +&lt;br/&gt;
                                        cursorname);&lt;/p&gt;


&lt;p&gt;   This case should not touch hash table at all since it does not&lt;br/&gt;
   contain the &quot;name&quot; column.  In fact, it seems to work, but write the &quot;name&quot;&lt;br/&gt;
   column to the &quot;id&quot; column in the hash table, which gives type error&lt;br/&gt;
   when trying to read it later.&lt;/p&gt;

&lt;p&gt;i) rs = s.executeQuery(&quot;SELECT id from mytab for update&quot;);&lt;br/&gt;
   String cursorname = rs.getCursorName();&lt;br/&gt;
   rs.next();&lt;br/&gt;
   con.createStatement().executeUpdate(&quot;update mytab set name=&apos;foobar&apos; where current of &quot; +&lt;br/&gt;
                                              cursorname);&lt;/p&gt;


&lt;p&gt;   This works correctly because the passed down row has two columns, and&lt;br/&gt;
   ScrollInsensitiveResultSet the updated col 2 (&quot;name&quot;), effectively updating&lt;br/&gt;
   column 1 (&quot;id&quot;) with its existing value.&lt;/p&gt;


&lt;p&gt;For update of the baserow, UpdateResultSet.collectAffectedRows (and&lt;br/&gt;
updateDeferredRows) uses the object RowChanger:&lt;/p&gt;

&lt;p&gt;   :&lt;br/&gt;
   source.updateRow(newBaseRow);     &amp;#8211; updates hash table&lt;br/&gt;
   rowChanger.updateRow(row, newBaseRow, baseRowLocation);  &amp;#8211; updates base row&lt;br/&gt;
   :   &lt;/p&gt;

&lt;p&gt;which contains info on row column mappings between base table, select&lt;br/&gt;
list and and columns to be updated. I think ScrollInsensitiveResultSet&lt;br/&gt;
needs similar (but not identical) information: The row to be updated&lt;br/&gt;
in the hash table has a (sub)set of the columns of the basetable&lt;br/&gt;
determined by the SELECT list.&lt;/p&gt;

&lt;p&gt;The naming is a bit misleading, too, because &quot;newBaseRow&quot; has&lt;br/&gt;
cardinality 1 in the cases where one specifies FOR UPDATE OF&lt;br/&gt;
&amp;lt;col-list&amp;gt; &lt;b&gt;and&lt;/b&gt; updates only one column, no matter how many columns&lt;br/&gt;
are specified in &amp;lt;col-list&amp;gt;. So, even mentioning all columns leads to&lt;br/&gt;
a different code path that omitting the OF &amp;lt;col-list&amp;gt;.  Omitting it,&lt;br/&gt;
makes newBaseRow always ahve the cardinality of the underlying base&lt;br/&gt;
table, as the name would suggest.&lt;/p&gt;</comment>
                            <comment id="12708695" author="dagw" created="Wed, 13 May 2009 01:12:31 +0100"  >&lt;p&gt;Uploading a first patch for this issue. It passes the RowChanger&lt;br/&gt;
object on down to ScrollInsensitiveResultSet, so that it can do the&lt;br/&gt;
proper projections itself. Any underlying PRN is no longer called upon&lt;br/&gt;
to do the project, rather this now happens in&lt;br/&gt;
ScrollInsensitiveResultSet.update itself.&lt;/p&gt;

&lt;p&gt;Unfortunately this &quot;opens up&quot; RowChangerImpl logic a bit by&lt;br/&gt;
introducing two new public methods to get at its internal structures,&lt;br/&gt;
feel free to suggest a better way to encapsulate this logic. I guess I&lt;br/&gt;
could move the method ScrollInsensitiveResultSet.findSelectedCol&lt;br/&gt;
inside RowChanger...&lt;/p&gt;

&lt;p&gt;SURTest.java has a new test fixture with several scenarios that fail&lt;br/&gt;
(or succeed by &quot;accident&quot;) without the patch.&lt;/p&gt;

&lt;p&gt;I also logged &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4226&quot; title=&quot;Column updatability wrong in corner case with explicit FOR UPDATE OF &amp;lt;column-list&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4226&quot;&gt;DERBY-4226&lt;/a&gt; as part of this investigation. SURTest&lt;br/&gt;
contains a scenario that will fail when that bug is fixed; it is&lt;br/&gt;
included here because the patch touches on that logic (a base column&lt;br/&gt;
selected more than once in a updatable result set) as well.&lt;/p&gt;

&lt;p&gt;The patch also contains a temporary (I intend to remove it before&lt;br/&gt;
commit) debug flag for some diagnostic output which may help a&lt;br/&gt;
reviewer to understand what&apos;s going on. Enable with&lt;br/&gt;
-Dderby.debug.true=SURMapping.&lt;/p&gt;

&lt;p&gt;I did run regressions OK with an earlier version of this patch. Rerunning again now.&lt;/p&gt;</comment>
                            <comment id="12708699" author="dagw" created="Wed, 13 May 2009 01:19:42 +0100"  >&lt;p&gt;Patch derby-4198-throwable committed as svn 774148.&lt;/p&gt;</comment>
                            <comment id="12709214" author="dagw" created="Thu, 14 May 2009 00:40:28 +0100"  >&lt;p&gt;Uploading 2nd spin, derby-4198-2 of the patch for the first problem of this issue.&lt;br/&gt;
This moves the logic of findSelectedCol to inside RowChanger for better encapsulation&lt;br/&gt;
of that logic. I also removed a vacuous (I believe) call to source.updateRow&lt;br/&gt;
from the deferred update code of UpdateResultSet. That code is only ever run as &lt;br/&gt;
part of a referential action and is not relevant for updating an scrollable insensitive result set.&lt;/p&gt;

&lt;p&gt;Ready for review.&lt;/p&gt;</comment>
                            <comment id="12718049" author="dagw" created="Wed, 10 Jun 2009 13:38:07 +0100"  >&lt;p&gt;Uploading version #3 of this patch; just improved comments.&lt;br/&gt;
I plan to commit this patch shortly.&lt;/p&gt;</comment>
                            <comment id="12718765" author="knutanders" created="Fri, 12 Jun 2009 10:14:37 +0100"  >&lt;p&gt;Hi Dag,&lt;/p&gt;

&lt;p&gt;I had a quick look at the #3 patch and also did some manual testing of&lt;br/&gt;
it. It basically looks good. Some questions and very minor nits:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The javadoc for FormatableBitSet.anySetBit(int) is not very clear on&lt;br/&gt;
  the behaviour when beyondBit is negative. As far as I can see from&lt;br/&gt;
  the implementation, -1 is OK but other negative values will cause&lt;br/&gt;
  ArrayIndexOutOfBoundsException. Do you think it would make sense to&lt;br/&gt;
  add a sentence to its javadoc stating that beyondBit=-1 can be used&lt;br/&gt;
  to search from the start of the bit set? Then it would be quite clear&lt;br/&gt;
  that the usage in findSelectedCol() is OK.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In ScrollInsensitiveResultSet.updateRow(), it&apos;s not necessary to&lt;br/&gt;
  initialize map to null. By not initializing it we gain a&lt;br/&gt;
  compile-time check that the array is never used uninitialized&lt;br/&gt;
  instead of getting an NPE at run-time. (There&apos;s no problem now, but&lt;br/&gt;
  a compile-time check will reduce the risk of introducing bugs if the&lt;br/&gt;
  code is changed later.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;RowChangerImpl.toString() returns &quot;&quot; in non-debug builds. Would&lt;br/&gt;
  super.toString() be better?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;You mentioned in an earlier comment that you would remove the debug&lt;br/&gt;
  code before commit. Is that still the plan?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12720067" author="dagw" created="Tue, 16 Jun 2009 12:06:54 +0100"  >&lt;p&gt;Thanks for the review, Knut.&lt;br/&gt;
Uploading patch derby-4198-4 incorporating your comments.&lt;br/&gt;
I added a sentence to FormatableBitSet:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;@param beyondBit Only look at bit that is greater than this bit number.&lt;/li&gt;
	&lt;li&gt;Supplying a value of -1 makes the call equivalent to&lt;/li&gt;
	&lt;li&gt;anySetBit().&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12720071" author="dagw" created="Tue, 16 Jun 2009 12:16:28 +0100"  >&lt;p&gt;Committed derby-4198-4 on trunk as svn 785163.&lt;/p&gt;</comment>
                            <comment id="12720074" author="dagw" created="Tue, 16 Jun 2009 12:28:14 +0100"  >&lt;p&gt;Backported to 10.5 branch as svn 785165.&lt;/p&gt;</comment>
                            <comment id="12720742" author="kmarsden" created="Wed, 17 Jun 2009 17:21:10 +0100"  >&lt;p&gt;There is a new javadoc warning on trunk and 10.5:&lt;br/&gt;
	  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; C:\nightlies\main\src\opensource\java\engine\org\apache\derby\iapi\sql\execute\RowChanger.java:175: warning - @returns is an unknown tag.&lt;br/&gt;
		  &lt;span class=&quot;error&quot;&gt;&amp;#91;javadoc&amp;#93;&lt;/span&gt; 1 warning&lt;/p&gt;

&lt;p&gt;which may be related to this change.&lt;/p&gt;</comment>
                            <comment id="12721278" author="kristwaa" created="Thu, 18 Jun 2009 15:28:40 +0100"  >&lt;p&gt;I took the liberty of fixing this to test the Hudson CI build trigger.&lt;br/&gt;
Committed to trunk with revision 786078 and backported to 10.5 with revision 786080.&lt;/p&gt;</comment>
                            <comment id="12865985" author="dagw" created="Tue, 11 May 2010 00:49:18 +0100"  >&lt;p&gt;Tiago, can you close this issue?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12402360">DERBY-3839</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406790" name="ErrorOutput_Client.tar.gz" size="152284" author="espinha" created="Wed, 29 Apr 2009 16:06:26 +0100"/>
                            <attachment id="12406791" name="ErrorOutput_Embedded.tar.gz" size="153667" author="espinha" created="Wed, 29 Apr 2009 16:06:27 +0100"/>
                            <attachment id="12406792" name="ReproHoldCursorBug.java" size="3119" author="espinha" created="Wed, 29 Apr 2009 16:06:27 +0100"/>
                            <attachment id="12407951" name="derby-4198-1.diff" size="25757" author="dagw" created="Wed, 13 May 2009 01:45:17 +0100"/>
                            <attachment id="12407946" name="derby-4198-1.diff" size="26390" author="dagw" created="Wed, 13 May 2009 01:12:31 +0100"/>
                            <attachment id="12407952" name="derby-4198-1.stat" size="926" author="dagw" created="Wed, 13 May 2009 01:45:17 +0100"/>
                            <attachment id="12407947" name="derby-4198-1.stat" size="992" author="dagw" created="Wed, 13 May 2009 01:12:31 +0100"/>
                            <attachment id="12408067" name="derby-4198-2.diff" size="24667" author="dagw" created="Thu, 14 May 2009 00:40:28 +0100"/>
                            <attachment id="12408068" name="derby-4198-2.stat" size="926" author="dagw" created="Thu, 14 May 2009 00:40:28 +0100"/>
                            <attachment id="12410313" name="derby-4198-3.diff" size="24966" author="dagw" created="Wed, 10 Jun 2009 14:19:14 +0100"/>
                            <attachment id="12410309" name="derby-4198-3.stat" size="938" author="dagw" created="Wed, 10 Jun 2009 13:38:07 +0100"/>
                            <attachment id="12410790" name="derby-4198-4.diff" size="21271" author="dagw" created="Tue, 16 Jun 2009 12:06:54 +0100"/>
                            <attachment id="12410791" name="derby-4198-4.stat" size="946" author="dagw" created="Tue, 16 Jun 2009 12:06:54 +0100"/>
                            <attachment id="12407157" name="derby-4198-throwable.diff" size="1324" author="dagw" created="Mon, 4 May 2009 16:24:05 +0100"/>
                            <attachment id="12407158" name="derby-4198-throwable.stat" size="66" author="dagw" created="Mon, 4 May 2009 16:24:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 May 2009 14:46:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24094</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l47:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37239</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>