<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:31:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-243/DERBY-243.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-243] connection toString should uniquely identify the connection</title>
                <link>https://issues.apache.org/jira/browse/DERBY-243</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The toString() on the Derby connection doesn&apos;t print &lt;br/&gt;
unique information.&lt;br/&gt;
for example  System.out.println(conn) prints:&lt;br/&gt;
EmbedConnection  in the case of derby embedded&lt;/p&gt;

&lt;p&gt;It would be great if the toString() method for connections could be used to differentiate one connection from another.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="32068">DERBY-243</key>
            <summary>connection toString should uniquely identify the connection</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davidvc">David Van Couvering</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Apr 2005 14:13:50 +0100</created>
                <updated>Sat, 11 Jun 2005 04:49:46 +0100</updated>
                            <resolved>Sat, 11 Jun 2005 02:57:59 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="63981" author="kmarsden" created="Fri, 29 Apr 2005 02:48:33 +0100"  >&lt;p&gt;I am not sure if XA Connections and Pooled Connections have the same issue.  I didn&apos;t immediately see an override of the toString() method in BrokeredConnection.java like there is for EmbedConnection&lt;/p&gt;</comment>
                            <comment id="64670" author="davidvc" created="Sat, 7 May 2005 08:10:56 +0100"  >&lt;p&gt;I am attaching the patch that should resolve this bug.  I added toString() to the&lt;br/&gt;
appropriate connection classes and updated the dataSourcePermissions.java and &lt;br/&gt;
dataSourcePermissions_net.java tests to test toString().  I mostly just verify&lt;br/&gt;
that two connections do not have the same string and follow the expected &lt;br/&gt;
pattern.  I had to &quot;sed&quot; out the actual connection ids in the output so we&lt;br/&gt;
could guarantee a pass even if the ids change.&lt;/p&gt;

&lt;p&gt;Here is the output of svn status&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\impl\jdbc\EmbedConnection.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbedPooledConnection.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\jdbc\BrokeredConnection.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\dataSour&lt;br/&gt;
cePermissions.java&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\dataSour&lt;br/&gt;
cePermissions_sed.properties&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\copyfile&lt;br/&gt;
s.ant&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\derbynet\dataSou&lt;br/&gt;
rcePermissions_net_sed.properties&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\derbynet\dataSou&lt;br/&gt;
rcePermissions_net.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\dataSo&lt;br/&gt;
urcePermissions_net.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\dataSourcePermi&lt;br/&gt;
ssions.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\&lt;br/&gt;
dataSourcePermissions_net.out&lt;br/&gt;
M      java\client\org\apache\derby\client\ClientPooledConnection.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\Connection.java&lt;br/&gt;
M      java\client\org\apache\derby\client\am\LogicalConnection.java&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="65538" author="davidvc" created="Tue, 17 May 2005 03:49:31 +0100"  >&lt;p&gt;I have replaced the old patch with this one.  This one uses UUID to identify a connection string.&lt;br/&gt;
It also provides independent connection strings for PooledConnection classes.  &lt;/p&gt;

&lt;p&gt;I also added some new tests to jdbcapi/checkDataSource and jdbcapi/CheckDataSource30.  I refactored&lt;br/&gt;
the code to ensure two toStrings() are not unique for two separate objects and put this&lt;br/&gt;
into TestUtil.&lt;/p&gt;

&lt;p&gt;All tests pass, except for tools/dblook_test.java, which has a single-line diff that looks completely&lt;br/&gt;
unrelated.  I am investigating and may report a separate bug on this.&lt;/p&gt;

&lt;p&gt;Here is svn status output:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/dataSour&lt;br/&gt;
cePermissions.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDat&lt;br/&gt;
aSource.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSou&lt;br/&gt;
rcePermissions_net_sed.properties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/dataSo&lt;br/&gt;
urcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/dataSourcePermi&lt;br/&gt;
ssions.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/&lt;br/&gt;
dataSourcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource&lt;br/&gt;
.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource&lt;br/&gt;
30.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/suites/derbyall.proper&lt;br/&gt;
ties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java&lt;br/&gt;
M      java/client/org/apache/derby/client/ClientPooledConnection.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/Connection.java&lt;br/&gt;
A      java/client/org/apache/derby/client/am/BasicUUID.java&lt;br/&gt;
A      java/client/org/apache/derby/client/am/BasicUUIDFactory.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/LogicalConnection.java&lt;/p&gt;</comment>
                            <comment id="65543" author="davidvc" created="Tue, 17 May 2005 04:05:42 +0100"  >&lt;p&gt;This feature can be implemented but will not provide a unique string value until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-243&quot; title=&quot;connection toString should uniquely identify the connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-243&quot;&gt;&lt;del&gt;DERBY-243&lt;/del&gt;&lt;/a&gt; is resolved and we have a unique connection string&lt;/p&gt;</comment>
                            <comment id="65735" author="kmarsden" created="Thu, 19 May 2005 14:48:59 +0100"  >&lt;p&gt;I performed only a very rough review of this diff.  I am hoping someone else can do a more detailed review once the following issues have been resolved.&lt;/p&gt;

&lt;p&gt;1) I tend to think that it is confusing to have a separate UUID for the client connection.  In a client server environment, each connection has two separate UUID&apos;s, which could get confusing.  Especially since the connection id semantics change when dealing with client.  There is an existing Derby entry Derby-293 to correlate the client and server connections. Might it be good to defer the client part of this work until that is considered?&lt;/p&gt;

&lt;p&gt;2) I think it would be good to document the connection id semantics in the Jira entry and the code.&lt;/p&gt;
</comment>
                            <comment id="65821" author="davidvc" created="Fri, 20 May 2005 13:51:25 +0100"  >&lt;p&gt;In response to Kathey&apos;s request, I am providing information on the semantics for providing a unique string representation for a connection.  &lt;/p&gt;

&lt;p&gt;First, it is important to identify three major types of connections in Derby:&lt;/p&gt;

&lt;p&gt;POOLED CONNECTIONS&lt;br/&gt;
Pooled Connections are a subtype of javax.sql.PooledConnection.  They represent a connection stored on a pool.  References to PooledConnections are never directly visible to application code.  They are used by implementors of connection pools so that management of pooled connections can be standardized across JDBC driver providers.&lt;/p&gt;

&lt;p&gt;PROXY CONNECTIONS&lt;br/&gt;
Proxy connections are a class of connections that, although they implement the java.sql.Connection interface, don&apos;t directly implement the methods of java.sql.Connection.  Instead, they act as a proxy to an underlying physical connection, and allow containers to &quot;inject&quot; container logic when key connectoin lifecycle events occur.  These are also sometimes called &quot;logical connections&quot; or &quot;brokered connections&quot;.&lt;/p&gt;

&lt;p&gt;PHYSICAL CONNECTIONS&lt;/p&gt;

&lt;p&gt;These are the connection classes that do the &quot;heavy lifting&quot; of actually implementing the methods on java.sql.Connection.  They are the underlying physical connections wrapped by proxy connections.  &lt;/p&gt;

&lt;p&gt;CONNECTION STRING SEMANTICS&lt;br/&gt;
With these definitions in place, here are the semantics of connection strings:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When a physical connection is created, it is assigned a unique UUID that is unchanged for the lifetime of the connection.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When an application calls Connection.toString(), it gets the string &quot;Connection_&amp;lt;UUID&amp;gt;&quot; of the underlying physical connection, regardless of where the application has a reference to the physical connection itself a reference to a proxy connection (aka brokered connection) that wraps the physical connection.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A pooled connection is assigned a separate UUID from a physical connection.  When a container calls PooledConnection.toString(), it gets the string &quot;PooledConnection_&amp;lt;UUID&amp;gt;&quot;.  This is useful for developers implementing connection pools when they are trying to debug pooled connections&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="66073" author="davidvc" created="Tue, 24 May 2005 02:23:59 +0100"  >&lt;p&gt;I have attached the latest patch in response to Kathey&apos;s comments.  &lt;/p&gt;

&lt;p&gt;I added comments to the Javadoc for the connection string semantics, and I removed &lt;br/&gt;
the toString() code for the client side.  derbyall passes with the exception of &lt;br/&gt;
parameterMapping and backupRestore, which others have noted are currently failing.&lt;/p&gt;

&lt;p&gt;Output of svn status:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/dataSourcePermissions.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net_sed.properties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/dataSourcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/dataSourcePermissions.out&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/dataSourcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource30.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java&lt;/p&gt;</comment>
                            <comment id="66181" author="davidvc" created="Wed, 25 May 2005 02:51:11 +0100"  >&lt;p&gt;In my investigations to understand how to add the connection string to VTIs, I have thought further about this item, and it has become clear to me that storing the unique id in the Connection object is putting it at the wrong level.  If, for example, we ever want to provide a separate API for obtaining a session into the Derby database outside of JDBC, this information would not be available.&lt;/p&gt;

&lt;p&gt;For this reason, it makes much more sense to use the LanguageConnectionContext as the owner of a unique identification for the session.  &lt;/p&gt;

&lt;p&gt;As some of our discussion has revealed, the LanguageConnectionContext already has an instance number, printed out as either &quot;SESSIONID&quot; or &quot;LCCID&quot; in the logs and VTIs.  One could argue that we should just use this id.  However, this id is a simple static integer incremented each time a new LanguageConnectionContext is created, and my concerns about loss of uniqueness across classloaders stands for this id, and I think it is going to cause us problems, particularly in the context of an app server where there is normally a separate classloader for each deployed application.&lt;/p&gt;

&lt;p&gt;I am recommending that we add a new method to LanguageConnectionContext, UUID getId().  Connection.toString() will return &quot;Connection_&quot; + the String representation of this id.  &lt;/p&gt;

&lt;p&gt;Also, today our error logs and VTIs today all use the existing instance number as the LanguageConnectionContext id (SESSIONID or LCCID).  I would like to propose that this be replaced to print out the new UUID instead.  &lt;/p&gt;

&lt;p&gt;Pooled connections, as we have already discussed, have their own separate identity, and I am recommending that we keep them using their own UUID as it is already implemented.&lt;/p&gt;</comment>
                            <comment id="66186" author="djd" created="Wed, 25 May 2005 04:00:02 +0100"  >&lt;p&gt;David wrote&lt;br/&gt;
&amp;gt; For this reason, it makes much more sense to use the LanguageConnectionContext as the owner of a unique identification for the session.&lt;/p&gt;

&lt;p&gt;I agree, the LCC is the &quot;physical connection&quot;, thus having it define the unique identification matches the definition.&lt;/p&gt;</comment>
                            <comment id="66297" author="davidvc" created="Thu, 26 May 2005 07:19:00 +0100"  >&lt;p&gt;Here is an updated patch for this item.  This addresses my previous comment by pushing&lt;br/&gt;
the unique id down to the LanguageConnectionContext.&lt;/p&gt;

&lt;p&gt;I also modified the trace and log output to use this id rather than the LCC instance&lt;br/&gt;
number.  This means that you can correlate the output from Connection.toString()&lt;br/&gt;
with the output in the error log and traces.&lt;/p&gt;

&lt;p&gt;Finally, upon further rumination, I decided to remove the &quot;Connection_&quot; and &lt;br/&gt;
&quot;PooledConnection_&quot; prefix from the toString() output.  As I worked with this&lt;br/&gt;
code, it seemed odd to have ths prefix here, when the user will normally print out &lt;br/&gt;
debug code like &lt;/p&gt;

&lt;p&gt;  System.out.println(&quot;Connection: &quot; + conn.toString());&lt;/p&gt;

&lt;p&gt;Removing the &quot;Connection_&quot; prefix also means the output of toString() &lt;br/&gt;
exactly matches the output of lcc.getId(), which may make it easier &lt;br/&gt;
in the future to do filters against VTIs using the output of conn.toString().&lt;/p&gt;

&lt;p&gt;Output of svn status:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/GenericStatement.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionFactory.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/execute/BasicNoPutResultSetImpl.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/execute/NoRowsResultSetImpl.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/dataSourcePermissions.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dataSourcePermissions_net_sed.properties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNet/dataSourcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/dataSourcePermissions.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/dataSourcePermissions_net.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/checkDataSource30.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/suites/derbyall.properties&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java&lt;/p&gt;


&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="66299" author="davidvc" created="Thu, 26 May 2005 07:27:18 +0100"  >&lt;p&gt;A rescan of svn status revealed that the patch included my modification of &lt;br/&gt;
derby.properties to use the &quot;test: durability mode.  Oops!&lt;/p&gt;

&lt;p&gt;This updated patch does not include this modification.&lt;/p&gt;</comment>
                            <comment id="66312" author="davidvc" created="Thu, 26 May 2005 10:02:51 +0100"  >&lt;p&gt;Good catch by Kathey.  I added some SQL to lang/miscerrors.sql to print out all the rows&lt;br/&gt;
from the error log using the ErrorLogReader VTI, and it printed out the new ID fine,&lt;br/&gt;
except that it was truncated because the column length for the id was 15 when it needs&lt;br/&gt;
to be 36 for a UUID.&lt;/p&gt;

&lt;p&gt;I am attaching an updated patch that resolves this issue.&lt;/p&gt;

&lt;p&gt;I modified the ErrorLogReader VTI to set the length to 36, and the data printed out&lt;br/&gt;
fine.  I also include the change to miscerrors.sql so that we are excercising this&lt;br/&gt;
VTI in our regression tests.&lt;/p&gt;

&lt;p&gt;Thanks, Kathey!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12312994" author="davidvc" created="Wed, 8 Jun 2005 14:29:20 +0100"  >&lt;p&gt;Updated patch for this issue.  Here is a summary of what I changed.  A lot of what I did was remove code I had put in, &lt;br/&gt;
so I think you&apos;ll see a much simpler patch.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Reverted back to using a simple integer for the GenericLanguageConnectionContext id&lt;/li&gt;
	&lt;li&gt;All trace and log statements and the ErrorLogReader VTI go back to using the simple integer SESSIONID/LCCID&lt;/li&gt;
	&lt;li&gt;EmbedConnection uses the LCC ID as its toString value&lt;/li&gt;
	&lt;li&gt;BrokeredConnection continues to use the underlying physical connection&apos;s toString value for it&apos;s toString value&lt;/li&gt;
	&lt;li&gt;EmbedPooledConnection now uses a simple integer instead of a UUID&lt;/li&gt;
	&lt;li&gt;Reworked the tests to open 10 connections and make sure they are all unique.  It does this for a DriverManager&lt;br/&gt;
  connection, a connection from a DataSource, a PooledConnection from a ConnectionPoolDataSource and an&lt;br/&gt;
  XAConnection from an XADataSource.  It also ensures connections obtained from the same PooledConnection&lt;br/&gt;
  have the same toString() value&lt;/li&gt;
	&lt;li&gt;I no longer print out the toString() value in the test.&lt;/li&gt;
	&lt;li&gt;I modified lang/miscerrors.sql to select from the ErrorLogReader VTI so we can validate that this output is&lt;br/&gt;
  correct.  &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Ran derbyall, everything passed except for a strange error in encryptionAll/multi/stress which appears completely&lt;br/&gt;
unrelated.  Every now and then my stress tests fail for reasons I don&apos;t fully fathom.  Should I be investigating these&lt;br/&gt;
or is this a known issue?&lt;/p&gt;

&lt;p&gt;Here is the output of svn status:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/miscerrors.sql&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource30.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/miscerrors.out&lt;/p&gt;</comment>
                            <comment id="12313085" author="davidvc" created="Thu, 9 Jun 2005 06:05:07 +0100"  >&lt;p&gt;Revised patch based on Oystein&apos;s most recent review.  &lt;/p&gt;

&lt;p&gt;Changes since previous patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Cleared up extraneous spaces&lt;/li&gt;
	&lt;li&gt;Used Integer.toString(int) rather than new Integer(int).toString()&lt;/li&gt;
	&lt;li&gt;Restored original checkDataSource30.java, it is no longer part of this patch&lt;/li&gt;
	&lt;li&gt;Fixed Javadoc for EmbedPooledConnection.toString()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;derbyall passes with no errors&lt;/p&gt;

&lt;p&gt;svn status:&lt;br/&gt;
M      java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java&lt;br/&gt;
M      java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/miscerrors.sql&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/miscerrors.out&lt;/p&gt;</comment>
                            <comment id="12313126" author="kmarsden" created="Thu, 9 Jun 2005 14:53:21 +0100"  >&lt;p&gt;Committed patch to print connection id in connection.toString&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\iapi\jdbc\BrokeredConnection.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\jdbc\EmbedConnection.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\jdbc\EmbedPooledConnection.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\miscerrors.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\checkDataSource.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\miscerrors.sql&lt;br/&gt;
Transmitting file data ......&lt;br/&gt;
Committed revision 189704.&lt;br/&gt;
$&lt;/p&gt;</comment>
                            <comment id="12313307" author="davidvc" created="Sat, 11 Jun 2005 02:57:59 +0100"  >&lt;p&gt;Checked in by Kathey&lt;/p&gt;</comment>
                            <comment id="12313320" author="kmarsden" created="Sat, 11 Jun 2005 04:49:46 +0100"  >&lt;p&gt;fixed&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="32646">DERBY-291</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="32647">DERBY-292</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12310609" name="DERBY-243.diff" size="17719" author="davidvc" created="Thu, 9 Jun 2005 06:05:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 7 May 2005 07:10:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29451</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy180v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>