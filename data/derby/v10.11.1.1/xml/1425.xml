<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:28:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1425/DERBY-1425.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1425] testProtocol hangs with 10.1 client talking to 10.2 server</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1425</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I was trying to verify that the changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-920&quot; title=&quot;small delta&amp;#39;s to replace cloudscape etc with derby in comments/code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-920&quot;&gt;&lt;del&gt;DERBY-920&lt;/del&gt;&lt;/a&gt; hadn&apos;t&lt;br/&gt;
introduced any new compatibility problems (they shouldn&apos;t, because&lt;br/&gt;
we were changing an internal class, but I wanted to make sure).&lt;/p&gt;

&lt;p&gt;So I was trying to follow some old tips about how to run tests with&lt;br/&gt;
an old client against a new server, as documented in:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/db-derby/TestingOldClientNewServer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/TestingOldClientNewServer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, when I did this, the test &quot;testProtocol&quot; did not terminate.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12344542">DERBY-1425</key>
            <summary>testProtocol hangs with 10.1 client talking to 10.2 server</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 Jun 2006 00:54:18 +0100</created>
                <updated>Tue, 13 Sep 2011 16:09:28 +0100</updated>
                            <resolved>Wed, 7 Jul 2010 08:40:26 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12416630" author="bryanpendleton" created="Sun, 18 Jun 2006 00:55:45 +0100"  >&lt;p&gt;Comment from Knut Anders on derby-dev:&lt;/p&gt;

&lt;p&gt;I also see this. However, the CPU usage is more like 0% than 100%. I&lt;br/&gt;
think this is caused by the pre-fetching that was added to the network&lt;br/&gt;
client in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-822&quot; title=&quot;Client driver: Pre-fetch data on executeQuery()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-822&quot;&gt;&lt;del&gt;DERBY-822&lt;/del&gt;&lt;/a&gt;. If you put this at the end of values1.inc&lt;/p&gt;

&lt;p&gt;    readReplyDss&lt;br/&gt;
    readLengthAndCodepoint QRYDTA&lt;br/&gt;
    skipBytes&lt;/p&gt;

&lt;p&gt;or simply&lt;/p&gt;

&lt;p&gt;    skipDss&lt;/p&gt;

&lt;p&gt;testProtocol will terminate successfully. &lt;/p&gt;

&lt;p&gt;This is not a compatibility issue, since the network client (also the&lt;br/&gt;
10.1 client) knows that a QRYDTA object may or may not arrive. The&lt;br/&gt;
protocol test, on the other hand, is written with a specific version&lt;br/&gt;
of the server in mind, with the expected server response&lt;br/&gt;
hard-coded. Since the 10.1 version of the test doesn&apos;t expect QRYDTA&lt;br/&gt;
from an OPNQRY, the actual server response and the expected response&lt;br/&gt;
will be out of sync.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what causes the hang, though. The test that is hanging is&lt;br/&gt;
&quot;Test for too large value for OUTEXP in EXCSQLSTT&quot;, and it happens in&lt;br/&gt;
the first skipDss in connect.inc. When this test starts, there is at&lt;br/&gt;
least a left-over QRYDTA from the previous test (and perhaps more&lt;br/&gt;
since that one doesn&apos;t read any data sent from the server). But that&lt;br/&gt;
should not be a problem since the endTest command is supposed to close&lt;br/&gt;
the socket and streams and open new ones. We should probably look into&lt;br/&gt;
why this is happening, at least so that we can eliminate that there&apos;s&lt;br/&gt;
something wrong with the network server code.&lt;/p&gt;
</comment>
                            <comment id="12416631" author="bryanpendleton" created="Sun, 18 Jun 2006 00:56:24 +0100"  >&lt;p&gt;Comment from Knut Anders on derby-dev:&lt;/p&gt;

&lt;p&gt;It seems like the hang is in fact caused by a bug in&lt;br/&gt;
DDMReader. dssIsChainedWithDiffID and dssIsChainedWithSameID are not&lt;br/&gt;
reset in initialize(), so values from a previous session might be&lt;br/&gt;
used. In this particular case, the old values made&lt;br/&gt;
DDMReader.getCurrChainState() return an incorrect value, which again&lt;br/&gt;
made calls to DDMWriter.finalizeChain() a no-op. The protocol test&lt;br/&gt;
therefore never sent the DRDA commands it thought it had sent, and&lt;br/&gt;
both sides ended up waiting for data from the other one.&lt;/p&gt;

&lt;p&gt;It is not clear to me whether this bug actually can be triggered&lt;br/&gt;
outside the protocol test since the client driver doesn&apos;t use&lt;br/&gt;
DDMReader/DDMWriter. The way DRDAConnThread uses those classes should&lt;br/&gt;
be safe, as the server always reads a command before responding and&lt;br/&gt;
the fields seem to be set to reasonable values at each read.&lt;/p&gt;

&lt;p&gt;Anyway, setting those two fields to false in DDMReader.initialize()&lt;br/&gt;
made the hang go away, and derbynetclientmats runs cleanly with that&lt;br/&gt;
change.&lt;/p&gt;</comment>
                            <comment id="12417589" author="knutanders" created="Sat, 24 Jun 2006 15:47:11 +0100"  >&lt;p&gt;ddmreader_initialize.diff contains the changes to DDMReader which made the hang go away. I have not had time to check whether these changes have unwanted consequences. Use at your own risk! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12417689" author="bryanpendleton" created="Mon, 26 Jun 2006 01:26:30 +0100"  >&lt;p&gt;Hi Knut Anders, thanks for the patch. I&apos;m a little confused; is this a patch for the&lt;br/&gt;
10.1 Network Client code, or for the 10.2 Network Server code? Or should I&lt;br/&gt;
apply it to both code bases?&lt;/p&gt;</comment>
                            <comment id="12417691" author="knutanders" created="Mon, 26 Jun 2006 02:37:30 +0100"  >&lt;p&gt;Hi Bryan, the patch is for the 10.2 network server. When you are running derbynetclientmats with the configuration you have described in &lt;a href=&quot;http://wiki.apache.org/db-derby/TestingOldClientNewServer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/TestingOldClientNewServer&lt;/a&gt;, testProtocol from the 10.1 derbyTesting.jar is used, but it extends the TestProto class found in the 10.2 derbynet.jar, which again uses DDMReader/DDMWriter in the 10.2 derbynet.jar to communicate with the server. So, in a way, you are running 10.2 network server code both on the client side and on the server side, but the actual commands are read from 10.1 test code. Does this make you less confused? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Note that I&apos;m pretty sure this particular hang cannot occur in the network server itself. When a new session is started, DRDAConnThread.processCommands() begins a loop reading commands and writing responses. It always calls DDMReader.readDssHeader() before writing anything back to the client. readDssHeader() explicitly sets the values of dssIsChainedWithSameID and dssIsChainedWithDiffID. Since the hang was caused by those two variables having values from the previous session when the first flush occurred, I don&apos;t see how it could happen on the server.&lt;/p&gt;</comment>
                            <comment id="12417696" author="bryanpendleton" created="Mon, 26 Jun 2006 06:51:05 +0100"  >&lt;p&gt;Thanks! Yes, that makes sense.&lt;/p&gt;

&lt;p&gt;With your patch, the hang no longer occurs for me, so I can confirm that your change resolves the hang.&lt;/p&gt;

&lt;p&gt;The test does not hang, but it does not pass, either, but I think that is probably a topic for a separate issue, do you agree?&lt;/p&gt;</comment>
                            <comment id="12417731" author="knutanders" created="Mon, 26 Jun 2006 14:24:31 +0100"  >&lt;p&gt;Yes, the test still fails, but I don&apos;t think a separate issue is needed since the test should fail in a mixed environment. It does not test whether the client works, but whether the server responds exactly the way a 10.1 server would. One might even argue that derbynetmats/derbynetclientmats is not the correct suite for this test since it neither uses the client driver nor JCC.&lt;/p&gt;</comment>
                            <comment id="12422804" author="kmarsden" created="Sat, 22 Jul 2006 02:09:30 +0100"  >&lt;p&gt;From the comments it looks like this is not a product regression but only a test issue.  Unchecking the Regression checkbox.&lt;/p&gt;</comment>
                            <comment id="12885696" author="knutanders" created="Tue, 6 Jul 2010 22:30:03 +0100"  >&lt;p&gt;There has been no activity on this bug for four years, but there&apos;s a patch attached. I think we should either see if we could get the patch committed or close the bug as Won&apos;t Fix. I&apos;ll have a look. Intuitively, clearing the two flags on reinitialization sounds correct, so my intention is to commit it if the tests still pass.&lt;/p&gt;</comment>
                            <comment id="12885713" author="knutanders" created="Tue, 6 Jul 2010 23:21:18 +0100"  >&lt;p&gt;Attaching a patch which makes derbynet/testProtocol.java expose the hang. The patch inserts a test case right before the one Bryan saw hanging, and that new test case executes VALUES 1 without reading the last DSS which contains QRYDTA. This gets DDMReader into the problematic state seen with the 10.1 version of the protocol test, and the next test case hangs. With the suggested fix in DDMReader&apos;s initialize() method, testProtocol completes successfully.&lt;/p&gt;</comment>
                            <comment id="12885779" author="bryanpendleton" created="Wed, 7 Jul 2010 03:01:00 +0100"  >&lt;p&gt;+1 to proceed with this patch. Thanks for returning to this problem and cleaning it up!&lt;/p&gt;</comment>
                            <comment id="12885871" author="knutanders" created="Wed, 7 Jul 2010 08:40:26 +0100"  >&lt;p&gt;All the regression tests ran cleanly. Committed revision 961271.&lt;/p&gt;

&lt;p&gt;I&apos;m not planning to back-port the fix. It&apos;s most likely harmless, but since the analysis so far suggests that this is not a problem that will be seen when using the client driver to talk to the server, it&apos;s probably not worth the effort to back-port it.&lt;/p&gt;</comment>
                            <comment id="12885872" author="knutanders" created="Wed, 7 Jul 2010 08:42:38 +0100"  >&lt;p&gt;Removed network client from components since the problem was in the server code.&lt;/p&gt;</comment>
                            <comment id="13103683" author="kristwaa" created="Tue, 13 Sep 2011 16:09:28 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335862" name="ddmreader_initialize.diff" size="558" author="knutanders" created="Sat, 24 Jun 2006 15:47:11 +0100"/>
                            <attachment id="12448830" name="test.diff" size="3166" author="knutanders" created="Tue, 6 Jul 2010 23:21:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 24 Jun 2006 14:47:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22496</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0faf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36295</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>