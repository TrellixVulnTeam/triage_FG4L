<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4380/DERBY-4380.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4380] Subqueries not allowed in ON clause</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4380</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;SOME is not allowed in ON-clause:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t1 (i integer);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create table t2 (i integer);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create table t3 (i integer);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values (1);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t2 values (2);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t3 values 2,3,4;&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t1 where t1.i = some (select i from t3);&lt;br/&gt;
I          &lt;br/&gt;
-----------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt; select * from t1 inner join t2 on  t1.i = some (select i from t3);&lt;br/&gt;
ERROR 42972: An ON clause associated with a JOIN operator is not valid.&lt;br/&gt;
ij&amp;gt; &lt;/p&gt;</description>
                <environment></environment>
        <key id="12436030">DERBY-4380</key>
            <summary>Subqueries not allowed in ON clause</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bernt">Bernt M. Johnsen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Sep 2009 09:06:38 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:40 +0100</updated>
                            <resolved>Tue, 2 Feb 2010 09:20:20 +0000</resolved>
                                    <version>10.5.3.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12757043" author="bernt" created="Fri, 18 Sep 2009 09:16:00 +0100"  >&lt;p&gt;Applies also to IN:&lt;br/&gt;
ij&amp;gt; select * from t1 inner join t2 on t1.i in (select i from t3); &lt;br/&gt;
ERROR 42972: An ON clause associated with a JOIN operator is not valid.&lt;/p&gt;</comment>
                            <comment id="12757076" author="knutanders" created="Fri, 18 Sep 2009 10:26:07 +0100"  >&lt;p&gt;From JoinNode:&lt;/p&gt;

&lt;p&gt;			/* DB2 doesn&apos;t allow subquerries in the ON clause */&lt;br/&gt;
			if (subqueryList.size() &amp;gt; 0)&lt;br/&gt;
				throw StandardException.newException(SQLState.LANG_DB2_ON_CLAUSE_INVALID); &lt;/p&gt;</comment>
                            <comment id="12757078" author="knutanders" created="Fri, 18 Sep 2009 10:34:45 +0100"  >&lt;p&gt;I commented out the code above and ran a couple of small tests, and it appears to do the right thing. So unless the SQL standard prohibits subqueries in ON clauses, I suggest we just remove that restriction and add some test cases to verify the functionality in the regression tests.&lt;/p&gt;</comment>
                            <comment id="12757861" author="knutanders" created="Mon, 21 Sep 2009 11:06:25 +0100"  >&lt;p&gt;Attached is a patch (not for commit) that removes the restriction that ON clauses can&apos;t contain subqueries. It also adds a test case to JoinTest and updates negative test cases in lang/outerjoin.sql, lang/innerjoin.sql and lang/lojreorder.sql so that they expect results to be returned instead of an exception.&lt;/p&gt;

&lt;p&gt;With this patch, two of the test cases in lang/lojreorder.sql that used to raise ERROR 42972, now raise a NullPointerException. The stack trace looks similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4342&quot; title=&quot;SQLSTATE 38000 (NullPointerException) at inner self join and value(x1, x2...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4342&quot;&gt;&lt;del&gt;DERBY-4342&lt;/del&gt;&lt;/a&gt;. The patch should not be committed until this has been investigated and dealt with.&lt;/p&gt;</comment>
                            <comment id="12759023" author="mamtas" created="Thu, 24 Sep 2009 06:55:15 +0100"  >&lt;p&gt;I looked at SQL 2003 Foundation spec and through various links, it shows that ON clauses can have subqueries. &lt;br/&gt;
Section 7.7 &amp;lt;joined table&amp;gt; (page 312)&lt;br/&gt;
which shows&lt;br/&gt;
&amp;lt;joined table&amp;gt; ::=&lt;br/&gt;
   &amp;lt;cross join&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;qualified join&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;natural join&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;On the same page (312), qualified join is defined as&lt;br/&gt;
&amp;lt;qualified join&amp;gt; ::=&lt;br/&gt;
   &amp;lt;table reference&amp;gt; [ &amp;lt;join type&amp;gt; ] JOIN &amp;lt;table reference&amp;gt; &amp;lt;join specification&amp;gt;&lt;/p&gt;

&lt;p&gt;Clicking on &amp;lt;join specification&amp;gt; takes to following definition on the same page&lt;br/&gt;
&amp;lt;join specification&amp;gt; ::=&lt;br/&gt;
&amp;lt;join condition&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;named columns join&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;And &amp;lt;join condition&amp;gt; talks about the ON clause and &amp;lt;search condition&amp;gt; as follows&lt;br/&gt;
&amp;lt;join condition&amp;gt; ::= ON &amp;lt;search condition&amp;gt;&lt;/p&gt;

&lt;p&gt;Clicking on &amp;lt;search condition&amp;gt; takes to page 416. Following the bnf of &amp;lt;search condition&amp;gt; finally leads to &amp;lt;predicate&amp;gt; on page 371 and one of the possibilities for &amp;lt;predicate&amp;gt; is &amp;lt;quantified comparison predicate&amp;gt; and page 397 for &amp;lt;quantified comparison predicate&amp;gt; shows that we can have subquery here with SOME/ANY.&lt;/p&gt;

&lt;p&gt;So, long story short, the change suggested by this jira entry is SQL compatible.&lt;/p&gt;</comment>
                            <comment id="12759151" author="knutanders" created="Thu, 24 Sep 2009 16:29:39 +0100"  >&lt;p&gt;Thanks for taking the time to check the standard, Mamta! My understanding is the same as yours. Basically, it looks like the standard allows the same syntactic elements in ON clauses as in WHERE clauses:&lt;/p&gt;

&lt;p&gt;&amp;lt;join condition&amp;gt; ::= ON &amp;lt;search condition&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;where clause&amp;gt; ::= WHERE &amp;lt;search condition&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12762218" author="knutanders" created="Mon, 5 Oct 2009 16:39:08 +0100"  >&lt;p&gt;Here&apos;s a stripped down repro for the NPEs seen in the lojreorder test with the patch:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values 1;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t t1 right join t t2 on 1=1 and t1.x in (select a.x from t a left join t b on 1=0 where a.x=b.x);&lt;br/&gt;
X          |X          &lt;br/&gt;
-----------------------&lt;br/&gt;
ERROR 38000: The exception &apos;java.lang.NullPointerException&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
ij&amp;gt; select * from t t1 right join t t2 on 1=1 and t1.x &amp;gt;= ALL (select a.x from t a left join t b on 1=0 where a.x=b.x);&lt;br/&gt;
X          |X          &lt;br/&gt;
-----------------------&lt;br/&gt;
ERROR 38000: The exception &apos;java.lang.NullPointerException&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;</comment>
                            <comment id="12777796" author="knutanders" created="Sat, 14 Nov 2009 01:36:14 +0000"  >&lt;p&gt;Then NPE can be triggered with an even simpler query:&lt;/p&gt;

&lt;p&gt;create table t(x int);&lt;br/&gt;
insert into t values 1;&lt;br/&gt;
select 1 from t t1 join t t2 on t1.x in&lt;br/&gt;
    (select 1 from t a left join t b on 1=0 where b.x=1);&lt;/p&gt;

&lt;p&gt;When I look at the query tree after optimization, it looks as if the result column list for the HalfOuterJoinNode contains a ResultColumn/VirtualColumnNode chain that ends up in a BaseColumn for B.X, which sounds reasonable since B.X is needed for the restriction B.X=1. However, the HalfOuterJoinNode&apos;s right child, from which that base column should be retrieved, has a separate chain that ends up in a different BaseColumn for B.X. I believe that in a correct tree, the column chain in the HalfOuterJoinNode should be connected to the chain of its right child, and there should be only one BaseColumn for B.X in the tree.&lt;/p&gt;</comment>
                            <comment id="12778343" author="knutanders" created="Mon, 16 Nov 2009 13:54:22 +0000"  >&lt;p&gt;JoinNode.deferredBindExpressions() binds the expression in the ON&lt;br/&gt;
clause twice, and after the second time it&apos;s bound, some parts of the&lt;br/&gt;
tree use the BaseColumnNodes generated the first time, and others use&lt;br/&gt;
those generated the second time. I believe this is the inconsistency&lt;br/&gt;
that leads to a NullPointerException when the statement is executed.&lt;/p&gt;

&lt;p&gt;The double binding is done in order to raise the correct/expected&lt;br/&gt;
exceptions, it seems. If I remove one of them, the NPE goes away, but&lt;br/&gt;
some statements that are supposed to fail change behaviour (either&lt;br/&gt;
they stop failing, or they fail with a different error message,&lt;br/&gt;
depending on which of the two calls to bindExpression() is commented&lt;br/&gt;
out). It seems like the double binding is partly there to harmonize SQL&lt;br/&gt;
states with those raised by DB2.&lt;/p&gt;</comment>
                            <comment id="12778920" author="knutanders" created="Tue, 17 Nov 2009 15:02:14 +0000"  >&lt;p&gt;Changed &quot;SOME&quot; to &quot;Subqueries&quot; in the summary, since the problem is not limited to SOME subqueries.&lt;/p&gt;</comment>
                            <comment id="12778990" author="knutanders" created="Tue, 17 Nov 2009 16:55:01 +0000"  >&lt;p&gt;Here&apos;s an updated patch which removes the double binding of the ON&lt;br/&gt;
clause which caused NullPointerExceptions in lang/lojreorder.sql. The&lt;br/&gt;
removal of the double binding changed the behaviour of some more&lt;br/&gt;
queries that used to fail before. As far as I know, the patch only&lt;br/&gt;
affects queries that used to fail. Here&apos;s the full list of behavioural&lt;br/&gt;
changes:&lt;/p&gt;

&lt;p&gt;-------------------------------&lt;/p&gt;

&lt;p&gt;1) JOIN queries with a subquery in the ON clause used to fail with the&lt;br/&gt;
following message:&lt;br/&gt;
&amp;gt; ERROR 42972: An ON clause associated with a JOIN operator is not valid.&lt;br/&gt;
Now, those queries will be accepted and return a result.&lt;/p&gt;

&lt;p&gt;2) ON clauses with an unqualified column reference whose name matches&lt;br/&gt;
a column in some other table in the FROM list used to fail. For&lt;br/&gt;
instance:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create table tt(y int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t t1, t t2 join tt on x=y;&lt;br/&gt;
ERROR 42X03: Column name &apos;X&apos; is in more than one table in the FROM list.&lt;/p&gt;

&lt;p&gt;Since T1 is not in the scope of the ON clause, X must be T2.X and&lt;br/&gt;
there is no ambiguity. With the patch, the query does not fail.&lt;/p&gt;

&lt;p&gt;3) If an ON clause referenced a column not in one of the tables that&lt;br/&gt;
are being joined, it used to fail with this error message:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t t1, t t2 join t t3 on t1.x=t2.x;&lt;br/&gt;
ERROR 42972: An ON clause associated with a JOIN operator is not valid.&lt;/p&gt;

&lt;p&gt;With the patch, the error message is changed into:&lt;/p&gt;

&lt;p&gt;ERROR 42X04: Column &apos;T1.X&apos; is either not in any table in the FROM list&lt;br/&gt;
or appears within a join specification and is outside the scope of the&lt;br/&gt;
join specification or appears in a HAVING clause and is not in the&lt;br/&gt;
GROUP BY list. If this is a CREATE or ALTER TABLE statement then&lt;br/&gt;
&apos;T1.X&apos; is not a column in the target table.&lt;/p&gt;

&lt;p&gt;-------------------------------&lt;/p&gt;

&lt;p&gt;Both (1) and (2) make our implementation more liberal, and shouldn&apos;t&lt;br/&gt;
cause backward-compatibility issues. I&apos;ve checked all the queries in&lt;br/&gt;
our regression tests that are affected by (1) and (2), and all of them&lt;br/&gt;
now give the same results as PostgreSQL and MySQL. As far as I can&lt;br/&gt;
tell, accepting these queries is in compliance with the&lt;br/&gt;
standard. (Note that we&apos;re still more restrictive than PostgreSQL and&lt;br/&gt;
MySQL, since we don&apos;t accept correlated columns from outer queries in&lt;br/&gt;
the ON clause, whereas they do.)&lt;/p&gt;

&lt;p&gt;(3) changes the SQLState and the message of a certain failure, which&lt;br/&gt;
could introduce backwards-compatibility issues. However, I don&apos;t think&lt;br/&gt;
it&apos;s very likely that many applications depend on this particular&lt;br/&gt;
error code, since this error is something you&apos;d expect to see during&lt;br/&gt;
development, before you&apos;ve got your SQL statements right, and not&lt;br/&gt;
after the application is in production. So I&apos;m leaning towards just&lt;br/&gt;
adding a release note for the changed SQLState, and not trying to&lt;br/&gt;
change the code to use the same SQLState as before.&lt;/p&gt;

&lt;p&gt;I also think the new message is somewhat more useful, since it both&lt;br/&gt;
mentions the name of the problematic column, and that it might be&lt;br/&gt;
outside the scope of the join specification. The old message just said&lt;br/&gt;
that there was something wrong with one of the ON clauses in the&lt;br/&gt;
statement.&lt;/p&gt;



&lt;p&gt;Here are the details from the patch:&lt;/p&gt;

&lt;p&gt;Engine code:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;JoinNode.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed the code that raised an exception if the ON clause contained&lt;br/&gt;
  a subquery&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed the first call to joinClause.bindExpression() since its only&lt;br/&gt;
  purpose was to make the statements in (2) above fail, and the double&lt;br/&gt;
  binding made the query tree inconsistent when the ON clause&lt;br/&gt;
  contained subqueries&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;messages.xml&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed now unused message&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;SQLState.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed now unused message&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Test code:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;JoinTest.java:&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added a test case for ON with subqueries&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;lojreorder.sql / lojreorder.out , outerjoin.sql / outerjoin.out ,&lt;br/&gt;
  innerjoin.sql / innerjoin.out&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated comments and canons for queries that were expected to fail&lt;br/&gt;
  before&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated canon for queries whose error message changed&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;dml158.out, dml160.out&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated canon for queries whose error message changed&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12778991" author="bryanpendleton" created="Tue, 17 Nov 2009 17:00:12 +0000"  >&lt;p&gt;I think that all the behavior changes that you describe are improvements, so no complaints from me for changing them!&lt;/p&gt;
</comment>
                            <comment id="12779936" author="knutanders" created="Thu, 19 Nov 2009 11:05:20 +0000"  >&lt;p&gt;Committed revision 882106.&lt;/p&gt;

&lt;p&gt;Setting the flag &quot;Release Note Needed&quot; since we need a release note for the changed SQLState.&lt;/p&gt;

&lt;p&gt;The patch removed one error message, but it didn&apos;t remove the translations. I&apos;ll post a follow-up patch that removes the translations.&lt;/p&gt;</comment>
                            <comment id="12790025" author="knutanders" created="Mon, 14 Dec 2009 07:45:56 +0000"  >&lt;p&gt;Attached is a follow-up patch which removes the translations of the error message that was removed by the main patch. I have not run the regression tests yet.&lt;/p&gt;</comment>
                            <comment id="12790196" author="knutanders" created="Mon, 14 Dec 2009 15:09:38 +0000"  >&lt;p&gt;All the regression tests ran cleanly with the patch that removed the translated messages.&lt;br/&gt;
Committed revision 890364.&lt;/p&gt;</comment>
                            <comment id="12828544" author="knutanders" created="Tue, 2 Feb 2010 09:19:27 +0000"  >&lt;p&gt;Attaching release note.&lt;/p&gt;</comment>
                            <comment id="12828622" author="dagw" created="Tue, 2 Feb 2010 13:44:10 +0000"  >&lt;p&gt;Release note looks good.&lt;/p&gt;</comment>
                            <comment id="13685320" author="knutanders" created="Mon, 17 Jun 2013 10:19:40 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12420178" name="on_subquery.diff" size="17531" author="knutanders" created="Mon, 21 Sep 2009 11:06:25 +0100"/>
                            <attachment id="12425239" name="on_subquery_v2.diff" size="30921" author="knutanders" created="Tue, 17 Nov 2009 16:55:01 +0000"/>
                            <attachment id="12425238" name="on_subquery_v2.stat" size="929" author="knutanders" created="Tue, 17 Nov 2009 16:55:00 +0000"/>
                            <attachment id="12434514" name="releaseNote.html" size="4759" author="knutanders" created="Tue, 2 Feb 2010 09:19:27 +0000"/>
                            <attachment id="12427896" name="remove_translations.diff" size="14566" author="knutanders" created="Mon, 14 Dec 2009 07:45:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Sep 2009 09:26:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31218</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0r6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38221</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>