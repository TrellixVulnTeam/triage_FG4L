<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:44:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4391/DERBY-4391.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4391] NullPointerException when comparing indexed column with result from a set operation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4391</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I&apos;m reporting this issue on behalf of Bernt M. Johnsen.&lt;/p&gt;

&lt;p&gt;If an indexed column is compared with a UNION query (or some other set operation), a NullPointerException is raised, as can be seen by this sequence of statements in ij:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(a int not null primary key, b int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t where a &amp;lt; (values 4 union values 4);&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12436909">DERBY-4391</key>
            <summary>NullPointerException when comparing indexed column with result from a set operation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Sep 2009 12:25:16 +0100</created>
                <updated>Thu, 15 Oct 2009 22:01:08 +0100</updated>
                            <resolved>Wed, 14 Oct 2009 23:24:27 +0100</resolved>
                                    <version>10.2.2.0</version>
                    <version>10.3.3.0</version>
                    <version>10.4.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12760888" author="knutanders" created="Wed, 30 Sep 2009 12:25:49 +0100"  >&lt;p&gt;Full stack trace:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.PredicateList.markReferencedColumns(PredicateList.java:1641)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath(FromBaseTable.java:2957)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ProjectRestrictNode.modifyAccessPath(ProjectRestrictNode.java:772)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.OptimizerImpl.modifyAccessPaths(OptimizerImpl.java:2459)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SelectNode.modifyAccessPaths(SelectNode.java:1867)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(DMLStatementNode.java:323)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(CursorNode.java:573)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:373)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:824)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:366)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
        at org.apache.derby.iapi.tools.run.main(run.java:53)&lt;/p&gt;</comment>
                            <comment id="12760894" author="knutanders" created="Wed, 30 Sep 2009 13:08:07 +0100"  >&lt;p&gt;It looks like the NPE is thrown if the left side of the set operation has a column which is not a simple column reference. So the following queries (with expressions or constants on the left side of the union) fail:&lt;/p&gt;

&lt;p&gt;select * from t where a &amp;lt; (select 4 from t except select b from t)&lt;br/&gt;
select * from t where a &amp;lt; (select a+b from t except select 4 from t)&lt;br/&gt;
select * from t where a &amp;lt; (select a+b from t except select a from t)&lt;br/&gt;
select * from t where a &amp;lt; (select sum(a) from t intersect select b from t)&lt;/p&gt;

&lt;p&gt;Whereas these don&apos;t raise a NPE:&lt;/p&gt;

&lt;p&gt;select * from t where a &amp;lt; (select a from t intersect all select b from t)&lt;br/&gt;
select * from t where a &amp;lt; (select b from t except select 4 from t)&lt;br/&gt;
select * from t where a &amp;lt; (select a from t except select a+b from t)&lt;br/&gt;
select * from t where a &amp;lt; (select b from t union select sum(a) from t)&lt;/p&gt;

&lt;p&gt;Also worth to notice is that the NPE is not raised if the binary arithmetic operator is =, only if it is &amp;lt;, &amp;gt;, &amp;lt;= or &amp;gt;=.&lt;/p&gt;</comment>
                            <comment id="12762149" author="knutanders" created="Mon, 5 Oct 2009 12:00:00 +0100"  >&lt;p&gt;It looks like checking whether ref.getSource() is null in PredicateList.markReferencedColumns() and only calling markAllRCsInChainReferenced() on it if it&apos;s non-null makes the NPE go away and the queries return the expected results. I&apos;m not sure, but I think it is OK for ColumnReference.getSource() to return null (see for example the comment in BaseTableNumbersVisitor.visit()), in which case markReferencedColumns() should be prepared for it. The ColumnReference with no source is generated by ResultColumnList.setUnionResultExpression().&lt;/p&gt;

&lt;p&gt;The attached patch (d4391-1a.diff) adds the null check and also adds test cases to lang/union.sql. All the regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="12764130" author="dagw" created="Fri, 9 Oct 2009 19:18:09 +0100"  >&lt;p&gt;I looked at this patch and verified that the patch solved the issue, and that the new test case fails without the patch.&lt;br/&gt;
Thanks!&lt;/p&gt;

&lt;p&gt;I wonder if it is meaningful for the visitor in PredicateList.markReferencedColumns() to go down into subqueries. This&lt;br/&gt;
ColumnReference with the empty source here, stems from inside the subquery, and looking at the logic in FromBaseTable#changeAccessPath, what we are doing here is to collect needed columns from the outer table. I think that means that we do not need to look inside a subquery? &lt;/p&gt;

&lt;p&gt;Changing to this visitor declaration makes the query work too:&lt;/p&gt;

&lt;p&gt;		CollectNodesVisitor collectCRs = &lt;br/&gt;
            new CollectNodesVisitor(ColumnReference.class,&lt;br/&gt;
									SubqueryNode.class);&lt;/p&gt;

&lt;p&gt;As for the question of the empty source, &lt;br/&gt;
looking at the query tree, I see that there is indeed a column reference which has an empty source, which I also&lt;br/&gt;
see, e.g in this query: &lt;/p&gt;

&lt;p&gt;   select * from (values 2 union values 2) x&lt;/p&gt;

&lt;p&gt;At the corresponding place (column reference) in a query tree for &lt;/p&gt;

&lt;p&gt;   select * from (select * from t union select * from t) x&lt;/p&gt;

&lt;p&gt;I see that the column reference source actually points to a result column of the PRN wrapping the base table in the &lt;b&gt;left&lt;/b&gt; query tree of the UNION. (That also seems a bit arbitrary, why not the right? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  If it is sound for the VALUE case to have an empty column reference, I can&apos;t answer that, because I don&apos;t fully understand how the column references are used in later phases.&lt;/p&gt;</comment>
                            <comment id="12764670" author="knutanders" created="Mon, 12 Oct 2009 13:55:08 +0100"  >&lt;p&gt;Thanks for looking at the patch, Dag.&lt;/p&gt;

&lt;p&gt;&amp;gt; I wonder if it is meaningful for the visitor in&lt;br/&gt;
&amp;gt; PredicateList.markReferencedColumns() to go down into subqueries.&lt;/p&gt;

&lt;p&gt;If the sub-query is correlated, I think we&apos;ll need to go down into it to see if&lt;br/&gt;
it references any of the columns in the index. Now, it doesn&apos;t look like&lt;br/&gt;
markReferencedColumns() is called if we have a correlated sub-query. It is only&lt;br/&gt;
called when bulk-fetching from a non-covering index, and perhaps bulk-fetching&lt;br/&gt;
is disabled when we have a correlated sub-query in the predicate list?&lt;/p&gt;

&lt;p&gt;&amp;gt; At the corresponding place (column reference) in a query tree for&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;    select * from (select * from t union select * from t) x&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I see that the column reference source actually points to a result column of&lt;br/&gt;
&amp;gt; the PRN wrapping the base table in the &lt;b&gt;left&lt;/b&gt; query tree of the UNION. (That&lt;br/&gt;
&amp;gt; also seems a bit arbitrary, why not the right?  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I had the same feeling that it was somewhat arbitrary when I looked at the&lt;br/&gt;
logic in ResultColumnList.setUnionResultExpression(). For EXCEPT queries, it&lt;br/&gt;
may make sense, since all the rows in the result come from the left side. For&lt;br/&gt;
UNION and INTERSECT, they could just as well come from the right side, though.&lt;/p&gt;

&lt;p&gt;&amp;gt; If it is sound for the VALUE case to have an empty column reference, I can&apos;t&lt;br/&gt;
&amp;gt; answer that, because I don&apos;t fully understand how the column references are&lt;br/&gt;
&amp;gt; used in later phases.&lt;/p&gt;

&lt;p&gt;Neither do I. BaseTableNumbersVisitor.visit() says this about the case where&lt;br/&gt;
getSource() returns null:&lt;/p&gt;

&lt;p&gt;        if (rc == null) &lt;/p&gt;
{
        // this can happen if column reference is pointing to a column
        // that is not from a base table.  For example, if we have a
        // VALUES clause like
        //
        //    (values (1, 2), (3, 4)) V1 (i, j)
        //
        // and then a column reference to VI.i, the column reference
        // won&apos;t have a source.
            return node;
        }

&lt;p&gt;This is actually just a variant of the case we&apos;re looking at, since a multi-row&lt;br/&gt;
value statement is rewritten to a union internally. So it&apos;s possible to&lt;br/&gt;
reproduce the NPE without explicitly using a set operation, as seen here:&lt;/p&gt;

&lt;p&gt;ij(CONNECTION2)&amp;gt; select * from t where a &amp;lt; (values 1,2,3);&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
ij(CONNECTION2)&amp;gt; select * from t where a &amp;lt; (select max&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from (values 1,2,3) v&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;);&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;

&lt;p&gt;Although I&apos;m still not 100% convinced it is correct that the CR is null in the&lt;br/&gt;
first place, I&apos;m inclined to go for the 1a patch, but with a comment like the&lt;br/&gt;
one in BTNV.visit() added to markReferencedColumns(). Since such a change only&lt;br/&gt;
affects statements that previously raised a NPE, it should at least not make&lt;br/&gt;
the situation worse for queries that used to work.&lt;/p&gt;</comment>
                            <comment id="12764923" author="dagw" created="Tue, 13 Oct 2009 03:04:40 +0100"  >&lt;p&gt;&amp;gt; perhaps bulk-fetching is disabled when we have a correlated sub-query in the predicate list? &lt;/p&gt;

&lt;p&gt;I don&apos;t know, but even if it is, I think it is more convoluted to rely on that when pruning subquery visits.&lt;br/&gt;
So, your present patch in view of this is fine. &lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Btw, I saw this inside setUnionResultExpression&lt;/p&gt;

&lt;p&gt; /* DB2 requires both sides of union to have same name for the result to&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;have that name. Otherwise, leave it or set it to a generated name */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Wonder what the standard says about this? (I came across it when playing with Bryan&apos;s patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4&quot; title=&quot;&amp;quot;order by&amp;quot; is not supported for &amp;quot;insert ... select&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4&quot;&gt;&lt;del&gt;DERBY-4&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="12765036" author="knutanders" created="Tue, 13 Oct 2009 12:15:33 +0100"  >&lt;p&gt;Uploading patch 1b which is the same as 1a plus an extra comment.&lt;br/&gt;
Committed revision 824694.&lt;/p&gt;</comment>
                            <comment id="12765048" author="knutanders" created="Tue, 13 Oct 2009 12:44:45 +0100"  >&lt;p&gt;&amp;gt; Btw, I saw this inside setUnionResultExpression&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;  /* DB2 requires both sides of union to have same name for the result to&lt;br/&gt;
&amp;gt;   * have that name. Otherwise, leave it or set it to a generated name */&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Wonder what the standard says about this?&lt;/p&gt;

&lt;p&gt;Sounds like it&apos;s compliant. See SQL:2003, part 2, 7.13 &amp;lt;query expression&amp;gt;, syntax rules:&lt;/p&gt;

&lt;p&gt;16) If a &amp;lt;query term&amp;gt; immediately contains a set operator, then:&lt;br/&gt;
    a) Let C be the &amp;lt;column name&amp;gt; of the i-th column of T1. If the &amp;lt;column name&amp;gt; of the i-th column of T2&lt;br/&gt;
         is C, then the &amp;lt;column name&amp;gt; of the i-th column of TR is C; otherwise, the &amp;lt;column name&amp;gt; of the i-th&lt;br/&gt;
         column of TR is implementation-dependent.&lt;/p&gt;</comment>
                            <comment id="12765382" author="dagw" created="Wed, 14 Oct 2009 04:40:12 +0100"  >&lt;p&gt;Right, thx. The comment could use an update, then! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12765789" author="knutanders" created="Wed, 14 Oct 2009 23:24:27 +0100"  >&lt;p&gt;Merged fix to 10.5 and committed revision 825312.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12438246">DERBY-4411</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12421277" name="d4391-1a.diff" size="3781" author="knutanders" created="Mon, 5 Oct 2009 12:00:00 +0100"/>
                            <attachment id="12421278" name="d4391-1a.stat" size="229" author="knutanders" created="Mon, 5 Oct 2009 12:00:00 +0100"/>
                            <attachment id="12421973" name="d4391-1b.diff" size="4167" author="knutanders" created="Tue, 13 Oct 2009 12:15:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Oct 2009 18:18:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24228</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38304</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>