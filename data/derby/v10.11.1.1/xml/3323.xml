<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3323/DERBY-3323.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3323] ComparisonFailure in derbyStress</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3323</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;See &lt;br/&gt;
jvm1.4 lin : &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.4/FailReports/612516_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.4/FailReports/612516_bySig.html&lt;/a&gt;&lt;br/&gt;
jvm1.5 lin, jvm1.5 linN+1 : &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.5/FailReports/612516_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.5/FailReports/612516_bySig.html&lt;/a&gt;&lt;br/&gt;
jvm1.6 sles, jvm1.6 sol, jvm1.6 solN+1: &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/FailReports/612516_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/FailReports/612516_bySig.html&lt;/a&gt;&lt;br/&gt;
jvm1.5 w2003: &lt;a href=&quot;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.5/FailReports/612526_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.5/FailReports/612526_bySig.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) derbyStress(org.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest)junit.framework.ComparisonFailure: Output at line 6 expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Test derbyStress finished.&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;FAIL -- unexpected exception ****************&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:100)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.HarnessJavaTest.runTest(HarnessJavaTest.java:91)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:96)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</description>
                <environment>jvm1.4 lin&lt;br/&gt;
jvm1.5 lin, linN+1&lt;br/&gt;
vm1.6 sles,sol, solN+1&lt;br/&gt;
jvm1.5 w2003</environment>
        <key id="12386478">DERBY-3323</key>
            <summary>ComparisonFailure in derbyStress</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="olesolberg">Ole Solberg</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Jan 2008 10:14:16 +0000</created>
                <updated>Mon, 29 Jun 2009 23:57:56 +0100</updated>
                            <resolved>Mon, 4 Feb 2008 22:54:32 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12560160" author="dagw" created="Thu, 17 Jan 2008 23:40:31 +0000"  >&lt;p&gt;I saw this in my sandbox too, when stresstest was run as part of the full JUnit regression test (suitesAll).&lt;br/&gt;
Rerunning just JDBCHarnessJavaTest saw it pass (Solaris 10/x86, JVM 1.6).&lt;/p&gt;</comment>
                            <comment id="12560166" author="dagw" created="Thu, 17 Jan 2008 23:59:22 +0000"  >&lt;p&gt;Duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316&quot; title=&quot;Leak in client if ResultSet not closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3316&quot;&gt;&lt;del&gt;DERBY-3316&lt;/del&gt;&lt;/a&gt;? Seems same symptom...&lt;/p&gt;</comment>
                            <comment id="12560321" author="olesolberg" created="Fri, 18 Jan 2008 10:02:36 +0000"  >&lt;p&gt;Agreed, same &quot;signature&quot; as reported by J&#248;rgen.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316&quot; title=&quot;Leak in client if ResultSet not closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3316&quot;&gt;&lt;del&gt;DERBY-3316&lt;/del&gt;&lt;/a&gt; is however marked Closed/Fixed so I&apos;ll keep this for the occurences we&apos;re still seeing in the nightlies.&lt;/p&gt;</comment>
                            <comment id="12560477" author="kmarsden" created="Fri, 18 Jan 2008 17:38:26 +0000"  >&lt;p&gt;Ole, do you have the .out file from the failure?  I am not able to reproduce and maybe the output will give a clue as to the problem.  Also there is an ongoing discussion regarding this test in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316&quot; title=&quot;Leak in client if ResultSet not closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3316&quot;&gt;&lt;del&gt;DERBY-3316&lt;/del&gt;&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316?focusedCommentId=12560009#action_12560009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-3316?focusedCommentId=12560009#action_12560009&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would like to move the test back to derbyall until it can be properly converted to JUnit with the low memory heap. Unfortunately now it is not testing what it was intended to test because it runs with the heap allocated by the suite jvm.  I don&apos;t know if such a move would make any difference in the intermittent failure.  Dan are you still opposed to the move back to derbyall given my comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316&quot; title=&quot;Leak in client if ResultSet not closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3316&quot;&gt;&lt;del&gt;DERBY-3316&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="12560518" author="olesolberg" created="Fri, 18 Jan 2008 19:37:47 +0000"  >&lt;p&gt;This is the fail/Embedded_40/JDBCHarnessJavaTest/derbyStress/derbyStress.out:&lt;/p&gt;

&lt;p&gt;Test derbyStress starting&lt;br/&gt;
Testing with 2000 prepared statements&lt;br/&gt;
PASS &amp;#8211; Prepared statement test&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-557&quot; title=&quot;Client driver gets OutOfMemoryError when re-executing statement without closing ResultSet&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-557&quot;&gt;&lt;del&gt;DERBY-557&lt;/del&gt;&lt;/a&gt;: reExecuteStatementTest() PASSED&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3316&quot; title=&quot;Leak in client if ResultSet not closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3316&quot;&gt;&lt;del&gt;DERBY-3316&lt;/del&gt;&lt;/a&gt;: Multiple statement executions&lt;br/&gt;
FAIL &amp;#8211; unexpected exception ****************&lt;br/&gt;
SQLSTATE(X0X95): Operation &apos;DROP TABLE&apos; cannot be performed on object &apos;TAB&apos; because there is an open ResultSet dependent on that object.&lt;/p&gt;

&lt;p&gt;from one of todays failures.&lt;/p&gt;

&lt;p&gt;I have also copied the full log for this run to &lt;a href=&quot;http://dbtg.thresher.com/derby/test/debug/612869_sles_suitesAll.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/debug/612869_sles_suitesAll.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;
</comment>
                            <comment id="12560548" author="kmarsden" created="Fri, 18 Jan 2008 21:17:59 +0000"  >&lt;p&gt;Thanks Ole, that helps alot. The test intentionally does not close ResultSets to test for the leak, but this was causing a problem dropping the table. With revision  613275 I changed the test to close the last ResultSet and force a gc(). Hopefully this will take care of the problem.  I will leave the issue open a couple of days to make sure it has gone away. Please post if you see any problem.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12560555" author="djd" created="Fri, 18 Jan 2008 21:32:29 +0000"  >&lt;p&gt;&amp;gt; With revision 613275 I changed the test to close the last ResultSet and force a gc().&lt;/p&gt;

&lt;p&gt;Adding the forced gc() seems to be a case of making the test pass rather than fixing a potential bug.&lt;/p&gt;

&lt;p&gt;Adding a gc() to the test is really saying it&apos;s part of the api, and thus this is what applications need  to do as well. Since this is not what is required (ie. we don&apos;t want to have to say in order to run Derby successfully you need to force gc() once in a while), can we remove the gc() and then fix the bug if the problem remains?&lt;/p&gt;

&lt;p&gt;Even closing the ResultSet has the feel of making the test pass rather than fixing a potential bug. Is there a valid explanation for why holding this result set open stops the table being dropped? If there is then it&apos;s acceptable to close the result set, but if the ResultSet being open should have no effect on the DROP TABLE then we are merely avoiding seeing a bug by closing the ResultSet.&lt;/p&gt;</comment>
                            <comment id="12560563" author="kmarsden" created="Fri, 18 Jan 2008 21:47:40 +0000"  >&lt;p&gt;The ResultSets were open and accessing the table and needed to be closed or garbage collected before that reference was eliminated.  I did not close the ResultSets as part of the test because I needed to leave them open to test for the leak.  It seems reasonable that we were getting the error on drop table if the ResultSets were still referencing the table and not yet garbage collected, so I forced the gc() to allow the table to be dropped.  Users would typically need to close all ResultSets referring to a table before the dropped it, I think.&lt;/p&gt;

</comment>
                            <comment id="12561021" author="olesolberg" created="Mon, 21 Jan 2008 14:36:42 +0000"  >&lt;p&gt;This failure is still seen on the 10.3 branch: e.g. &lt;a href=&quot;http://dbtg.thresher.com/derby/test/statistics/3323_today.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/statistics/3323_today.html&lt;/a&gt; (today = 2008-01-21):&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.4/FailReports/613633_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.4/FailReports/613633_bySig.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.5/FailReports/613633_bySig.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/10.3Branch/jvm1.5/FailReports/613633_bySig.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12561048" author="kmarsden" created="Mon, 21 Jan 2008 16:20:42 +0000"  >&lt;p&gt;I hestitated to port the fix to 10.3 because Dan had some concerns with the fix.  He especially did not like the gc, but it seems to me that as long as there are open result sets referring to the table it cannot be dropped.  Dan, do you have another recommendation for removing these references so we can drop the table?&lt;/p&gt;</comment>
                            <comment id="12561153" author="mikem" created="Mon, 21 Jan 2008 22:52:25 +0000"  >&lt;p&gt;depending on isolation level and the state of the open results set it would totally be expected that this would stop &lt;br/&gt;
a drop from happening.  It gets confusing with the various row caches around, but from the bottom up what is expected for read committed:&lt;/p&gt;

&lt;p&gt;while a result set is open store will hold a IS table intent lock until the result set is closed.  This lock will conflict&lt;br/&gt;
with drop table and thus will cause the drop table to block until the result set is closed.  It will usually hold one&lt;br/&gt;
read committed row lock with is the &quot;current&quot; row in the scan.  From store point of view the result set can get closed &lt;br/&gt;
in one of 2 ways, either by explicitly closing it or by &quot;nexting&quot; past the last row in the result set.  Correlating the second condition is hard from the client side as multiple level of caching (drda and internal &quot;group fetch&quot;) make it to tell&lt;br/&gt;
the relationship between the &quot;current&quot; row in the application and the actual last row that has been fetched from store.&lt;/p&gt;</comment>
                            <comment id="12561154" author="djd" created="Mon, 21 Jan 2008 23:01:20 +0000"  >&lt;p&gt;Is the System.gc() required? If so we probably need to document this as part of DROP TABLE.&lt;/p&gt;

&lt;p&gt;However I think that would be a really bad idea, I thought that Derby itself went through and tried to perform gc() if there were open result sets during such an operation.&lt;/p&gt;</comment>
                            <comment id="12561156" author="mikem" created="Mon, 21 Jan 2008 23:02:35 +0000"  >&lt;p&gt;looking more carefully at the error message I don&apos;t think the locking is was is causing the drop error (what I described would likely be the case if the drop and the result sets were in different connections), but instead &lt;br/&gt;
probably the dependency manager.  My assumption would be that disallowing this ddl is necessary otherwise &lt;br/&gt;
one would get strange behavior in the resultset which depends on a stable ddl for the tables in the result set while&lt;br/&gt;
the result set is open.&lt;/p&gt;</comment>
                            <comment id="12561185" author="kmarsden" created="Tue, 22 Jan 2008 00:47:28 +0000"  >&lt;p&gt;We do document:&lt;br/&gt;
&quot;The existence of an open cursor that references table being dropped cause the DROP TABLE statement to generate an error, and the table is not dropped.&quot;&lt;/p&gt;

&lt;p&gt;Which as a user I would read as not closed, either explicitly or by garbage collection.   I don&apos;t think that it is a bug that DROP TABLE does not attempt garbage collection, but do think it would be a nice improvement.   We do so for SET TRANSACTION ISOLATION.  Should I file a issue to have Derby attempt garbage collection if it detects open result sets when attempting DROP TABLE?&lt;/p&gt;
</comment>
                            <comment id="12561187" author="djd" created="Tue, 22 Jan 2008 00:54:27 +0000"  >&lt;p&gt;I thought DROP TABLE did perform gc since GenericLanguageConnectionContext.verifyNoOpenResultSets does and I thought that&apos;s what DROP TABLE would end up calling.&lt;/p&gt;

&lt;p&gt;I&apos;m curious, do you know why &amp;amp; where gc() is called for SET TRANSACTION ISOLATION, I can&apos;t see the connection ...&lt;/p&gt;</comment>
                            <comment id="12561188" author="kmarsden" created="Tue, 22 Jan 2008 01:10:06 +0000"  >&lt;p&gt;The gc()  happens in GenericLanguageConnectionContext.verifiyAllHeldResultSetsAreClosed() which is  called from GenericLanguageConnectionContext.setIsolationLevel().  I missed the gc()  in verifyNoOpenResultSets().  &lt;/p&gt;</comment>
                            <comment id="12561263" author="knutanders" created="Tue, 22 Jan 2008 08:57:10 +0000"  >&lt;p&gt;I don&apos;t think we can rely on System.gc() actually freeing and finalizing all unreferenced objects. Its javadoc says that calling the method &quot;suggests that the Java Virtual Machine expend effort toward recycling unused objects&quot; and that it will make a &quot;best effort to reclaim space&quot;. Calling it in verifyNoOpenResultSets() as a last attempt before failing is OK, I think, since it increases the likelihood of being able to perform the operation successfully. On the other hand, if a test depends on the side-effects from System.gc() in order to pass, I think it will be inherently unstable (as seen in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1585&quot; title=&quot;derbylang/procedureInTrigger: not able to create trigger due to an open ResultSet&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1585&quot;&gt;&lt;del&gt;DERBY-1585&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It&apos;s not a bug that DROP TABLE fails, in my opinion, since JDBC only guarantees that a ResultSet releases its resources when it has been closed, and the test code resembles a user error, as it does not close the ResultSets and holds resources for an unnecessarily long period. I&apos;d suggest that the cleanup code instead closes the connection (which ensures that all its database and JDBC resources are released, according to its javadoc), and performs DROP TABLE in a different connection.&lt;/p&gt;</comment>
                            <comment id="12561340" author="kmarsden" created="Tue, 22 Jan 2008 13:49:41 +0000"  >&lt;p&gt;Attached is a patch which incorporates Knut&apos;s suggestion to close the connection to cleanup the result sets. (Thanks Knut!).  I hope this is acceptable to all.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12386056">DERBY-3316</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12373756" name="derby-3323_diff.txt" size="1546" author="kmarsden" created="Tue, 22 Jan 2008 13:49:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Jan 2008 23:40:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23574</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0vpz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38957</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>