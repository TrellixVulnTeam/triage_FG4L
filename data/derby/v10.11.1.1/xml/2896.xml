<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2896/DERBY-2896.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2896] DatabaseMetaData.getTables() fails in TERRORITY_BASED collation database with SQLState 42818: Comparisions between CHAR and CHAR not allowed.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2896</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I tried adding DatabaseMetaDataTest.suite() to be run within CollationTest so that it would test DatabaseMetaData within a collated database.&lt;br/&gt;
I had to fix one item in JDBC.dropSchema() where a string constant was being compared to a system column while not in a system schema,&lt;br/&gt;
but with that fixed the next error hit was executing DatabaseMetaData.getTables().&lt;/p&gt;

&lt;p&gt;I will add the code to collation test with the use of DatabaseMetaDataTest commented out with this bug number.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12372948">DERBY-2896</key>
            <summary>DatabaseMetaData.getTables() fails in TERRORITY_BASED collation database with SQLState 42818: Comparisions between CHAR and CHAR not allowed.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jul 2007 23:25:17 +0100</created>
                <updated>Wed, 16 Jan 2008 13:02:24 +0000</updated>
                            <resolved>Thu, 19 Jul 2007 21:43:25 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12511644" author="stan" created="Wed, 11 Jul 2007 05:11:26 +0100"  >&lt;p&gt;Performed a basic test on a database (toursdb) created with territory=territory=es_MX - a simple progam that lists tables, exported keys and columns works fine  (DbMD.getTables then getExportedKeys then getColumns).  This could be a test issue or under a specific configuration.  Since basic functionality is not impaired I think the priority of this issue can be lowered.  Attached is a zipfile with the simple test program and toursDB created with es_MX territory for any one who might find this helpful.&lt;/p&gt;

&lt;p&gt;Db build:&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:work\dbs\toursMx;create=true;territory=es_MX&apos;;&lt;br/&gt;
ij&amp;gt; run &apos;ToursDB_schema.sql&apos;;&lt;br/&gt;
ij&amp;gt; run &apos;loadCOUNTRIES.sql&apos;;&lt;br/&gt;
ij&amp;gt;  exit;&lt;/p&gt;

&lt;p&gt;%% java  DBMetaData2&lt;br/&gt;
Loaded the derby JDBC driver.&lt;br/&gt;
Get Tables Results Loop&lt;br/&gt;
Got a TABLE named: AIRLINES&lt;br/&gt;
 . . Getting Exported Keys&lt;br/&gt;
 . . . Getting Columns&lt;br/&gt;
 . . . .  Col: AIRLINE - Type: 1 Size: 2&lt;br/&gt;
 . . . .  Col: AIRLINE_FULL - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: BASIC_RATE - Type: 8 Size: 52&lt;br/&gt;
 . . . .  Col: DISTANCE_DISCOUNT - Type: 8 Size: 52&lt;br/&gt;
 . . . .  Col: BUSINESS_LEVEL_FACTOR - Type: 8 Size: 52&lt;br/&gt;
 . . . .  Col: FIRSTCLASS_LEVEL_FACTOR - Type: 8 Size: 52&lt;br/&gt;
 . . . .  Col: ECONOMY_SEATS - Type: 4 Size: 10&lt;br/&gt;
 . . . .  Col: BUSINESS_SEATS - Type: 4 Size: 10&lt;br/&gt;
 . . . .  Col: FIRSTCLASS_SEATS - Type: 4 Size: 10&lt;br/&gt;
Got a TABLE named: CITIES&lt;br/&gt;
 . . Getting Exported Keys&lt;br/&gt;
 . . . Getting Columns&lt;br/&gt;
 . . . .  Col: CITY_ID - Type: 4 Size: 10&lt;br/&gt;
 . . . .  Col: CITY_NAME - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: COUNTRY - Type: 12 Size: 26&lt;br/&gt;
 . . . .  Col: AIRPORT - Type: 12 Size: 3&lt;br/&gt;
 . . . .  Col: LANGUAGE - Type: 12 Size: 16&lt;br/&gt;
 . . . .  Col: COUNTRY_ISO_CODE - Type: 1 Size: 2&lt;br/&gt;
Got a TABLE named: CIUDAD_DE_MEXICO&lt;br/&gt;
 . . Getting Exported Keys&lt;br/&gt;
 . . . Getting Columns&lt;br/&gt;
 . . . .  Col: NOMBRE - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: ESTADO - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: EXCEPCI?N - Type: 4 Size: 10&lt;br/&gt;
Got a TABLE named: CIUDAD_DE_MEXICO2&lt;br/&gt;
 . . Getting Exported Keys&lt;br/&gt;
 . . . Getting Columns&lt;br/&gt;
 . . . .  Col: NOMBRE - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: ESTADO - Type: 12 Size: 24&lt;br/&gt;
 . . . .  Col: EXCEPCI?N - Type: 4 Size: 10&lt;/p&gt;

&lt;p&gt; == REST of OUTPUT not included&lt;/p&gt;</comment>
                            <comment id="12511645" author="stan" created="Wed, 11 Jul 2007 05:12:16 +0100"  >&lt;p&gt;Simplistic test case using DatabaseMetaData&lt;/p&gt;</comment>
                            <comment id="12511646" author="stan" created="Wed, 11 Jul 2007 05:13:40 +0100"  >&lt;p&gt;Simplistic test case with proper license / rights assignment&lt;/p&gt;</comment>
                            <comment id="12511815" author="mamtas" created="Wed, 11 Jul 2007 19:23:14 +0100"  >&lt;p&gt;I have started looking at this Jira entry since yesterday. Need to do more research before I can say what it takes to fix it.&lt;/p&gt;</comment>
                            <comment id="12511847" author="myrna" created="Wed, 11 Jul 2007 21:12:40 +0100"  >&lt;p&gt;looks like you&apos;re actually working on this mamta, thx.&lt;/p&gt;</comment>
                            <comment id="12511891" author="mamtas" created="Wed, 11 Jul 2007 23:12:21 +0100"  >&lt;p&gt;Stan, the database you created does not have the collation=TERRITORY_BASED attribute and that is why you couldn&apos;t reproduce the problem. Once I create the database with that attribute, the very useful program provided by you gives the same exception that Dan is running into. But I do appreciate your eg since it isolates the problem and will make it easier for debugging.&lt;/p&gt;</comment>
                            <comment id="12511976" author="mamtas" created="Thu, 12 Jul 2007 06:57:47 +0100"  >&lt;p&gt;The metadata query for getTables in trunk is as follows&lt;br/&gt;
	SELECT CAST (&apos;&apos; AS VARCHAR(128)) AS TABLE_CAT, \&lt;br/&gt;
		SCHEMANAME AS TABLE_SCHEM,  \&lt;br/&gt;
		TABLENAME AS TABLE_NAME, \&lt;br/&gt;
		(CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) \&lt;br/&gt;
		AS TABLE_TYPE, CAST (&apos;&apos; AS VARCHAR(128)) AS REMARKS, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS REF_GENERATION \&lt;br/&gt;
	FROM \&lt;br/&gt;
		 SYS.SYSTABLES, \&lt;br/&gt;
	     SYS.SYSSCHEMAS, \&lt;br/&gt;
	     (VALUES (&apos;T&apos;,&apos;TABLE&apos;), (&apos;S&apos;,&apos;SYSTEM TABLE&apos;), \&lt;br/&gt;
			(&apos;V&apos;, &apos;VIEW&apos;), (&apos;A&apos;, &apos;SYNONYM&apos;)) T(TTABBREV,TABLE_TYPE) \&lt;br/&gt;
	WHERE (TTABBREV=TABLETYPE 	\&lt;br/&gt;
	  AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) \&lt;br/&gt;
	  AND ((1=1) OR ? IS NOT NULL) \&lt;br/&gt;
	  AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) \&lt;br/&gt;
	  AND (TABLENAME LIKE ?))&lt;/p&gt;


&lt;p&gt;The problem occurs because of VALUES clause which uses character string constants. These character string constants in Derby take their collation from the current compilation schema and this happens in CharConstantNode.bindExpression. I put some printlns in that method and found that the current compilation schema is whatever the current schema is when this metadata query gets run. So, if the getTables is run in user schema, the current compilation schema ends up being user schema and hence the collation type of character string constants in the query end up being territory based. When such character string constants are later compared against character string columns from SYS schema in the getTable query (TTABBREV=TABLETYPE), it results in an exception because of collation mismatch. If getTables is run from SYS schema, the collations of character string constants and character string columns match and hence no exception is thrown.&lt;/p&gt;

&lt;p&gt;SYSSTATEMENTS table has a column called COMPILATION SCHEMAID but that column is not used at all in the logic above. On a brand new database, this column has schemaid for SYS for getTables.&lt;/p&gt;

&lt;p&gt;I have to admit I don&apos;t understand why this metadata query may have worked earlier (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2656&quot; title=&quot;Run suites.All against a collated database&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2656&quot;&gt;&lt;del&gt;DERBY-2656&lt;/del&gt;&lt;/a&gt;) if it was run from a user schema.&lt;/p&gt;

&lt;p&gt;I tried debugging in 10.2 codeline where we do not have collation support but I wanted to check what is the current compilation schema for metadata queries that get recompiled and found the current compilation schema behavior there to be same as the one in main codeline.&lt;/p&gt;

&lt;p&gt;I am at lost at this point as to what paths I should take in fixing the problem. Couple I can think of are as follows&lt;br/&gt;
1)Have Derby somehow use the COMPILATION SCHEMAID from SYSSTATEMENTS table while recompiling the metadata queries. This might take some time to implement. At this point, I don&apos;t know how long.&lt;br/&gt;
2)For the short term, fix the metadata queries to use CAST so that we are not dependent on what schema the queries are run from. I have this change made in my codeline for all the metadata queries that use character string constants for comparison. Specifically, for getTables, the ugly query above can be made uglier by using CAST but it will fix the problem.&lt;br/&gt;
	SELECT CAST (&apos;&apos; AS VARCHAR(128)) AS TABLE_CAT, \&lt;br/&gt;
		SCHEMANAME AS TABLE_SCHEM,  \&lt;br/&gt;
		TABLENAME AS TABLE_NAME, \&lt;br/&gt;
		(CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) \&lt;br/&gt;
		AS TABLE_TYPE, CAST (&apos;&apos; AS VARCHAR(128)) AS REMARKS, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, \&lt;br/&gt;
                CAST (NULL AS VARCHAR(128)) AS REF_GENERATION \&lt;br/&gt;
	FROM \&lt;br/&gt;
		 SYS.SYSTABLES, \&lt;br/&gt;
	     SYS.SYSSCHEMAS, \&lt;br/&gt;
	     (VALUES (&apos;T&apos;,&apos;TABLE&apos;), (&apos;S&apos;,&apos;SYSTEM TABLE&apos;), \&lt;br/&gt;
			(&apos;V&apos;, &apos;VIEW&apos;), (&apos;A&apos;, &apos;SYNONYM&apos;)) T(TTABBREV,TABLE_TYPE) \&lt;br/&gt;
	WHERE (TTABBREV=CAST(TABLETYPE AS CHAR(1)) 	&amp;#8211; NOTICE THE CAST ON THIS LINE \&lt;br/&gt;
	  AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) \&lt;br/&gt;
	  AND ((1=1) OR ? IS NOT NULL) \&lt;br/&gt;
	  AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) \&lt;br/&gt;
	  AND (TABLENAME LIKE ?))&lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="12512132" author="djd" created="Thu, 12 Jul 2007 16:04:09 +0100"  >&lt;p&gt;I don&apos;t think the second option leads to the correct behaviour. Won&apos;t it use the schema of the current database which can be territory based which will be incorrect for meta-data queries.&lt;/p&gt;

&lt;p&gt;I thought the compilation schema was required for stored prepared statements (plans), which are also used to trigger actions statements. The compilation schema must be correct so that any unqualified names in the statement resolves to the intended objects, and is not dependent on the current schema where the trigger is fired.&lt;/p&gt;</comment>
                            <comment id="12512159" author="mamtas" created="Thu, 12 Jul 2007 17:19:37 +0100"  >&lt;p&gt;I am starting to derbug to see what is happening with compilation schema not being SYS. &lt;/p&gt;

&lt;p&gt;It looks like getTables is treated differently than other stored prepared statements in EmbedDatabaseMetaData. For instance, for getTablePrivileges, we try to get the already prepared query(EmbedDatabaseMetaData.getTablePrivileges) from system tables as shown below.&lt;br/&gt;
	PreparedStatement s = getPreparedQuery(&quot;getTablePrivileges&quot;);&lt;/p&gt;

&lt;p&gt;For getTables, we are bypassing the system table and instead it appears that we are trying to compile getTables&apos;s metadata query like we would any other query&lt;br/&gt;
	PreparedStatement s =getEmbedConnection().prepareMetaDataStatement(whereClauseTail.toString());&lt;br/&gt;
That might be the cause of the problem that getTables&apos;s metadata query does not get compiled in SYS schema. Note that getTables does try to modify the metadata query text by appending an optional additional condition to WHERE clause and it appends an ORDER BY. Maybe that&apos;s why it can&apos;t use the system table. I am not sure. I will continue debugging. If anyone knows about this part of the code, will like to hear to their input.&lt;/p&gt;</comment>
                            <comment id="12512168" author="mamtas" created="Thu, 12 Jul 2007 17:43:21 +0100"  >&lt;p&gt;getUDTs is implemented the same way as getTables, ie we bypass going to the system table SYSSTATEMENTS for both of them. The strange thing is it appears that we do not modify the metadata query associated with getUDTs in any ways but we still do not go to SYSSTATEMENTS, Just thought would share this piece of info.&lt;/p&gt;</comment>
                            <comment id="12512216" author="mamtas" created="Thu, 12 Jul 2007 19:57:20 +0100"  >&lt;p&gt;Well some more progress on this Jira entry. Here are my findings&lt;/p&gt;

&lt;p&gt;I am pretty confident that the problem exists only for getTables and getUDTs metadata calls because those 2 calls don&apos;t go through SYSSTATEMENTS. I tried getProcedures which does character string literal comparison with system character columns and it works fine because getProcedures goes through SYSSTATMENTS and compiles in SYS schema even though the current schema may be a user schema.&lt;/p&gt;</comment>
                            <comment id="12513309" author="mamtas" created="Tue, 17 Jul 2007 19:06:19 +0100"  >&lt;p&gt;I spent more time on this problem and following is how I plan to fix it. Any feedback/suggestion highly appreciated.&lt;/p&gt;

&lt;p&gt;EmbedMetaData.getTables is implemented differently than other metadata calls (getUDTs is also implemented in same manner as getTable but I will talk about getUDTs later). The reason for different implementation of getTables is &quot;it is altering the metadata query that is stored in metadata.properties&quot;. A user may ask to get specific types of tables when calling getTables. In that case, EmbedMetaData.getTables adds additional clause to the WHERE clause and that additional clause is &quot;AND TABLETYPE IN (all the passed table types in getTables)&quot;. Because of this alteration of metadata query, getTables can&apos;t look for the saved metadata plan. This causes the metadata query to be compiled in the current schema rather than in the SYS schema. For other metadata queries, when we go through SYSSTATEMENTS, we do the work of setting the current compilation schema as SYS schema and hence those metadata queries do not fail for collation type mismatch.&lt;/p&gt;

&lt;p&gt;To fix getTables problem, I am planning on modifying the metadata query for it to have the additional clause in it&apos;s WHERE clause and the ORDER BY clause (the reason for ORDER BY is current implementation of getTables adds a ORDER BY in EmbedMetaData.getTables) as follows&lt;/p&gt;

&lt;p&gt;AND TABLESTYPE IN (?s for all different types supported by Derby as of today) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME&lt;/p&gt;

&lt;p&gt;EmbedMetaData.getTables will use setString to set the ? to the table types requested by the user in the metadata call and if there are any unused ?s, they will be set to NULL. Also, if user has not requested for any specific types, then all the ? will be set to the types supported by Derby as of today. This approach will not require us to change the metadata query on the fly in EmbedMetaData.getTables and because of that, we can follow the same path followed by rest of the metadata call implementations in EmbedMetaData.&lt;/p&gt;

&lt;p&gt;As for getUDTs, I think it is a coding error that we do not follow the same logic as rest of the metadata calls. This is because I don&apos;t see us altering the query for getUDTs in EmbedMetaData,getUDTs. So, I will try to simply have getUDTs have the same code as rest of the other code to see if it works.&lt;/p&gt;

&lt;p&gt;Comments?&lt;/p&gt;</comment>
                            <comment id="12513395" author="stan" created="Wed, 18 Jul 2007 00:48:59 +0100"  >&lt;p&gt;Database metadata calls are used a lot to provide database independence and without this problem fixed TERRITORY_BASED collation (other than the default) will not be able to be used in these systems.  This preoblem is certainly a Blocker for this feature but should the release be blocked?  There is  a proposed fix for the problem and I would like to see this implemented ASAP.  &lt;/p&gt;

&lt;p&gt;I propose that the 10.3.1.2 release go forward with this problem well documented and that an official release (10.3.2.x) be created within 4-6 weeks that corrects this and any other serious problems that are reported during this &apos;shake-down&apos; period.&lt;/p&gt;

&lt;p&gt;What say you?&lt;/p&gt;</comment>
                            <comment id="12513405" author="mamtas" created="Wed, 18 Jul 2007 01:33:53 +0100"  >&lt;p&gt;Stan, I just wanted to mention that broken metadata calls are getTables and getUDTs and not all the metadata calls. This fact certainly does not make this bug less critical but I just wanted the community to know what is broken in metadata calls. &lt;/p&gt;</comment>
                            <comment id="12513643" author="mamtas" created="Wed, 18 Jul 2007 18:06:25 +0100"  >&lt;p&gt;Checked in fix for this bug in main with revision 557334. The commit changes were as follows (Myrna, can I migrate this change to 10.3 codeline?)&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2896&quot; title=&quot;DatabaseMetaData.getTables() fails in TERRORITY_BASED collation database with SQLState 42818: Comparisions between CHAR and CHAR not allowed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2896&quot;&gt;&lt;del&gt;DERBY-2896&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Metadata calls getTables and getUDTs were failing when run from a user schema in a territory based collated database.&lt;br/&gt;
The reason for it is that these metadata calls were not getting compiled in SYS schema when they were executed from&lt;br/&gt;
a user schema. Metadata calls should always compile in SYS schema no matter what the current schema might be. The&lt;br/&gt;
reason getTables was not getting compiled in SYS schema was because we were trying to modify it&apos;s metadata sql on&lt;br/&gt;
the fly and then were compiling that modified sql in whatever the current schema might be. I have changed the &lt;br/&gt;
metadata sql for getTables in metadata.properties so that we do not need to modify it on the fly anymore. This will&lt;br/&gt;
allow getTables to follow the same codepath as other metadata queries which will also ensure that the sql gets&lt;br/&gt;
compiled in SYS schema.&lt;/p&gt;

&lt;p&gt;As for getUDTs, it was merely a coding bug that we didn&apos;t follow the same logic as other metadata queries for it.&lt;br/&gt;
I have changed getUDTs implementation to follow the same codepath as other metadata queries.&lt;/p&gt;

&lt;p&gt;-&lt;del&gt;This line, and those below, will be ignored&lt;/del&gt;-&lt;/p&gt;

&lt;p&gt;M    java/engine/org/apache/derby/impl/jdbc/metadata.properties&lt;br/&gt;
M    java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java&lt;br/&gt;
M    java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java&lt;/p&gt;</comment>
                            <comment id="12513678" author="knutanders" created="Wed, 18 Jul 2007 19:36:15 +0100"  >&lt;p&gt;I haven&apos;t followed this discussion closely, but I&apos;d just mention that before you port the fix to 10.3, you might want to have a look at &lt;a href=&quot;http://wiki.apache.org/db-derby/MetadataUpgrade&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/MetadataUpgrade&lt;/a&gt;, the section about Maintenance and Point Releases in particular. The changes in metadata.properties will not be picked up when you upgrade from 10.3.1.x to 10.3.2.x. I don&apos;t know if that&apos;s a problem, but you may have to do something more exotic to make it work in that scenario.&lt;/p&gt;</comment>
                            <comment id="12513688" author="kmarsden" created="Wed, 18 Jul 2007 20:21:33 +0100"  >&lt;p&gt;&amp;gt;The changes in metadata.properties will not be picked up when you upgrade from 10.3.1.x to 10.3.2.x.&lt;/p&gt;

&lt;p&gt;This filed as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1107&quot; title=&quot;For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1107&quot;&gt;&lt;del&gt;DERBY-1107&lt;/del&gt;&lt;/a&gt; and I think is a good reason to have a new release candidate.  I think other critical issues such as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2437&quot; title=&quot;SYSCS_EXPORT_TABLE can be used to overwrite derby files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2437&quot;&gt;&lt;del&gt;DERBY-2437&lt;/del&gt;&lt;/a&gt; and the regression &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2892&quot; title=&quot;Closing a resultset after retrieving a large &amp;gt; 32665 bytes value with Network Server does not release locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2892&quot;&gt;&lt;del&gt;DERBY-2892&lt;/del&gt;&lt;/a&gt; might be worth waiting for too if they can be fixed in short order.  I wouldn&apos;t veto a release at this point but would probably vote -0.&lt;/p&gt;
</comment>
                            <comment id="12513729" author="mamtas" created="Wed, 18 Jul 2007 22:46:45 +0100"  >&lt;p&gt;Ported the changes from main into 10.3 codeline (revision 557405) Will look into metadata upgrade issue if it turns out that my changes didn&apos;t make into 10.3.1.x codeline.&lt;/p&gt;</comment>
                            <comment id="12513775" author="kmarsden" created="Thu, 19 Jul 2007 01:43:54 +0100"  >&lt;p&gt;Kathey said&lt;br/&gt;
&amp;gt;When synching up to the latest 10.4, and running FullCollationTests, I am still seeing some &amp;gt;(but not as many)  of this error. See full report attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2656&quot; title=&quot;Run suites.All against a collated database&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2656&quot;&gt;&lt;del&gt;DERBY-2656&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was a false alarm.  getTables() seems to be ok. New output is attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2656&quot; title=&quot;Run suites.All against a collated database&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2656&quot;&gt;&lt;del&gt;DERBY-2656&lt;/del&gt;&lt;/a&gt;:FullCollationTests_out.txt&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12559484" author="dyret" created="Wed, 16 Jan 2008 13:02:24 +0000"  >&lt;p&gt;Blocker issues that have been &apos;Resolved&apos; for a long time (6 months+)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12372934">DERBY-2894</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12361552" name="Test2896.zip" size="179942" author="stan" created="Wed, 11 Jul 2007 05:13:40 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Jul 2007 04:11:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23307</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39610</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>