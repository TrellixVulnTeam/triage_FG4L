<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1664/DERBY-1664.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1664] Derby startup time is too slow</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1664</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I know it&apos;s hard to measure what &quot;too slow&quot; is, but this is a common complaint and this affects overall perception of Derby.  This appears to be related to another common complaint that it takes too long to create tables.  I am marking this as Urgent because of the impact it has to Derby perception and the fact that the 10.2 release is going to get such wide distribution through the Sun JDK.&lt;/p&gt;

&lt;p&gt;For background, see &lt;a href=&quot;http://www.nabble.com/Startup-time-tf2012748.html#a5531684&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Startup-time-tf2012748.html#a5531684&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12347724">DERBY-1664</key>
            <summary>Derby startup time is too slow</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="davidvc">David Van Couvering</reporter>
                        <labels>
                    </labels>
                <created>Thu, 10 Aug 2006 19:04:37 +0100</created>
                <updated>Thu, 9 Sep 2010 20:45:42 +0100</updated>
                                                                            <component>Store</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12427296" author="davidvc" created="Thu, 10 Aug 2006 19:07:16 +0100"  >&lt;p&gt;Also this mail thread on derby-user is helpful&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Startup-time-for-Derby-tf2012733.html#a5545202&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Startup-time-for-Derby-tf2012733.html#a5545202&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12427298" author="davidvc" created="Thu, 10 Aug 2006 19:08:19 +0100"  >&lt;p&gt;And this followup thread from Andrew:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Re%3A-Startup-time-for-Derby-tf2043724.html#a5626797&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A-Startup-time-for-Derby-tf2043724.html#a5626797&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12427300" author="djd" created="Thu, 10 Aug 2006 19:10:36 +0100"  >&lt;p&gt;It may be part a store issue, but it&apos;s others as well. Some of the startup time is due to the number of classes loaded.&lt;/p&gt;</comment>
                            <comment id="12427303" author="djd" created="Thu, 10 Aug 2006 19:12:30 +0100"  >&lt;p&gt;Might be good to separate this out into:&lt;/p&gt;

&lt;p&gt;1) driver load time&lt;br/&gt;
2) database create time&lt;br/&gt;
3) database open time&lt;br/&gt;
4) create table (first SQL command?) time&lt;/p&gt;

&lt;p&gt;Also bugs like this tend to be problematic, when exactly does one close them. Better to identify specific improvements that can be made and address those.&lt;/p&gt;</comment>
                            <comment id="12427659" author="davidvc" created="Sat, 12 Aug 2006 01:17:41 +0100"  >&lt;p&gt;I am attaching a set of unit tests I built to time the various parts of startup.  On my Solaris x86 with the write cache enabled (my research shows it can&apos;t be &lt;b&gt;disabled&lt;/b&gt; with IDE drives) I have quite acceptable startup times, with the majority of it being spent on database creation.&lt;/p&gt;

&lt;p&gt;Next week I&apos;ll try some runs on a Linux machine whose SCSI drive has the write cache disabled.  I wonder if people who are having trouble are running in such environments...&lt;/p&gt;

&lt;p&gt;If these tests look good, I can check them in.&lt;/p&gt;

&lt;p&gt;.Testing startup with a NEW database... All measurements are in milliseconds.&lt;br/&gt;
Loading driver:  371&lt;br/&gt;
Open connection with creating new database:  1212&lt;br/&gt;
Creating a table:  232&lt;/p&gt;

&lt;p&gt;Time: 1.817&lt;/p&gt;

&lt;p&gt;OK (1 test)&lt;/p&gt;

&lt;p&gt;.Testing startup with an EXISTING database... All measurements are in milliseconds.&lt;br/&gt;
Loading driver:  302&lt;br/&gt;
Open connection with existing database:  353&lt;br/&gt;
Creating a table:  286&lt;/p&gt;

&lt;p&gt;Time: 1.22&lt;/p&gt;

&lt;p&gt;OK (1 test)&lt;/p&gt;</comment>
                            <comment id="12433229" author="rhillegas" created="Thu, 7 Sep 2006 21:58:28 +0100"  >&lt;p&gt;Unassigning from 10.2. As far as I know this is not a regression.  I think this issue should not block 10.2.&lt;/p&gt;</comment>
                            <comment id="12467595" author="fuzzylogic" created="Thu, 25 Jan 2007 20:38:23 +0000"  >&lt;p&gt;Unsetting Fix Version on unassigned issues.&lt;/p&gt;</comment>
                            <comment id="12630622" author="cowwoc" created="Fri, 12 Sep 2008 17:43:11 +0100"  >&lt;p&gt;This is still an issue even in the latest build. Given the fact that Derby is most likely going to be used on client-side applications you should be aiming for something along the lines of 300ms if tables already exist. Anything more leads to a (very) noticeable delay when launching applications.&lt;/p&gt;</comment>
                            <comment id="12766531" author="mstanik" created="Fri, 16 Oct 2009 14:54:35 +0100"  >&lt;p&gt;Startup is slow especially when database was not shut down properly. This seems be user&apos;s problem, as it is his responsibility to ensure proper shutdown procedure. Here is a little problem:&lt;br/&gt;
while embedded engine starts silently at user&apos;s request, user should shutdown engine explicitly.&lt;br/&gt;
While first part conforms zero administration claim, the second part is in direct contradiction of the claim.&lt;/p&gt;

&lt;p&gt;Typical scenario is: application uses a connection pool - it may connect to a production database or local testing database. For testing database, embedded derby is used. Connection pool like C3P0 can start the embedded driver, but has no method for shutdown. When application starts next times with embedded database, starts are getting slower and slower as database grows.&lt;/p&gt;

&lt;p&gt;I think shutdown hooks installed at engine startup should solve the situation. This was proposed long time ago, but never implemented. &lt;/p&gt;
</comment>
                            <comment id="12906954" author="rhillegas" created="Tue, 7 Sep 2010 21:11:48 +0100"  >&lt;p&gt;Attaching derby_1664.java. This program uses System.currentTimeMillis() to measure how long the following operations take:&lt;/p&gt;

&lt;p&gt;DRIVERLOAD  &amp;#8211; The time to execute Class.forName( &quot;org.apache.derby.jdbc.EmbeddedDriver&quot; )&lt;br/&gt;
DBCREATE &amp;#8211; The time to execute DriverManager.getConnection( dbName + &quot;;create=true&quot; );&lt;br/&gt;
DBCLOSE &amp;#8211; The time to execute DriverManager.getConnection( dbName + &quot;;shutdown=true&quot; );&lt;br/&gt;
REOPEN &amp;#8211; The time to execute DriverManager.getConnection( dbName );&lt;br/&gt;
TABLECREATE &amp;#8211; The time to execute Connection.prepareStatement( &quot;create table t( a int )&quot; ).execute()&lt;/p&gt;

&lt;p&gt;Each run of the program creates a configurable number of databases, performing the above operations. The first database takes the longest, presumably because it involves faulting in a lot of Derby classes. The program can be run against on-disk and in-memory databases. I ran the program 10 times for on-disk and 10 times for in-memory databases. For each run, I created 10 databases. I then ran the accumulated log script to generate the following results. I ran this test on my macbook pro laptop (10.7 trunk on Java 7 on Mac OSX 10.5.8).&lt;/p&gt;

&lt;p&gt;This is the script I used to drive the program:&lt;/p&gt;

&lt;p&gt;rm derby_1664.sql&lt;/p&gt;

&lt;p&gt;for counter in 0 1 2 3 4 5 6 7 8 9&lt;br/&gt;
do&lt;br/&gt;
    echo Run number $counter...&lt;br/&gt;
    java derby_1664 $counter memory 10&lt;br/&gt;
    java derby_1664 $counter disk 10&lt;br/&gt;
done&lt;/p&gt;


&lt;p&gt;These are the performance numbers for the first database, the one which incurs the brunt of the classloading. The numbers are averaged over the 10 runs of the program. The first column describes the configuration, which is either DISK (on-disk databases) or MEMORY (in-memory databases):&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |450                 |1123                |36                  |33                  |174                 &lt;br/&gt;
MEMORY    |496                 |950                 |11                  |20                  |167                 &lt;/p&gt;


&lt;p&gt;These are the performance numbers averaged over the subsequent databases, again averaged over the 10 runs of the program:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |486                 |13                  |22                  |15                  &lt;br/&gt;
MEMORY    |0                   |267                 |5                   |14                  |7                   &lt;/p&gt;

&lt;p&gt;I am puzzled that DRIVERLOAD consistently takes longer for in-memory databases than for on-disk databases.&lt;/p&gt;</comment>
                            <comment id="12907146" author="knutanders" created="Wed, 8 Sep 2010 10:45:55 +0100"  >&lt;p&gt;I ran the tests on my workstation (running Solaris 11 Express snv_147), and got these results (averaged over 10 runs):&lt;/p&gt;

&lt;p&gt;Java 1.6.0_21:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |231                 |801                 |8                   |11                  |117                 &lt;br/&gt;
MEMORY    |231                 |675                 |6                   |8                   |111                 &lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |253                 |4                   |10                  |9                   &lt;br/&gt;
MEMORY    |0                   |153                 |2                   |5                   |4                   &lt;/p&gt;

&lt;p&gt;Java 1.7.0-ea-b108:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |250                 |745                 |8                   |11                  |129                 &lt;br/&gt;
MEMORY    |250                 |660                 |6                   |8                   |138                 &lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |247                 |4                   |8                   |8                   &lt;br/&gt;
MEMORY    |0                   |145                 |2                   |5                   |4                   &lt;/p&gt;

&lt;p&gt;So in my experiments there was no difference in DRIVERLOAD between memory and disk databases, as one would expect.&lt;/p&gt;</comment>
                            <comment id="12907754" author="rhillegas" created="Thu, 9 Sep 2010 20:45:42 +0100"  >&lt;p&gt;Attaching a new version of the test, incorporating the following changes:&lt;/p&gt;

&lt;p&gt;o Cleaned up the output script. Now there is only one attempt to connect to the results database and create a schema. The generated script should run without any errors.&lt;/p&gt;

&lt;p&gt;o Added another argument to the test: the boot instant. This allows the test to calculate how long it takes to fault in the VM.&lt;/p&gt;

&lt;p&gt;Here&apos;s a revised script for running the test:&lt;/p&gt;

&lt;p&gt;rm derby_1664.sql&lt;/p&gt;

&lt;p&gt;for counter in 0 1 2 3 4 5 6 7 8 9&lt;br/&gt;
do&lt;br/&gt;
    echo Run number $counter...&lt;/p&gt;

&lt;p&gt;    export bootInstant=`java  &apos;derby_1664\$CurrentTime&apos;`&lt;br/&gt;
    java derby_1664 $bootInstant $counter memory 10&lt;/p&gt;

&lt;p&gt;    export bootInstant=`java  &apos;derby_1664\$CurrentTime&apos;`&lt;br/&gt;
    java derby_1664 $bootInstant $counter disk 10&lt;/p&gt;

&lt;p&gt;done&lt;/p&gt;


&lt;p&gt;I ran the test against 3 versions of Derby which support in-memory databases: 10.5.1.1, 10.6.1.0, and the 10.7 trunk. For all three versions on my reasonably peppy machine I saw the following:&lt;/p&gt;

&lt;p&gt;1) It took a little less than a second to boot the VM and fault-in the Derby driver.&lt;/p&gt;

&lt;p&gt;2) Creating the first database took another second.&lt;/p&gt;

&lt;p&gt;3) Creating subsequent on-disk databases took a half second apiece.&lt;/p&gt;

&lt;p&gt;4) Creating subsequent in-memory databases took a quarter second apiece.&lt;/p&gt;


&lt;p&gt;Here are the results of my test runs:&lt;/p&gt;

&lt;p&gt;################################################&lt;/p&gt;

&lt;p&gt;10.5.1.1:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |327                 |412                 |958                 |14                  |49                  |168                 &lt;br/&gt;
MEMORY    |337                 |459                 |762                 |8                   |13                  |162                 &lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |0                   |439                 |10                  |24                  |19                  &lt;br/&gt;
MEMORY    |0                   |0                   |228                 |4                   |11                  |9                   &lt;/p&gt;



&lt;p&gt;################################################&lt;/p&gt;

&lt;p&gt;10.6.1.0:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |323                 |436                 |1196                |16                  |26                  |175                 &lt;br/&gt;
MEMORY    |333                 |482                 |915                 |9                   |14                  |170                 &lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |0                   |491                 |13                  |23                  |15                  &lt;br/&gt;
MEMORY    |0                   |0                   |253                 |5                   |12                  |7                   &lt;/p&gt;



&lt;p&gt;################################################&lt;/p&gt;

&lt;p&gt;10.7 trunk:&lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |325                 |439                 |1149                |18                  |28                  |176                 &lt;br/&gt;
MEMORY    |327                 |438                 |953                 |9                   |14                  |172                 &lt;/p&gt;

&lt;p&gt;CONFIGURA&amp;amp;|VMBOOT              |DRIVERLOAD          |DBCREATE            |DBCLOSE             |REOPEN              |TABLECREATE         &lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
DISK      |0                   |0                   |499                 |13                  |23                  |15                  &lt;br/&gt;
MEMORY    |0                   |0                   |263                 |5                   |16                  |7                   &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12347808">DERBY-1674</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454228" name="derby_1664.java" size="12813" author="rhillegas" created="Thu, 9 Sep 2010 20:45:42 +0100"/>
                            <attachment id="12454040" name="derby_1664.java" size="11524" author="rhillegas" created="Tue, 7 Sep 2010 21:11:48 +0100"/>
                            <attachment id="12338739" name="perftest.diff" size="17338" author="davidvc" created="Sat, 12 Aug 2006 01:17:41 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Aug 2006 18:10:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30094</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0pb3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37918</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>