<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3057/DERBY-3057.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3057] with weme 6.1 testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest) failed: java.lang.NoSuchMethodError: java/lang/String.matches(Ljava/lang/String;)Z</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3057</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest) failed:&lt;br/&gt;
java.lang.NoSuchMethodError: java/lang/String.matches(Ljava/lang/String;)Z&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC$GeneratedId.equals(JDBC.java:49)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:871)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:779)&lt;br/&gt;
	at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:717)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertFunctionDBMD(TableFunctionTest.java:1154)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleDDL(TableFunctionTest.java:888)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:782)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:253)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at TimeRunner.main(TimeRunner.java:31)&lt;br/&gt;
47	testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12377603">DERBY-3057</key>
            <summary>with weme 6.1 testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest) failed: java.lang.NoSuchMethodError: java/lang/String.matches(Ljava/lang/String;)Z</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Sep 2007 21:22:49 +0100</created>
                <updated>Mon, 29 Jun 2009 23:58:03 +0100</updated>
                            <resolved>Thu, 13 Sep 2007 18:30:25 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12525550" author="myrna" created="Fri, 7 Sep 2007 00:05:17 +0100"  >&lt;p&gt;I prodded this a little, and modified the method &apos;equals()&apos; in JDBC$GeneratedID to look like this:&lt;/p&gt;

&lt;p&gt;-------------&lt;br/&gt;
        public boolean equals(Object o) {&lt;br/&gt;
        // unless JSR169, use String.matches...&lt;br/&gt;
        	if (JDBC.vmSupportsJDBC3()) &lt;br/&gt;
        	{&lt;br/&gt;
        		return o instanceof String &amp;amp;&amp;amp;&lt;br/&gt;
        		((String) o).matches(&quot;SQL&lt;span class=&quot;error&quot;&gt;&amp;#91;0-9&amp;#93;&lt;/span&gt;&lt;/p&gt;
{15}
&lt;p&gt;&quot;);&lt;br/&gt;
        	}&lt;br/&gt;
        	else&lt;br/&gt;
        	{&lt;br/&gt;
        		String tmpstr = (String)o;&lt;br/&gt;
        		boolean b = true;&lt;br/&gt;
        		if (!(o instanceof String))&lt;br/&gt;
        			b = false;&lt;br/&gt;
        		if (!(tmpstr.startsWith(&quot;SQL&quot;)))&lt;br/&gt;
        			b = false;&lt;br/&gt;
        		if (tmpstr.length() != 18)&lt;br/&gt;
        			b = false;&lt;br/&gt;
        		for (int i=3 ; i&amp;lt;18 ; i++)&lt;br/&gt;
        		{&lt;br/&gt;
        			if (Character.isDigit(tmpstr.charAt&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;))&lt;br/&gt;
        				continue;&lt;br/&gt;
        			else&lt;/p&gt;
        			{
        				b = false;
        				break;
        			}
&lt;p&gt;        		}&lt;br/&gt;
        		return b;&lt;br/&gt;
        	}&lt;br/&gt;
        }&lt;br/&gt;
-------------------------------------&lt;/p&gt;

&lt;p&gt;And that does get around the problem that matches() is not available with JSR169.&lt;/p&gt;

&lt;p&gt;However, I then get the following stack trace upon running the test:&lt;/p&gt;

&lt;p&gt;-------------------------------------&lt;br/&gt;
.java.sql.SQLException: Feature not implemented: &lt;/p&gt;
{0}.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:202)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4320)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:464)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:368)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1245)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1070)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResults(TableFunctionTest.java:986)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:786)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:253)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;br/&gt;
Caused by: ERROR 0A000: Feature not implemented: {0}
&lt;p&gt;.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:280)&lt;br/&gt;
	at org.apache.derby.iapi.types.BinaryDecimal.setValueFromResultSet(BinaryDecimal.java:690)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(VTIResultSet.java:559)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(VTIResultSet.java:335)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:463)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:424)&lt;br/&gt;
	... 19 more&lt;br/&gt;
And:&lt;br/&gt;
F&lt;br/&gt;
Time: 2.75&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testTableFunctions(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)junit.framework.AssertionFailedError: Unexpected exception: java.sql.SQLException: Feature not implemented: &lt;/p&gt;
{0}
&lt;p&gt;.&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.unexpectedThrowable(TableFunctionTest.java:1446)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1077)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.allLegalDatatypesVTIResults(TableFunctionTest.java:986)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.testTableFunctions(TableFunctionTest.java:786)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;/p&gt;

&lt;p&gt;Are the VTI&apos;s even supposed to work with JSR169? &lt;/p&gt;</comment>
                            <comment id="12526603" author="myrna" created="Tue, 11 Sep 2007 22:02:17 +0100"  >&lt;p&gt;I&apos;m attaching a patch, which &lt;br/&gt;
1. implements the same functionality as JDBC.matches() for JSR169&lt;br/&gt;
    I verified this works by having the elaborate if be the code executed for jdk14 and running the test TableFuncionTest; that worked. &lt;br/&gt;
2. placing an if (JDBC.vmsupportJDBC3()) around a ResultSet.getBigDecimal() in TableFunctionTest - this would give a method not found with JSR169&lt;br/&gt;
3. attempting to implement BinaryDecimal.setValueFromResultSet.&lt;/p&gt;

&lt;p&gt;I have most doubts about item 3 - I implemented the method as:&lt;br/&gt;
+	data2c = resultSet.getBytes(colNumber);&lt;br/&gt;
+	sqlScale=0;&lt;br/&gt;
But although this seems to work for J2ME/JSR169, I have strong doubts. Basically, I have little understanding of what this method should do, and I&apos;m not sure that it&apos;s enough to just get the bytes. Is it necessary to do some of the manipulations found in this class to compress the bytearray obtained?&lt;/p&gt;

&lt;p&gt;I&apos;m also not clear on why this method wasn&apos;t implemented, and I&apos;ve not done much investigation in identifying where the j9/j2ME jvm chooses a different code path than e.g. jdk142.&lt;/p&gt;

&lt;p&gt;Feedback on this patch is appreciated.&lt;/p&gt;</comment>
                            <comment id="12526826" author="djd" created="Wed, 12 Sep 2007 16:46:45 +0100"  >&lt;p&gt;3) is wrong, it&apos;s not caught by the test since 2) disables the check that would catch it.&lt;/p&gt;

&lt;p&gt;For 2) the assert should be implemented for JSR169, in this case using getString() to obtain the String is sufficient.&lt;/p&gt;

&lt;p&gt;For 3) fetching a DECIMAL in JSR 169 requires a getString() (since getBigDecimal) is not implemented.&lt;/p&gt;</comment>
                            <comment id="12526872" author="myrna" created="Wed, 12 Sep 2007 19:01:25 +0100"  >&lt;p&gt;I hope I understood the clues. Another review will be appreciated...&lt;/p&gt;

&lt;p&gt;The javadoc for class BinaryDecimal mentioned a class CDCDecimal.&lt;br/&gt;
I &lt;b&gt;think&lt;/b&gt; this was never implemented, or it has been implemented as BigIntegerDecimal? (At least, the only consumer of BinaryDecimal appears to be BigIntegerDecimal...)&lt;/p&gt;
</comment>
                            <comment id="12527193" author="myrna" created="Thu, 13 Sep 2007 18:30:25 +0100"  >&lt;p&gt;I made one minor additional change to BinaryDecimal.java; I replaced the reference to CDCDecimal with BigIntegerDecimal, and committed.&lt;/p&gt;

</comment>
                    </comments>
                    <attachments>
                            <attachment id="12365596" name="DERBY-3057.diff_try1" size="4054" author="myrna" created="Tue, 11 Sep 2007 22:02:17 +0100"/>
                            <attachment id="12365657" name="DERBY-3057.diff_try2" size="4116" author="myrna" created="Wed, 12 Sep 2007 19:01:20 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Sep 2007 23:05:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23402</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0vin:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38924</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>