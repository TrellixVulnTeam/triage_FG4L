<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:52 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6066/DERBY-6066.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6066] Client should use a prepared statement rather than regular statement for Connection.getTransactionIsolation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6066</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This jira is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6053&quot; title=&quot;Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6053&quot;&gt;&lt;del&gt;DERBY-6053&lt;/del&gt;&lt;/a&gt; but for o.a.d.client.am.Connection.getTransactionIsolation. Use prepared statement rather than regular statement every time user makes a get transaction isolation call.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12630769">DERBY-6066</key>
            <summary>Client should use a prepared statement rather than regular statement for Connection.getTransactionIsolation</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Feb 2013 22:39:47 +0000</created>
                <updated>Wed, 3 Sep 2014 09:31:34 +0100</updated>
                            <resolved>Mon, 17 Jun 2013 19:08:00 +0100</resolved>
                                                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13580783" author="mamtas" created="Mon, 18 Feb 2013 19:03:51 +0000"  >&lt;p&gt;The attached patch has the changes to use PreparedStatement rather than Statement to get the transaction isolation level.&lt;/p&gt;

&lt;p&gt;This is similar to what we did for set tranaction isolation level as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6053&quot; title=&quot;Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6053&quot;&gt;&lt;del&gt;DERBY-6053&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;But I noticed that my changes do not get run (I put a System.out.println inside the changes to see if it got printed when running derbyall and junit suite and the println never got printed) when I ask for get transaction isolation level or when I run the derbyall and junit suite. I found that this is because of the checkin that went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2084&quot; title=&quot;getTransactionIsolation() in network client should not activate a transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2084&quot;&gt;&lt;del&gt;DERBY-2084&lt;/del&gt;&lt;/a&gt; which gets the current isolation level piggy backed as part of some other communication happening between cient and server and because of that get transaction isolation call on the client side does not need to go over the line to the server to find the current isolation. Copying below the piece of code(from o.a.d.client.am.Connection.getTransactionIsolationX) where we take advantage of isolation level picked from piggbacking &lt;br/&gt;
            if (isolation_ != TRANSACTION_UNKNOWN) {&lt;br/&gt;
                if (SanityManager.DEBUG) &lt;/p&gt;
{
                    SanityManager.ASSERT(supportsSessionDataCaching(),
                            &quot;Cannot return cached isolation when caching is &quot; +
                            &quot;not supported!&quot;);
                }
&lt;p&gt;                return isolation_;&lt;br/&gt;
            }&lt;/p&gt;

&lt;p&gt;Just for testing my code changes, I commented out the code above(this will require us to send get isolation level on the wire to the server everytime client asks for it) and added the println in my changes and ran the tests again and I see that we spit out the println when get transaction isolation level is requested by the user. This verifies that my changes are working fine. The attached patch obviosuly doesn&apos;t have the println and it does not comment out the piggybacking isolation level usage&lt;br/&gt;
            if (getTransactionIsolationPrepStmt == null  || &lt;br/&gt;
                    !getTransactionIsolationPrepStmt.openOnClient_) &lt;/p&gt;
{
            	System.out.println(&quot;came in new code&quot;);
            	getTransactionIsolationPrepStmt =
                        prepareStatementX(
                                &quot;VALUES CURRENT ISOLATION&quot;,
                                java.sql.ResultSet.TYPE_FORWARD_ONLY,
                                java.sql.ResultSet.CONCUR_READ_ONLY,
                                holdability(),
                                java.sql.Statement.NO_GENERATED_KEYS,
                                null, null);
            }

&lt;p&gt;So the usage of prepared statement rather than statement for get transaction isolation will not improve the performance by a lot since we do not send these calls on the wire so much but I think it is still a good change. If there are no objections to this change, I will go ahead and commit it in couple days&lt;/p&gt;</comment>
                            <comment id="13580785" author="mamtas" created="Mon, 18 Feb 2013 19:11:35 +0000"  >&lt;p&gt;Currently, there is no test in our harness to see when the piggybacked isolation level might not be correct and hence the isolation level should be obtained from server. There is following comment in o.a.d.client.am.Connection.getTransactionIsolationX&lt;br/&gt;
            // &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1148&quot; title=&quot;Client XA getTransactionIsolation()   does not return the correct isolation level when rejoining a global transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1148&quot;&gt;&lt;del&gt;DERBY-1148&lt;/del&gt;&lt;/a&gt; - Client reports wrong isolation level. We need to get the isolation&lt;br/&gt;
            // level from the server. &apos;isolation_&apos; maintained in the client&apos;s connection object&lt;br/&gt;
            // can be out of sync with the real isolation when in an XA transaction. This can &lt;br/&gt;
            // also happen when isolation is set using SQL instead of JDBC. So we try to get the&lt;br/&gt;
            // value from the server by calling the &quot;current isolation&quot; function. If we fail to &lt;br/&gt;
            // get the value, return the value stored in the client&apos;s connection object.&lt;br/&gt;
            // &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3192&quot; title=&quot;Cache session data in the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3192&quot;&gt;&lt;del&gt;DERBY-3192&lt;/del&gt;&lt;/a&gt; - Cache session data in the client driver allows&lt;br/&gt;
            // the re-introduction of isolation level caching. Changes to the&lt;br/&gt;
            // isolation level triggered from SQL are now handled by&lt;br/&gt;
            // piggybacking the modified isolation level on messages going&lt;br/&gt;
            // back to the client.&lt;br/&gt;
            // The XA-problem is handled by letting XA state changes set the&lt;br/&gt;
            // cached isolation level to TRANSACTION_UNKNOWN which will trigger&lt;br/&gt;
            // a refresh from the server.&lt;/p&gt;</comment>
                            <comment id="13581207" author="knutanders" created="Tue, 19 Feb 2013 10:54:56 +0000"  >&lt;p&gt;Do you understand why the changes in TableLockBasicTest are needed? The last part of the statement name is based on the section number, so the patch seems to have increased the number of sections needed in this test, which sounds counterintuitive to me.&lt;/p&gt;</comment>
                            <comment id="13582328" author="mamtas" created="Wed, 20 Feb 2013 17:04:27 +0000"  >&lt;p&gt;Hi Knut, TableLockBasicTest did not belong in the earlier patch. I had that diff left over from various different expirements I was trying to figure out why we never get into the part of the code in o.a.d.client.am.Connection.getTransactionIsolationX where we create statement(with my changes, PreparedStatement) for &quot;VALUES CURRENT ISOLATION&quot;. &lt;/p&gt;

&lt;p&gt;In trunk, I had put println in the code where we create the statement for &quot;VALUES CURRENT ISOLATION&quot; and ran junit suite and saw that we never print that string. I looked through various related commits in this area and found the jira after which we have stopped coming into create statement code. That change went in 10.7 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4314&quot; title=&quot;With derby client setTransactionIsolation executes and commits even if isolation has not changed &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4314&quot;&gt;&lt;del&gt;DERBY-4314&lt;/del&gt;&lt;/a&gt;(With derby client setTrasactionIsolation executes and commits even if isolation has not changed.) as checkin r940620. When I put the println in 10.6 client, I can see while running junit that we spit out the println(10.6 doesn&apos;t have changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4314&quot; title=&quot;With derby client setTransactionIsolation executes and commits even if isolation has not changed &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4314&quot;&gt;&lt;del&gt;DERBY-4314&lt;/del&gt;&lt;/a&gt;). I am not sure if the changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4314&quot; title=&quot;With derby client setTransactionIsolation executes and commits even if isolation has not changed &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4314&quot;&gt;&lt;del&gt;DERBY-4314&lt;/del&gt;&lt;/a&gt; have made the create statement code dead and it is not needed anymore(since isolation is received through piggybacking) or if there is a bug which prevents us from going into the create statement code.&lt;/p&gt;

&lt;p&gt;I will attach the latest patch for this jira which simply uses PreparedStatement rather than Statement.&lt;/p&gt;

&lt;p&gt;Also, I have created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6082&quot; title=&quot;Investigate if openOnServer_ field in org.apache.derby.client.am.Statement is still needed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6082&quot;&gt;&lt;del&gt;DERBY-6082&lt;/del&gt;&lt;/a&gt; to see if openOnServer_ in org.apache.derby.client.am.Statement is still needed. If not, then we can remove it from the if statement for statement creation for &quot;VALUES CURRENT ISOLATION&quot;.&lt;/p&gt;</comment>
                            <comment id="13582330" author="mamtas" created="Wed, 20 Feb 2013 17:06:14 +0000"  >&lt;p&gt;Attaching the patch that uses PreparedStatement rather than Statement to get current isolation level.&lt;/p&gt;</comment>
                            <comment id="13582406" author="mamtas" created="Wed, 20 Feb 2013 18:39:33 +0000"  >&lt;p&gt;I am wondering what the community thinks of &lt;br/&gt;
1)going ahead and commiting the changes for switching from statement to prepared statement for getTraqnsactionIsolation &lt;br/&gt;
2)and creating a separate issue to find out why the code is not getting used anymore after the commit for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4314&quot; title=&quot;With derby client setTransactionIsolation executes and commits even if isolation has not changed &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4314&quot;&gt;&lt;del&gt;DERBY-4314&lt;/del&gt;&lt;/a&gt; went in.&lt;/p&gt;</comment>
                            <comment id="13582988" author="knutanders" created="Thu, 21 Feb 2013 07:44:55 +0000"  >&lt;p&gt;Is the code used when running in a mixed version environment with client/trunk and server/10.3? Maybe it&apos;s just left around for compatibility with old servers that don&apos;t support isolation level caching.&lt;/p&gt;

&lt;p&gt;The changes in the second patch look fine to me.&lt;/p&gt;</comment>
                            <comment id="13584410" author="mamtas" created="Fri, 22 Feb 2013 16:33:40 +0000"  >&lt;p&gt;Hi Knut, thank you for reviewing the patch. I tried two different combinations of network server and client&lt;br/&gt;
1)10.3 server and trunk client &lt;br/&gt;
2)trunk server and trunk client&lt;br/&gt;
I put println in my patch in 3 places inside o.a.d.client.am.Connection:getTransactionIsolationX(), &lt;br/&gt;
1)one just at the very beginning of the method, &lt;br/&gt;
        System.out.println(&quot;in top code&quot;);&lt;br/&gt;
2)one right after following if statement&lt;br/&gt;
            if (isolation_ != TRANSACTION_UNKNOWN) {&lt;br/&gt;
                if (SanityManager.DEBUG) &lt;/p&gt;
{
                    SanityManager.ASSERT(supportsSessionDataCaching(),
                            &quot;Cannot return cached isolation when caching is &quot; +
                            &quot;not supported!&quot;);
                }
&lt;p&gt;                return isolation_;&lt;br/&gt;
            }&lt;br/&gt;
            System.out.println(&quot;outside if stmt&quot;);&lt;br/&gt;
3)and the last one inside the following if code&lt;br/&gt;
            if (getTransactionIsolationPrepStmt == null  || &lt;br/&gt;
                    !(getTransactionIsolationPrepStmt.openOnClient_ &amp;amp;&amp;amp;&lt;br/&gt;
                            getTransactionIsolationPrepStmt.openOnServer_)) {&lt;br/&gt;
                System.out.println(&quot;inside if stmt&quot;);&lt;/p&gt;

&lt;p&gt;I ran the attached SampleProgram with both these configurations and like you said, in case of 10.3 server and trunk client, I see all the 3 printlns getting printed. But for trunk  server and trunk client, only the println &quot;in top code&quot; gets printed.&lt;/p&gt;

&lt;p&gt;So the code in question is definitely getting used for working with the older versions of servers that do not have support for isolation level caching. Additionally, I looked at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4314&quot; title=&quot;With derby client setTransactionIsolation executes and commits even if isolation has not changed &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4314&quot;&gt;&lt;del&gt;DERBY-4314&lt;/del&gt;&lt;/a&gt; and a good writeup on piggybacking at &lt;a href=&quot;http://wiki.apache.org/db-derby/Derby3192Writeup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/Derby3192Writeup&lt;/a&gt; and the comments in these 2 places seem to indicate that there might be cases, where Newtwork Servers(ones with support for isolation level caching) have not had a chance to send the isolation level piggybacked as part of some other communication between client and server and hence the call to getTransactionIsolation on client side will actually end up making to the server because isolation level on the client side will still be set to TRANSACTION_UNKNOWN. I have not been able to create a test case for such a scenario but just wanted to point out that the code in question in getTransactionIsolationX might also be getting used for such a scenario.&lt;/p&gt;

&lt;p&gt;I will put some additional comments in my 2nd patch about where the code in question is getting used so it will be easier to understand the code in future.&lt;/p&gt;

&lt;p&gt;Also, I was wondering if we have a junit test for testing compatibility between different version of Network Server and client. If so, I will like to add a simple junit test for 10.3 Network Server and higher revision of client.&lt;/p&gt;</comment>
                            <comment id="13585759" author="knutanders" created="Mon, 25 Feb 2013 09:56:29 +0000"  >&lt;p&gt;Client/server compatibility testing is performed as part of suites.All, provided the derbyTesting.oldReleasePath property has been specified. Test cases can be added to functionTests/tests/compatibility/JDBCDriverTest.java, and the test itself should be run by invoking the _Suite class in that directory via JUnit.&lt;/p&gt;</comment>
                            <comment id="13587690" author="mamtas" created="Tue, 26 Feb 2013 22:48:16 +0000"  >&lt;p&gt;Committed changes to trunk with revision 1450499. We now use PreparedStatement rather than Statement for getting the isolation level from the server. Commit also includes comments in the code for when the call for the isolation will actually go to the server over the wire and when it will be obtained for client&apos;s local session cache.&lt;/p&gt;</comment>
                            <comment id="13682804" author="kmarsden" created="Thu, 13 Jun 2013 22:55:33 +0100"  >&lt;p&gt;Mamta, can this be resolved?&lt;/p&gt;</comment>
                            <comment id="13685785" author="mamtas" created="Mon, 17 Jun 2013 19:07:49 +0100"  >&lt;p&gt;Yes, I will go ahead and resolve this. For anyone interested, this can be back ported to earlier releases if needed&lt;/p&gt;</comment>
                            <comment id="14119599" author="knutanders" created="Wed, 3 Sep 2014 09:31:34 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12629277">DERBY-6053</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12633221">DERBY-6082</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12569845" name="DERBY6066_patch1_diff.txt" size="7198" author="mamtas" created="Mon, 18 Feb 2013 19:03:51 +0000"/>
                            <attachment id="12570154" name="DERBY6066_patch2_diff.txt" size="2925" author="mamtas" created="Wed, 20 Feb 2013 17:06:14 +0000"/>
                            <attachment id="12570486" name="SampleProgram.java" size="805" author="mamtas" created="Fri, 22 Feb 2013 16:33:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 19 Feb 2013 10:54:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311265</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzbkfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>311611</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>