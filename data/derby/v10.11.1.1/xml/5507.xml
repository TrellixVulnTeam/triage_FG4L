<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5507/DERBY-5507.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5507] Orderly shutdown fails if you are using BUILTIN authentication and turn on derby.database.propertiesOnly</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5507</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following script raises an assertion on the last line. We are failing during the encryption of the password. The assertion prints out the plaintext of the password. I ran the script with the following command line:&lt;/p&gt;

&lt;p&gt;java \&lt;br/&gt;
  -Dderby.connection.requireAuthentication=true  \&lt;br/&gt;
  -Dderby.authentication.provider=BUILTIN \&lt;br/&gt;
  -Dderby.user.test_dbo=test_dbopassword \&lt;br/&gt;
  org.apache.derby.tools.ij $SCRIPT&lt;/p&gt;

&lt;p&gt;Here is the script:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;create=true;user=test_dbo;password=test_dbopassword&apos;;&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_set_database_property( &apos;derby.connection.requireAuthentication&apos;, &apos;true&apos; );&lt;br/&gt;
call syscs_util.syscs_set_database_property( &apos;derby.authentication.provider&apos;, &apos;BUILTIN&apos; );&lt;/p&gt;

&lt;p&gt;&amp;#8211; shutdown works correctly if you comment out the following two lines&lt;br/&gt;
call syscs_util.syscs_set_database_property( &apos;derby.user.test_dbo&apos;, &apos;test_dbopassword&apos; );&lt;br/&gt;
call syscs_util.syscs_set_database_property( &apos;derby.database.propertiesOnly&apos;, &apos;true&apos; );&lt;/p&gt;

&lt;p&gt;&amp;#8211; fails to authenticate correct credentials&lt;br/&gt;
connect &apos;jdbc:derby:memory:db;shutdown=true;user=test_dbo;password=test_dbopassword&apos;;&lt;/p&gt;

&lt;p&gt;Here is the assertion printed on the screen:&lt;/p&gt;

&lt;p&gt;ERROR XJ001: Java exception: &apos;ASSERT FAILED Unknown authentication scheme for token test_dbopassword: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;Here is the stack trace in derby.log:&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Unknown authentication scheme for token test_dbopassword&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl.encryptPasswordUsingStoredAlgorithm(BasicAuthenticationServiceImpl.java:282)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl.authenticateUser(BasicAuthenticationServiceImpl.java:199)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.authenticate(AuthenticationServiceBase.java:279)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkUserCredentials(EmbedConnection.java:1220)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:422)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:51)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:70)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:255)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:143)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:582)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:154)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.dynamicConnection(ij.java:1528)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ConnectStatement(ij.java:1358)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ijStatement(ij.java:1143)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:347)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:245)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12531995">DERBY-5507</key>
            <summary>Orderly shutdown fails if you are using BUILTIN authentication and turn on derby.database.propertiesOnly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                    </labels>
                <created>Fri, 18 Nov 2011 20:58:01 +0000</created>
                <updated>Fri, 5 Jul 2013 13:43:42 +0100</updated>
                            <resolved>Mon, 19 Dec 2011 11:04:05 +0000</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Miscellaneous</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13154144" author="knutanders" created="Mon, 21 Nov 2011 12:57:49 +0000"  >&lt;p&gt;The failing ASSERT was added in 10.6.1.0 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4483&quot; title=&quot;Provide a way to change the hash algorithm used by BUILTIN authentication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4483&quot;&gt;&lt;del&gt;DERBY-4483&lt;/del&gt;&lt;/a&gt;, but the repro also fails on earlier versions. On 10.5.1.1:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; &amp;#8211; fails to authenticate correct credentials&lt;br/&gt;
connect &apos;jdbc:derby:memory:db;shutdown=true;user=test_dbo;password=test_dbopassword&apos;;&lt;br/&gt;
ERROR 08004: Connection authentication failure occurred.  Reason: Invalid authentication..&lt;/p&gt;

&lt;p&gt;It looks as if the password is stored as plaintext in the database if it is also defined in a system property.&lt;/p&gt;</comment>
                            <comment id="13154155" author="knutanders" created="Mon, 21 Nov 2011 13:13:33 +0000"  >&lt;p&gt;Here&apos;s a minimal repro that shows the problem:&lt;/p&gt;

&lt;p&gt;$ java -Dderby.user.abc=def -jar derbyrun.jar ij&lt;br/&gt;
ij version 10.9&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_database_property(&apos;derby.user.abc&apos;, &apos;test&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; values syscs_util.syscs_get_database_property(&apos;derby.user.abc&apos;);&lt;br/&gt;
1                                                                                                                               &lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
test                                                                                                                            &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;The expected result is that the password is stored as a hashed token, which is what happens if the derby.user.&amp;lt;NAME&amp;gt; system property isn&apos;t set:&lt;/p&gt;

&lt;p&gt;$ java -jar derbyrun.jar ij&lt;br/&gt;
ij version 10.9&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; call syscs_util.syscs_set_database_property(&apos;derby.user.abc&apos;, &apos;test&apos;);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; values syscs_util.syscs_get_database_property(&apos;derby.user.abc&apos;);&lt;br/&gt;
1                                                                                                                               &lt;br/&gt;
--------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
3b6170e0f1ade11debb6732029c267095e092b5b43ff271d4f8d9158cb004322f38b:SHA-256                                                    &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</comment>
                            <comment id="13154174" author="knutanders" created="Mon, 21 Nov 2011 13:34:42 +0000"  >&lt;p&gt;Hashing of the password before storing it is skipped because of this code in PropertyValidation.doValidateApplyAndMap():&lt;/p&gt;

&lt;p&gt;					// if this property should not be used then&lt;br/&gt;
					// don&apos;t call apply. This depends on where&lt;br/&gt;
					// the old value comes from&lt;br/&gt;
					// SET_IN_JVM - property will not be used&lt;br/&gt;
					// SET_IN_DATABASE - propery will be used&lt;br/&gt;
					// SET_IN_APPLICATION - will become SET_IN_DATABASE&lt;br/&gt;
					// NOT_SET - will become SET_IN_DATABASE&lt;/p&gt;

&lt;p&gt;					if (!dbOnlyProperty &amp;amp;&amp;amp; key.startsWith(&quot;derby.&quot;)) &lt;/p&gt;
{
						if (PropertyUtil.whereSet(key, d) == PropertyUtil.SET_IN_JVM)
							continue;
					}

&lt;p&gt;The repros pass when this code is commented out, but I suppose that the code is there for a reason so this isn&apos;t the proper fix.&lt;/p&gt;</comment>
                            <comment id="13154265" author="knutanders" created="Mon, 21 Nov 2011 15:55:45 +0000"  >&lt;p&gt;FWIW, no regression tests failed when the problematic piece of code in PropertyValidation.doValidateApplyAndMap() was commented out.&lt;/p&gt;</comment>
                            <comment id="13154269" author="rhillegas" created="Mon, 21 Nov 2011 16:09:29 +0000"  >&lt;p&gt;Hm, that mysterious piece of code goes back to the first release of Derby so there are no clues available in our code archaeology. Could someone with access to the original Cloudscape repository and bug tracker try to chase this one down? Thanks.&lt;/p&gt;</comment>
                            <comment id="13154554" author="myrna" created="Mon, 21 Nov 2011 21:29:34 +0000"  >&lt;p&gt;Unfortunately, the original Cloudscape repository comments do not reference bug trackers for this change.&lt;/p&gt;

&lt;p&gt;I did follow this code snippet (minus the &apos;derby&apos; clause, of course) through the creation of the PropertyValidation class from code in the PropertyConglomerate class to its first inclusion on Aug 27, 1999, by djd, but the only comment on the check-in is: &quot;Lock manager properties&quot; (cloudscape revision 11958, for reference).&lt;/p&gt;

&lt;p&gt;Before that, ValidateAndApplyMap looked like this:&lt;/p&gt;

&lt;p&gt;	private Serializable validateApplyAndMap(TransactionController tc,&lt;br/&gt;
											 String key, Serializable value)&lt;br/&gt;
		 throws StandardException&lt;br/&gt;
	{&lt;br/&gt;
		Dictionary d = new Hashtable();&lt;br/&gt;
		getProperties(tc,d,false/&lt;b&gt;!stringsOnly&lt;/b&gt;/,false/&lt;b&gt;!defaultsOnly&lt;/b&gt;/);&lt;br/&gt;
		Serializable mappedValue = null;&lt;br/&gt;
 		if (notifyOnSet != null) {&lt;br/&gt;
			synchronized (this) {&lt;/p&gt;

&lt;p&gt;				for (int i = 0; i &amp;lt; notifyOnSet.size() ; i++) &lt;/p&gt;
{
					PropertySetCallback psc = (PropertySetCallback) notifyOnSet.elementAt(i);
					if (!psc.validate(key, value, d))
						continue;

					Serviceable s;
					if ((s = psc.apply(key,value,d)) != null)
						((TransactionManager) tc).addPostCommitWork(s);
					if (mappedValue == null)
 						mappedValue = psc.map(key, value, d);
				}
&lt;p&gt;			}&lt;br/&gt;
		}&lt;/p&gt;

&lt;p&gt;		//&lt;br/&gt;
		// RESOLVE: log device cannot be changed on the fly right now&lt;br/&gt;
		if (key.equals(Attribute.LOG_DEVICE))&lt;br/&gt;
			throw RawStoreStatementException.cannotChangeLogDevice();&lt;/p&gt;

&lt;p&gt;		if (mappedValue == null)&lt;br/&gt;
			return value;&lt;br/&gt;
		else&lt;br/&gt;
			return mappedValue;&lt;br/&gt;
	}&lt;/p&gt;


&lt;p&gt;At the time of this change, the method AddPropertySetNotification was also considerably changed, it had code added that also mentioned those SET_IN_* values/comments; &lt;br/&gt;
                // set up the initial values by calling the validate and apply methods.&lt;br/&gt;
		// the map methods are not called as they will have been called&lt;br/&gt;
		// at runtime when the user set the property.&lt;br/&gt;
                &lt;span class=&quot;error&quot;&gt;&amp;#91;...more code added...&amp;#93;&lt;/span&gt;&lt;br/&gt;
				if (!who.validate(key, value, d))&lt;br/&gt;
					continue;&lt;/p&gt;

&lt;p&gt;				// SET_IN_JVM - need to get value&lt;br/&gt;
				// SET_IN_DATABASE - use the stored value&lt;br/&gt;
				// SET_IN_APPLICATION - need to get value&lt;br/&gt;
				// NOT_SET - can&apos;t happen cos it does exist in d&lt;/p&gt;

&lt;p&gt;				if (!dbOnly) &lt;/p&gt;
{
					int whereSet = PropertyUtil.whereSet(key, d);
					if (whereSet != PropertyUtil.SET_IN_DATABASE)
						value = PropertyUtil.getSystemProperty(key);
				}
&lt;p&gt;                   &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
but that code was subsequently removed again (in cloudscape revision 12007, on Aug 30, 1999, by djd) with check-in comment:&lt;br/&gt;
&quot;Fix bug with missing read lock configuration parameters.&quot;&lt;/p&gt;

&lt;p&gt;At that time, (in addition to adding of a locks.waitTimeout property), it looks like an init method was added to PropertySetCallback, to SinglePool, some dummy init methods were added to some other classes, and PropertyUtil got a new method with signature:&lt;br/&gt;
public static String getPropertyFromSet(boolean dbOnly, Dictionary set, String key) &lt;/p&gt;

&lt;p&gt;Perhaps the code snippet in the method doValidateAndApplyMap should also have been removed at that time?&lt;/p&gt;</comment>
                            <comment id="13170994" author="knutanders" created="Fri, 16 Dec 2011 14:37:07 +0000"  >&lt;p&gt;Thanks for digging through the old code, Myrna. I think I understand now.&lt;/p&gt;

&lt;p&gt;Our documentation says that system properties take precedence over database properties. This code is in place to ensure that setting a database property does not override the value in the system property. Currently, only the lock manager properties and the derby.database.classpath property have implemented a PropertySetCallback.apply() method, so that&apos;s probably what the &quot;Lock manager properties&quot; commit message referred to. If the call to apply() had not been skipped, setting the lock timeout as a database property would have overridden the lock timeout that was already set as a system property.&lt;/p&gt;

&lt;p&gt;It&apos;s not the call to PropertySetCallback.apply() that causes problems for us, but rather the call to PropertySetCallback.map(). The comment in the code only mentions that apply() shouldn&apos;t be called. No mentioning of map():&lt;/p&gt;

&lt;p&gt;					// if this property should not be used then&lt;br/&gt;
					// don&apos;t call apply.&lt;/p&gt;

&lt;p&gt;I believe calling map(), also in the case where we don&apos;t call apply(), would be the right thing to do. Since we&apos;re storing the property in the database (although not actually using the value until the database is rebooted without the system property set), we must store the correct value. And to store the correct value, we need to perform the mapping.&lt;/p&gt;

&lt;p&gt;Since AuthenticationServiceBase is the only class that implements a map() method that&apos;s not a no-op, making that change should only affect the password properties, so it sounds like a limited and relatively safe change to make.&lt;/p&gt;</comment>
                            <comment id="13171021" author="knutanders" created="Fri, 16 Dec 2011 15:23:20 +0000"  >&lt;p&gt;Here&apos;s a patch that makes PropertyValidation.doValidateApplyAndMap() do the mapping also if the property already exists as a system property. It still does not call apply() in those cases.&lt;/p&gt;

&lt;p&gt;The patch includes a test case that verifies that the password is not stored in plaintext in the database. The test case fails without the fix. I&apos;ve also verified that Rick&apos;s repro script passes with the fix.&lt;/p&gt;

&lt;p&gt;Running regression tests.&lt;/p&gt;</comment>
                            <comment id="13172188" author="knutanders" created="Mon, 19 Dec 2011 11:04:05 +0000"  >&lt;p&gt;All the regression tests passed.&lt;br/&gt;
Committed revision 1220685.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12384511">DERBY-3272</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12507703" name="d5507-1a.diff" size="3393" author="knutanders" created="Fri, 16 Dec 2011 15:23:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10361"><![CDATA[Security]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Nov 2011 12:57:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>217731</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0edb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>