<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2224/DERBY-2224.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2224] Test harness should support J2ME 1.1</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2224</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I would like to enable the &apos;old&apos; test harness to support the new version of IBM&apos;s j2ME implementation, which is based on j2ME jdk spec version 1.1. This is available with a product named Websphere Everyplace Micro Edition 6.1. from IBM.&lt;/p&gt;

&lt;p&gt;We already support j9_foundation, which matches to j2ME jdk spec 1.0. I&apos;d like to add j9_foundation11, which then matches to j2ME jdk spec 1.1.&lt;/p&gt;

&lt;p&gt;I&apos;m proposing to switch my automated tests over to the newer version going forward, and to minimize complexity of the change, I&apos;d like to make the canons reflect behavior of the new version. The differences are minimal. However, I want to be able to still run with the old (except where the results differ, failures would occur with the old version).&lt;/p&gt;

&lt;p&gt;One of the reasons for moving to the new version is that there is a bug with the older version in regards to security manager, preventing a smooth run of the junit tests, and I&apos;d like to run all short-running tests (suites.All and derbyall) with at least one of the versions. Another reason is that the j2ME spec 1.0 is really old.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12360105">DERBY-2224</key>
            <summary>Test harness should support J2ME 1.1</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Jan 2007 17:28:13 +0000</created>
                <updated>Wed, 1 Jul 2009 00:55:07 +0100</updated>
                            <resolved>Fri, 19 Jan 2007 01:36:51 +0000</resolved>
                                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12463468" author="myrna" created="Wed, 10 Jan 2007 05:58:12 +0000"  >&lt;p&gt;I added patches for trunk for the harness and a few tests.  It appears that this version of the j9 jvm includes a java.math.BigDecimal, but the jdbc support has not been upgraded to include methods like ResultSet.getBigDecimal and the like, which results in a few test failures, and for which I had to modify the util/BigDecimalHandler.java. &lt;br/&gt;
I&apos;m checking into whether or not this is intentional, but in the mean time, I think the patches can stand as they are.&lt;br/&gt;
I&apos;ll leave this for review for a day, and plan to commit on Thursday.&lt;/p&gt;</comment>
                            <comment id="12463595" author="djd" created="Wed, 10 Jan 2007 15:31:38 +0000"  >&lt;p&gt;Can you explain the changes in parameterMapping that seem to indicate that ResultSet.getBigDecimal was successfully called, when in fact no such method exists in JSR169. Here&apos;s one example.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;setNull with batching support(SMALLINT) IC&lt;br/&gt;
+  setNull with batching support(SMALLINT) getBigDecimal=null was null true&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are also interesting changes in grantRevokeDDL.out, e.g. this statement succeeds when it failed with the previous version of j9.&lt;/p&gt;

&lt;p&gt; ij(MAMTA3)&amp;gt; &amp;#8211; following will pass because all the required privileges are in place for mamta3&lt;br/&gt;
 create trigger tr31t31 after insert on t31TriggerTest for each statement&lt;br/&gt;
         insert into mamta1.t13TriggerTest values (values mamta1.selectFromSpecificSchema(1));&lt;br/&gt;
-ERROR: Failed with SQLSTATE XJ001&lt;br/&gt;
+0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;I don&apos;t understand the change in parameterMapping.java, I would have thought only the way the test determines if BigDecimal is fully supported (in the VM and the JDBC api) would change, but instead there are extra if conditions in the running of the test. Should this test use the utility method you modified in util/BigDecimalHandler.java?&lt;/p&gt;

&lt;p&gt;Any idea why we need a j9 foundation specific master file for I18NImportExport.out?&lt;/p&gt;</comment>
                            <comment id="12463641" author="myrna" created="Wed, 10 Jan 2007 17:39:39 +0000"  >&lt;p&gt;Thx for the review!&lt;/p&gt;

&lt;p&gt;re I18NImportExport.sql - the .tmp file shows why there is different behavior:&lt;br/&gt;
....&lt;br/&gt;
ij&amp;gt; LOCALIZEDDISPLAY ON;&lt;br/&gt;
ij&amp;gt; select * from tab1;&lt;br/&gt;
C1     |C2                |C3                  &lt;br/&gt;
-----------------------------------------------&lt;br/&gt;
JAVA ERROR: java.lang.NoSuchMethodError: java/sql/ResultSet.getBigDecimal(II)Ljava/math/BigDecimal;&lt;br/&gt;
...&lt;br/&gt;
(twice).&lt;/p&gt;

&lt;p&gt;re parameterMapping.java - the test does use the BigDecimalHandler utility already, however, it ran into this:&lt;br/&gt;
---------&lt;br/&gt;
....&lt;br/&gt;
For setXXX() methods that pass an object, a null and valid values are checked&lt;br/&gt;
  setByte() getBigDecimal=98.00000 was null false JDBC MATCH(OK)&lt;br/&gt;
  setByte() as batch java.lang.NoSuchMethodError: java/sql/PreparedStatement.setBigDecimal(ILjava/math/BigDecimal;)V&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLDecimal.setInto(SQLDecimal.java:600)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeBatchElement(EmbedPreparedStatement.java:1007)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(EmbedStatement.java:924)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.parameterMapping.setXXX(parameterMapping.java:1197)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.parameterMapping.main(parameterMapping.java:459)&lt;br/&gt;
-------------&lt;br/&gt;
So, the engine code calls some set/getBigDecimal methods.&lt;/p&gt;

&lt;p&gt;re grantRevokeDDL.sql:&lt;br/&gt;
A while ago I created the original master-canon for j9_foundation because of the failure, because (as was pointed out to me) triggers are not supported with CDC/JSR169/j2ME, according to the documentation. I concluded at the time (based on stack traces and watching the debugger) that this was because the engine code for triggers uses a BigDecimal call (somewhere. If you want details, I can backtrack, but it would take some time). Now that there is a java.math.BigDecimal, apparently, that piece of code passes; and so it fails a little further in the test.&lt;/p&gt;

&lt;p&gt;In short, I was trying to get the tests to run cleanly even though there is really a bit of an engine issue here.&lt;/p&gt;</comment>
                            <comment id="12463743" author="djd" created="Wed, 10 Jan 2007 22:47:54 +0000"  >&lt;p&gt;I think these are symtoms of the fact that Foundation 1.1 introduces BigDecimal but the Derby code is not set up to handle it correctly with JSR 169.&lt;br/&gt;
Derby&apos;s JSR 169 support  (which does not have the set/getBigDecimal methods) was written against Foundation 1.0 which does not have BigDecimal and thus makes that assumption. So a combination of JSR169 and BigDecimal was not anticipated. I&apos;ll add some notes to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2210&quot; title=&quot;Change the base J2ME level to CDC/Foundation 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2210&quot;&gt;&lt;del&gt;DERBY-2210&lt;/del&gt;&lt;/a&gt; and enter a new bug.&lt;/p&gt;</comment>
                            <comment id="12465022" author="djd" created="Tue, 16 Jan 2007 01:00:17 +0000"  >&lt;p&gt;Might be best to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2228&quot; title=&quot;Support Derby on J2ME/CDC/Foundation 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2228&quot;&gt;&lt;del&gt;DERBY-2228&lt;/del&gt;&lt;/a&gt; before changing the harness to avoid checking in a number of potentially bad canons. I&apos;m looking for a JUnit test that exhibits the problem for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2228&quot; title=&quot;Support Derby on J2ME/CDC/Foundation 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2228&quot;&gt;&lt;del&gt;DERBY-2228&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12465281" author="myrna" created="Tue, 16 Jan 2007 20:20:02 +0000"  >&lt;p&gt;committed the test harness changes (not the canons/test changes) with &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=496847&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=496847&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12465328" author="myrna" created="Tue, 16 Jan 2007 23:44:25 +0000"  >&lt;p&gt;after the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2228&quot; title=&quot;Support Derby on J2ME/CDC/Foundation 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2228&quot;&gt;&lt;del&gt;DERBY-2228&lt;/del&gt;&lt;/a&gt;, parameterMapping no longer needs any changes. Also, floattypes needs only 1 minor change. &lt;/p&gt;

&lt;p&gt;re grantRevokeDDL - the stack trace showing the call java.math.BigDecimal with wctme5.7(foundation) is documented in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt;. &lt;br/&gt;
With weme6.1 we get a little further; the create trigger statement actually succeeds, but the insert fails:&lt;br/&gt;
--------&lt;br/&gt;
insert into t31TriggerTest values(1);&lt;br/&gt;
ERROR 38000: The exception &apos;java.lang.NoClassDefFoundError: java.sql.DriverManager&apos; was thrown while evaluating an expression.&lt;br/&gt;
ERROR XJ001: Java exception: &apos;java.sql.DriverManager: java.lang.NoClassDefFoundError&apos;.&lt;br/&gt;
--------&lt;br/&gt;
derby.log shows:&lt;br/&gt;
--------&lt;br/&gt;
ERROR 38000: The exception &apos;java.lang.NoClassDefFoundError: java.sql.DriverManager&apos; was thrown while evaluating an expression.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:309)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.unexpectedUserException(StandardException.java:558)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:164)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCore(RowResultSet.java:151)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.OnceResultSet.getNextRowCore(OnceResultSet.java:177)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.g0(Unknown Source)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericActivationHolder.execute(GenericActivationHolder.java:327)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:356)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1120)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:358)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1182)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:585)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:517)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:321)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:517)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:370)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:268)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:204)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:170)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:72)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:67)&lt;br/&gt;
============= begin nested exception, level (1) ===========&lt;br/&gt;
java.lang.NoClassDefFoundError: java.sql.DriverManager&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.ProcedureTest.selectFromSpecificSchema(ProcedureTest.java:120)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.g2(Unknown Source)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.e1(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.reflect.DirectCall.invoke(ReflectGeneratedClass.java:141)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowResultSet.getNextRowCore(RowResultSet.java:151)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.OnceResultSet.getNextRowCore(OnceResultSet.java:177)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.g0(Unknown Source)&lt;br/&gt;
	at org.apache.derby.exe.ac2edd81ddx0110x2ca3x8055x0000576376c01d.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericActivationHolder.execute(GenericActivationHolder.java:327)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:356)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(GenericTriggerExecutor.java:173)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.StatementTriggerExecutor.fireTrigger(StatementTriggerExecutor.java:80)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent(TriggerEventActivator.java:278)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1120)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:358)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1182)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:585)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:517)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:321)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:517)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:370)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:268)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:204)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:170)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:72)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:67)&lt;br/&gt;
============= end nested exception, level (1) ===========&lt;/p&gt;

&lt;p&gt;I will accept the differences in these 3 tests, as well as timestampArith (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2225&quot; title=&quot;error with weme 6.1. in test timestampArith.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2225&quot;&gt;&lt;del&gt;DERBY-2225&lt;/del&gt;&lt;/a&gt;), and make a new patch, but I&apos;m still checking to see if I can figure out what&apos;s wrong with I18NImportExport.java.&lt;/p&gt;
</comment>
                            <comment id="12465331" author="myrna" created="Wed, 17 Jan 2007 00:18:39 +0000"  >&lt;p&gt;re I18NImportExport.java: the stack trace with weme6.1 is like so:&lt;br/&gt;
---------------&lt;br/&gt;
JAVA ERROR: java.lang.NoSuchMethodError: java/sql/ResultSet.getBigDecimal(II)Ljava/math/BigDecimal;&lt;br/&gt;
java.lang.NoSuchMethodError: java/sql/ResultSet.getBigDecimal(II)Ljava/math/BigDecimal;&lt;br/&gt;
	at org.apache.derby.iapi.tools.i18n.LocalizedResource.getLocalizedString(LocalizedResource.java:335)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.DisplayRow(JDBCDisplayUtil.java:627)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:338)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.indent_DisplayResults(JDBCDisplayUtil.java:239)&lt;br/&gt;
	at org.apache.derby.tools.JDBCDisplayUtil.DisplayResults(JDBCDisplayUtil.java:227)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:457)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:520)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:373)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:268)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:204)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:170)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:72)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:67)&lt;br/&gt;
--------------&lt;/p&gt;</comment>
                            <comment id="12465336" author="myrna" created="Wed, 17 Jan 2007 01:16:08 +0000"  >&lt;p&gt;added a patch that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;modifies org.apache.derby,iapi.tools.i18n.LocalizedResource to check for the ability to call ResultSet.getBigDecimal&lt;/li&gt;
	&lt;li&gt;updates master-canons with output with weme 6.1 for the following tests:&lt;/li&gt;
	&lt;li&gt;lang/grantRevokeDDL.sql&lt;/li&gt;
	&lt;li&gt;lang/floattypes.sql&lt;/li&gt;
	&lt;li&gt;lang/timestampArith.sql&lt;/li&gt;
	&lt;li&gt;changes the method org.apache.derby.tools.functionTests.util.BigDecimalHandler to check for ability to call ResultSet.getBigDecimal.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If there are no further comments, I&apos;d like to commit this...&lt;/p&gt;</comment>
                            <comment id="12465880" author="djd" created="Thu, 18 Jan 2007 21:46:16 +0000"  >&lt;p&gt;I think the changes to LocalizedResource and BigDecimalHandler could use some comments indicating why the check is needed and why it&apos;s done that way. The class comment in BigDecimalHandler could be updated to reflect the new check. And with the check in BigDecimalHandler I don&apos;t think you can get a ClassNotFOundError anymore.&lt;/p&gt;

&lt;p&gt;Also I never knew one could use the .class construct on primitives, such as &apos;int.class&apos;, I&apos;d always used Integer.TYPE. Useful to know, thanks!&lt;/p&gt;</comment>
                            <comment id="12465887" author="myrna" created="Thu, 18 Jan 2007 22:13:59 +0000"  >&lt;p&gt;I added some comments in those two classes, I hope it makes things clearer?&lt;/p&gt;</comment>
                            <comment id="12465935" author="myrna" created="Fri, 19 Jan 2007 01:36:50 +0000"  >&lt;p&gt;committed change 497678, see: &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=497678&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=497678&lt;/a&gt; &lt;br/&gt;
commit comment: &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2224&quot; title=&quot;Test harness should support J2ME 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2224&quot;&gt;&lt;del&gt;DERBY-2224&lt;/del&gt;&lt;/a&gt; - update j9_foundation master/canons to weme 6.1 (J2ME 1.1) results&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;this change includes a change to ij because java.math.BigDecimal&lt;br/&gt;
  is now available, but JSR169 does not support methods like&lt;br/&gt;
  ResultSet.getBigDecimal(...).&lt;/li&gt;
	&lt;li&gt;this change also accepts incorrect behavior in timestampArith.java, which is&lt;br/&gt;
  covered in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2225&quot; title=&quot;error with weme 6.1. in test timestampArith.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2225&quot;&gt;&lt;del&gt;DERBY-2225&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12467171" author="myrna" created="Wed, 24 Jan 2007 22:11:18 +0000"  >&lt;p&gt;Modified the java/testing/README.htm to reflect use of 6.1.1 instead of wctme5.7 with revision 499590.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12360236">DERBY-2228</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12349051" name="DERBY-2224_tests_20070116.diff" size="24489" author="myrna" created="Wed, 17 Jan 2007 01:09:13 +0000"/>
                            <attachment id="12349050" name="DERBY-2224_tests_20070116.stat" size="613" author="myrna" created="Wed, 17 Jan 2007 01:09:13 +0000"/>
                            <attachment id="12349213" name="DERBY-2224_tests_20070118.diff" size="25516" author="myrna" created="Thu, 18 Jan 2007 22:11:05 +0000"/>
                            <attachment id="12348597" name="DERBY_2224_harness.diff" size="10552" author="myrna" created="Tue, 9 Jan 2007 23:04:32 +0000"/>
                            <attachment id="12348621" name="DERBY_2224_tests.diff" size="37736" author="myrna" created="Wed, 10 Jan 2007 05:52:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 10 Jan 2007 15:31:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30331</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38657</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>