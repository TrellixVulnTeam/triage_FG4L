<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1576/DERBY-1576.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1576] Extend the CASE expression syntax for &quot;simple case&quot;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1576</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The ISO/IEC 9075-2:1999 SQL standard describes two kinds of CASE expressions: &quot;simple case&quot; and &quot;searched case&quot;.&lt;br/&gt;
The current Derby version supports &quot;searched case&quot; but not &quot;simple case&quot;.&lt;/p&gt;

&lt;p&gt;The syntax for &quot;simple case&quot; is:&lt;/p&gt;

&lt;p&gt;   CASE Expression&lt;br/&gt;
      WHEN Expression THEN Expression&lt;br/&gt;
    [ WHEN Expression THEN Expression ]&lt;br/&gt;
      ...&lt;br/&gt;
      ELSE ElseExpression&lt;br/&gt;
   END&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;   VALUES&lt;br/&gt;
      CASE 4&lt;br/&gt;
         WHEN 1 THEN &apos;one&apos;&lt;br/&gt;
         WHEN 2 THEN &apos;two&apos;&lt;br/&gt;
         WHEN 3 THEN &apos;three&apos;&lt;br/&gt;
         ELSE &apos;many&apos;&lt;br/&gt;
      END&lt;/p&gt;</description>
                <environment></environment>
        <key id="12346504">DERBY-1576</key>
            <summary>Extend the CASE expression syntax for &quot;simple case&quot;</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="chdh@inventec.ch">Christian d&apos;Heureuse</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Sun, 23 Jul 2006 14:02:49 +0100</created>
                <updated>Mon, 2 Jun 2014 08:59:15 +0100</updated>
                            <resolved>Mon, 2 Jun 2014 08:59:15 +0100</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13985333" author="lukas.eder" created="Wed, 30 Apr 2014 10:48:02 +0100"  >&lt;p&gt;Hmm, apart from MS Access (which doesn&apos;t have a CASE expression at all), Derby is the only database among the 16 databases supported by &lt;a href=&quot;http://www.jooq.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jooq.org&lt;/a&gt;, which doesn&apos;t support this syntax.&lt;/p&gt;

&lt;p&gt;Is there any particular reason why this was omitted so far? I suspect that a canonical implementation would be merely syntactic sugar, implemented in the parser...&lt;/p&gt;</comment>
                            <comment id="13985417" author="knutanders" created="Wed, 30 Apr 2014 13:30:07 +0100"  >&lt;p&gt;I don&apos;t think there&apos;s any technical reason why this hasn&apos;t been done, just that no one has felt strongly enough about it to actually do the work yet. You may be right that simple case can be implemented mostly in the parser. The simple case syntax in the SQL standard is somewhat more involved than what&apos;s in the issue description, though, and allows expressions such as:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  CASE &apos;test&apos;
     WHEN IS NULL THEN 0
     WHEN BETWEEN(&apos;abc&apos;, &apos;def&apos;), LIKE &apos;x%&apos;, &apos;zzz&apos; THEN 1
     ELSE 2
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13985423" author="lukas.eder" created="Wed, 30 Apr 2014 13:44:24 +0100"  >&lt;p&gt;Very nice, I wasn&apos;t aware of this interpretation of the SQL standard&apos;s &amp;lt;when operand&amp;gt;, thanks for pointing that out. This appears to have been added in SQL:2003, only - so this issue could be split into two:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Implementing the SQL-1999 simple CASE expression&lt;/li&gt;
	&lt;li&gt;Implementing the SQL-2003 simple CASE expression extensions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I had given this some more thought. I suspect that the simple CASE expression is actually not equivalent to the searched CASE expression. Consider something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-- Assuming random() or some other non-deterministic function exists
CASE random(0, 2)
    WHEN 0 THEN &apos;a&apos;
    WHEN 1 THEN &apos;b&apos;
    WHEN 2 THEN &apos;c&apos;
END
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above wouldn&apos;t be equivalent to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
CASE
    WHEN random(0, 2) = 0 THEN &apos;a&apos;
    WHEN random(0, 2) = 1 THEN &apos;b&apos;
    WHEN random(0, 2) = 2 THEN &apos;c&apos;
END
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the other hand, the standard says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;6.12 &amp;lt;case expression&amp;gt;&lt;br/&gt;
  2) If a &amp;lt;case specification&amp;gt; specifies a &amp;lt;simple case&amp;gt;, then let CO be the &amp;lt;case operand&amp;gt;.&lt;br/&gt;
    a) CO shall not generally contain a &amp;lt;routine invocation&amp;gt; whose subject routine is an SQL-invoked routine that is possibly non-deterministic or that possibly modifies SQL-data.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;... so calling random() would be illegal anyway&lt;/p&gt;</comment>
                            <comment id="13987585" author="knutanders" created="Fri, 2 May 2014 11:56:18 +0100"  >&lt;p&gt;The attached patch simple-simple.diff appears to make the simplest of the simple case expressions work. I had expected problems when grafting a single ValueNode (the case operand) into the tree multiple times, as that would mean bind and code generation would run multiple times on that node. I didn&apos;t think that was supported, but I may be wrong. Nothing seemed to pop up in the test cases I&apos;ve run so far, at least.&lt;/p&gt;

&lt;p&gt;The current patch does not support the more advanced features of simple case expressions, such as multiple values in a single WHEN clause, or use of BETWEEN/LIKE operators. Neither does it prevent the use of non-deterministic functions (such as RANDOM) in the WHEN operand, and the WHEN operand is evaluated multiple times.&lt;/p&gt;

&lt;p&gt;But here goes:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.11
ij&amp;gt; CONNECT &apos;jdbc:derby:memory:db;create=true&apos;;
ij&amp;gt; SELECT
    CASE i
        WHEN 1 THEN &apos;one&apos;
        WHEN 2 THEN &apos;two&apos;
        WHEN 3 THEN &apos;three&apos;
        ELSE &apos;many&apos;
    END
    FROM (VALUES 1, 2, 3, 4) v(i);
1    
-----
one  
two  
three
many 

4 rows selected
ij&amp;gt; SELECT
    CASE COUNT(i)
        WHEN 1 THEN &apos;one&apos;
        WHEN 2 THEN &apos;two&apos;
        WHEN 3 THEN &apos;three&apos;
        ELSE &apos;many&apos;
    END
    FROM (VALUES 1, 2, 3, 4) v(i);
1    
-----
many 

1 row selected
ij&amp;gt; SELECT
    CASE INT(RANDOM() * 3)
        WHEN 0 THEN &apos;a&apos;
        WHEN 1 THEN &apos;b&apos;
        WHEN 2 THEN &apos;c&apos;
        ELSE &apos;Now, that&apos;&apos;s very odd!&apos;
    END
    FROM SYS.SYSSCHEMAS;
1                    
---------------------
Now, that&apos;s very odd!
Now, that&apos;s very odd!
Now, that&apos;s very odd!
Now, that&apos;s very odd!
a                    
c                    
c                    
b                    
c                    
Now, that&apos;s very odd!
b                    

11 rows selected
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13991695" author="knutanders" created="Wed, 7 May 2014 10:37:54 +0100"  >&lt;p&gt;It might be better to make the simple case the primary implementation, so that it can have bind and code generation logic that prevents the when operand from being evaluated multiple times. We could still have a shared implementation between the simple case and the searched case by having the parser transform&lt;/p&gt;

&lt;p&gt;  CASE WHEN a THEN b WHEN c THEN d ELSE e&lt;/p&gt;

&lt;p&gt;into&lt;/p&gt;

&lt;p&gt;  CASE TRUE WHEN a THEN b WHEN c THEN d ELSE e&lt;/p&gt;

&lt;p&gt;That would be a simpler rewrite than the other way around.&lt;/p&gt;</comment>
                            <comment id="13992572" author="knutanders" created="Thu, 8 May 2014 08:14:29 +0100"  >&lt;p&gt;There is also a difference between the simple case syntax in SQL:2003 and SQL:2011. In the SQL:2003 standard, a &amp;lt;simple when clause&amp;gt; can only have one &amp;lt;when operand&amp;gt;, whereas SQL:2011 allows the &amp;lt;simple when clause&amp;gt; to contain a &amp;lt;when operand list&amp;gt;. The example I gave in my 30/Apr/14 comment, used the 2011 syntax.&lt;/p&gt;

&lt;p&gt;I agree that it would be fine to only implement the SQL:1999 syntax in this issue, as that would be a useful improvement on its own, and that&apos;s the version of the standard specified in the original request.&lt;/p&gt;</comment>
                            <comment id="13998798" author="knutanders" created="Thu, 15 May 2014 15:16:12 +0100"  >&lt;p&gt;The attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12645017/12645017_d1576-1a.diff&quot; title=&quot;d1576-1a.diff attached to DERBY-1576&quot;&gt;d1576-1a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; implements simple case, including the SQL:2003 extension F262 Extended CASE expression, and the SQL:2011 extension F263 Comma-separated predicates in simple CASE expression. It adds some bind logic to disallow non-deterministic function calls in the CASE operand to prevent the previously discussed problem with the RANDOM function. It also adds a test case.&lt;/p&gt;

&lt;p&gt;More testing and polishing will be needed, though. For example, I just discovered that the compile-time type checking of parameterized expressions is too loose, so that some type mismatches aren&apos;t discovered until execution time. But I think it is ready for a first check-in.&lt;/p&gt;

&lt;p&gt;Here&apos;s a description of what the patch does:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CompilerContext&lt;/b&gt;: Add a bit mask that describes what&apos;s not allowed in a case operand.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ConditionalNode&lt;/b&gt;: Add bind logic that disallows non-deterministic functions, and routines that possibly modify data, in the case operand. (The latter restriction is currently redundant, since Derby only allows procedures to modify data, and the only routines that can be called from the case operand, are functions.)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;QueryTreeNode&lt;/b&gt;: Fix throwReliabilityException() so that it throws an exception with a relevant error message if the case operand contains illegal calls. Without this fix, the error message would say the problem was with a CHECK CONSTRAINT.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;sqlgrammar.jj&lt;/b&gt;: Add the new syntax for simple case by rewriting simple case expressions to searched case expressions. Reorganize the syntax rule for search conditions so that IS [ NOT ] NULL is handled the same way as other predicates, which allows IS [ NOT ] NULL to be used as a when operand with no special handling.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;messages.xml&lt;/b&gt;, &lt;b&gt;SQLState.java&lt;/b&gt;: Add the new error message for illegal calls in case operands. (The error message is quite generic, since it&apos;s difficult to determine reliably if it actually is a case operand that causes the problem, at the place where the exception is thrown.)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CaseExpressionTest&lt;/b&gt;: Add tests for the new syntax.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13999869" author="dagw" created="Fri, 16 May 2014 16:03:12 +0100"  >&lt;p&gt;Thanks, Knut! Nice cleanup and improvement; +1&lt;/p&gt;</comment>
                            <comment id="14001486" author="jira-bot" created="Mon, 19 May 2014 09:23:13 +0100"  >&lt;p&gt;Commit 1595778 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1595778&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1595778&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Extend the CASE expression syntax for &quot;simple case&quot;&lt;/p&gt;

&lt;p&gt;Implement simple case as described by the SQL:1999 standard, including the&lt;br/&gt;
SQL:2003 extension F262 &quot;Extended CASE expression&quot;, and the SQL:2011&lt;br/&gt;
extension F263 &quot;Comma-separated predicates in simple CASE expression&quot;.&lt;/p&gt;</comment>
                            <comment id="14001492" author="knutanders" created="Mon, 19 May 2014 09:32:36 +0100"  >&lt;p&gt;Thanks, Dag. I&apos;ve committed the 1a patch as a first increment.&lt;/p&gt;</comment>
                            <comment id="14001516" author="chdh@inventec.ch" created="Mon, 19 May 2014 10:09:25 +0100"  >&lt;p&gt;Thanks, Knut. It has been 8 years since I created this Jira issue, but now we have got more than I asked for... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14001692" author="knutanders" created="Mon, 19 May 2014 14:47:22 +0100"  >&lt;p&gt;I mentioned that there were problems with untyped parameters in the first patch. The problem is if the case operand is an untyped parameter. The current type inference code isn&apos;t prepared for a rewrite of the kind that happens here, where the untyped parameter ends up multiple places in the AST.&lt;/p&gt;

&lt;p&gt;Take for example the expression &lt;tt&gt;CASE ? WHEN 1.1 THEN 1 WHEN 2 THEN 2 END&lt;/tt&gt;. It gets rewritten to &lt;tt&gt;CASE WHEN (?=1.1) THEN 1 WHEN (?=2) THEN 2 END&lt;/tt&gt;. Type inference will be performed twice on the parameter. First as part of the expression (?=1.1), which suggests that it should be a double. Later, it&apos;s performed on (?=2), which suggests that it should be an integer. With the current type inference, the type found in the latter overwrites the type found in the former, so the type of the parameter ends up as integer. This means that the parameter value will always be converted to an integer, and it will never match the first WHEN clause.&lt;/p&gt;

&lt;p&gt;Other examples: &lt;tt&gt;case ? when 1 then true when like &apos;&apos;abc&apos;&apos; then false end&lt;/tt&gt; won&apos;t detect the type mismatch (number vs string) at compile time, and may or may not fail at execution depending on the actual value passed in. &lt;tt&gt;case ? when like &apos;&apos;abc&apos;&apos; then false when 1 then true end&lt;/tt&gt; falls over with an assert failure at compile time in debug builds (and probably an AbstractMethodError at execution time in production builds).&lt;/p&gt;

&lt;p&gt;The type inference can probably be improved to do the right thing in these expressions too, but for now I&apos;ll just forbid untyped parameters in the case operand to prevent running into these other problems. Patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12645559/12645559_d1576-2a.diff&quot; title=&quot;d1576-2a.diff attached to DERBY-1576&quot;&gt;d1576-2a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; adds that restriction. All regression tests passed with the patch.&lt;/p&gt;

&lt;p&gt;Note that it doesn&apos;t forbid parameters altogether in the case operand, only untyped ones. You can still do &lt;tt&gt;CASE CAST(? AS DOUBLE) WHEN 1.1 THEN 1 WHEN 2 THEN 2 END&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="14004422" author="jira-bot" created="Wed, 21 May 2014 07:51:41 +0100"  >&lt;p&gt;Commit 1596492 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1596492&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1596492&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Extend the CASE expression syntax for &quot;simple case&quot;&lt;/p&gt;

&lt;p&gt;Forbid untyped parameters in the case operand.&lt;/p&gt;</comment>
                            <comment id="14007124" author="jira-bot" created="Fri, 23 May 2014 13:51:35 +0100"  >&lt;p&gt;Commit 1597082 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1597082&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1597082&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Extend the CASE expression syntax for &quot;simple case&quot;&lt;/p&gt;

&lt;p&gt;Add test cases for subqueries.&lt;/p&gt;</comment>
                            <comment id="14008861" author="knutanders" created="Mon, 26 May 2014 15:05:45 +0100"  >&lt;p&gt;I think it would be good if the case operand of a simple case expression is evaluated only once per evaluation of a case expression.&lt;/p&gt;

&lt;p&gt;One reason is performance. It is a waste of time to re-evaluate the operand for every when clause, especially if the operand calls an expensive function or contains a sub-query.&lt;/p&gt;

&lt;p&gt;Another reason is to make the results more reliable. As mentioned in earlier comments, the results could be unreliable if the case operand calls a non-deterministic function such as RANDOM. That specific case has been explicitly forbidden, but I think there could be other cases where there&apos;s a possibility for getting different results when re-evaluating the expression. Especially if it contains a sub-query. For example, the optimizer might choose different execution plans for two occurrences of the same sub-query. Also, with transaction isolation levels lower than serializable, the result of the sub-query might change because of activity in other transactions.&lt;/p&gt;

&lt;p&gt;The attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12646796/12646796_d1576-3a.diff&quot; title=&quot;d1576-3a.diff attached to DERBY-1576&quot;&gt;d1576-3a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; makes the case expression cache the result of the case operand when the first when clause is evaluated, and reuse that value in the other when clauses. It uses the CachedValueNode class from the 1a patch attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6569&quot; title=&quot;NULLIF may return incorrect results if first operand calls non-deterministic function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6569&quot;&gt;&lt;del&gt;DERBY-6569&lt;/del&gt;&lt;/a&gt; with two improvements: (1) It adds a categorize() method that was found to be missing during the testing of the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6569&quot; title=&quot;NULLIF may return incorrect results if first operand calls non-deterministic function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6569&quot;&gt;&lt;del&gt;DERBY-6569&lt;/del&gt;&lt;/a&gt;. (2) It adds code for forgetting the cached value after the case expression has been evaluated, so that it doesn&apos;t stay in memory unnecessarily long.&lt;/p&gt;

&lt;p&gt;The patch also adds some more test cases to verify that the case operand is evaluated only once, and that it works with large objects.&lt;/p&gt;

&lt;p&gt;All regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="14011029" author="jira-bot" created="Wed, 28 May 2014 12:35:27 +0100"  >&lt;p&gt;Commit 1597979 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1597979&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1597979&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Extend the CASE expression syntax for &quot;simple case&quot;&lt;/p&gt;

&lt;p&gt;Cache the case operand so that it is only evaluated once per&lt;br/&gt;
evaluation of the CASE expression.&lt;/p&gt;</comment>
                            <comment id="14011068" author="knutanders" created="Wed, 28 May 2014 14:06:50 +0100"  >&lt;p&gt;The attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12647127/12647127_d1576-4a.diff&quot; title=&quot;d1576-4a.diff attached to DERBY-1576&quot;&gt;d1576-4a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; lifts the restriction that the case operand cannot be an untyped parameter.&lt;/p&gt;

&lt;p&gt;The original problem was that the case operand would forget its previously inferred type each time it was rebound, so that its final type would be the type of the last when operand, rather than the union of all the when operand types.&lt;/p&gt;

&lt;p&gt;The patch solves this by rewriting the query tree at the beginning of the bind phase so that all occurrences of the case operand are replaced with dummy parameter nodes, one dummy node per when clause in the case expression. This way, when the when clauses are bound, each dummy parameter node is bound once, so we avoid the problem with the previous type being forgotten when the node is rebound.&lt;/p&gt;

&lt;p&gt;At the end of the bind phase, we can go through the list of dummy nodes, find the dominant type of those nodes, set the type of the case operand to that type, and finally reinsert the case operand into the query tree.&lt;/p&gt;

&lt;p&gt;The patch touches these files:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;impl/sql/compile/ConditionalNode.java&lt;/b&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;bindCaseOperand: Temporarily replace the case operand with dummy parameter nodes.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;bindExpression: After binding the test conditions, check the types that the dummy parameter nodes were bound to. If they are not compatible, raise an error. If they are compatible, set the type of the case operand to the dominant type, and reinsert it into the tree.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;impl/sql/compile/ReplaceNodeVisitor.java&lt;/b&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;New visitor implementation that replaces a node with some other node. Used for reinserting the case operand into the tree.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;impl/sql/compile/ValueNodeList.java&lt;/b&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getDominantTypeServices: Improve the method so that it works with lists that consists entirely of nodes that require type from context, as long as they already have been bound to a type.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;loc/messages.xml&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;shared/common/reference/SQLState.java&lt;/b&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove the error message that used to be raised if the case operand was an untyped parameter.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;tests/lang/CaseExpressionTest.java&lt;/b&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add tests that use untyped parameters in the case operand.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14013372" author="jira-bot" created="Fri, 30 May 2014 08:13:24 +0100"  >&lt;p&gt;Commit 1598472 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1598472&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1598472&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Extend the CASE expression syntax for &quot;simple case&quot;&lt;/p&gt;

&lt;p&gt;Allow untyped parameters in the case operand.&lt;/p&gt;</comment>
                            <comment id="14013470" author="jira-bot" created="Fri, 30 May 2014 10:48:07 +0100"  >&lt;p&gt;Commit 1598529 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1598529&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1598529&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1576&quot; title=&quot;Extend the CASE expression syntax for &amp;quot;simple case&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1576&quot;&gt;&lt;del&gt;DERBY-1576&lt;/del&gt;&lt;/a&gt;: Fix javadoc warning&lt;/p&gt;</comment>
                            <comment id="14015238" author="knutanders" created="Mon, 2 Jun 2014 08:59:15 +0100"  >&lt;p&gt;I believe the work on this issue is done. Resolving.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12716043">DERBY-6581</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12713291">DERBY-6569</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12645017" name="d1576-1a.diff" size="22217" author="knutanders" created="Thu, 15 May 2014 15:16:12 +0100"/>
                            <attachment id="12645559" name="d1576-2a.diff" size="7196" author="knutanders" created="Mon, 19 May 2014 14:47:22 +0100"/>
                            <attachment id="12646796" name="d1576-3a.diff" size="16943" author="knutanders" created="Mon, 26 May 2014 15:05:45 +0100"/>
                            <attachment id="12647127" name="d1576-4a.diff" size="23035" author="knutanders" created="Wed, 28 May 2014 14:06:50 +0100"/>
                            <attachment id="12643024" name="simple-simple.diff" size="2644" author="knutanders" created="Fri, 2 May 2014 11:56:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Apr 2014 09:48:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30063</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1567:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40488</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>