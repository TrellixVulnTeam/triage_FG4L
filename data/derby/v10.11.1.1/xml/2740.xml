<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:39:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2740/DERBY-2740.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2740] LIKE parameter marker combined with index multi-probing leads to ASSERT failure with sane jars, wrong results with insane jars.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2740</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In cases where the optimizer chooses to do index multi-probing for an IN list (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-47&quot; title=&quot;Some possible improvements to IN optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-47&quot;&gt;&lt;del&gt;DERBY-47&lt;/del&gt;&lt;/a&gt;), the presence of a LIKE condition whose argument is a parameter marker leads to an ASSERTion failure with sane jars.  With insane jars, the same query returns incorrect results (it only returns rows matching the first argument in the IN list).&lt;/p&gt;

&lt;p&gt;As an example, if we have the following DDL:&lt;/p&gt;

&lt;p&gt;  create table ct (i int, c1 char(25), c2 char(40));&lt;br/&gt;
  insert into ct&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values 1, 2, 3, 4, 5, 6, 7, 8, 9;&lt;br/&gt;
  insert into ct&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;&lt;br/&gt;
  insert into ct&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; select 7 * i from ct;&lt;br/&gt;
  insert into ct&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; select 13 * i from ct;&lt;br/&gt;
  update ct set c1 = cast(i as char(25));&lt;br/&gt;
  update ct set c2 = c1 || c1;&lt;/p&gt;

&lt;p&gt;  create index idx2 on ct (c1, c2);&lt;/p&gt;

&lt;p&gt;Then we see the following results:&lt;/p&gt;

&lt;p&gt;&amp;#8211; This one works.&lt;/p&gt;

&lt;p&gt;select i,c1,c2 from ct where c1 in (&apos;1&apos;,&apos;2&apos;) and c2 like &apos;%&apos; order by i;&lt;/p&gt;

&lt;p&gt;&amp;#8211; These all work, too.&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (&apos;&apos;2&apos;&apos;,&apos;&apos;1&apos;&apos;) and c2 like &apos;&apos;%&apos;&apos;&apos;;&lt;br/&gt;
execute p1;&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (?,?) and c2 like &apos;&apos;%&apos;&apos;&apos;;&lt;br/&gt;
execute p1 using &apos;values (&apos;&apos;1&apos;&apos;, &apos;&apos;2&apos;&apos;)&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; But these all fail.  Something about having a parameter in the LIKE is triggering the assertion...&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (?,?) and c2 like ? order by i&apos;;&lt;br/&gt;
execute p1 using &apos;values (&apos;&apos;1&apos;&apos;, &apos;&apos;2&apos;&apos;, &apos;&apos;%&apos;&apos;)&apos;;&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (?,?) and c2 like ?&apos;;&lt;br/&gt;
execute p1 using &apos;values (&apos;&apos;1&apos;&apos;, &apos;&apos;2&apos;&apos;, &apos;&apos;%&apos;&apos;)&apos;;&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (&apos;&apos;2&apos;&apos;,&apos;&apos;1&apos;&apos;) and c2 like ?&apos;;&lt;br/&gt;
execute p1 using &apos;values (&apos;&apos;%&apos;&apos;)&apos;;&lt;/p&gt;

&lt;p&gt;prepare p1 as &apos;select i,c1,c2 from ct where c1 in (&apos;&apos;2&apos;&apos;,?) and c2 like ?&apos;;&lt;br/&gt;
execute p1 using &apos;values (&apos;&apos;1&apos;&apos;, &apos;&apos;%&apos;&apos;)&apos;;&lt;/p&gt;

&lt;p&gt;The actual assertion is thrown because multiprobing expects the start and stop keys to be same value.  But something about the LIKE parameter violates that expectation:&lt;/p&gt;

&lt;p&gt;ERROR XJ001: Java exception: &apos;ASSERT FAILED All multi-probing result sets are expected to have a single key that is both the start key AND the stop key, but that is not the case.: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;This is a regression introduced by the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-47&quot; title=&quot;Some possible improvements to IN optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-47&quot;&gt;&lt;del&gt;DERBY-47&lt;/del&gt;&lt;/a&gt; changes; everything runs fine in 10.2 and earlier.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12370654">DERBY-2740</key>
            <summary>LIKE parameter marker combined with index multi-probing leads to ASSERT failure with sane jars, wrong results with insane jars.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jun 2007 00:17:00 +0100</created>
                <updated>Tue, 30 Jun 2009 16:55:55 +0100</updated>
                            <resolved>Mon, 4 Jun 2007 17:23:10 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12500524" author="army" created="Fri, 1 Jun 2007 00:27:43 +0100"  >&lt;p&gt;Bumping urgency, per Myrna&apos;s latest email re: 10.3.&lt;/p&gt;</comment>
                            <comment id="12500534" author="army" created="Fri, 1 Jun 2007 01:03:28 +0100"  >&lt;p&gt;Simpler query that also reproduces the problem:&lt;/p&gt;

&lt;p&gt;  select i,c1,c2 from ct where c1 in (&apos;1&apos;,&apos;2&apos;) and c2 &amp;gt;= &apos;_&apos; order by i;&lt;/p&gt;

&lt;p&gt;The trick is that there is a start/stop key on a column other than the column for the IN list &lt;b&gt;and&lt;/b&gt; the optimizer still chooses to do multi-probing.  This can only happen if the multi-probe predicate and the other start/stop key are w.r.t to different columns in the same index.  So if, for example, the index only included &quot;c1&quot;, the query would run as expected.&lt;/p&gt;</comment>
                            <comment id="12500879" author="army" created="Fri, 1 Jun 2007 23:40:38 +0100"  >&lt;p&gt;Attaching d2740_v1.patch, which is a patch for this issue.&lt;/p&gt;

&lt;p&gt;The optimizer can in fact choose to do multiprobing in situations where the start key and stop key are different.  This can happen if the index that the optimizer chooses has more than one column and there are start/stop predicates on one or more of the &quot;other&quot; (meaning non-probe) columns.  In such a situation we simply need to set the start/stop key appropriately when scanning.  That&apos;s what this patch does (more details in the code comments).  The patch also adds new test cases to lang/InListMultiProbeTest.java.&lt;/p&gt;

&lt;p&gt;I ran derbyall and suites.All on SUSE Linux with ibm142 and the only failures were metadata failures that are not related (and have since been corrected in trunk).&lt;/p&gt;

&lt;p&gt;If there are no objections, I&apos;ll plan to commit this patch on Monday.&lt;/p&gt;</comment>
                            <comment id="12501256" author="army" created="Mon, 4 Jun 2007 17:23:10 +0100"  >&lt;p&gt;Committed _v1 patch to trunk with svn # 544175:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=544175&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=544175&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12525759" author="army" created="Fri, 7 Sep 2007 16:58:25 +0100"  >&lt;p&gt;Changes for this issue appear to led to another regression: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3061&quot; title=&quot;Wrong results from query with two conjuncts&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3061&quot;&gt;&lt;del&gt;DERBY-3061&lt;/del&gt;&lt;/a&gt;.  So marking them as related.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12377755">DERBY-3061</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="27899">DERBY-47</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12358743" name="d2740_v1.patch" size="17240" author="army" created="Fri, 1 Jun 2007 23:40:38 +0100"/>
                            <attachment id="12358744" name="d2740_v1.stat" size="342" author="army" created="Fri, 1 Jun 2007 23:40:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23211</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0upj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38793</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10050"><![CDATA[Blocker]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>