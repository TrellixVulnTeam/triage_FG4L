<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:14:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2739/DERBY-2739.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2739] Use DOM interfaces to implement XML operators</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2739</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Sun&apos;s Java 1.5.0 and higher includes Xalan, but Derby doesn&apos;t find it because it has been moved to a non-standard package. Derby should be able to detect and use these classes if it cannot find Xalan in the standard package on the classpath. This would make it easier for many users to start using Derby&apos;s XML features.&lt;/p&gt;

&lt;p&gt;See also the discussion in this thread: &amp;lt;URL:&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200705.mbox/%3c465F015C.9070404@gmail.com%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200705.mbox/%3c465F015C.9070404@gmail.com%3e&lt;/a&gt;&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12370645">DERBY-2739</key>
            <summary>Use DOM interfaces to implement XML operators</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 May 2007 22:30:45 +0100</created>
                <updated>Thu, 19 Jun 2014 10:20:57 +0100</updated>
                            <resolved>Mon, 28 Feb 2011 14:56:49 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12976827" author="knutanders" created="Mon, 3 Jan 2011 17:13:55 +0000"  >&lt;p&gt;I&apos;ve experimented with making changes to the SqlXmlUtil class so that&lt;br/&gt;
it uses the JAXP/DOM interfaces instead of the Xalan implementation&lt;br/&gt;
classes to make it independent of the actual underlying implementation.&lt;/p&gt;

&lt;p&gt;The attached patch (xml-interfaces.diff) is just for testing. It needs&lt;br/&gt;
more polishing before it can be committed, but in its current state it&lt;br/&gt;
successfully runs all the XML tests on Oracle&apos;s Java 6, without&lt;br/&gt;
separate Xalan jars on the classpath.&lt;/p&gt;

&lt;p&gt;In short, the patch changes from the following implementation classes&lt;br/&gt;
to these interfaces:&lt;/p&gt;

&lt;p&gt;org.apache.xalan.serialize.Serializer -&amp;gt; javax.xml.transform.Transformer&lt;br/&gt;
org.apache.xpath.XPath -&amp;gt; org.w3c.dom.xpath.XPathEvaluator&lt;/p&gt;

&lt;p&gt;The javax.xml.transform.Transformer interface is part of JDK 1.4.2,&lt;br/&gt;
but org.w3c.dom.xpath.XPathEvaluator isn&apos;t, so this change means we&apos;ll&lt;br/&gt;
have to reintroduce the xml-apis.jar file (part of Xalan) that we&lt;br/&gt;
removed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3702&quot; title=&quot;Remove xml-apis.jar because we no longer have to compile against jdk1.3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3702&quot;&gt;&lt;del&gt;DERBY-3702&lt;/del&gt;&lt;/a&gt;. But only as a build dependency. On the bright&lt;br/&gt;
side, we shouldn&apos;t need xalan.jar, xercesImpl.jar or serializer.jar in&lt;br/&gt;
the build anymore.&lt;/p&gt;

&lt;p&gt;There are interfaces that provide support for XPath in JDK 1.4.2 too,&lt;br/&gt;
but those interfaces require us to know up front what the return type&lt;br/&gt;
of an XPath query is, and we don&apos;t have that information when we&lt;br/&gt;
compile the query. org.w3c.dom.xpath.XPathEvaluator doesn&apos;t have this&lt;br/&gt;
restriction.&lt;/p&gt;

&lt;p&gt;To test the patch, get xml-apis.jar from the Subversion history with&lt;br/&gt;
this command:&lt;/p&gt;

&lt;p&gt;svn copy &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk/tools/java/xml-apis.jar@588374&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk/tools/java/xml-apis.jar@588374&lt;/a&gt; tools/java&lt;/p&gt;

&lt;p&gt;Some missing parts that need to be worked out before the patch is&lt;br/&gt;
ready are:&lt;/p&gt;

&lt;p&gt;1) Formatting of floating point numbers is done differently. The&lt;br/&gt;
current code uses org.apache.xpath.objects.XNumber.str() to format the&lt;br/&gt;
numbers, and the patch uses Double.toString(). Double.toString() uses&lt;br/&gt;
exponents/scientific notation to make the result string more compact,&lt;br/&gt;
whereas XNumber.str() doesn&apos;t use exponents. There are currently no&lt;br/&gt;
tests that expose this difference.&lt;/p&gt;

&lt;p&gt;2) The original code uses an instance of&lt;br/&gt;
org.apache.xml.utils.PrefixResolverDefault to resolve prefixes when&lt;br/&gt;
evaluating XPath queries. According to the comments, this is needed in&lt;br/&gt;
order to prevent NPEs in some queries. However, none of the XML tests&lt;br/&gt;
failed when tried to replace the resolver with null in the original&lt;br/&gt;
code. So some more investigation is needed in order to find out what&lt;br/&gt;
problem this code is supposed to fix, and if something special is&lt;br/&gt;
needed to handle that in the new code.&lt;/p&gt;

&lt;p&gt;Here are some more details about what the patch does:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/services/loader/ClassInspector.java&lt;/p&gt;

&lt;p&gt;Remove code that&apos;s not used anymore&lt;/p&gt;

&lt;p&gt;M       tools/ant/properties/extrapath.properties&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/build.xml&lt;/p&gt;

&lt;p&gt;Compile SqlXmlUtil.java against xml-apis.jar instead of xercesImpl.jar.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/types/XML.java&lt;/p&gt;

&lt;p&gt;Stop looking for Xalan implementation classes, and instead see if we&lt;br/&gt;
have the JAXP interfaces and check that the DOM implementation&lt;br/&gt;
supports the required XPath functionality.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/types/SqlXmlUtil.java&lt;/p&gt;

&lt;p&gt;Use the interfaces as described above.&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/junit/XML.java&lt;/p&gt;

&lt;p&gt;Check for JAXP interfaces and DOM level instead of a specific Xalan&lt;br/&gt;
version, and rename methods accordingly.&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/XMLMissingClassesTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/junit/EnvTest.java&lt;/p&gt;

&lt;p&gt;Use the new helper methods that check if the XML operators are&lt;br/&gt;
supported.&lt;/p&gt;</comment>
                            <comment id="12977216" author="knutanders" created="Tue, 4 Jan 2011 10:34:29 +0000"  >&lt;p&gt;I added testing of numeric return values to XMLTypeAndOpsTest. These tests fail if the xml-interfaces.diff patch is applied, partly because the patched code returns numbers with higher precision than what the current code does (probably a good thing), and partly because the patched code returns floating point numbers in scientific notation (should probably be changed).&lt;/p&gt;

&lt;p&gt;Committed numeric-tests.diff to trunk with revision 1054962.&lt;/p&gt;</comment>
                            <comment id="12977224" author="knutanders" created="Tue, 4 Jan 2011 10:57:04 +0000"  >&lt;p&gt;Also added test cases for XPath queries that return NaN and positive/negative infinity.&lt;/p&gt;

&lt;p&gt;Committed infinity-NaN.diff to trunk with revision 1054968.&lt;/p&gt;</comment>
                            <comment id="12977255" author="knutanders" created="Tue, 4 Jan 2011 12:07:46 +0000"  >&lt;p&gt;Here&apos;s a test case for the previously mentioned issue with PrefixResolverDefault. The comments in the code mentioned that we&apos;d get NPEs if we didn&apos;t have a prefix resolver, but none of the tests failed if the resolver was removed. The attached patch (ns-npe.diff) exposes this problem by executing an XPath query that contains a function call prefixed by a namespace.&lt;/p&gt;

&lt;p&gt;The expected result in the test case is a failure during compilation of the query, and that&apos;s exactly what we see. If the PrefixResolverDefault object isn&apos;t provided, though, the query is compiled successfully. Instead, it fails during execution with a NullPointerException hidden deep down in its exception chain.&lt;/p&gt;

&lt;p&gt;The changes in the xml-interfaces.diff patch don&apos;t make this test case fail, even though it doesn&apos;t explicitly provide a resolver, so it looks like we don&apos;t need any special handling of this problem in the new code.&lt;/p&gt;

&lt;p&gt;Committed the new test case to trunk with revision 1054991.&lt;/p&gt;</comment>
                            <comment id="12977272" author="knutanders" created="Tue, 4 Jan 2011 13:34:11 +0000"  >&lt;p&gt;XMLTypeAndOpsTest has many negative test cases that expect compile-time errors. However, these tests use assertStatementError(), which doesn&apos;t care whether the error happens at compile-time or during execution. The attached patch (stricter-assertions.diff) changes many calls from assertStatementError() to assertCompileError() so that we&apos;ll detect if a change moves the error from compile-time to run-time.&lt;/p&gt;

&lt;p&gt;Committed revision 1055031.&lt;/p&gt;</comment>
                            <comment id="12995745" author="knutanders" created="Thu, 17 Feb 2011 10:25:50 +0000"  >&lt;p&gt;I&apos;m changing the issue summary so that it&apos;s not tied to one particular vendor/version of the JVM.&lt;/p&gt;</comment>
                            <comment id="12996427" author="knutanders" created="Fri, 18 Feb 2011 14:34:20 +0000"  >&lt;p&gt;Attaching a new patch, xml-interfaces-2.diff, which supersedes the&lt;br/&gt;
xml-interfaces.diff patch. There aren&apos;t many differences between the&lt;br/&gt;
two patches, so the description in the comment from 03/Jan/11 is still&lt;br/&gt;
accurate. Also note the svn magic mentioned in that comment to&lt;br/&gt;
reintroduce tools/java/xml-apis.jar for the build.&lt;/p&gt;

&lt;p&gt;The new patch adds some more comments, and it addresses the only known&lt;br/&gt;
outstanding issue with the previous patch, that is, formatting of&lt;br/&gt;
numbers returned by XPath queries had changed from the original&lt;br/&gt;
implementation.&lt;/p&gt;

&lt;p&gt;In short, the problem was that the previous patch used&lt;br/&gt;
Double.toString() to format the numbers, which caused these&lt;br/&gt;
differences:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;scientific notation was used for sufficiently small or big&lt;br/&gt;
    numbers, for instance &quot;1.23E-5&quot; instead of &quot;0.0000123&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;trailing zeros after the decimal point weren&apos;t removed, so we&apos;d&lt;br/&gt;
    get &quot;14.0&quot; instead of &quot;14&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Especially this latter difference caused problems, for example when&lt;br/&gt;
inserting results from XPath queries into columns of type INT, since&lt;br/&gt;
the former string (&quot;14.0&quot;) couldn&apos;t be cast to INT. The XPath&lt;br/&gt;
libraries return all numbers as double values, so there&apos;s no way to&lt;br/&gt;
know whether the query actually returned the integer 14 or the&lt;br/&gt;
floating point number 14.0.&lt;/p&gt;

&lt;p&gt;In this patch, the formatting of numbers is changed back to how it&lt;br/&gt;
used to be. The original implementation would format numbers the same&lt;br/&gt;
way as the XPath string function, as described here:&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/TR/xpath/#function-string&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/xpath/#function-string&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I didn&apos;t find any method in the Java class library that formatted the&lt;br/&gt;
numbers exactly that way, but I found that BigDecimal.toPlainString()&lt;br/&gt;
was very close, and if we manually removed trailing zeros (including&lt;br/&gt;
the decimal point if the entire fraction part is zero), the results&lt;br/&gt;
seemed to be identical to the old results, and the tests passed.&lt;/p&gt;

&lt;p&gt;Now the problem was that toPlainString() was a new method in Java 5,&lt;br/&gt;
so it&apos;s not avaialble on Java 1.4 or CDC Foundation Profile 1.1, which&lt;br/&gt;
we still need to support. Luckily, on those older platforms,&lt;br/&gt;
BigDecimal.toString() is defined the same way as toPlainString() on&lt;br/&gt;
newer platforms. The definition of toString() was changed in Java 5,&lt;br/&gt;
so we cannot use that method on all platforms, but using&lt;br/&gt;
toPlainString() when available and falling back to toString()&lt;br/&gt;
otherwise, seems to give consistent results across the platforms&lt;br/&gt;
(tested with 1.4.2, 1.5.0 and 1.6.0).&lt;/p&gt;

&lt;p&gt;The resulting code in SqlXmlUtil.numberToString() is a bit ugly, using&lt;br/&gt;
reflection to call the correct method, but I thought that doing it&lt;br/&gt;
this way was less error-prone than writing our own code to format the&lt;br/&gt;
numbers manually.&lt;/p&gt;</comment>
                            <comment id="12996428" author="knutanders" created="Fri, 18 Feb 2011 14:36:57 +0000"  >&lt;p&gt;All the regression tests ran cleanly with Sun&apos;s Java 6. I&apos;ve also verified that the XML tests pass with 1.4.2 and 1.5.0. Setting the &quot;Patch Available&quot; flag.&lt;/p&gt;</comment>
                            <comment id="12996457" author="knutanders" created="Fri, 18 Feb 2011 15:34:09 +0000"  >&lt;p&gt;Uploading version 3 of the patch, with these minor changes:&lt;/p&gt;

&lt;p&gt;1) Removed some debug code that I&apos;d forgotten in the test framework.&lt;/p&gt;

&lt;p&gt;2) Improved the checking of XPath requirements by using DOMImplementation.getFeature() instead of DOMImplementation.hasFeature(). The problem solved by this change is when a recent and fully capable Xalan is on the classpath with a Java 1.4.2 implementation, but not in an endorsed directory. In that case, the Xalan implementation satisfies the requirements, but the interfaces don&apos;t (because xml-apis.jar doesn&apos;t override the old interfaces that come with the JVM unless it&apos;s in an endorsed directory).&lt;/p&gt;

&lt;p&gt;Since hasFeature() is a DOM Level 2 method available in Java 1.4.2, whereas getFeature() is DOM Level 3, we could have the situation where hasFeature() exists and says that XPath level 3 is supported by the implementation (which is true), but when we try to use it by calling getFeature(), we get a NoSuchMethodError because the interface is too old.&lt;/p&gt;

&lt;p&gt;By using the getFeature() method to check the level of support, we&apos;ll detect this lack of supporting interfaces earlier so that we don&apos;t attempt to call methods that don&apos;t exist on the platform.&lt;/p&gt;</comment>
                            <comment id="12997406" author="knutanders" created="Mon, 21 Feb 2011 13:50:06 +0000"  >&lt;p&gt;I&apos;ve done some more testing with the xml-interfaces-3.diff patch on&lt;br/&gt;
various JVMs to see if it causes any problems. The one problem I did&lt;br/&gt;
find, was that on IBM 1.4.2 the XML operators work out of the box with&lt;br/&gt;
the original code, whereas with the patch they don&apos;t because the XML&lt;br/&gt;
interfaces in that JVM are too old. Following the instructions at&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/devguide/cdevstandardsxml.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/devguide/cdevstandardsxml.html&lt;/a&gt; and&lt;br/&gt;
pointing java.endorsed.dirs to a recent Xalan version makes them work&lt;br/&gt;
again.&lt;/p&gt;

&lt;p&gt;I suppose we could have two implementations of SqlXmlUtil so that&lt;br/&gt;
every configuration that worked with the old implementation would work&lt;br/&gt;
with no configuration changes after the upgrade. However, since this&lt;br/&gt;
only affects one rather old platform, I&apos;m leaning towards just adding&lt;br/&gt;
a release note saying that those who need XML support on that platform&lt;br/&gt;
should install a more recent Xalan. Any opinions?&lt;/p&gt;

&lt;p&gt;Here&apos;s the full list of JVMs tested with the patch and how the&lt;br/&gt;
behaviour changed:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;phoneME Advanced: No change. Xalan must be added to the classpath in&lt;br/&gt;
  order to get the XML operators working. (I assume the same is true&lt;br/&gt;
  for weme, but I haven&apos;t tested that configuration.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sun 1.4.2: No change. Xalan must be added to an endorsed directory,&lt;br/&gt;
  as specified in the developers guide.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;IBM 1.4.2: &lt;b&gt;CHANGED&lt;/b&gt; Xalan must be added to an endorsed directory,&lt;br/&gt;
  whereas it used to work out of the box with the old implementation.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sun 1.5.0: No change. Xalan must be added to the classpath.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;IBM 1.5.0: No change. XML operators work out of the box.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Sun 1.6.0: &lt;b&gt;CHANGED&lt;/b&gt; XML operators now work out of the box, whereas&lt;br/&gt;
  Xalan would have to be added to the classpath in the old&lt;br/&gt;
  implementation.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;IBM 1.6.0: No change. XML operators work out of the box.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Oracle 1.7.0 early access: &lt;b&gt;CHANGED&lt;/b&gt; XML operators now work out of&lt;br/&gt;
  the box, whereas Xalan would have to be added to the classpath in&lt;br/&gt;
  the old implementation.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12998494" author="knutanders" created="Wed, 23 Feb 2011 18:32:29 +0000"  >&lt;p&gt;I&apos;ve committed xml-interfaces-3.diff to trunk with revision 1073874.&lt;/p&gt;

&lt;p&gt;Leaving the issue open until a release note has been attached. I&apos;ll also see if some of the jar files under tools/java can be removed now. I think xalan.jar, serializer.jar and xercesImpl.jar aren&apos;t used in the build anymore.&lt;/p&gt;</comment>
                            <comment id="13000302" author="knutanders" created="Mon, 28 Feb 2011 14:31:31 +0000"  >&lt;p&gt;Attaching a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="13000311" author="knutanders" created="Mon, 28 Feb 2011 14:50:55 +0000"  >&lt;p&gt;Attaching a patch that removes the references to xercesImpl.jar, xalan.jar and serializer.jar from the build scripts and build instructions.&lt;/p&gt;</comment>
                            <comment id="13000314" author="knutanders" created="Mon, 28 Feb 2011 14:56:49 +0000"  >&lt;p&gt;Removed the unused jar files and committed revision 1075360.&lt;/p&gt;

&lt;p&gt;Resolving the issue so that the issue shows up in the release notes.&lt;/p&gt;</comment>
                            <comment id="13000332" author="dbrosius@apache.org" created="Mon, 28 Feb 2011 15:25:04 +0000"  >&lt;p&gt;&amp;gt;&amp;gt; Sun&apos;s Java 1.5.0 and higher includes Xalan, but Derby doesn&apos;t find it because it has been moved to a non-standard package. Derby should be able to detect and use these classes if it cannot find Xalan in the standard package on the classpath. &lt;/p&gt;

&lt;p&gt;Why wouldn&apos;t derby use the xml factories so that the choice of transformer can be done at runtime?&lt;/p&gt;</comment>
                            <comment id="13000393" author="knutanders" created="Mon, 28 Feb 2011 16:51:46 +0000"  >&lt;p&gt;&amp;gt; Why wouldn&apos;t derby use the xml factories so that the choice of transformer can be done at runtime?&lt;/p&gt;

&lt;p&gt;Hi Dave,&lt;/p&gt;

&lt;p&gt;That&apos;s exactly what it does after the changes made in this issue. The transformer is now created by calling TransformerFactory.newInstance().newTransformer().&lt;/p&gt;</comment>
                            <comment id="13000579" author="dbrosius@apache.org" created="Mon, 28 Feb 2011 22:34:39 +0000"  >&lt;p&gt;ah ok, good. sorry for the spam.&lt;/p&gt;</comment>
                            <comment id="13000958" author="rhillegas" created="Tue, 1 Mar 2011 16:58:07 +0000"  >&lt;p&gt;Adjusted the release note.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12722452">DERBY-6624</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12467408" name="infinity-NaN.diff" size="732" author="knutanders" created="Tue, 4 Jan 2011 10:57:04 +0000"/>
                            <attachment id="12467412" name="ns-npe.diff" size="1727" author="knutanders" created="Tue, 4 Jan 2011 12:07:46 +0000"/>
                            <attachment id="12467405" name="numeric-tests.diff" size="2340" author="knutanders" created="Tue, 4 Jan 2011 10:34:29 +0000"/>
                            <attachment id="12472329" name="releaseNote.html" size="5248" author="rhillegas" created="Tue, 1 Mar 2011 16:58:07 +0000"/>
                            <attachment id="12472180" name="releaseNote.html" size="4988" author="knutanders" created="Mon, 28 Feb 2011 14:31:31 +0000"/>
                            <attachment id="12472187" name="remove-xalan-jars.diff" size="2750" author="knutanders" created="Mon, 28 Feb 2011 14:50:55 +0000"/>
                            <attachment id="12467416" name="stricter-assertions.diff" size="21099" author="knutanders" created="Tue, 4 Jan 2011 13:34:11 +0000"/>
                            <attachment id="12471400" name="xml-interfaces-2.diff" size="38703" author="knutanders" created="Fri, 18 Feb 2011 14:34:20 +0000"/>
                            <attachment id="12471407" name="xml-interfaces-3.diff" size="38779" author="knutanders" created="Fri, 18 Feb 2011 15:34:09 +0000"/>
                            <attachment id="12467328" name="xml-interfaces.diff" size="34140" author="knutanders" created="Mon, 3 Jan 2011 17:13:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Feb 2011 15:25:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30586</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36400</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>