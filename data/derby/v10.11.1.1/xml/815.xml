<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-815/DERBY-815.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-815] Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-815</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Reported by Kathey Marsden in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-212&quot; title=&quot;Optimize some specific methods in Network Server to improve performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-212&quot;&gt;&lt;del&gt;DERBY-212&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;In reviewing the Network Server Code and profiling there were several&lt;br/&gt;
areas that showed potential for providing performance&lt;br/&gt;
improvement. Functions that need optimizing to prevent unneeded object&lt;br/&gt;
creation and excessive decoding: parseSQLDTA_work()&lt;/p&gt;</description>
                <environment></environment>
        <key id="12327676">DERBY-815</key>
            <summary>Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="31587">DERBY-212</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dyret">Dyre Tjeldvoll</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Jan 2006 23:24:38 +0000</created>
                <updated>Mon, 29 Jun 2009 15:40:29 +0100</updated>
                            <resolved>Mon, 1 Oct 2007 21:25:57 +0100</resolved>
                                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12363142" author="dyret" created="Thu, 19 Jan 2006 04:12:38 +0000"  >&lt;p&gt;From profiling I have seen that this method has some sub-optimal use of Vectors, and I am close to submitting a patch for this. But I have not been able to see any unnecessary &quot;decoding&quot;. At first I thought that CodePoint.FDODSC could be skipped when re-executing a statement that has already been exceuted, but running derbynet(client)mats with suitable instrumentation showed that an existing statement could receive parameters with different types, and different lengths. I also observed that these &quot;type transitions&quot; were different when running with the DB2 driver and the Derby driver (for the same test). &lt;/p&gt;</comment>
                            <comment id="12363274" author="dyret" created="Fri, 20 Jan 2006 01:57:35 +0000"  >&lt;p&gt;Ran derbyall with the usual failures. I&apos;ll let the committers decide if it is ok to check in...&lt;/p&gt;</comment>
                            <comment id="12363391" author="dyret" created="Fri, 20 Jan 2006 20:51:58 +0000"  >&lt;p&gt;New patch that has been approved by Knut Anders. (New derbyall run also attached)&lt;/p&gt;</comment>
                            <comment id="12363676" author="dyret" created="Mon, 23 Jan 2006 23:44:04 +0000"  >&lt;p&gt;Commited by Bernt Johnsen (r370806)&lt;/p&gt;</comment>
                            <comment id="12363682" author="dyret" created="Tue, 24 Jan 2006 00:21:40 +0000"  >&lt;p&gt;Actually, this fix has not been oommitted yet. The commit message mentioned the wrong issue number&lt;/p&gt;</comment>
                            <comment id="12363815" author="bernt" created="Tue, 24 Jan 2006 20:56:55 +0000"  >&lt;p&gt;Committed revision 371897.&lt;/p&gt;</comment>
                            <comment id="12364220" author="army" created="Sat, 28 Jan 2006 01:22:30 +0000"  >&lt;p&gt;I have a test that runs using the DB2 client; before the patch for this issue was checked in, the test passed;  now it hangs.  To make sure, I synced my client at revision 371896 and the test passed; I then synced it to 371897 and it hung--so it does indeed appear to be caused by this checkin.&lt;/p&gt;

&lt;p&gt;I&apos;m still trying to figure out what part of the test is causing the issue, and am trying to create a repro using either the Derby Client or the JCC.  I will post more when I find out.  In the meantime, I&apos;m reopening this issue for tracking...&lt;/p&gt;</comment>
                            <comment id="12364250" author="dyret" created="Sat, 28 Jan 2006 04:42:02 +0000"  >&lt;p&gt;Interesting... If you post your repro I&apos;ll run it and try to figure out what is wrong&lt;/p&gt;</comment>
                            <comment id="12364272" author="army" created="Sat, 28 Jan 2006 07:36:37 +0000"  >&lt;p&gt;I was finally able to get a repro for this issue against Derby Client.&lt;/p&gt;

&lt;p&gt;For what it&apos;s worth, there&apos;s one comment in your patch that looks suspicious, namely, the last three lines of the following code block:&lt;/p&gt;

&lt;p&gt;+                            if (cp.drdaType != drdaType || &lt;br/&gt;
+                                cp.drdaLength != drdaLength) {&lt;br/&gt;
+                                if (SanityManager.DEBUG) &lt;/p&gt;
{
+                                    trace(ps+&quot; param &quot; +j+
+                                          &quot; type: &quot;+ 
+                                          drdaTypeName(cp.drdaType)+ 
+                                          &quot;-&amp;gt;&quot;+drdaTypeName(drdaType)+ 
+                                          &quot; length: &quot;+ 
+                                          cp.drdaLength+&quot;-&amp;gt;&quot;+drdaLength);
+                                }
&lt;p&gt;+                                // Trust that this is OK...&lt;br/&gt;
+                                cp.drdaType = drdaType;&lt;br/&gt;
+                                cp.drdaLength = drdaLength;&lt;/p&gt;

&lt;p&gt;When I turned tracing on and ran the repro, the output from the Sanity.DEBUG block was printed, which perhaps means that the assignment is &lt;em&gt;not&lt;/em&gt; okay...?&lt;/p&gt;

&lt;p&gt;To run the repro, start the server on port 1527, then run&lt;/p&gt;

&lt;p&gt;&amp;gt; java d815_regress&lt;/p&gt;

&lt;p&gt;Please let me know if that doesn&apos;t reproduce the problem for you.  Note that, for whatever reason, I had to do a full ant clobber and rebuild in order for the repro to actually work...&lt;/p&gt;</comment>
                            <comment id="12364273" author="army" created="Sat, 28 Jan 2006 07:40:02 +0000"  >&lt;p&gt;Re-attaching the repro, without excess &quot;garbage&quot; that I had sitting there from other tests...&lt;/p&gt;</comment>
                            <comment id="12364303" author="dyret" created="Sat, 28 Jan 2006 20:36:34 +0000"  >&lt;p&gt;I&apos;ve tried the repro, and I see the same hang. I&apos;m looking into it.&lt;/p&gt;</comment>
                            <comment id="12364304" author="dyret" created="Sat, 28 Jan 2006 21:20:42 +0000"  >&lt;p&gt;AB, your comment about the patch almost hit the nail on the head, but not quite. The CliParam struct has field called isExt that indicates that the parameter is external (in its own DSS). Just like the drdaType and the drdaLength filelds can change (to my surprise), the isExt can go from true to false for the same parameter in the same statement. In this case param 7 had been marked as external, but was internal in this message. Hence the attempt to read the separate DSS left the server waiting for more  data, data which the client was never going to send.&lt;/p&gt;

&lt;p&gt;With the following change your repro goes through:&lt;/p&gt;

&lt;p&gt;Index: java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/drda/org/apache/derby/impl/drda/DRDAConnThread.java    (revision 373136)&lt;br/&gt;
+++ java/drda/org/apache/derby/impl/drda/DRDAConnThread.java    (working copy)&lt;br/&gt;
@@ -3889,6 +3889,8 @@&lt;br/&gt;
                             }&lt;br/&gt;
                             final DRDAStatement.CliParam cp =&lt;br/&gt;
                                 stmt.getCliParam(j);&lt;br/&gt;
+                            cp.isExt = false; // &amp;lt;--- FIX&lt;br/&gt;
+&lt;br/&gt;
                             if (cp.drdaType != drdaType ||&lt;br/&gt;
                                 cp.drdaLength != drdaLength) {&lt;br/&gt;
                                 if (SanityManager.DEBUG) {&lt;/p&gt;

&lt;p&gt;I&apos;ll polish up a proper patch and attach it when I&apos;ve run derbyall. Sorry about all the problems...&lt;/p&gt;</comment>
                            <comment id="12364310" author="dyret" created="Sun, 29 Jan 2006 00:24:59 +0000"  >&lt;p&gt;Patch for the regression reported by AB.&lt;/p&gt;</comment>
                            <comment id="12364497" author="army" created="Tue, 31 Jan 2006 04:47:42 +0000"  >&lt;p&gt;[ including my comments on the regression patch, copied from the derby-dev mailing list ]&lt;/p&gt;

&lt;p&gt;Dyre Tjeldvoll (JIRA) wrote:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; AB, your comment about the patch almost hit the nail on the head, but not quite.&lt;br/&gt;
&amp;gt; The CliParam struct has field called isExt that indicates that the parameter is&lt;br/&gt;
&amp;gt; external (in its own DSS). Just like the drdaType and the drdaLength filelds can&lt;br/&gt;
&amp;gt; change (to my surprise), the isExt can go from true to false for the same parameter&lt;br/&gt;
&amp;gt; in the same statement. In this case param 7 had been marked as external, but was&lt;br/&gt;
&amp;gt; internal in this message. Hence the attempt to read the separate DSS left the&lt;br/&gt;
&amp;gt; server waiting for more  data, data which the client was never going to send.&lt;/p&gt;

&lt;p&gt;Thanks for looking into this regression.  I (AB) applied the patch and ran my&lt;br/&gt;
ODBC tests again, and the hang I reported is now gone.  That said, I&apos;m now&lt;br/&gt;
seeing a different, intermittent hang in one of the multi-threaded tests that I&lt;br/&gt;
have (again for ODBC).  I can&apos;t say for sure if this intermittent hang is the&lt;br/&gt;
result of the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; changes or just a problem with the test--I&apos;m still&lt;br/&gt;
trying to figure that out.  While I investigate the matter, I&apos;m wondering if, by&lt;br/&gt;
chance, you can think of anything in your &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; patch that might be&lt;br/&gt;
affecting the server when running with a multi-threaded client?  I&apos;d be grateful&lt;br/&gt;
for any ideas or suggestions that you might have there...&lt;/p&gt;

&lt;p&gt;Regarding your proposed fix for the regression:&lt;/p&gt;

&lt;p&gt;&amp;gt; With the following change your repro goes through:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;                              final DRDAStatement.CliParam cp =&lt;br/&gt;
&amp;gt;                                  stmt.getCliParam(j);&lt;br/&gt;
&amp;gt; +                            cp.isExt = false; // &amp;lt;--- FIX&lt;br/&gt;
&amp;gt; +&lt;br/&gt;
&amp;gt;                              if (cp.drdaType != drdaType ||&lt;br/&gt;
&amp;gt;                                  cp.drdaLength != drdaLength) {&lt;br/&gt;
&amp;gt;                                  if (SanityManager.DEBUG) {&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I&apos;ll polish up a proper patch and attach it when I&apos;ve run derbyall. Sorry about all the problems...&lt;/p&gt;

&lt;p&gt;Three things regarding the d815_regress.diff patch that you posted:&lt;/p&gt;

&lt;p&gt;1) The need for this fix is apparently non-intuitive--you yourself mentioned&lt;br/&gt;
that you were &quot;surprised&quot; by that fact that &quot;isExt can go from true to false for&lt;br/&gt;
the same parameter in the same statement&quot;.  So it&apos;d be nice if you could add&lt;br/&gt;
comments to the code indicating &lt;em&gt;why&lt;/em&gt; this particular line (cp.isExt = false) is&lt;br/&gt;
required, and &lt;em&gt;when&lt;/em&gt; such a scenario can happen.  If you were surprised, you can&lt;br/&gt;
bet others will be, too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Three or four years from now, when you or I or&lt;br/&gt;
someone who&apos;s never looked at this code before sees this line, they could very&lt;br/&gt;
well go &quot;Ummm...what&apos;s that for?&quot; and then subsequently delete it, or maybe even&lt;br/&gt;
do worse--and the derbyall tests wouldn&apos;t catch it, and thus the regression&lt;br/&gt;
would yet again be reintroduced.  Which leads me to #2...&lt;/p&gt;

&lt;p&gt;2) It would be great if you could take the repro for the regression and&lt;br/&gt;
incorporate it into one of the tests in the derbyall suite, so that it runs&lt;br/&gt;
every night.  That way, if someone &lt;em&gt;does&lt;/em&gt; go through and delete the above line&lt;br/&gt;
from the code, the nightlies will catch it.  It&apos;s always desirable to have a&lt;br/&gt;
test case submitted with code changes; the original patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; was sort&lt;br/&gt;
of an exception, since the theory was that it wasn&apos;t changing/adding any&lt;br/&gt;
functionality and thus existing tests would be sufficient.  But for the&lt;br/&gt;
regression, we have a definite test case for &quot;broken&quot; and &quot;fixed&quot;, so I think we&lt;br/&gt;
should have that test case as part of the nightlies.&lt;/p&gt;

&lt;p&gt;3) Okay, so it looks like my guess regarding the following code was wrong:&lt;/p&gt;

&lt;p&gt;+                                // Trust that this is OK...&lt;br/&gt;
+                                cp.drdaType = drdaType;&lt;br/&gt;
+                                cp.drdaLength = drdaLength;&lt;/p&gt;

&lt;p&gt;That said, I have to admit that I&apos;m uncomfortable with &quot;Trust that this is&lt;br/&gt;
OK...&quot; as a comment in a final patch.  The comment itself makes it seem like&lt;br/&gt;
this is a bit of guess-work coding--sort of a &quot;well I don&apos;t know why we need to&lt;br/&gt;
do this, but let&apos;s try it and cross our fingers&quot; thing.  I&apos;m assuming that&lt;br/&gt;
that&apos;s &lt;em&gt;not&lt;/em&gt; the case, so it would be extremely helpful to reword the comment to&lt;br/&gt;
explain &lt;em&gt;why&lt;/em&gt; we need to do this assignment.  When I ran into the regression and&lt;br/&gt;
started looking at the patch, I sat there and thought &quot;Okay, what does that&lt;br/&gt;
mean?  Why was this code added?  What happens if I change it?  What am I&lt;br/&gt;
&apos;trusting&apos; in?  What did the developer have in mind when he added this code?&quot;&lt;br/&gt;
And that&apos;s why I pointed it out in my comment when I posted the repro.  So at&lt;br/&gt;
the very least, it&apos;s a comment that can cause developers to spend time&lt;br/&gt;
scratching their heads and wondering whether or not this particular code might&lt;br/&gt;
be the cause of some server problem that they&apos;re having (like, say, a hang with&lt;br/&gt;
an ODBC client... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks again for addressing this regression so quickly.  I don&apos;t mean to&lt;br/&gt;
disregard your efforts nor your fix--I appreciate both!  I just think it might&lt;br/&gt;
be helpful for future developers if the new code contained some additional&lt;br/&gt;
explanatory comments...&lt;/p&gt;</comment>
                            <comment id="12364548" author="dyret" created="Tue, 31 Jan 2006 18:51:25 +0000"  >&lt;p&gt;AB, the patch substitutes ArrayLists (not synchronized) for Vectors (synchronized), so with your MT-problems in mind I suggest we get a committer to revert the patch. Maybe I can look at it again when you have committed your work.&lt;/p&gt;

&lt;p&gt;I must say that it seems very unlikey that DRDAStatements (which originally contained both Vectors and ArrayLists) can be shared between threads. If it worked before it must be by accident...&lt;/p&gt;</comment>
                            <comment id="12364637" author="army" created="Wed, 1 Feb 2006 01:31:46 +0000"  >&lt;p&gt;&amp;gt; AB, the patch substitutes ArrayLists (not synchronized) for Vectors (synchronized), so with &lt;br/&gt;
&amp;gt; your MT-problems in mind I suggest we get a committer to revert the patch. &lt;/p&gt;

&lt;p&gt;Note that, as I mentioned in my previous comment, I am not able to say with certainty that the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; patch is responsible for the intermittent hang--that has yet to be proven one way or the other.  But that said, if you&apos;re okay with reverting the patch, I think I would prefer that since I have a lot of things on my plate right now and further investigation of this intermittent hang may not happen for another couple of days.   &lt;/p&gt;

&lt;p&gt;&amp;gt; Maybe I can look at it again when you have committed your work.&lt;/p&gt;

&lt;p&gt;I&apos;m not actively working on any changes related to this issue, so I don&apos;t think there&apos;s much point in waiting for me to &quot;commit&quot; something here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I do have a lot of things in progress,  but none address this part of the code: I simply noticed that the ODBC tests I have are acting up after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; was committed, and I was just following up in an attempt to find out why...&lt;/p&gt;

&lt;p&gt;If you are willing, I think the best thing here is to revert the patch for now, and re-submit it with 1) the fix for the regression, 2) the test case for the regression included as part of derbyall, and 3) some additional explanatory comments (per my last post).  If you have time to investigate the multithreaded angle a bit , that would be &lt;em&gt;great&lt;/em&gt;; if not, I think we could still commit an updated patch and I then can follow-up with more on the multithreaded test case when I have time.  If it turns out that the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-815&quot; title=&quot;Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-815&quot;&gt;&lt;del&gt;DERBY-815&lt;/del&gt;&lt;/a&gt; change are the cause (which we don&apos;t know yet), I can create another Jira issue with more details...&lt;/p&gt;

&lt;p&gt;Does that seem reasonable?&lt;/p&gt;

&lt;p&gt;&amp;gt; I must say that it seems very unlikey that DRDAStatements (which originally contained &lt;br/&gt;
&amp;gt; both Vectors and ArrayLists) can be shared between threads. If it worked before it must be &lt;br/&gt;
&amp;gt; by accident...&lt;/p&gt;

&lt;p&gt;That could very well be the case; I can&apos;t say for sure at this point.&lt;/p&gt;

&lt;p&gt;If you are in fact okay with reverting the patch and working on a revised version, please post here saying so, and then we can ask a commiter to back the change out.&lt;/p&gt;

&lt;p&gt;Thanks for your continued follow-up with this issue...&lt;/p&gt;</comment>
                            <comment id="12364778" author="dyret" created="Wed, 1 Feb 2006 17:24:39 +0000"  >&lt;p&gt;Yes, we should go ahead and revert the issue. &lt;/p&gt;</comment>
                            <comment id="12364822" author="dyret" created="Thu, 2 Feb 2006 01:14:37 +0000"  >&lt;p&gt;While converting AB&apos;s repro for the regression into a test (in the test harness) I discovered that the last execute triggers an unexpected exception in embedded mode (see the attached derby.log for details). I realize that to test the regression it is only necessary to run the test against the NetworkServer, but it shouldn&apos;t fail in embedded mode, should it?&lt;/p&gt;</comment>
                            <comment id="12364831" author="army" created="Thu, 2 Feb 2006 02:41:10 +0000"  >&lt;p&gt;Good catch.  Actually, I think the error in embedded mode is probably correct, given the repro I posted.  When we insert the 3rd row, we do two setBlobs and two setClobs; for the fourth row, we do a setNull for one of the blobs and for one of the clobs (params 7 and 9) but do not re-set the others (params 6 and 8), and hence this error occurs because we&apos;re trying to re-use the lob streams.  If you add the following two lines to the block for the 4th row:&lt;/p&gt;

&lt;p&gt;    pSt.setBlob(6, rs.getBlob(6));&lt;br/&gt;
    pSt.setClob(8, rs.getClob(8));&lt;/p&gt;

&lt;p&gt;then the test case will pass with embedded and still show the regression hang against the client.  As for why the client didn&apos;t throw an error, I think it&apos;s because materialization of the lobs occurs on the client/server, so we&apos;re not reusing a &quot;stream&quot; per se, we&apos;re just reusing the materialized versions of the lobs.  I believe this is related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-326&quot; title=&quot;Improve streaming of large objects for network server and client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-326&quot;&gt;&lt;del&gt;DERBY-326&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-550&quot; title=&quot;BLOB : java.lang.OutOfMemoryError with network JDBC driver (org.apache.derby.jdbc.ClientDriver)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-550&quot;&gt;&lt;del&gt;DERBY-550&lt;/del&gt;&lt;/a&gt;... (thanks to Sunitha for the pointers!).&lt;/p&gt;</comment>
                            <comment id="12366172" author="dyret" created="Mon, 13 Feb 2006 19:00:56 +0000"  >&lt;p&gt;Ok, it is good to know that this is expected beahavior. Although, since this is a mistake that a user could easily make, it seems to me that a more user-friendly error message would have been preferable. Anyway, I have modified the test as suggested, and it works.&lt;/p&gt;

&lt;p&gt;Another thing: I have converted the repro into a separate test script. Based on the comments I got on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-85&quot; title=&quot;NPE when creating a trigger on a table and default schema doesn&amp;#39;t exist.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-85&quot;&gt;&lt;del&gt;DERBY-85&lt;/del&gt;&lt;/a&gt;, I&apos;m thinking that I should try to integrate the repro into an existing test. That, however, gives me a problem. I wanted this repro to be run both with DerbyNet and DerbyNetClient, but based on the content of suites/derbynetmats.runnall and suites/derbynetclientmats.runall there doesn&apos;t appear to be any tests that are actually run in both frameworks. So which test should I extend? Any help on this would be much appreciated. Thanks.&lt;/p&gt;</comment>
                            <comment id="12366217" author="army" created="Tue, 14 Feb 2006 02:28:03 +0000"  >&lt;p&gt;&amp;gt; I wanted this repro to be run both with DerbyNet and DerbyNetClient, but based on &lt;br/&gt;
&amp;gt; the content of suites/derbynetmats.runnall and suites/derbynetclientmats.runall there &lt;br/&gt;
&amp;gt; doesn&apos;t appear to be any tests that are actually run in both frameworks. So which test &lt;br/&gt;
&amp;gt; should I extend? Any help on this would be much appreciated. Thanks.&lt;/p&gt;

&lt;p&gt;There are two places where the tests for a given suite are specified: the first is &amp;lt;suite&amp;gt;.runall, which specifies individual tests to run; the second is &amp;lt;suite&amp;gt;.properties, in which you can specify additional suites to run with the same configuration as the current suite.&lt;/p&gt;

&lt;p&gt;Thus, while derbynetmats.runall and derbynetclientmats.runall do not share any individual tests, a look at derbynetclientmats.properties shows the following:&lt;/p&gt;

&lt;p&gt;framework=DerbyNetClient&lt;br/&gt;
suites= derbynetclientmats derbynetmats&lt;/p&gt;

&lt;p&gt;As I understand it, this means that all tests in derbynetclientmats.runall AND derbynetmats.runall will run as part of the &quot;derbynetclientmats&quot; suite using the DerbyNetClient framework.  So as long as you add the new test case to  a test that is in derbynetmats.runall, it will also run as part of derbynetclientmats (assuming the test is not  listed in the DerbyNetClient.exclude file).&lt;/p&gt;

&lt;p&gt;That said, if you can find an appropriate test in either derbynetmats.runall or jdbcapi.runall, I think you could use that since both of those suites are run as part of derbynetmats and thus both are also run as part of derbynetclientmats.  As I said, though, you&apos;ll just have to make sure whatever test you choose is &lt;em&gt;not&lt;/em&gt; listed in either DerbyNet.exclude nor DerbyNetClient.exclude&lt;/p&gt;

&lt;p&gt;Does that help?&lt;/p&gt;</comment>
                            <comment id="12366337" author="dyret" created="Tue, 14 Feb 2006 22:51:08 +0000"  >&lt;p&gt;Thanks! Yes, that explains a lot. I had a quick look at the tests in derbynetmats, and derbynet/prepStmt.java seems like a good candidate, since the problem appears when using prepared statements with the NetworkServer. I have checked that it isn&apos;t listed in either of the .exclude files. If nobody objects, I&apos;ll go ahead and add a new test case here.&lt;/p&gt;</comment>
                            <comment id="12366475" author="dyret" created="Wed, 15 Feb 2006 22:05:21 +0000"  >&lt;p&gt;Patch description&lt;/p&gt;</comment>
                            <comment id="12366476" author="dyret" created="Wed, 15 Feb 2006 22:09:46 +0000"  >&lt;p&gt;New patch with testcase for the regression. Please review, but I think it would be wise to delay committing until AB has had a chance to run his ODBC tests with the patch. Thanks.&lt;/p&gt;</comment>
                            <comment id="12367043" author="army" created="Tue, 21 Feb 2006 00:22:33 +0000"  >&lt;p&gt;I applied the patch and ran my ODBC tests with no failures.  I haven&apos;t had time to do a full review of the patch, but I did skim through and it looks like things are well commented now--so thanks for doing that.&lt;/p&gt;

&lt;p&gt;One note: the patch only updates the master files for jdk15; the &quot;default&quot; master file (master/prepStmt.out) wasn&apos;t updated, so if you run the new test with any JVM earlier than 1.5, there will be a diff.  If you have time to try that out and include that master update in this patch, that&apos;d be good.&lt;/p&gt;

&lt;p&gt;Thanks for taking the time to follow-up on my questions/concerns. &lt;/p&gt;</comment>
                            <comment id="12367046" author="dyret" created="Tue, 21 Feb 2006 00:57:04 +0000"  >&lt;p&gt;The omission of the default master file was deliberate. It is explained in the updated patch description (derby-815.html) under the heading &quot;Notes to reviewers&quot;. &lt;br/&gt;
I chose not to touch the default since the unmodified test fails in embedded, both with java 1.4 and 1.5&lt;/p&gt;</comment>
                            <comment id="12367049" author="army" created="Tue, 21 Feb 2006 01:39:07 +0000"  >&lt;p&gt;Okay, so the unmodified test fails in embedded.  But the master file in master/prepStmt.out is not just for embedded; it also serves as the default  master file for server mode if nothing else is found.  In the case of server mode with a 1.4 jvm, the 1.5 masters don&apos;t apply, and since there&apos;s nothing else to use the default master/prepStmt.out will be used.  Which is (I think) why that master file exists, even if the test doesn&apos;t run in embedded mode.&lt;/p&gt;

&lt;p&gt;The unmodified test passes in server mode with 1.4; the modified test fails in server mode with 1.4-&lt;del&gt;and my guess is that that&apos;s not deliberate.  So I think what&apos;s required here is that someone run the test  in server mode against 1.4 and then copy that master file to master/prepStmt.out.  Based on the &quot;itch&quot; philosophy, that someone doesn&apos;t have to be you&lt;/del&gt;-but in the meantime, any tests run with 1.4 will (so far as I understand it) fail with your changes.&lt;/p&gt;

&lt;p&gt;That&apos;s how I understand it, anyways.  I&apos;m not blocking the patch from being committed, I&apos;m just pointing out a potential master-update problem that could lead to a new nightly test failure.  &lt;b&gt;shrug&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="12367051" author="army" created="Tue, 21 Feb 2006 01:51:44 +0000"  >&lt;p&gt;&amp;gt; but in the meantime, any tests run with 1.4 will (so far as I understand it) fail with your changes. &lt;/p&gt;

&lt;p&gt;Check that, &quot;any tests&quot; isn&apos; right; I meant &quot;the prepStmt.java test&quot; test.  Sorry.&lt;/p&gt;</comment>
                            <comment id="12367055" author="dyret" created="Tue, 21 Feb 2006 02:13:10 +0000"  >&lt;p&gt;derby-815.v3.html is an updated description without the master comment. Thanks to AB for explaining this.&lt;/p&gt;</comment>
                            <comment id="12367146" author="dyret" created="Tue, 21 Feb 2006 14:58:01 +0000"  >&lt;p&gt;New patch (derby-815.v3.*) which includes an updated default master that works with jdk1.4&lt;br/&gt;
Ran derbyall with jdk1.4&lt;/p&gt;</comment>
                            <comment id="12377030" author="fuzzylogic" created="Sat, 29 Apr 2006 07:25:10 +0100"  >&lt;p&gt;Committed to 10.1 branch with revision 398036.&lt;/p&gt;</comment>
                            <comment id="12377032" author="fuzzylogic" created="Sat, 29 Apr 2006 07:26:27 +0100"  >&lt;p&gt;Whoops. Previous comment meant for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-85&quot; title=&quot;NPE when creating a trigger on a table and default schema doesn&amp;#39;t exist.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-85&quot;&gt;&lt;del&gt;DERBY-85&lt;/del&gt;&lt;/a&gt; not 815.&lt;/p&gt;</comment>
                            <comment id="12421738" author="kmarsden" created="Mon, 17 Jul 2006 23:37:58 +0100"  >&lt;p&gt;I would like to look at committing  this patch.  Dyre I was wondering if you could sync it up. It seems to have become out of date since you posted it in February.  Sorry for the long delay in  looking at it.&lt;/p&gt;

</comment>
                            <comment id="12422686" author="kmarsden" created="Fri, 21 Jul 2006 16:45:46 +0100"  >&lt;p&gt;Should we uncheck patch available on this issue since it needs to be updated to apply?&lt;/p&gt;</comment>
                            <comment id="12422972" author="dyret" created="Mon, 24 Jul 2006 06:54:07 +0100"  >&lt;p&gt;Removing patch available flag, as requested.&lt;/p&gt;</comment>
                            <comment id="12423063" author="dyret" created="Mon, 24 Jul 2006 13:18:02 +0100"  >&lt;p&gt;Attaching new patch (v4) based on revision 425020.&lt;/p&gt;</comment>
                            <comment id="12423064" author="dyret" created="Mon, 24 Jul 2006 13:19:08 +0100"  >&lt;p&gt;Setting patch available for the v4 patch.&lt;/p&gt;</comment>
                            <comment id="12423509" author="kmarsden" created="Wed, 26 Jul 2006 04:10:43 +0100"  >&lt;p&gt;I am looking at this patch and have a couple of general questions&lt;/p&gt;

&lt;p&gt;1)  I see that Bernt committed the original patch but I am having a hard time finding his original review comments in the mail archives.   Are there comments from the initial review that I could refer to?&lt;/p&gt;

&lt;p&gt;2) I was wondering about the logic DRDAConnThread.java&lt;br/&gt;
I was wonding if it might be possible to work this so that CliParam does not have to be exposed in DRDAConnThread? e.g just have a stmt.initCliParam(drdaType, drdaLength) that has all of this logic in it.&lt;/p&gt;

&lt;p&gt;final boolean haveParams = (stmt.getNumParams() &amp;gt; 0);&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;....&amp;#93;&lt;/span&gt;&lt;br/&gt;
if (!haveParams) &lt;/p&gt;
{				
// The statement has not been executed
// before so a new CliParam object
// must be added for each parameter
stmt.addCliParam(drdaType, drdaLength);
	continue;
	}
&lt;p&gt;	// This statement has been executed before&lt;br/&gt;
	// so we reuse the CliParam objects (to&lt;br/&gt;
	// save some cycles)&lt;br/&gt;
	final DRDAStatement.CliParam cp = &lt;br/&gt;
			stmt.getCliParam(j);&lt;br/&gt;
			// Clear out all info about the old&lt;br/&gt;
			// parameter and add info about the new one&lt;br/&gt;
			cp.init(drdaType, drdaLength);&lt;br/&gt;
		}&lt;/p&gt;</comment>
                            <comment id="12424411" author="kmarsden" created="Sun, 30 Jul 2006 18:13:16 +0100"  >&lt;p&gt;My  review comment about hiding CliParam  and handling of clearing parameters etc from DRDAConnThread  is my only comment for now on this patch.  I do not really have my head around all the cases and handling for parameter setting and clearing etc, so look forward to hearing review comments from others on the patch to understand better.  My feeble mind might  also be able to sort it out better once this change is made.   Can  we uncheck patch available or would you like more comments on this version?&lt;/p&gt;

&lt;p&gt;Also I wanted to mention that if you have higher urgency items for 10.2, don&apos;t feel compelled to jump on changing this right away.  It could easily go into the maintenance branch after releas.  I just picked it up as my patch for the week.  &lt;/p&gt;


&lt;p&gt;Thanks &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12426672" author="dyret" created="Tue, 8 Aug 2006 19:31:27 +0100"  >&lt;p&gt;No I don&apos;t see this as urgent for 10.2. Wrt. to the visibility of CliParam in DRDAConnThread, I think you&apos;re making a valid point. However, CliParam was not added to improve encapsulation or code structure. It is just a utility to avoid having two containers of (pointers to) Integer/Long objects that were created and discarded again and again. I actually tried to preserve the existing program structure as much as possible, (&quot;small incremental changes&quot;). &lt;/p&gt;</comment>
                            <comment id="12432916" author="mikem" created="Wed, 6 Sep 2006 18:59:34 +0100"  >&lt;p&gt;From the comments I can&apos;t tell where this patch is.  It looks like there was a review with some suggestions by Kathy who &lt;br/&gt;
did not want to commit without changes.  Dyre, do you still think this patch should be committed, or are you planning an&lt;br/&gt;
update but  it is just a low priority?  &lt;/p&gt;</comment>
                            <comment id="12435890" author="rhillegas" created="Tue, 19 Sep 2006 16:32:45 +0100"  >&lt;p&gt;Moving to 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12440171" author="dyret" created="Thu, 5 Oct 2006 16:47:58 +0100"  >&lt;p&gt;Removing patch available, since the latest patch no longer can be applied to the trunk.&lt;/p&gt;</comment>
                            <comment id="12444234" author="dyret" created="Tue, 24 Oct 2006 08:26:49 +0100"  >&lt;p&gt;Here is a new patch that tries to address K. Marsden&apos;s concerns. The parameter book-keeping is now hidden inside DRDAStatement, and the interface has been extended accordingly.&lt;br/&gt;
The testcase for the regression introduced by one of the earlier versions of the patch is still in the patch. Both derbyall and suites.All ran without failures. Please review. Thanks.&lt;/p&gt;</comment>
                            <comment id="12444279" author="knutanders" created="Tue, 24 Oct 2006 11:56:52 +0100"  >&lt;p&gt;I think the patch looks good. A couple of minor issues that could be fixed for extra bonus:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;addDrdaParamType() and addExtPos() contain similar code for growing an array. Could it be factored out?&lt;/li&gt;
	&lt;li&gt;jira815Test() lacks indentation (incorrect tab width?)&lt;/li&gt;
	&lt;li&gt;typos in comments in DRDAStatement: initailization, autmatically, paramters&lt;/li&gt;
	&lt;li&gt;typo in javadoc for jira815Test: intruduced&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12444594" author="dyret" created="Wed, 25 Oct 2006 08:38:53 +0100"  >&lt;p&gt;New patch which addresses KAH&apos;s comments. (No new stat file since no new files have been touched). derbyall and suites.All both passed.&lt;/p&gt;</comment>
                            <comment id="12444641" author="knutanders" created="Wed, 25 Oct 2006 12:56:28 +0100"  >&lt;p&gt;Thanks Dyre. Committed revision 467612.&lt;/p&gt;</comment>
                            <comment id="12531603" author="kmarsden" created="Mon, 1 Oct 2007 20:15:43 +0100"  >&lt;p&gt;Reopen to backport to 10.2 so that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3085&quot; title=&quot;Fails to handle BLOB fields with a PreparedStatement with size &amp;gt;32750 bytes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3085&quot;&gt;&lt;del&gt;DERBY-3085&lt;/del&gt;&lt;/a&gt; can be more easily backported.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12322445" name="d815_regress.diff" size="692" author="dyret" created="Sun, 29 Jan 2006 00:24:59 +0000"/>
                            <attachment id="12322434" name="d815_regress.java" size="3075" author="army" created="Sat, 28 Jan 2006 07:40:02 +0000"/>
                            <attachment id="12322169" name="derby-815.diff" size="31230" author="dyret" created="Fri, 20 Jan 2006 20:51:58 +0000"/>
                            <attachment id="12322993" name="derby-815.html" size="3221" author="dyret" created="Wed, 15 Feb 2006 22:05:21 +0000"/>
                            <attachment id="12323222" name="derby-815.v3.diff" size="36787" author="dyret" created="Tue, 21 Feb 2006 14:58:01 +0000"/>
                            <attachment id="12323198" name="derby-815.v3.html" size="2617" author="dyret" created="Tue, 21 Feb 2006 02:13:10 +0000"/>
                            <attachment id="12323223" name="derby-815.v3.stat" size="685" author="dyret" created="Tue, 21 Feb 2006 14:58:01 +0000"/>
                            <attachment id="12337399" name="derby-815.v4.diff" size="21019" author="dyret" created="Mon, 24 Jul 2006 13:18:02 +0100"/>
                            <attachment id="12337400" name="derby-815.v4.stat" size="823" author="dyret" created="Mon, 24 Jul 2006 13:18:02 +0100"/>
                            <attachment id="12343510" name="derby-815.v5.diff" size="21334" author="dyret" created="Tue, 24 Oct 2006 08:26:49 +0100"/>
                            <attachment id="12343511" name="derby-815.v5.stat" size="912" author="dyret" created="Tue, 24 Oct 2006 08:26:49 +0100"/>
                            <attachment id="12343599" name="derby-815.v6.diff" size="21183" author="dyret" created="Wed, 25 Oct 2006 08:38:53 +0100"/>
                            <attachment id="12322994" name="derby-815_2.diff" size="35989" author="dyret" created="Wed, 15 Feb 2006 22:09:46 +0000"/>
                            <attachment id="12337401" name="derbyall_report.v4.txt" size="45790" author="dyret" created="Mon, 24 Jul 2006 13:18:02 +0100"/>
                            <attachment id="12323224" name="derbyall_report_with_jdk1.4.v3.txt" size="12914" author="dyret" created="Tue, 21 Feb 2006 14:58:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Jan 2006 04:12:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29716</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0wg7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39075</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>