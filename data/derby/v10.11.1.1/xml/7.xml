<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-7/DERBY-7.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-7] Bug in NULLIF Function</title>
                <link>https://issues.apache.org/jira/browse/DERBY-7</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Reporting for Christian d&apos;Heureuse, filed on derby-dev list.&lt;/p&gt;

&lt;p&gt;The NULLIF built-in function of Cloudscape 10.0.1.0 beta seems to accept&lt;br/&gt;
only string values.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;p&gt; values nullif(&apos;a&apos;,&apos;b&apos;);&lt;br/&gt;
 --&amp;gt; OK&lt;/p&gt;

&lt;p&gt; values nullif(1,2);&lt;br/&gt;
 --&amp;gt; Error message: &quot;ERROR 42X89: Types &apos;CHAR&apos; and&lt;br/&gt;
     &apos;INTEGER&apos; are not type compatible. (Neither type&lt;br/&gt;
     is assignable to the other type.)&quot;&lt;/p&gt;</description>
                <environment></environment>
        <key id="27486">DERBY-7</key>
            <summary>Bug in NULLIF Function</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="tulika">Tulika Agrawal</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Sep 2004 01:44:01 +0100</created>
                <updated>Tue, 17 Oct 2006 18:44:39 +0100</updated>
                            <resolved>Fri, 5 May 2006 20:48:02 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="56929" author="maverick" created="Tue, 21 Dec 2004 09:20:11 +0000"  >
&lt;p&gt;The following needs to be commented out in ConditionalNode.bindExpression() as a solution for NULLIF to accept INT&lt;br/&gt;
In trunk/java/engine/org/pacahe/derby/impl/sql/compile/ConditionalNode.java&lt;/p&gt;



&lt;p&gt;	/* ALL COMMENTED OUT BELOW, NO NEED FOR FOLLOWING VALIDATION BETWEEN &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;thenExpression and elseExpression&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;        if (! thenExpression.getTypeCompiler().&lt;br/&gt;
			 comparable(elseExpression.getTypeId(), false, getClassFactory()) &amp;amp;&amp;amp;&lt;br/&gt;
			! cu.assignableTo(thenExpression.getTypeId().getCorrespondingJavaTypeName(),&lt;br/&gt;
							  elseExpression.getTypeId().getCorrespondingJavaTypeName()) &amp;amp;&amp;amp;&lt;br/&gt;
			! cu.assignableTo(elseExpression.getTypeId().getCorrespondingJavaTypeName(),&lt;br/&gt;
							  thenExpression.getTypeId().getCorrespondingJavaTypeName()))&lt;/p&gt;
		{
			throw StandardException.newException(SQLState.LANG_NOT_TYPE_COMPATIBLE, 
						thenExpression.getTypeId().getSQLTypeName(),
						elseExpression.getTypeId().getSQLTypeName()
						);
		
}
&lt;ul&gt;
	&lt;li&gt;ALL COMMENTED OUT ABOVE&lt;br/&gt;
        */&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Also I have checked various cases where the following code if it is removed may cause problems.&lt;br/&gt;
The cases are:-&lt;/p&gt;

&lt;p&gt;1. An int and a char e.g. NULLIF(1,&apos;pqr&apos;); where pqr is a generic string and not a name of column.&lt;br/&gt;
It returns the message ERROR 42818: Comparisons between &apos;INTEGER&apos; and &apos;CHAR&apos; are not supported.&lt;/p&gt;

&lt;p&gt;2. An int and a column_name passed. If column_type and other expression are of same type, it works. If type of column_name passed and the other expression are of differrent types it fails with a proper message ERROR 42818: Comparisons between &apos;INTEGER&apos; and &apos;CHAR&apos; are not supported.&lt;br/&gt;
i.e it works between type compatible expressions.&lt;/p&gt;

&lt;p&gt;I will submit a patch soon.&lt;/p&gt;

&lt;p&gt;Kindly verify and post any comments to this proposed solution.&lt;/p&gt;</comment>
                            <comment id="56932" author="chdh@inventec.ch" created="Tue, 21 Dec 2004 10:56:56 +0000"  >&lt;p&gt;After commenting out these lines in ConditionalNode.bindExpression(), what data types are returned from the following expressions?&lt;/p&gt;

&lt;p&gt; nullif(1,2)&lt;br/&gt;
 nullif(cast(null as int),2)&lt;/p&gt;

&lt;p&gt;These expressions should return INTEGER and not CHAR!&lt;/p&gt;</comment>
                            <comment id="56962" author="maverick" created="Wed, 22 Dec 2004 10:12:42 +0000"  >&lt;p&gt;It returns for &lt;/p&gt;

&lt;p&gt;nullif(1,2) --&amp;gt; returns 1&lt;/p&gt;

&lt;p&gt;nullif(cast(null as int),2) --&amp;gt; returns 0&lt;/p&gt;

&lt;p&gt;Also it returns an int and not as a char. I took nullif() as one column of &lt;br/&gt;
select statement and it ResultSetMetaData returns java.sql.Types.INTEGER.&lt;/p&gt;

&lt;p&gt;Further Oracle works in same way.&lt;/p&gt;





</comment>
                            <comment id="56969" author="chdh@inventec.ch" created="Wed, 22 Dec 2004 13:49:33 +0000"  >&lt;p&gt;&amp;gt; nullif(cast(null as int),2) --&amp;gt; returns 0&lt;/p&gt;

&lt;p&gt;Should return 2?&lt;/p&gt;</comment>
                            <comment id="56977" author="chdh@inventec.ch" created="Wed, 22 Dec 2004 15:23:18 +0000"  >&lt;p&gt;Sorry, ignore my previous comment. I had mistaken nullif() with isnull/coalesce().&lt;/p&gt;

&lt;p&gt;The expression&lt;br/&gt;
 values nullif(1,1)&lt;br/&gt;
should return the value&lt;br/&gt;
 cast(null as int)&lt;/p&gt;

&lt;p&gt;In sqlgrammar.jj there is the following comment:&lt;br/&gt;
// &quot;NULLIF(L, R)&quot; is the same as &quot;L=R ? CAST(NULL AS CHAR(1)) : L&quot;&lt;/p&gt;

&lt;p&gt;I think the problem is:&lt;br/&gt;
 thenExpression = CAST(NULL AS CHAR(1)) = type CHAR&lt;br/&gt;
 elseExpression = L = type INT&lt;br/&gt;
==&amp;gt; CHAR and INT are not compatible.&lt;/p&gt;

&lt;p&gt;To solve this problem, the data type of L (leftExpression) could be used to build the NULL constant node, instead of CHAR(1).&lt;/p&gt;</comment>
                            <comment id="56992" author="bandaram" created="Wed, 22 Dec 2004 19:14:37 +0000"  >&lt;p&gt;Good observations... The defect has been around for sometime, but I think suggested fix by commenting out code in ConditionalNode is incorrect. If I remember right, that caused other issues.&lt;/p&gt;

&lt;p&gt;Since there has been some interest in fixing this defect, I can volunteer to look at possible fix. Christian suggestion seems to be in the right direction, but I need to do more research.&lt;/p&gt;</comment>
                            <comment id="57001" author="maverick" created="Thu, 23 Dec 2004 02:05:43 +0000"  >&lt;p&gt;I don&apos;t think so I have seen anything on issues with Nullif on the mailing lists.&lt;br/&gt;
Can you elaborate more on what are the issues ?&lt;/p&gt;
</comment>
                            <comment id="57068" author="maverick" created="Mon, 27 Dec 2004 10:14:21 +0000"  >&lt;p&gt;Before I comment on Christian&apos;s note, we need to read what nullif definition says at link below :- &lt;br/&gt;
&lt;a href=&quot;http://incubator.apache.org/derby/manuals/reference/sqlj66.html#IDX910&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://incubator.apache.org/derby/manuals/reference/sqlj66.html#IDX910&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quoting from the above link is the next one line &lt;/p&gt;

&lt;p&gt;For built-in types, this means that the types must be the same or a built-in broadening conversion must exist between the types.&lt;/p&gt;

&lt;p&gt;So if we have say a CHAR and an INT to compare in NULLIF, the CHAR(&apos;1&apos;) will have a built in broadening and Hence get converted to INT(1)&lt;/p&gt;


&lt;p&gt;&amp;gt; The expression&lt;br/&gt;
&amp;gt; values nullif(1,1)&lt;br/&gt;
&amp;gt; should return the value&lt;br/&gt;
&amp;gt; cast(null as int)&lt;/p&gt;

&lt;p&gt;I agree with Christian here.  &lt;/p&gt;

&lt;p&gt;&amp;gt; In sqlgrammar.jj there is the following comment:&lt;br/&gt;
&amp;gt; // &quot;NULLIF(L, R)&quot; is the same as &quot;L=R ? CAST(NULL AS CHAR(1)) : L&quot;&lt;/p&gt;

&lt;p&gt;Also to note was the next line after that in the same file, which says&lt;/p&gt;

&lt;p&gt;// An impl assumption here is that Cloudscape can promote CHAR to any comparable datatypes such as numeric&lt;/p&gt;


&lt;p&gt;&amp;gt; I think the problem is:&lt;br/&gt;
&amp;gt; thenExpression = CAST(NULL AS CHAR(1)) = type CHAR&lt;br/&gt;
&amp;gt; elseExpression = L = type INT&lt;br/&gt;
&amp;gt; ==&amp;gt; CHAR and INT are not compatible.&lt;/p&gt;

&lt;p&gt;I disagree here. Rather it is this way&lt;/p&gt;

&lt;p&gt;thenExpression = CAST(NULL AS CHAR(1)) = type CHAR&lt;br/&gt;
 elseExpression = L = type INT&lt;br/&gt;
check type of INT and CHAR, Since not compatible, &lt;br/&gt;
promote CHAR to INT(built in broadening), &lt;br/&gt;
compare INT and INT and do the comparison&lt;br/&gt;
==&amp;gt; return INT&lt;/p&gt;

&lt;p&gt;Note that &lt;br/&gt;
CAST(NULL as Char(1)) WIll return CHAR&lt;/p&gt;

&lt;p&gt;BUT in below&lt;br/&gt;
NULLIF(CAST(NULL as CHAR(1),1)&lt;/p&gt;

&lt;p&gt;the CAST(NULL as CHAR(1) still returns 1 as CHAR &lt;br/&gt;
but gets converted to INT &lt;br/&gt;
as soon as it has to be compared to an INT.&lt;/p&gt;



&lt;p&gt;&amp;gt;To solve this problem, the data type of L (leftExpression) could be used to build the NULL &amp;gt;constant node, instead of CHAR(1).&lt;/p&gt;

&lt;p&gt;That is what is happenning, I hope the above helps in clarifying that&lt;br/&gt;
else I can explain that using code from ConditionalNode.bindExpression()&lt;/p&gt;




</comment>
                            <comment id="57072" author="chdh@inventec.ch" created="Mon, 27 Dec 2004 15:00:22 +0000"  >&lt;p&gt;I agree with the comments of Amit.&lt;/p&gt;

&lt;p&gt;The following code in ConditionalNode.bindExpression() determines the result type of NULLIF():&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Set the result type of this conditional to be the dominant type&lt;/li&gt;
		&lt;li&gt;of the result expressions.&lt;br/&gt;
*/&lt;br/&gt;
setType(thenElseList.getDominantTypeServices());&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;DataTypeDescriptor.getDominantType() returns the type with the higher typePrecedence value.&lt;br/&gt;
The typePrecedence values for CHAR and INT are defined in TypeId.java:&lt;br/&gt;
 CHAR_PRECEDENCE = 0&lt;br/&gt;
 INT_PRECEDENCE = 50&lt;/p&gt;

&lt;p&gt;So the &quot;dominant&quot; type between CHAR(1) and INT is INT.&lt;br/&gt;
The result type of NULLIF() is set to INT.&lt;br/&gt;
At the end of bindExpression(), a CAST node is inserted into thenExpression, to convert the NULL constant from CHAR to INT.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;/p&gt;

&lt;p&gt;In ConditionalNode.bindExpression() there is the following comment:&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;If it is comparable, then we are ok.  Note that we&lt;/li&gt;
		&lt;li&gt;could in fact allow any expressions that are convertible()&lt;/li&gt;
		&lt;li&gt;since we are going to generate a cast node, but that might&lt;/li&gt;
		&lt;li&gt;be confusing to users...&lt;br/&gt;
*/&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Maybe this explains the reason, why the type compatibility check (the one that Amit suggests to comment out) was added to bindExpression(): It &quot;might be confusing to users...&quot;?&lt;/p&gt;

&lt;p&gt;To prevent this &quot;user confusion&quot;, the term &quot;built-in broadening conversion&quot; should be clarified.&lt;br/&gt;
What is a &quot;broadening conversion&quot;? Is the return value type of NULLIF() the &quot;broadened type&quot;?&lt;br/&gt;
But then, why is a conversion from CHAR to INT a &quot;broadening conversion&quot;? CHAR would be the &quot;broader&quot; type than INT. (All INT values can be converted to CHAR, but not all CHAR values can be converted to INT.)&lt;br/&gt;
Or is the return type the &quot;narrower&quot; type?&lt;/p&gt;

&lt;p&gt;An better solution would be to define that the result type of NULLIF() is the &quot;dominant&quot; type, which is the one that comes first in the following list:&lt;br/&gt;
USER-defined, BLOB, LONGVARBIT, VARBIT, BIT, BOOLEAN, TIME, TIMESTAMP, DATE, DOUBLE, REAL, DECIMAL, NUMERIC, LONGINT, INT, SMALLINT, TINYINT, REF, NATIONAL_LONGVARCHAR, NATIONAL_VARCHAR, NATIONAL_CHAR, CLOB, NCLOB, LONGVARCHAR, VARCHAR, CHAR.&lt;br/&gt;
For DECIMAL/NUMERIC types, scale and precision are broadened to matche both input types.&lt;/p&gt;</comment>
                            <comment id="57076" author="bandaram" created="Mon, 27 Dec 2004 21:55:39 +0000"  >&lt;p&gt;There was a related bug that Derby tried to address before going OPEN SOURCE. &lt;/p&gt;

&lt;p&gt;ij&amp;gt; values (case when 1.0=1.0 then null else 10 end);&lt;br/&gt;
ERROR 42X89: Types &apos;CHAR&apos; and &apos;INTEGER&apos; are not type compatible. (Neither type i&lt;br/&gt;
s assignable to the other type.)&lt;/p&gt;

&lt;p&gt;The above statement should have returned NULL instead. Don&apos;t remember who worked on that bug, but I might have mistaken this NULLIF issue with that one. I think issues here may be slightly different...&lt;/p&gt;</comment>
                            <comment id="57077" author="chdh@inventec.ch" created="Mon, 27 Dec 2004 22:45:38 +0000"  >&lt;p&gt;I think this is the same problem, because NULLIF() and CASE (whenThenExpression) both are implemented using CONDITIONAL_NODE.&lt;/p&gt;

&lt;p&gt;But for CASE, the error can be avoided by using &quot;CAST(NULL as INT)&quot; instead of an untyped NULL:&lt;/p&gt;

&lt;p&gt;  values (case when 1.0=1.0 then cast(null as int) else 10 end);&lt;/p&gt;

&lt;p&gt;For NULLIF() this is not possible.&lt;/p&gt;</comment>
                            <comment id="57079" author="jboynes" created="Tue, 28 Dec 2004 01:05:14 +0000"  >&lt;p&gt;According to the SQL spec (ISO/IEC 9075-2:2003)&lt;/p&gt;

&lt;p&gt;NULLIF (V1, V2) is equivalent to the following &amp;lt;case specification&amp;gt;:&lt;br/&gt;
CASE WHEN V1=V2 THEN NULL ELSE V1 END&lt;/p&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;p&gt;The declared type of a &amp;lt;case specification&amp;gt; is determined by applying Subclause 9.3, &quot;Data types of results of aggregations&quot;, to the declared types of all &amp;lt;result expression&amp;gt;s in the &amp;lt;case specification&amp;gt;.&lt;/p&gt;

&lt;p&gt;9.3 is long but basically says that the type of the result will be the type of V1 as the type of NULL is undefined.&lt;/p&gt;

&lt;p&gt;As part of this V1 and V2 must be comparable. Therefore, as I read it, NULLIF(&apos;a&apos;, 1) should raise an exception as &apos;a&apos; cannot be converted to a numeric but NULLIF(&apos;1&apos;, 1) should return NULL with type CHAR(1) and NULLIF(1, &apos;1&apos;) should return NULL with type INTEGER. Of course the type of NULL is fairly meaningless but it would have an impact if we were referencing columns instead.&lt;/p&gt;</comment>
                            <comment id="57082" author="maverick" created="Tue, 28 Dec 2004 08:46:48 +0000"  >&lt;p&gt;I think we agree on one thing for nullif(l,r),&lt;br/&gt;
the datatype of what is returned will be of type l.&lt;/p&gt;

&lt;p&gt;Also&lt;/p&gt;

&lt;p&gt; The expression&lt;br/&gt;
 values nullif(1,1)&lt;br/&gt;
 should return the value&lt;br/&gt;
 cast(null as int) &lt;/p&gt;

&lt;p&gt;gives the same result as output.&lt;/p&gt;

&lt;p&gt;Some other things to note  &lt;/p&gt;

&lt;p&gt;1. nullif(&apos;a&apos;,&apos;b&apos;);&lt;br/&gt;
2. nullif(1,2);&lt;/p&gt;

&lt;p&gt;3. nullif(&apos;a&apos;, 1);&lt;br/&gt;
4. nullif(1, &apos;a&apos;);&lt;br/&gt;
5. nullif(CAST(NULL as Char(1)), 1)&lt;br/&gt;
6. nullif(1, CAST(NULL as Char(1)))&lt;/p&gt;

&lt;p&gt;Only 1 and 2 work with the fix, rest all fail.&lt;/p&gt;

&lt;p&gt;So kindly let me know if you guys approve the fix. &lt;br/&gt;
If not, kindly update what is missing which needs to be fixed or is not being fixed with the patch proposed.&lt;/p&gt;

&lt;p&gt;Please do vote in favour or against with some justification.&lt;/p&gt;</comment>
                            <comment id="57093" author="chdh@inventec.ch" created="Tue, 28 Dec 2004 17:00:34 +0000"  >&lt;p&gt;I approve the fix and I agree that NULLIF(L,R) should return the data type of L (and does so with the fix).&lt;/p&gt;

&lt;p&gt;But the proposed fix also affects the CASE expression.&lt;/p&gt;

&lt;p&gt; CASE WHEN BooleanExpression THEN thenExpression ELSE elseExpression END&lt;/p&gt;

&lt;p&gt;The effect of the fix is that CASE accepts values that are not &quot;type compatible&quot; (for thenExpression and elseExpression), e.g. CHAR and INT.&lt;br/&gt;
CASE returns the &quot;dominant&quot; type of thenExpression and elseExpression (see DataTypeDescriptor.getDominantType()). The &quot;dominant&quot; type is the one that comes first in the list &lt;/p&gt;
{USER-defined, BLOB, LONGVARBIT, ... CHAR}
&lt;p&gt; (according to the typePrecedence constants in TypeId.java). For DECIMAL/NUMERIC types, scale and precision are broadened to matche both input types.&lt;/p&gt;

&lt;p&gt;The documentation of NULLIF and CASE in the reference manual should be complemented.&lt;br/&gt;
see &lt;a href=&quot;http://incubator.apache.org/derby/manuals/reference/sqlj66.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://incubator.apache.org/derby/manuals/reference/sqlj66.html&lt;/a&gt;&lt;br/&gt;
NULLIF is currently not explained at all.&lt;br/&gt;
For CASE, the formulation &quot;a built-in broadening conversion must exist&quot; should be extended and the data type of the result should be documented.&lt;/p&gt;</comment>
                            <comment id="57096" author="jboynes" created="Tue, 28 Dec 2004 18:09:32 +0000"  >&lt;p&gt;The fix seems address the issue with non-CHAR types being used.&lt;/p&gt;

&lt;p&gt;However, it exposes a problem with binary comparisons where it is not possible to compare CHAR and INTEGER types:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values(nullif(&apos;1&apos;, 1));&lt;br/&gt;
ERROR 42818: Comparisons between &apos;CHAR&apos; and &apos;INTEGER&apos; are not supported.&lt;br/&gt;
ij&amp;gt; values (case when &apos;1&apos; = 1 THEN 2 ELSE 3 END);&lt;br/&gt;
ERROR 42818: Comparisons between &apos;CHAR&apos; and &apos;INTEGER&apos; are not supported.&lt;/p&gt;

&lt;p&gt;I believe though that this is a separate issue affecting all comparisons.&lt;/p&gt;</comment>
                            <comment id="57450" author="maverick" created="Mon, 10 Jan 2005 16:57:39 +0000"  >&lt;p&gt;Submitting Patch as per discussion.&lt;/p&gt;</comment>
                            <comment id="57487" author="bandaram" created="Tue, 11 Jan 2005 07:31:48 +0000"  >&lt;p&gt;Is anyone concerned that the proposed patch also accepts this:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values (case when 1=2 then 5 else &apos;6&apos; end);&lt;br/&gt;
1&lt;br/&gt;
-----------&lt;br/&gt;
6&lt;/p&gt;

&lt;p&gt;I think it shouldn&apos;t. I have a feeling we are not confirming to SQL standard (ISO/IEC 9075-2:2003) 9.3 section, &apos;Data types of results of aggregations&apos; here.&lt;/p&gt;

&lt;p&gt;Satheesh&lt;/p&gt;</comment>
                            <comment id="57488" author="chdh@inventec.ch" created="Tue, 11 Jan 2005 08:26:32 +0000"  >&lt;p&gt;&amp;gt; I have a feeling we are not confirming to SQL standard&lt;/p&gt;

&lt;p&gt;Are you referring to the syntax rule that states that all arguments &quot;shall&quot; be character strings, if any argument is character string?&lt;/p&gt;

&lt;p&gt;&quot;9075-2 9.3 Data types of results of aggregations&lt;br/&gt;
...&lt;br/&gt;
Syntax Rules&lt;br/&gt;
3. a) If any of the data types in DTS is character string, then all data types in DTS shall be character string, ...&quot;&lt;/p&gt;

&lt;p&gt;The term &quot;shall&quot; is defined as:&lt;/p&gt;

&lt;p&gt;&quot;9075-1 6.2.3.3 Terms denoting rule requirements&lt;br/&gt;
In the Syntax Rules, the term shall defines conditions that are required to be true of syntactically conforming SQL language. ...&lt;br/&gt;
The treatment of language that does not conform to the SQL Formats and Syntax Rules is implementation-dependent. ...&quot;&lt;/p&gt;

&lt;p&gt;The conclusion is that the expression&lt;br/&gt;
 CASE WHEN ... THEN intValue ELSE charValue END&lt;br/&gt;
is non-conforming SQL and may be processed in an implementation-dependent manner.&lt;/p&gt;</comment>
                            <comment id="57721" author="jboynes" created="Wed, 19 Jan 2005 00:57:51 +0000"  >&lt;p&gt;A larger patch that also deals with the use of untyped NULLs in CASE statements. This allows NULLIF to be implemented as (CASE WHEN L=R THEN NULL ELSE L END). Adds a new testcase for various CASE statements and has been tested with the derbylang suite on WinXP/Sun JVM 1.4.2.&lt;/p&gt;

&lt;p&gt;This patch also checks that the values returned by the different branches are compatible using the same check as the COALESCE function. Not sure if this is right, but at least it will be consistent. It might be worth exploring if COALESCE can be implemented as a large CASE statement.&lt;/p&gt;

&lt;p&gt;It also reuses the SQLState codes for a couple of errors as I am not sure of the policy for changing the associated text or adding new ones.&lt;/p&gt;</comment>
                            <comment id="12313328" author="mamtas" created="Sat, 11 Jun 2005 06:57:14 +0100"  >&lt;p&gt;I have been working on this bug for a little while and have a patch which I think resolves issues with NULLIF. Please find the patch Derby7NullIf061005svndiff.txt attached to this bug. &lt;/p&gt;

&lt;p&gt;Following is a brief description of what the proposed fix involves.&lt;br/&gt;
For NULLIF(L,R), parser will generate CASE L=R then untyped NULL else L. Notice that the NULL does not have any type associated with it during parsing. This change went into sqlgrammar.jj&lt;br/&gt;
The existing code in ConditionalNode.bindExpression first binds the condition L=R. At the end of L=R condition binding, we will have determined the type of operand L. I have added cod into ConditionalNode to CAST untyped NULL to the type of L. The exisiting code for L=R binding enforces the Reference Guide Table 1. Comparisons allowed by Derby on page 111 and 112. So answers for what datatypes can be combined in NULLIF can be explained by that table.&lt;br/&gt;
I have added some tests to see what the return type of NULLIF would be for various combinations of :L and R datatypes. I have also added test cases where the first operand to NULLIF is a parameter.&lt;/p&gt;

&lt;p&gt;All the tests pass except one failure below which I don&apos;t think is related to my changes&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: miscerrors jdk1.4.2_07 derbyall:derbylang 2005-06-10 01:43:31 ***&lt;br/&gt;
35 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |92             |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
36 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |92             |0              | wombat                                                                                                                         | null                                             |Failed Statement is: &amp;#8211;                                                                                                         &lt;br/&gt;
37 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |97             |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
38 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |97             |0              | wombat                                                                                                                         | null                                             |Failed Statement is: create table a (one int, two int)                                                                          &lt;br/&gt;
39 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |100            |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
40 del&lt;br/&gt;
&amp;lt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |100            |0              | wombat                                                                                                                         | null                                             |Failed Statement is: create table a (one int)                                                                                   &lt;br/&gt;
40a35,40&lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |91             |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |91             |0              | wombat                                                                                                                         | null                                             |Failed Statement is: &amp;#8211;                                                                                                         &lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |96             |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |96             |0              | wombat                                                                                                                         | null                                             |Failed Statement is: create table a (one int, two int)                                                                          &lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |99             |0              | wombat                                                                                                                         | null                                             |Cleanup action starting                                                                                                         &lt;br/&gt;
&amp;gt; xxxxxxFILTERED-TIMESTAMPxxxxx|main,5,main                             |99             |0              | wombat                                                                                                                         | null                                             |Failed Statement is: create table a (one int)                                                                                   &lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   miscerrors jdk1.4.2_07 derbyall:derbylang 2005-06-10 01:43:48 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Output of svn stat&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ConditionalNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\sqlgrammar.jj&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\coalesceTests.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\resultset.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\resultset.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\resultset.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\resultset.out&lt;/p&gt;</comment>
                            <comment id="12317454" author="mamtas" created="Wed, 3 Aug 2005 07:47:13 +0100"  >&lt;p&gt;Adding a new patch to the bug named derby7Nullif080205svndiff.txt since the old patch has gotten out of sync.&lt;/p&gt;

&lt;p&gt;svn stat has remain unchanged since the last patch and the changes are also the same as the last patch.&lt;/p&gt;</comment>
                            <comment id="12317554" author="bandaram" created="Thu, 4 Aug 2005 10:44:18 +0100"  >&lt;p&gt;I submitted this patch to trunk. I noticed a build.xml file was changed under iapi/types directory that didn&apos;t look related to this bug, so I didn&apos;t submit that change. &lt;/p&gt;</comment>
                            <comment id="12317633" author="mamtas" created="Fri, 5 Aug 2005 00:50:07 +0100"  >&lt;p&gt;The build.xml change didn&apos;t belong to this patch as Satheesh guessed. Thanks for catching it.&lt;/p&gt;</comment>
                            <comment id="12363673" author="kristwaa" created="Mon, 23 Jan 2006 23:03:09 +0000"  >&lt;p&gt;I verified that the initial reported error no longer occurs, but the discussion for this issue is somewhat volumnious and several other (potential) problems are mentioned.&lt;br/&gt;
Could someone with more knowledge about this field confirm that this issue is fixed and that no more work is to be done on it?&lt;br/&gt;
If true, please close the issue.&lt;/p&gt;</comment>
                            <comment id="12364192" author="mamtas" created="Fri, 27 Jan 2006 16:42:30 +0000"  >&lt;p&gt;Prior to submitting a patch for this issue, I had gone through all the activities on this issue in JIRA and on Derby mailing list. I don&apos;t think any outstanding issues are left on it, so I am marking this as closed.&lt;/p&gt;</comment>
                            <comment id="12377766" author="bernt" created="Thu, 4 May 2006 18:55:14 +0100"  >&lt;p&gt;Merge to 10.1 branch&lt;/p&gt;</comment>
                            <comment id="12377768" author="bernt" created="Thu, 4 May 2006 18:56:18 +0100"  >&lt;p&gt;Committed revision 399657 on 10.1 branch&lt;/p&gt;</comment>
                            <comment id="12377769" author="bernt" created="Thu, 4 May 2006 18:57:30 +0100"  >&lt;p&gt;Ooops.... lost the fixed 10.2....&lt;/p&gt;</comment>
                            <comment id="12377852" author="myrna" created="Fri, 5 May 2006 01:46:39 +0100"  >&lt;p&gt;Hi Berndt,&lt;/p&gt;

&lt;p&gt;I happened to spot the following in your check-in for revision 399657 for the test jdbcapi/resultset.java:&lt;/p&gt;

&lt;p&gt;+                               } catch(SQLException ex){&lt;br/&gt;
+                                       if (ex.getSQLState().equals(&quot;22005&quot;)) &lt;/p&gt;
{
+                                               if (s.getBytes (i) != null)
+                row.append(new String(s.getBytes(i)));
+                                               else
+                row.append(s.getBytes(i));
+                                       }
&lt;p&gt; else throw ex; &lt;br/&gt;
+                               }&lt;/p&gt;

&lt;p&gt;I think what has happened here is that you applied original patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-7&quot; title=&quot;Bug in NULLIF Function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-7&quot;&gt;&lt;del&gt;DERBY-7&lt;/del&gt;&lt;/a&gt; to 10.1. &lt;/p&gt;

&lt;p&gt;However, the test resultset.java has since had some work done on it, and I&apos;m specifically concerned that you may have missed the changes I worked on for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-903&quot; title=&quot;Remove use of String(byte[]) and String(byte[], int, int) constructors in testing leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-903&quot;&gt;&lt;del&gt;DERBY-903&lt;/del&gt;&lt;/a&gt;, which were committed with revision 378337 and 379643. &lt;/p&gt;

&lt;p&gt;This eliminates the use of the constructor &apos;new String(bytes[]), which is non-portable...It constructs a string by decoding the bytes using the default platform charset. This can lead to encoding related problems.  For this case, you should probably use the constructor that takes in the encoding. ie new String(byte[], String charsetname). &lt;/p&gt;

&lt;p&gt;Can you please rework this section of resultset.java to not use an encoding-safe mechanism? &lt;br/&gt;
Just compare with the current 10.2 resultset.java...&lt;/p&gt;

&lt;p&gt;Thx,&lt;br/&gt;
Myrna&lt;/p&gt;</comment>
                            <comment id="12377889" author="myrna" created="Fri, 5 May 2006 05:20:41 +0100"  >&lt;p&gt;Oops, at least one line in my previous comment is suffering from bad editing...I meant:&lt;/p&gt;

&lt;p&gt;&quot;Can you please rework this section of resultset.java to use an encoding-safe mechanism? &quot;&lt;/p&gt;
</comment>
                            <comment id="12377982" author="bernt" created="Fri, 5 May 2006 16:31:55 +0100"  >&lt;p&gt;Need to apply changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-903&quot; title=&quot;Remove use of String(byte[]) and String(byte[], int, int) constructors in testing leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-903&quot;&gt;&lt;del&gt;DERBY-903&lt;/del&gt;&lt;/a&gt; in 10.1 branch&lt;/p&gt;</comment>
                            <comment id="12378021" author="bernt" created="Fri, 5 May 2006 20:45:47 +0100"  >&lt;p&gt;Changes to java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultset.java as a result of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-7&quot; title=&quot;Bug in NULLIF Function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-7&quot;&gt;&lt;del&gt;DERBY-7&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-903&quot; title=&quot;Remove use of String(byte[]) and String(byte[], int, int) constructors in testing leading to non-portable behaviour&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-903&quot;&gt;&lt;del&gt;DERBY-903&lt;/del&gt;&lt;/a&gt; was applied in the oposite order on 10.1 compared to trunk.&lt;/p&gt;</comment>
                            <comment id="12378022" author="bernt" created="Fri, 5 May 2006 20:48:30 +0100"  >&lt;p&gt;Committed revision 400066.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12353388">DERBY-1967</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12326306" name="DERBY-903-changes-for-10.1-branch.diff" size="817" author="bernt" created="Fri, 5 May 2006 20:45:47 +0100"/>
                            <attachment id="18596" name="Derby-7.txt" size="1225" author="maverick" created="Mon, 10 Jan 2005 16:57:39 +0000"/>
                            <attachment id="12310665" name="Derby7NullIf061005svndiff.txt" size="169009" author="mamtas" created="Sat, 11 Jun 2005 06:59:02 +0100"/>
                            <attachment id="18669" name="derby-nullif.patch" size="22987" author="jboynes" created="Wed, 19 Jan 2005 00:57:51 +0000"/>
                            <attachment id="12311519" name="derby7Nullif080205svndiff.txt" size="170048" author="" created="Wed, 3 Aug 2005 07:44:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Dec 2004 09:20:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21710</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy145b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40322</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>