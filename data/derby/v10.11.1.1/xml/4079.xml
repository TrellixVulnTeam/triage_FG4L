<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4079/DERBY-4079.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4079] Add support for SQL:2008 &lt;result offset clause&gt; and &lt;fetch first clause&gt; to limit result set cardinality</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4079</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;SQL 2008 has added new syntax to support a direct way to limit the&lt;br/&gt;
returned set of rows in a result set.  This allows an application to&lt;br/&gt;
retrieve only some rows of an otherwise larger result set, similar to&lt;br/&gt;
the popular LIMIT clauses use in some databases.&lt;/p&gt;

&lt;p&gt;Up till now, in Derby (and SQL) we have had to use the ROW_NUMBER()&lt;br/&gt;
function in a nested subquery to achieve the effect of the &amp;lt;fetch&lt;br/&gt;
first clause&amp;gt;, cf. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2998&quot; title=&quot;Add support for ROW_NUMBER() window function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2998&quot;&gt;&lt;del&gt;DERBY-2998&lt;/del&gt;&lt;/a&gt;, a method which is rather more indirect&lt;br/&gt;
and still not efficient (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3505&quot; title=&quot;Current implementation of ROW_NUMBER() window function does not stop execution once criteria is met&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3505&quot;&gt;DERBY-3505&lt;/a&gt;), and primarily intended for OLAP&lt;br/&gt;
functionality, perhaps.&lt;/p&gt;

&lt;p&gt;There has been no direct way to achieve the effect of the &amp;lt;result&lt;br/&gt;
offset clause&amp;gt; via SQL.&lt;/p&gt;

&lt;p&gt;Syntax (cf. SQL 2008, section 7.13):&lt;br/&gt;
       &amp;lt;result offset clause&amp;gt; ::= OFFSET &amp;lt;n&amp;gt; &lt;/p&gt;
{ROW | ROWS}&lt;br/&gt;
       &amp;lt;fetch first clause&amp;gt; ::=      FETCH {FIRST | NEXT} &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;lt;n&amp;gt;&amp;#93;&lt;/span&gt; {ROW | ROWS}
&lt;p&gt; ONLY&lt;/p&gt;

&lt;p&gt;where &amp;lt;n&amp;gt; is an integer. The two clauses syntactically follow the ORDER BY&lt;br/&gt;
clause in the grammar.&lt;/p&gt;

&lt;p&gt;Note that both ORDER BY and the new clauses above are allowed also in&lt;br/&gt;
subqueries in the new version of the SQL standard (section 7.13). I&lt;br/&gt;
only propose to include this at the top level in DERBY for now. (ORDER&lt;br/&gt;
BY is presently also not allowed in subqueries in Derby since SQL&lt;br/&gt;
didn&apos;t allow for this until SQL 2008 either).&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12415975">DERBY-4079</key>
            <summary>Add support for SQL:2008 &lt;result offset clause&gt; and &lt;fetch first clause&gt; to limit result set cardinality</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Mar 2009 03:12:59 +0000</created>
                <updated>Tue, 11 May 2010 00:53:50 +0100</updated>
                            <resolved>Fri, 20 Mar 2009 18:10:51 +0000</resolved>
                                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12678224" author="dagw" created="Tue, 3 Mar 2009 03:28:38 +0000"  >&lt;p&gt;Uploading ref.zip, which contains HTML version of possible docs for this feature for refman.&lt;/p&gt;</comment>
                            <comment id="12678313" author="knutanders" created="Tue, 3 Mar 2009 13:27:18 +0000"  >&lt;p&gt;I don&apos;t have a copy of SQL 2008 yet, so I can&apos;t comment on the syntax, but the docs look good to me. I did however struggle with understanding this sentence:&lt;/p&gt;

&lt;p&gt;&amp;gt; If the underlying result set is not materialized (depends on query), the use of this clause can give efficiency benefits.&lt;/p&gt;

&lt;p&gt;What I don&apos;t quite understand, is the implication that we won&apos;t see efficiency benefits if the underlying result set is materialized, but I&apos;m probably just misunderstanding what you are comparing (or perhaps misunderstanding how you&apos;re planning to implement it).&lt;/p&gt;

&lt;p&gt;If you are comparing the time it takes to execute SELECT * FROM LARGE_TABLE and SELECT * FROM LARGE_TABLE FETCH FIRST 10 ROWS ONLY and fetch the full result, I understand that it would be faster with the FETCH clause than without if the underlying result set is not materialized, because you just stop after fetching the first 10 rows whereas the other query goes through the entire table. If the underlying result set is materialized, I understand that it&apos;s probably not going to speed it up significantly in embedded mode, since the same number of rows must be processed in both queries. In a client/server environment it reduces the number of rows to send over the wire, so there we should see an efficiency benefit even if the result set is materialized, I believe.&lt;/p&gt;

&lt;p&gt;If you are comparing the time it takes to read out the columns you&apos;re interested in (just quit calling rs.next() once you&apos;ve fetched N rows), I don&apos;t see that it should make much difference at all whether or not OFFSET/FETCH is used (assuming that the implementation will basically do the same thing, just on a slightly lower level). Again, in a client/server environment you may see higher performance with OFFSET/FETCH because the skipped rows don&apos;t need to go over the wire, and because you limit the number of rows that will be pre-fetched. But I don&apos;t see how this benefit will be affected by whether or not the underlying result set is materialized.&lt;/p&gt;

&lt;p&gt;Perhaps it suffices to say &quot;The use of this clause can give efficiency benefits for some queries&quot; and not qualify it further?&lt;/p&gt;</comment>
                            <comment id="12678342" author="dagw" created="Tue, 3 Mar 2009 15:11:47 +0000"  >&lt;p&gt;Thanks for looking at this, Knut. You are right, there as many aspects&lt;br/&gt;
of the efficiency calculations here, so it is probably better to avoid&lt;br/&gt;
getting into details here (some stuff could go into the tuning manual&lt;br/&gt;
perhaps). As for the materialization point; i was thinking of the case&lt;br/&gt;
where the app fetches the entire result set. In the client/server&lt;br/&gt;
case, the benefits from avoiding shipping all rows over the wire could&lt;br/&gt;
in deed be important, too.&lt;/p&gt;

&lt;p&gt;I will post a preliminary patch in day day or two; I have one that&lt;br/&gt;
seems to work in my sandbox, but I need to clean it up a little first.&lt;/p&gt;</comment>
                            <comment id="12678355" author="dagw" created="Tue, 3 Mar 2009 16:06:41 +0000"  >&lt;p&gt;As noted in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-581&quot; title=&quot;Modify SQL to skip N rows of the result and return the next M rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-581&quot;&gt;&lt;del&gt;DERBY-581&lt;/del&gt;&lt;/a&gt;, new optimization opportunities present themselves to the&lt;br/&gt;
compiler when information on the result set cardinality is know at compilation time.&lt;br/&gt;
This may give further efficiency benefits for some queries.&lt;/p&gt;</comment>
                            <comment id="12678359" author="chaase3" created="Tue, 3 Mar 2009 16:13:30 +0000"  >&lt;p&gt;The draft docs look very good. A few questions and minor language corrections &amp;#8211;&lt;/p&gt;


&lt;p&gt;SELECT statement (rrefsqlj41360.html):&lt;/p&gt;

&lt;p&gt;Should you add a mention of the two new clauses to the first sentence? It still mentions only ORDER BY and FOR UPDATE.&lt;/p&gt;

&lt;p&gt;Also, I am wondering if the syntax should put square brackets around&lt;/p&gt;

&lt;p&gt;  WITH &lt;/p&gt;
{RR|RS|CS|UR}

&lt;p&gt;since this part is also optional? (There should in theory be a separate issue filed for this, but it might never get fixed ...)&lt;/p&gt;

&lt;p&gt;In the sentence about the two new clauses, there should be no &quot;s&quot; after the second one. That is, it should say &quot;The result offset clause and the fetch first clause can be used ...&quot;&lt;/p&gt;

&lt;p&gt;The sentence &quot;The SELECT statement supports the FOR FETCH ONLY clause.&quot; is confusing to me because the syntax in the rrefsqljoffsetfetch.html topic doesn&apos;t include FOR. Should it?&lt;/p&gt;


&lt;p&gt;rrefsqljoffsetfetch.html:&lt;/p&gt;

&lt;p&gt;Title should be &quot;The result offset and fetch first clauses&quot;.&lt;/p&gt;

&lt;p&gt;In the 3rd sentence, change &quot;usually combined also with&quot; to &quot;usually in combination with&quot;.&lt;/p&gt;

&lt;p&gt;I don&apos;t think you need quite so much vertical space around the clauses in the Syntax section.&lt;/p&gt;

&lt;p&gt;Change &lt;/p&gt;

&lt;p&gt;  &quot;The use of ROW or ROWS and FIRST or NEXT are equivalent.&quot; &lt;/p&gt;

&lt;p&gt;to &lt;/p&gt;

&lt;p&gt;  &quot;The use of ROW or ROWS and the use of FIRST or NEXT are equivalent.&quot;&lt;/p&gt;

&lt;p&gt;I expect you&apos;ll be adding some examples to either this topic or the SELECT statement topic or both?&lt;/p&gt;

&lt;p&gt;If you decide to add anything on this subject to the tuning guide topic on materialization, you could presumably reference it here.&lt;/p&gt;</comment>
                            <comment id="12678540" author="dagw" created="Wed, 4 Mar 2009 01:50:50 +0000"  >&lt;p&gt;Uploading a patch for this functionality (only for comments at this&lt;br/&gt;
point).  It does not yet contain a new JUnit test for the feature,&lt;br/&gt;
I&apos;ll add that in the next spin.&lt;/p&gt;

&lt;p&gt;I have tested the patch ad hoc, and it seems for work for what I have&lt;br/&gt;
thrown at it so far.&lt;/p&gt;

&lt;p&gt;Since this feature cuts across a lot of underlying result sets and&lt;br/&gt;
modes (read-only, scrollable, updatable, subqueries etc), it is hard&lt;br/&gt;
to write an exhaustive test. To test whether the presence of an&lt;br/&gt;
additional result set on top of other result sets breaks anything, I&lt;br/&gt;
have done the following experiment: I modified the parser so as to&lt;br/&gt;
always stick in an OFFSET 0 ROWS clause for a top level SELECT. This&lt;br/&gt;
should have no impact on the result set returned.  With that&lt;br/&gt;
modification, I ran the regressions. I uncovered some small issues&lt;br/&gt;
with updatable result sets in this way.  Presently, the only tests&lt;br/&gt;
which fail are canon based tests which compare the execution plan with&lt;br/&gt;
a canon (a diff is to be expected here). For a couple of those I&lt;br/&gt;
compared the plans manually to verify that the only difference was the&lt;br/&gt;
presence of a wrapper result set.&lt;/p&gt;

&lt;p&gt;Patch details:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;/p&gt;

&lt;p&gt;Add the new syntax and stick offset/fetch first values into CursorNode.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/NodeFactoryImpl.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/compile/C_NodeNames.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/sql/compile/C_NodeTypes.java&lt;/p&gt;

&lt;p&gt;Accommodate the new node type RowCountNode.&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/sql/compile/RowCountNode.java&lt;/p&gt;

&lt;p&gt;This node is inserted at optimize time, see CursorNode,&lt;br/&gt;
DMLStatementNode changes. At generation time it will insert a&lt;br/&gt;
RowCountResultSet over the top SELECTs result set, but underneath any&lt;br/&gt;
ScrollInsensitiveResultSet.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/ResultColumn.java&lt;/p&gt;

&lt;p&gt;Adds copying of table name and schema name to the cloneMe method. his&lt;br/&gt;
was needed to handle updatable result sets which expect to see the&lt;br/&gt;
table name in the top result columns. Is this change safe?&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/CursorNode.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/compile/DMLStatementNode.java&lt;/p&gt;

&lt;p&gt;Bind offset/fetch first values (type check, range check) and add a&lt;br/&gt;
RowCountNode to the abstract syntax tree at optimize time. I found&lt;br/&gt;
that inserting this node prior to optimizing the underlying query did&lt;br/&gt;
not work, notably GROUP BY failed.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/ValueNode.java&lt;/p&gt;

&lt;p&gt;Added a method to check if a value is an integer or a bigint, needed&lt;br/&gt;
at bind time of the row counts.&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/sql/execute/RowCountResultSet.java&lt;/p&gt;

&lt;p&gt;This new result set implements the filtering required by this&lt;br/&gt;
functionality. It mostly forwards to it child result set otherwise.&lt;/p&gt;

&lt;p&gt;A      java/engine/org/apache/derby/impl/sql/execute/rts/RealRowCountStatistics.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/execute/RealResultSetStatisticsFactory.java&lt;/p&gt;

&lt;p&gt;Adds run time statistics handling for the new result set.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java&lt;/p&gt;

&lt;p&gt;Relaxed a &quot;final&quot; to be able to override clearCurrentRow in&lt;br/&gt;
RowCountResultSet. RowCountResultSet#clearCurrentRow actually calls&lt;br/&gt;
clearCurrentRow of its source result set, since&lt;br/&gt;
RowCountResultSet#getCurrentRow also asks its source result set for&lt;br/&gt;
the current row. Forwarding these to the child, may not be entirely&lt;br/&gt;
kosher, but I had to do it this way to make it work with the updatable&lt;br/&gt;
cursors. Suggestions of better ways to handle this are welcome.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java&lt;/p&gt;

&lt;p&gt;updateRow will look at the result set for a top ProjectRestrictNode&lt;br/&gt;
and use it for projection. I added code here to get at the&lt;br/&gt;
ProjectRestrictNode from underneath a RowCountResultSet.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/execute/GenericResultSetFactory.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/sql/execute/ResultSetFactory.java&lt;/p&gt;

&lt;p&gt;Accommodate the new result set type.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/types/TypeId.java&lt;/p&gt;

&lt;p&gt;Made BIGINT_ID public, needed by the new method in ValueNode (checkIsInteger).&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M      java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;p&gt;New error messages/execution plan i18n strings and English text for&lt;br/&gt;
them.&lt;/p&gt;

&lt;p&gt;M      tools/jar/DBMSnodes.properties&lt;/p&gt;




</comment>
                            <comment id="12678557" author="dagw" created="Wed, 4 Mar 2009 02:41:35 +0000"  >&lt;p&gt;Thanks for looking at the docs, Kim!&lt;/p&gt;

&lt;p&gt;To answer your question, the FOR FETCH ONLY in an other FETCH entirely, so that&apos;s why it is not mentioned.&lt;/p&gt;

&lt;p&gt;Uploading a patch, derby-4079-docs-1 and an accompanying zip file with the htmls, which fixes&lt;br/&gt;
your comments, hopefully.&lt;/p&gt;</comment>
                            <comment id="12678561" author="dagw" created="Wed, 4 Mar 2009 02:46:15 +0000"  >&lt;p&gt;Marking &quot;Existing Application Impact&quot; since new reserved keywords are added by the patch.&lt;/p&gt;</comment>
                            <comment id="12678956" author="chaase3" created="Wed, 4 Mar 2009 22:20:08 +0000"  >&lt;p&gt;Thanks, Dag, for the doc updates. The SELECT statement topic fixes look great. &lt;/p&gt;

&lt;p&gt;rrefsqljoffsetfetch.html looks great too, though it could use a couple of changes still:&lt;/p&gt;

&lt;p&gt;I think I messed up on the first sentence after the syntax statement. It now appears to say that the use of ROW or ROWS is equivalent to the use of FIRST or NEXT ... not true at all. Perhaps the following (taking a tip from the sentence about FOR FETCH ONLY and FOR READ ONLY in the SELECT statement topic):&lt;/p&gt;

&lt;p&gt;  ROW is synonymous with ROWS, and FIRST is synonymous with NEXT. &lt;/p&gt;

&lt;p&gt;Also, the second sentence in the topic has an unitalicized &quot;result offset clause&quot; &amp;#8211; all other occurrences are italicized. (You could also remove the italics from all but the first occurrence of each clause &amp;#8211; your choice.)&lt;/p&gt;

&lt;p&gt;The examples are helpful. Is there a reason why only the last one has a semicolon?&lt;/p&gt;

&lt;p&gt;In the refderby.ditamap file, the topic title should be the same as the one in the topic.&lt;/p&gt;

&lt;p&gt;Thanks for the explanation of FOR FETCH ONLY. I now see it is explained in the FOR UPDATE topic.&lt;/p&gt;</comment>
                            <comment id="12678967" author="rhillegas" created="Wed, 4 Mar 2009 22:33:13 +0000"  >&lt;p&gt;Thanks for the experimental patch, Dag. The overall approach looks good to me. I have a couple small comments:&lt;/p&gt;

&lt;p&gt;ResultColumn&lt;/p&gt;

&lt;p&gt;The new methods have generic (possibly cloned?) javadoc.&lt;/p&gt;


&lt;p&gt;CursorNode&lt;/p&gt;

&lt;p&gt;It seems to me that since the new offset and fetchFirst fields are known to be NumericConstantNodes, then they should be declared as the most refined type possible, rather than as generic ValueNodes.  I think this will make the code easier to understand.&lt;/p&gt;


&lt;p&gt;DMLStatementNode&lt;/p&gt;

&lt;p&gt;Thanks for the explanation of why you are wrapping the inner result set at that particular point in the code. I find that these explanations are easier to understand if they include a sample problem query which would break if the code were placed somewhere else.&lt;/p&gt;


&lt;p&gt;sqlgrammar.jj&lt;/p&gt;

&lt;p&gt;Do the new FETCH and OFFSET keywords need to be reserved? I realize that the standard may suggest that they should be, but there are plenty of examples of Derby downgrading reserved keywords to non-reserved keywords in order to avoid breaking legacy applications. Same question for ROW, which appears to have been moved from non-reserved to reserved status.&lt;/p&gt;

&lt;p&gt;Similar comment to that for CursorNode: if the new clauses are just NumericConstantNodes, then it makes sense to me to declare them as that refined type.&lt;/p&gt;

&lt;p&gt;I wonder if the offsetClause() and fetchFirstClause() productions could use numericLiteral() rather than literal(). With a little more work, you might be able to get the parser to guarantee that the literal is a non-negative integer and you might be able to skip this check at bind() time.&lt;/p&gt;


&lt;p&gt;GenericResultSetFactory&lt;/p&gt;

&lt;p&gt;I wonder if all of the duplicated debug code could be pulled up into a superclass constructor. Something like &lt;/p&gt;

&lt;p&gt;		if (SanityManager.DEBUG &amp;amp;&amp;amp; SanityManager.DEBUG_ON(&quot;DumpResultSetGeneration&quot;)) &lt;/p&gt;
{
			SanityManager.GET_DEBUG_STREAM().print(&quot;Generated &quot; + getClass().getName() + &quot;\n&quot;);
		}</comment>
                            <comment id="12679080" author="dagw" created="Thu, 5 Mar 2009 05:27:24 +0000"  >&lt;p&gt;Thanks for looking at this patch, Rick!&lt;/p&gt;

&lt;p&gt;Uploading a new version (#2) which contains a new JUnit test&lt;br/&gt;
(OffsetFetchNextTest) and that also addresses your comments, except&lt;br/&gt;
for the one one ResultSetFactory (more below). I moved the checking of&lt;br/&gt;
row count literal type to the parser as you suggested, but kept the&lt;br/&gt;
range checking in the bind phase (cleaner to me), and also now use the&lt;br/&gt;
more specific value node type.&lt;/p&gt;

&lt;p&gt;I added examples as you suggested in the comment in DMLStatementNode.&lt;/p&gt;

&lt;p&gt;I wasn&apos;t able to use a superclass for the SanityManager tests in the&lt;br/&gt;
GenericResultSetFactory (there is no superclass now, and even it there&lt;br/&gt;
were, the classname wold not be helpful (the factory not the result&lt;br/&gt;
set), the code you suggested would need to go into superclasses of the&lt;br/&gt;
result sets themselves, which means I would need to spread this code&lt;br/&gt;
around in the result set (super) classes. I just added that code to be&lt;br/&gt;
able to easily trace what result sets arise at execution time, let me&lt;br/&gt;
know if you think I should remove it (it could be part of another&lt;br/&gt;
patch really..).&lt;/p&gt;

&lt;p&gt;Rerunning regressions.&lt;/p&gt;
</comment>
                            <comment id="12679085" author="dagw" created="Thu, 5 Mar 2009 05:49:03 +0000"  >&lt;p&gt;Thanks for reviewing the docs again, Kim!&lt;/p&gt;

&lt;p&gt;Uploading a new version of the docs patch (docs-2.*) to handle your comments.&lt;br/&gt;
No, the semicolon was spurious. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12679207" author="chaase3" created="Thu, 5 Mar 2009 14:21:09 +0000"  >&lt;p&gt;The new docs look great, Dag. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12679296" author="rhillegas" created="Thu, 5 Mar 2009 18:46:53 +0000"  >&lt;p&gt;Thanks for the second patch, Dag. Sorry about being so elliptical in my earlier comments: Concerning the Sanity printouts, I meant that the printouts could be consolidated in a constructor for the superclass of the constructed result sets themselves, e.g., in a constructor for BasicNoPutResultSetImpl. Thanks.&lt;/p&gt;</comment>
                            <comment id="12679297" author="dagw" created="Thu, 5 Mar 2009 18:50:56 +0000"  >&lt;p&gt;Rick, as for the  reserved keywords I have been trying to get rid of those;&lt;br/&gt;
moving ROW back to unreserved was painless. Moving OFFSET to unreserved was harder, however,&lt;br/&gt;
since in its location there can be a choice conflict for the parser (with table correlation names).&lt;br/&gt;
I am trying to make a lookahead to circumvent this problem, which if, successful, would allow&lt;br/&gt;
OFFSET to be an identifier in all cases except ones like this:&lt;/p&gt;

&lt;p&gt;    SELECT * from t OFFSET&lt;/p&gt;

&lt;p&gt;This would work though&lt;br/&gt;
    SELECT * from t AS OFFSET&lt;/p&gt;

&lt;p&gt;Here it is not clear if OFFSET is a correlation name of the start of a result offset clause.&lt;br/&gt;
So, even with this special handling, there could possibly be apps that would break. It might be easier to just &lt;br/&gt;
let OFFSET be a reserved keyword henceforth, since this would be cleaner (grammar, docs)?&lt;/p&gt;</comment>
                            <comment id="12679314" author="rhillegas" created="Thu, 5 Mar 2009 19:14:56 +0000"  >&lt;p&gt;Thanks for looking into the keywords issue, Dag. I suspect that OFFSET is a popular column name so adding it as a reserved keyword would create a fairly big compatibility issue.&lt;/p&gt;</comment>
                            <comment id="12679445" author="dagw" created="Fri, 6 Mar 2009 01:00:17 +0000"  >&lt;p&gt;Thanks, Rick! Uploading a new version (#3) of the code patch, which&lt;br/&gt;
makes OFFSET be a non-reserved keyword (+ test for this).&lt;br/&gt;
It &lt;b&gt;can&lt;/b&gt; be used as an identifier without exceptions, due to &lt;br/&gt;
a new look-ahead disambiguation of the shift/reduce conflict which arose.&lt;br/&gt;
I also removed the debug code from GenericResultSetFactory; I am not sure it&lt;br/&gt;
is very valuable. Fixed some small items, including Javadoc bugs as well.&lt;/p&gt;
</comment>
                            <comment id="12680637" author="dagw" created="Tue, 10 Mar 2009 21:54:39 +0000"  >&lt;p&gt;Unless there are more comments on this patch, I intend to commit it in&lt;br/&gt;
a few days.  &lt;/p&gt;

&lt;p&gt;Changes to existing codepaths are few, so any errors are expected to&lt;br/&gt;
mostly concern use of the new feature. So, risk should be limited, I&lt;br/&gt;
hope.&lt;/p&gt;</comment>
                            <comment id="12682105" author="dagw" created="Sat, 14 Mar 2009 23:46:11 +0000"  >&lt;p&gt;Committed derby-4079-3 as svn 754558.&lt;/p&gt;</comment>
                            <comment id="12682107" author="dagw" created="Sat, 14 Mar 2009 23:54:37 +0000"  >&lt;p&gt;Committed derby-4079-docs-2 as svn 754559.&lt;/p&gt;</comment>
                            <comment id="12682117" author="dagw" created="Sun, 15 Mar 2009 01:44:15 +0000"  >&lt;p&gt;Added the new test to lang/_Suite.java as svn 754583.&lt;/p&gt;</comment>
                            <comment id="12682532" author="dagw" created="Tue, 17 Mar 2009 00:49:31 +0000"  >&lt;p&gt;The test case testRuntimeStatistics in OffsetFetchNextTest parameterized newline strings&lt;br/&gt;
with System.getProperty(&quot;line.separator&quot;); this is wrong because the string returned&lt;br/&gt;
from syscs_util.syscs_get_runtimestatistics() contains just &quot;\n&quot; also on Windows.&lt;br/&gt;
Cf issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4096&quot; title=&quot;&amp;#39;testRunTimeStatistics(org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest)junit.framework.AssertionFailedError&amp;#39; on Windows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4096&quot;&gt;&lt;del&gt;DERBY-4096&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fixed in patch derby-4079-fixRtStatsTest; uploaded . The test now runs on Windows also.&lt;/p&gt;</comment>
                            <comment id="12682533" author="dagw" created="Tue, 17 Mar 2009 01:00:33 +0000"  >&lt;p&gt;Committed derby-4079-fixRtStatsTest as svn 755058.&lt;/p&gt;</comment>
                            <comment id="12682541" author="dagw" created="Tue, 17 Mar 2009 01:40:14 +0000"  >&lt;p&gt;Backported derby-4079-fixRtStatsTest to 10.5 branch as svn 755070.&lt;/p&gt;</comment>
                            <comment id="12683907" author="chaase3" created="Fri, 20 Mar 2009 15:26:20 +0000"  >&lt;p&gt;I&apos;m sorry, I should have caught this. I find that when I process one of the new files that are part of the doc patch, I get the following DITA syntax error:&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;pipeline&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Error&amp;#93;&lt;/span&gt; rrefsqljoffsetfetch.dita:81:10: The content of element type &quot;refsyn&quot; must match &quot;(ph|codeph|synph|filepath|msgph|userinput|systemoutput|b|u|i|tt|sup|sub|uicontrol|menucascade|term|xref|cite|q|boolean|state|keyword|option|parmname|apiname|cmdname|msgnum|varname|wintitle|tm|p|lq|note|dl|parml|ul|ol|sl|pre|codeblock|msgblock|screen|lines|fig|syntaxdiagram|imagemap|image|object|table|simpletable|title|draft-comment|required-cleanup|fn|indextermref|indexterm)&quot;.&lt;/p&gt;

&lt;p&gt;Processing the file gives a BUILD SUCCESSFUL message at the end,, and the generated output looks fine, so it&apos;s easy to miss this. The error shows up at the start of processing.&lt;/p&gt;

&lt;p&gt;It turns out that the closing &quot;&amp;lt;/refsyn&amp;gt;&quot; tag is placed after the example. It needs to come before it.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach a suggested patch.&lt;/p&gt;</comment>
                            <comment id="12683909" author="chaase3" created="Fri, 20 Mar 2009 15:30:12 +0000"  >&lt;p&gt;Attaching patch to fix the DITA syntax error in the new reference topic: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4079&quot; title=&quot;Add support for SQL:2008 &amp;lt;result offset clause&amp;gt; and &amp;lt;fetch first clause&amp;gt; to limit result set cardinality&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4079&quot;&gt;&lt;del&gt;DERBY-4079&lt;/del&gt;&lt;/a&gt;-docs-2.diff. Also attaching HTML file, though it looks the same as the old one. Dag, please commit if you see fit.&lt;/p&gt;</comment>
                            <comment id="12683972" author="dagw" created="Fri, 20 Mar 2009 18:10:51 +0000"  >&lt;p&gt;Thanks for the fix, Kim! Committed as svn 756695, resolving.&lt;/p&gt;</comment>
                            <comment id="12683979" author="myrna" created="Fri, 20 Mar 2009 18:29:51 +0000"  >&lt;p&gt;that last patch still needs to get backported to 10.5 docs branch, right? &lt;/p&gt;</comment>
                            <comment id="12683983" author="dagw" created="Fri, 20 Mar 2009 18:43:25 +0000"  >&lt;p&gt;Yes, I&apos;m in the process of doing it now, Myrna! Thanks for making sure &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12683994" author="dagw" created="Fri, 20 Mar 2009 19:07:11 +0000"  >&lt;p&gt;Backported to 10.5 branch as svn 756713.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12457078">DERBY-4562</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12424478">DERBY-4208</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12375659">DERBY-2998</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12416948">DERBY-4096</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12317141">DERBY-581</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12402671" name="DERBY-4079-docs-2.diff" size="567" author="chaase3" created="Fri, 20 Mar 2009 15:30:12 +0000"/>
                            <attachment id="12401349" name="derby-4079-1.diff" size="61534" author="dagw" created="Wed, 4 Mar 2009 01:50:50 +0000"/>
                            <attachment id="12401350" name="derby-4079-1.stat" size="1428" author="dagw" created="Wed, 4 Mar 2009 01:50:50 +0000"/>
                            <attachment id="12401486" name="derby-4079-2.diff" size="81820" author="dagw" created="Thu, 5 Mar 2009 05:27:24 +0000"/>
                            <attachment id="12401487" name="derby-4079-2.stat" size="1395" author="dagw" created="Thu, 5 Mar 2009 05:27:24 +0000"/>
                            <attachment id="12401567" name="derby-4079-3.diff" size="65701" author="dagw" created="Fri, 6 Mar 2009 01:00:17 +0000"/>
                            <attachment id="12401568" name="derby-4079-3.stat" size="1395" author="dagw" created="Fri, 6 Mar 2009 01:00:17 +0000"/>
                            <attachment id="12401358" name="derby-4079-docs-1.diff" size="6521" author="dagw" created="Wed, 4 Mar 2009 02:57:57 +0000"/>
                            <attachment id="12401359" name="derby-4079-docs-1.stat" size="106" author="dagw" created="Wed, 4 Mar 2009 02:57:57 +0000"/>
                            <attachment id="12401360" name="derby-4079-docs-1.zip" size="5652" author="dagw" created="Wed, 4 Mar 2009 02:57:57 +0000"/>
                            <attachment id="12401489" name="derby-4079-docs-2.diff" size="6517" author="dagw" created="Thu, 5 Mar 2009 05:49:03 +0000"/>
                            <attachment id="12401490" name="derby-4079-docs-2.stat" size="106" author="dagw" created="Thu, 5 Mar 2009 05:49:03 +0000"/>
                            <attachment id="12401491" name="derby-4079-docs-2.zip" size="5648" author="dagw" created="Thu, 5 Mar 2009 05:49:03 +0000"/>
                            <attachment id="12402336" name="derby-4079-fixRtStatsTest.diff" size="1021" author="dagw" created="Tue, 17 Mar 2009 00:49:31 +0000"/>
                            <attachment id="12402337" name="derby-4079-fixRtStatsTest.stat" size="94" author="dagw" created="Tue, 17 Mar 2009 00:49:31 +0000"/>
                            <attachment id="12401282" name="ref.zip" size="5588" author="dagw" created="Tue, 3 Mar 2009 03:28:38 +0000"/>
                            <attachment id="12402672" name="rrefsqljoffsetfetch.html" size="4312" author="chaase3" created="Fri, 20 Mar 2009 15:30:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Mar 2009 13:27:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31122</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0qdb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38090</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>