<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-501/DERBY-501.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-501] Client and embedded drivers differ on invoking a procedure that returns a single Dynamic resultSet using CallableStatement.executeQuery()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-501</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;It is possible to invoke a stored procedure that returns a single dynamic result using CallableStatement.executeQuery using Derby Client. The embedded JDBC driver, however, throws an exception like:&lt;/p&gt;

&lt;p&gt;Test starting ...url = jdbc:derby:tdb&lt;br/&gt;
Exception in thread &quot;main&quot; ERROR X0Y78: Statement.executeQuery() cannot be called with a statement that returns a row count.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:301)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:434)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1142)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1323)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatement(EmbedCallableStatement.java:109)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:241)&lt;br/&gt;
        at Test1.main(Test1.java:26)&lt;/p&gt;

&lt;p&gt;I think the embedded driver behavior is incorrect here, though I would double check that the JDBC spec says. &lt;/p&gt;

&lt;p&gt;To reproduce the problem,&lt;/p&gt;

&lt;p&gt;1) Create a database called &apos;tdb&apos; and a table called COMPANY as create table COMPANY(name char(10));&lt;br/&gt;
2) Insert two rows as: insert into COMPANY values &apos;IBM&apos;, &apos;SUN&apos;;&lt;br/&gt;
3) register a procedure as:&lt;br/&gt;
CREATE PROCEDURE GETALLCOMPANIES() PARAMETER STYLE JAVA LANGUAGE JAVA READS SQL DATA DYNAMIC RESULT SETS 1 EXTERNAL NAME &apos;Test.getAllCompanies&apos;&lt;br/&gt;
4) Set server classpath&lt;br/&gt;
5) Compile two attached java programs, Test and Test1&lt;br/&gt;
6) Execute &apos;java Test1 1&apos; to run as a client program and &apos;java Test1 2&apos; to run as an embedded program.&lt;/p&gt;</description>
                <environment>All Platforms</environment>
        <key id="12313323">DERBY-501</key>
            <summary>Client and embedded drivers differ on invoking a procedure that returns a single Dynamic resultSet using CallableStatement.executeQuery()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bandaram">Satheesh Bandaram</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Aug 2005 05:14:03 +0100</created>
                <updated>Tue, 30 Jun 2009 17:12:53 +0100</updated>
                            <resolved>Fri, 16 Jun 2006 18:17:46 +0100</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12318527" author="bandaram" created="Fri, 12 Aug 2005 05:20:28 +0100"  >&lt;p&gt;Linking this to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-310&quot; title=&quot;Document and/or change Derby client code to match behavior with Embedded driver where possible.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-310&quot;&gt;&lt;del&gt;DERBY-310&lt;/del&gt;&lt;/a&gt;, though in this case, we probably want to change the embedded driver to match network client.&lt;/p&gt;</comment>
                            <comment id="12318543" author="bandaram" created="Fri, 12 Aug 2005 07:17:07 +0100"  >&lt;p&gt;Just checked JDBC 4.0 spec... It confirms CallableStatement.executeQuery() should be supported for Stored Procedures that return a single resultset. See section 13.3.3.1.&lt;/p&gt;</comment>
                            <comment id="12319634" author="djd" created="Tue, 23 Aug 2005 05:03:06 +0100"  >&lt;p&gt;I don&apos;t think executeQuery() is correct,. a definition of a single result set does not preclude the procedure returning one or more update counts, which cannot be handled by  executeQuery. Even though Derby doesn&apos;t support upfates counts with procedures it might in the future.&lt;/p&gt;

&lt;p&gt;The code in 13.3.3.1 (also in JDBC 3) is an example, not part of the spec. We don&apos;t see how the called function/procedure GETINFO is defined, maybe in that system it is defined to only return a single result set and no update counts. 13.3.3.1 is only true if it is guaranteed that the statement only returns a single result set, I don&apos;t see how in Derby that guarantee can be made.&lt;/p&gt;

&lt;p&gt;Section 13.3.3.3 is the true case (I believe here) quote:&lt;/p&gt;

&lt;p&gt;&apos;If the type or number of results returned by a CallableStatement object are not&lt;br/&gt;
known until run time, the CallableStatement object should be executed with the&lt;br/&gt;
method execute&apos;&lt;/p&gt;

&lt;p&gt;Note, &apos;type or number of results&apos;, not number of result sets.&lt;/p&gt;</comment>
                            <comment id="12319760" author="bandaram" created="Wed, 24 Aug 2005 03:48:48 +0100"  >&lt;p&gt;Thanks Dan for your comments. You did raise an important issue about attempting to execute a procedure using executeQuery() when the procedure might also return an update count. I think this case can be handled at run-time... It would be possible to throw an exception if the procedure also returns an update count. (which Derby doesn&apos;t currently.)&lt;/p&gt;

&lt;p&gt;So, I think it should still be possible to use executeQuery() to retrieve results of a single resultset stored procedure. JDBC spec seems to indicate this should be allowed and Derby Client already does allow this. We should, however, catch incorrect invocations when the procedure might return an update count.&lt;/p&gt;</comment>
                            <comment id="12378783" author="bandaram" created="Wed, 10 May 2006 07:43:04 +0100"  >&lt;p&gt;I am not working on this bug. It would be good to address this, but busy with other activities.&lt;/p&gt;</comment>
                            <comment id="12413408" author="knutanders" created="Fri, 26 May 2006 17:13:53 +0100"  >&lt;p&gt;It turns out that the issue can be fixed just by not throwing the&lt;br/&gt;
exception when exactly one result set is produced by the stored&lt;br/&gt;
procedure. EmbedStatement.executeStatement() will do the right thing&lt;br/&gt;
if the exception is not raised.&lt;/p&gt;

&lt;p&gt;The attached patch fixes it by counting the number of returned result&lt;br/&gt;
sets and raising an exception if it is not one. It also adds a new&lt;br/&gt;
test, jdbcapi/ProcedureTest.junit, which tests executeQuery() with&lt;br/&gt;
stored procedures in Statement, PreparedStatement and&lt;br/&gt;
CallableStatement.&lt;/p&gt;

&lt;p&gt;Derbyall ran successfully. The patch is ready for review. Thanks.&lt;/p&gt;</comment>
                            <comment id="12413478" author="djd" created="Fri, 26 May 2006 22:32:41 +0100"  >&lt;p&gt;Is the rollback behaviour correct with this patch? &lt;br/&gt;
See the comment in GenericPreparedStatement around line 392 where the current exceptions are thrown for a mismatch of executeQuery/Update with a DML/query statement.&lt;/p&gt;</comment>
                            <comment id="12413483" author="knutanders" created="Fri, 26 May 2006 22:59:48 +0100"  >&lt;p&gt;Thanks for looking at the patch, Dan! I&apos;m pretty sure the rollback behaviour is correct (if it was correct before). I didn&apos;t touch the executeUpdate part, only executeQuery. If you execute a DDL/insert/update/delete statement with executeQuery(), the exception will be thrown at the same point as before. I&apos;ll look more into it on Monday.&lt;/p&gt;</comment>
                            <comment id="12413493" author="djd" created="Sat, 27 May 2006 00:32:02 +0100"  >&lt;p&gt;The patch is not correct. It is obtaining the count of result sets directly from the raw data using:&lt;/p&gt;

&lt;p&gt;resultSet.getActivation().getDynamicResults()&lt;/p&gt;

&lt;p&gt;The list of returned result sets may include result sets that will not be returned to the application.&lt;br/&gt;
Thus the count in the new code could be three, whereas the actual return count to the application would be one.&lt;/p&gt;

&lt;p&gt;See EmbedStatement.processDynamicResults for the various reasons a result set may not be returned to the application.&lt;/p&gt;

&lt;p&gt;The rollback, I agree matches the previous behaviour, the case I was thinking of was a DML statement executed within a procedure that returned multiple result sets and was executed using executeQuery. In that case an exception is thrown and the results of the DML within the procedure should be rolled back.&lt;/p&gt;</comment>
                            <comment id="12413576" author="knutanders" created="Sat, 27 May 2006 19:35:10 +0100"  >&lt;p&gt;Thanks, great catch! I had missed that.&lt;/p&gt;

&lt;p&gt;This means that a stored procedure is free to return any ResultSet&lt;br/&gt;
object, but only the ones that are still open and were created by the&lt;br/&gt;
connection which called the stored proc are visible to the user? I&lt;br/&gt;
find this, um, fascinating...&lt;/p&gt;

&lt;p&gt;For instance, I tried to execute this procedure&lt;/p&gt;

&lt;p&gt;    public static void myProc(ResultSet[] rs1, ResultSet rs2[])&lt;br/&gt;
        throws SQLException&lt;/p&gt;
    {
        rs1[0] =
            DriverManager.getConnection(&quot;jdbc:postgresql://localhost/mydb&quot;,
                                        &quot;test&quot;, &quot;test&quot;).
            createStatement().executeQuery(&quot;select * from t&quot;);
        rs2[0] =
            DriverManager.getConnection(&quot;jdbc:default:connection&quot;).
            createStatement().executeQuery(&quot;select * from t&quot;);
    }

&lt;p&gt;and it succeeded, but only returned the result set created by&lt;br/&gt;
jdbc:default:connection. Is it intentional that we silently ignore the&lt;br/&gt;
result sets from other connections and closed result sets? Isn&apos;t it&lt;br/&gt;
more appropriate to raise an exception, or at least a warning?&lt;/p&gt;

&lt;p&gt;Anyway, it seems like the test for the result set count has to be&lt;br/&gt;
moved from GenericPreparedStatement.execute() to&lt;br/&gt;
EmbedStatement.executeStatement(). Otherwise, we would have to import&lt;br/&gt;
impl.jdbc classes into impl.sql, which does not sound like a good&lt;br/&gt;
idea. According to the comment in GenericPreparedStatement, moving the&lt;br/&gt;
test could affect rollback, but I believe it is unaffected as long as&lt;br/&gt;
the test is performed inside the try block in ES.executeStatement(),&lt;br/&gt;
and before the commit logic. I also think moving the test from the sql&lt;br/&gt;
execution code to the jdbc code will make the code cleaner, since we&lt;br/&gt;
then get rid of the executeQuery/executeUpdate flags that currently&lt;br/&gt;
have to be passed to GPS.execute().&lt;/p&gt;

&lt;p&gt;I&apos;ll add test cases for the other scenarios you mentioned as well.&lt;/p&gt;</comment>
                            <comment id="12413586" author="djd" created="Sun, 28 May 2006 00:02:56 +0100"  >&lt;p&gt;Yes, the behaviour on result sets not created by jdbc:default:connection  is intentional.&lt;/p&gt;

&lt;p&gt;SQL part 13 states: Section 8.3, clause 17b&lt;/p&gt;

&lt;p&gt;&quot;b) If any element of RS is not an object returned by a connection to the current SQL system and SQL&lt;br/&gt;
session, then the effect is implementation-defined.&quot;&lt;/p&gt;

&lt;p&gt;Derby&apos;s implementation defined behaviour is to discard such result sets.&lt;/p&gt;

&lt;p&gt;Then for the closed ones:&lt;/p&gt;

&lt;p&gt;SQL part 13 states: Section 8.3, clause 19&lt;br/&gt;
&quot;If R is an external Java routine, then let FRC be a copy of the elements of RS that&lt;br/&gt;
remain open in the order that they were opened in SQL.&quot;&lt;/p&gt;

&lt;p&gt;I can&apos;t see anything in the spec that indicates an exception or warning should be raised if the JDBC ResultSet&lt;br/&gt;
is closed when it is returned to the SQL engine.&lt;/p&gt;

</comment>
                            <comment id="12413820" author="knutanders" created="Tue, 30 May 2006 20:40:15 +0100"  >&lt;p&gt;I wrote a test where a stored procedure created a table and did not&lt;br/&gt;
return any result set. It was executed with executeQuery() and&lt;br/&gt;
auto-commit was enabled. The different drivers did this:&lt;/p&gt;

&lt;p&gt;  Embedded: The query failed with an SQLException, and the creation of&lt;br/&gt;
  the table was rolled back.&lt;/p&gt;

&lt;p&gt;  Client driver and JCC: The query failed with an SQLException, but&lt;br/&gt;
  the creation of the table was not rolled back.&lt;/p&gt;

&lt;p&gt;I believe the embedded driver behaves correctly, and the client driver&lt;br/&gt;
(and JCC) should be changed to match embedded.&lt;/p&gt;</comment>
                            <comment id="12414932" author="knutanders" created="Tue, 6 Jun 2006 17:23:12 +0100"  >&lt;p&gt;Attached new patch (derby-501-v2.diff).&lt;/p&gt;

&lt;p&gt;This patch modifies EmbedStatement.processDynamicResults() so that it&lt;br/&gt;
returns the number of dynamic results instead of a&lt;br/&gt;
boolean. EmbedStatement.executeStatement() uses this number to decide&lt;br/&gt;
whether an exception is to be raised. With this change, the&lt;br/&gt;
executeQuery and executeUpdate parameters are no longer needed in&lt;br/&gt;
GenericPreparedStatement.execute().&lt;/p&gt;

&lt;p&gt;Many new test cases have been added to ProcedureTest. The new test&lt;br/&gt;
cases test executeUpdate() (which the previous patch didn&apos;t touch) and&lt;br/&gt;
the rollback behaviour. Seven of the test cases fail with the client&lt;br/&gt;
driver and JCC, but I expect all of them to succeed with the client&lt;br/&gt;
driver after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1314&quot; title=&quot;Differences between client and embedded when invoking stored procedures using Statement.executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1314&quot;&gt;&lt;del&gt;DERBY-1314&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1364&quot; title=&quot;Client driver does not roll back the effects of a stored procedure when incorrectly invoked by executeQuery()/executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1364&quot;&gt;&lt;del&gt;DERBY-1364&lt;/del&gt;&lt;/a&gt; have been fixed.&lt;/p&gt;

&lt;p&gt;Derbyall ran cleanly on Sun JVM 1.5.0 / Solaris 10 x64.&lt;/p&gt;

&lt;p&gt;Please review the patch. Thanks!&lt;/p&gt;</comment>
                            <comment id="12415310" author="knutanders" created="Thu, 8 Jun 2006 18:05:29 +0100"  >&lt;p&gt;Committed the new test class in the v2 patch with revision 412711 (to make it easier to work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1314&quot; title=&quot;Differences between client and embedded when invoking stored procedures using Statement.executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1314&quot;&gt;&lt;del&gt;DERBY-1314&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1364&quot; title=&quot;Client driver does not roll back the effects of a stored procedure when incorrectly invoked by executeQuery()/executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1364&quot;&gt;&lt;del&gt;DERBY-1364&lt;/del&gt;&lt;/a&gt;). Didn&apos;t commit the code changes since the patch is not reviewed yet.&lt;/p&gt;

&lt;p&gt;I have uploaded a v3 patch which is identical to v2, but without the test class. I&apos;d appreciate if someone could review it. Thanks!&lt;/p&gt;</comment>
                            <comment id="12415332" author="kmarsden" created="Thu, 8 Jun 2006 20:11:40 +0100"  >&lt;p&gt;Might this change affect existing applications?&lt;br/&gt;
Could you describe any behaviour change that might impact users as it might  be documented in the Release Notes.&lt;/p&gt;</comment>
                            <comment id="12415350" author="knutanders" created="Thu, 8 Jun 2006 21:00:01 +0100"  >&lt;p&gt;I don&apos;t think it is very likely that existing applications are&lt;br/&gt;
affected, but they &lt;b&gt;might&lt;/b&gt; be. To be on the safe side, we could add a&lt;br/&gt;
line to the release notes saying:&lt;/p&gt;

&lt;p&gt;  The behaviour of executeQuery() and executeUpdate() has been&lt;br/&gt;
  modified to follow the JDBC standard when executing stored&lt;br/&gt;
  procedures. It is now possible to use executeQuery() to execute a&lt;br/&gt;
  stored procedure that returns exactly one ResultSet (this would fail&lt;br/&gt;
  in previous releases of Derby). executeUpdate() will raise an&lt;br/&gt;
  exception if it is used to execute a stored procedure that returns&lt;br/&gt;
  one or more ResultSets (this would succeed in previous releases of&lt;br/&gt;
  Derby).&lt;/p&gt;

&lt;p&gt;Note that this only applies to the embedded driver. There will be some&lt;br/&gt;
changes to the client driver in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1314&quot; title=&quot;Differences between client and embedded when invoking stored procedures using Statement.executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1314&quot;&gt;&lt;del&gt;DERBY-1314&lt;/del&gt;&lt;/a&gt;, but not the same&lt;br/&gt;
changes. When writing the release notes, it is probably best to write&lt;br/&gt;
one note describing both &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-501&quot; title=&quot;Client and embedded drivers differ on invoking a procedure that returns a single Dynamic resultSet using CallableStatement.executeQuery()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-501&quot;&gt;&lt;del&gt;DERBY-501&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1314&quot; title=&quot;Differences between client and embedded when invoking stored procedures using Statement.executeUpdate()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1314&quot;&gt;&lt;del&gt;DERBY-1314&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12416185" author="knutanders" created="Wed, 14 Jun 2006 20:05:49 +0100"  >&lt;p&gt;Does anyone have comments to the approach used in the latest patch? I intend to commit if I don&apos;t hear anything in a couple of days. Thanks!&lt;/p&gt;</comment>
                            <comment id="12416473" author="knutanders" created="Fri, 16 Jun 2006 18:17:46 +0100"  >&lt;p&gt;Committed revision 414795.&lt;/p&gt;</comment>
                            <comment id="12551284" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:41 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Cloners</name>
                                                                <inwardlinks description="is cloned by">
                                        <issuelink>
            <issuekey id="12333155">DERBY-1288</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="32841">DERBY-310</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12311702" name="Test.java" size="326" author="bandaram" created="Fri, 12 Aug 2005 05:14:53 +0100"/>
                            <attachment id="12311701" name="Test1.java" size="939" author="bandaram" created="Fri, 12 Aug 2005 05:14:39 +0100"/>
                            <attachment id="12334609" name="derby-501-v1.diff" size="15669" author="knutanders" created="Fri, 26 May 2006 17:13:53 +0100"/>
                            <attachment id="12334610" name="derby-501-v1.stat" size="339" author="knutanders" created="Fri, 26 May 2006 17:13:53 +0100"/>
                            <attachment id="12335071" name="derby-501-v2.diff" size="40457" author="knutanders" created="Tue, 6 Jun 2006 17:23:12 +0100"/>
                            <attachment id="12335072" name="derby-501-v2.stat" size="620" author="knutanders" created="Tue, 6 Jun 2006 17:23:12 +0100"/>
                            <attachment id="12335193" name="derby-501-v3.diff" size="10455" author="knutanders" created="Thu, 8 Jun 2006 18:05:29 +0100"/>
                            <attachment id="12335194" name="derby-501-v3.stat" size="529" author="knutanders" created="Thu, 8 Jun 2006 18:05:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 23 Aug 2005 04:03:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21986</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0uef:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38743</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>