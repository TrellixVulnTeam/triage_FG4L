<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6022/DERBY-6022.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6022] Add a system procedure for (un)registering optional packages of Derby tools.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6022</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Now that vararg routines have been added to Derby (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3069&quot; title=&quot;Derby does not resolve functions bound to methods with varargs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3069&quot;&gt;&lt;del&gt;DERBY-3069&lt;/del&gt;&lt;/a&gt;), I would like to add a new vararg system procedure for registering and unregistering optional packages of Derby tools. For starters, these would be tools which aren&apos;t checked into the Derby codeline but are just attached to various JIRAs. These tools are:&lt;/p&gt;

&lt;p&gt;o DBMDWrapper (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3973&quot; title=&quot;Create function wrappers for DatabaseMetaData so that you can join metadata results in queries.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3973&quot;&gt;&lt;del&gt;DERBY-3973&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5967&quot; title=&quot;Create some type mapping functions for use in turning JDBC type information into human-readable strings.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5967&quot;&gt;&lt;del&gt;DERBY-5967&lt;/del&gt;&lt;/a&gt;) - This tool creates functions and table functions for all of the DatabaseMetaData methods so that you can write complicated queries which join and filter JDBC metadata.&lt;/p&gt;

&lt;p&gt;o ForeignTableVTI (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4962&quot; title=&quot;Create a table function which efficiently migrates data out of foreign databases and which can be used for ongoing data integration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4962&quot;&gt;&lt;del&gt;DERBY-4962&lt;/del&gt;&lt;/a&gt;) - This tool creates views against foreign databases so that you can bulk-import foreign data into Derby without indirecting through csv files.&lt;/p&gt;

&lt;p&gt;It also may be possible to use this approach to expose the log and data file reading tools attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5195&quot; title=&quot;Create tools for browsing the files in the database log directory.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5195&quot;&gt;DERBY-5195&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5201&quot; title=&quot;Create tools for reading the contents of the seg0 directory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5201&quot;&gt;DERBY-5201&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The new system procedure would look like this:&lt;/p&gt;

&lt;p&gt;create procedure syscs_util.syscs_register_tool&lt;br/&gt;
(&lt;br/&gt;
    toolName varchar( 32672 ),&lt;br/&gt;
    boolean register,&lt;br/&gt;
    optionalArgs varchar( 32672 ) ...&lt;br/&gt;
)&lt;br/&gt;
language java parameter style derby modifies sql data&lt;br/&gt;
external name &apos;willFigureOutWhereToPutThis&apos;;&lt;/p&gt;

&lt;p&gt;The arguments would have these meanings:&lt;/p&gt;

&lt;p&gt;o toolName - A name specific to the tool.&lt;/p&gt;

&lt;p&gt;o register - True means &quot;register the tool&quot; and false means &quot;unregister the tool&quot;.&lt;/p&gt;

&lt;p&gt;o optionalArgs - Each tool could have its own variable set of additional configuration parameters.&lt;/p&gt;

&lt;p&gt;By default, only the DBO could run this procedure. The DBO could grant execute permission to other users.&lt;/p&gt;

&lt;p&gt;The known tool names and their optional parameters would be documented in the Derby Reference Manual in the section on syscs_util.syscs_register_tool.&lt;/p&gt;

&lt;p&gt;I am thinking that we should put the optional tools themselves in derbytools.jar. We might want to document all of the optional tools in the Tools Guide, although I can see arguments for documenting some tools in the Admin Guide.&lt;/p&gt;

&lt;p&gt;I would appreciate other people&apos;s thoughts about this proposal.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</description>
                <environment></environment>
        <key id="12624875">DERBY-6022</key>
            <summary>Add a system procedure for (un)registering optional packages of Derby tools.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Dec 2012 19:33:55 +0000</created>
                <updated>Fri, 14 Jun 2013 20:28:23 +0100</updated>
                            <resolved>Fri, 14 Jun 2013 19:26:27 +0100</resolved>
                                    <version>10.10.1.1</version>
                                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>SQL</component>
                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13542152" author="rhillegas" created="Wed, 2 Jan 2013 14:58:25 +0000"  >&lt;p&gt;Attaching derby-6022-01-aa-registerToolProc.diff. This patch adds the syscs_util.syscs_register_tool() described above. The tools can be added in subsequent patches. I am running regression tests now.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/build.xml&lt;br/&gt;
A       java/engine/org/apache/derby/iapi/sql/dictionary/OptionalTool.java&lt;/p&gt;

&lt;p&gt;Adds the OptionalTool interface to be implemented by the tools. The interface has varargs methods for registering and unregistering tools.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;br/&gt;
A       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/build.xml&lt;br/&gt;
M       tools/jar/extraDBMSclasses.properties&lt;/p&gt;

&lt;p&gt;Wires the new syscs_register_tool() procedure into the data dictionary.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;p&gt;Adds an error message flagging unrecognized tool names.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_10.java&lt;/p&gt;

&lt;p&gt;Adds tests to verify that the new procedure only exists after hard-upgrade to 10.10.&lt;/p&gt;</comment>
                            <comment id="13542233" author="rhillegas" created="Wed, 2 Jan 2013 16:57:56 +0000"  >&lt;p&gt;The tests tripped one error. After syncing with the development trunk, the error went away. Committed derby-6022-01-aa-registerToolProc.diff at subversion revision 1427859. This was the error:&lt;/p&gt;

&lt;p&gt;There was 1 failure:&lt;br/&gt;
1) testPingWithWrongHost(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest)junit.framework.AssertionFailedError: Could not find expectedString:Unable to find host in output:&amp;lt;STDOUT&amp;gt;Wed Jan 02 07:26:59 PST 2013 : Could not connect to Derby Network Server on host nothere.invalid, port 1527: Operation timed out&lt;br/&gt;
&amp;lt;END STDOUT&amp;gt;&lt;br/&gt;
&amp;lt;STDERR&amp;gt;&amp;lt;END STDERR&amp;gt;&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:524)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.assertFailedPing(NetworkServerControlClientCommandTest.java:148)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.testPingWithWrongHost(NetworkServerControlClientCommandTest.java:113)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 14079,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="13542410" author="rhillegas" created="Wed, 2 Jan 2013 21:12:47 +0000"  >&lt;p&gt;Attaching derby-6022-02-aa-dbmdWrapper.diff. This patch adds the database metadata wrapper routines to derbytools.jar and makes it possible to register them via syscs_util.syscs_register_tool(). I am running regression tests now.&lt;/p&gt;

&lt;p&gt;To register the database metadata wrapper routines, issue the following command:&lt;/p&gt;

&lt;p&gt;    call syscs_util.syscs_register_tool( &apos;dbmd&apos;, true );&lt;/p&gt;

&lt;p&gt;To unregister the wrapper routines, issue the following command:&lt;/p&gt;

&lt;p&gt;    call syscs_util.syscs_register_tool( &apos;dbmd&apos;, false );&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;A       java/tools/org/apache/derby/impl/tools/optional&lt;br/&gt;
A       java/tools/org/apache/derby/impl/tools/optional/DBMDWrapper.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;/p&gt;

&lt;p&gt;Adds DBMDWrapper as an OptionalTool.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/build/org/apache/derbyBuild/classlister.java&lt;br/&gt;
M       java/tools/org/apache/derby/impl/tools/build.xml&lt;br/&gt;
M       tools/jar/tools.properties&lt;/p&gt;

&lt;p&gt;Adds logic to build DBMDWrapper and put it into&lt;br/&gt;
derbytools.jar. Adds logic to NOT pull OptionalTool into&lt;br/&gt;
derbytools.jar. It should live in only one jar file, viz., derby.jar.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/services/reflect/JarLoader.java&lt;/p&gt;

&lt;p&gt;Adds logic to make it possible to run DBMDWrapper methods even though they live in the Derby namespace.&lt;/p&gt;

&lt;p&gt;------------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java&lt;br/&gt;
A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/OptionalToolsTest.java&lt;/p&gt;

&lt;p&gt;Adds a simple test to verify that the wrapper methods can be registered, run, and unregistered.&lt;/p&gt;</comment>
                            <comment id="13542731" author="dagw" created="Thu, 3 Jan 2013 05:42:29 +0000"  >&lt;p&gt;Thanks, Rick. Seems useful to me. Now, &lt;/p&gt;

&lt;p&gt;So, the dbmdwrapper tool wouldn&apos;t live in derbytools.jar - as an exception? If our first use case for an optional tool doesn&apos;t fit there, maybe we will have to solve this ad hoc going forward?&lt;/p&gt;

&lt;p&gt;Recapping a bit, in the description you say &quot;tools which wouldn&apos;t be checked in the to main code line&quot;, but if they are to be bundled with our jars, shouldn&apos;t they be? Sorry if I am a little confused here.. next question, if they &lt;b&gt;are&lt;/b&gt; checked into the main code line and&lt;br/&gt;
bundled in one of our jars, what would be the argument for &lt;b&gt;not&lt;/b&gt; auto-registering them? Name space pollution?&lt;/p&gt;</comment>
                            <comment id="13542907" author="rhillegas" created="Thu, 3 Jan 2013 13:07:28 +0000"  >&lt;p&gt;Hi Dag,&lt;/p&gt;

&lt;p&gt;Thanks for looking at this approach. Sorry if my description was a bit confusing:&lt;/p&gt;

&lt;p&gt;1) Note that DBMDWrapper does live in derbytools.jar. It&apos;s just the OptionalTools interface which lives in derby.jar. OptionalTools is an interface shared by engine and tools code.&lt;/p&gt;

&lt;p&gt;2) Note that this issue deals with tools which weren&apos;t previously checked into the main codeline but which will be checked into the codeline when this work is done. There are several reasons for not auto-registering these tools:&lt;/p&gt;

&lt;p&gt;a) That would bloat up the namespace as you note.&lt;/p&gt;

&lt;p&gt;b) That would add significant further time to Derby database creation.&lt;/p&gt;

&lt;p&gt;c) It isn&apos;t clear where to register the tools. In the case of the DBMDWrapper routines, they end up in the current schema of the user who registers them.&lt;/p&gt;

&lt;p&gt;d) For the next tool I&apos;m going to tackle (ForeignTableVTI), the foreign database isn&apos;t even known when the Derby database is created, so there is no way to auto-register those routines.&lt;/p&gt;

&lt;p&gt;Hope this makes more sense now. Thanks.&lt;/p&gt;
</comment>
                            <comment id="13543122" author="rhillegas" created="Thu, 3 Jan 2013 17:49:49 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6022-02-aa-dbmdWrapper.diff except for the Heisenbug tracked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5941&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-5941&lt;/a&gt;. I have added a little diagnostic logic to InvalidLDAPServerAuthenticationTest. That may help us understand the Heisenbug better. Attaching derby-6022-02-aa-dbmdWrapper.diff. Committed at subversion revision 1428506.&lt;/p&gt;

&lt;p&gt;Touches the following additional file:&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InvalidLDAPServerAuthenticationTest.java&lt;/p&gt;</comment>
                            <comment id="13548781" author="rhillegas" created="Wed, 9 Jan 2013 18:28:31 +0000"  >&lt;p&gt;Attaching derby-6022-03-aa-foreignDBviews.diff. This patch adds an optional tool for siphoning data out of foreign databases without indirecting through csv dumps. This is a productization of the ForeignTableVTI attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4962&quot; title=&quot;Create a table function which efficiently migrates data out of foreign databases and which can be used for ongoing data integration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4962&quot;&gt;&lt;del&gt;DERBY-4962&lt;/del&gt;&lt;/a&gt;. I am running tests now.&lt;/p&gt;

&lt;p&gt;The tool creates schemas, table functions, and wrapping views against all user tables in a foreign database. The foreign database could be another Derby database or any other RDBMS. An optional argument lets you prefix the local schema names with a string to distinguish them from the local schemas that you are importing into.&lt;/p&gt;

&lt;p&gt;Suppose that you have a foreign database with two schemas S1 and S2 which contain, respectively, tables T1 and T2 and U1 and U2. If you issue the following command...&lt;/p&gt;

&lt;p&gt;    call syscs_util.syscs_register_tool( &apos;fdbv&apos;, true, &apos;connectionUrlToForeignDB&apos;, &apos;XYZ_&apos; )&lt;/p&gt;

&lt;p&gt;...then Derby will create the following objects:&lt;/p&gt;

&lt;p&gt;schema XYZ_S1&lt;br/&gt;
table function XYZ_S1.T1, which reads S1.T1 from the foreign database&lt;br/&gt;
table function XYZ_S1.T2, which reads S1.T2 from the foreign database&lt;br/&gt;
view XYZ_S1.T1, which wraps the corresponding table function&lt;br/&gt;
view XYZ_S1.T2, which wraps the corresponding table function&lt;/p&gt;

&lt;p&gt;schema XYZ_S2&lt;br/&gt;
table function XYZ_S2.U1, which reads S2.U1 from the foreign database&lt;br/&gt;
table function XYZ_S2.U2, which reads S2.U2 from the foreign database&lt;br/&gt;
view XYZ_S2.U1, which wraps the corresponding table function&lt;br/&gt;
view XYZ_S2.U2, which wraps the corresponding table function&lt;/p&gt;

&lt;p&gt;The views hide the ugly arguments to the table functions. You can then populate your local schema via the following SELECTs:&lt;/p&gt;

&lt;p&gt;insert into S1.T1 select * from XYZ_S1.T1&lt;br/&gt;
insert into S1.T2 select * from XYZ_S1.T2&lt;br/&gt;
insert into S2.U1 select * from XYZ_S2.U1&lt;br/&gt;
insert into S2.U2 select * from XYZ_S2.U2&lt;/p&gt;

&lt;p&gt;When you are done migrating the data, you can drop the objects added by the tool:&lt;/p&gt;

&lt;p&gt;    call syscs_util.syscs_register_tool( &apos;fdbv&apos;, false, &apos;connectionUrlToForeignDB&apos;, &apos;XYZ_&apos; )&lt;/p&gt;

&lt;p&gt;The trailing schema prefix argument is optional and can be omitted if there is no overlap between the names of your local schemas and the names of the foreign schemas:&lt;/p&gt;

&lt;p&gt;    call syscs_util.syscs_register_tool( &apos;fdbv&apos;, true, &apos;connectionUrlToForeignDB&apos; )&lt;br/&gt;
    call syscs_util.syscs_register_tool( &apos;fdbv&apos;, false, &apos;connectionUrlToForeignDB&apos; )&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;A       java/engine/org/apache/derby/vti/ForeignTableVTI.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java&lt;br/&gt;
M       java/engine/org/apache/derby/vti/build.xml&lt;br/&gt;
M       tools/javadoc/publishedapi.ant&lt;/p&gt;

&lt;p&gt;Adds to the public API a RestrictedVTI for reading a table from a&lt;br/&gt;
foreign database. &lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M       java/build/org/apache/derbyBuild/classlister.java&lt;br/&gt;
A       java/tools/org/apache/derby/impl/tools/optional/ForeignDBViews.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;br/&gt;
M       tools/jar/extraDBMSclasses.properties&lt;br/&gt;
M       tools/jar/tools.properties&lt;br/&gt;
M       java/tools/org/apache/derby/loc/toolsmessages.properties&lt;/p&gt;

&lt;p&gt;Adds the new fdbv OptionalTool.&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/OptionalToolsTest.java&lt;/p&gt;

&lt;p&gt;Adds some tests of the new fdbv OptionalTool.&lt;/p&gt;</comment>
                            <comment id="13548837" author="rhillegas" created="Wed, 9 Jan 2013 19:05:22 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6022-03-aa-foreignDBviews.diff.&lt;/p&gt;</comment>
                            <comment id="13548952" author="rhillegas" created="Wed, 9 Jan 2013 20:23:55 +0000"  >&lt;p&gt;Committed derby-6022-03-aa-foreignDBviews.diff at subversion revision 1431041.&lt;/p&gt;</comment>
                            <comment id="13549352" author="dagw" created="Thu, 10 Jan 2013 04:49:16 +0000"  >&lt;p&gt;Looks good, Rick. I was thrown off at first by your example syntax:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_register_tool( &apos;fdbv&apos;, true, &apos;connectionUrlToForeignDB&apos;, &apos;XYZ_&apos; ) &lt;/p&gt;

&lt;p&gt;until I realized that while  &apos;fdbv&apos; is a literal string,  &apos;connectionUrlToForeignDB&apos; is not; connectionUrlToForeignDB is a meta-symbol to be replaced with an actual URL, i.e.  &apos;&amp;lt;connectionUrlToForeignDB&amp;gt;&apos;. Isn&apos;t the name &apos;fdbv&apos; a bit on the terse side, though? I&apos;d prefer some more self-explanatory.&lt;/p&gt;

</comment>
                            <comment id="13549591" author="rhillegas" created="Thu, 10 Jan 2013 13:10:48 +0000"  >&lt;p&gt;Thanks for that feedback, Dag. I&apos;ll change the tool names to something less cryptic in a future patch. How about the following:&lt;/p&gt;

&lt;p&gt;dbmd -&amp;gt; databaseMetaData&lt;/p&gt;

&lt;p&gt;fdbv -&amp;gt; foreignViews&lt;/p&gt;</comment>
                            <comment id="13549724" author="rhillegas" created="Thu, 10 Jan 2013 15:43:53 +0000"  >&lt;p&gt;Attaching derby-6022-04-aa-customTool.diff. This patch adds a way to load experimental tool packages. The patch also changes the tool names so that they are more self-explanatory. I am running tests now.&lt;/p&gt;

&lt;p&gt;This will give us the ability to provide customers experimental OptionalTools to perform monitoring/diagnosis. If an experimental tool turns out to be useful, we can consider including it as builtin, named tool in a future release.&lt;/p&gt;

&lt;p&gt;An experimental tool is simply a class which implements OptionalTool. To load an experimental tool, you must specify the name of the class along with any additional string parameters it needs:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_register_tool&lt;br/&gt;
(&lt;br/&gt;
    &apos;customTool&apos;,&lt;br/&gt;
    true,&lt;br/&gt;
    &apos;mydiags.MyExperimentalTool&apos;,&lt;br/&gt;
    &apos;arg0&apos;,&lt;br/&gt;
    &apos;arg1&apos;&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;Unloading the tool is similar:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_register_tool&lt;br/&gt;
(&lt;br/&gt;
    &apos;customTool&apos;,&lt;br/&gt;
    false,&lt;br/&gt;
    &apos;mydiags.MyExperimentalTool&apos;,&lt;br/&gt;
    &apos;arg0&apos;,&lt;br/&gt;
    &apos;arg1&apos;&lt;br/&gt;
);&lt;/p&gt;


&lt;p&gt;This patch also changes the names of the other tools as described in the previous comment on this issue.&lt;/p&gt;

&lt;p&gt;I think that we should document the databaseMetaData and foreignViews tools. I will open a doc issue for that. I don&apos;t see a need to document customTool. We can simply provide load/unload instructions when we give a customer an experimental tool.&lt;/p&gt;



&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;/p&gt;

&lt;p&gt;Logic to support custom tools.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/build.xml&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/OptionalToolsTest.java&lt;br/&gt;
A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/OptionalToolExample.java&lt;/p&gt;

&lt;p&gt;Tests.&lt;/p&gt;</comment>
                            <comment id="13549834" author="rhillegas" created="Thu, 10 Jan 2013 17:49:40 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6022-04-aa-customTool.diff. Committed at subversion revision 1431526.&lt;/p&gt;</comment>
                            <comment id="13550883" author="dagw" created="Fri, 11 Jan 2013 06:29:51 +0000"  >&lt;p&gt;&amp;gt; How about the following:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; dbmd -&amp;gt; databaseMetaData&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; fdbv -&amp;gt; foreignViews &lt;/p&gt;

&lt;p&gt;A clear improvement. Btw, is the name case significant here? If so, we we&lt;br/&gt;
want it to be? Thanks!&lt;/p&gt;</comment>
                            <comment id="13551104" author="rhillegas" created="Fri, 11 Jan 2013 13:18:35 +0000"  >&lt;p&gt;Thanks, Dag. Yes, case is significant. I don&apos;t have strong religion on this point, but that just seemed more straightforward than the other alternatives which came to mind:&lt;/p&gt;

&lt;p&gt;o case is insignificant&lt;/p&gt;

&lt;p&gt;o SQL identifier casing and escaping rules&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13555043" author="kristwaa" created="Wed, 16 Jan 2013 14:05:04 +0000"  >&lt;p&gt;Looks like code from this issue causes/triggers a test failure on some platforms. See&lt;br/&gt;
&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5571080-report/javadb-5571080-3575124-details.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5571080-report/javadb-5571080-3575124-details.html&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Low-level cause reported as:&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.AggregateNode.resolveAggregate(AggregateNode.java:457)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(StaticMethodCallNode.java:664)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.StaticMethodCallNode.bindExpression(StaticMethodCallNode.java:210)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.JavaToSQLValueNode.bindExpression(JavaToSQLValueNode.java:237)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ResultColumn.bindExpression(ResultColumn.java:737)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ResultColumnList.bindExpressions(ResultColumnList.java:831)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.RowResultSetNode.bindExpressions(RowResultSetNode.java:261)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bindExpressions(DMLStatementNode.java:227)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:140)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:267)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:400)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:99)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1103)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:134)&lt;/p&gt;</comment>
                            <comment id="13555077" author="rhillegas" created="Wed, 16 Jan 2013 14:36:35 +0000"  >&lt;p&gt;Thanks for spotting this, Kristian. I am able to reproduce this problem if I order the test cases to occur in the order which they ran on that platform.&lt;/p&gt;</comment>
                            <comment id="13555284" author="rhillegas" created="Wed, 16 Jan 2013 18:07:35 +0000"  >&lt;p&gt;The following script reproduces the error which Kristian identified:&lt;/p&gt;

&lt;p&gt;&amp;#8211; turn on authentication and authorization&lt;br/&gt;
connect &apos;jdbc:derby:memory:db0;create=true;user=test_dbo;password=test_dbopassword&apos;;&lt;br/&gt;
call syscs_util.syscs_create_user( &apos;TEST_DBO&apos;, &apos;test_dbopassword&apos; );&lt;br/&gt;
connect &apos;jdbc:derby:memory:db0;shutdown=true;user=test_dbo;password=test_dbopassword&apos;;&lt;br/&gt;
connect &apos;jdbc:derby:memory:db0;user=test_dbo;password=test_dbopassword&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; dies on NPE&lt;br/&gt;
values toString( 100 );&lt;/p&gt;</comment>
                            <comment id="13555332" author="rhillegas" created="Wed, 16 Jan 2013 18:49:42 +0000"  >&lt;p&gt;Attaching derby-6022-05-aa-schemaNotCreatedYet.diff. This fixes an NPE when Derby tries to lookup a function/aggregate name in a schema which hasn&apos;t been created yet. I am running regression tests now.&lt;/p&gt;

&lt;p&gt;This fixes the problem Kristian identified. Depending on the order that the OptionalToolsTest cases run, we may run a query which tries to lookup a function name in a schema which hasn&apos;t been created yet. I have added a piece of defensive logic so that Derby concludes that the function can&apos;t exist if its schema hasn&apos;t been created yet. This fixes the NPE.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/AggregateNode.java&lt;/p&gt;

&lt;p&gt;The fix.&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/UDAPermsTest.java&lt;/p&gt;

&lt;p&gt;Added a regression test case for the bug.&lt;/p&gt;</comment>
                            <comment id="13555418" author="rhillegas" created="Wed, 16 Jan 2013 20:24:17 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-6022-05-aa-schemaNotCreatedYet.diff. Committed at subversion revision 1434363.&lt;/p&gt;</comment>
                            <comment id="13597538" author="rhillegas" created="Fri, 8 Mar 2013 20:43:39 +0000"  >&lt;p&gt;Attaching derby-6022-06-aa-optimizerTracing.diff. This patch adds an optional tool for turning on optimizer tracing as discussed in the following email thread: &lt;a href=&quot;http://apache-database.10148.n7.nabble.com/Is-there-a-way-to-dump-all-the-plans-considered-by-optimizer-into-log-td127769.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-database.10148.n7.nabble.com/Is-there-a-way-to-dump-all-the-plans-considered-by-optimizer-into-log-td127769.html&lt;/a&gt; . Committed at subversion revision 1454537.&lt;/p&gt;

&lt;p&gt;Here&apos;s an example of how to use this tool:&lt;/p&gt;

&lt;p&gt;&amp;#8211; turn on optimizer tracing&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, true );&lt;/p&gt;

&lt;p&gt;select columnname from sys.systables t, sys.syscolumns c where t.tableid = c.referenceid and t.tablename = &apos;SYSALIASES&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; dump the optimizer trace and turn off optimizer tracing&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, false );&lt;/p&gt;

&lt;p&gt;I don&apos;t have strong feelings about whether we should document this tool.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;A       java/tools/org/apache/derby/impl/tools/optional/OptimizerTracer.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/Java5SystemProcedures.java&lt;br/&gt;
M       tools/jar/tools.properties&lt;/p&gt;</comment>
                            <comment id="13597632" author="chaase3" created="Fri, 8 Mar 2013 22:30:45 +0000"  >&lt;p&gt;I&apos;ve no objection to reopening &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6042&quot; title=&quot;Document the syscs_util.syscs_register_tool procedure added by DERBY-6022.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6042&quot;&gt;&lt;del&gt;DERBY-6042&lt;/del&gt;&lt;/a&gt; and documenting the new tool, if people think it might be useful to users.&lt;/p&gt;</comment>
                            <comment id="13598538" author="dagw" created="Mon, 11 Mar 2013 05:01:50 +0000"  >&lt;p&gt;I tried this and it worked for me. I&apos;ll keep using the  other method though, because it lets me direct the output to a specified file (instead of std out). Maybe we could add a file parameter?&lt;/p&gt;</comment>
                            <comment id="13598760" author="rhillegas" created="Mon, 11 Mar 2013 12:06:19 +0000"  >&lt;p&gt;I think adding a file name parameter is a good idea. Thanks.&lt;/p&gt;</comment>
                            <comment id="13602520" author="rhillegas" created="Thu, 14 Mar 2013 18:09:58 +0000"  >&lt;p&gt;Attaching derby-6022-07-aa-optimizerTracingWithLogFile.diff. This patch lets you specify a file to which the optimizer trace should be dumped. Committed at subversion revision 1456579.&lt;/p&gt;

&lt;p&gt;With this patch, you can dump the optimizer trace either to standard out or to a file:&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
-- Turn on optimizer tracing, run one statement, turn off tracing, and print trace to standard out.&lt;br/&gt;
&amp;#8211;&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, true );&lt;br/&gt;
select columnname from sys.systables t, sys.syscolumns c where t.tableid = c.referenceid and t.tablename = &apos;SYSROLES&apos;;&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, false );&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
-- Turn on optimizer tracing, run one statement, turn off tracing,&lt;br/&gt;
&amp;#8211; and print trace to a file named z1.txt.&lt;br/&gt;
&amp;#8211;&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, true );&lt;br/&gt;
select columnname from sys.systables t, sys.syscolumns c where t.tableid = c.referenceid and t.tablename = &apos;SYSALIASES&apos;;&lt;br/&gt;
call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, false, &apos;z1.txt&apos; );&lt;/p&gt;



&lt;p&gt;In adding this functionality, I tripped across some unexpected behaviors of optimizer tracing:&lt;/p&gt;

&lt;p&gt;1) The knowledge of whether tracing is on is maintained in two state variables, one in GenericLanguageConnectionContext and the other in Level2OptimizerImpl. This seems brittle to me.&lt;/p&gt;

&lt;p&gt;2) At one point it seems that someone intended to make it possible to print the trace in html. But that effort wasn&apos;t completed. I&apos;d be happy to add an xml format to optimizer tracing if people are interested. You&apos;d use this feature like this:&lt;/p&gt;

&lt;p&gt;call syscs_util.syscs_register_tool( &apos;optimizerTracing&apos;, true, &apos;xml&apos; );&lt;/p&gt;

&lt;p&gt;3) I can&apos;t tell whether optimizer tracing is only meant to operate on a single statement or on multi-statement batches. The latter doesn&apos;t seem to work, however. Again, if people are interested, I&apos;d be happy to add multi-statement support to optimizer tracing. This would be particularly useful with xml output since it would then be easy to isolate the individual statements in the output.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/impl/tools/optional/OptimizerTracer.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/db/OptimizerTrace.java&lt;/p&gt;</comment>
                            <comment id="13612002" author="dagw" created="Sun, 24 Mar 2013 06:00:15 +0000"  >&lt;p&gt;Adding xml output and support for batches sounds a good idea, Rick. +1&lt;br/&gt;
A question here though: with XML the output gets more useful for tools, and as such, thinking of this as an API is more natural. But then we need consider/state the stability or lack thereof for such (internal) interfaces.&lt;/p&gt;</comment>
                            <comment id="13612005" author="dagw" created="Sun, 24 Mar 2013 06:06:36 +0000"  >&lt;p&gt;Btw, buddy tested the new &quot;overload&quot; for specifying the output file; worked fine for me, thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12378019">DERBY-3069</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12409974">DERBY-3973</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12495073">DERBY-4962</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12613889">DERBY-5967</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12645677">DERBY-6211</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12504395">DERBY-5195</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12504820">DERBY-5201</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12627022">DERBY-6040</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12327886">DERBY-837</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12646799">DERBY-6219</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12438486">DERBY-4415</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12493238">DERBY-4945</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12627653">DERBY-6042</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12562908" name="derby-6022-01-aa-registerToolProc.diff" size="17396" author="rhillegas" created="Wed, 2 Jan 2013 14:58:25 +0000"/>
                            <attachment id="12562958" name="derby-6022-02-aa-dbmdWrapper.diff" size="51607" author="rhillegas" created="Wed, 2 Jan 2013 21:12:47 +0000"/>
                            <attachment id="12563980" name="derby-6022-03-aa-foreignDBviews.diff" size="49877" author="rhillegas" created="Wed, 9 Jan 2013 18:28:31 +0000"/>
                            <attachment id="12564191" name="derby-6022-04-aa-customTool.diff" size="19016" author="rhillegas" created="Thu, 10 Jan 2013 15:43:53 +0000"/>
                            <attachment id="12565153" name="derby-6022-05-aa-schemaNotCreatedYet.diff" size="2231" author="rhillegas" created="Wed, 16 Jan 2013 18:49:42 +0000"/>
                            <attachment id="12572825" name="derby-6022-06-aa-optimizerTracing.diff" size="4492" author="rhillegas" created="Fri, 8 Mar 2013 20:43:39 +0000"/>
                            <attachment id="12573745" name="derby-6022-07-aa-optimizerTracingWithLogFile.diff" size="2958" author="rhillegas" created="Thu, 14 Mar 2013 18:09:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Jan 2013 05:42:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>301389</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hz0mwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>247718</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>