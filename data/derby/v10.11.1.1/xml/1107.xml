<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1107/DERBY-1107.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1107] For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1107</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The JDBC DatabaseMetaData queries are stored as stored prepared statements in the database.   If a bug is fixed for any of the metadata calls it can require that these queries be changed.  Currently  existing databases will not get updated properly if a bug is fixed.  Ideally the metadata queries should match the derby version that is running.  That way we avoid situations where the query is not compatible with the Derby version running.&lt;/p&gt;

&lt;p&gt;To confirm I :&lt;br/&gt;
1) created a database with 10.1.1.0&lt;br/&gt;
2) Made a  metadata change in my 10.1.2.4 client.&lt;br/&gt;
3) Connected to the 10.1.1.0 database with 10.1.2.4 and saw that there was no change to the stored prepared statements in SYS.SYSSTATEMENTS&lt;/p&gt;

&lt;p&gt;I also confirmed that  a  database created with 10.1.2.4 does not get changed when reverting to 10.1.1.0.&lt;/p&gt;


&lt;p&gt;Below this line is some history and reference that might be helful to someone fixing this issue:&lt;br/&gt;
------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
In discussing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-970&quot; title=&quot;Add new metadata methods to network client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-970&quot;&gt;&lt;del&gt;DERBY-970&lt;/del&gt;&lt;/a&gt;, the subject of  the metadata stored prepared statements &lt;br/&gt;
came up.&lt;br/&gt;
The general questions are:&lt;/p&gt;

&lt;p&gt;    1) Why do we  use  stored prepared statements for metadata queries?    &lt;br/&gt;
    2) What issues might there be related to upgrade/downgrade  with the &lt;br/&gt;
metadata stored prepared statements?&lt;br/&gt;
    3) How do we  address potential upgrade/downgrade issues?&lt;/p&gt;



&lt;p&gt;GENERAL HISTORY:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Cloudscape 5.x had stored prepared statements, a way to store precompiled&lt;br/&gt;
statements in the database.  This is no longer exposed externally.&lt;/li&gt;
	&lt;li&gt;Metadata stored prepared statements were a performance optimization  that&lt;br/&gt;
predated the statement cache.&lt;/li&gt;
	&lt;li&gt;In the past, this performance optimization has been of particular  importance&lt;br/&gt;
to gui database browsers that execute all the metadata methods on connection to &lt;br/&gt;
the database.  This would still probably be an issue with embedded even with the &lt;br/&gt;
statement cache.&lt;/li&gt;
	&lt;li&gt;All stored prepared statements get recompiled on the first connection to the&lt;br/&gt;
database if the version changes.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;UPGRADE HISTORY&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In Cloudscape 5.1,  the metadata stored prepared statements have traditionally&lt;br/&gt;
been a source of trouble for even minor version changes as queries change or &lt;br/&gt;
they refer to methods/stored procedures  that may or may not exist in the target &lt;br/&gt;
version and cannot recompile or execute.  &lt;/li&gt;
	&lt;li&gt;The solution to the problem in  Cloudscape v5.1.60  was to automatically&lt;br/&gt;
always call DD_Version.dropJDBCMetadataSPSes() whenever the version changed up &lt;br/&gt;
or down in upgradeIfNeeded().&lt;/li&gt;
	&lt;li&gt;The workaround before this change to do this automatically was to call this&lt;br/&gt;
method manually:
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;    CALL Factory.getDatabaseOfConnection().&lt;br/&gt;
        dropAllJDBCMetaDataSPSes()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;HOW DERBY WORKS TODAY:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In Derby we now only call  dropJDBCMetadataSPSes() on fullUpgrade and it has&lt;br/&gt;
been this way since contribution.&lt;/li&gt;
	&lt;li&gt;I think the problems of upgrade/downgrade for metadata stored prepared&lt;br/&gt;
statements may exist in Derby.&lt;/li&gt;
	&lt;li&gt;I don&apos;t know a workaround to drop the metadata stored prepared statements if&lt;br/&gt;
we need to deliver a bug fix or how the ugprade/downgrade is handled currently.&lt;/li&gt;
	&lt;li&gt;I seem to recall some special handling in Derby for soft upgrade for optimizer directives, but don&apos;t know the details.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;RECENT DISCUSSIONS:&lt;br/&gt;
In discussing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-970&quot; title=&quot;Add new metadata methods to network client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-970&quot;&gt;&lt;del&gt;DERBY-970&lt;/del&gt;&lt;/a&gt;, the subject of  the metadata stored prepared statements &lt;br/&gt;
came up.&lt;br/&gt;
The general questions are:&lt;/p&gt;

&lt;p&gt;    1) Why do we  use  stored prepared statements for metadata queries?    &lt;br/&gt;
    2) What issues might there be related to upgrade/downgrade  with the &lt;br/&gt;
metadata stored prepared statements?&lt;br/&gt;
    3) How do we  address potential upgrade/downgrade issues?&lt;/p&gt;


&lt;p&gt;MY QUESTIONS&lt;br/&gt;
Anyone know when/why  the dropJDBCMetadataSPSes()  on all version changes was &lt;br/&gt;
removed between Cloudcape 5.1.60 and  contribution? &lt;br/&gt;
How do we deliver bug fixes for metadata queries or handle changes in the &lt;br/&gt;
metadata  queries in Derby?&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12330229">DERBY-1107</key>
            <summary>For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Mar 2006 06:48:45 +0000</created>
                <updated>Thu, 2 May 2013 03:29:17 +0100</updated>
                            <resolved>Mon, 10 Nov 2008 17:20:00 +0000</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12371835" author="knutanders" created="Sat, 25 Mar 2006 16:04:56 +0000"  >&lt;p&gt;I have had a look at the code, and I&apos;m not sure there is a problem&lt;br/&gt;
with SPSs and upgrade.&lt;/p&gt;

&lt;p&gt;In hard/full upgrade, dropJDBCMetadataSPSes() is called, hence the&lt;br/&gt;
SPSs are dropped and regenerated.&lt;/p&gt;

&lt;p&gt;In soft upgrade mode, SPSs aren&apos;t used. Instead,&lt;br/&gt;
EmbedDatabaseMetaData.getPreparedQuery() will read the query directly&lt;br/&gt;
from metadata.properties.&lt;/p&gt;

&lt;p&gt;When you did the upgrade/downgrade test, did you confirm that the&lt;br/&gt;
metadata calls returned incorrect/old results, or did you only look at&lt;br/&gt;
the contents of SYS.SYSSTATEMENTS?&lt;/p&gt;</comment>
                            <comment id="12372034" author="kmarsden" created="Tue, 28 Mar 2006 08:10:20 +0100"  >&lt;p&gt;This issue is not related to upgrade but to maintenance version (3 and 4th digit )  changes.&lt;br/&gt;
If a bug is fixed in the metadata on a new maintenence version the bug fix is not picked up if you change to a newer version.  e.g. 10.1.2.1  to 10.1.2.4.   Nor does it go back to the old query version when you go back to 10.1.2.1.&lt;/p&gt;

&lt;p&gt;I tend to think handleMinorRevisionChange needs to drop the JDBC SPS&apos;s in addition to clearing the SPS plans in this case, but am not totally sure.&lt;/p&gt;

&lt;p&gt;At the time I tested I just checked the SPS&apos;s but I think that a metadata call would not act like soft upgrade for this case.&lt;/p&gt;



</comment>
                            <comment id="12372265" author="knutanders" created="Thu, 30 Mar 2006 00:56:31 +0100"  >&lt;p&gt;I tried running a test like the one Kathey did, and I can verify that&lt;br/&gt;
the queries returned the old results even after the upgrade. Adding&lt;br/&gt;
code for dropping and regenerating the SPSs in&lt;br/&gt;
handleMinorRevisionChange() made it work.&lt;/p&gt;

&lt;p&gt;Since handleMinorRevisionChange() is called on all types of version&lt;br/&gt;
changes, I suggest that we move the code for dropping/regenerating&lt;br/&gt;
SPSs from doFullUpgrade() to handleMinorRevisionChange(). The attached&lt;br/&gt;
patch (derby-1107-proposal1.diff) shows this change. I have not tested&lt;br/&gt;
the patch very much, it is only meant as a starting point for a&lt;br/&gt;
discussion on how to solve the problem.&lt;/p&gt;

&lt;p&gt;I can&apos;t see that dropping the SPSs between maintenance releases should&lt;br/&gt;
cause any problems.&lt;/p&gt;</comment>
                            <comment id="12372342" author="kmarsden" created="Thu, 30 Mar 2006 10:04:26 +0100"  >&lt;p&gt;Thanks Knut for looking at this.  I have always known there were issues with this but never understood them well enough to dive in myself and think I could fix it so bear with me while I ask some questions about your fix and also the preexisting code.&lt;/p&gt;

&lt;p&gt;BEFORE YOUR CHANGE.&lt;/p&gt;

&lt;p&gt;1) There is one statement in the SYSIBM schema,  METADATA but it does not get created here.  There is a method in DataDictionaryImple createSystemSps that creates both but that is not called here.  It does seem to get created when a database is created via a call  DataDictionaryImpl.createSystemSps.   Should it be created and what is  the impact of not creating it?&lt;/p&gt;

&lt;p&gt;AFTER  YOUR CHANGE&lt;/p&gt;

&lt;p&gt;2)  I think even if this goes into 10.1 right away,  the bug still exists when reverting to versions earlier than the fix. This means that we would have to be careful to make sure any changes to the metadata queries worked with the old version. For example we could not  add a new function  call to the metadata queries that get loaded with 10.1, because then reverting to the old version would fail because the java class would not be  there.    Maybe that is not so bad, because it is only changes on 10.1 itself we would have to watch out for.  For 10.2 and higher it would get loaded from metadata.properties on soft upgrade.  Is that correct?&lt;/p&gt;






















&lt;p&gt;1)  It seems to me that  assuming your fix went into 10.1 right away,  we still have and will always have an issue with the metadata statements getting updated properly when you go back to a 10.1 version prior to the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1107&quot; title=&quot;For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1107&quot;&gt;&lt;del&gt;DERBY-1107&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
This would mean that  none of the existing statements could have new stored procedure calls added.  This is because those stored procedures could not be used when you go back to a previous versions.  Is that correct? &lt;/p&gt;









&lt;p&gt;Bear with me while I &lt;/p&gt;

&lt;p&gt;Then the only issue we have is one that cannot be solved.  &lt;br/&gt;
That problem is that metadata queries will not get dropped when reverting to 10.1 releases before &lt;/p&gt;

&lt;p&gt;The issue that we will always have to be careful of is that  the metadata queries that get accessed with the metadata queries that get loaded  with 10.1 will not be able to reference any new stored procedures, because.  Addition of &lt;/p&gt;




</comment>
                            <comment id="12372346" author="kmarsden" created="Thu, 30 Mar 2006 10:30:09 +0100"  >&lt;p&gt;Sorry there was some cruft that printed with my previous comment.&lt;br/&gt;
Can&apos;t delete anymore. Comment should have been just the first part:&lt;/p&gt;

&lt;p&gt;Thanks Knut for looking at this. I have always known there were issues with this but never understood them well enough to dive in myself and think I could fix it so bear with me while I ask some questions about your fix and also the preexisting code.&lt;/p&gt;

&lt;p&gt;BEFORE YOUR CHANGE.&lt;/p&gt;

&lt;p&gt;1) There is one statement in the SYSIBM schema, METADATA but it does not get created here. There is a method in DataDictionaryImple createSystemSps that creates both but that is not called here. It does seem to get created when a database is created via a call DataDictionaryImpl.createSystemSps. Should it be created and what is the impact of not creating it?&lt;/p&gt;

&lt;p&gt;AFTER YOUR CHANGE&lt;/p&gt;

&lt;p&gt;2) I think even if this goes into 10.1 right away, the bug still exists when reverting to versions earlier than the fix. This means that we would have to be careful to make sure any changes to the metadata queries worked with the old version. For example we could not add a new function call to the metadata queries that get loaded with 10.1, because then reverting to the old version would fail because the java class would not be there. Maybe that is not so bad, because it is only changes on 10.1 itself we would have to watch out for. For 10.2 and higher it would get loaded from metadata.properties on soft upgrade. Is that correct?&lt;/p&gt;</comment>
                            <comment id="12372427" author="knutanders" created="Thu, 30 Mar 2006 22:20:54 +0100"  >&lt;p&gt;Kathey wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; BEFORE YOUR CHANGE.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; 1) There is one statement in the SYSIBM schema, METADATA but it does&lt;br/&gt;
&amp;gt;    not get created here. There is a method in DataDictionaryImple&lt;br/&gt;
&amp;gt;    createSystemSps that creates both but that is not called here. It&lt;br/&gt;
&amp;gt;    does seem to get created when a database is created via a call&lt;br/&gt;
&amp;gt;    DataDictionaryImpl.createSystemSps. Should it be created and what&lt;br/&gt;
&amp;gt;    is the impact of not creating it?&lt;/p&gt;

&lt;p&gt;This is interesting! Only statements in the SYS schema are dropped and&lt;br/&gt;
regenerated. To check what happens on upgrade, I created a database&lt;br/&gt;
with 10.1.2.1 and looked at the values returned by &quot;execute statement&lt;br/&gt;
SYSIBM.METADATA&quot; in 10.2 with soft and hard upgrade. The values were&lt;br/&gt;
&lt;b&gt;not&lt;/b&gt; the same as when I created the database with 10.2. The changes&lt;br/&gt;
are probably caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-965&quot; title=&quot;DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-965&quot;&gt;&lt;del&gt;DERBY-965&lt;/del&gt;&lt;/a&gt; which modified the METADATA&lt;br/&gt;
statement.&lt;/p&gt;

&lt;p&gt;I think we should drop the SPSs in both SYSIBM and SYS when performing&lt;br/&gt;
a hard upgrade and use createSystemSps() to regenerate them. This&lt;br/&gt;
would however not solve the soft upgrade case for SYSIBM.METADATA. We&lt;br/&gt;
need to make SystemProcedures.METADATA() read metadata_net.properties&lt;br/&gt;
when running in soft upgrade mode.&lt;/p&gt;

&lt;p&gt;&amp;gt; AFTER YOUR CHANGE&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; 2) I think even if this goes into 10.1 right away, the bug still&lt;br/&gt;
&amp;gt;    exists when reverting to versions earlier than the fix. This&lt;br/&gt;
&amp;gt;    means that we would have to be careful to make sure any changes&lt;br/&gt;
&amp;gt;    to the metadata queries worked with the old version. For example&lt;br/&gt;
&amp;gt;    we could not add a new function call to the metadata queries that&lt;br/&gt;
&amp;gt;    get loaded with 10.1, because then reverting to the old version&lt;br/&gt;
&amp;gt;    would fail because the java class would not be there. Maybe that&lt;br/&gt;
&amp;gt;    is not so bad, because it is only changes on 10.1 itself we would&lt;br/&gt;
&amp;gt;    have to watch out for. For 10.2 and higher it would get loaded&lt;br/&gt;
&amp;gt;    from metadata.properties on soft upgrade. Is that correct?&lt;/p&gt;

&lt;p&gt;All of what you said above is correct.&lt;/p&gt;</comment>
                            <comment id="12372616" author="dagw" created="Fri, 31 Mar 2006 11:50:13 +0100"  >&lt;p&gt;&amp;gt; I think we should drop the SPSs in both SYSIBM and SYS when performing&lt;br/&gt;
&amp;gt; a hard upgrade and use createSystemSps() to regenerate them. This&lt;br/&gt;
&amp;gt; would however not solve the soft upgrade case for SYSIBM.METADATA. We&lt;br/&gt;
&amp;gt; need to make SystemProcedures.METADATA() read metadata_net.properties&lt;br/&gt;
&amp;gt; when running in soft upgrade mode. &lt;/p&gt;

&lt;p&gt;Good find!. This would need to get fixed for SUR metadata changes to&lt;br/&gt;
work correctly under both soft and hard upgrade when running with the&lt;br/&gt;
client! (it would not be a regression though, due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-965&quot; title=&quot;DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-965&quot;&gt;&lt;del&gt;DERBY-965&lt;/del&gt;&lt;/a&gt;).&lt;br/&gt;
I think your suggestion makes good sense.&lt;/p&gt;</comment>
                            <comment id="12372617" author="dagw" created="Fri, 31 Mar 2006 11:50:16 +0100"  >&lt;p&gt;&amp;gt; I think we should drop the SPSs in both SYSIBM and SYS when performing&lt;br/&gt;
&amp;gt; a hard upgrade and use createSystemSps() to regenerate them. This&lt;br/&gt;
&amp;gt; would however not solve the soft upgrade case for SYSIBM.METADATA. We&lt;br/&gt;
&amp;gt; need to make SystemProcedures.METADATA() read metadata_net.properties&lt;br/&gt;
&amp;gt; when running in soft upgrade mode. &lt;/p&gt;

&lt;p&gt;Good find!. This would need to get fixed for SUR metadata changes to&lt;br/&gt;
work correctly under both soft and hard upgrade when running with the&lt;br/&gt;
client! (it would not be a regression though, due to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-965&quot; title=&quot;DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-965&quot;&gt;&lt;del&gt;DERBY-965&lt;/del&gt;&lt;/a&gt;).&lt;br/&gt;
I think your suggestion makes good sense.&lt;/p&gt;</comment>
                            <comment id="12542860" author="kmarsden" created="Thu, 15 Nov 2007 19:40:08 +0000"  >&lt;p&gt;I wonder if the best way to resolve this is to introduce a new stored procedure that can drop all the metadata SPS;s similar to the old Cloudscape procedure&lt;br/&gt;
&lt;a href=&quot;http://publibfi.boulder.ibm.com/epubs/html/cloud51/javadoc/com/ibm/db2j/database/Database.html#dropAllJDBCMetaDataSPSes(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://publibfi.boulder.ibm.com/epubs/html/cloud51/javadoc/com/ibm/db2j/database/Database.html#dropAllJDBCMetaDataSPSes(&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This could be run, if someone needed an update to a metadata statement on upgrade.&lt;/p&gt;</comment>
                            <comment id="12642006" author="kmarsden" created="Thu, 23 Oct 2008 00:36:20 +0100"  >&lt;p&gt;I think I will approach this by creating a stored procedure &lt;br/&gt;
SYSCS_UTIL.SYSCS_UPDATE_METADATA_QUERIES()&lt;/p&gt;

&lt;p&gt;I think trying to do something automatic is going to be problematic because if we automatically update the metadata queries on upgrade, they may not be valid if the user downgrades their version.  Please let me know if you have any concerns.  &lt;/p&gt;

&lt;p&gt;Silly question...&lt;/p&gt;

&lt;p&gt;Is it ok/possible to add a system stored procedure in a maintenance branch or would this change have to be limited to the trunk.&lt;/p&gt;</comment>
                            <comment id="12642432" author="knutanders" created="Fri, 24 Oct 2008 11:39:45 +0100"  >&lt;p&gt;&amp;gt; Is it ok/possible to add a system stored procedure in a maintenance branch or would this change have to be limited to the trunk.&lt;/p&gt;

&lt;p&gt;Possible: Not sure. I thought the system stored procedures were only created when the database was created or when the database was upgraded (new minor version). So I think you would need (a) a way to create the procedure when no database upgrade has taken place, and (b) a way to tell the upgrade code to only create this procedure if it hasn&apos;t already been created. Those mechanisms haven&apos;t been needed before since the set of system procedures was uniquely identified by the major.minor version.&lt;/p&gt;</comment>
                            <comment id="12642974" author="kmarsden" created="Mon, 27 Oct 2008 17:45:38 +0000"  >&lt;p&gt;Attached is a patch to add the SYSCS_UTIL.SYSCS_UPDATE_METADATA_QUERIES()&lt;/p&gt;

&lt;p&gt;system stored procedure.  I am running tests now.   I manually tested the change by backing out the change for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-876&quot; title=&quot;DatabaseMetaData.getSchemas() is not JDBC 3.0 compliant&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-876&quot;&gt;&lt;del&gt;DERBY-876&lt;/del&gt;&lt;/a&gt; and creating a database and then calling the stored procedure once the correct metadata.properties was restored.&lt;/p&gt;

&lt;p&gt;The patch doesn&apos;t include regression tests. I am not quite sure how to automate regression tests for this.  Any advice is welcome.&lt;/p&gt;


</comment>
                            <comment id="12643039" author="kmarsden" created="Mon, 27 Oct 2008 20:15:58 +0000"  >&lt;p&gt;There were a couple of tests that needed to be updated because of the extra system procedure.  Those are included in the new patch derby-1107_diff2.txt&lt;/p&gt;</comment>
                            <comment id="12644161" author="myrna" created="Thu, 30 Oct 2008 23:30:24 +0000"  >&lt;p&gt;I had a look at the patch and it all seems reasonable to me.&lt;/p&gt;

&lt;p&gt;Too bad we can&apos;t do something automatic. Maybe it&apos;s something to keep in mind for a possible version 11...(then we&apos;re talking migration rather than upgrade, and we could make the change to always drop &amp;amp; recreate).&lt;/p&gt;

&lt;p&gt;I do think the new procedure needs to be documented in such a way that customers doing upgrades can find it.&lt;/p&gt;</comment>
                            <comment id="12644303" author="chaase3" created="Fri, 31 Oct 2008 14:18:20 +0000"  >&lt;p&gt;I created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3933&quot; title=&quot;Reference Manual: document new SYSCS_UTIL.SYSCS_UPDATE_METADATA_QUERIES() system procedure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3933&quot;&gt;&lt;del&gt;DERBY-3933&lt;/del&gt;&lt;/a&gt; to add documentation for this procedure to the Reference Manual.&lt;/p&gt;</comment>
                            <comment id="12644312" author="knutanders" created="Fri, 31 Oct 2008 14:54:55 +0000"  >&lt;p&gt;Could the procedure be tested by checking the columns LASTCOMPILED and VALID in SYS.SYSSTATEMENTS? VALID is true when the statement has been compiled and no recompilation is needed, and false otherwise. LASTCOMPILED should contain a time stamp telling the last time the statement was compiled. So after the procedure has been called, all meta-data statements should have VALID=false and LASTCOMPILED=NULL.&lt;/p&gt;</comment>
                            <comment id="12644789" author="kmarsden" created="Mon, 3 Nov 2008 19:25:57 +0000"  >&lt;p&gt;I attempted to add the test described by Knut Anders to DatabaseMetaDataTest and found failures in the upgrade tests because the procedure didn&apos;t exist in old versions.  When I disabled the test for versions less than 10.5 and I got assertion failures checking the SYSSTATEMENTS columns, which I don&apos;t fully understand. But all of this got me thinking.  Firstly I think that users shouldn&apos;t be able to update metadata queries if the database version less than 10.5 because there will be no procedure available to restore the metadata queries if they go back.  Secondly I think maybe we can automate this after all.  If we make the logic:&lt;/p&gt;

&lt;p&gt;If the database version &amp;gt;=10.5 update the metadata queries on any version change (up or down).&lt;/p&gt;

&lt;p&gt;But I want to make sure that this will really work. For some reason I can&apos;t remember I thought it might not in the past. Maybe something related to soft upgrade handling of metadata queries?  Does anyone have thoughts on this?&lt;/p&gt;
</comment>
                            <comment id="12645323" author="kmarsden" created="Wed, 5 Nov 2008 21:12:47 +0000"  >&lt;p&gt;Attached is an alternate automatic fix for this issue.  We will drop and recreate the SPSes with any version change up or down, as long as the database version is  &amp;gt;= 10.5.  This  should prevent any problems going back after soft upgrade and keep the spses in sync with the version moving forward without the need for a new stored procedure.&lt;/p&gt;

&lt;p&gt;The only impact I can imagine is that it may take slightly longer to boot the database on version change.  Upgrade tests passed. Running all tests now.&lt;/p&gt;


&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12645507" author="kmarsden" created="Thu, 6 Nov 2008 16:45:31 +0000"  >&lt;p&gt;tests passed patch derby-1107_noproc_diff.txt.&lt;/p&gt;</comment>
                            <comment id="12645807" author="knutanders" created="Fri, 7 Nov 2008 16:17:22 +0000"  >&lt;p&gt;It sounds safe to me too, as long as we only do this for 10.5 and higher. I don&apos;t think the time to boot on version change is a big issue, and the code will be more robust if we recreate the SPSs on version change.&lt;/p&gt;

&lt;p&gt;With this patch, will they be recreated on every version change, or only when one of the first three digits in the version number changes? That is, will they get recreated when we move from 10.5.1.0 to 10.5.1.1? I&apos;m getting a bit confused by the naming in DD_Version, since it seems to use major/minor version in a different way than we normally do.&lt;/p&gt;</comment>
                            <comment id="12645814" author="kmarsden" created="Fri, 7 Nov 2008 16:37:34 +0000"  >&lt;p&gt;It will get changed on any version change.  I tested by bumping to 10.5.0.1 and the SPSes got recreated.  The minor version as referenced in DD_Version takes into account all digits.  I&apos;ll go ahead and check this in later today.&lt;/p&gt;



</comment>
                            <comment id="12645869" author="knutanders" created="Fri, 7 Nov 2008 20:07:37 +0000"  >&lt;p&gt;Thanks for verifying. And +1 to commit.&lt;/p&gt;

&lt;p&gt;This still leaves the problem if we make a change that requires recompilation and don&apos;t bump the version on the branch. You mentioned one solution is to use the svn revision number when we compare the versions. If we had a way to detect that recompilation was needed, it would probably be simpler just to bump the revision when needed. Could we use the upgrade tests to detect it? Currently, the upgrade tests don&apos;t test upgrades from previous releases on the same branch, but I don&apos;t think there&apos;s anything preventing us from changing that. And the upgrade tests should run all meta-data queries, so that should be sufficient to detect these problems, right?&lt;/p&gt;</comment>
                            <comment id="12646302" author="kmarsden" created="Mon, 10 Nov 2008 17:20:00 +0000"  >&lt;p&gt;Resolving this issue as the fix is checked into trunk. Note: This fix &lt;b&gt;should not&lt;/b&gt;  be backported as the metadata update can only happen for versions 10.5 and higher.&lt;/p&gt;</comment>
                            <comment id="12646308" author="kmarsden" created="Mon, 10 Nov 2008 17:33:49 +0000"  >&lt;p&gt;Thanks Knut for looking at the patch.  Perhaps you are right that just manually bumping the version when needed is the best solution.  As for the upgrade tests,  I will open a Jira to add upgrade tests for third and fourth digit upgrades and put it on my TODO  list to add that in when we have our first maintenance release on the 10.5 branch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12375774">DERBY-3000</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12407595">DERBY-3933</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12324725" name="derby-1107-proposal1.diff" size="1430" author="knutanders" created="Thu, 30 Mar 2006 00:56:26 +0100"/>
                            <attachment id="12392875" name="derby-1107_diff.txt" size="6474" author="kmarsden" created="Mon, 27 Oct 2008 17:45:38 +0000"/>
                            <attachment id="12392888" name="derby-1107_diff2.txt" size="9219" author="kmarsden" created="Mon, 27 Oct 2008 20:15:58 +0000"/>
                            <attachment id="12393397" name="derby-1107_noproc_diff.txt" size="5798" author="kmarsden" created="Wed, 5 Nov 2008 21:12:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 25 Mar 2006 16:04:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22308</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0unb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38783</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>