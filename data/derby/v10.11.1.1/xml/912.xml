<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:07 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-912/DERBY-912.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-912] OutOfMemory error on continuous execution of SQL statement</title>
                <link>https://issues.apache.org/jira/browse/DERBY-912</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;After fixing the original memory leak, I still run into problems on repeated execution of a sql statement. Take the sample program in the bug and run it with a small heap size (4m). After around 80-90K executions an outofmemory error is thrown. I took snapshots of the heap while the program was running but couldn&apos;t find anything obviously wrong. &lt;/p&gt;</description>
                <environment>cygwin, jdk 1.4</environment>
        <key id="12328484">DERBY-912</key>
            <summary>OutOfMemory error on continuous execution of SQL statement</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12326675">DERBY-756</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="mkhettry">Manish Khettry</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Feb 2006 04:00:57 +0000</created>
                <updated>Thu, 24 Jan 2008 13:10:04 +0000</updated>
                            <resolved>Wed, 25 Oct 2006 08:55:31 +0100</resolved>
                                    <version>10.0.2.0</version>
                                    <fixVersion>10.2.2.0</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12366875" author="mkhettry" created="Sat, 18 Feb 2006 11:42:34 +0000"  >&lt;p&gt;It looks like elements from the sorts vector in RAMTransaction are never removed. dropSort merely nulls out the element. If you repeatedly open/execute/close a query that uses a sorter you will leak one reference every iteration. &lt;/p&gt;</comment>
                            <comment id="12367065" author="mikem" created="Tue, 21 Feb 2006 04:04:30 +0000"  >&lt;p&gt;Is the comment about the sort memory being used in AccessManger an observation about  the original test program?  &lt;br/&gt;
Yes sorts currently require one array entry per sort per transaction.  At end of transaction this memory is freed. When &lt;br/&gt;
originally coded the expectation was small number of sorts per transaction.   Note it&lt;br/&gt;
is not as simple as shrinking the array in dropSort, as the array index is currently the &quot;sort id&quot;.  So a little more work&lt;br/&gt;
would be necessary.  A couple of options:&lt;br/&gt;
1) see if we could reuse sort id&apos;s. &lt;br/&gt;
2) allocate sort id&apos;s differently and then probably store sort in hash table rather than array/vector&lt;/p&gt;

&lt;p&gt;Any idea if this is the &quot;only&quot; remaining growing memory issue for this test.  The growth should be only one array entry&lt;br/&gt;
per statement, the contents are null&apos;d so garbage collection should happen on everything else.&lt;/p&gt;</comment>
                            <comment id="12367238" author="mkhettry" created="Wed, 22 Feb 2006 03:16:29 +0000"  >&lt;p&gt;Yes, it is from the original test program. BTW, I added a conn.commit() to the original program-- so it basically looks like this:&lt;/p&gt;

&lt;p&gt;while (true)&lt;/p&gt;
{
  ps = conn.prepareStatement(sql);
  rs = ps.executeQuery();
  // read from rs.
  conn.commit();
  // close rs, ps
}

&lt;p&gt;and it still runs out of memory. Shouldn&apos;t doing a commit create a new transaction?&lt;/p&gt;</comment>
                            <comment id="12443644" author="knutanders" created="Thu, 19 Oct 2006 21:55:48 +0100"  >&lt;p&gt;The problem seems to be that RAMTransaction.sorts is only cleared when the connection is closed, not when the transaction is committed. RAMTransaction.commit() calls closeControllers() with closeHeldControllers=false, so sorts.removeAllElements() is not called on commit.&lt;/p&gt;</comment>
                            <comment id="12443651" author="knutanders" created="Thu, 19 Oct 2006 22:41:45 +0100"  >&lt;p&gt;One simple solution is to remove all trailing null elements from the sorts vector on commit. That should leave the held controllers open and not interfere with the sort ids. While it does not solve the general case (a held controller may prevent space reclaimation at the start of the vector), it does solve the most common cases. With that change, the test program completed without running out of memory (-Xmx10M).&lt;/p&gt;</comment>
                            <comment id="12443921" author="knutanders" created="Fri, 20 Oct 2006 19:32:30 +0100"  >&lt;p&gt;Attaching a patch which implements reuse of sort identifiers, as suggested by Mike.&lt;/p&gt;

&lt;p&gt;I have successfully run the repro for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-756&quot; title=&quot;OutOfMemory Error on continous execution of select statement using COUNT() and DISTINCT on same connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-756&quot;&gt;&lt;del&gt;DERBY-756&lt;/del&gt;&lt;/a&gt; without getting OutOfMemoryError. I have also run the full set of regression tests (derbyall + JUnit) with no failures.&lt;/p&gt;

&lt;p&gt;The patch is ready for review. Thanks!&lt;/p&gt;</comment>
                            <comment id="12444247" author="dyret" created="Tue, 24 Oct 2006 09:29:40 +0100"  >&lt;p&gt;I think the patch looks good. Is there a reason why freeSortIds cannot be a valid ArrayList at all times? If it was, you would not need the null-tests. I guess always having a valid ArrayList would increase footprint unnecessarily if it is rarely used. Is that added footprint still a problem if freeSortIds is initialized to an ArrayList with zero capacity (new ArrayList(0))?&lt;/p&gt;

&lt;p&gt;+1 to commit&lt;/p&gt;</comment>
                            <comment id="12444266" author="knutanders" created="Tue, 24 Oct 2006 10:34:17 +0100"  >&lt;p&gt;Thanks for reviewing the patch, Dyre. I agree with your comment about freeSortIds and null tests. Uploading a new patch which initializes freeSortIds when the sorts vector is initialized. Since freeSortIds is only used when sorts != null, no tests for freeSortIds != null are needed. I have started a derbyall run.&lt;/p&gt;</comment>
                            <comment id="12444595" author="knutanders" created="Wed, 25 Oct 2006 08:55:31 +0100"  >&lt;p&gt;Committed to trunk with revision 467578.&lt;br/&gt;
Committed to 10.2 with revision 467580.&lt;/p&gt;</comment>
                            <comment id="12460237" author="johnemb" created="Thu, 21 Dec 2006 12:19:53 +0000"  >&lt;p&gt;Linking &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-912&quot; title=&quot;OutOfMemory error on continuous execution of SQL statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-912&quot;&gt;&lt;del&gt;DERBY-912&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2176&quot; title=&quot;OutOfMemoryError in Network Server after running DOTS-like test for weeks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2176&quot;&gt;&lt;del&gt;DERBY-2176&lt;/del&gt;&lt;/a&gt;, as preliminary test results show that both issues seem to be fixed between 10.2.16 and 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12562049" author="dyret" created="Thu, 24 Jan 2008 13:10:04 +0000"  >&lt;p&gt;This issue is resolved and has not been updated in the last 12 months (since 24/Jan/07). &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12353523">DERBY-1978</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12358589">DERBY-2176</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12343523" name="derby-912-v2.diff" size="2507" author="knutanders" created="Tue, 24 Oct 2006 10:34:17 +0100"/>
                            <attachment id="12343395" name="derby-912.diff" size="2298" author="knutanders" created="Fri, 20 Oct 2006 19:32:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Feb 2006 04:04:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29769</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zpj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39603</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>