<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4157/DERBY-4157.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4157] Create a test to verify that virgin metadata is identical to hard-upgraded metadata</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4157</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We should write a test to verify that the metadata is correct for each release for all hard-upgrade trajectories which terminate in that release. The test should examine all system tables. Note that if there are N releases, then there will (2&amp;lt;sup&amp;gt;N&amp;lt;/sup&amp;gt; - N) - 1 trajectories to examine.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12422591">DERBY-4157</key>
            <summary>Create a test to verify that virgin metadata is identical to hard-upgraded metadata</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Apr 2009 19:24:11 +0100</created>
                <updated>Fri, 21 Jan 2011 18:28:01 +0000</updated>
                            <resolved>Mon, 22 Jun 2009 17:47:27 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12698867" author="rhillegas" created="Tue, 14 Apr 2009 19:21:47 +0100"  >&lt;p&gt;Attaching derby-4157-01-aa-refactor.diff. This patch is a first step toward writing the new test. This patch factors out some of the existing upgrade test machinery so that the new test can re-use that machinery:&lt;/p&gt;

&lt;p&gt;1) logic to discover old versions&lt;br/&gt;
2) logic to create class loaders out of those old versions&lt;br/&gt;
3) logic to use those class loaders&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;


&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/OldVersions.java&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeClassLoader.java&lt;/p&gt;

&lt;p&gt;New classes to hold the logic which has been factored out. OldVersions used to be an inner class of _Suite. UpgradeClassLoader consists of code extracted from UpgradeRun and PhaseChanger.&lt;/p&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseChanger.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/_Suite.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java&lt;/p&gt;

&lt;p&gt;Pre-existing code re-wired to use the new shareable code.&lt;/p&gt;</comment>
                            <comment id="12698868" author="rhillegas" created="Tue, 14 Apr 2009 19:23:54 +0100"  >&lt;p&gt;Upgrade tests passed cleanly for me. Committed derby-4157-01-aa-refactor.diff at subversion revision 764912.&lt;/p&gt;</comment>
                            <comment id="12707023" author="rhillegas" created="Thu, 7 May 2009 19:20:57 +0100"  >&lt;p&gt;Attaching derby-4157-02-aa-newtest.diff. This introduces a new test for exercising all upgrade trajectories and verifying that the metadata in freshly created databases is the same as the metadata in pre-existing databases which are hard-upgraded. As currently configured, the test only verifies hard-upgrade trajectories. However, the test can be changed to test arbitrary mixes of hard and soft upgrade also.&lt;/p&gt;

&lt;p&gt;The test has been run on all non-vacuous hard-upgrade trajectories that are possible given the following set of releases:&lt;/p&gt;

&lt;p&gt;    10.0.2.1&lt;br/&gt;
    10.1.3.1&lt;br/&gt;
    10.2.2.1&lt;br/&gt;
    10.3.3.0&lt;br/&gt;
    10.4.2.1&lt;br/&gt;
    10.5.1.1&lt;/p&gt;

&lt;p&gt;Bugs have been logged already for the metadata discrepancies which turned up on those trajectories. The test skips over those known discrepancies. That is, if you run the test against that set of versions, you will get a clean run.&lt;/p&gt;

&lt;p&gt;---------------------&lt;/p&gt;

&lt;p&gt;The following description recaps the header comment in the test:&lt;/p&gt;

&lt;p&gt;Test all upgrade trajectories. This test compares the metadata in upgraded databases to the metadata in databases created from scratch. Given a collection of releases, this test does the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Builds the set of all upgrade trajectories possible on that collection of releases. An upgrade trajectory is a sorted subset of those releases. Each subset is sorted in ascending release order. We exclude the vacuous empty subset and the uninteresting singleton subsets. A set of N releases gives rise to ((2**N) - N) - 1 hard-upgrade trajectories.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For each trajectory, we create two databases:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  o A starting point database created with the first release in the trajectory. This database is then upgraded through all of the intermediate releases in the trajectory until it is at the level of the last release in the trajectory.&lt;br/&gt;
  o An ending point database created with the last release in the trajectory.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;We then compare the metadata in the starting point and ending point databases.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;By default we don&apos;t consider soft-upgrades. Also by default, we consider trajectories with more than one release from the same branch. You can parameterize or customize some constants (see below) if you want to change these decisions.&lt;/p&gt;

&lt;p&gt;By default we consider all trajectories possible on the collection of releases listed in _Suite. If you want to consider a different collection of releases, you can override the _Suite collection by setting the system property &quot;derbyTesting.oldVersionsPath&quot;. Here, for instance, is the command line to run this test against a customized list of releases:&lt;/p&gt;

&lt;p&gt;     java -XX:MaxPermSize=128M -Xmx512m \&lt;br/&gt;
     -DderbyTesting.oldReleasePath=/Users/me/myDerbyReleaseDirectory \&lt;br/&gt;
     -DderbyTesting.oldVersionsPath=/Users/me/fileContainingMyListOfTastyReleases \&lt;br/&gt;
     junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeTrajectoryTest&lt;/p&gt;

&lt;p&gt;For extra verbose output, you can set the &quot;derby.tests.debug&quot; property too:&lt;/p&gt;

&lt;p&gt;     java -XX:MaxPermSize=128M -Xmx512m \&lt;br/&gt;
     -DderbyTesting.oldReleasePath=/Users/me/myDerbyReleaseDirectory \&lt;br/&gt;
     -DderbyTesting.oldVersionsPath=/Users/me/fileContainingMyListOfTastyReleases \&lt;br/&gt;
     -Dderby.tests.debug=true \&lt;br/&gt;
     junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeTrajectoryTest&lt;/p&gt;

&lt;p&gt;---------------------&lt;/p&gt;

&lt;p&gt;My next step will be to run the test against all hard-upgrade trajectories possible on the full set of 14 releases that I have on my machine. I think this will take about 10 hours.&lt;/p&gt;

&lt;p&gt;    10.0.2.1&lt;br/&gt;
    10.1.1.0&lt;br/&gt;
    10.1.2.1&lt;br/&gt;
    10.1.3.1&lt;br/&gt;
    10.2.1.6&lt;br/&gt;
    10.2.2.0&lt;br/&gt;
    10.2.2.1&lt;br/&gt;
    10.3.1.4&lt;br/&gt;
    10.3.2.1&lt;br/&gt;
    10.3.3.0&lt;br/&gt;
    10.4.1.3&lt;br/&gt;
    10.4.2.0&lt;br/&gt;
    10.4.2.1&lt;br/&gt;
    10.5.1.1&lt;/p&gt;

&lt;p&gt;---------------------&lt;/p&gt;

&lt;p&gt;This patch consists of the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/services/info/ProductVersionHolder.java&lt;/p&gt;

&lt;p&gt;Made a constant public so that I could use it to decode version numbers.&lt;/p&gt;


&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Version.java&lt;/p&gt;

&lt;p&gt;This new class encapsulates the behavior of Versions and Trajectories.&lt;/p&gt;


&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeTrajectoryTest.java&lt;/p&gt;

&lt;p&gt;This is the actual test. Each trajectory is a separate test case.&lt;/p&gt;</comment>
                            <comment id="12720929" author="rhillegas" created="Wed, 17 Jun 2009 22:59:52 +0100"  >&lt;p&gt;Attaching a new version of this test: derby-4157-02-ab-newtest.diff. This changes the test so that, by default, it only runs a minimal set of trajectories, viz., just those which begin with some release and then upgrade through ALL intermediate releases up to the highest release. On a set of N releases, this gives rise to only N-1 trajectories, rather than the daunting  ((2**N) - N) - 1 trajectories in the full test. I think that this minimal default has some value. It would have caught the problem logged in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4214&quot; title=&quot;Inconsistent metadata for CLOBGETSUBSTRING, depending on your upgrade trajectory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4214&quot;&gt;&lt;del&gt;DERBY-4214&lt;/del&gt;&lt;/a&gt;. However, it would not have caught the problem logged in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4215&quot; title=&quot;Extra permissions tuple if you hard-upgrade from 10.0 without doing an intermediate hard-upgrade to 10.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4215&quot;&gt;&lt;del&gt;DERBY-4215&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With the small memory settings in the previous experiment, I ran out of memory running the full test. I increased the memory to 1G for perm gen space and 1G for heap. With that setting I was able to run for a half hour without running out of memory--then I killed the test. That may be good enough. Or it may not be. This is the new command line to run the full test:&lt;/p&gt;

&lt;p&gt;     java -XX:MaxPermSize=1024m -Xmx1024m \&lt;br/&gt;
     -DderbyTesting.allTrajectories=true \&lt;br/&gt;
     -DderbyTesting.oldReleasePath=/Users/me/myDerbyReleaseDirectory \&lt;br/&gt;
     -DderbyTesting.oldVersionsPath=/Users/me/fileContainingMyListOfTastyReleases \&lt;br/&gt;
     junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeTrajectoryTest&lt;/p&gt;

&lt;p&gt;I miscalculated how long it would take to run the full test against all upgrade trajectories which are possible on my set of releases. My 14 releases give rise to 16369 trajectories. I was finding that the long trajectories were taking about 10 seconds apiece to evaluate. That&apos;s about 19 days for the whole set. Needless to say, I am not going to run this sequence on my humble machine. If you need to run a particular trajectory, you can hand-edit the makeSampleTrajectories() method and uncomment the call to it.&lt;/p&gt;

&lt;p&gt;Here&apos;s the command line to run this test against the default (minimal) set of trajectories:&lt;/p&gt;

&lt;p&gt;     java -XX:MaxPermSize=1024m -Xmx1024m \&lt;br/&gt;
     -DderbyTesting.oldReleasePath=/Users/me/myDerbyReleaseDirectory \&lt;br/&gt;
     -DderbyTesting.oldVersionsPath=/Users/me/fileContainingMyListOfTastyReleases \&lt;br/&gt;
     junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeTrajectoryTest&lt;/p&gt;

&lt;p&gt;This test is not wired into the regression test suite. You have to run it standalone. As a sanity check I ran the full regression suite successfully.&lt;/p&gt;

&lt;p&gt;Committed at subversion revision 785826.&lt;/p&gt;</comment>
                            <comment id="12723651" author="rhillegas" created="Wed, 24 Jun 2009 18:34:39 +0100"  >&lt;p&gt;I have changed my mind about how many seconds make up an hour. Previously I estimated that it would take 19 days to test all of the upgrade trajectories. That was based on a belief that there were 360 seconds in an hour. I now think that on our planet, 3600 is a better figure. Given an hour that lasts 3600 seconds, it should only take around 2 days to test all of the trajectories. If you are interested in double-checking my arithmetic and beliefs, here&apos;s the formula I&apos;m using:&lt;/p&gt;

&lt;p&gt;Result = ( ( Trajectories * SecondsPerTrajectory ) / SecondsInHour ) / HoursInDay&lt;/p&gt;

&lt;p&gt;Trajectories = ((2**14) - 14) - 1 = 16369&lt;br/&gt;
SecondsPerTrajectory = 10&lt;br/&gt;
SecondsInHour = 3600&lt;br/&gt;
HoursInDay = 24&lt;/p&gt;

&lt;p&gt;Result = 1.9 days&lt;/p&gt;</comment>
                            <comment id="12723781" author="knutanders" created="Wed, 24 Jun 2009 23:41:00 +0100"  >&lt;p&gt;Google&apos;s calculator agrees: &amp;lt;URL:&lt;a href=&quot;http://www.google.com/search?q=%282&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.google.com/search?q=%282&lt;/a&gt;^14-14-1%29+*+10+seconds&amp;gt;&lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12733799" author="rhillegas" created="Tue, 21 Jul 2009 21:06:56 +0100"  >&lt;p&gt;Attaching derby-4157-03-aa-branchBug.diff. This patch changes the test for the discrepancies described in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4214&quot; title=&quot;Inconsistent metadata for CLOBGETSUBSTRING, depending on your upgrade trajectory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4214&quot;&gt;&lt;del&gt;DERBY-4214&lt;/del&gt;&lt;/a&gt;. Previously, we ignored those diffs for trajectories which ended at the 10.5.1.1 release. Now that we have a 10.5.2.0 release, the test needs to be broadened to all trajectories which end at the 10.5 branch. Committed at subversion revision 796517.&lt;/p&gt;</comment>
                            <comment id="12978032" author="kmarsden" created="Wed, 5 Jan 2011 23:21:40 +0000"  >&lt;p&gt;I merged the refactoring change, revision  764912 to 10.5, ran upgrade tests and checked into 10.5 with revision 105585.  Later I ran the full suite with the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4913&quot; title=&quot;10.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4913&quot;&gt;&lt;del&gt;DERBY-4913&lt;/del&gt;&lt;/a&gt; patch and saw these failures in the collation tests, perhaps from an insufficiently removed single use database from the upgrade tests. I will investigate and file an issue if it shows up in the nightly runs.&lt;/p&gt;


&lt;p&gt;1) CollationTest:territory=nojava.sql.SQLException: Failed to create database &apos;singleUse/oneusea&apos;, see the next exception for details.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:80)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:153)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:176)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:64)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:278)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:2452)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:396)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)&lt;br/&gt;
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:479)&lt;br/&gt;
	at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:423)&lt;br/&gt;
	at org.apache.derbyTesting.junit.Decorator$2.setUp(Decorator.java:189)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:18)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: java.sql.SQLException: Failed to create database &apos;singleUse/oneusea&apos;, see the next exception for details.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:73)&lt;br/&gt;
	... 33 more&lt;br/&gt;
Caused by: java.sql.SQLException: Directory C:\cygwin\test3\system\C:\cygwin\test3\system\singleUse\oneusea already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2204)&lt;br/&gt;
	... 31 more&lt;br/&gt;
Caused by: ERROR XBM0J: Directory C:\cygwin\test3\system\C:\cygwin\test3\system\singleUse\oneusea already exists.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:67)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.&amp;lt;init&amp;gt;(StandardException.java:80)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.&amp;lt;init&amp;gt;(StandardException.java:75)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:285)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.StorageFactoryService$9.run(StorageFactoryService.java:670)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(AccessController.java:251)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.StorageFactoryService.createServiceRoot(StorageFactoryService.java:650)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1782)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentService(BaseMonitor.java:1044)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.createPersistentService(Monitor.java:596)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:2446)&lt;br/&gt;
	... 30 more&lt;br/&gt;
2) CollationTest:territory=nojava.sql.SQLException: Failed to create database &apos;singleUse/oneusea&apos;, see the next exception for details.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:80)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:153)&lt;br/&gt;
	at java.sql.SQLException.&amp;lt;init&amp;gt;(SQLException.java:176)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:64)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:278)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:2452)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:396)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:322)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:297)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.openConnection(DriverManagerConnector.java:95)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.openConnection(DriverManagerConnector.java:47)&lt;br/&gt;
	at org.apache.derbyTesting.junit.TestConfiguration.openConnection(TestConfiguration.java:1363)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.tearDown(DropDatabaseSetup.java:54)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: java.sql.SQLException: Failed to create database &apos;singleUse/oneusea&apos;, see the next exception for details.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:73)&lt;br/&gt;
	... 32 more&lt;br/&gt;
Caused by: java.sql.SQLException: Directory C:\cygwin\test3\system\C:\cygwin\test3\system\singleUse\oneusea already exists.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2204)&lt;br/&gt;
	... 30 more&lt;br/&gt;
Caused by: ERROR XBM0J: Directory C:\cygwin\test3\system\C:\cygwin\test3\system\singleUse\oneusea already exists.&lt;br/&gt;
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:67)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.&amp;lt;init&amp;gt;(StandardException.java:80)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.&amp;lt;init&amp;gt;(StandardException.java:75)&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:285)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.StorageFactoryService$9.run(StorageFactoryService.java:670)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(AccessController.java:251)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.StorageFactoryService.createServiceRoot(StorageFactoryService.java:650)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1782)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.createPersistentService(BaseMonitor.java:1044)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.createPersistentService(Monitor.java:596)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.createDatabase(EmbedConnection.java:2446)&lt;br/&gt;
	... 29 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 11303,  Failures: 0,  Errors: 2&lt;/p&gt;

</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12424615">DERBY-4214</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12424629">DERBY-4215</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12419671">DERBY-4127</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433939">DERBY-4358</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12424754">DERBY-4216</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12405445" name="derby-4157-01-aa-refactor.diff" size="33763" author="rhillegas" created="Tue, 14 Apr 2009 19:21:46 +0100"/>
                            <attachment id="12407560" name="derby-4157-02-aa-newtest.diff" size="58479" author="rhillegas" created="Thu, 7 May 2009 19:20:57 +0100"/>
                            <attachment id="12410993" name="derby-4157-02-ab-newtest.diff" size="62161" author="rhillegas" created="Wed, 17 Jun 2009 22:59:52 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Jun 2009 22:41:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31144</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0jpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37010</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>