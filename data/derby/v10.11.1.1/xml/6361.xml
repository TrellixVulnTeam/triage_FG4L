<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6361/DERBY-6361.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6361] Valid statements rejected if Derby has not implicitly created the current user&apos;s schema.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6361</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;There are many examples of statements failing because Derby has not implicitly created the schema associated with the current user. You don&apos;t see this if the schema is the default APP schema. But if the user is anyone other than APP, then various statements can fail. Maybe we should implicitly create a schema even if the user isn&apos;t APP. Right now, you get an error like this:&lt;/p&gt;

&lt;p&gt;ERROR 42Y07: Schema &apos;ROOT&apos; does not exist&lt;/p&gt;

&lt;p&gt;The following script shows an example of this problem:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;create=true;user=esq&apos;;&lt;/p&gt;

&lt;p&gt;create table licreq( domain varchar( 10 ) );&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;user=root&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; fails&lt;br/&gt;
ALTER TABLE esq.licreq ADD COLUMN u_domain GENERATED ALWAYS AS (UPPER(domain));&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;user=app&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; succeeds&lt;br/&gt;
ALTER TABLE esq.licreq ADD COLUMN u_domain GENERATED ALWAYS AS (UPPER(domain));&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12671616">DERBY-6361</key>
            <summary>Valid statements rejected if Derby has not implicitly created the current user&apos;s schema.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Oct 2013 17:43:55 +0100</created>
                <updated>Wed, 21 Jan 2015 00:23:18 +0000</updated>
                            <resolved>Thu, 6 Mar 2014 00:11:40 +0000</resolved>
                                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13783197" author="rhillegas" created="Tue, 1 Oct 2013 19:30:26 +0100"  >&lt;p&gt;The generated column seems to be part of the problem. The following ALTER TABLE statement works:&lt;/p&gt;

&lt;p&gt;ALTER TABLE esq.licreq ADD COLUMN u_domain int;&lt;/p&gt;</comment>
                            <comment id="13783261" author="rhillegas" created="Tue, 1 Oct 2013 20:48:35 +0100"  >&lt;p&gt;Attaching derby-6361-01-aa-createDefaultSchema.diff. This patch makes the ALTER TABLE statement create the default schema if it doesn&apos;t exist. I am running tests now.&lt;/p&gt;

&lt;p&gt;The error arises because, at execution time, the ALTER TABLE statement cooks up an UPDATE statement to run the generation expression on every row of the table which has just been given a new generated column. The UPDATE statement fails to compile because the schema does not exist. The fix is to create the default schema as is done for CREATE TABLE.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;---------------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;/p&gt;

&lt;p&gt;Create the default schema at execution time if it doesn&apos;t exist.&lt;/p&gt;

&lt;p&gt;---------------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java&lt;/p&gt;

&lt;p&gt;Test case to track this bug.&lt;/p&gt;</comment>
                            <comment id="13783746" author="knutanders" created="Wed, 2 Oct 2013 09:35:11 +0100"  >&lt;p&gt;The generated UPDATE statement doesn&apos;t have any unqualified names, and doesn&apos;t reference the ROOT schema, so it should be able the compile even if there is no ROOT schema. The reason why it fails, seems to be that DMLModStatementNode.parseAndBindGenerationClauses() sets the compilation schema to the current schema at the time of the ALTER TABLE statement that added the generated column:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
                &lt;span class=&quot;code-comment&quot;&gt;//
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// Unqualified function references should resolve to the
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// current schema at the time that the table was
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// created/altered. See DERBY-3945.
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;//
&lt;/span&gt;                SchemaDescriptor    originalCurrentSchema = getSchemaDescriptor( di.getOriginalCurrentSchema(), &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; );
                compilerContext.pushCompilationSchema( originalCurrentSchema );
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also seems to cause problems when the generated column is added by CREATE TABLE from a non-existing schema, but the error won&apos;t be seen until you try to add rows to that table:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.11
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true;user=root&apos;;
ij&amp;gt; create table app.t1(x int, y int generated always as (-x));
0 rows inserted/updated/deleted
ij&amp;gt; insert into app.t1(x) values 1,2,3;
ERROR 42Y07: Schema &apos;ROOT&apos; does not exist (errorCode = 30000)
ij&amp;gt; connect &apos;jdbc:derby:memory:db;user=app&apos;;
ij(CONNECTION1)&amp;gt; insert into app.t1(x) values 1,2,3;
ERROR 42Y07: Schema &apos;ROOT&apos; does not exist (errorCode = 30000)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also fails with the patch, by the way.&lt;/p&gt;</comment>
                            <comment id="13784211" author="rhillegas" created="Wed, 2 Oct 2013 18:53:41 +0100"  >&lt;p&gt;A more general solution might involve automatically creating schemas for new users at connection time provided that the user is not a read-only user and the database is not read-only. This won&apos;t plug all holes. For instance, what happens if the user drops their schema and then issues the INSERT in the previous example which Knut gave.&lt;/p&gt;</comment>
                            <comment id="13784238" author="rhillegas" created="Wed, 2 Oct 2013 19:20:41 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6361-01-aa-createDefaultSchema.diff. I will hold off committing this patch, however, since a more general solution may be possible.&lt;/p&gt;</comment>
                            <comment id="13786283" author="knutanders" created="Fri, 4 Oct 2013 17:15:07 +0100"  >&lt;p&gt;I&apos;m wondering if one possible fix could be to change the aforementioned getSchemaDescriptor() call in DMLModStatementNode.parseAndBindGenerationClauses() so that its second argument is false. Then it will return null instead of failing. If it returns null, we don&apos;t push the compilation schema.&lt;/p&gt;

&lt;p&gt;I think it should work because the generated update statement does not have any dependencies on the original compilation schema if it doesn&apos;t exist. Either the original schema didn&apos;t exist at CREATE TABLE/ALTER TABLE time, and then the CREATE TABLE/ALTER TABLE statement couldn&apos;t possibly have referenced anything in that schema. Or the original schema was dropped after the original CREATE TABLE/ALTER TABLE, and the dependency manager wouldn&apos;t allow the schema to be dropped if the generated column depended on the schema.&lt;/p&gt;</comment>
                            <comment id="13786524" author="rhillegas" created="Fri, 4 Oct 2013 20:20:16 +0100"  >&lt;p&gt;That might finesse the problem. Alternatively, if we can convince ourselves that CHECK constraints, generation clauses, and defaults should be compiled in the schema which holds the table (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6362&quot; title=&quot;CHECK constraint uses wrong schema for unqualified routine invocations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6362&quot;&gt;&lt;del&gt;DERBY-6362&lt;/del&gt;&lt;/a&gt;), then we can push that schema instead of the current (possibly non-existent) schema. Thanks.&lt;/p&gt;</comment>
                            <comment id="13790119" author="knutanders" created="Wed, 9 Oct 2013 08:24:52 +0100"  >&lt;p&gt;GLCC.pushCompilerContext() already handles the case where the SchemaDescriptor is null, by the way, so we probably don&apos;t need to make DMLModStatementNode.parseAndBindGenerationClauses() check for null and skip pushing in that case. Simply changing the second argument to the getSchemaDescriptor() call should be enough, I think, but I haven&apos;t tested it.&lt;/p&gt;</comment>
                            <comment id="13790133" author="knutanders" created="Wed, 9 Oct 2013 08:39:23 +0100"  >&lt;p&gt;Or maybe not... DMLModStatementNode.parseAndBindGenerationClauses() uses CompilerContext.pushCompilationSchema(), not LanguageConnectionContext.pushCompilerContext(). I noticed the handling of non-existent compilation schema in pushCompilerContext() while working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6371&quot; title=&quot;DROP COLUMN looks in wrong schema when checking trigger dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6371&quot;&gt;&lt;del&gt;DERBY-6371&lt;/del&gt;&lt;/a&gt; and thought that was the same method used here, but apparently not.&lt;/p&gt;</comment>
                            <comment id="13797001" author="knutanders" created="Wed, 16 Oct 2013 18:09:24 +0100"  >&lt;p&gt;Attaching d6361-ignore-missing-schema.diff with the alternative fix. It uses the variant of getSchemaDescriptor() that returns null instead of failing if the schema does not exist. pushCompilationSchema() seems to handle the case where the compilation schema is null just fine, so I didn&apos;t add any extra handling of that case. (Some existing callers of pushCompilationSchema() have special handling of null; others have not. No special handling was the most common approach, and since it&apos;s also simpler, I picked that.)&lt;/p&gt;

&lt;p&gt;The patch adds test cases both for the case where the generated column is added from a not yet created schema and where the original compilation schema is dropped after the column is added.&lt;/p&gt;

&lt;p&gt;All the regression tests passed.&lt;/p&gt;</comment>
                            <comment id="13797140" author="rhillegas" created="Wed, 16 Oct 2013 20:10:16 +0100"  >&lt;p&gt;Thanks, Knut. Looks good to me. +1&lt;/p&gt;</comment>
                            <comment id="13797694" author="jira-bot" created="Thu, 17 Oct 2013 08:46:41 +0100"  >&lt;p&gt;Commit 1532997 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1532997&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1532997&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;: Valid statements rejected if Derby has not implicitly&lt;br/&gt;
created the current user&apos;s schema.&lt;/p&gt;

&lt;p&gt;Make compilation of the generation clause accept that the original&lt;br/&gt;
compilation schema does not exist.&lt;/p&gt;</comment>
                            <comment id="13905966" author="mikem" created="Wed, 19 Feb 2014 19:50:56 +0000"  >&lt;p&gt;Is this issue fixed now in trunk?  does it make sense to put this in 10.10?&lt;/p&gt;</comment>
                            <comment id="13905987" author="rhillegas" created="Wed, 19 Feb 2014 20:03:30 +0000"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;I think we&apos;re going to stumble across other instances of this problem. But 1532997 could be backported and that would be incremental progress. Thanks.&lt;/p&gt;</comment>
                            <comment id="13906244" author="mikem" created="Wed, 19 Feb 2014 22:58:38 +0000"  >&lt;p&gt;would it be ok to close this one as fixed,as at least the fix addresses the referenced test case.  And then open new ones and link as we find new issues?&lt;/p&gt;</comment>
                            <comment id="13906514" author="rhillegas" created="Thu, 20 Feb 2014 02:36:01 +0000"  >&lt;p&gt;We could do that if the open issue bothers people. But the reason that I opened a generic issue was because I wanted to avoid filing a new issue for each instance of this problem. I regard it as a systemic problem which ultimately needs a systemic solution. Thanks.&lt;/p&gt;</comment>
                            <comment id="13921683" author="myrna" created="Thu, 6 Mar 2014 00:10:55 +0000"  >&lt;p&gt;I understand your concern Rick. But I went ahead to open another issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6498&quot; title=&quot;Derby does not always automatically create a user&amp;#39;s schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6498&quot;&gt;DERBY-6498&lt;/a&gt;, because this one has fixes connected to it that I would like to backport, and as it is, it&apos;s not showing up for release notes and our backport (to 10.10) query because it&apos;s not resolved/closed...&lt;/p&gt;</comment>
                            <comment id="13924136" author="mamtas" created="Fri, 7 Mar 2014 18:12:22 +0000"  >&lt;p&gt;Assigning to me temporarily while I backport it.&lt;/p&gt;</comment>
                            <comment id="13924246" author="mamtas" created="Fri, 7 Mar 2014 19:27:57 +0000"  >&lt;p&gt;I will look further into following failure but after doing a merge to 10.10 codeline, when I compile the code using ant clobber, ant clean and ant all, ant all gives following error&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\p4clients\svn10.10\client1\10.10\java\testing\org\apache\derbyTesting\functionTests\tests\lang\GeneratedColumnsTest.java:5640: getSchemas() in java.sql.DatabaseMetaData cannot be applied to (&amp;lt;nulltype&amp;gt;,java.lang.String)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         JDBC.assertEmpty(conn.getMetaData().getSchemas(null, user));&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                            ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\p4clients\svn10.10\client1\10.10\java\testing\org\apache\derbyTesting\functionTests\tests\lang\GeneratedColumnsTest.java:5659: getSchemas() in java.sql.DatabaseMetaData cannot be applied to (&amp;lt;nulltype&amp;gt;,java.lang.String)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;         JDBC.assertEmpty(conn.getMetaData().getSchemas(null, user));&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                            ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 2 errors&lt;/p&gt;</comment>
                            <comment id="13924434" author="mamtas" created="Fri, 7 Mar 2014 22:44:43 +0000"  >&lt;p&gt;Issue appears to be with lang/build.xml in 10.10 because that build.xml does not compile any test in lang directory with jdk1.6.&lt;/p&gt;

&lt;p&gt;In trunk, all the lang tests get compiled with jdk1.6 and hence DatabaseMetadData.getSchemas(String, String) call(which was introduced in jdk 1.6) gets compiled correctly in trunk.&lt;/p&gt;

&lt;p&gt;I am working on changing the build.xml in 10.10 lang directory to allow GeneratedColumnsTest.java to be compiled with jdk1.6 so we will not throw a compile time error for DatabaseMetadData.getSchemas(String, String) call made by the new junit fixture in GeneratedColumnsTest.java &lt;/p&gt;</comment>
                            <comment id="13925062" author="jira-bot" created="Sun, 9 Mar 2014 00:12:08 +0000"  >&lt;p&gt;Commit 1575635 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1575635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1575635&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;(Valid statements rejected if Derby has not implicitly created the current user&apos;s schema.)&lt;/p&gt;

&lt;p&gt;Backporting to 10.10&lt;/p&gt;</comment>
                            <comment id="13925482" author="jira-bot" created="Mon, 10 Mar 2014 06:23:59 +0000"  >&lt;p&gt;Commit 1575839 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.9&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1575839&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1575839&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;(Valid statements rejected if Derby has not implicitly created the current user&apos;s schema.)&lt;/p&gt;

&lt;p&gt;Backporting to 10.9&lt;/p&gt;</comment>
                            <comment id="13925523" author="knutanders" created="Mon, 10 Mar 2014 07:48:44 +0000"  >&lt;p&gt;The changes in the backport seems to have broken the tests on Java 5, because the classes cannot be loaded on that platform if they have been compiled with target level 1.6. I think a better way to port the test case would be to make it use the getSchemas() method instead of getSchemas(String,String), as the former is also available in earlier JDBC versions.&lt;/p&gt;</comment>
                            <comment id="13925528" author="jira-bot" created="Mon, 10 Mar 2014 07:52:05 +0000"  >&lt;p&gt;Commit 1575862 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1575862&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1575862&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;: Fix UnsupportedClassVersionError when running tests on Java 5&lt;/p&gt;</comment>
                            <comment id="13925715" author="jira-bot" created="Mon, 10 Mar 2014 13:03:59 +0000"  >&lt;p&gt;Commit 1575933 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.9&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1575933&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1575933&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;: Fix UnsupportedClassVersionError when running tests on Java 5&lt;/p&gt;

&lt;p&gt;Merged revision 1575862 from 10.10.&lt;/p&gt;</comment>
                            <comment id="13930694" author="jira-bot" created="Tue, 11 Mar 2014 18:16:07 +0000"  >&lt;p&gt;Commit 1576449 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1576449&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1576449&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;(Valid statements rejected if Derby has not implicitly created the current user&apos;s schema.)&lt;/p&gt;

&lt;p&gt;Backporting to 10.8&lt;/p&gt;</comment>
                            <comment id="13930709" author="mamtas" created="Tue, 11 Mar 2014 18:24:33 +0000"  >&lt;p&gt;Finished backporting upto 10.8 I do not plan to backport further at this point. Reassigned the issue to Rick.&lt;/p&gt;</comment>
                            <comment id="13931558" author="jira-bot" created="Wed, 12 Mar 2014 09:05:28 +0000"  >&lt;p&gt;Commit 1576655 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1576655&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1576655&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6361&quot; title=&quot;Valid statements rejected if Derby has not implicitly created the current user&amp;#39;s schema.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6361&quot;&gt;&lt;del&gt;DERBY-6361&lt;/del&gt;&lt;/a&gt;: Fix UnsupportedClassVersionError when running tests on Java 5&lt;/p&gt;

&lt;p&gt;Merged revision 1575933 from 10.9.&lt;/p&gt;</comment>
                            <comment id="13932755" author="mamtas" created="Thu, 13 Mar 2014 01:29:03 +0000"  >&lt;p&gt;Knut, thanks for fixing the test by making it not use Java 6 call which will fail when the test is run with Java 5.&lt;/p&gt;</comment>
                            <comment id="14284779" author="myrna" created="Wed, 21 Jan 2015 00:23:18 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                                                <inwardlinks description="Is contained by">
                                        <issuelink>
            <issuekey id="12699020">DERBY-6498</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12501662">DERBY-5139</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12408290">DERBY-3945</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12384407">DERBY-3270</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12695601">DERBY-6481</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12608745" name="d6361-ignore-missing-schema.diff" size="5593" author="knutanders" created="Wed, 16 Oct 2013 18:09:24 +0100"/>
                            <attachment id="12606171" name="derby-6361-01-aa-createDefaultSchema.diff" size="2022" author="rhillegas" created="Tue, 1 Oct 2013 20:48:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Oct 2013 08:35:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>351326</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzif3r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>351618</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>