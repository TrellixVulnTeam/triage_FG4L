<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:57 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1629/DERBY-1629.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1629] Exceptions thrown by code in procedures or triggers are not handled/thrown correctly by Derby</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1629</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In Java SE 6 runtime environments, an application may not get the SQL Exception with SQL State 38000 when execution of a trigger or procedure fails with an exception caused by Derby internals.  Instead, they will get the underlying exception with it&apos;s SQL State.  For an example of this, see lang/procedureInTrigger.sql, which has different output for Java SE 6 (encoded in the master/jdk16/procedureInTrigger.out file) than for other Java SE runtimes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12347114">DERBY-1629</key>
            <summary>Exceptions thrown by code in procedures or triggers are not handled/thrown correctly by Derby</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="davidvc">David Van Couvering</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Aug 2006 01:13:40 +0100</created>
                <updated>Fri, 21 Jan 2011 17:49:09 +0000</updated>
                            <resolved>Thu, 24 May 2007 21:49:40 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12425103" author="fuzzylogic" created="Wed, 2 Aug 2006 04:06:40 +0100"  >&lt;p&gt;fix typo&lt;/p&gt;</comment>
                            <comment id="12425281" author="rhillegas" created="Wed, 2 Aug 2006 17:27:09 +0100"  >&lt;p&gt;Here are various ways to tackle this problem:&lt;/p&gt;

&lt;p&gt;1) We could create a parallel universe of SQLException subclasses, which extend the JDBC4 SQLException subclasses and implement some vacuous, Derby-specific interface. These would be the exceptions raised by SQLExceptionFactory40. EmbedSQLException could implement this vacuous interface too. In the code above (StandardException.unexpectedUserException()), we could then check whether the exception class was an instance of the vacuous interface.&lt;/p&gt;

&lt;p&gt;+ I think this covers the cases&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Bloats up the server with around 20 new classes&lt;/li&gt;
	&lt;li&gt;As more SQLException subclasses are added to JDBC, we will have to add additional parallel Derby classes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2) We could check whether the errorCode was one of the Derby-specific severities. This would be our flag that the exception was generated by Derby.&lt;/p&gt;

&lt;p&gt;+ Not a lot of code bloat.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Has wormholes: What if the user-created exception uses one of our severities as its error code?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;3) We could check whether the passed-in SQLException&apos;s getCause() method returns an EmbedSQLException. This would be true for all exceptions created by SQLExceptionFactory40&lt;/p&gt;

&lt;p&gt;+ Also not a lot of code bloat&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Still has the wormhole that the user-created exception could set a Derby exception as its cause&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12425296" author="davidvc" created="Wed, 2 Aug 2006 18:02:10 +0100"  >&lt;p&gt;Thanks for your thoughts, Rick.  It seems to me that for (3) if a user set a Derby exception as a cause, getCause() would return a SQLException, not an EmbeddedSQLException, so I would argue your wormhole can be closed...&lt;/p&gt;

&lt;p&gt;But I don&apos;t like how it relies on behavior that could be changed at any time, and it&apos;s overloading the intention of setCause()/getCause().  But unless we go for (1) I can&apos;t see any way out of piggybacking extra semantics on one of the SQLException methods..., and getCause() seems like the best choice.  &lt;/p&gt;

&lt;p&gt;I would suggest that whoever fixes this adds a comment to the SQLExceptionFactory40 code that indicates that changing the cause will impact other code and describe how and why.&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;</comment>
                            <comment id="12425349" author="djd" created="Wed, 2 Aug 2006 20:20:07 +0100"  >&lt;p&gt;Can the summary of this bug be changed to reflect the impact on/change to/incorect behavaiour an application would see. This will be a regression when running on jdk 16 for an application, but what exactly is the regression?&lt;/p&gt;</comment>
                            <comment id="12425354" author="djd" created="Wed, 2 Aug 2006 20:37:55 +0100"  >&lt;p&gt;I think it&apos;s also worth re-validating the requirements, some of the assumptions about that method are from the old Cloudscape days when any java method could be executed from SQL. Looking again it seems as though the current behaviour for routines is wrong and would not require knowing if an exception was thrown by Derby or not. Other uses of the method might though. The behaviour for routines is defined in SQL part 13, section 15.1, which seems to boil down to:&lt;/p&gt;

&lt;p&gt;If a method throws an exception E  then&lt;/p&gt;

&lt;p&gt;if (method instance of java.sql.Exception)&lt;/p&gt;
{
   if SQL state starts with &quot;38&quot;, is at least 5 characters and is not 38000
       throw an exception with E&apos;s SQL state
    else
       throw an exception with SQL state 39001
}
&lt;p&gt;else&lt;/p&gt;
{
   throw an exception with SQL state 38000
}

&lt;p&gt;Assuming we can take the meaning of &quot;class of  E is java.sql.SQLException&quot; to mean instanceof and not class has to be java.sql.SQLException,&lt;br/&gt;
since this was written before SQLException had sub-classes.&lt;/p&gt;</comment>
                            <comment id="12425355" author="davidvc" created="Wed, 2 Aug 2006 20:41:50 +0100"  >&lt;p&gt;Fixed this to describe user-perceived behavior.  Here is the original comment, which provides useful implementation details:&lt;/p&gt;

&lt;p&gt;In non-JDK 1.6 builds, the exceptions Derby throws are all of class EmbedSQLException. As of JDK 1.6, that is no longer true. Instead we throw a &quot;native&quot; SQL Exception.&lt;/p&gt;

&lt;p&gt;That makes the following code incorrect:&lt;/p&gt;

&lt;p&gt;public static StandardException unexpectedUserException(Throwable t)&lt;br/&gt;
{&lt;br/&gt;
/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;If we have a SQLException that isn&apos;t a Util&lt;/li&gt;
		&lt;li&gt;(i.e. it didn&apos;t come from cloudscape), then we check&lt;/li&gt;
		&lt;li&gt;to see if it is a valid user defined exception range&lt;/li&gt;
		&lt;li&gt;(38001-38XXX). If so, then we convert it into a&lt;/li&gt;
		&lt;li&gt;StandardException without further ado.&lt;br/&gt;
*/&lt;br/&gt;
if ((t instanceof SQLException) &amp;amp;&amp;amp;&lt;br/&gt;
!(t instanceof EmbedSQLException))&lt;br/&gt;
{&lt;br/&gt;
SQLException sqlex = (SQLException)t;&lt;br/&gt;
String state = sqlex.getSQLState();&lt;br/&gt;
if ((state != null) &amp;amp;&amp;amp;&lt;br/&gt;
(state.length() == 5) &amp;amp;&amp;amp;&lt;br/&gt;
state.startsWith(&quot;38&quot;) &amp;amp;&amp;amp;&lt;br/&gt;
!state.equals(&quot;38000&quot;))&lt;br/&gt;
{&lt;br/&gt;
StandardException se = new StandardException(state, sqlex.getMessage());&lt;br/&gt;
if (sqlex.getNextException() != null)
{
se.setNestedException(sqlex.getNextException());
}
&lt;p&gt;return se;&lt;br/&gt;
}&lt;br/&gt;
}&lt;/p&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I am not sure how we can detect internally-thrown SQL Exceptions and distinguish them from user exceptions, but this does need to be looked at.&lt;/p&gt;

&lt;p&gt;Right now procedureInTrigger.sql is failing for JDK 1.6 due to this error. I may check in a jdk16-specific version of this file so at least derbyall can pass. &lt;/p&gt;</comment>
                            <comment id="12425356" author="davidvc" created="Wed, 2 Aug 2006 20:46:41 +0100"  >&lt;p&gt;I think what you described is in the SQL spec is not what is happening in this code right now, and should be fixed.  And I think you&apos;re right that this does not require us to know whether the exception is a Derby exception or not, who knows, the procedure could be calling some other backend database.  That simplifies things I think.&lt;/p&gt;</comment>
                            <comment id="12425365" author="davidvc" created="Wed, 2 Aug 2006 21:15:20 +0100"  >&lt;p&gt;Added a comment to the procedureInTrigger.sql script and fixed the main master file.  Also added a master file specific to jdk16.  &lt;br/&gt;
I noticed procedureInTrigger.out also exists in a j9-specific directory, but as I don&apos; t have the j9 VM to verify I didn&apos;t try to fix this file.&lt;/p&gt;

&lt;p&gt;Committed revision 42818&lt;/p&gt;</comment>
                            <comment id="12425634" author="myrna" created="Fri, 4 Aug 2006 00:25:04 +0100"  >&lt;p&gt;attaching a patch - &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1629&quot; title=&quot;Exceptions thrown by code in procedures or triggers are not handled/thrown correctly by Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1629&quot;&gt;&lt;del&gt;DERBY-1629&lt;/del&gt;&lt;/a&gt;_j9canon.diff that updates the j9_22 canon. tested the test with wctme5.7.&lt;/p&gt;</comment>
                            <comment id="12425860" author="davidvc" created="Fri, 4 Aug 2006 22:16:37 +0100"  >&lt;p&gt;Committed Myrna&apos;s patch, revision 428887&lt;/p&gt;</comment>
                            <comment id="12435866" author="rhillegas" created="Tue, 19 Sep 2006 16:18:07 +0100"  >&lt;p&gt;Moving to 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12440571" author="djd" created="Fri, 6 Oct 2006 19:04:36 +0100"  >&lt;p&gt;I think there may be a correction to the SQL spec for the correct way to handle exceptions. I don&apos;t have the details, just saw it while I was searching for something else. The correction is in an official SQL standard correction document which modifies the text in SQL Part 13 which itself modifies the SQL/Foundation spec. Thus it&apos;s sometimes confusing to realise what exactly is expected &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12456042" author="rhillegas" created="Wed, 6 Dec 2006 14:34:27 +0000"  >&lt;p&gt;Move to 10.2.3.0.&lt;/p&gt;</comment>
                            <comment id="12467583" author="fuzzylogic" created="Thu, 25 Jan 2007 20:36:49 +0000"  >&lt;p&gt;Unsetting Fix Version for unassigned issues.&lt;/p&gt;</comment>
                            <comment id="12488725" author="myrna" created="Fri, 13 Apr 2007 18:39:47 +0100"  >&lt;p&gt;When this gets fixed, the if (!JDBC.vmsupportsJDBC4) check in test lang/ProcedureInTriggerTest should be removed.&lt;/p&gt;</comment>
                            <comment id="12498827" author="oysteing" created="Thu, 24 May 2007 21:49:40 +0100"  >&lt;p&gt;It seems like this issue is a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1440&quot; title=&quot;jdk 1.6 client driver omits SQLStates and chained exceptions in error messages&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1440&quot;&gt;&lt;del&gt;DERBY-1440&lt;/del&gt;&lt;/a&gt;.  At least, Knut Anders patch removes the check in lang/ProcedureInTriggerTest here mention by Myrna, and which seems to fit the original description of the problem.  I am not quite sure I understand all the comments made on this JIRA, and whether there are other issues here, but since the original problem seems to be solved, I suggest this JIRA should be closed. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12348251">DERBY-1729</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12367127">DERBY-2545</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12338106" name="DERBY-1629_j9canon.diff" size="885" author="myrna" created="Fri, 4 Aug 2006 00:25:04 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Aug 2006 03:06:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22608</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0n2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37555</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>