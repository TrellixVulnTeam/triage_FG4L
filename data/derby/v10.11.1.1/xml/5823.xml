<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5823/DERBY-5823.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5823] Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5823</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Exeuting an insert that results in multiple rows being inserted into a table without any generated keys defined fails if the JDBC statement is configured to return generated keys. Example stack trace:&lt;/p&gt;

&lt;p&gt;Caused by: ERROR XSCH4: Conglomerate could not be created.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:268)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.create(Heap.java:296)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.createConglomerate(HeapConglomerateFactory.java:206)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.createConglomerate(RAMTransaction.java:820)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insert(TemporaryRowHolderImpl.java:302)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1007)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:508)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
        ... 30 more&lt;/p&gt;

&lt;p&gt;This happens only with multi-row inserts, and only with the embedded driver (the client driver uses IDENTITY_VAL_LOCAL).&lt;br/&gt;
The problem is that Derby tries to create a temporary conglomerate with a zero-length row template. A guard against this scenario is probably missing.&lt;/p&gt;

&lt;p&gt;FYI, the transition threshold (from in-memory to on-disk) is currently five rows.&lt;br/&gt;
I marked versions back to 10.7 as affected, but this bug probably goes back all the way.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12595258">DERBY-5823</key>
            <summary>Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                            <label>derby_triage10_10</label>
                    </labels>
                <created>Wed, 20 Jun 2012 13:10:05 +0100</created>
                <updated>Wed, 21 Jan 2015 00:22:59 +0000</updated>
                            <resolved>Mon, 4 Nov 2013 12:08:39 +0000</resolved>
                                    <version>10.7.1.1</version>
                    <version>10.8.2.2</version>
                    <version>10.9.1.0</version>
                    <version>10.10.1.1</version>
                                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13397455" author="kristwaa" created="Wed, 20 Jun 2012 13:22:10 +0100"  >&lt;p&gt;Note that this bug was logged due to the following thread on derby-user: &quot;Conglomerate could not be created&quot;? &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Attaching a regression test at patch as 1a.&lt;br/&gt;
I haven&apos;t verified that Derby does the right thing when it comes to what it returns for getGeneratedKeys, so it may fail also when the problems described by this JIRA has been fixed.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-user/201206.mbox/%3C4FC8B339.8090502%40gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-user/201206.mbox/%3C4FC8B339.8090502%40gmail.com%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13397460" author="kristwaa" created="Wed, 20 Jun 2012 13:28:59 +0100"  >&lt;p&gt;The workaround for this issue is to not specify RETURN_GENERATED_KEYS for inserts that don&apos;t generate any keys.&lt;/p&gt;

&lt;p&gt;Note however that the Java API documentation specifically states that&lt;br/&gt;
&quot;If this Statement object did not generate any keys, an empty ResultSet object is returned.&quot;, so Derby is misbehaving.&lt;/p&gt;</comment>
                            <comment id="13809188" author="knutanders" created="Wed, 30 Oct 2013 15:01:03 +0000"  >&lt;p&gt;There are multiple problems in this area:&lt;/p&gt;

&lt;p&gt;1. InsertResultSet collects generated keys even in the case where there are no auto-generated keys. This is unnecessary, and causes problems when overflowing to a heap conglomerate since heap conglomerates don&apos;t support zero-sized rows. It should stop doing this.&lt;/p&gt;

&lt;p&gt;2. On re-execution of a PreparedStatement that was created with RETURN_GENERATED_KEYS, InsertResultSet will collect all columns, not only key columns. This is because InsertResultSet only calculates the key columns on the first execution, but it doesn&apos;t cache the result, so on re-execution it will be null, which the code interprets as all columns. This makes the temporary row holder take up more space than necessary. One odd effect of this problem is that it cancels problem (1) on re-execution. That is, if you call executeUpdate() on a PS and get the &quot;Conglomerate could not be created&quot; error mentioned in the bug description, calling executeUpdate() again on the same PS will succeed. It succeeds the second time because then it adds all inserted columns to the temporary row holder, and therefore doesn&apos;t hit the problem with zero-length rows. Of course, it should add the same set of columns to the temporary row holder regardless of how many times the PS is executed, so this should be fixed together with problem (1).&lt;/p&gt;

&lt;p&gt;3. As Kristian noted, getGeneratedKeys() is supposed to return an empty ResultSet if no keys were generated, but it returns a ResultSet with one row. This is because the collected set of keys is discarded by getGeneratedKeys() and instead the result of VALUES IDENTITY_VAL_LOCAL() is returned. I believe this part of the problem will be handled by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3609&quot; title=&quot;Wrong functionality of auto-generated keys support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3609&quot;&gt;DERBY-3609&lt;/a&gt;, and does not need to be tackled in this issue.&lt;/p&gt;</comment>
                            <comment id="13809221" author="knutanders" created="Wed, 30 Oct 2013 15:29:11 +0000"  >&lt;p&gt;Attaching derby-5823-2a.diff which tackles problem 1 and 2 mentioned above.&lt;/p&gt;

&lt;p&gt;It skips adding rows to the temporary row holder if there are no columns to add. This means the row holder will never overflow to disk if there are no generated keys, so there will be no attempt to create a heap conglomerate with zero-length rows, and the &quot;Conglomerate could not be created&quot; error is avoided.&lt;/p&gt;

&lt;p&gt;It also keeps the set of key columns between executions so that we avoid the overhead of collecting all columns for all inserted rows on re-execution. In addition to avoiding overhead, this also ensures that the internal result set that holds the generated keys (InsertResultSet.autoGeneratedKeysResultSet) has the correct shape. Although the shape of this ResultSet doesn&apos;t matter right now (getGeneratedKeys() only cares whether it&apos;s non-null), this might change in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3609&quot; title=&quot;Wrong functionality of auto-generated keys support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3609&quot;&gt;DERBY-3609&lt;/a&gt;, so this should also get fixed.&lt;/p&gt;

&lt;p&gt;And while I was at it, I just couldn&apos;t resist the temptation to replace a for loop with a call to Arrays.fill() in InsertResultSet.generatedColumnPositionsArray()...&lt;/p&gt;

&lt;p&gt;The regression test case contributed by Kristian passed with the fix. So did all the existing regression tests in derbyall and suites.All.&lt;/p&gt;</comment>
                            <comment id="13811157" author="jira-bot" created="Fri, 1 Nov 2013 10:31:29 +0000"  >&lt;p&gt;Commit 1537888 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1537888&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1537888&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5823&quot; title=&quot;Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5823&quot;&gt;&lt;del&gt;DERBY-5823&lt;/del&gt;&lt;/a&gt;: Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS&lt;/p&gt;

&lt;p&gt;The fix contains two parts:&lt;/p&gt;

&lt;p&gt;1. Don&apos;t collect generated keys if the statement does not actually&lt;br/&gt;
   generate key values. (This is the fix for the reported problem.)&lt;/p&gt;

&lt;p&gt;2. Cache the array of generated key columns between executions. In the&lt;br/&gt;
   existing code, the array of key columns was created only on the&lt;br/&gt;
   first execution. Since it wasn&apos;t cached, it was null on all&lt;br/&gt;
   subsequent executions. When it is null, all columns are collected&lt;br/&gt;
   into the temporary row holder, which wastes space. Now, only the&lt;br/&gt;
   key columns are collected, also on re-execution.&lt;/p&gt;

&lt;p&gt;The test case was contributed by Kristian Waagan.&lt;/p&gt;</comment>
                            <comment id="13812791" author="jira-bot" created="Mon, 4 Nov 2013 12:08:57 +0000"  >&lt;p&gt;Commit 1538572 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1538572&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1538572&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5823&quot; title=&quot;Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5823&quot;&gt;&lt;del&gt;DERBY-5823&lt;/del&gt;&lt;/a&gt;: Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS&lt;/p&gt;

&lt;p&gt;Merged revision 1537888 from trunk.&lt;/p&gt;</comment>
                            <comment id="14284726" author="myrna" created="Wed, 21 Jan 2015 00:22:59 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12393506">DERBY-3609</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12532683" name="derby-5823-1a-regression_test.diff" size="3249" author="kristwaa" created="Wed, 20 Jun 2012 13:22:10 +0100"/>
                            <attachment id="12611090" name="derby-5823-2a.diff" size="8170" author="knutanders" created="Wed, 30 Oct 2013 15:29:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Oct 2013 15:01:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245785</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    <customfieldvalue key="10427"><![CDATA[Workaround attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy09mf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35377</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>