<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3764/DERBY-3764.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3764] Union Query fail on Derby 10.4.1.3</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3764</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;    Running a Query on Derby 10.4.1.3 and 10.3.1.4 I got this error message: Error code 0, SQL state XJ001: Java Exception: &apos;4 &amp;gt;= 4: java.lang.ArrayIndexOutOfBoundsException&apos;.&lt;br/&gt;
    After throw this exception the database shutdown and lost the connection.&lt;br/&gt;
    I&apos;m updating an application from a previous version of Derby (Bundle-Version: 10.0.2000001 From derby.jar Manifest) so this query works fine in version 10.0.&lt;/p&gt;

&lt;p&gt;The Query:&lt;br/&gt;
select 0 vlr_proc_anterior&lt;br/&gt;
             , 0 vlr_proc_atual&lt;br/&gt;
             , sum(vlr_contabil + vlr_ajuste) disp_financeira    &lt;br/&gt;
             from contas_remessa rec&lt;br/&gt;
             where cd_tipo = 1105 and cd_conta = 4&lt;br/&gt;
             group by rec.cd_conta, rec.ds_conta&lt;br/&gt;
             union&lt;br/&gt;
             select case when cd_tipo = 170 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_anterior&lt;br/&gt;
                  , case when cd_tipo = 175 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_atual&lt;br/&gt;
                  , 0 disp_financeira&lt;br/&gt;
                  from contas_remessa where cd_tipo in (170, 175) and status = &apos;S&apos;                       &lt;br/&gt;
                  group by cd_tipo&lt;/p&gt;

&lt;p&gt;The deby log entry:&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
2008-07-07 14:44:51.282 GMT:&lt;br/&gt;
 Booting Derby version The Apache Software Foundation - Apache Derby - 10.3.1.4 - (561794): instance c013800d-011a-fdfb-6fa4-00003451d386&lt;br/&gt;
on database directory C:\PAD\database  &lt;/p&gt;

&lt;p&gt;Database Class Loader started - derby.database.classpath=&apos;&apos;&lt;br/&gt;
2008-07-07 14:46:40.506 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLExecution,1,system&amp;#93;&lt;/span&gt; (XID = 3441038), (SESSIONID = 0), (DATABASE = C:\PAD\database), (DRDAID = null), Cleanup action starting&lt;br/&gt;
2008-07-07 14:46:40.506 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;SQLExecution,1,system&amp;#93;&lt;/span&gt; (XID = 3441038), (SESSIONID = 0), (DATABASE = C:\PAD\database), (DRDAID = null), Failed Statement is: select 0 vlr_proc_anterior&lt;br/&gt;
             , 0 vlr_proc_atual&lt;br/&gt;
             , sum(vlr_contabil + vlr_ajuste) disp_financeira    &lt;br/&gt;
             from contas_remessa rec&lt;br/&gt;
             where cd_tipo = 1105 and cd_conta = 4&lt;br/&gt;
             group by rec.cd_conta, rec.ds_conta&lt;br/&gt;
             union&lt;br/&gt;
             select case when cd_tipo = 170 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_anterior&lt;br/&gt;
                  , case when cd_tipo = 175 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_atual&lt;br/&gt;
                  , 0 disp_financeira&lt;br/&gt;
                  from contas_remessa where cd_tipo in (170, 175) and status = &apos;S&apos;                       &lt;br/&gt;
                  group by cd_tipo&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException: 4 &amp;gt;= 4&lt;br/&gt;
	at java.util.Vector.elementAt(Vector.java:427)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.QueryTreeNodeVector.elementAt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ResultColumnList.setUnionResultExpression(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SetOperatorNode.buildRCL(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SetOperatorNode.bindResultColumns(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.netbeans.modules.db.sql.execute.SQLExecuteHelper.execute(SQLExecuteHelper.java:114)&lt;br/&gt;
	at org.netbeans.modules.db.sql.loader.SQLEditorSupport$SQLExecutor.run(SQLEditorSupport.java:479)&lt;br/&gt;
	at org.openide.util.RequestProcessor$Task.run(RequestProcessor.java:561)&lt;br/&gt;
	at org.openide.util.RequestProcessor$Processor.run(RequestProcessor.java:986)&lt;br/&gt;
Cleanup action completed&lt;/p&gt;</description>
                <environment>Windows XP SP2, NetBeans 6.1 (IDE), Pentium 2 Core 512 Ram, Java 1.6.0_05</environment>
        <key id="12399735">DERBY-3764</key>
            <summary>Union Query fail on Derby 10.4.1.3</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="heleno.alves">Heleno da Silva Alves</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Jul 2008 16:44:02 +0100</created>
                <updated>Fri, 21 Jan 2011 17:52:04 +0000</updated>
                            <resolved>Wed, 23 Jul 2008 10:05:07 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12611218" author="heleno.alves" created="Mon, 7 Jul 2008 17:36:04 +0100"  >&lt;p&gt;To create the Test Table&lt;/p&gt;</comment>
                            <comment id="12611226" author="heleno.alves" created="Mon, 7 Jul 2008 17:44:55 +0100"  >&lt;p&gt;Derby 10.0 - Works Fine&lt;/p&gt;</comment>
                            <comment id="12611227" author="heleno.alves" created="Mon, 7 Jul 2008 17:45:34 +0100"  >&lt;p&gt;Derby 10.0 - Fail&lt;/p&gt;</comment>
                            <comment id="12611231" author="heleno.alves" created="Mon, 7 Jul 2008 17:46:57 +0100"  >&lt;p&gt;Derby 10.3.1.4 (NetBeans 6.1) - Fail&lt;/p&gt;</comment>
                            <comment id="12611232" author="heleno.alves" created="Mon, 7 Jul 2008 17:47:39 +0100"  >&lt;p&gt;Derby 10.4 - Fail&lt;/p&gt;</comment>
                            <comment id="12611234" author="heleno.alves" created="Mon, 7 Jul 2008 17:48:53 +0100"  >&lt;p&gt;Some Data to CONTAS_REMESSA Table&lt;/p&gt;</comment>
                            <comment id="12611247" author="kmarsden" created="Mon, 7 Jul 2008 18:16:02 +0100"  >&lt;p&gt;I verified on trunk using the script to create the table and import data.&lt;br/&gt;
Here is the debug stack trace. The latest on the 10.2 looks ok. The problem seems to start with 10.3.  Marking as a regression.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select 0 vlr_proc_anterior&lt;br/&gt;
             , 0 vlr_proc_atual&lt;br/&gt;
             , sum(vlr_contabil + vlr_ajuste) disp_financeira&lt;br/&gt;
             from contas_remessa rec&lt;br/&gt;
             where cd_tipo = 1105 and cd_conta = 4&lt;br/&gt;
             group by rec.cd_conta, rec.ds_conta&lt;br/&gt;
             union&lt;br/&gt;
             select case when cd_tipo = 170 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_anterior&lt;br/&gt;
                  , case when cd_tipo = 175 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_atual&lt;br/&gt;
                  , 0 disp_financeira&lt;br/&gt;
                  from contas_remessa where cd_tipo in (170, 175) and status = &apos;S&apos;&lt;br/&gt;
                  group by cd_tipo ;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;Array index out of range: 4: java.lang.ArrayIndexOutOfBoundsException&apos;.&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;Array index out of range: 4: java.lang.ArrayIndexOutOfBoundsException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2183)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:614)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:508)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
Caused by: java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 4&lt;br/&gt;
        at java.util.Vector.elementAt(Vector.java:266)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.QueryTreeNodeVector.elementAt(QueryTreeNodeVector.java:51)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.setUnionResultExpression(ResultColumnList.java:2242)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SetOperatorNode.buildRCL(SetOperatorNode.java:631)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.SetOperatorNode.bindResultColumns(SetOperatorNode.java:558)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:239)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:314)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConne&lt;br/&gt;
ctionContext.java:794)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:606)&lt;br/&gt;
        ... 9 more&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12611571" author="knutanders" created="Tue, 8 Jul 2008 14:14:11 +0100"  >&lt;p&gt;It looks like the bug was introduced in the following revision:&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------------------&lt;br/&gt;
r516454 | abrown | 2007-03-09 17:37:20 +0100 (fr, 09 mar 2007) | 8 lines&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-681&quot; title=&quot;Eliminate the parser&amp;#39;s rewriting of the abstract syntax tree for queries with GROUP BY and/or HAVING clauses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-681&quot;&gt;&lt;del&gt;DERBY-681&lt;/del&gt;&lt;/a&gt;: Remove the &quot;wrap group by&apos;s in a subselect&quot; rewrite in the parser.&lt;br/&gt;
This patch preserves the having clause through bind and optimize phases and&lt;br/&gt;
then, during the final rewrite for aggregates in the GroupByNode, it transforms&lt;br/&gt;
the having clause to a valid restriction. See text file attached to the Jira&lt;br/&gt;
for more information.&lt;/p&gt;

&lt;p&gt;Contributed by Manish Khettry (manish_khettry@yahoo.com)&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12611741" author="knutanders" created="Tue, 8 Jul 2008 19:37:18 +0100"  >&lt;p&gt;Here&apos;s a simpler way to reproduce the bug:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x union select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;1 &amp;gt;= 1: java.lang.ArrayIndexOutOfBoundsException&apos;.&lt;/p&gt;</comment>
                            <comment id="12611753" author="knutanders" created="Tue, 8 Jul 2008 20:11:18 +0100"  >&lt;p&gt;The simpler repro doesn&apos;t have the exact same stack trace as the reported error. The reported error happens during the bind phase, whereas the simpler repro fails during byte code generation. The simpler repro can also be made into failing during bind by rewriting it to:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x union values 1;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;1 &amp;gt;= 1: java.lang.ArrayIndexOutOfBoundsException&apos;.&lt;/p&gt;</comment>
                            <comment id="12611756" author="bryanpendleton" created="Tue, 8 Jul 2008 20:15:32 +0100"  >&lt;p&gt;It might be as simple as needing an &quot;isGenerated&quot; check when manipulating&lt;br/&gt;
the ResultColumn data somewhere in ResultColumnList.setUnionResultExpression()&lt;br/&gt;
or perhaps SetOperatorNode.buildRCL()&lt;/p&gt;

&lt;p&gt;In &quot;select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x&quot;, there should be, conceptually, two&lt;br/&gt;
result columns in the result column list:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
	&lt;li&gt;x&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is a normal resultcolumn, while x should have the isGenerated&lt;br/&gt;
flag set, indicating that it is sort of a &quot;shadow&quot; column which was added&lt;br/&gt;
to the result column list in order to enable the sorting and grouping of&lt;br/&gt;
the data, but is not part of the user-visible result column list.&lt;/p&gt;

&lt;p&gt;Hope this is useful, it&apos;s just sort of an educated guess but I thought it&lt;br/&gt;
might be worth posting if it gave you a place to start poking around.&lt;/p&gt;
</comment>
                            <comment id="12611786" author="knutanders" created="Tue, 8 Jul 2008 21:22:31 +0100"  >&lt;p&gt;Thanks for the suggestion, Bryan. Sounds like that&apos;s worth looking into. Here&apos;s what I found by taking a brief look at the code mentioned in the stack trace:&lt;/p&gt;

&lt;p&gt;ResultColumnList.setUnionResultExpression() asserts that visibleSize() == otherRCL.visibleSize(), which means that the two sub-queries in the union have the same number of columns. But when it iterates over the columns, it uses size() which includes the group by columns. Since the two sub-queries have a different number of columns in the group by clause, an index-out-of-bounds exception is thrown when the method iterates over the group by columns.&lt;/p&gt;

&lt;p&gt;I think setUnionResultExpression() should use visibleSize() instead of size(). I&apos;m assuming here that the non-visible columns are at the end of the RCL (I vaguely recall having read something about that in a comment sometime, but I don&apos;t know this code very well). By making this change, I could get the statement to compile, but it failed during execution instead:&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED template.length (2) expected to be = to nCols (1)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:441)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:98)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResultSet.java:317)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:245)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;/p&gt;</comment>
                            <comment id="12611797" author="bryanpendleton" created="Tue, 8 Jul 2008 22:03:30 +0100"  >&lt;p&gt;I agree with you that setUnionResultExpression should be using visibleSize().&lt;/p&gt;

&lt;p&gt;We may have a number of places to fix, unfortunately.&lt;/p&gt;

&lt;p&gt;The mergeSort assertion failure feels like a code generation problem, so the&lt;br/&gt;
next step might be to step through GroupByNode.generate() and see if you&lt;br/&gt;
can watch it generating the code, and look for places where it processes the&lt;br/&gt;
ResultColumnList, and see if there&apos;s a place in there where it should be&lt;br/&gt;
using visibleSize (which is 1) instead of size (which is 2).&lt;/p&gt;</comment>
                            <comment id="12612835" author="knutanders" created="Fri, 11 Jul 2008 12:25:24 +0100"  >&lt;p&gt;I haven&apos;t had time to check out Bryan&apos;s suggestions yet, but I am planning to dig more into to it, so I&apos;m assigning the issue to me.&lt;/p&gt;</comment>
                            <comment id="12612839" author="knutanders" created="Fri, 11 Jul 2008 12:36:31 +0100"  >&lt;p&gt;It seems like changing RCL.setUnionResultExpression() to use&lt;br/&gt;
visibleSize() instead of size() is enough to fix the query in the&lt;br/&gt;
original report.&lt;/p&gt;

&lt;p&gt;The simpler query (SELECT MAX&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM t GROUP BY x UNION VALUES 1)&lt;br/&gt;
does however run into another ArrayIndexOutOfBoundsException in&lt;br/&gt;
RCL.isExactTypeAndLengthMatch(), which is the same problem as I&lt;br/&gt;
mentioned earlier that&lt;br/&gt;
   SELECT MAX&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM t GROUP BY x&lt;br/&gt;
     UNION&lt;br/&gt;
   SELECT MAX&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM t GROUP BY x&lt;br/&gt;
would run into during byte code generation.&lt;/p&gt;

&lt;p&gt;I think the solution for isExactTypeAndLengthMatch() is the same as&lt;br/&gt;
for setUnionResultExpression() &amp;#8211; we should change size() to&lt;br/&gt;
visibleSize().&lt;/p&gt;

&lt;p&gt;Although we still see problems during execution with these fixes, we&lt;br/&gt;
may consider checking them in as partial improvements, especially&lt;br/&gt;
since they appear to be enough for the originally reported query.&lt;/p&gt;</comment>
                            <comment id="12612854" author="knutanders" created="Fri, 11 Jul 2008 13:18:27 +0100"  >&lt;p&gt;The attached patch fixes setUnionResultExpression() and isExactTypeAndLengthMatch() and adds a test case to GroupByTest which fails with ArrayIndexOutOfBoundsException without the fixes and passes with them. All the regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="12612856" author="knutanders" created="Fri, 11 Jul 2008 13:21:50 +0100"  >&lt;p&gt;Other set operations than UNION have similar problems:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t (x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x except values 1;&lt;br/&gt;
ERROR 42X77: Column position &apos;2&apos; is out of range for the query expression.&lt;br/&gt;
ij&amp;gt; select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x intersect values 1;&lt;br/&gt;
ERROR 42X77: Column position &apos;2&apos; is out of range for the query expression.&lt;/p&gt;

&lt;p&gt;The above queries worked with Derby 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12612889" author="bryanpendleton" created="Fri, 11 Jul 2008 15:34:07 +0100"  >&lt;p&gt;Thanks for the patch; I agree that addressing these problems as&lt;br/&gt;
a first step is a good plan.&lt;/p&gt;

&lt;p&gt;The patch looks quite reasonable to me. Here&apos;s a couple thoughts:&lt;/p&gt;

&lt;p&gt;1) In your comment above you said that these changes resolved&lt;br/&gt;
the original form of the query, but not the alternate form. Yet in your&lt;br/&gt;
patch both forms of the query are compiled, but the execution is&lt;br/&gt;
commented out. With the patch, is it possible actually execute&lt;br/&gt;
the original form of the query? If so, it seems like the patch should do so.&lt;/p&gt;

&lt;p&gt;2) As you note, there are some other variants that are worth testing,&lt;br/&gt;
such as different set operations, and perhaps cases where the two&lt;br/&gt;
children of the union do &lt;b&gt;not&lt;/b&gt; have the same number of visible columns&lt;br/&gt;
or where the data types of the visible columns are not quite matching.&lt;br/&gt;
So if you get a chance to add more test cases, either now or later, that&lt;br/&gt;
would be great.&lt;/p&gt;</comment>
                            <comment id="12612892" author="knutanders" created="Fri, 11 Jul 2008 15:41:34 +0100"  >&lt;p&gt;Thanks Bryan, those are all good suggestions. I am planning both to investigate why we don&apos;t see the execution problem with the original query, and to add more tests. I&apos;m not sure we can add the original query directly since the attached repro wasn&apos;t licensed to the ASF, but once we find out what makes the difference between the queries, it should be easy to add something equivalent to it.&lt;/p&gt;</comment>
                            <comment id="12612897" author="knutanders" created="Fri, 11 Jul 2008 15:48:00 +0100"  >&lt;p&gt;I guess I didn&apos;t fully answer your first question. The two queries in the test both fail if they are executed. The statement that doesn&apos;t fail when it&apos;s executed, is the one that is mentioned in the description of the issue and that uses the attached scripts CONSTAS_REMESSA.sql and export_contas_remessas.exp.&lt;/p&gt;</comment>
                            <comment id="12612900" author="knutanders" created="Fri, 11 Jul 2008 16:01:47 +0100"  >&lt;p&gt;Yet another type of failure (only seen with the patch applied, otherwise the out-of-bounds exception is thrown first):&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select max&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x union all values 1;&lt;br/&gt;
1          |X          &lt;br/&gt;
-----------------------&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;/p&gt;

&lt;p&gt;Note the extra column in addition to the NPE. Wasn&apos;t there recently a discussion on derby-user about queries that returned extra columns?&lt;/p&gt;

&lt;p&gt;The query worked in 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12612909" author="bryanpendleton" created="Fri, 11 Jul 2008 16:48:30 +0100"  >&lt;p&gt;Yes, there was such a discussion, and it&apos;s nice to see that you&lt;br/&gt;
appear to have found a reproducible test case. I believe that&lt;br/&gt;
the 2nd column should not have appeared in the output, and&lt;br/&gt;
indicates yet more places where the ResultColumnList is misbehaving.&lt;/p&gt;</comment>
                            <comment id="12613545" author="knutanders" created="Tue, 15 Jul 2008 08:35:42 +0100"  >&lt;p&gt;Committed the 1a patch with revision 676819.&lt;/p&gt;</comment>
                            <comment id="12613901" author="knutanders" created="Wed, 16 Jul 2008 11:20:55 +0100"  >&lt;p&gt;It seems like the group by columns of the first sub-expression are always added to the result. When I said the original query worked with the fix that was committed, it wasn&apos;t entirely correct, since the result had two extra columns (cd_conta and ds_conta).&lt;/p&gt;</comment>
                            <comment id="12613905" author="knutanders" created="Wed, 16 Jul 2008 11:47:07 +0100"  >&lt;p&gt;The reason why the original query doesn&apos;t fail during execution, is that both sub-queries in the union are empty, so that no data is sorted. If I insert more data into the table, that query also failed:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into contas_remessa (cd_remessa,cd_tipo,cd_entidade,cd_mes,cd_conta,automatica,vlr_contabil,status) values (0,170,0,0,0,&apos;&apos;,0,&apos;S&apos;);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select 0 vlr_proc_anterior&lt;br/&gt;
             , 0 vlr_proc_atual&lt;br/&gt;
             , sum(vlr_contabil + vlr_ajuste) disp_financeira&lt;br/&gt;
             from contas_remessa rec&lt;br/&gt;
             where cd_tipo = 1105 and cd_conta = 4&lt;br/&gt;
             group by rec.cd_conta, rec.ds_conta&lt;br/&gt;
             union&lt;br/&gt;
             select case when cd_tipo = 170 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_anterior&lt;br/&gt;
                  , case when cd_tipo = 175 then sum(vlr_contabil) + sum(vlr_ajuste) else 0 end vlr_proc_atual&lt;br/&gt;
                  , 0 disp_financeira&lt;br/&gt;
                  from contas_remessa where cd_tipo in (170, 175) and status = &apos;S&apos;&lt;br/&gt;
                  group by cd_tipo ;&lt;br/&gt;
&amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; ERROR XJ001: Java exception: &apos;ASSERT FAILED col&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;  is null: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12613924" author="knutanders" created="Wed, 16 Jul 2008 12:51:42 +0100"  >&lt;p&gt;I think the key here is to find out why the group by columns from the first expression in the union are added to the result. It seems to be the case for all the set operations. If you have the following queries&lt;/p&gt;

&lt;p&gt;  A: SELECT SUM&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; FROM t GROUP BY x&lt;br/&gt;
  B: VALUES 1&lt;/p&gt;

&lt;p&gt;all of these combinations fail&lt;/p&gt;

&lt;p&gt;  A UNION B&lt;br/&gt;
  A UNION ALL B&lt;br/&gt;
  A EXCEPT B&lt;br/&gt;
  A EXCEPT ALL B&lt;br/&gt;
  A INTERSECT B&lt;br/&gt;
  A INTERSECT ALL B&lt;/p&gt;

&lt;p&gt;However, if the order is reversed (e.g, B UNION A), all of the queries succeed.&lt;/p&gt;</comment>
                            <comment id="12613952" author="knutanders" created="Wed, 16 Jul 2008 14:40:01 +0100"  >&lt;p&gt;Not sure if it is the correct fix, but adding a call to resultColumns.removeGeneratedGroupingColumns() after cloning the result column list from the left result set in SetOperatorNode.buildRCL() seems to fix the problem. I think it makes sense to remove the non-visible columns from the cloned RCL at that point, since they are only meaningful for the left result set, not for the union result set. But I&apos;m not sure exactly what&apos;s meant by a generated grouping column, so it&apos;s not quite clear to me if that&apos;s the correct method to call.&lt;/p&gt;

&lt;p&gt;If it is the correct approach to trim away the non-visible columns from the clone at that point in the code, I think the already committed partial fix is unnecessary, but it shouldn&apos;t do any harm.&lt;/p&gt;</comment>
                            <comment id="12613960" author="bryanpendleton" created="Wed, 16 Jul 2008 15:00:09 +0100"  >&lt;p&gt;A &quot;generated grouping column&quot; is precisely the column &quot;X&quot; in your&lt;/p&gt;

&lt;p&gt;   select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x;&lt;/p&gt;

&lt;p&gt;That is, it is a column which is used in a GROUP BY expression but&lt;br/&gt;
which is NOT an explicit result of the query, so it must be invisibly&lt;br/&gt;
included in the intermediate results in order to support sorting and grouping,&lt;br/&gt;
but it not supposed to be included in the final results.&lt;/p&gt;

&lt;p&gt;removeGeneratedGroupingColumns sounds like exactly the right&lt;br/&gt;
thing to do, and calling it in the Set node sounds correct because of&lt;br/&gt;
this reasoning:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the grouping is performed in the set&apos;s child nodes&lt;/li&gt;
	&lt;li&gt;once the generated child nodes have been constructed, the grouping&lt;br/&gt;
   columns are no longer needed&lt;/li&gt;
	&lt;li&gt;the generated child nodes should not appear in the set&apos;s result&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think that the already-committed partial fix may have perhaps been useful&lt;br/&gt;
for queries such as:&lt;/p&gt;

&lt;p&gt;   select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from t group by x&lt;br/&gt;
       union&lt;br/&gt;
   select sum&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, x from t group by x&lt;/p&gt;

&lt;p&gt;because if we used RCL.size() rather than RCL.visibleSize() to compare&lt;br/&gt;
the two child nodes, wouldn&apos;t we think this query valid, when in fact&lt;br/&gt;
it should complain that the two result sets do not have the same &quot;shape&quot;?&lt;/p&gt;
</comment>
                            <comment id="12613981" author="knutanders" created="Wed, 16 Jul 2008 16:15:12 +0100"  >&lt;p&gt;Thanks Bryan, it sounds like this is the way to go, then.&lt;/p&gt;

&lt;p&gt;The query you mentioned perhaps could be helped by the partial fix will probably be handled correctly without that fix as well, because of this code at the beginning of SetOperatorNode.buildRCL():&lt;/p&gt;

&lt;p&gt;		/* Verify that both sides of the union have the same # of columns in their&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;RCL.&lt;br/&gt;
		 */&lt;br/&gt;
		if (leftResultSet.getResultColumns().visibleSize() !=&lt;br/&gt;
			rightResultSet.getResultColumns().visibleSize())
		{
			throw StandardException.newException(SQLState.LANG_UNION_UNMATCHED_COLUMNS,
                                                 getOperatorName());
		}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I guess we could keep the fix, but perhaps we should add asserts at those places in the code to verify that size()==visibleSize().&lt;/p&gt;</comment>
                            <comment id="12615262" author="knutanders" created="Mon, 21 Jul 2008 15:38:08 +0100"  >&lt;p&gt;Attaching a new patch which removes the extra columns in SetOperatorNode.buildRCL and adds asserts to check that size()==visibleSize() where the previous fix was added. It also adds test cases that test all the different set operations and different number of columns and grouping columns.&lt;/p&gt;

&lt;p&gt;All the regression tests in suites.All and derbyall passed with the patch.&lt;/p&gt;</comment>
                            <comment id="12615285" author="bryanpendleton" created="Mon, 21 Jul 2008 17:01:02 +0100"  >&lt;p&gt;Hi Knut, the patch looks great. The new tests are very thorough and complete.&lt;br/&gt;
Thanks for taking the time to cover all these different cases. +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12615547" author="knutanders" created="Tue, 22 Jul 2008 09:05:33 +0100"  >&lt;p&gt;Thanks for reviewing the patch and for all your help with this issue, Bryan.&lt;br/&gt;
Committed revision 678668.&lt;br/&gt;
I&apos;m leaving the issue open until the fix has been back-ported to 10.3 and 10.4.&lt;/p&gt;</comment>
                            <comment id="12615922" author="knutanders" created="Wed, 23 Jul 2008 10:05:07 +0100"  >&lt;p&gt;Committed to 10.4 with revision 679035.&lt;br/&gt;
Committed to 10.3 with revision 679037.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12325311">DERBY-681</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12385414" name="CONSTAS_REMESSA.sql" size="916" author="heleno.alves" created="Mon, 7 Jul 2008 17:36:04 +0100"/>
                            <attachment id="12385863" name="d3764-1a.diff" size="2066" author="knutanders" created="Fri, 11 Jul 2008 13:18:27 +0100"/>
                            <attachment id="12386528" name="d3764-2a.diff" size="17174" author="knutanders" created="Mon, 21 Jul 2008 15:38:08 +0100"/>
                            <attachment id="12386529" name="d3764-2a.stat" size="235" author="knutanders" created="Mon, 21 Jul 2008 15:38:08 +0100"/>
                            <attachment id="12385416" name="database_test.10.0.zip" size="96302" author="heleno.alves" created="Mon, 7 Jul 2008 17:44:54 +0100"/>
                            <attachment id="12385418" name="database_test.10.3.zip" size="103902" author="heleno.alves" created="Mon, 7 Jul 2008 17:46:57 +0100"/>
                            <attachment id="12385419" name="database_test.10.4.zip" size="106872" author="heleno.alves" created="Mon, 7 Jul 2008 17:47:39 +0100"/>
                            <attachment id="12385420" name="export_contas_remessas.exp" size="2315" author="heleno.alves" created="Mon, 7 Jul 2008 17:48:53 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 7 Jul 2008 17:16:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23829</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lbz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37274</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>