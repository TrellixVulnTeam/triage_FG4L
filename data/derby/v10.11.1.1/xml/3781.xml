<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:17:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3781/DERBY-3781.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3781] PositionedStoreStream.reposition(pos) with pos greater than length leaves the stream object in an inconsistent state</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3781</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;PositionedStoreStream.reposition(pos) with pos greater than the stream length leaves the stream object in an inconsistent state, causing subsequent calls to fail or the state to remain inconsistent (which can cause the wrong data to be returned).&lt;/p&gt;

&lt;p&gt;The problem is that the position variable gets out of sync with the underlying stream.&lt;br/&gt;
There are at least two ways to fix this (assuming the positioned store stream does not know the length of the underlying stream):&lt;br/&gt;
 a) Reset stream to position zero.&lt;br/&gt;
 b) Let the stream be positioned at EOF and update the internal position variable.&lt;/p&gt;

&lt;p&gt;Option b) leaves the stream in an unusable state, and the next request will cause option a) to be performed. It also require a slight rewrite of &apos;PositionedStoreStream.skipFully&apos; and &apos;PositionedStoreStream.reposition&apos; to be able to determine the position of the stream (the length in this case).&lt;/p&gt;

&lt;p&gt;Option a) will cause the first page of the stream to be read into the cache (if not already there), but taken the reason for doing this is an error condition it seems acceptable.&lt;/p&gt;

&lt;p&gt;A correct value of the position variable is required for correct/valid operation of PositionedStoreStream.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12400285">DERBY-3781</key>
            <summary>PositionedStoreStream.reposition(pos) with pos greater than length leaves the stream object in an inconsistent state</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Jul 2008 12:53:55 +0100</created>
                <updated>Mon, 4 May 2009 19:21:57 +0100</updated>
                            <resolved>Thu, 17 Jul 2008 08:28:27 +0100</resolved>
                                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.2.0</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12613635" author="kristwaa" created="Tue, 15 Jul 2008 16:23:51 +0100"  >&lt;p&gt;&apos;derby-3781-1a-fix_and_test.diff&apos; fixes the bug by resetting the stream after an unsuccessful reposition attempt.&lt;br/&gt;
Also includes a regression test.&lt;/p&gt;

&lt;p&gt;I ran all tests without failures, but due to a last minute change in the patch I&apos;m rerunning.&lt;br/&gt;
Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12613723" author="kristwaa" created="Tue, 15 Jul 2008 21:38:30 +0100"  >&lt;p&gt;All tests ran successfully with patch 1a.&lt;/p&gt;

&lt;p&gt;It should be noted that this bug was masked earlier due to the somewhat blunt algorithm causing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3766&quot; title=&quot;EmbedBlob.setPosition is highly ineffective for streams&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3766&quot;&gt;&lt;del&gt;DERBY-3766&lt;/del&gt;&lt;/a&gt;, which reset the stream and the position to zero on every repositioning request.&lt;/p&gt;</comment>
                            <comment id="12613730" author="knutanders" created="Tue, 15 Jul 2008 21:56:18 +0100"  >&lt;p&gt;The fix looks correct to me.&lt;/p&gt;

&lt;p&gt;It seems like part of the problem was that the convenience link &quot;resettable&quot; was used directly instead of calling this.resetStream(), so that the pos variable wasn&apos;t updated. Perhaps it would be less confusing and help prevent future bugs if we also removed the convenience link?&lt;/p&gt;</comment>
                            <comment id="12613852" author="kristwaa" created="Wed, 16 Jul 2008 07:39:22 +0100"  >&lt;p&gt;Regarding the convenience link, using this.resetStream() instead of resettable.resetStream() wouldn&apos;t fix the problem. It would only cause another inconsistent state.&lt;/p&gt;

&lt;p&gt;The problem is that the stream skipping and the position update isn&apos;t &quot;atomic&quot; in the case of requesting a position after EOF. The code simply wasn&apos;t properly written for handling this failure scenario.&lt;/p&gt;

&lt;p&gt;The convenience link isn&apos;t required, and only used in a few places, so removing it sounds like an improvement. I&apos;ll make a patch after 1a has been committed.&lt;/p&gt;</comment>
                            <comment id="12613853" author="kristwaa" created="Wed, 16 Jul 2008 07:45:49 +0100"  >&lt;p&gt;Committed &apos;derby-3781-1a-fix_and_test.diff&apos; to trunk with revision 677172.&lt;/p&gt;</comment>
                            <comment id="12613860" author="kristwaa" created="Wed, 16 Jul 2008 08:14:22 +0100"  >&lt;p&gt;&apos;derby-3781-2a-remove_convenience_link.diff&apos; removes the convenience link and replaces it with casts in three places. I also added a instanceof check in the constructor to detect where in the code an invalid stream might be passed in.&lt;br/&gt;
I think it is better to catch the error where it originates instead of waiting for a ClassCastException at a later point in time.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="12613876" author="knutanders" created="Wed, 16 Jul 2008 09:31:06 +0100"  >&lt;p&gt;2a looks good. Perhaps it would be better to use ASSERT instead of IllegalArgumentException? Then we don&apos;t need to worry about the risk of presenting non-localized error messages to the users, or about increasing the footprint of the production jars. The error won&apos;t be hidden in production code, it&apos;ll just happen another place, and I think it&apos;ll still be fairly easy to see what the problem is from the ClassCastException that will be presented.&lt;/p&gt;

&lt;p&gt;Another thing I came to think about - is it possible to expose the original problem through JDBC? If it is, then it might be valuable to add a regression test that uses JDBC in addition to the one that accesses the PositionedStoredStream class directly.&lt;/p&gt;</comment>
                            <comment id="12613887" author="kristwaa" created="Wed, 16 Jul 2008 10:20:18 +0100"  >&lt;p&gt;Attached &apos;derby-3781-2b-remove_convenience_link.diff&apos;, which removes the instanceof check.&lt;/p&gt;

&lt;p&gt;Knut Anders wrote:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Perhaps it would be better to use ASSERT instead of IllegalArgumentException? Then we don&apos;t need to worry about the risk of presenting non-localized error messages to the users, or about increasing the footprint of the production jars. The error won&apos;t be hidden in production code, it&apos;ll just happen another place, and I think it&apos;ll still be fairly easy to see what the problem is from the ClassCastException that will be presented.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;After analyzing the code, I&apos;ve decided to remove the check. It is already checked elsewhere (EmbedBlob and EmbedClob) in sane builds, and it will fail with a CCE during initStream if an invalid stream is passed in from somewhere else in the future in the insane builds.&lt;/p&gt;


&lt;hr /&gt;
&lt;p&gt;Another thing I came to think about - is it possible to expose the original problem through JDBC?&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Yes, and it&apos;s already being done through BlobClob4BlobTest.testGetBytes. It should be easy to write a more specific test to make it more explicit.&lt;br/&gt;
Are you happy with the existing test, or should I write a specific regression test for the Jira?&lt;/p&gt;</comment>
                            <comment id="12613893" author="knutanders" created="Wed, 16 Jul 2008 10:47:09 +0100"  >&lt;p&gt;Thanks for the new patch. +1 to commit.&lt;/p&gt;

&lt;p&gt;BlobClob4BlobTest.testGetBytes is probably fine, but did it expose the original problem? I never saw it failing.&lt;/p&gt;</comment>
                            <comment id="12613903" author="kristwaa" created="Wed, 16 Jul 2008 11:26:56 +0100"  >&lt;p&gt;The test didn&apos;t fail because the bug was masked by another piece of code (see my comment from 15/Jul/08 01:38 PM).&lt;br/&gt;
This code will be changed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3766&quot; title=&quot;EmbedBlob.setPosition is highly ineffective for streams&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3766&quot;&gt;&lt;del&gt;DERBY-3766&lt;/del&gt;&lt;/a&gt;. It masked the bug by always resetting the stream, which brought the position variable and the underlying stream back into sync.&lt;/p&gt;

&lt;p&gt;With my early patch for EmbedBlob.setPosition (not yet posted or committed), BlobClob4BlobTest.testGetBytes failed.&lt;/p&gt;</comment>
                            <comment id="12613978" author="kristwaa" created="Wed, 16 Jul 2008 16:05:23 +0100"  >&lt;p&gt;Committed &apos;derby-3781-2b-remove_convenience_link.diff&apos; to trunk with revision 677281.&lt;br/&gt;
Will backport both fixes tomorrow if my test runs are successful.&lt;/p&gt;</comment>
                            <comment id="12614264" author="kristwaa" created="Thu, 17 Jul 2008 08:28:27 +0100"  >&lt;p&gt;Backported patches 1a and 2b to 10.4 with revision 677520 and to 10.3 with revision 677521.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12399881">DERBY-3766</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12386063" name="derby-3781-1a-fix_and_test.diff" size="4768" author="kristwaa" created="Tue, 15 Jul 2008 16:23:51 +0100"/>
                            <attachment id="12386158" name="derby-3781-2a-remove_convenience_link.diff" size="2072" author="kristwaa" created="Wed, 16 Jul 2008 08:14:22 +0100"/>
                            <attachment id="12386164" name="derby-3781-2b-remove_convenience_link.diff" size="1806" author="kristwaa" created="Wed, 16 Jul 2008 10:20:18 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Jul 2008 20:56:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23840</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0y2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39338</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>