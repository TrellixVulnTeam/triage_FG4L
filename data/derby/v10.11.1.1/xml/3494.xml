<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3494/DERBY-3494.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3494] Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3494</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt; Dan suggested ...&lt;/p&gt;

&lt;p&gt;Setting up a NormalizeResultSetNode is spread over three locations, the class itself (very little, it&apos;s almost acting like a C struct),&lt;br/&gt;
the genNormalizeResultSetNode method and then copyLengthsAndTypesToSource. A good O-O implementation would have&lt;br/&gt;
the logic to create a NormalizeResultSetNode self-contained in NormalizeResultSetNode.&lt;/p&gt;

&lt;p&gt;Since the ResultColumnList of the original ResultSetNode correctly describes the desired outcome, it&apos;s not clear to&lt;br/&gt;
me why NormalizeResultSetNode can&apos;t just refer to the same list and use it for its processing. They may be some chance&lt;br/&gt;
that this would cause recursion at some point, where a NormalizeResultSetNode would think it needed to be wrapped&lt;br/&gt;
in a NormalizeResultSetNode since the types of its columns and expression don&apos;t match (i.e. when it is handled as a regular ResultSetNode).&lt;/p&gt;

&lt;p&gt;I think moving the setup of a NormalizeResultSetNode into the class itself, so that its inputs are just the ResultSetNode to wrap&lt;br/&gt;
would help clear up the code, especially if comments were added indicating why certain actions were being taken.&lt;/p&gt;

&lt;p&gt;I am separating this task out into a separate issue, so that it can be worked on independently of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12390220">DERBY-3494</key>
            <summary>Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Mar 2008 00:12:12 +0000</created>
                <updated>Mon, 4 May 2009 19:22:12 +0100</updated>
                            <resolved>Wed, 2 Apr 2008 18:29:37 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12575518" author="kmarsden" created="Wed, 5 Mar 2008 22:44:53 +0000"  >&lt;p&gt;I am  trying to understand why we get the npe in views.sql with the small code change proposed at: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310?focusedCommentId=12575071#action_12575071&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-3310?focusedCommentId=12575071#action_12575071&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am not having too much luck debugging this. I am attaching the script npe.sql which is a smaller script than views.sql to reproduce the problem, and also decompile.out which decompiles the generated code.&lt;/p&gt;

&lt;p&gt;Any tips on debugging this would be greatly appreciated.  One thing I did look at was the difference between prRCList and resultColumns after the copy. There was some state that didn&apos;t get copied, and I tried copying that state, including the LCC.  That did not have any effect and I still got the NPE.&lt;/p&gt;

&lt;p&gt;As an aside there is this interesting comment in UnionNode. I don&apos;t know if it comes into play here but seemed notable.&lt;/p&gt;

&lt;p&gt;		/* RESOLVE - We&apos;d like to generate any necessary NormalizeResultSets&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;above our children here, in the tree.  However, doing so causes&lt;/li&gt;
	&lt;li&gt;the following query to fail because the where clause goes against&lt;/li&gt;
	&lt;li&gt;the NRS instead of the Union:&lt;/li&gt;
	&lt;li&gt;SELECT TABLE_TYPE&lt;/li&gt;
	&lt;li&gt;FROM SYS.SYSTABLES,&lt;/li&gt;
	&lt;li&gt;(VALUES (&apos;T&apos;,&apos;TABLE&apos;) ,&lt;/li&gt;
	&lt;li&gt;(&apos;S&apos;,&apos;SYSTEM TABLE&apos;) , (&apos;V&apos;, &apos;VIEW&apos;)) T(TTABBREV,TABLE_TYPE)&lt;/li&gt;
	&lt;li&gt;WHERE TTABBREV=TABLETYPE;&lt;/li&gt;
	&lt;li&gt;Thus, we are forced to skip over generating the nodes in the tree&lt;/li&gt;
	&lt;li&gt;and directly generate the execution time code in generate() instead.&lt;/li&gt;
	&lt;li&gt;This solves the problem for some unknown reason.&lt;br/&gt;
		 */&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Thanks again for any pointers.&lt;/p&gt;</comment>
                            <comment id="12576431" author="army" created="Fri, 7 Mar 2008 23:06:42 +0000"  >&lt;p&gt;&amp;gt; Since the ResultColumnList of the original ResultSetNode correctly describes&lt;br/&gt;
&amp;gt; the desired outcome, it&apos;s not clear to me why NormalizeResultSetNode can&apos;t&lt;br/&gt;
&amp;gt; just refer to the same list and use it for its processing.&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;&amp;gt; I am trying to understand why we get the npe in views.sql with the small&lt;br/&gt;
&amp;gt; code change proposed [ in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3310&quot; title=&quot;ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3310&quot;&gt;&lt;del&gt;DERBY-3310&lt;/del&gt;&lt;/a&gt; ].&lt;/p&gt;

&lt;p&gt;For reference, the change we&apos;re talking about here is in ResultSetNode.java:&lt;/p&gt;

&lt;p&gt;@@ -1430,8 +1430,7 @@&lt;/p&gt;

&lt;p&gt;         /* We get a shallow copy of the ResultColumnList and its&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ResultColumns.  (Copy maintains ResultColumn.expression for now.)&lt;br/&gt;
          */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ResultColumnList prRCList = resultColumns;&lt;/li&gt;
	&lt;li&gt;resultColumns = resultColumns.copyListAndObjects();&lt;br/&gt;
  +        ResultColumnList prRCList = resultColumns.copyListAndObjects();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         // Remove any columns that were generated.&lt;br/&gt;
         prRCList.removeGeneratedGroupingColumns();&lt;/p&gt;

&lt;p&gt;In reading the javadoc comments for genNormalizeResultSetNode(...), which is the method in which the above fragment appears, it definitely seems like the original lines of code were deliberate: i.e. that the decision to set prRCList to resultColumns and then make resultColumns point to a copy of itself was intentional.  I could not, however, determine from the comments &lt;b&gt;why&lt;/b&gt; exactly this was necessary.  So I did some tracing through code generation with and without the change to try to see what is going on.&lt;/p&gt;

&lt;p&gt;The short explanation comes down to this: By doing what the code currently does we ensure that any column references which point to the result column list of the node in question (UnionNode in the case of npe.sql)-&lt;del&gt;and in particular, column references within predicates that sit higher up in the query tree&lt;/del&gt;-will always point to the &quot;top&quot; of the query subtree that is generated for the node. That in turn ensures that, during execution, the references will point to rows which come from the correct result set.  The current code in genNormalizeResultSetNode (and elsewhere) accomplishes this by &lt;em&gt;moving&lt;/em&gt; the target node&apos;s ResultColumnList object, which may or may not be referenced elsewhere, up to the &quot;top&quot; of the generated subtree.&lt;/p&gt;

&lt;p&gt;That said, the small change shown above ultimately makes it so that predicates which point to the UnionNode&apos;s result column list will be applied directly against rows from the &lt;b&gt;UnionNode&lt;/b&gt; instead of against rows from the node generated on &lt;b&gt;top&lt;/b&gt; of the UnionNode.  That causes the predicate to attempt to reference values from the wrong execution-time result set, which in turn leads to a NullPointerException.&lt;/p&gt;

&lt;p&gt;If that&apos;s good enough to satsify your curiosity, then you can stop reading now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Otherwise, a more detailed (and hopefully understandable) discussion is attached as &quot;d3494_npe_writeup.html&quot;...&lt;/p&gt;</comment>
                            <comment id="12576433" author="army" created="Fri, 7 Mar 2008 23:14:49 +0000"  >&lt;p&gt;Fix some minor formatting glitches in first version.&lt;/p&gt;</comment>
                            <comment id="12577607" author="bryanpendleton" created="Tue, 11 Mar 2008 21:22:27 +0000"  >&lt;p&gt;Very clear writeup, Army, thank you very much!&lt;/p&gt;</comment>
                            <comment id="12577610" author="army" created="Tue, 11 Mar 2008 21:37:21 +0000"  >&lt;p&gt;Thanks, as always, for the positive feedback, Bryan &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12577944" author="kmarsden" created="Wed, 12 Mar 2008 17:28:09 +0000"  >&lt;p&gt;Thank you so much Army for the detailed write up.&lt;br/&gt;
After reading it a few dozen times I think I have a much better understanding of what is going on with the modification of the child result set.  It seems necessary.  I don&apos;t really see how we could acheive the goal of not modifying the result set we are wrapping with a NormalizeResultSetNode.    &lt;/p&gt;

&lt;p&gt;Now that I understand the modification better I think I have also had a change of heart in the usefulness of moving it into NormalizeResultSetNode init. DistinctNode makes this modification in its init method and I think that it makes sense for NormalizeResultSetNode to do the same thing.&lt;/p&gt;

&lt;p&gt;I am attaching a patch deryby-3494_remove_genNormalizeResultSetNode_diff.txt&lt;br/&gt;
which is the same as the patch I attached to derby-3310 except for some additional comments.&lt;br/&gt;
I would like it to be considered for commit.&lt;/p&gt;

</comment>
                            <comment id="12581178" author="mamtas" created="Fri, 21 Mar 2008 20:01:04 +0000"  >&lt;p&gt;Kathey, I went through your changes and the great writeup that Army wrote and based on that, this code movement/cleanup looks good. Now NormalizeResultSetNode would be generated just like other nodes rather than the special genNormalizeResultSetNode method. The patch looks good for commit.&lt;/p&gt;</comment>
                            <comment id="12581204" author="kmarsden" created="Fri, 21 Mar 2008 22:24:26 +0000"  >&lt;p&gt;Thanks Mamta, I will plan to commit Monday unless anyone else has more comments.  I noticed an indentation issue in the patch for NormalizeResultSetNode. I&apos;ll fix that up before I check in.&lt;/p&gt;

&lt;p&gt;Then I will work on incorporating copyLengthsAndTypesToSource into init.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12581716" author="kmarsden" created="Mon, 24 Mar 2008 23:03:37 +0000"  >&lt;p&gt;Attached is a patch to move copyTypesAndLengthsFromSource into NormalizeResultSetNode.init method.  &lt;/p&gt;

&lt;p&gt;I ran suites.All and had some failures in jmx due to my firewall, rerunning these tests passed.  I am running derbyall now.&lt;/p&gt;</comment>
                            <comment id="12584210" author="mamtas" created="Tue, 1 Apr 2008 17:44:29 +0100"  >&lt;p&gt;Kathey, I took a look at the patch and it looks good. The only comment I have is can we get rid of method copyTypesAndLengthsToSource from ResultColumnList.java This method was called by InsertNode and UpdateNode but with your patch, those calls are not made anymore.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12385890">DERBY-3310</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12377407" name="d3494_npe_writeup.html" size="36196" author="army" created="Fri, 7 Mar 2008 23:14:49 +0000"/>
                            <attachment id="12377404" name="d3494_npe_writeup.html" size="35435" author="army" created="Fri, 7 Mar 2008 23:06:42 +0000"/>
                            <attachment id="12377204" name="decompile.out" size="15574" author="kmarsden" created="Wed, 5 Mar 2008 22:44:53 +0000"/>
                            <attachment id="12378520" name="derby-3494_removeCopyTypesAndLengths_diff.txt" size="4048" author="kmarsden" created="Mon, 24 Mar 2008 23:03:37 +0000"/>
                            <attachment id="12377711" name="derby-3494_remove_genNormalizeResultSetNode_diff.txt" size="8758" author="kmarsden" created="Wed, 12 Mar 2008 17:28:09 +0000"/>
                            <attachment id="12377203" name="npe.sql" size="1927" author="kmarsden" created="Wed, 5 Mar 2008 22:44:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Mar 2008 23:06:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30881</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0xuf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>