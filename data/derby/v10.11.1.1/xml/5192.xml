<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5192/DERBY-5192.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5192] Setting up network server for management tests hangs intermittently</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5192</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I&apos;ve seen on three occurrences with the 10.8.1.0 and 10.8.1.1 release candidates that suites.All has been stuck when setting up the network server decorator for the management test suite. Here&apos;s what I see at the end of the console output (running with derby.tests.trace=true):&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; test_jdbc4_1 used 0 ms &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; test_jdbc4_1 used 0 ms &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; test_notBooted used 1623 ms java.net.SocketException: Connection reset&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at java.net.SocketInputStream.read(SocketInputStream.java:189)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at java.net.SocketInputStream.read(SocketInputStream.java:121)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at java.net.SocketInputStream.read(SocketInputStream.java:107)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derby.impl.drda.NetworkServerControlImpl.fillReplyBuffer(Unknown Source)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derby.impl.drda.NetworkServerControlImpl.readResult(Unknown Source)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derby.impl.drda.NetworkServerControlImpl.pingWithNoOpen(Unknown Source)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derby.impl.drda.NetworkServerControlImpl.ping(Unknown Source)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derby.drda.NetworkServerControl.ping(Unknown Source)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerUp(NetworkServerTestSetup.java:567)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStart(NetworkServerTestSetup.java:636)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp(NetworkServerTestSetup.java:196)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)&lt;/p&gt;

&lt;p&gt;The exception trace is just printed to the console, but it doesn&apos;t make any test fail. (The exception printed on FreeBSD was different, it said &quot;DRDA_InvalidReplyTooShort.S:Invalid reply from network server: Insufficient data.&quot; The other two looked like the one above.)&lt;/p&gt;

&lt;p&gt;All the hangs have happened on VirtualBox instances, though with different guest operating systems and JVMs. Probably the timing is different from what we have on physical machines.&lt;/p&gt;</description>
                <environment>Derby 10.8.1.0 - FreeBSD 8.2 (i386) - OpenJDK 6 (b20)&lt;br/&gt;
Derby 10.8.1.0 - Oracle Enterprise Linux 6.0 (x86_64) - OpenJDK 6 (b17)&lt;br/&gt;
Derby 10.8.1.1 - Debian GNU/Linux 6.0.1 (i386) - JDK 7 (build 1.7.0-ea-b135)</environment>
        <key id="12504344">DERBY-5192</key>
            <summary>Setting up network server for management tests hangs intermittently</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Apr 2011 09:11:38 +0100</created>
                <updated>Thu, 30 Jun 2011 10:21:40 +0100</updated>
                            <resolved>Mon, 18 Apr 2011 08:42:12 +0100</resolved>
                                    <version>10.8.1.2</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13020253" author="knutanders" created="Fri, 15 Apr 2011 10:33:46 +0100"  >&lt;p&gt;When looking at the thread dump for the hung process, I see the&lt;br/&gt;
following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There is a server thread that&apos;s blocked on a call to&lt;br/&gt;
  shutdownSync.wait() in NetworkServerControlImpl.blockingStart().&lt;br/&gt;
  This means the network server is up and running, waiting for a&lt;br/&gt;
  shutdown signal.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There is no ClientThread, whereas one would expect one if the&lt;br/&gt;
  network server was up. This is the thread that accepts incoming&lt;br/&gt;
  connections from the clients.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The main JUnit thread is stuck in a read call on the client socket.&lt;br/&gt;
  This is consistent with what one would expect when there is no&lt;br/&gt;
  ClientThread. The client is able to connect to the server, but the&lt;br/&gt;
  server won&apos;t process the connection.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Inspecting a heap dump of the process, I notice that the shutdown flag&lt;br/&gt;
in the NetworkServerControlImpl instance is actually true. So it looks&lt;br/&gt;
like the server has been shut down, but it&apos;s still waiting for the&lt;br/&gt;
shutdown signal. The only way I can see that this can happen, is if&lt;br/&gt;
the shutdown signal is sent before blockingStart() has come to the&lt;br/&gt;
shutdownSync.wait() call. The wait/notify code here isn&apos;t quite&lt;br/&gt;
idiomatic. The wait() call isn&apos;t placed inside a while loop checking&lt;br/&gt;
the wait condition, so if the shutdown happens too early, the server&lt;br/&gt;
won&apos;t ever notice the notifyAll() call that tells it to stop waiting.&lt;/p&gt;

&lt;p&gt;We have many existing bug reports about problems when starting the&lt;br/&gt;
network server from NetworkServerTestSetup (hangs, exceptions printed&lt;br/&gt;
by ping(), and timeouts waiting for the network server to start). Some&lt;br/&gt;
of these may have the same underlying cause as this bug. A quick JIRA&lt;br/&gt;
search gave these hits: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4176&quot; title=&quot;java.net.SocketException: Connection reset with ibm 1.5. running ServerPropertiesTest in suites.All&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4176&quot;&gt;&lt;del&gt;DERBY-4176&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4201&quot; title=&quot;SecureServerTest AssertionFailedError: Timed out waiting for network server to start&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4201&quot;&gt;&lt;del&gt;DERBY-4201&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4238&quot; title=&quot;JMX  test failure starting network server doesn&amp;#39;t  seem to get recorded to the fail directory &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4238&quot;&gt;DERBY-4238&lt;/a&gt;,&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4265&quot; title=&quot;timed out waiting for server to start in  StatementPoolingTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4265&quot;&gt;&lt;del&gt;DERBY-4265&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4319&quot; title=&quot;hang in suites.all with ibm 1.5 on AIX after ttestDefaultProperties&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4319&quot;&gt;&lt;del&gt;DERBY-4319&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4739&quot; title=&quot;test hang in Suites.all starting derbynet.SSLTest on Mac OS X 10.6&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4739&quot;&gt;&lt;del&gt;DERBY-4739&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4914&quot; title=&quot;Utf8CcsidManagerClientTest timed out waiting for network server to start&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4914&quot;&gt;&lt;del&gt;DERBY-4914&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13020260" author="knutanders" created="Fri, 15 Apr 2011 11:15:33 +0100"  >&lt;p&gt;The attached patch changes the wait/notify code to use the more common pattern of doing the wait inside a loop that checks the wait condition. This should have the following advantages over the the current code:&lt;/p&gt;

&lt;p&gt;1) If the network server is shut down before blockingStart() gets to the wait() call, it won&apos;t hang indefinitely.&lt;/p&gt;

&lt;p&gt;2) If a spurious wakeup happen in the wait() call (which may happen, according to the Java SE javadocs) blockingStart() won&apos;t return prematurely.&lt;/p&gt;</comment>
                            <comment id="13020264" author="knutanders" created="Fri, 15 Apr 2011 11:42:25 +0100"  >&lt;p&gt;I tested the patch manually the following way:&lt;/p&gt;

&lt;p&gt;1) In blockingStart(), I added a 20 second sleep right before the synchronized block around the wait() call.&lt;/p&gt;

&lt;p&gt;2) Started a network server using the CLI.&lt;/p&gt;

&lt;p&gt;3) While blockingStart() was in the 20 second sleep, shut down the network server using the CLI.&lt;/p&gt;

&lt;p&gt;4) Ping the network server using the CLI.&lt;/p&gt;

&lt;p&gt;What I observed was:&lt;/p&gt;

&lt;p&gt;I) Without the patch: The shutdown command in (3) would complete successfully. However, the network server process would continue running. The first ping in (4) would fail with a &quot;connection reset&quot; error. Subsequent pings would hang indefinitely.&lt;/p&gt;

&lt;p&gt;II) With the patch: The shutdown command in (3) completed successfully, and the network server process would terminate once the 20 second sleep was completed. When pinging the network server after the shutdown, a &quot;connection reset&quot; error was seen. Subsequent pings would hang until the 20 second sleep was completed and then fail with a &quot;connection reset&quot; error. Pinging the server after the server process had terminated failed with &quot;connection refused&quot;.&lt;/p&gt;

&lt;p&gt;So, in short: Without the patch, the server isn&apos;t properly shut down, and incoming connection attempts will hang indefinitely. With the patch, the server is shut down, and incoming connection attempts will fail instead of hanging.&lt;/p&gt;</comment>
                            <comment id="13020294" author="dagw" created="Fri, 15 Apr 2011 14:05:49 +0100"  >&lt;p&gt;I did look at this one too and agree with you analysis. Patch looks right. +1&lt;/p&gt;</comment>
                            <comment id="13020305" author="bryanpendleton" created="Fri, 15 Apr 2011 15:02:39 +0100"  >&lt;p&gt;I recall having seen the occasional hang such as this in the past. It never occurred to me to&lt;br/&gt;
use the heap dump to check the status of global variables like that &amp;#8211; neat idea!&lt;/p&gt;

&lt;p&gt;Your change seems good to me, too. If I understand your description, although this&lt;br/&gt;
is a generic bug, it&apos;s most likely to affect only tests, not &quot;normal&quot; usage, because only&lt;br/&gt;
tests are likely to try to shut the NS down so soon after starting it, is that right?&lt;/p&gt;</comment>
                            <comment id="13020828" author="knutanders" created="Sun, 17 Apr 2011 17:41:21 +0100"  >&lt;p&gt;Thanks, Dag and Bryan, for looking at the patch.&lt;/p&gt;

&lt;p&gt;I think Bryan is right that this bug is not likely to affect servers in production, since they usually run for a longer time before they&apos;re shut down. The one thing that could also affect production servers, is the lack of protection against spurious wakeups from the wait() call. The javadoc for wait() says that wait() could return even when notify() and notifyAll() haven&apos;t been called, but blockingStart() doesn&apos;t account for that and treats every wakeup as a shutdown signal.&lt;/p&gt;</comment>
                            <comment id="13020927" author="knutanders" created="Mon, 18 Apr 2011 08:42:12 +0100"  >&lt;p&gt;Committed to trunk with revision 1094315.&lt;br/&gt;
Committed to 10.8 with revision 1094329.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12425869">DERBY-4238</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12468858">DERBY-4739</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12423430">DERBY-4176</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12427599">DERBY-4265</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12430960">DERBY-4319</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12504367">DERBY-5194</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12424187">DERBY-4201</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12480807">DERBY-4914</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12476444" name="wait-notify.diff" size="970" author="knutanders" created="Fri, 15 Apr 2011 11:15:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 15 Apr 2011 13:05:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24705</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36397</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>