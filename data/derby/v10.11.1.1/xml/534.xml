<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-534/DERBY-534.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-534] Support use of the WHEN clause in CREATE TRIGGER statements</title>
                <link>https://issues.apache.org/jira/browse/DERBY-534</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Support use of the WHEN clause in CREATE TRIGGER statements. The clause is described in the SQL standard (2003) in chapter &quot;11.39 &amp;lt;trigger definition&amp;gt;&quot; under &quot;&amp;lt;triggered action&amp;gt;&quot;.&lt;/p&gt;

&lt;p&gt;There are traces in the code that suggests some work has been done on this earlier. If anyone knows something about this, please add a comment to this issue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12313741">DERBY-534</key>
            <summary>Support use of the WHEN clause in CREATE TRIGGER statements</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Wed, 24 Aug 2005 19:50:25 +0100</created>
                <updated>Fri, 12 Dec 2014 22:12:20 +0000</updated>
                            <resolved>Tue, 19 Nov 2013 12:27:47 +0000</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13201075" author="nullone" created="Mon, 6 Feb 2012 06:36:17 +0000"  >&lt;p&gt;Please somebody look at this issue. It has been there for almost 7 years.&lt;/p&gt;

&lt;p&gt;I really need to filter target rows.&lt;/p&gt;

&lt;p&gt;This will make Derby much more powerful and user friendly.&lt;/p&gt;

&lt;p&gt;Thanks in advance. &lt;/p&gt;</comment>
                            <comment id="13202048" author="dagw" created="Tue, 7 Feb 2012 03:36:54 +0000"  >&lt;p&gt;Thanks for your interest, nullone. We are always looking for volunteers, Derby being open source. Apart from voting for the issues, we are always welcoming offers to help us move the product forward.&lt;br/&gt;
If you were interested, I&apos;m sure, you would get some help in the derby-dev mailing list from the regulars. If not, you&apos;ll have to wait for a dev to take an interest in it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I am sure it can be a nice feature to have.&lt;/p&gt;</comment>
                            <comment id="13763059" author="knutanders" created="Tue, 10 Sep 2013 15:16:55 +0100"  >&lt;p&gt;Attaching a first crack at a functional specification for this feature.&lt;/p&gt;</comment>
                            <comment id="13763106" author="knutanders" created="Tue, 10 Sep 2013 16:14:48 +0100"  >&lt;p&gt;Kristian mentioned in the issue description that there are traces of support for the WHEN clause in the code. I see that there is some code for it in CreateTriggerNode for it at least.&lt;/p&gt;

&lt;p&gt;I experimented with the attached patch, parser.diff, that makes the parser accept the WHEN clause and pass the information on to CreateTriggerNode.&lt;/p&gt;

&lt;p&gt;As can be seen from the ij transcript below, this actually creates an SPS for the WHEN clause in SYS.SYSSTATEMENTS:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.11
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;
ij&amp;gt; create table t1(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create table t2(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create trigger tr1 after insert on t1 referencing new as new for each row when (true) insert into t2 values 1;
0 rows inserted/updated/deleted
ij&amp;gt; create trigger tr2 after insert on t1 referencing new as new for each row when (false) insert into t2 values 2;
0 rows inserted/updated/deleted
ij&amp;gt; select * from sys.sysstatements where stmtname like &apos;TRIGGER%&apos;;
STMTID                              |STMTNAME                                                                                                                        |SCHEMAID                            |&amp;amp;|VALID|TEXT                                                                                                                            |LASTCOMPILED                 |COMPILATIONSCHEMAID                 |USINGTEXT                                                                                                                       

070a00b0-0141-0866-ce24-000018892889|TRIGGERACTN_6ede40af-0141-0866-ce24-000018892889_ed8940a7-0141-0866-ce24-000018892889                                           |80000000-00d2-b38f-4cda-000a0a412c00|T|false|insert into t2 values 1                                                                                                         |2013-09-10 17:04:22.812      |80000000-00d2-b38f-4cda-000a0a412c00|NULL                                                                                                                            
89e800c0-0141-0866-ce24-000018892889|TRIGGERACTN_71b840bf-0141-0866-ce24-000018892889_ed8940a7-0141-0866-ce24-000018892889                                           |80000000-00d2-b38f-4cda-000a0a412c00|T|true |insert into t2 values 2                                                                                                         |2013-09-10 17:04:23.827      |80000000-00d2-b38f-4cda-000a0a412c00|NULL                                                                                                                            
8f3600b1-0141-0866-ce24-000018892889|TRIGGERWHEN_6ede40af-0141-0866-ce24-000018892889_ed8940a7-0141-0866-ce24-000018892889                                           |80000000-00d2-b38f-4cda-000a0a412c00|T|false|VALUES true                                                                                                                     |2013-09-10 17:04:22.798      |80000000-00d2-b38f-4cda-000a0a412c00|NULL                                                                                                                            
921800c1-0141-0866-ce24-000018892889|TRIGGERWHEN_71b840bf-0141-0866-ce24-000018892889_ed8940a7-0141-0866-ce24-000018892889                                           |80000000-00d2-b38f-4cda-000a0a412c00|T|true |VALUES false                                                                                                                    |2013-09-10 17:04:23.816      |80000000-00d2-b38f-4cda-000a0a412c00|NULL                                                                                                                            

4 rows selected
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, it doesn&apos;t seem to be used at trigger execution time, and both triggers get executed even if only one of them has a WHEN clause that evaluates to TRUE:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; insert into t1 values 1;
1 row inserted/updated/deleted
ij&amp;gt; select * from t2;
X          
-----------
1          
2          

2 rows selected
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, the current code doesn&apos;t seem to like references to transition variables:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; create trigger tr3 after insert on t1 referencing new as new for each row when (new.x &amp;gt; 40) insert into t2 values 3;
ERROR 42X04: Column &apos;NEW.X&apos; is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE  statement then &apos;NEW.X&apos; is not a column in the target table. (errorCode = 30000)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13766420" author="knutanders" created="Fri, 13 Sep 2013 12:30:34 +0100"  >&lt;p&gt;Uploading a revised functional specification that adds more details about upgrade, privilege handling and dependency tracking.&lt;/p&gt;</comment>
                            <comment id="13768406" author="knutanders" created="Mon, 16 Sep 2013 16:25:59 +0100"  >&lt;p&gt;Attaching derby-534-01-a-syntax.diff, which is a first increment towards support for the WHEN clause.&lt;/p&gt;

&lt;p&gt;The patch adds the WHEN clause syntax to sqlgrammar.jj and wires it together with the existing machinery. The existing machinery contains logic for storing the WHEN clause in the system tables, and only some minor adjustments were needed to get that part working. It did not include any execution logic, so the patch had to add that.&lt;/p&gt;

&lt;p&gt;The most substantial changes are in GenericTriggerExecutor and its two subclasses: RowTriggerExecutor and StatementTriggerExecutor. This is where the WHEN clause and the trigger action are executed.&lt;/p&gt;

&lt;p&gt;The patch also adds some basic test cases for things that currently work.&lt;/p&gt;

&lt;p&gt;What doesn&apos;t work yet:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There&apos;s no dependency tracking&lt;/li&gt;
	&lt;li&gt;Upgrade logic is missing&lt;/li&gt;
	&lt;li&gt;WHEN clause cannot reference transition variables (cannot have a WHEN clause such as WHEN (NEW.X &amp;gt; 5))&lt;/li&gt;
	&lt;li&gt;Probably a lot more&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All the regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13769373" author="jira-bot" created="Tue, 17 Sep 2013 10:47:52 +0100"  >&lt;p&gt;Commit 1523965 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523965&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Add the WHEN clause syntax to the grammar and wire it together with the&lt;br/&gt;
existing partial code for the WHEN clause.&lt;/p&gt;

&lt;p&gt;Make RowTriggerExecutor and StatementTriggerExecutor execute the WHEN&lt;br/&gt;
clause and use the result to decide whether the trigger action should&lt;br/&gt;
be executed.&lt;/p&gt;

&lt;p&gt;Add some basic positive tests for the currently supported subset of the&lt;br/&gt;
functionality.&lt;/p&gt;</comment>
                            <comment id="13770742" author="knutanders" created="Wed, 18 Sep 2013 13:55:43 +0100"  >&lt;p&gt;Another thing that doesn&apos;t work yet, is recursive triggers with a WHEN clause. They seem to always run into an assert failure (or NPE in non-debug builds). I found a way to reproduce that problem without a WHEN clause too, so it doesn&apos;t appear to be specific to the WHEN clause implementation. It&apos;s probably going to be more likely to run into it with a WHEN clause, though.&lt;/p&gt;</comment>
                            <comment id="13771674" author="knutanders" created="Thu, 19 Sep 2013 08:50:05 +0100"  >&lt;p&gt;Attaching derby-534-02-a-refactor.diff which performs a small refactoring of the trigger execution logic. It moves some common logic from StatementTriggerExecutor and RowTriggerExecutor to GenericTriggerExecutor so that it is not duplicated.&lt;/p&gt;

&lt;p&gt;The refactoring also fixes two problems with the original logic:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the before and after result sets were left open if the WHEN clause of a statement trigger returned false&lt;/li&gt;
	&lt;li&gt;a row trigger that fired multiple times in a single statement would create a new PreparedStatement for the WHEN clause each time instead of reusing it&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All the regression tests ran cleanly.&lt;/p&gt;</comment>
                            <comment id="13771676" author="jira-bot" created="Thu, 19 Sep 2013 08:51:47 +0100"  >&lt;p&gt;Commit 1524645 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1524645&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1524645&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Move common logic for executing WHEN clause and trigger action to the&lt;br/&gt;
base class GenericTriggerExecutor. In addition to reducing code&lt;br/&gt;
duplication, the change makes row triggers reuse the prepared&lt;br/&gt;
statement for the WHEN clause (same as it already does for the trigger&lt;br/&gt;
action), and it makes statement triggers not leave the before and&lt;br/&gt;
after result sets open if the WHEN clause evaluates to false.&lt;/p&gt;</comment>
                            <comment id="13776130" author="knutanders" created="Tue, 24 Sep 2013 10:00:19 +0100"  >&lt;p&gt;I came across a problem with a NullPointerException being thrown when executing the triggered SQL statement. This happens for row triggers if the WHEN clause contains a subquery.&lt;/p&gt;

&lt;p&gt;derby-534-03-a-npe-testcase.diff adds a test case to TriggerWhenClauseTest that reproduces the NPE. The test case is disabled for now. I&apos;ll look into it later.&lt;/p&gt;</comment>
                            <comment id="13776133" author="jira-bot" created="Tue, 24 Sep 2013 10:00:54 +0100"  >&lt;p&gt;Commit 1525819 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1525819&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1525819&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Add a disabled test case for NPE with subquery in WHEN clause&lt;/p&gt;</comment>
                            <comment id="13778976" author="knutanders" created="Thu, 26 Sep 2013 18:07:23 +0100"  >&lt;p&gt;derby-534-04-a-referencing.diff makes it possible to create triggers whose WHEN clause references the transition tables and transition variables defined in the REFERENCING clause.&lt;/p&gt;

&lt;p&gt;Unfortunately, for this to work, the SYSTRIGGERS table needed an extra column to hold the text of the original WHEN clause, so some upgrade logic is needed. And since we haven&apos;t added columns to existing system tables before, some new mechanisms were needed.&lt;/p&gt;

&lt;p&gt;Additionally, that extra column had to be reflected in TriggerDescriptor, which is a Formatable, so some version handling was needed in its serialization logic. (Although I haven&apos;t found any scenario where it&apos;s stored in the database with one version and read with another version. I think it&apos;s only stored as part of a stored prepared statement, which will be discarded on version change anyway. So we might be able to get rid of that piece of logic later.)&lt;/p&gt;

&lt;p&gt;With a little bit of refactoring, I was able to reuse the existing processing of transition tables/variables in triggered SQL statements for WHEN clauses. This logic is driven from CreateTriggerNode.bindReferencesClause(), and it essentially replaces references to the transition tables/variables with internal SQL syntax for VTIs and Java method calls.&lt;/p&gt;

&lt;p&gt;Patch details:&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/iapi/services/io/StoredFormatIds.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor_v10_10.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a new field to TriggerDescriptor for the WHEN clause text, update Formatable logic, and provide a new class using the old Formatable logic for compatibility.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/iapi/sql/compile/Parser.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/impl/sql/compile/ParserImpl.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/impl/sql/compile/QueryTreeNode.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a method for parsing an SQL fragment that contains only a search condition. Used by CreateTriggerNode to re-parse the WHEN clause after references to transition tables or transition variables have been rewritten.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a method for parsing a stand-alone search condition to help implementing the new method added to the Parser interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Pass original WHEN clause text as argument to CreateTriggerNode (will eventually end up in the new column in SYSTRIGGERS).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Raise an exception if the WHEN clause is used in a soft-upgraded database.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/iapi/sql/dictionary/CatalogRowFactory.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/impl/sql/catalog/SYSTRIGGERSRowFactory.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add code for the new column in SYSTRIGGERS.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add logic to expose different shape depending on soft and full upgrade.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove unused code for fetching all trigger descriptors.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change code that creates or upgrades catalogues, so that it uses the new CatalogRowFactory method that exposes what shape the table should have in a fully upgraded database (otherwise, since the database is still in soft upgrade when the upgrade code is running, it would just upgrade the table to its old shape).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add code that drives upgrade of the SYSTRIGGERS table if needed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/iapi/sql/dictionary/DataDescriptorGenerator.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/impl/sql/execute/CreateTriggerConstantAction.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/engine/org/apache/derby/impl/sql/execute/GenericConstantActionFactory.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Pass the WHEN clause text through the layers. Mainly new parameters in existing methods.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Refactor code to perform the same transformations on the WHEN clause text as it currently performs on the triggered SQL statement text.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerWhenClauseTest.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add basic test cases for WHEN clauses that use transition tables and transition variables.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_11.java&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java&lt;/tt&gt;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that the WHEN clause cannot be used in a soft-upgraded database, and that it can be used in a fully upgraded database.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/dblook_test_net.out&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/dblook_test_net_territory.out&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/master/dblook_test.out&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/master/dblook_test_territory.out&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;java/testing/org/apache/derbyTesting/functionTests/tests/lang/SystemCatalogTest.java&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;Update tests to expect the extra column in SYSTRIGGERS.&lt;/p&gt;</comment>
                            <comment id="13779775" author="jira-bot" created="Fri, 27 Sep 2013 09:41:49 +0100"  >&lt;p&gt;Commit 1526831 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1526831&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1526831&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Allow references to transition variables and transition tables in the&lt;br/&gt;
WHEN clause. To support this, a new column WHENCLAUSETEXT is added to&lt;br/&gt;
the SYS.SYSTRIGGERS table, and a corresponding field is added to the&lt;br/&gt;
TriggerDescriptor class.&lt;/p&gt;

&lt;p&gt;The logic that transforms triggered SQL statements to internal syntax&lt;br/&gt;
for accessing the transition variables and transition tables (via Java&lt;br/&gt;
method calls and VTIs) is reused on the WHEN clause text so that the&lt;br/&gt;
same transformation happens there.&lt;/p&gt;

&lt;p&gt;Upgrade logic is added so that the new column in SYS.SYSTRIGGERS will&lt;br/&gt;
be created when a database is upgraded from an older version. The WHEN&lt;br/&gt;
clause is now disabled in the parser when running in soft upgrade&lt;br/&gt;
mode. An upgrade test case checks that the WHEN clause can only be&lt;br/&gt;
used in a hard-upgraded database, and that a reasonable error is&lt;br/&gt;
raised otherwise.&lt;/p&gt;</comment>
                            <comment id="13779778" author="knutanders" created="Fri, 27 Sep 2013 09:56:12 +0100"  >&lt;p&gt;Uploading a new revision of the functional specification. It now mentions the new column in the SYSTRIGGERS table, and also some more errors that should be handled: The WHEN clause of a before trigger should not reference generated columns in its NEW transition variable (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3948&quot; title=&quot;Don&amp;#39;t allow references to generated columns in the NEW transition variables of triggered actions of BEFORE triggers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3948&quot;&gt;&lt;del&gt;DERBY-3948&lt;/del&gt;&lt;/a&gt;). WHEN clauses should not reference tables in the SESSION schema.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;comment edited: clarified that the restriction on generated columns only applies to the NEW transition variable of BEFORE triggers&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13779984" author="knutanders" created="Fri, 27 Sep 2013 15:31:16 +0100"  >&lt;p&gt;derby-534-05-a-generated-cols.diff makes CreateTriggerNode raise an error if it finds that the WHEN clause of a BEFORE trigger contains a reference to a generated column in the NEW transition variable. It implements the check by reusing the code added in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3948&quot; title=&quot;Don&amp;#39;t allow references to generated columns in the NEW transition variables of triggered actions of BEFORE triggers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3948&quot;&gt;&lt;del&gt;DERBY-3948&lt;/del&gt;&lt;/a&gt;. The patch also adds tests.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly.&lt;/p&gt;</comment>
                            <comment id="13781684" author="jira-bot" created="Mon, 30 Sep 2013 10:00:53 +0100"  >&lt;p&gt;Commit 1527489 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1527489&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1527489&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Reject references to generated columns in the NEW transition variables&lt;br/&gt;
of BEFORE triggers, as required by the SQL standard. See also&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3948&quot; title=&quot;Don&amp;#39;t allow references to generated columns in the NEW transition variables of triggered actions of BEFORE triggers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3948&quot;&gt;&lt;del&gt;DERBY-3948&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13782756" author="knutanders" created="Tue, 1 Oct 2013 10:30:35 +0100"  >&lt;p&gt;Attaching derby-534-06-a-temptables.diff, which implements the restriction that a WHEN clause cannot reference tables in the SESSION schema.&lt;/p&gt;

&lt;p&gt;All regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13782757" author="jira-bot" created="Tue, 1 Oct 2013 10:31:28 +0100"  >&lt;p&gt;Commit 1527993 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1527993&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1527993&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Disallow references to tables in the SESSION schema in the WHEN clause.&lt;/p&gt;</comment>
                            <comment id="13782932" author="knutanders" created="Tue, 1 Oct 2013 14:32:09 +0100"  >&lt;p&gt;Attaching a new revision of the functional specification, which adds some more restrictions on what&apos;s allowed in a WHEN clause. These are restrictions that already exist for the WHERE clause or for the triggered SQL statement.&lt;/p&gt;

&lt;p&gt;The patch derby-534-07-a-more-restrictions.diff implements the restrictions by adding checks that verify that the WHEN clause does not contain dynamic parameters, and that its expression evaluates to a BOOLEAN.&lt;/p&gt;</comment>
                            <comment id="13783782" author="jira-bot" created="Wed, 2 Oct 2013 10:58:44 +0100"  >&lt;p&gt;Commit 1528401 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1528401&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1528401&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Forbid CREATE TRIGGER statements whose WHEN clause contains a&lt;br/&gt;
parameter marker or returns a non-BOOLEAN value.&lt;/p&gt;</comment>
                            <comment id="13786108" author="knutanders" created="Fri, 4 Oct 2013 13:35:09 +0100"  >&lt;p&gt;The attached patch, derby-534-08-a-test-invalidation.diff, adds a test case that verifies that the WHEN clause SPS is invalidated and recompiled if one of its dependencies requests a recompilation.&lt;/p&gt;</comment>
                            <comment id="13786109" author="jira-bot" created="Fri, 4 Oct 2013 13:35:51 +0100"  >&lt;p&gt;Commit 1529145 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1529145&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1529145&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Add a test case to verify that the WHEN clause SPS is invalidated and&lt;br/&gt;
recompiled if one of its dependencies requests a recompilation.&lt;/p&gt;</comment>
                            <comment id="13790360" author="knutanders" created="Wed, 9 Oct 2013 14:52:43 +0100"  >&lt;p&gt;derby-534-09-a-drop-column-deps.diff adds tests that verify dependencies are tracked so that dropping an object referenced in a WHEN clause won&apos;t silently succeed.&lt;/p&gt;

&lt;p&gt;For columns referenced in NEW/OLD transition variables and transition tables, the dependency tracking seemed to be working already.&lt;/p&gt;

&lt;p&gt;For other columns referenced in the WHEN clause (via sub-queries) the dependencies were not tracked. The patch fixes this by generalizing the existing AlterTableConstantNode.columnDroppedAndTriggerDependencies() that detects these dependencies in the triggered SQL statement, and applying that method on the WHEN clause too.&lt;/p&gt;

&lt;p&gt;Dependencies are not tracked for other objects than columns. This is because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;, which also affects triggers without a WHEN clause.&lt;/p&gt;

&lt;p&gt;I&apos;m running regression tests on the patch now.&lt;/p&gt;</comment>
                            <comment id="13791342" author="knutanders" created="Thu, 10 Oct 2013 10:11:58 +0100"  >&lt;p&gt;There was a failure in the upgrade tests with the patch, in the test case Changes10_7.testAlterTableDropColumnAndTriggerAction. The reason was that the patch factored out the call that retrieved the trigger action SPS from columnDroppedAndTriggerDependencies(), but in databases soft-upgraded from 10.6 and earlier the call had to be inside the try/catch block in columnDroppedAndTriggerDependencies() to work around missing dependency tracking in those versions. Since it was no longer inside the try/catch block, an expected error came out with the wrong SQLState because it hadn&apos;t been caught and replaced with an exception with the correct SQLState.&lt;/p&gt;

&lt;p&gt;The derby-534-09-b-drop-column-deps.diff patch changes this back so that getActionSPS() is called at the same place as before. Instead of passing the SPS as an argument to the columnDroppedAndTriggerDependencies() method, the method now needs to check how it&apos;s called and determine whether it should call getActionSPS() or getWhenClauseSPS().&lt;/p&gt;

&lt;p&gt;All regression tests passed with the revised patch.&lt;/p&gt;</comment>
                            <comment id="13791345" author="jira-bot" created="Thu, 10 Oct 2013 10:14:22 +0100"  >&lt;p&gt;Commit 1530887 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1530887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1530887&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Reuse code for dependency checking of the triggered SQL statement for&lt;br/&gt;
checking dependencies in the WHEN clause.&lt;/p&gt;

&lt;p&gt;Add test to verify that attempts to drop columns referenced in the WHEN&lt;br/&gt;
clause detect that the trigger is dependent on the columns.&lt;/p&gt;</comment>
                            <comment id="13791592" author="knutanders" created="Thu, 10 Oct 2013 16:31:25 +0100"  >&lt;p&gt;The old, incomplete code for the WHEN clause, which predated this issue, has diverged from the rest of the trigger implementation over time. In particular, I noticed that TriggerDescriptor.getActionSPS() contained fixes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4874&quot; title=&quot;Trigger does not recognize new size of VARCHAR column  expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was encountered trying to shrink VARCHAR &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4874&quot;&gt;&lt;del&gt;DERBY-4874&lt;/del&gt;&lt;/a&gt; and an old bug from the Cloudscape bug tracker (4821), but none of those fixes were in TriggerDescriptor.getWhenClauseSPS().&lt;/p&gt;

&lt;p&gt;The attached patch, derby-534-10-a-get-sps.diff, moves most of the code out of getActionSPS() and into a helper method called getSPS(). Both getActionSPS() and getWhenClauseSPS() now call that helper method, so that they behave similarly and the two aforementioned bugs are also fixed for the WHEN clause.&lt;/p&gt;

&lt;p&gt;The patch adds two test cases to TriggerWhenClauseTest:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testDerby4874() reproduces symptoms similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4874&quot; title=&quot;Trigger does not recognize new size of VARCHAR column  expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was encountered trying to shrink VARCHAR &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4874&quot;&gt;&lt;del&gt;DERBY-4874&lt;/del&gt;&lt;/a&gt; by changing the data type of a column referenced from a WHEN clause. The test case fails with a truncation error without the fix.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testCloudscapeBug4821() shows a problem with system table locks being held in the parent transaction after recompilation of a WHEN clause that had been invalidated. The test case fails with a lock timeout without the fix.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All the regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13792458" author="jira-bot" created="Fri, 11 Oct 2013 09:29:15 +0100"  >&lt;p&gt;Commit 1531226 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1531226&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1531226&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Make the code in TriggerDescriptor.getActionSPS() reusable for&lt;br/&gt;
TriggerDescriptor.getWhenClauseSPS() so that the fixes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4874&quot; title=&quot;Trigger does not recognize new size of VARCHAR column  expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was encountered trying to shrink VARCHAR &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4874&quot;&gt;&lt;del&gt;DERBY-4874&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
and Cloudscape bug 4821 also get applied to the WHEN clause.&lt;/p&gt;</comment>
                            <comment id="13792578" author="knutanders" created="Fri, 11 Oct 2013 13:57:41 +0100"  >&lt;p&gt;The attached patch, derby-534-11-a-more-tests.diff, adds tests that verify that the WHEN clause operates with the privileges of the user that created the trigger, and that exceptions thrown in the WHEN clause are handled gracefully. No problems were found by these tests.&lt;/p&gt;</comment>
                            <comment id="13792579" author="jira-bot" created="Fri, 11 Oct 2013 13:58:23 +0100"  >&lt;p&gt;Commit 1531279 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1531279&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1531279&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Add tests to verify that the when clause operates with the privileges&lt;br/&gt;
of the user that created the trigger, and that exceptions thrown in&lt;br/&gt;
the WHEN clause are handled gracefully.&lt;/p&gt;</comment>
                            <comment id="13795201" author="knutanders" created="Tue, 15 Oct 2013 15:05:11 +0100"  >&lt;p&gt;Attaching derby-534-12-a-subquery-npe.diff which fixes the NPE exposed by the 03 patch.&lt;/p&gt;

&lt;p&gt;The NPE happened in GenericStatementContext.setTopResultSet() while copying materialized subqueries over to the new subquery tracking array in a for loop. As far as I can tell, the intention of the for loop is to copy every non-null element in the materializedSubqueries array to the new subquery tracking array. However, instead of checking that the element in materializedSubqueries is non-null, it checks that the element at the given index position on the old subquery tracking array is non-null. The NPE is thrown because the old subquery tracking array is null.&lt;/p&gt;

&lt;p&gt;This is old code, so it may be possible to construct a test case that makes it fail even without a WHEN clause. I haven&apos;t been able to do that so far, though. According to the test coverage reports, the line that fails with an NPE is only partially covered: &lt;a href=&quot;https://builds.apache.org/job/Derby-JaCoCo/lastSuccessfulBuild/artifact/coverage-report/org.apache.derby.impl.sql.conn/GenericStatementContext.java.html#L356&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Derby-JaCoCo/lastSuccessfulBuild/artifact/coverage-report/org.apache.derby.impl.sql.conn/GenericStatementContext.java.html#L356&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The patch enables the previously disabled test case added by the 03 patch. It also adds some more test cases with scalar subqueries in the WHEN clause.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13796506" author="jira-bot" created="Wed, 16 Oct 2013 08:36:12 +0100"  >&lt;p&gt;Commit 1532666 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1532666&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1532666&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Fix incorrect null check when merging subqueryTrackingArray and&lt;br/&gt;
materializedSubqueries in GenericStatementContext.setTopResultSet().&lt;br/&gt;
Used to cause NullPointerException in some cases when a WHEN clause&lt;br/&gt;
contained a subquery.&lt;/p&gt;

&lt;p&gt;Add more tests for scalar subqueries in WHEN clauses.&lt;/p&gt;</comment>
                            <comment id="13801794" author="knutanders" created="Tue, 22 Oct 2013 14:18:20 +0100"  >&lt;p&gt;Attaching derby-534-13-a-dblook.diff which makes dblook show the WHEN clause for triggers that have one.&lt;/p&gt;

&lt;p&gt;It changes DB_Trigger.doTriggers() so that it looks for the WHENCLAUSETEXT column when it scans SYS.SYSTRIGGERS.&lt;/p&gt;

&lt;p&gt;Since the WHENCLAUSETEXT column is not present in soft-upgraded databases, dblook should not look for that column unless the data dictionary has been upgraded to 10.11. Instead of executing different queries against SYS.SYSTRIGGERS depending on whether or not the WHENCLAUSETEXT column is present, I changed the SELECT query to always fetch all column from SYS.SYSTRIGGERS (using &lt;tt&gt;SELECT *&lt;/tt&gt;). I also changed the calls to ResultSet getter methods so that they referenced the columns by name instead of index, which makes it easier to understand them if you don&apos;t remember the order of the columns in the SYS.SYSTRIGGERS table.&lt;/p&gt;

&lt;p&gt;For formatting of the WHEN clause I reused the logic that formats the triggered SQL statement. This means the WHEN clause inherits any bugs in that code, such as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6384&quot; title=&quot;dblook garbles string literals in views, triggers and check constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6384&quot;&gt;DERBY-6384&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The patch adds triggers with WHEN clauses to dblook_test and updates the test canons accordingly.&lt;/p&gt;

&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13802808" author="jira-bot" created="Wed, 23 Oct 2013 12:28:26 +0100"  >&lt;p&gt;Commit 1534988 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1534988&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1534988&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Add dblook support for triggers with a WHEN clause.&lt;/p&gt;</comment>
                            <comment id="13802823" author="knutanders" created="Wed, 23 Oct 2013 12:43:12 +0100"  >&lt;p&gt;The patch with dblook support has been committed, and that was the last piece of missing functionality, so I think the work on this issue is more or less done. I&apos;m still looking into whether the upgrade logic added to the TriggerDescriptor class is really necessary (I&apos;m currently leaning towards that it&apos;s not needed, and will probably post a patch that removes it). There are also some known bugs that are tracked in separate JIRA issues, but none of them are specific to the WHEN clause (that is, they can also be reproduced without a WHEN clause).&lt;/p&gt;

&lt;p&gt;I&apos;m attaching an updated functional specification where some more information has been added to the SQL Standard and Documentation sections.&lt;/p&gt;

&lt;p&gt;I&apos;ve logged &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6390&quot; title=&quot;Document the WHEN clause in the CREATE TRIGGER statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6390&quot;&gt;&lt;del&gt;DERBY-6390&lt;/del&gt;&lt;/a&gt; for documentation.&lt;/p&gt;</comment>
                            <comment id="13804112" author="knutanders" created="Thu, 24 Oct 2013 13:12:59 +0100"  >&lt;p&gt;I&apos;ve convinced myself that TriggerDescriptor instances are only written to disk as part of TriggerInfo instances in stored prepared statements. Since Derby always clears all SPSs on version change, one version of Derby will never try to read an instance written by another version of Derby. (TriggerInfo even has a comment that says &quot;since this is something that is used in stored prepared statements, it is ok to change it if you make sure that stored prepared statements are invalidated across releases.&quot;)&lt;/p&gt;

&lt;p&gt;derby-534-14-a-remove-formatable-upgrade.diff removes the code that makes TriggerInfo and TriggerDescriptor instances compatible across versions.&lt;/p&gt;

&lt;p&gt;Note that the patch only changes the upgrade logic for trigger descriptors written using the Formatable interface. The logic that adds a column to the SYS.SYSTRIGGERS table on upgrade is not touched by the patch.&lt;/p&gt;

&lt;p&gt;All regression tests, including all upgrade tests, ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13805158" author="jira-bot" created="Fri, 25 Oct 2013 09:22:26 +0100"  >&lt;p&gt;Commit 1535654 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1535654&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1535654&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Remove logic in the readExternal() and writeExternal() methods of&lt;br/&gt;
TriggerInfo and TriggerDescriptor that was originally put there for&lt;br/&gt;
compatibility between different Derby versions. Since these objects&lt;br/&gt;
are only persisted as part of a stored prepared statement, and Derby&lt;br/&gt;
always clears all stored prepared statements on version change, there&lt;br/&gt;
is no requirement that TriggerInfo and TriggerDescriptor instances&lt;br/&gt;
written by one Derby version must be possible to read by other Derby&lt;br/&gt;
versions.&lt;/p&gt;</comment>
                            <comment id="13817656" author="rhillegas" created="Fri, 8 Nov 2013 20:32:18 +0000"  >&lt;p&gt;I have written some tests of the WHEN clause and it seems to behave as specified. I have verified that the WHEN clause can not be used if you soft-upgrade to 10.11. Additional tests are indicated in the script attached at the end of this comment.&lt;/p&gt;

&lt;p&gt;The WHEN clause widens the weird behavior of the DROP FUNCTION command. That behavior is neither CASCADE nor RESTRICT. Functions can be mentioned in a triggered action. If you drop the function, you&apos;ll get a confusing error the next time you execute a statement which fires the trigger. The message complains about a missing function. Now this weird error message can arise because functions can be mentioned in WHEN clauses too. I think it&apos;s fine that the weird behavior is consistent regardless of where the function is mentioned in the trigger definition. The real pity is that DROP FUNCTION is neither CASCADE nor RESTRICT.&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;/p&gt;

&lt;p&gt;create table t1( a int, b generated always as ( -a ) );&lt;br/&gt;
create table t2( a int );&lt;/p&gt;

&lt;p&gt;create procedure dumpStack()&lt;br/&gt;
language java parameter style java no sql&lt;br/&gt;
external name &apos;java.lang.Thread.dumpStack&apos;;&lt;/p&gt;

&lt;p&gt;create function squareRoot( val double ) returns double&lt;br/&gt;
language java parameter style java no sql&lt;br/&gt;
external name &apos;java.lang.Math.sqrt&apos;;&lt;/p&gt;

&lt;p&gt;create derby aggregate mode_05 for int&lt;br/&gt;
external name &apos;org.apache.derbyTesting.functionTests.tests.lang.ModeAggregate&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; fails as expected because statement triggers can&apos;t reference columns&lt;br/&gt;
create trigger t1_trig&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
when ( squareRoot( new.a ) &amp;lt; 3 )&lt;br/&gt;
insert into t2( a ) values ( 0 );&lt;/p&gt;

&lt;p&gt;&amp;#8211; fails because aggregates not allowed in WHEN clauses&lt;br/&gt;
create trigger t1_trig&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( max( new.a ) between 0 and 3 )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;br/&gt;
create trigger t1_trig&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( mode_05( new.a ) between 0 and 3 )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;/p&gt;

&lt;p&gt;&amp;#8211; fails because of reference to generated column&lt;br/&gt;
create trigger t1_trig&lt;br/&gt;
no cascade before insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( new.a &amp;gt; new.b )&lt;br/&gt;
call dumpStack();&lt;/p&gt;

&lt;p&gt;create trigger t1_trig100&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( new.a in ( values ( 1 ), ( 10 ) ) )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;/p&gt;

&lt;p&gt;create trigger t1_trig101&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( new.a in ( select a from t2 ) )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;/p&gt;

&lt;p&gt;create trigger t1_trig102&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( new.a in ( select a from t1 ) )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;/p&gt;

&lt;p&gt;create trigger t1_trig104&lt;br/&gt;
no cascade before update on t1&lt;br/&gt;
referencing old as old new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( new.a in ( select a from t1 where a = new.a ) )&lt;br/&gt;
call dumpStack();&lt;/p&gt;

&lt;p&gt;create trigger t1_square_root&lt;br/&gt;
after insert on t1&lt;br/&gt;
referencing new as new&lt;br/&gt;
for each row&lt;br/&gt;
when ( squareRoot( new.a ) between 0 and 3 )&lt;br/&gt;
insert into t2( a ) values ( new.a );&lt;/p&gt;

&lt;p&gt;insert into t1( a ) values ( 1 ), ( 10 );&lt;/p&gt;

&lt;p&gt;select * from t1;&lt;br/&gt;
select * from t2;&lt;/p&gt;

&lt;p&gt;&amp;#8211; dumps one stack trace as expected&lt;br/&gt;
update t1 set a = 10 * a;&lt;/p&gt;

&lt;p&gt;select triggername from sys.systriggers trig, sys.systables tab&lt;br/&gt;
where tab.tablename = &apos;T1&apos; and tab.tableid = trig.tableid;&lt;/p&gt;

&lt;p&gt;drop function squareRoot;&lt;/p&gt;

&lt;p&gt;select triggername from sys.systriggers trig, sys.systables tab&lt;br/&gt;
where tab.tablename = &apos;T1&apos; and tab.tableid = trig.tableid;&lt;/p&gt;

&lt;p&gt;insert into t1( a ) values ( 2 );&lt;/p&gt;</comment>
                            <comment id="13818823" author="knutanders" created="Mon, 11 Nov 2013 10:13:29 +0000"  >&lt;p&gt;Thanks for testing the new syntax, Rick.&lt;/p&gt;

&lt;p&gt;I think the weird behaviour you&apos;re seeing with DROP FUNCTION also affects other DROP statements. For example, a similar problem with DROP TABLE is recorded in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;. Hopefully, a fix for that issue will also handle the DROP FUNCTION case. It should be fixed, but since it is a general trigger problem, I don&apos;t intend to fix it as part of this JIRA issue.&lt;/p&gt;

&lt;p&gt;Note also that the weird behaviour is actually documented behaviour up to version 10.10. &lt;a href=&quot;http://db.apache.org/derby/docs/10.10/ref/rrefsqlj43125.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CREATE TRIGGER statement&lt;/a&gt; says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The triggered-SQL-statement can reference database objects other than the table upon which the trigger is declared. If any of these database objects is dropped, the trigger is invalidated. If the trigger cannot be successfully recompiled upon the next execution, the invocation throws an exception and the statement that caused it to fire will be rolled back.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6390&quot; title=&quot;Document the WHEN clause in the CREATE TRIGGER statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6390&quot;&gt;&lt;del&gt;DERBY-6390&lt;/del&gt;&lt;/a&gt; removed that paragraph from the docs on trunk so that application writers aren&apos;t led to believe that the buggy behaviour is the correct one. (It was also removed because it&apos;s not always true. For example, DROP COLUMN CASCADE does cause dependent triggers to be dropped. DROP COLUMN&apos;s handling of dependencies is a hack, though. It rebinds the trigger actions of the triggers it believe might be dependent, and cascades if the rebinding fails with one of four specific SQLStates. I hope &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt; will be fixed by making use of the dependency system in a more direct way, similar to what we do for VIEWs.)&lt;/p&gt;</comment>
                            <comment id="13818905" author="knutanders" created="Mon, 11 Nov 2013 12:13:20 +0000"  >&lt;p&gt;Attaching derby-534-15-a-more-tests.diff which adds more tests:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that the SQL text in a WHEN clause can be longer than the maximum length of a LONG VARCHAR&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that a function declared as READ SQL DATA can be invoked from a WHEN clause&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that it is not possible to create a function that is declared as MODIFIES SQL DATA (If it had been possible, the SQL standard says it should not be possible to invoke that function from a WHEN clause. This test case serves as a reminder to add that restriction if we ever add support for functions that modify SQL data.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that it is not possible to call procedures from a WHEN clause&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Test that aggregates (both built-in and user-defined) can be used in a WHEN clause&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13818907" author="jira-bot" created="Mon, 11 Nov 2013 12:14:48 +0000"  >&lt;p&gt;Commit 1540690 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1540690&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1540690&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;: Support use of the WHEN clause in CREATE TRIGGER statements&lt;/p&gt;

&lt;p&gt;Add more tests.&lt;/p&gt;</comment>
                            <comment id="13826430" author="knutanders" created="Tue, 19 Nov 2013 12:27:47 +0000"  >&lt;p&gt;No more work is planned as part of this issue, so I&apos;m marking it as resolved. If problems are found, please file separate JIRA issues to track them.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12675230">DERBY-6390</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12761462">DERBY-6783</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12671351">DERBY-6357</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12354729">DERBY-2041</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12669236">DERBY-6348</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12609844" name="WhenClause.html" size="9195" author="knutanders" created="Wed, 23 Oct 2013 12:43:12 +0100"/>
                            <attachment id="12606100" name="WhenClause.html" size="8581" author="knutanders" created="Tue, 1 Oct 2013 14:32:09 +0100"/>
                            <attachment id="12605418" name="WhenClause.html" size="7179" author="knutanders" created="Fri, 27 Sep 2013 09:56:12 +0100"/>
                            <attachment id="12603000" name="WhenClause.html" size="6296" author="knutanders" created="Fri, 13 Sep 2013 12:30:34 +0100"/>
                            <attachment id="12602340" name="WhenClause.html" size="4489" author="knutanders" created="Tue, 10 Sep 2013 15:16:55 +0100"/>
                            <attachment id="12603351" name="derby-534-01-a-syntax.diff" size="20918" author="knutanders" created="Mon, 16 Sep 2013 16:25:59 +0100"/>
                            <attachment id="12604004" name="derby-534-02-a-refactor.diff" size="5624" author="knutanders" created="Thu, 19 Sep 2013 08:50:05 +0100"/>
                            <attachment id="12604762" name="derby-534-03-a-npe-testcase.diff" size="2166" author="knutanders" created="Tue, 24 Sep 2013 10:00:19 +0100"/>
                            <attachment id="12605281" name="derby-534-04-a-referencing.diff" size="72842" author="knutanders" created="Thu, 26 Sep 2013 18:07:23 +0100"/>
                            <attachment id="12605458" name="derby-534-05-a-generated-cols.diff" size="8379" author="knutanders" created="Fri, 27 Sep 2013 15:31:16 +0100"/>
                            <attachment id="12606068" name="derby-534-06-a-temptables.diff" size="3411" author="knutanders" created="Tue, 1 Oct 2013 10:30:35 +0100"/>
                            <attachment id="12606099" name="derby-534-07-a-more-restrictions.diff" size="14455" author="knutanders" created="Tue, 1 Oct 2013 14:32:09 +0100"/>
                            <attachment id="12606777" name="derby-534-08-a-test-invalidation.diff" size="2986" author="knutanders" created="Fri, 4 Oct 2013 13:35:09 +0100"/>
                            <attachment id="12607560" name="derby-534-09-a-drop-column-deps.diff" size="16169" author="knutanders" created="Wed, 9 Oct 2013 14:52:43 +0100"/>
                            <attachment id="12607774" name="derby-534-09-b-drop-column-deps.diff" size="16260" author="knutanders" created="Thu, 10 Oct 2013 10:11:58 +0100"/>
                            <attachment id="12607824" name="derby-534-10-a-get-sps.diff" size="10978" author="knutanders" created="Thu, 10 Oct 2013 16:31:25 +0100"/>
                            <attachment id="12607997" name="derby-534-11-a-more-tests.diff" size="9065" author="knutanders" created="Fri, 11 Oct 2013 13:57:41 +0100"/>
                            <attachment id="12608497" name="derby-534-12-a-subquery-npe.diff" size="5525" author="knutanders" created="Tue, 15 Oct 2013 15:05:11 +0100"/>
                            <attachment id="12609649" name="derby-534-13-a-dblook.diff" size="26193" author="knutanders" created="Tue, 22 Oct 2013 14:18:20 +0100"/>
                            <attachment id="12610081" name="derby-534-14-a-remove-formatable-upgrade.diff" size="11839" author="knutanders" created="Thu, 24 Oct 2013 13:12:59 +0100"/>
                            <attachment id="12613142" name="derby-534-15-a-more-tests.diff" size="8541" author="knutanders" created="Mon, 11 Nov 2013 12:13:20 +0000"/>
                            <attachment id="12602349" name="parser.diff" size="3418" author="knutanders" created="Tue, 10 Sep 2013 16:14:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Feb 2012 06:36:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29597</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0e7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36120</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>