<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4757/DERBY-4757.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4757] (Client) Implement UTF8 support on DRDA</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4757</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This issue is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt;&apos;s counterpart for the client changes required to implement UTF8 support in DRDA.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12470520">DERBY-4757</key>
            <summary>(Client) Implement UTF8 support on DRDA</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12326016">DERBY-728</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Jul 2010 15:33:19 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:17 +0100</updated>
                            <resolved>Tue, 5 Oct 2010 10:35:05 +0100</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12894314" author="espinha" created="Sat, 31 Jul 2010 22:25:30 +0100"  >&lt;p&gt;I&apos;m attaching a patch that lays the foundation for the UTF-8 support in the client. The patch may seem massive but all the changes are actually related. Here&apos;s an overview of what it does:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changes the method names for the CcsidManager abstract class so that they are clearer in terms of what they do (convertToJavaString, convertFromJavaString) similar to what&apos;s been done for the server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Still on the CcsidManager changes, the patch refactors the code so that the new method names are used. It also introduces a new name to the CcsidManager that returns, for the given CcsidManager, the length of a String in bytes (which differs for the different managers).&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Creates the Utf8CcsidManager.java for the client and the respective Utf8CcsidManagerClientTest.java. I wasn&apos;t sure what to name this test since there is already a test for the server, so I decided to include &quot;Client&quot; in its name. If there is a preferred alternative, I can change it. I have also hooked this test into the suite.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changes NetAgent.java so that it no longer has a source and target CCSID managers. Also, similarly to the server, it now has an instance of each type of CCSID (EBCDIC and UTF-8) and a current CCSID which is the one currently in use.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In NetAgent.java, I&apos;ve also set the CCSID managers to private and created a getter for the current manager to enforce encapsulation.&lt;/p&gt;

&lt;p&gt;In sum, this patch does not yet enable UTF-8 support but puts everything in place so that the switch mechanism can be implemented.&lt;/p&gt;

&lt;p&gt;I will now be running regressions.&lt;/p&gt;</comment>
                            <comment id="12894352" author="espinha" created="Sun, 1 Aug 2010 09:41:52 +0100"  >&lt;p&gt;The regressions have passed without any failures. However, please don&apos;t commit yet until we work out whether yesterday&apos;s regression failures have anything to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12894430" author="espinha" created="Sun, 1 Aug 2010 23:40:03 +0100"  >&lt;p&gt;The regressions failure was a false alarm. The latest regressions have ran without any failures. Marking as patch available for review.&lt;/p&gt;</comment>
                            <comment id="12895895" author="bryanpendleton" created="Fri, 6 Aug 2010 01:40:59 +0100"  >&lt;p&gt;I read through the patch and don&apos;t have any improvements to suggest.&lt;/p&gt;

&lt;p&gt;The patch builds cleanly in my environment and the tests run successfully.&lt;/p&gt;

&lt;p&gt;Tiago, do you have any additional work planned for this patch?&lt;/p&gt;

&lt;p&gt;I am intending to commit this patch, please let me know if there&apos;s any reason I should hold off.&lt;/p&gt;</comment>
                            <comment id="12895927" author="bryanpendleton" created="Fri, 6 Aug 2010 03:39:11 +0100"  >&lt;p&gt;Committed to the trunk as revision 982852. Thanks for the contribution!&lt;/p&gt;</comment>
                            <comment id="12896088" author="espinha" created="Fri, 6 Aug 2010 18:20:22 +0100"  >&lt;p&gt;Thanks for committing Bryan!&lt;/p&gt;

&lt;p&gt;This patch was indeed meant to be commited. I will be doing more work on this issue but I will be submitting additional patches for this.&lt;/p&gt;</comment>
                            <comment id="12898986" author="espinha" created="Mon, 16 Aug 2010 17:51:50 +0100"  >&lt;p&gt;I&apos;m submitting this patch with my latest changes for the UTF8 support on the client. This patch is marked as DO NOT COMMIT as it has debug code and it has serious bugs that still need to be fixed. I&apos;m submitting it so that I can wrap up my participation in GSoC 2010 which has its end today.&lt;/p&gt;

&lt;p&gt;I will still continue to contribute to Derby and I expect to iron out these issues during the course of this week.&lt;/p&gt;</comment>
                            <comment id="12899769" author="espinha" created="Wed, 18 Aug 2010 08:55:41 +0100"  >&lt;p&gt;This is another auxiliary patch to lay the foundation for the UTF-8 support. It removes all the CcsidManager instances scattered all over the code and ensures that all the classes use the NetAgent.getCurrentCcsidManager() instead. Having several instances of it in different classes meant we would have to update each and every one of them each time we&apos;d switch between the two managers and that wouldn&apos;t be a very good solution in the end.&lt;/p&gt;

&lt;p&gt;This way there&apos;s only one instance for each type of CCSID manager and there&apos;s a reference for the current CCSID manager being used, which essentially points to one of the two instances.&lt;/p&gt;

&lt;p&gt;This is just half of the changes I already have in place and as soon as this is committed I will submit the next patch. For now I will be running regressions on this patch alone and I will post the results here.&lt;/p&gt;</comment>
                            <comment id="12899856" author="espinha" created="Wed, 18 Aug 2010 15:24:30 +0100"  >&lt;p&gt;I can confirm the regressions ran without failures for the latest patch. I&apos;m marking as patch available, for review and commit.&lt;/p&gt;</comment>
                            <comment id="12901197" author="espinha" created="Sun, 22 Aug 2010 19:09:23 +0100"  >&lt;p&gt;We&apos;ve hit a few regressions on Daily 987777. I&apos;m not sure whether these are related to my changes but I will keep an eye out to see if we hit them again on tomorrow&apos;s run.&lt;/p&gt;

&lt;p&gt;They seem to be VM/OS specific for the most part so it could be just intermittent occurrences.&lt;/p&gt;</comment>
                            <comment id="12901510" author="espinha" created="Mon, 23 Aug 2010 18:58:50 +0100"  >&lt;p&gt;It seems like the regressions weren&apos;t related, unmarking as patch available. Thanks for committing Kathey!&lt;/p&gt;</comment>
                            <comment id="12905269" author="espinha" created="Wed, 1 Sep 2010 23:25:15 +0100"  >&lt;p&gt;I&apos;m uploading what would be the final patch for this issue. Here&apos;s a quick overview of what it does:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds methods to NetAgent that allow for a switch between the current CCSID manager being used.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Defines the codepoint for UNICODEMGR as per the ACR.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Defines a target level for the UnicodeMgr. This is the target that ideally we want to achieve (1208) but might have to fall back to 0 in case the server does not support it (old servers).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds a method to NetConnection that returns true or false depending on whether the server supports the UnicodeMgr at level 1208.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Writes the UNICODEMGR codepoint and reads it back from the server for the MGRLVLS negotiation.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch also enables the InternationalConnectTest to run on client/server mode as opposed to before, where it ran only on embedded mode and expected an exception in case it was running on client/server.&lt;/p&gt;

&lt;p&gt;It needs to be mentioned that at this point, if the client falls back to level 0 on the UNICODEMGR (this happens if the server does not support UTF-8, i.e. any Derby versions lower than 10.7) then we will not send the RDBNAM at the ACCSEC. This will cause the server to throw a SYNTAXRM since it expected the RDBNAM and the client will, by consequence, also throw a SYNTAXRM. This crash is supposed to happen as the older servers just don&apos;t support UTF-8 characters. What is left for improvement is the exception thrown by the client, which can be a little more explicit and explain what is happening. After discussing this issue with Kathey on IRC however, we agreed that we could go ahead as it is to ensure this makes it to the 10.7 release and then at a later stage we can improve the exception.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running regressions tonight. Please review my patch and if there are no objections I&apos;d like to go ahead and commit this soon.&lt;/p&gt;</comment>
                            <comment id="12905375" author="bryanpendleton" created="Thu, 2 Sep 2010 03:06:04 +0100"  >&lt;p&gt;The change looks clean to me, thanks very much for the detailed description!&lt;/p&gt;

&lt;p&gt;The only part of the patch that I didn&apos;t understand was this:&lt;/p&gt;


&lt;p&gt;@@ -355,7 +359,7 @@&lt;br/&gt;
         // support.  the size will have ben previously checked so at this point just&lt;br/&gt;
         // write the data and pad with the correct number of bytes as needed.&lt;br/&gt;
         // this instance variable is always required.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;buildRDBNAM(rdbnam,false);&lt;br/&gt;
+        buildRDBNAM(rdbnam,true);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         // the rdb access manager class specifies an instance of the SQLAM&lt;br/&gt;
         // that accesses the RDB.  the sqlam manager class codepoint&lt;/p&gt;

&lt;p&gt;Can you clarify the purpose of this change?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12905444" author="espinha" created="Thu, 2 Sep 2010 09:07:20 +0100"  >&lt;p&gt;I can. Maybe I should have put another comment there.&lt;/p&gt;

&lt;p&gt;That change isn&apos;t actually necessary per se, the only thing is, by setting that argument to true, in case the client can&apos;t convert the string using the current CCSID manager, then it won&apos;t try to send it to the server. What the code inside that function does is, it tries to convert the string and if we get an exception, then we catch it and add it to the NetAgent. At a later point we can choose to do something wise with that exception.&lt;/p&gt;

&lt;p&gt;If the argument is set to false, it will effectively try to send the RDBNAM to the server and it will still throw an exception but we don&apos;t catch it. We just let it break as the client will still not be able to encode the string.&lt;/p&gt;

&lt;p&gt;So this is more of just making sure that we don&apos;t even try to send an RDBNAM at ACCSEC if we can&apos;t convert it. This is fine for newer clients, as they don&apos;t expect RDBNAM at ACCSEC to be required and older clients will break, but then again, if we can&apos;t send RDBNAM at ACCSEC to an older client, it means it has UTF-8 characters and then it is supposed to break. If the RDBNAM does not have UTF-8 characters, then the encoding process will go fine and old and new clients will work perfectly.&lt;/p&gt;</comment>
                            <comment id="12905452" author="espinha" created="Thu, 2 Sep 2010 09:45:07 +0100"  >&lt;p&gt;I&apos;ve hit a few regressions so this patch isn&apos;t ready to commit. One of the failing fixtures is actually testGreekCharacters which expected a failure to connect and now it accepts these characters.&lt;/p&gt;</comment>
                            <comment id="12905515" author="bryanpendleton" created="Thu, 2 Sep 2010 15:18:16 +0100"  >&lt;p&gt;&amp;gt; making sure that we don&apos;t even try to send an RDBNAM at ACCSEC if we can&apos;t convert it.&lt;/p&gt;

&lt;p&gt;Thanks for the clear and precise explanation. Your technique seems appropriate to me.&lt;/p&gt;

&lt;p&gt;Regarding whether extra comments are needed in the code: I have found it sufficient in&lt;br/&gt;
the past, when studying a change to the code, to be able to trace the change back to a&lt;br/&gt;
Jira entry and then read the comments in the Jira in detail. So, in this case, i would say&lt;br/&gt;
that your explanation in the Jira entry is very helpful and clear, and I don&apos;t think that any&lt;br/&gt;
additional change to the patch is necessary.&lt;/p&gt;</comment>
                            <comment id="12907807" author="espinha" created="Thu, 9 Sep 2010 23:37:28 +0100"  >&lt;p&gt;Thank you for your comments Bryan.&lt;/p&gt;

&lt;p&gt;With the latest patch I&apos;ve fixed both the regressions I was hitting. One of them had to do with the jdbcapi/AuthenticationTest.java where we expected the connection to fail whenever Greek characters were used. Obviously, we do now support Greek characters and as such the test should pass.&lt;/p&gt;

&lt;p&gt;The second regression was with something I overlooked. I forgot to reset the CCSID manager back to EBCDIC for new sessions, which meant that if a client was to negotiate UTF-8, all the subsequent connections would be using UTF-8. This would fail as all connections must start as EBCDIC for the initial negotiation.&lt;/p&gt;

&lt;p&gt;Logically, this two-line fix should be part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt; that deals with the server but seeing as these two issues go hand in hand, I think sneaking in this fix here should be fine. The server implementation in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt; stands for itself, but when the client kicks in, we need this additional fix.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running regressions and if there are no failures and no one objects, I&apos;d like to go ahead and check this in so that we can have it on time for a 10.7 release.&lt;/p&gt;</comment>
                            <comment id="12907863" author="bryanpendleton" created="Fri, 10 Sep 2010 03:01:26 +0100"  >&lt;p&gt;I read through your changes and they look good to me.&lt;/p&gt;

&lt;p&gt;+1 to commit the _v3 patch, once you&apos;re comfortable with your test results.&lt;/p&gt;

&lt;p&gt;If you&apos;d prefer to submit the DRDAConnThread.java change separately,&lt;br/&gt;
and indicate in the subversion log description that it is part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4746&quot; title=&quot;(Server) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4746&quot;&gt;&lt;del&gt;DERBY-4746&lt;/del&gt;&lt;/a&gt;,&lt;br/&gt;
that seems fine to me.&lt;/p&gt;

&lt;p&gt;I think it&apos;s also fine to submit that change as part of this work. As you note,&lt;br/&gt;
the various changes are intertwined, and I don&apos;t foresee anyone wishing&lt;br/&gt;
to use only the server changes, or only the client changes, so I think it&apos;s&lt;br/&gt;
fine to include that change here.&lt;/p&gt;

&lt;p&gt;Thanks for all the effort and hard work getting these changes in shape for&lt;br/&gt;
the upcoming release!&lt;/p&gt;</comment>
                            <comment id="12908322" author="espinha" created="Sat, 11 Sep 2010 15:52:02 +0100"  >&lt;p&gt;I&apos;m delaying this patch a little bit more. This is because I just realized that the server is actually lacking some changes that are crucial for the implementation. Namely, the write*String methods in DDMWriter are still using .length() calls to determine the length of strings and these invocations need to be piped through the current CCSID manager. I was certain I had done this but I either forgot about it or I lost the changes in one of the patches...&lt;/p&gt;

&lt;p&gt;In light of this I&apos;ll just bundle these changes with the other change I had made to the server and I&apos;ll submit an individual patch for it.&lt;/p&gt;

&lt;p&gt;After this I still want to add a couple of fixtures to the InternationalConnectTest to do some boundary testing with international characters.&lt;/p&gt;

&lt;p&gt;Kathey also suggested that we&apos;d throw in a switch (via a property) to disable the UTF-8 CCSID manager so that if we hit issues in production environments, we can disable it and minimize the damage. In the end we agreed this would probably not be necessary but I thought I&apos;d throw it out there anyway to get some thoughts.&lt;/p&gt;</comment>
                            <comment id="12908740" author="knutanders" created="Mon, 13 Sep 2010 13:20:29 +0100"  >&lt;p&gt;I came across this method in Utf8CcidManager (client) added in one of the earlier patches:&lt;/p&gt;

&lt;p&gt;    public char convertToJavaChar(byte sourceByte) &lt;/p&gt;
{
        /* 1 byte = 0 to 255 which is the same in UTF-8 and ASCII */ 
        return (char)sourceByte;
    }

&lt;p&gt;I&apos;m not sure how it&apos;s supposed to be used, since it is currently only called from one of the tests, but it doesn&apos;t look quite right. The problem is that byte is a signed type, so for non-ascii characters in the range 0x80-0xff the corresponding byte values are negative. When casting that negative value to a char, we won&apos;t end up with a char in the 0x80-0xff range, but rather with a char in the 0xff80-0xffff range.&lt;/p&gt;

&lt;p&gt;To expose this problem, add these lines to Utf8CcsidManagerClientTest.testConvertToJavaChar()&lt;/p&gt;

&lt;p&gt;    b = (byte) 0xe5;&lt;br/&gt;
    assertEquals(&apos;\u00e5&apos;, ccsidManager.convertToJavaChar(b));&lt;/p&gt;

&lt;p&gt;and see the test fail with&lt;/p&gt;

&lt;p&gt;    AssertionFailedError: expected:&amp;lt;&#229;&amp;gt; but was:&amp;lt;&#65509;&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12916253" author="espinha" created="Wed, 29 Sep 2010 20:37:53 +0100"  >&lt;p&gt;I&apos;m attaching the final version of the _3 patch. It contains mostly cosmetic changes from the previous version and the additional fixture to the InternationalConnectTest to test the boundaries of the new CCSID manager.&lt;/p&gt;

&lt;p&gt;I&apos;ve already ran suites.All and derbyall without any failures but I still want to do some mixed client/server testing before committing. In the meanwhile maybe someone could review the patch?&lt;/p&gt;

&lt;p&gt;Knut, you&apos;re right. I just included this method definition as this was part of its superclass, CcsidManager. I&apos;m going to have a look at it again and if it really isn&apos;t invoked anywhere, I&apos;ll submit a separate patch that removes this method and the test fixture that uses it. If it&apos;s not used anywhere, it seems pointless to have dead code laying around.&lt;/p&gt;

&lt;p&gt;Apologies for the delays in the patches but I&apos;ve been travelling lately and as such, I&apos;ve been away from regular computer access. Still, I wanted to commit this patch before the RC for 10.7 is issued as I think it would be a nice feature to have as part of the new version.&lt;/p&gt;

&lt;p&gt;This would be the last patch that effectively fits everything in place for the new CCSID manager to be used.&lt;/p&gt;</comment>
                            <comment id="12916255" author="espinha" created="Wed, 29 Sep 2010 20:40:13 +0100"  >&lt;p&gt;Submitting the patch again as I made a mistake with the patch name.&lt;/p&gt;</comment>
                            <comment id="12916420" author="knutanders" created="Thu, 30 Sep 2010 10:29:24 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;I don&apos;t think the server-side changes (DDMWriter) in the latest patch are correct. writeString() and writeLDString() are not used for writing DRDA commands, so they don&apos;t go through the ccsid manager. These strings are encoded in UTF-8 also in those versions of Derby that encode DRDA commands in EBCDIC. Since these methods now use the ccsid manager for getting the byte length of the string, although the string is always encoded in UTF-8, the length may be wrong when talking to older clients.&lt;/p&gt;

&lt;p&gt;For example, I see this when I connect with a 10.6.2.1 client to a server running trunk with the patch:&lt;/p&gt;

&lt;p&gt;ij version 10.6&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost/db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; values &apos;&#230;&#248;&#229;&apos;;&lt;br/&gt;
1  &lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&#230;  &lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; values &apos;v&#234;rhane&apos;;&lt;br/&gt;
1      &lt;br/&gt;
-------&lt;br/&gt;
v&#234;rhan &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;Notice how the returned strings are truncated because the EBCDIC ccsid manager returns a shorter byte length than what the actual UTF-8 encoding results in.&lt;/p&gt;</comment>
                            <comment id="12916629" author="espinha" created="Thu, 30 Sep 2010 20:54:18 +0100"  >&lt;p&gt;You&apos;re right Knut, those methods are just for DRDA arguments. I think I&apos;ve hit some issues before by leaving those unchanged though, but they definitely shouldn&apos;t be handled by the CCSID manager. I&apos;ll have a look and submit another patch soon.&lt;/p&gt;</comment>
                            <comment id="12916903" author="espinha" created="Fri, 1 Oct 2010 15:43:47 +0100"  >&lt;p&gt;This patch removes the methods Knut mentioned in the previous comment. As mentioned before, these methods aren&apos;t used for DRDA commands but for the arguments of the DRDA instructions, for this reason they shouldn&apos;t be handled by the CCSID manager.&lt;/p&gt;

&lt;p&gt;I&apos;ve already ran suites.all and derbyall on this patch with no failures.&lt;/p&gt;</comment>
                            <comment id="12917637" author="knutanders" created="Mon, 4 Oct 2010 16:14:18 +0100"  >&lt;p&gt;Thanks, Tiago. The latest patch looks fine to me.&lt;/p&gt;</comment>
                            <comment id="12917673" author="espinha" created="Mon, 4 Oct 2010 18:41:13 +0100"  >&lt;p&gt;Great! I&apos;ve done some additional mixed client/server testing and here are the results. From what I can see, no regressions are introduced with older clients or servers as the support for Latin characters was actually broken. We can now use older clients on the 10.7 server and while this connection will use EBCDIC (older clients won&apos;t have UTF-8 support), it will now support the extra-ASCII characters featured in EBCDIC.&lt;/p&gt;

&lt;p&gt;I will leave it until 22:00 BST and unless someone objects until then, I will commit this patch.&lt;/p&gt;

&lt;p&gt;Results of testing:&lt;br/&gt;
10.3.3 client - 10.7 server&lt;/p&gt;

&lt;p&gt;&amp;lt;= 255 chars (incl. Latin) - pass&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;would fail before with &amp;gt;3 Latin chars&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt;= 256 chars (incl. Latin) - fail&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;10.5.3 client - 10.7 server&lt;/p&gt;

&lt;p&gt;&amp;lt;= 255 chars (incl. Latin) - pass&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;would fail before with &amp;gt;3 Latin chars&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt;= 256 chars (incl. Latin) - fail&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;10.7 client - 10.7 server&lt;br/&gt;
&amp;gt;= 122 chars (Latin only) - fail&lt;br/&gt;
&amp;lt;= 121 chars (Latin only) - pass&lt;/p&gt;

&lt;p&gt;Reason: -&amp;gt; each char = 2 bytes, 122 * 2 = 244 + 12 single-byted chars (;create=true)&lt;br/&gt;
	== 256 bytes == 1 byte too many&lt;br/&gt;
	-&amp;gt; older clients don&apos;t experience this as everything is EBCDIC (1 byte/char)&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;10.7 client - 10.3.3 server&lt;br/&gt;
&amp;gt; 3 Latin only chars (mixed or not with ASCII) - fail&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Used to fail before&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt; 255 ASCII only chars (incl. ;create=true) - fail&lt;br/&gt;
&amp;lt;= 255 ASCII only chars (incl. ;create=true) - pass&lt;/p&gt;

&lt;p&gt;10.7 client - 10.5.3 server&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Same behaviour as 10.3.3 server&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12917838" author="espinha" created="Tue, 5 Oct 2010 01:48:37 +0100"  >&lt;p&gt;Attaching a cleanup patch to then proceed with resolving the issue. This patch removes the convertToJavaChar() method as mentioned by Knut a few comments above. This is dead code that isn&apos;t used anywhere in the code.&lt;/p&gt;</comment>
                            <comment id="12917895" author="knutanders" created="Tue, 5 Oct 2010 08:58:13 +0100"  >&lt;p&gt;The cleanup patch looks good. +1&lt;/p&gt;</comment>
                            <comment id="12917917" author="espinha" created="Tue, 5 Oct 2010 10:35:05 +0100"  >&lt;p&gt;Thank you Knut. I also ran suites.All just in case and got not failures.&lt;/p&gt;

&lt;p&gt;I&apos;ve committed the patch and resolved the issue. Will wait for the regressions run to close it.&lt;/p&gt;</comment>
                            <comment id="13685189" author="knutanders" created="Mon, 17 Jun 2013 10:19:17 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12469536">DERBY-4746</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12456352" name="DERBY-4757_cleanup.diff" size="3397" author="espinha" created="Tue, 5 Oct 2010 01:48:37 +0100"/>
                            <attachment id="12452187" name="DERBY-4757_donotcommit.diff" size="24974" author="espinha" created="Mon, 16 Aug 2010 17:51:50 +0100"/>
                            <attachment id="12450966" name="DERBY-4757_p1.diff" size="32763" author="espinha" created="Sat, 31 Jul 2010 22:25:30 +0100"/>
                            <attachment id="12452374" name="DERBY-4757_p2.diff" size="17436" author="espinha" created="Wed, 18 Aug 2010 08:55:41 +0100"/>
                            <attachment id="12456123" name="DERBY-4757_p3.diff" size="25082" author="espinha" created="Fri, 1 Oct 2010 15:43:47 +0100"/>
                            <attachment id="12455940" name="DERBY-4757_p3.diff" size="26682" author="espinha" created="Wed, 29 Sep 2010 20:40:12 +0100"/>
                            <attachment id="12454247" name="DERBY-4757_p3.diff" size="21914" author="espinha" created="Thu, 9 Sep 2010 23:37:28 +0100"/>
                            <attachment id="12453635" name="DERBY-4757_p3.diff" size="17826" author="espinha" created="Wed, 1 Sep 2010 23:25:15 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Aug 2010 00:40:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31362</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0o93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37747</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>