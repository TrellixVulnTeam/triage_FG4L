<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2351/DERBY-2351.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2351] ORDER BY with expression with distinct in the select list returns incorrect result</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2351</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When distinct is in the select list and the query has order by with expression, the resultset produced contains an additional column.  &lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t1 (c1 int, c2 varchar(10))&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t1 values (1,&apos;a&apos;),(2,&apos;b&apos;),(3,&apos;c&apos;);&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
select distinct c1, c2 from t1 order by c1;&lt;br/&gt;
C1         |C2&lt;br/&gt;
----------------------&lt;br/&gt;
1          |a&lt;br/&gt;
2          |b&lt;br/&gt;
3          |c&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
ij&amp;gt; select distinct c1, c2 from t1 order by c1+1;&lt;br/&gt;
C1         |C2        |3                                 &amp;lt;=====returns 3 columns, incorrect result returned&lt;br/&gt;
----------------------------------&lt;br/&gt;
1          |a         |2&lt;br/&gt;
2          |b         |3&lt;br/&gt;
3          |c         |4&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;/p&gt;</description>
                <environment>Any</environment>
        <key id="12363059">DERBY-2351</key>
            <summary>ORDER BY with expression with distinct in the select list returns incorrect result</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="yipng">Yip Ng</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Feb 2007 00:36:19 +0000</created>
                <updated>Fri, 21 Jan 2011 17:49:46 +0000</updated>
                            <resolved>Sun, 16 Mar 2008 03:51:37 +0000</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12473862" author="bryanpendleton" created="Sat, 17 Feb 2007 01:29:53 +0000"  >&lt;p&gt;Hi Yip. I haven&apos;t spent any time looking at this yet, just wanted to mention a hunch that this might be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1861&quot; title=&quot;Column ordering ASSERT when combining column references and expressions in same ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1861&quot;&gt;&lt;del&gt;DERBY-1861&lt;/del&gt;&lt;/a&gt;. If you apply the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1861&quot; title=&quot;Column ordering ASSERT when combining column references and expressions in same ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1861&quot;&gt;&lt;del&gt;DERBY-1861&lt;/del&gt;&lt;/a&gt;, does the behavior change at all?&lt;/p&gt;</comment>
                            <comment id="12473864" author="yipng" created="Sat, 17 Feb 2007 02:01:25 +0000"  >&lt;p&gt;Hi Bryan.  Let me try to apply the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1861&quot; title=&quot;Column ordering ASSERT when combining column references and expressions in same ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1861&quot;&gt;&lt;del&gt;DERBY-1861&lt;/del&gt;&lt;/a&gt; patch and see if it is related.  Meanwhile, it looks like the error is not limited to order by with expression, I get the same behavior with column reference.  &lt;/p&gt;

&lt;p&gt;ij&amp;gt; select distinct c2 from t1 order by c1;&lt;br/&gt;
C2        |C1&lt;br/&gt;
----------------------&lt;br/&gt;
c         |1&lt;br/&gt;
b         |2&lt;br/&gt;
a         |3&lt;/p&gt;</comment>
                            <comment id="12473866" author="yipng" created="Sat, 17 Feb 2007 02:24:34 +0000"  >&lt;p&gt;I applied the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1861&quot; title=&quot;Column ordering ASSERT when combining column references and expressions in same ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1861&quot;&gt;&lt;del&gt;DERBY-1861&lt;/del&gt;&lt;/a&gt; patch but the result is the same, so it may or may not be related.  &lt;/p&gt;

&lt;p&gt;I remembered that in some other databases(DB2 and Oracle), this construction is not allowed but I can&apos;t recall for now that if this is an implementation or a standards restriction.&lt;/p&gt;
</comment>
                            <comment id="12473868" author="bryanpendleton" created="Sat, 17 Feb 2007 02:29:12 +0000"  >&lt;p&gt;Thanks for checking, Yip! It was worth a try... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12473871" author="yipng" created="Sat, 17 Feb 2007 03:07:26 +0000"  >&lt;p&gt;Ah, I think I see why this particular case should throw an exception.  The result is not predictable (and not portable) if the ORDER BY sort key is not in the SELECT list.  Consider the following example:&lt;/p&gt;

&lt;p&gt;create table person (name varchar(10), age int);&lt;br/&gt;
insert into person values (&apos;John&apos;, 10);&lt;br/&gt;
insert into person values (&apos;John&apos;, 30);&lt;br/&gt;
insert into person values (&apos;Mary&apos;, 20);&lt;/p&gt;

&lt;p&gt;SELECT DISTINCT name FROM person ORDER BY age;&lt;/p&gt;

&lt;p&gt;So which row to display for John?  The John (age 10) or the other John (age 30)?  &lt;br/&gt;
Result may be:&lt;br/&gt;
John&lt;br/&gt;
Mary&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;Mary&lt;br/&gt;
John&lt;/p&gt;

&lt;p&gt;Derby should not allow this and return an error.&lt;/p&gt;</comment>
                            <comment id="12503218" author="bryanpendleton" created="Sun, 10 Jun 2007 22:45:30 +0100"  >&lt;p&gt;The symptoms of this problem seem to have changed in the last 6 months. However, there is definitely still something wrong. With the latest trunk, I don&apos;t see the extra mystery columns in the IJ output. However, I do appear to be getting wrong results.&lt;/p&gt;

&lt;p&gt;And I agree with Yip that in the wrong results case, the query is ambiguous and should be rejected with an error. Interestingly, in the wrong results case, Derby currently chooses neither of the answers that Yip suggested, but instead chooses to display all three rows! Thus Derby currently chooses to violate the DISTINCT part of the query, rather than violating the ORDER BY part of the query. Given that the two parts of the query are in conflict, I&apos;m not sure that it really matters very much which part of the query Derby disobeys, as either way is wrong and the only thing that can be done is to reject the query as ambiguous.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching reproTests.diff, a patch proposal with some new test cases for the ORDER BY test suite. These test cases demonstrate the wrong results.&lt;/p&gt;

&lt;p&gt;Although I don&apos;t currently have a fix for this problem, or even a clear idea of how to fix it, I thought that it would be useful to post the test cases anyway. &lt;/p&gt;</comment>
                            <comment id="12505035" author="bryanpendleton" created="Fri, 15 Jun 2007 05:44:32 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2805&quot; title=&quot;ASSERT failure with sane build if DISTINCT and ORDER BY are present in a query that selects from a diagnostic table function.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2805&quot;&gt;&lt;del&gt;DERBY-2805&lt;/del&gt;&lt;/a&gt; also describes problems when DISTINCT and ORDER BY are combined in a single query. However, in the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2805&quot; title=&quot;ASSERT failure with sane build if DISTINCT and ORDER BY are present in a query that selects from a diagnostic table function.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2805&quot;&gt;&lt;del&gt;DERBY-2805&lt;/del&gt;&lt;/a&gt; case, there is no ambiguity, and the query is valid as phrased; the issue involves how the compiler propagates the information about row ordering and duplicate elimination through the query tree. So the two issues are not closely related. Still, it seems useful to link them.&lt;/p&gt;</comment>
                            <comment id="12505472" author="bryanpendleton" created="Sat, 16 Jun 2007 16:02:46 +0100"  >&lt;p&gt;The SQL Standard appears to agree with the conclusion that queries such as those Yip has constructed should be rejected as invalid. Here&apos;s a brief synopsis of why I think the standard says this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Section 14.1 (2003 standard) covers DECLARE CURSOR.&lt;/li&gt;
	&lt;li&gt;Syntax Rule 18 covers the ORDER BY clause&lt;/li&gt;
	&lt;li&gt;Syntax Rule 18.d.i covers the case in which the ORDER BY clause contains a sort key that contains a column reference to a column that is not a column of the result of the query expression&lt;/li&gt;
	&lt;li&gt;Syntax Rule 18.d.i.9.B.II states:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  QS shall not specify the &amp;lt;set quantifier&amp;gt; DISTINCT or directly contain one or more &amp;lt;set function specification&amp;gt;s.&lt;/p&gt;

&lt;p&gt;So I propose to modify the ORDER BY column checking so that it rejects such queries.&lt;/p&gt;</comment>
                            <comment id="12505571" author="bryanpendleton" created="Sun, 17 Jun 2007 04:30:55 +0100"  >&lt;p&gt;Attached is derby_2351.diff, which is not for commit. This patch&lt;br/&gt;
proposal is close, but not quite correct.&lt;/p&gt;

&lt;p&gt;The problem with this patch proposal is that it rejects&lt;/p&gt;

&lt;p&gt;  SELECT distinct emp.* FROM employee emp ORDER BY emp.name&lt;/p&gt;

&lt;p&gt;At the moment of &quot;pull-up&quot; processing, &quot;emp.name&quot; does not appear&lt;br/&gt;
in the result set of the query expression (&quot;emp.*&quot;), and so the change&lt;br/&gt;
rejects it, even though later in bind processing it would be the case&lt;br/&gt;
that &quot;emp.name&quot; &lt;b&gt;does&lt;/b&gt; appear, and hence should be allowed, once&lt;br/&gt;
the all-columns wildcard is expanded.&lt;/p&gt;

&lt;p&gt;I&apos;ll take another shot at this change later, but wanted to capture this&lt;br/&gt;
first attempt in the JIRA record anyway, as it represents a step along&lt;br/&gt;
my thinking about the problem.&lt;/p&gt;</comment>
                            <comment id="12505613" author="bryanpendleton" created="Sun, 17 Jun 2007 20:42:07 +0100"  >&lt;p&gt;Attached is derby_2351_v2.diff, a patch proposal.&lt;/p&gt;

&lt;p&gt;This proposal relocates the &quot;order by column must be in the&lt;br/&gt;
distinct result set&quot; check to later in bind processing, after the&lt;br/&gt;
asterisk(s), if present, have been expanded to result column lists,&lt;br/&gt;
which makes the patch behave properly for statements like&lt;/p&gt;

&lt;p&gt;  SELECT DISTINCT * FROM t1 ORDER BY c1&lt;/p&gt;

&lt;p&gt;The patch also includes some additional tests.&lt;/p&gt;

&lt;p&gt;I believe the patch is now ready for review and suggestions.&lt;/p&gt;

&lt;p&gt;The patch passes all of derbyall and suites.All.&lt;/p&gt;

&lt;p&gt;Please let me know your comments.&lt;/p&gt;</comment>
                            <comment id="12511585" author="bryanpendleton" created="Tue, 10 Jul 2007 23:09:48 +0100"  >&lt;p&gt;Committed derby_2351_v2.diff to the trunk as revision 555096.&lt;/p&gt;

&lt;p&gt;I&apos;m leaving this issue open for a while, because I think this change&lt;br/&gt;
is probably worth merging to the 10.3 branch.&lt;/p&gt;</comment>
                            <comment id="12519347" author="bryanpendleton" created="Sun, 12 Aug 2007 23:25:56 +0100"  >&lt;p&gt;Committed the change to the 10.3 branch as revision 565184.&lt;/p&gt;

&lt;p&gt;Need to update the fix versions, as JIRA isn&apos;t showing me an appropriate fix version right now. The appropriate fix version is probably 10.3.2.0 or something like that.&lt;/p&gt;</comment>
                            <comment id="12569950" author="army" created="Mon, 18 Feb 2008 17:05:36 +0000"  >&lt;p&gt;Per the user thread found here:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://article.gmane.org/gmane.comp.apache.db.derby.user/8393&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://article.gmane.org/gmane.comp.apache.db.derby.user/8393&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the following query appears to have worked in 10.3.1.4 but fails in 10.3.2.1 and later:&lt;/p&gt;

&lt;p&gt;  create table t(c1 int, c2 int);&lt;br/&gt;
  select distinct c1 from t order by c1;  &amp;#8211; works&lt;br/&gt;
  select distinct c1 as a1 from t order by c1; &amp;#8211; used to work, now fails&lt;/p&gt;

&lt;p&gt;The failure shows the exception that was added for this issue, namely:&lt;/p&gt;

&lt;p&gt;  ERROR 42879: The ORDER BY clause may not contain column &apos;C1&apos;, since the query specifies&lt;br/&gt;
  DISTINCT and that column does not appear in the query result.&lt;/p&gt;

&lt;p&gt;I skimmed over the comments for this issue and, from what I can tell, the above query (with the column alias) is &lt;b&gt;not&lt;/b&gt; ambiguous--at least, not in the way that this issue describes.    I.e. if the alias &quot;A1&quot; can be identified as pointing to &quot;C1&quot; (which should be possible...I think?) then the query satisfies the requirement that ORDER BY columns be a subset of the DISTINCT columns.&lt;/p&gt;

&lt;p&gt;Was it the intent of this issue to deliberately block queries such as this one, or was that an accident?  An easy enough workaround exists-&lt;del&gt;just specify &quot;A1&quot; in the order by clause instead of &quot;C1&quot;&lt;/del&gt;-but I think the question remains: is that supposed to be necessary?&lt;/p&gt;

&lt;p&gt;Note: I haven&apos;t actually done a pre- and post- commit check for this specific issue, I&apos;m just assuming (perhaps incorrectly) that this issue is the one that changed the behavior, given the discussion and the new error code.  Apologies if that assumption is wrong...&lt;/p&gt;</comment>
                            <comment id="12570011" author="bryanpendleton" created="Mon, 18 Feb 2008 21:15:45 +0000"  >&lt;p&gt;It was not the intent of this change to reject the alias form of the query; this change&lt;br/&gt;
was specifically intended to address the issue that Yip raised in Feb 2007:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2351?focusedCommentId=12473871#action_12473871&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-2351?focusedCommentId=12473871#action_12473871&lt;/a&gt;&lt;br/&gt;
in which there was a conflict between the DISTINCT and ORDER BY&lt;br/&gt;
specifications in the query.&lt;/p&gt;

&lt;p&gt;I agree with Army that &quot;select distinct c1 as a1 from t order by c1&quot; does not&lt;br/&gt;
contain such a conflict, and so this patch did not intend to reject that query.&lt;/p&gt;

&lt;p&gt;However, it is not clear to me whether that query ought to be allowed or not,&lt;br/&gt;
since I don&apos;t understand whether it is supposed to be legal to refer to an&lt;br/&gt;
underlying base table column in the ORDER BY clause, or whether the column&lt;br/&gt;
alias is &lt;b&gt;required&lt;/b&gt; to be used. Note, in particular, this comment by Jack Klebanoff&lt;br/&gt;
regarding the topic:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-84?focusedCommentId=64077#action_64077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-84?focusedCommentId=64077#action_64077&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m worried that we may have a number of related problems in this whole area of&lt;br/&gt;
handling expressions, aliasing, column number references, and simple column&lt;br/&gt;
references in ORDER BY, GROUP BY, and HAVING clauses. Note, for example,&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2457&quot; title=&quot;Use of column aliases in group by / having clauses can cause queries to fail&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2457&quot;&gt;&lt;del&gt;DERBY-2457&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2085&quot; title=&quot;Misleading error message for non-matching ORDER BY clause in queries with GROUP BY.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2085&quot;&gt;&lt;del&gt;DERBY-2085&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-84&quot; title=&quot;Column aliasing could simplify queries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-84&quot;&gt;&lt;del&gt;DERBY-84&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-280&quot; title=&quot;Wrong result from select when aliasing to same name as used in group by&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-280&quot;&gt;&lt;del&gt;DERBY-280&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1861&quot; title=&quot;Column ordering ASSERT when combining column references and expressions in same ORDER BY&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1861&quot;&gt;&lt;del&gt;DERBY-1861&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-127&quot; title=&quot;Aliased Columns not recognized after &amp;quot;group by... order by&amp;quot; combination&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-127&quot;&gt;&lt;del&gt;DERBY-127&lt;/del&gt;&lt;/a&gt;,&lt;br/&gt;
and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3094&quot; title=&quot;Grouping of expressions causes NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3094&quot;&gt;&lt;del&gt;DERBY-3094&lt;/del&gt;&lt;/a&gt; for  some other examples, both past and present.&lt;/p&gt;

&lt;p&gt;I think we need to spend some time understanding how the SQL Standard intends&lt;br/&gt;
that the ORDER BY, GROUP BY, and HAVING clauses should behave with respect&lt;br/&gt;
to column references, columns identified by column number, and value expressions,&lt;br/&gt;
and then we need to ensure that Derby is behaving correctly.&lt;/p&gt;

</comment>
                            <comment id="12570033" author="army" created="Mon, 18 Feb 2008 22:45:19 +0000"  >&lt;p&gt;&amp;gt; It was not the intent of this change to reject the alias form of the query &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Okay, thank you for the reply, Bryan.  And thanks for the investigation that you&apos;ve done to reply so thoroughly.&lt;/p&gt;

&lt;p&gt;&amp;gt; However, it is not clear to me whether that query ought to be allowed or not &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;From the various responses to the user thread referenced in my previous comment, it sounds like different databases treat this kind of thing differently.  So I don&apos;t know what the &quot;best&quot; behavior would be here, either...&lt;/p&gt;

&lt;p&gt;For the record, I was merely asking the question because a query which worked in one release stopped working in the next, with no clear explanation as to why.  The response on the user list was generally &quot;well that doesn&apos;t work in some other databases, so don&apos;t do it; use the alias instead&quot;-&lt;del&gt;which is fine as a workaround, but it left me wondering why the behavior changed between releases to begin with.  Your reply above filled in the missing information for me&lt;/del&gt;-so thanks!&lt;/p&gt;

&lt;p&gt;&amp;gt; I think we need to spend some time understanding how the SQL Standard intends&lt;br/&gt;
&amp;gt; that the ORDER BY, GROUP BY, and HAVING clauses should behave &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If the standard lays it all out, then I agree, that certainly seems like a good way to go...&lt;/p&gt;</comment>
                            <comment id="12570062" author="bryanpendleton" created="Tue, 19 Feb 2008 00:30:33 +0000"  >&lt;p&gt;Re-opening the issue to reflect the observation that queries that previously&lt;br/&gt;
worked are now being rejected.&lt;/p&gt;</comment>
                            <comment id="12570083" author="bryanpendleton" created="Tue, 19 Feb 2008 02:41:55 +0000"  >&lt;p&gt;Here&apos;s an interesting example of a query combining both expressions &lt;br/&gt;
and column aliases in the ORDER BY clause:&lt;/p&gt;

&lt;p&gt; create table t1 (a varchar(10));&lt;br/&gt;
 insert into t1 values (&apos;M&apos;), (&apos;k&apos;), (&apos;c&apos;), (&apos;K&apos;), (&apos;m&apos;);&lt;br/&gt;
 SELECT CONCAT(&apos;test&apos;, a) AS str FROM t1 ORDER BY UPPER(str);&lt;/p&gt;</comment>
                            <comment id="12570085" author="bryanpendleton" created="Tue, 19 Feb 2008 02:58:18 +0000"  >&lt;p&gt;And another rather similar query. For this one, the poster commented that&lt;br/&gt;
the query worked if the ORDER BY specified NAME1, but not if it specified FIRSTNAME.&lt;/p&gt;

&lt;p&gt;SELECT DISTINCT ISNULL(FirstName, &apos;&apos;) AS Name1 FROM Person.Contact ORDER BY FirstName&lt;/p&gt;</comment>
                            <comment id="12573966" author="dyret" created="Fri, 29 Feb 2008 21:12:24 +0000"  >&lt;p&gt;I just changed the fix version from 10.4 and 10.3.2.1 to 10.4 and 10.3.2.2 since 10.3.2.1 has already been released without this fix.&lt;/p&gt;</comment>
                            <comment id="12574240" author="bryanpendleton" created="Sun, 2 Mar 2008 18:29:20 +0000"  >&lt;p&gt;Currently, the code which associates ORDER BY column specs with the ResultColumn&lt;br/&gt;
instances in the SELECT&apos;s RCL examines the SELECT list using only the &quot;exposedName&quot;.&lt;br/&gt;
The exposedName is the same as the column name for simple column references,&lt;br/&gt;
but is the alias name when a column alias is used, and is an internally generated name&lt;br/&gt;
for expressions. So in:&lt;/p&gt;

&lt;p&gt;  select age, name as first_name, age / 7 as age_in_dog_years, upper(name) from person;&lt;/p&gt;

&lt;p&gt;we have 4 columns, with the exposedName &apos;s of:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;age&lt;/li&gt;
	&lt;li&gt;first_name&lt;/li&gt;
	&lt;li&gt;age_in_dog_years&lt;/li&gt;
	&lt;li&gt;SQLCol1&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Since ORDER BY looks only at the exposed name, when it sees a statement like:&lt;/p&gt;

&lt;p&gt;  select name as first_name from person order by name;&lt;/p&gt;

&lt;p&gt;it doesn&apos;t find the column &apos;name&apos; in the SELECT RCL, so it decides thta it needs&lt;br/&gt;
to &quot;pull up&quot; the name column from the underlying table.&lt;/p&gt;

&lt;p&gt;Since pulled up columns are invalid for DISTINCT queries, we get the error in question.&lt;/p&gt;

&lt;p&gt;It seems relatively straightforward to enhance ResultColumnList.java&apos;s&lt;br/&gt;
findResultColumnForOrderBy() and getOrderByColumnToLink() methods so that&lt;br/&gt;
they search for columns using both the exposedName &lt;b&gt;and&lt;/b&gt; the underlying&lt;br/&gt;
column reference&apos;s name, thus making the order by column &lt;b&gt;not&lt;/b&gt; be a pulled-up&lt;br/&gt;
column, and thus valid in DISTINCT queries, and that does indeed solve the repro &lt;br/&gt;
script from the 18-feb-2008 comment on this issue.&lt;/p&gt;

&lt;p&gt;I&apos;m investigating working that change up as a proper patch, with additional test&lt;br/&gt;
cases, and running the current regression tests to try to figure out what else may break&lt;br/&gt;
as a result of introducing this new column resolution algorithm.&lt;/p&gt;</comment>
                            <comment id="12574297" author="bryanpendleton" created="Sun, 2 Mar 2008 22:42:25 +0000"  >&lt;p&gt;Matching first on the exposedName, then on the underlying name,&lt;br/&gt;
seems like a promising technique for this issue. Attached is&lt;br/&gt;
d2351_aliasing.diff, a patch proposal with a code change as&lt;br/&gt;
described in the previous comment and some additional tests.&lt;/p&gt;

&lt;p&gt;This patch passes the existing regression tests. Comments are&lt;br/&gt;
most welcome.&lt;/p&gt;</comment>
                            <comment id="12574396" author="thomanie" created="Mon, 3 Mar 2008 09:30:48 +0000"  >&lt;p&gt;I had a look at the patch, and IMHO the code and approach taken look good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Good combination of queries tested.&lt;/p&gt;

&lt;p&gt;However, the master diff (orderby.out) is missing for orderby.sql - could you please attach that too?&lt;/p&gt;</comment>
                            <comment id="12574648" author="army" created="Mon, 3 Mar 2008 18:17:50 +0000"  >&lt;p&gt;Hi Bryan, thanks for the patch.  Two minor comments:&lt;/p&gt;

&lt;p&gt;1. Slight whitespace inconsistency (w.r.t. existing code) in ResultColumn.java&lt;br/&gt;
2. The following query (pulled from your modified orderby.out) currently fails with error 42X79:&lt;/p&gt;

&lt;p&gt;      +ij&amp;gt; select distinct name as age from person order by person.age;&lt;br/&gt;
      +ERROR 42X79: Column name &apos;AGE&apos; appears more than once in the result of the query expression.&lt;/p&gt;

&lt;p&gt;It&apos;s good that the query fails, but I wonder if error 42X79 is the best error here?  From the user&apos;s perspective there is only a single column in the query&apos;s result list, so the error seems slightly misleading.  Instead, I think error 42879 (added as part of this issue) is more appropriate, since the query attempts to order by a column that is not in the DISTINCT list.  Any idea how hard it would be to catch that scenario and throw 42879 instead of 42X89?  Would this just be a matter of checking to see if the column was &quot;pulled&quot; into the select list and, if so, throwing 42879 instead of 42X79?  Or is it more complicated than that?  I don&apos;t think this is a big deal at all-&lt;del&gt;as long as there is an error I think it&apos;s fine&lt;/del&gt;-but I thought I&apos;d ask the question to see if you have already considered it.&lt;/p&gt;</comment>
                            <comment id="12574840" author="bryanpendleton" created="Tue, 4 Mar 2008 04:34:52 +0000"  >&lt;p&gt;Thanks Thomas and Army for having a look at the patch.&lt;/p&gt;

&lt;p&gt;Attached is a revised version of d2351_aliasing.diff, with&lt;br/&gt;
the whitespace corrected in ResultColumn.java (I think),&lt;br/&gt;
and a few additional test cases.&lt;/p&gt;

&lt;p&gt;Thomas, please let me know if you aren&apos;t able to see&lt;br/&gt;
orderby.out in this patch.&lt;/p&gt;

&lt;p&gt;Army, with respect to the error message, I agree that it is&lt;br/&gt;
confusing, as there only appears to be one column in&lt;br/&gt;
the result of the query expression. However, I think this&lt;br/&gt;
behavior predates this patch, and moreover it is also&lt;br/&gt;
independent of whether DISTINCT is present. Even without&lt;br/&gt;
this patch applied:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select name as age from person order by person.age;&lt;br/&gt;
ERROR 42X79: Column name &apos;AGE&apos; appears more than once in the result of the query expression.&lt;/p&gt;

&lt;p&gt;While looking at this, however, I discovered a possibly more&lt;br/&gt;
disturbing problem. The following query &lt;b&gt;works&lt;/b&gt; before the&lt;br/&gt;
patch, but is &lt;b&gt;rejected&lt;/b&gt; after the patch:&lt;/p&gt;

&lt;p&gt;   select person.name as name, pets.name as pet_name from person,pets order by name;&lt;/p&gt;

&lt;p&gt;Before this patch, the ORDER BY analysis looks only at the exposed &lt;br/&gt;
names &apos;name&apos; and &apos;pet_name&apos;. But with the patch in place, the ORDER BY&lt;br/&gt;
processing sees that the column with the exposed name pet_name&lt;br/&gt;
also has the underlying source column name &apos;name&apos;, and so it sees&lt;br/&gt;
two possible columns to which &apos;ORDER BY NAME&apos; could refer, and&lt;br/&gt;
refuses the query as ambiguous.&lt;/p&gt;

&lt;p&gt;I&apos;m not quite sure what to do, but I&apos;m attaching the updated patch&lt;br/&gt;
anyway, to try to keep the discussion going.&lt;/p&gt;
</comment>
                            <comment id="12574842" author="bryanpendleton" created="Tue, 4 Mar 2008 04:51:36 +0000"  >&lt;p&gt;In Derby 10.2, all of the following queries work:&lt;/p&gt;

&lt;p&gt;    &amp;#8211; orders the rows by the first column (person.name):&lt;br/&gt;
    select person.name as name, pets.name as pet_name from person, pets order by name;&lt;br/&gt;
    &amp;#8211; orders the rows by the first column (person.name, aliased to &apos;age&apos;):&lt;br/&gt;
    select person.name as age from person order by person.age;&lt;br/&gt;
    &amp;#8211; again appears to order the rows by the aliased column?&lt;br/&gt;
    select distinct person.name as age from person order by person.age;&lt;/p&gt;

&lt;p&gt;The first query is only ambiguous if we interpret an unqualified ORDER BY&lt;br/&gt;
reference to refer to either an exposedName or to an underlying column name.&lt;br/&gt;
The third query, of course, is inspired by the query that Yip noted as problematic&lt;br/&gt;
in the comment on 16-Feb-2007. I think that the results from&lt;br/&gt;
the second query in 10.2 are particularly disturbing, since even though the&lt;br/&gt;
user specifically said to sort by &apos;person.age&apos;, the 10.2 code apparently sorted&lt;br/&gt;
by the exposedName column &apos;age&apos;, since if we had really sorted the rows by&lt;br/&gt;
person.age we&apos;d have produced the result &lt;/p&gt;

&lt;p&gt;AGE&lt;br/&gt;
----------&lt;br/&gt;
john&lt;br/&gt;
mary&lt;br/&gt;
john&lt;/p&gt;

&lt;p&gt;So, how bad is it to break these queries? They did not throw errors before,&lt;br/&gt;
but were they giving the correct results?&lt;/p&gt;

&lt;p&gt;The complete 10.2 script session is pasted  below. &lt;br/&gt;
============================================================&lt;br/&gt;
ij version 10.2&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:ten2db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table person (name varchar(10), age int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create table pets (name varchar(10), age int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into person values (&apos;john&apos;, 30), (&apos;mary&apos;, 50), (&apos;john&apos;, 10);&lt;br/&gt;
3 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into pets values (&apos;Buster&apos;, 1), (&apos;Fido&apos;, 3);&lt;br/&gt;
2 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select person.name as name, pets.name as pet_name from person, pets order by name;&lt;br/&gt;
NAME      |PET_NAME&lt;br/&gt;
---------------------&lt;br/&gt;
john      |Fido&lt;br/&gt;
john      |Fido&lt;br/&gt;
john      |Buster&lt;br/&gt;
john      |Buster&lt;br/&gt;
mary      |Fido&lt;br/&gt;
mary      |Buster&lt;/p&gt;

&lt;p&gt;6 rows selected&lt;br/&gt;
ij&amp;gt; select person.name as age from person order by person.age;&lt;br/&gt;
AGE&lt;br/&gt;
----------&lt;br/&gt;
john&lt;br/&gt;
john&lt;br/&gt;
mary&lt;/p&gt;

&lt;p&gt;3 rows selected&lt;br/&gt;
ij&amp;gt; select distinct person.name as age from person order by person.age;&lt;br/&gt;
AGE&lt;br/&gt;
----------&lt;br/&gt;
john&lt;br/&gt;
mary&lt;/p&gt;</comment>
                            <comment id="12574887" author="thomanie" created="Tue, 4 Mar 2008 08:32:51 +0000"  >&lt;p&gt;Bryan&amp;gt;Attached is a revised version of d2351_aliasing.diff, with&lt;br/&gt;
Bryan&amp;gt;the whitespace corrected in ResultColumn.java (I think),&lt;/p&gt;

&lt;p&gt;No whitespace in the currnet diff &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;Thomas, please let me know if you aren&apos;t able to see orderby.out in this patch. &lt;/p&gt;

&lt;p&gt;The .out was there all along, it just doesn&apos;t apply for some reason. Same problem with the current patch. It was made from the head of trunk, right?&lt;/p&gt;

&lt;p&gt;I agree that the second query from 10.2 produces the wrong results - it&apos;s using an explicit table.columnname reference for ordering. In this particular case an ambigous error would be better that wrong results.&lt;/p&gt;

&lt;p&gt;Could we use the fact that the user specified tableName.columnName, and not just columnName to distinguish between the aliased and original column names somehow? If using t.c notation you could actually exclude aliased columns from the check. &lt;/p&gt;

&lt;p&gt;This would mean &lt;/p&gt;

&lt;p&gt;   select distinct person.name as age from person order by person.age; &lt;br/&gt;
   =&amp;gt; explicit check on column named &apos;age&apos; in table &apos;person&apos;&lt;/p&gt;

&lt;p&gt;   select distinct person.name as age from person order by age; &lt;br/&gt;
   =&amp;gt; alias &apos;age&apos; exists, check alias&lt;/p&gt;

&lt;p&gt;   select distinct person.name as their_age from person order by age; &lt;br/&gt;
   =&amp;gt; alias &apos;age&apos; does not exists, check &apos;person&apos; for &apos;age&apos;&lt;/p&gt;

&lt;p&gt;  select person.name as name, pets.name as pet_name from person,pets order by name; &lt;br/&gt;
  =&amp;gt; alias &apos;name&apos; exists, check alias&lt;/p&gt;

&lt;p&gt;   select person.name as person_name, pets.name as pet_name from person,pets order by person.name; &lt;br/&gt;
   =&amp;gt; explicit check on column named &apos;name&apos; in table &apos;person&apos;&lt;/p&gt;

&lt;p&gt;but&lt;/p&gt;

&lt;p&gt;   select person.name as person_name, pets.name as pet_name from person,pets order by name; &lt;br/&gt;
   =&amp;gt; ambiguous, no alias &apos;name&apos;, but both &apos;person&apos; and &apos;pets&apos; have column &apos;name&apos;&lt;/p&gt;

&lt;p&gt;We may actually lack information on whether the user did explicitly use t.c or only column/alias name at this stage, so it might not be possible at all for all I know. I also see potential for breaking existing applications with such changes. But if keeping the old behavior produces wrong results, your current patch with throwing an ambiguous exception is still a lot better than returning wrong results IMHO!&lt;/p&gt;</comment>
                            <comment id="12575061" author="army" created="Tue, 4 Mar 2008 17:20:35 +0000"  >&lt;p&gt;&amp;gt; I think this behavior predates this patch, and moreover it is also&lt;br/&gt;
&amp;gt; independent of whether DISTINCT is present. &lt;/p&gt;

&lt;p&gt;Ah, okay, thanks for pointing that out.&lt;/p&gt;

&lt;p&gt;&amp;gt; if we had really sorted the rows by person.age we&apos;d have produced the result&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; AGE&lt;br/&gt;
&amp;gt; ----------&lt;br/&gt;
&amp;gt; john&lt;br/&gt;
&amp;gt; mary&lt;br/&gt;
&amp;gt; john&lt;/p&gt;

&lt;p&gt;Just to be clear, note the following:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from person order by age;&lt;br/&gt;
NAME      |AGE&lt;br/&gt;
----------------------&lt;br/&gt;
john      |10&lt;br/&gt;
john      |30&lt;br/&gt;
mary      |50&lt;/p&gt;

&lt;p&gt;If we sort the rows by person.age the order is, in fact, &quot;john, john, mary&quot;.  So from that it&apos;s hard to tell whether 10.2 sorted the query on the alias &quot;AGE&quot; (meaning column NAME) or the actual column AGE.  But when I added another row, (&apos;zack&apos;, 5), we see the problem you&apos;re talking about:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into person values (&apos;zack&apos;, 5);&lt;br/&gt;
1 row inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;ij&amp;gt;  select person.name as age from person order by person.age;&lt;br/&gt;
AGE&lt;br/&gt;
----------&lt;br/&gt;
john&lt;br/&gt;
john&lt;br/&gt;
mary&lt;br/&gt;
zack&lt;/p&gt;

&lt;p&gt;Since we&apos;re supposed to be sorting by person.age, zack should be first, not last.  So you&apos;re right, 10.2 seems wrong.&lt;/p&gt;

&lt;p&gt;&amp;gt; how bad is it to break these queries? They did not throw errors before, but were they&lt;br/&gt;
&amp;gt; giving the correct results?&lt;/p&gt;

&lt;p&gt;I agree with Thomas in that it seems reasonable to throw an error instead of returning wrong results--as long as we indicate to users that such a change happens.  Which is, incidentally, exactly what the original fix for this issue did: a query that used to work is now rejected as invalid.&lt;/p&gt;

&lt;p&gt;And that in turn begs the question: should this issue have been marked &quot;Existing Application Impact&quot; since the solution affects existing applications (queries that used to run without error will now fail)?  Seems like 10.3.2.1 was released with the initial fix, which changed the behavior, but no indication of existing application impact was made.  I assume that was unintentional?&lt;/p&gt;</comment>
                            <comment id="12575072" author="bryanpendleton" created="Tue, 4 Mar 2008 17:47:42 +0000"  >&lt;p&gt;The fix to this issue may impact existing applications because some&lt;br/&gt;
queries which were previously accepted and executed will now&lt;br/&gt;
return errors. The intent of the fix is that the only queries that fall&lt;br/&gt;
into that category are those which are ambiguous due to the fact&lt;br/&gt;
that they specify a DISTINCT set of results, but the ORDER BY clause&lt;br/&gt;
mentions one or more columns which are not present in the DISTINCT&lt;br/&gt;
clause, introducing an ambiguity about how to perform the ordering&lt;br/&gt;
when there exist multiple rows with the same values for the DISTINCT&lt;br/&gt;
column(s) but different values for the ORDER BY columns.&lt;/p&gt;</comment>
                            <comment id="12575469" author="army" created="Wed, 5 Mar 2008 19:33:51 +0000"  >&lt;p&gt;Army&amp;gt; it seems reasonable to throw an error instead of returning wrong results--as long&lt;br/&gt;
Army&amp;gt; as we indicate to users that such a change happens.&lt;/p&gt;

&lt;p&gt;Perhaps this is obvious, but it occurs to me that the difference between the query being discussed and the query that was originally disallowed by changes for this Jira is that the latter was disallowed because the semantics are not defined, while the former has a well-defined behavior that Derby fails to accomplish.  I don&apos;t think this changes the fact that it&apos;s (probably) better to throw an error than to allow wrong results, but I &lt;b&gt;do&lt;/b&gt; think that if a commit is made which causes the second query (from Bryan&apos;s Mar 03 comments) to start throwing an error (instead of returning results in the wrong order), it would be good to file another Jira defect to indicate that such an error is due to a known (current) Derby limitation.&lt;/p&gt;</comment>
                            <comment id="12575557" author="bryanpendleton" created="Thu, 6 Mar 2008 04:29:09 +0000"  >&lt;p&gt;Thomas, I thought that your suggestion about using different&lt;br/&gt;
name resolution rules depending on whether the ORDER BY&lt;br/&gt;
column reference was qualified or unqualified was excellent,&lt;br/&gt;
and I decided to give it a try.&lt;/p&gt;

&lt;p&gt;Attached is d2351_aliasing_checkQualifiedName.diff,&lt;br/&gt;
which uses different resolution rules depending on whether&lt;br/&gt;
the ORDER BY column reference is table.column, or just column:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if the table name is provided, we match against the&lt;br/&gt;
   underlying table name, and don&apos;t consider any aliases&lt;/li&gt;
	&lt;li&gt;if the table name is NOT provided, we first match against&lt;br/&gt;
   the alias name, if present, and if no alias name matches&lt;br/&gt;
   then we match against the underlying source column name.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It seems to resolve the problematic queries that we&apos;ve been&lt;br/&gt;
discussing over the past several days, and doesn&apos;t obviously&lt;br/&gt;
break any of the other queries in the orderby.sql suite.&lt;/p&gt;

&lt;p&gt;I&apos;m running a more complete set of regression tests overnight.&lt;br/&gt;
Please have a look at this latest patch and let me know what you think.&lt;/p&gt;</comment>
                            <comment id="12575641" author="thomanie" created="Thu, 6 Mar 2008 10:14:06 +0000"  >&lt;p&gt;That&apos;s good news Bryan &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;One thing you could perhaps fix is the mix of spaces and tabs in the diff? Other than that it looks good.&lt;/p&gt;

&lt;p&gt;The updated orberby.sql test seems to cover the different cases nicely, and runs those queries successfully.&lt;br/&gt;
I did however get one new error in the lang._Suite that looks related to the change:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;1) synonym(org.apache.derbyTesting.functionTests.tests.lang.LangScripts)junit.framework.ComparisonFailure: Output at line 526 expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;IDCOLUMN1           |IDCOLUMN2           &amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR 42X04: Column &amp;#39;T1.IDCOLUMN1&amp;#39; is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE  statement then &amp;#39;T1.IDCOLUMN1&amp;#39; is not a column in the target table.&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:100)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(ScriptTestCase.java:124)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:101)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
&amp;#8212;&lt;/p&gt;</comment>
                            <comment id="12575722" author="bryanpendleton" created="Thu, 6 Mar 2008 14:49:20 +0000"  >&lt;p&gt;Hi Thomas, thanks for catching this. I see the same failure in my environment.&lt;/p&gt;

&lt;p&gt;Here&apos;s the statement in question:&lt;/p&gt;

&lt;p&gt;    select t1.id as idcolumn1, t1.id as idcolumn2 from t1 order by t1.idcolumn1, t1.idcolumn2;&lt;/p&gt;

&lt;p&gt;Without my patch, it binds &quot;t1.idcolumn1&quot; to the alias &quot;idcolumn1&quot;,&lt;br/&gt;
but with my patch it rejects the query because there is no column&lt;br/&gt;
&quot;idcolumn1&quot; in table &quot;t1&quot;.&lt;/p&gt;

&lt;p&gt;The behavior of the patch seems &quot;correct&quot;, according to the rules we discussed.&lt;/p&gt;

&lt;p&gt;But it does cause a query which was formerly accepted, to be rejected.&lt;/p&gt;

&lt;p&gt;My feeling is that the query above deserves to be rejected, but I wonder if anyone&lt;br/&gt;
knows what the SQL Standard says about the construct &quot;tablename.aliasname&quot;?&lt;/p&gt;
</comment>
                            <comment id="12575727" author="bryanpendleton" created="Thu, 6 Mar 2008 14:54:39 +0000"  >&lt;p&gt;I suppose one last try would be:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;unqualified ORDER BY reference: bind first to alias, then to column in (any) underlying table&lt;/li&gt;
	&lt;li&gt;qualified ORDER BY reference: bind first to column in corresponding underlying table, then to alias&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That would make the nasty query from synonym.sql work, I suppose,&lt;br/&gt;
but it doesn&apos;t feel like very pleasant code to need to write. If I could&lt;br/&gt;
start from scratch I&apos;d prefer to make all these ambiguous cases be&lt;br/&gt;
errors, as I suspect that users don&apos;t really want to relabel one column&lt;br/&gt;
with an identical name to another column; they&apos;d prefer to always choose&lt;br/&gt;
unique alias names and have no ambiguity about their queries.&lt;/p&gt;
</comment>
                            <comment id="12575763" author="army" created="Thu, 6 Mar 2008 16:38:10 +0000"  >&lt;p&gt;I haven&apos;t reviewed the latest patch yet, but regarding:&lt;/p&gt;

&lt;p&gt;&amp;gt;     select t1.id as idcolumn1, t1.id as idcolumn2 from t1 order by t1.idcolumn1, t1.idcolumn2;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; The behavior of the patch seems &quot;correct&quot;, according to the rules we discussed.&lt;br/&gt;
&amp;gt; My feeling is that the query above deserves to be rejected&lt;/p&gt;

&lt;p&gt;I agree with Bryan on this one, i.e. it seems reasonable to throw an error in this case.  I did try something similar on DB2 v8 and it throws an error:&lt;/p&gt;

&lt;p&gt;  select t1.i as a, t1.j as b from t1 order by t1.a, t1.b&lt;br/&gt;
  SQL0206N &quot;T1.A&quot; is not valid in the context where it is used.&lt;/p&gt;

&lt;p&gt;  select t1.i as a, t1.j as b from t1 order by t1.i, t1.b&lt;br/&gt;
  SQL0206N &quot;T1.B&quot; is not valid in the context where it is used.&lt;/p&gt;

&lt;p&gt;  select t1.i as a, t1.j as b from t1 order by t1.i, t1.j&lt;br/&gt;
  &amp;lt;works as expected&amp;gt;&lt;/p&gt;

&lt;p&gt;So there is a precedent, for what it&apos;s worth...&lt;/p&gt;</comment>
                            <comment id="12575775" author="thomanie" created="Thu, 6 Mar 2008 17:03:20 +0000"  >&lt;p&gt;Just to add to the bahavioural patterns - running the queries Army posted though another OSDB give the same results as Army see in DB2:&lt;/p&gt;

&lt;p&gt;select t1.c1 as i, t1.c2 as j from t1 order by t1.i, t1.j ;&lt;br/&gt;
ERROR: column t1.i does not exist&lt;br/&gt;
SQL state: 42703&lt;br/&gt;
Character: 48&lt;/p&gt;

&lt;p&gt;select t1.c1 as a, t1.c2 as b from t1 order by t1.i, t1.c2 &lt;br/&gt;
ERROR: column t1.i does not exist&lt;br/&gt;
SQL state: 42703&lt;br/&gt;
Character: 49&lt;/p&gt;

&lt;p&gt;select t1.c1 as a, t1.c2 as b from t1 order by t1.c1, t1.c2&lt;br/&gt;
&amp;lt;works as expected&amp;gt; &lt;/p&gt;</comment>
                            <comment id="12576033" author="bryanpendleton" created="Fri, 7 Mar 2008 04:23:44 +0000"  >&lt;p&gt;Thanks Thomas and Army for investigating the behavior of other DB&apos;s. &lt;br/&gt;
This is encouraging, for it seems to substantiate our understanding&lt;br/&gt;
of how the binding rules ought to behave.&lt;/p&gt;

&lt;p&gt;Another unresolved question involves the queries in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3373&quot; title=&quot;SQL &amp;quot;distinct&amp;quot; and &amp;quot;order by&amp;quot; needed together&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3373&quot;&gt;&lt;del&gt;DERBY-3373&lt;/del&gt;&lt;/a&gt;; it&lt;br/&gt;
would be nice to construct a patch which solved those problems as well.&lt;br/&gt;
However, the problem in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3373&quot; title=&quot;SQL &amp;quot;distinct&amp;quot; and &amp;quot;order by&amp;quot; needed together&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3373&quot;&gt;&lt;del&gt;DERBY-3373&lt;/del&gt;&lt;/a&gt; is rather different than the ones&lt;br/&gt;
we&apos;ve been discussing here recently, as it doesn&apos;t involve aliasing, but&lt;br/&gt;
rather involves the difference between an expression which refers to a&lt;br/&gt;
column, and a simple direct column reference.&lt;/p&gt;</comment>
                            <comment id="12576558" author="bryanpendleton" created="Sat, 8 Mar 2008 16:12:03 +0000"  >&lt;p&gt;I&apos;m considering modifying synonym.out to reflect that &lt;/p&gt;

&lt;p&gt;    select t1.id as idcolumn1, t1.id as idcolumn2 from t1 order by t1.idcolumn1, t1.idcolumn2; &lt;/p&gt;

&lt;p&gt;should get an error, and then proceeding with a commit of this patch.&lt;/p&gt;

&lt;p&gt;I think that the patch improves substantially upon the current behavior&lt;br/&gt;
of the trunk, accepting many more legitimate queries and refusing only&lt;br/&gt;
more questionable queries.&lt;/p&gt;

&lt;p&gt;I think the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3373&quot; title=&quot;SQL &amp;quot;distinct&amp;quot; and &amp;quot;order by&amp;quot; needed together&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3373&quot;&gt;&lt;del&gt;DERBY-3373&lt;/del&gt;&lt;/a&gt; issue can be addressed separately.&lt;/p&gt;</comment>
                            <comment id="12576610" author="bryanpendleton" created="Sat, 8 Mar 2008 20:45:15 +0000"  >&lt;p&gt;Patch &apos;modifySynonymResult.diff&apos; includes the modifies results for the synonym test.&lt;/p&gt;

&lt;p&gt;I think this patch is worthy of commit; please have a&lt;br/&gt;
look and let me know what you think.&lt;/p&gt;</comment>
                            <comment id="12576898" author="thomanie" created="Mon, 10 Mar 2008 08:48:41 +0000"  >&lt;p&gt;I agree, &apos;modifySynonymResult.diff&apos; is worthy of commit.&lt;/p&gt;</comment>
                            <comment id="12577058" author="army" created="Mon, 10 Mar 2008 16:27:42 +0000"  >&lt;p&gt;modifySynonymResult.diff looks good to me.  Might be nice if the whitespace inconsistencies could be patched up a bit, but functionally I think the patch is good.&lt;/p&gt;

&lt;p&gt;Two minor suggestions:&lt;/p&gt;

&lt;p&gt;1) Could the logic in ColumnReference.columnNameMatches() use the new &quot;getSourceColumnName()&quot; method, instead of duplicating the &quot;instanceof ColumnReference&quot; check?&lt;/p&gt;

&lt;p&gt;2) Do you think it would be worth it add some sanity queries for table aliasing, as well?  Ex, I ran the following:&lt;/p&gt;

&lt;p&gt;  &amp;#8211; All succeed.&lt;br/&gt;
  select distinct i a from t1 hmm order by i;&lt;br/&gt;
  select distinct i a from t1 hmm order by a;&lt;br/&gt;
  select distinct i a from t1 hmm order by hmm.i;&lt;/p&gt;

&lt;p&gt;  &amp;#8211; All throw an error.&lt;br/&gt;
  select distinct i a from t1 hmm order by t1.i;&lt;br/&gt;
  select distinct i a from t1 hmm order by t1.a;&lt;br/&gt;
  select distinct i a from t1 hmm order by hmm.a;&lt;/p&gt;

&lt;p&gt;From what I can tell treatment of all of the above queries is correct, so this would just be a matter of adding them to the test script.  That could come as a separate patch, though.&lt;/p&gt;

&lt;p&gt;Thanks for your persistence on this one, Bryan!&lt;/p&gt;</comment>
                            <comment id="12578124" author="bryanpendleton" created="Thu, 13 Mar 2008 03:02:16 +0000"  >&lt;p&gt;Thanks Army and Thomas for the continued help! I re-worked modifySynonymResult.diff&lt;br/&gt;
slightly to incorporate Army&apos;s suggestions and committed it to the trunk as revision 636608.&lt;/p&gt;

&lt;p&gt;If no additional problems arise with this patch in the trunk, I&apos;ll investigate merging&lt;br/&gt;
back to the 10.4 branch.&lt;/p&gt;</comment>
                            <comment id="12579156" author="bryanpendleton" created="Sun, 16 Mar 2008 03:51:37 +0000"  >&lt;p&gt;I merged the patch to the 10.4 branch and re-ran the tests without incident.&lt;br/&gt;
I committed the change to the 10.4 branch as revision 637526.&lt;/p&gt;</comment>
                            <comment id="12580133" author="dyret" created="Tue, 18 Mar 2008 22:13:20 +0000"  >&lt;p&gt;This issue has fix version 10.4 and is marked with either &apos;Release note needed&apos; or &apos;Existing application impact&apos;, but does not have a releaseNote.html attached to it. Should it?&lt;/p&gt;</comment>
                            <comment id="12580429" author="bryanpendleton" created="Wed, 19 Mar 2008 16:07:37 +0000"  >&lt;p&gt;I agree, it should have a release note. I&apos;ll try to get one written soon.&lt;/p&gt;</comment>
                            <comment id="12580664" author="bryanpendleton" created="Thu, 20 Mar 2008 05:20:20 +0000"  >&lt;p&gt;A draft release note. Please review.&lt;/p&gt;</comment>
                            <comment id="12580780" author="bryanpendleton" created="Thu, 20 Mar 2008 14:42:41 +0000"  >&lt;p&gt;I updated the release note this morning after realizing that this&lt;br/&gt;
issue has two application-visible impacts.&lt;/p&gt;

&lt;p&gt;Please review the revised releaseNote.html.&lt;/p&gt;</comment>
                            <comment id="12581113" author="bryanpendleton" created="Fri, 21 Mar 2008 16:19:45 +0000"  >&lt;p&gt;Merged the modifySynonymResult.diff patch to the 10.3 branch as revision 639696.&lt;/p&gt;</comment>
                            <comment id="12581826" author="thomanie" created="Tue, 25 Mar 2008 08:16:26 +0000"  >&lt;p&gt;Updated releaseNote.html looks good IMHO &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12584133" author="rhillegas" created="Tue, 1 Apr 2008 14:29:51 +0100"  >&lt;p&gt;Scrubbed the release note so that it will survive the syntax checks enforced by ReleaseNoteReader.&lt;/p&gt;</comment>
                            <comment id="12584455" author="dyret" created="Wed, 2 Apr 2008 09:29:04 +0100"  >&lt;p&gt;Checking &apos;release note needed&apos; so the release note filter can pick it up.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12387624">DERBY-3373</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12355687">DERBY-2085</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12371426">DERBY-2805</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12377030" name="d2351_aliasing.diff" size="8788" author="bryanpendleton" created="Tue, 4 Mar 2008 04:34:52 +0000"/>
                            <attachment id="12376944" name="d2351_aliasing.diff" size="7459" author="bryanpendleton" created="Sun, 2 Mar 2008 22:42:25 +0000"/>
                            <attachment id="12377226" name="d2351_aliasing_checkQualifiedName.diff" size="11422" author="bryanpendleton" created="Thu, 6 Mar 2008 04:29:09 +0000"/>
                            <attachment id="12359951" name="derby_2351.diff" size="8747" author="bryanpendleton" created="Sun, 17 Jun 2007 04:30:55 +0100"/>
                            <attachment id="12359958" name="derby_2351_v2.diff" size="10398" author="bryanpendleton" created="Sun, 17 Jun 2007 20:42:07 +0100"/>
                            <attachment id="12377457" name="modifySynonymResults.diff" size="12580" author="bryanpendleton" created="Sat, 8 Mar 2008 20:45:15 +0000"/>
                            <attachment id="12379028" name="releaseNote.html" size="6109" author="rhillegas" created="Tue, 1 Apr 2008 14:29:51 +0100"/>
                            <attachment id="12378317" name="releaseNote.html" size="6095" author="bryanpendleton" created="Thu, 20 Mar 2008 14:42:41 +0000"/>
                            <attachment id="12378296" name="releaseNote.html" size="4327" author="bryanpendleton" created="Thu, 20 Mar 2008 05:20:20 +0000"/>
                            <attachment id="12359377" name="reproTests.diff" size="5499" author="bryanpendleton" created="Sun, 10 Jun 2007 22:45:30 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Feb 2007 01:29:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23013</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37490</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>