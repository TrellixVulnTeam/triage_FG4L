<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:14:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-803/DERBY-803.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-803] derbynet/DerbyNetAutoStart.java test fails intermittently with org.apache.derby.iapi.services.context.ShutdownException</title>
                <link>https://issues.apache.org/jira/browse/DERBY-803</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;DerbyNetAutoStart fails intermittently with the following diff:&lt;/p&gt;

&lt;p&gt;This issue is likely related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/derbynetmats/DerbyNet/derbynetmats/DerbyNetAutoStart.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-01-05 23:39:40 ***&lt;br/&gt;
1a2,3&lt;br/&gt;
&amp;gt; org.apache.derby.iapi.services.context.ShutdownException: &lt;br/&gt;
&amp;gt; 	at org.apache.derby.impl.drda.Session.close(Unknown Source)agentThread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,derby.daemons&amp;#93;&lt;/span&gt;&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-01-05 23:41:10 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12327439">DERBY-803</key>
            <summary>derbynet/DerbyNetAutoStart.java test fails intermittently with org.apache.derby.iapi.services.context.ShutdownException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fernanda">Fernanda Pizzorno</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Jan 2006 04:21:52 +0000</created>
                <updated>Wed, 1 Jul 2009 01:09:14 +0100</updated>
                            <resolved>Tue, 19 Sep 2006 07:57:31 +0100</resolved>
                                    <version>10.1.3.2</version>
                    <version>10.2.1.6</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12362239" author="kmarsden" created="Tue, 10 Jan 2006 04:24:22 +0000"  >&lt;p&gt;In this test an intentional shutdown causes the close of the connection by network server to encounter an error that prints to the console.  It appears it may be  the same issue as  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12414324" author="deepa" created="Fri, 2 Jun 2006 08:15:54 +0100"  >&lt;p&gt;I have not been able to repro this intermittent failure on my machine. I was using the stack traces attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt; to try to understand the scenario. I am thinking of following options to solve this problem:&lt;/p&gt;

&lt;p&gt;1. Solve the intermittent test failure by using the same solution as in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt;. This will solve the test issue.&lt;br/&gt;
2. Try to see if we can distinguish &quot;expected&quot; exceptions during shutdown and ignore them. However, I don&apos;t see a clear way of distinguishing this.&lt;br/&gt;
3. I think the following thread explains the scenario:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/-jira--Commented%3A-%28DERBY-273%29-The-derbynet-dataSourcePermissions_net.java-test-fails-intermittently-p190292.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/-jira--Commented%3A-%28DERBY-273%29-The-derbynet-dataSourcePermissions_net.java-test-fails-intermittently-p190292.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scenario is: Server is shutdown. One of the threads finds that the client has disconnected. It tries to close the session but gets an exception during rollback because the shutdown has already taken place.&lt;/p&gt;

&lt;p&gt;The code where closeSession gets called is in DRDAConnThread.run method:&lt;/p&gt;

&lt;p&gt;} catch (Exception e) {&lt;br/&gt;
				if (e instanceof DRDAProtocolException &amp;amp;&amp;amp; &lt;br/&gt;
						((DRDAProtocolException)e).isDisconnectException())&lt;/p&gt;
				{
				 	// client went away - this is O.K. here
					closeSession();
				}
&lt;p&gt;				else&lt;/p&gt;
				{
					handleException(e);
				}
&lt;p&gt;			}&lt;/p&gt;

&lt;p&gt;In this scenario, since the client has already disconnected, can we ignore the exceptions when closing the session? Then, we can pass a flag to closeSession method asking to ignore exceptions if we are calling it when we receive a DisconnectException in the server. Any comments/suggestions ? &lt;/p&gt;</comment>
                            <comment id="12416098" author="mikem" created="Wed, 14 Jun 2006 06:56:55 +0100"  >&lt;p&gt;I got the diff in a run against trunk - build 413780&lt;/p&gt;

&lt;p&gt;Failure Details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/derbynetclientmats/DerbyNetClient/derbynetmats/derbynetmats/DerbyNetAutoStart.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: DerbyNetAutoStart jdk1.5.0_02 DerbyNetClient derbynetmats:derbynetmats 2006-06-12 21:15:02 ***&lt;br/&gt;
2a3,4&lt;br/&gt;
&amp;gt; SQL Exception: No current connection.&lt;br/&gt;
&amp;gt; agentThread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_7,5,derby.daemons&amp;#93;&lt;/span&gt;&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   DerbyNetAutoStart jdk1.5.0_02 DerbyNetClient derbynetmats:derbynetmats 2006-06-12 21:15:46 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12417196" author="deepa" created="Thu, 22 Jun 2006 05:40:33 +0100"  >&lt;p&gt;Of late, I see this intermittent test failure is reported by few people. However, I have not been able to repro this issue on my machine. I am unassigning myself from this issue thinking someone else may be interested to pick it up.&lt;/p&gt;

&lt;p&gt;Here is what I have found along with a recap of the discussions so far on this issue and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This test uses derby.drda.startNetworkServer property. It checks that when embedded driver is loaded, it starts network server and when we do a system shutdown, it shuts down network server.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The shutdown of network server happens asynchronously. DRDAServerStarter calls NetworkServerControlImpl.directShutdown which simply notifies the waiting thread and returns. Thus the shutdown of network server happens in parallel with remaining shutdown processing in the engine.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Network server shutdown involves rollback and close of the EngineConnection object. Before calling these methods, it checks that the connection is not closed. From this, it seemed that this exception can occur only if the engine shutdown takes place in the meantime (after we check conn.isClosed() and when we are in conn.rollback())&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think the exception occurs when the system shutdown happens in the meantime:&lt;/p&gt;

&lt;p&gt;			if ((conn != null) &amp;amp;&amp;amp; !conn.isClosed())&lt;br/&gt;
			{&lt;br/&gt;
				// --------------------------&amp;gt; Derby shutdown&lt;br/&gt;
				if (! forXA)&lt;/p&gt;
				{
					conn.rollback();
				}&lt;br/&gt;
				conn.close();					&lt;br/&gt;
			}&lt;br/&gt;
			&lt;br/&gt;
&lt;br/&gt;
The closest I have been able to simulating this error is only by introducing a sleep here:&lt;br/&gt;
&lt;br/&gt;
			if ((conn != null) &amp;amp;&amp;amp; !conn.isClosed())&lt;br/&gt;
			{&lt;br/&gt;
				// Introduce a sleep here ... just an attempt to simulate the failure&lt;br/&gt;
				try {
					Thread.sleep(5000);
				} catch (InterruptedException ie) {
					// 
				}&lt;br/&gt;
				if(conn.isClosed()) {
					System.out.println(&quot;Connection has been closed in the meantime !!!&quot;);
				}&lt;br/&gt;
&lt;br/&gt;
				if (! forXA)&lt;br/&gt;
				{
					conn.rollback();
				}
&lt;p&gt;				conn.close();					&lt;br/&gt;
			}&lt;/p&gt;

&lt;p&gt;If I run the test with this additional sleep, I always get &quot;Connection has been closed in the meantime !!!&quot; message and an exception in conn.rollback().&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Irrespective of where the exception happens, the gist of the problem is what Kathey reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt; (Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Possible solutions. These are just some ideas:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;1. Catch any SQLExceptions thrown in conn.rollback() and conn.close(). In the catch block, call conn.isClosed() to check if connection has been closed. If so, ignore the exception. However, this solution has drawback because we do not know if the connection is no longer active because of some unexpected event. Kathey made this comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt; &lt;br/&gt;
&quot;&lt;br/&gt;
If an exception happens on rollback() or close() there are basically three scenarios&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;/p&gt;

&lt;p&gt;3) The connection is no longer active because of some unexpected event like a crash. There has been some debate in the past whether this type of exception needs to be logged. I thought session level exceptions in this block of code could safely be ignored since the fact that they were session severity meant the session was shutdown. Tomohito thought it was not good to ignore them and I understand that point.&lt;/p&gt;


&lt;p&gt;&quot;&lt;br/&gt;
Based on this, it may not be okay to just ignore exceptions.&lt;/p&gt;

&lt;p&gt;2. Use NetworkServerControlImpl.shutdown instead of NetworkServerControlImpl.directShutdown method. This is to ensure network server has done all the cleanup related to shutdown before we proceed with rest of shutdown processing in the engine. However, this will slow down the shutdown processing.&lt;/p&gt;

&lt;p&gt;3. Modify the test to redirect the exceptions during shutdown, similar to what is done in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt; for dataSourcePermissions_net test. This way, we can avoid seeing the intermittent failures in the regression test runs. This will not solve the real problem. Also, we may miss some real exceptions. &lt;/p&gt;</comment>
                            <comment id="12423857" author="fernanda" created="Thu, 27 Jul 2006 16:22:24 +0100"  >&lt;p&gt;I have managed to reproduce this failure, and I agree with Deepa&apos;s interpretation of what is happening. In the attached file (suggestion-803.diff), I have implemented an alternative solution to this problem than those suggested earlier. I have added the method rollbackAndClose() to EngineConnection. This method will check that the connection is opened, rollback and close the connection in a synchronized manner. This diff is not intended to be committed but I would appreciate if someone could comment the approach. Thank you!&lt;/p&gt;</comment>
                            <comment id="12423919" author="deepa" created="Thu, 27 Jul 2006 21:56:27 +0100"  >&lt;p&gt;Thanks Fernanda for picking this up. &lt;/p&gt;

&lt;p&gt;I am wondering if this solution will fix all cases. I think this solution is in same lines as what was discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt; (use of forceClose() method) to do a rollback and close together. At that time itself, I was not convinced this solution will solve the problem. There are at least three different exceptions seen during shutdown in this test (stack traces are spread between &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-803&quot; title=&quot;derbynet/DerbyNetAutoStart.java test fails intermittently with org.apache.derby.iapi.services.context.ShutdownException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-803&quot;&gt;&lt;del&gt;DERBY-803&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;). As seen from the stack traces, these exceptions can occur at calls to conn.rollback() or conn.close().  In a previous comment, Mike had posted another exception: &quot;SQL Exception: No current connection. &quot; The full stack trace for this exception is:&lt;br/&gt;
java.sql.SQLException: No current connection.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:44)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:104)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Util.java:208)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(EmbedConnection.java:1335)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(EmbedConnection.java:1513)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.close(EmbedConnection.java:992)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.close(EmbedConnection.java:970)&lt;br/&gt;
	at org.apache.derby.impl.drda.Database.close(Database.java:320)&lt;br/&gt;
	at org.apache.derby.impl.drda.Session.close(Session.java:110)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.closeSession(DRDAConnThread.java:7270)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:269)&lt;/p&gt;

&lt;p&gt;This is similar to the exception I was getting when I was trying to simulate the failure by adding a sleep. When the network server thread was sleeping, the engine shutdown runs to completion and so I was getting  &quot;SQL Exception: No current connection. &quot;.&lt;/p&gt;

&lt;p&gt;I think we can get these exceptions when we call conn.close() or conn.rollback() during shutdown of network server and in the meantime engine shutdown is:&lt;br/&gt;
1)  in progress - In this case, we get org.apache.derby.iapi.services.context.ShutdownException&lt;br/&gt;
2)  complete  - In this case, we get java.sql.SQLException: No current connection.  &lt;/p&gt;

&lt;p&gt;I may be mistaken here but just wanted to share my thoughts. &lt;/p&gt;

&lt;p&gt;Leaving my thoughts aside, if this patch solves the failure on your machine, then it may be okay to proceed with this approach. I have only a small comment about the changes in the patch. It may not be okay to remove this check &quot;if ((conn != null) &amp;amp;&amp;amp; !conn.isClosed())&quot; before calling conn.rollbackAndClose() or conn.close() in Database.close().  I think we need to at least check the case that conn is not null.&lt;/p&gt;</comment>
                            <comment id="12430273" author="fernanda" created="Thu, 24 Aug 2006 16:39:09 +0100"  >&lt;p&gt;I have tested the solution using the rollbackAndClose() method (semantically equal to the forceClose() method discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;) and it actually does not help avoiding any of the exceptions seen in this issue from happening.&lt;/p&gt;

&lt;p&gt;The rollbackAndClose() method checks that the connection is open, rolls back and closes the connection synchronized on the connection. This does not prevent the exceptions from happening because the connection is being closed implicitly when the server shutdown stops the InternalDriver and/or the Database. Since the connection is being closed using its close method, the synchronization that was added does not prevent the connection from being closed by the shutdown (since that does not synchronize on the connection object).&lt;/p&gt;

&lt;p&gt;In my opinion there are two possible solutions for this issue: (1) change the test so that the set of exceptions will either not happen or does not show in the diff; (2) distinguish the exceptions that happen because the server was shut down from those happening for other reasons (Kathey Marsden has enumerated the scenarios in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;), and ignore those that happen because the server was shut down.&lt;/p&gt;

&lt;p&gt;I think that (2) is a better solution, and I was wondering whether we can say that exceptions that happen during rollbackAndClose() can be considered as exceptions that happen due to a server shutdown iff (i)the connection is closed at the time the exception happens, and (ii)the session is being closed because the client left? For example, is there any other way to stop InternalDriver and/or the Database than a shutdown?&lt;/p&gt;</comment>
                            <comment id="12430632" author="tsuresh" created="Fri, 25 Aug 2006 22:25:05 +0100"  >&lt;p&gt;This test  is  failing  with  a different  error message  also , might be related to the same  issue:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbynetmats/DerbyNet/derbynetmats/DerbyNetAutoStart.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-08-25 11:00:42 ***&lt;br/&gt;
1a2,4&lt;br/&gt;
&amp;gt; java.sql.SQLException: No current connection.&lt;br/&gt;
&amp;gt; agentError in Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_3,5,derby.daemons&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;gt; org.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = database1; diagnostic msg = No current connection.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-08-25 11:01:29 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12433150" author="knutanders" created="Thu, 7 Sep 2006 16:50:23 +0100"  >&lt;p&gt;Couldn&apos;t we just wrap DRDAConnThread.run()&apos;s call to closeSession() in a synchronized block (synchronizing on NetworkServerControlImpl.getShutdownSync()) and only call it if NetworkServerControlImpl.getShutdown() returns false? The server shutdown will take care of closing the sessions anyway.&lt;/p&gt;</comment>
                            <comment id="12433256" author="mikem" created="Thu, 7 Sep 2006 23:07:46 +0100"  >&lt;p&gt;I am seeing the following similar to what Suresh reported, against an ibm1.4.2 jvm, against the trunk&lt;/p&gt;

&lt;p&gt;Generating report for RunSuite derbynetmats  null null DerbyNet true &lt;br/&gt;
------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.4.2&lt;br/&gt;
Java Vendor:     IBM Corporation&lt;br/&gt;
Java home:       c:\cloudtst\jartest\ibm142\jre&lt;br/&gt;
Java classpath:  c:/cloudtst/jartest/classes/derby.jar;c:/cloudtst/jartest/classes/derbytools.jar;c:/cloudtst/jartest/classes/derbynet.jar;c:/cloudtst/jartest/classes/derbyclient.jar;c:/cloudtst/jartest/classes/functionTests.jar;c:/cloudtst/jartest/classes/derbyTesting.jar;c:/cloudtst/jartest/tools/java/jndi/fscontext.jar;c:/cloudtst/jartest/drda/jcc/2.6_latest/db2jcc.jar;c:/cloudtst/jartest/drda/jcc/2.6_latest/db2jcc_license_c.jar;c:/cloudtst/jartest/tools/java/junit.jar;c:/cloudtst/jartest/classes/derbyLocale_zh_TW.jar;c:/cloudtst/jartest/classes/derbyLocale_zh_CN.jar;c:/cloudtst/jartest/classes/derbyLocale_pt_BR.jar;c:/cloudtst/jartest/classes/derbyLocale_ko_KR.jar;c:/cloudtst/jartest/classes/derbyLocale_ja_JP.jar;c:/cloudtst/jartest/classes/derbyLocale_it.jar;c:/cloudtst/jartest/classes/derbyLocale_fr.jar;c:/cloudtst/jartest/classes/derbyLocale_es.jar;c:/cloudtst/jartest/classes/derbyLocale_de_DE.jar;&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1&lt;br/&gt;
Java user name:  cloudtest&lt;br/&gt;
Java user home:  C:\Documents and Settings\cloudtest&lt;br/&gt;
Java user dir:   C:\cloudtst\jartest\JarResults.2006-09-06\ibm142_derbynetmats_jcc_2.6_latest&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.4&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\classes\derby.jar&amp;#93;&lt;/span&gt; 10.3.0.0 alpha - (440936)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\classes\derbytools.jar&amp;#93;&lt;/span&gt; 10.3.0.0 alpha - (440936)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\classes\derbynet.jar&amp;#93;&lt;/span&gt; 10.3.0.0 alpha - (440936)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\classes\derbyClient.jar&amp;#93;&lt;/span&gt; 10.3.0.0 alpha - (440936)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\drda\jcc\2.6_latest\db2jcc.jar&amp;#93;&lt;/span&gt; 2.6 - (87)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\cloudtst\jartest\drda\jcc\2.6_latest\db2jcc_license_c.jar&amp;#93;&lt;/span&gt; 2.6 - (87)&lt;br/&gt;
------------------------------------------------------&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-09-07 11:22:14 ***&lt;br/&gt;
1a2,4&lt;br/&gt;
&amp;gt; org.apache.derby.iapi.services.context.ShutdownException: &lt;br/&gt;
&amp;gt; agentError in Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_5,5,derby.daemons&amp;#93;&lt;/span&gt;&lt;br/&gt;
&amp;gt; org.apache.derby.impl.drda.DRDAProtocolException: Execution failed because of Permanent Agent Error: SVRCOD = 40; RDBNAM = database1; diagnostic msg = Java exception: &apos;: org.apache.derby.iapi.services.context.ShutdownException&apos;.&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   DerbyNetAutoStart jdk1.4.2 DerbyNet derbynetmats:derbynetmats 2006-09-07 11:23:11 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12433859" author="fernanda" created="Mon, 11 Sep 2006 14:57:20 +0100"  >&lt;p&gt;The attached patch (derby-803.diff) changes the test so that the exception will not happen. I have successfully run the DerbyNetAutoStart 100 times with this patch.&lt;/p&gt;</comment>
                            <comment id="12434076" author="knutanders" created="Tue, 12 Sep 2006 08:00:37 +0100"  >&lt;p&gt;Thank you, Fernanda! Although your patch only works around the problem, I think the fix is OK. The general problem is logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1020&quot; title=&quot;Network Server treats errors on cleanup of connections as an unexpected error after intentional shutdown of the database/server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1020&quot;&gt;DERBY-1020&lt;/a&gt;, and until it has been fixed, I think it is good to have a workaround which makes this test run cleanly. I added a comment about why the sleep was needed and committed revision 442490.&lt;/p&gt;

&lt;p&gt;Leaving the issue open until it has been merged to 10.2.&lt;/p&gt;</comment>
                            <comment id="12435705" author="knutanders" created="Tue, 19 Sep 2006 07:57:30 +0100"  >&lt;p&gt;Merged to 10.2 in Rick&apos;s mega-merge.&lt;/p&gt;</comment>
                            <comment id="12441314" author="skambha" created="Wed, 11 Oct 2006 00:08:56 +0100"  >&lt;p&gt;This test fails on 10.1.3.2 also. Does it make sense for this fix to be  backported to 10.1 codeline ?&lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12441356" author="fuzzylogic" created="Wed, 11 Oct 2006 07:19:15 +0100"  >&lt;p&gt;Since this was a minor change to the test that fixed the problem, and this test is a bit of an annoyance for 10.1 testing, I merged Fernanda&apos;s test change to 10.1 with revision 462705.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12329278">DERBY-1020</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="32498">DERBY-273</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348473">DERBY-1751</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12340570" name="derby-803.diff" size="730" author="" created="Mon, 11 Sep 2006 14:46:48 +0100"/>
                            <attachment id="12340571" name="derby-803.stat" size="162" author="" created="Mon, 11 Sep 2006 14:46:48 +0100"/>
                            <attachment id="12337644" name="suggestion-803.diff" size="3071" author="fernanda" created="Thu, 27 Jul 2006 16:22:24 +0100"/>
                            <attachment id="12337645" name="suggestion-803.stat" size="329" author="fernanda" created="Thu, 27 Jul 2006 16:22:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Jun 2006 07:15:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22157</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tdr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38578</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>