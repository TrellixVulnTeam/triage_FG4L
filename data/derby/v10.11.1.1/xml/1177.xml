<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1177/DERBY-1177.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1177] updateObject with null as argument causes network driver to fail with NullPointerException</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1177</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Calling ResultSet.updateObject(column, object) causes the network driver to give NullPointerException if the object parameter is null.&lt;/p&gt;

&lt;p&gt;Stack trace from test:&lt;/p&gt;

&lt;p&gt;Test output:&lt;br/&gt;
........E.&lt;br/&gt;
Time: 7.597&lt;br/&gt;
There was 1 error:&lt;br/&gt;
1) testUpdateObjectWithNull(org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdateXXXTest)java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.client.am.CrossConverters.setObject(CrossConverters.java:845)&lt;br/&gt;
        at org.apache.derby.client.am.ResultSet.updateObject(ResultSet.java:3073)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdateXXXTest.testUpdateObjectWithNull(UpdateXXXTest.java:215)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;/p&gt;

&lt;p&gt;Will attach the test.&lt;/p&gt;

&lt;p&gt;To run:&lt;br/&gt;
java -Dframework=DerbyNetClient org.apache.derbyTesting.functionTests.harness.RunTest jdbcapi/UpdateXXXTest.junit&lt;/p&gt;

&lt;p&gt;The test does not fail with the embedded framework.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12331521">DERBY-1177</key>
            <summary>updateObject with null as argument causes network driver to fail with NullPointerException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andreask">Andreas Korneliussen</assignee>
                                    <reporter username="andreask">Andreas Korneliussen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 3 Apr 2006 23:24:25 +0100</created>
                <updated>Tue, 30 Jun 2009 16:55:40 +0100</updated>
                            <resolved>Tue, 11 Apr 2006 17:19:16 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12373062" author="andreask" created="Tue, 4 Apr 2006 17:54:58 +0100"  >&lt;p&gt;This bug has recently been introduced as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-842&quot; title=&quot;Internationalize messages in PreparedStatement to Section in org.apache.derby.client.am&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-842&quot;&gt;&lt;del&gt;DERBY-842&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
In CrossConverters.java&lt;br/&gt;
Index: java/client/org/apache/derby/client/am/CrossConverters.java&lt;br/&gt;
&amp;gt;&lt;br/&gt;
@@ -802,9 +842,9 @@&lt;br/&gt;
         } else if (source instanceof Byte) &lt;/p&gt;
{
             return setObject(targetType, ((Byte) source).byteValue());
         }
&lt;p&gt; else {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;throw new SqlException(agent_.logWriter_, &quot;Invalid data conversion:&quot; +&lt;/li&gt;
	&lt;li&gt;&quot; Parameter instance &quot; + source +&lt;/li&gt;
	&lt;li&gt;&quot; is invalid for requested conversion.&quot;);&lt;br/&gt;
+            throw new SqlException(agent_.logWriter_,&lt;br/&gt;
+                new MessageId (SQLState.LANG_DATA_TYPE_SET_MISMATCH),&lt;br/&gt;
+                source.getClass().getName(), Types.getTypeString(targetType));&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The new code here causes nullpointerexception when source is NULL.&lt;/p&gt;

&lt;p&gt;In addition, when committing the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-842&quot; title=&quot;Internationalize messages in PreparedStatement to Section in org.apache.derby.client.am&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-842&quot;&gt;&lt;del&gt;DERBY-842&lt;/del&gt;&lt;/a&gt;, the output file for updatableResultSet.out was changed to contain:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Got expected exception:Invalid data conversion: Parameter instance null is invalid for requested conversion.&lt;br/&gt;
+   Got expected exception:null&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Which obvisously is wrong.&lt;/p&gt;

&lt;p&gt;The bug was committed as rev. 390536.&lt;/p&gt;</comment>
                            <comment id="12373080" author="andreask" created="Tue, 4 Apr 2006 21:08:40 +0100"  >&lt;p&gt;I intend to make a patch which fixes this issue. The patch will make the network and embedded driver behave identical when ResultSet.updateObject(..) is called with a null value: it will be handled as if updateNull(..) was called, and the updated value will be SQL null. This is also somewhat symmetrical to getObject(..) which returns null if the value in the database is SQL null. If the value cannot be set to null, i.e due to constraints, an error should be given in updateRow() &lt;br/&gt;
(this is also the case in EmbedResultSet).&lt;/p&gt;</comment>
                            <comment id="12373100" author="andreask" created="Tue, 4 Apr 2006 23:57:17 +0100"  >&lt;p&gt;Attaching the fix.&lt;/p&gt;

&lt;p&gt;In addition, a new junit test is added which tests the semantics of updateXXX + updateRow on different SQL columns, and the master files are updated for updatableResultSet test.&lt;/p&gt;

&lt;p&gt;I have run derbyall with the fix (without master file change), and it only failed in updatableResultSet. After fixing the master file, I have successfully run that test with embedded and DerbyNetClient framework. Starting derbyall again now, and will attach the report once completed tomorrow.&lt;/p&gt;

&lt;p&gt;Note:updatableResultSet test fails with JDK 1.3 and JDK 1.6, with and without this patch, probably due to outdated master files.&lt;/p&gt;</comment>
                            <comment id="12373242" author="andreask" created="Wed, 5 Apr 2006 16:55:35 +0100"  >&lt;p&gt;Test Run Started: 2006-04-04 17:02:29.0&lt;br/&gt;
Test Run Duration: 04:31:46&lt;/p&gt;

&lt;p&gt;645 Tests Run&lt;br/&gt;
100% Pass (645 tests passed)&lt;br/&gt;
 0% Fail (0 tests failed)&lt;br/&gt;
2 Suites skipped&lt;/p&gt;</comment>
                            <comment id="12373270" author="fernanda" created="Wed, 5 Apr 2006 21:08:08 +0100"  >&lt;p&gt;I have reviewed the patch and I have some comments:&lt;/p&gt;

&lt;p&gt;1. lang/updatableResultSet.java&lt;/p&gt;

&lt;p&gt;The behaviour of the method updateObject(columnIndex/Name, x) has been changed in the client driver so that it will no longer throw and exception when it is used with x = null. The cannons have been updated, but the test has not been updated, so it still gives the impresion that an exception is expected for DerbyNetClient:&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
if (indexOrName == 1) //test by passing column position
	rs.updateObject(sqlType, null);
else //test by passing column name
	rs.updateObject(ColumnNames[sqlType-1], null);
}
&lt;p&gt; catch (Throwable e) {&lt;br/&gt;
if (TestUtil.isNetFramework()) &lt;/p&gt;
{
	System.out.println(&quot;   Got expected exception:&quot; + e.getMessage());
	continue;
}
&lt;p&gt; else &lt;/p&gt;
{
	System.out.println(&quot;   Got UNexpected exception:&quot; + e.getMessage());
	return;
}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;I think it would be better if &quot;Got UNexpected exception: ...&quot; was being printed out when the framework is DerbyNetClient.&lt;/p&gt;

&lt;p&gt;2. I run the following test:&lt;/p&gt;

&lt;p&gt;rs = updatableStatement.executeQuery(&quot;select * from tmpResultSet where id &amp;lt; 100&quot;);&lt;br/&gt;
rs.next()&lt;br/&gt;
rs.updateObject(1, null);&lt;br/&gt;
System.out.println(&quot;Value of column 1 after updateObject(1, null): &quot; + rs.getInt(1));&lt;br/&gt;
System.out.println(&quot;Was null: &quot; + rs.wasNull());&lt;br/&gt;
rs.updateNull(1);&lt;br/&gt;
System.out.println(&quot;Value of column 1 after updateNull(1): &quot; + rs.getInt(1));&lt;br/&gt;
System.out.println(&quot;Was null: &quot; + rs.wasNull());&lt;br/&gt;
rs.updateInt(1, rs.getInt(1) + 100);&lt;br/&gt;
System.out.println(&quot;Value of column 1 after updateInt(1): &quot; + rs.getInt(1));&lt;br/&gt;
System.out.println(&quot;Was null: &quot; + rs.wasNull());&lt;/p&gt;

&lt;p&gt;and I got the following result:&lt;/p&gt;

&lt;p&gt;Value of column 1 after updateObject(1, null): 1&lt;br/&gt;
Was null: false&lt;br/&gt;
Value of column 1 after updateNull(1): 1&lt;br/&gt;
Was null: false&lt;br/&gt;
Value of column 1 after updateInt(1): 101&lt;br/&gt;
Was null: false&lt;/p&gt;

&lt;p&gt;when I expected to get:&lt;/p&gt;

&lt;p&gt;Value of column 1 after updateObject(1, null): 0&lt;br/&gt;
Was null: true&lt;br/&gt;
Value of column 1 after updateNull(1): 0&lt;br/&gt;
Was null: true&lt;br/&gt;
Value of column 1 after updateInt(1): 100&lt;br/&gt;
Was null: false&lt;/p&gt;

&lt;p&gt;I can see that updateNull also has an incorrect behaviour, but I think that if you are going to change the behaviour of updateObject so that it will allow to update the column to null, you should make make sure that subsequent calls to getter and wasNull method will return the correct values.&lt;/p&gt;

&lt;p&gt;If you can fix the behaviour of updateNull at the same time, it would be nice &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. One less difference in behaviour between Embedded and Client drivers.&lt;/p&gt;</comment>
                            <comment id="12373302" author="andreask" created="Wed, 5 Apr 2006 21:45:04 +0100"  >&lt;p&gt;Updated the patch to address the comments.&lt;/p&gt;

&lt;p&gt;1: Fixed updatableResultSet.java. It will now always print Got UNexpected exception if the bug reappears.&lt;br/&gt;
2: This bug is caused by the same logic: if the ResultSet is not of type TYPE_SCROLL_SENSITIVE, rs.getObject(..) and rs.wasNull(..) behaves&lt;br/&gt;
incorrect after updateNull() and updateObject(.., null). Fixed the bug, and updated the UpdateXXXTest to detect it.&lt;/p&gt;

&lt;p&gt;I have run lang/updatableResultSet.java and jdbcapi/UpdateXXXTest.junit in both embedded and DerbyNetClient to confirm the fix, and I am now running derbyall.&lt;/p&gt;</comment>
                            <comment id="12373350" author="andreask" created="Wed, 5 Apr 2006 22:25:06 +0100"  >&lt;p&gt;One of the testcases in the previous diff contained some dead code which has been removed in this patch. The stat is the same.&lt;/p&gt;</comment>
                            <comment id="12373594" author="andreask" created="Fri, 7 Apr 2006 17:21:07 +0100"  >&lt;p&gt;I have now run derbyall with the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1177&quot; title=&quot;updateObject with null as argument causes network driver to fail with NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1177&quot;&gt;&lt;del&gt;DERBY-1177&lt;/del&gt;&lt;/a&gt;v3.diff. It had no failures.&lt;/p&gt;</comment>
                            <comment id="12373601" author="fernanda" created="Fri, 7 Apr 2006 18:33:40 +0100"  >&lt;p&gt;All of my comments have been addressed. The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1177&quot; title=&quot;updateObject with null as argument causes network driver to fail with NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1177&quot;&gt;&lt;del&gt;DERBY-1177&lt;/del&gt;&lt;/a&gt;v3.diff looks ok.&lt;/p&gt;</comment>
                            <comment id="12373614" author="bernt" created="Fri, 7 Apr 2006 19:21:17 +0100"  >&lt;p&gt;Committed revision 392236.&lt;/p&gt;</comment>
                            <comment id="12373981" author="andreask" created="Tue, 11 Apr 2006 17:28:43 +0100"  >&lt;p&gt;Release Note:&lt;/p&gt;

&lt;p&gt;The following changes have been made to the Derby client driver:&lt;br/&gt;
Derby no longer throws an exception if ResultSet.updateObject(..) is called with a null as parameter. Instead it will update the column with a SQL NULL value.&lt;/p&gt;

&lt;p&gt;After calling ResultSet.updateObject(..) with null as parameter, or after calling ResultSet.updateNull(..), ResultSet.wasNull() will return true, and ResultSet.getObject() will return null. Previously Derby would incorrectly return the old value for the column.&lt;/p&gt;

&lt;p&gt;The Derby embedded jdbc driver behaves the same way w.r.t this behavior.&lt;/p&gt;</comment>
                            <comment id="12435486" author="andreask" created="Mon, 18 Sep 2006 15:15:29 +0100"  >&lt;p&gt;REL NOTE:&lt;/p&gt;

&lt;p&gt;Problem 1:&lt;br/&gt;
The derby client driver throws an exception when calling ResultSet.updateObject() with a null parameter. This is different from the embedded driver, which would update the column with a SQL NULL value.&lt;/p&gt;

&lt;p&gt;Symptoms:&lt;br/&gt;
Applications which use ResultSet.updateObject(..) with null values, will get a SQLException from the client driver, however if using the embedded driver, the call will update the column to SQL NULL.&lt;/p&gt;

&lt;p&gt;Cause:&lt;br/&gt;
Incorrect behaviour in client driver.&lt;/p&gt;

&lt;p&gt;Solution:&lt;br/&gt;
Fixed client driver to behave as embedded driver. ResultSet.updateObject(..) with a null parameter, will set the column value to SQL NULL.&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br/&gt;
Instead of using ResultSet.updateObject(..) with null parameter, the client application can use ResultSet.updateNull(..).&lt;/p&gt;


&lt;p&gt;Problem 2:&lt;br/&gt;
In the client jdbc driver: &lt;br/&gt;
After calling ResultSet.updateNull(..), the method ResultSet.wasNull() and ResultSet.getXXX(..) returns the same values as before updateNull(..) was called. &lt;/p&gt;

&lt;p&gt;Symptoms:&lt;br/&gt;
In the client jdbc driver: &lt;br/&gt;
After calling ResultSet.updateNull(..), the method ResultSet.wasNull() and ResultSet.getXXX(..) returns the same values as before updateNull(..) was called. &lt;/p&gt;

&lt;p&gt;Cause:&lt;br/&gt;
Incorrect behaviour in client driver.&lt;/p&gt;

&lt;p&gt;Solution:&lt;br/&gt;
Fixed client driver to behave as embedded driver. After calling  ResultSet.updateNull(..), ResultSet.wasNull() will return true, and ResultSet.getXXX(..) will return values corresponding to what is expected when the column is SQL NULL. &lt;/p&gt;

&lt;p&gt;Workaround:&lt;br/&gt;
NA&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12324923" name="DERBY-1177.diff" size="42249" author="andreask" created="Tue, 4 Apr 2006 23:57:15 +0100"/>
                            <attachment id="12324924" name="DERBY-1177.stat" size="641" author="andreask" created="Tue, 4 Apr 2006 23:57:17 +0100"/>
                            <attachment id="12324978" name="DERBY-1177v2.diff" size="45509" author="andreask" created="Wed, 5 Apr 2006 21:44:59 +0100"/>
                            <attachment id="12324979" name="DERBY-1177v2.stat" size="795" author="andreask" created="Wed, 5 Apr 2006 21:45:04 +0100"/>
                            <attachment id="12324984" name="DERBY-1177v3.diff" size="45451" author="andreask" created="Wed, 5 Apr 2006 22:25:04 +0100"/>
                            <attachment id="12324885" name="UpdateXXXTest.java" size="7142" author="andreask" created="Mon, 3 Apr 2006 23:27:22 +0100"/>
                            <attachment id="12325035" name="derbyall_report.txt" size="3999" author="andreask" created="Fri, 7 Apr 2006 17:21:05 +0100"/>
                            <attachment id="12324964" name="derbyall_report.txt" size="3908" author="andreask" created="Wed, 5 Apr 2006 16:55:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Apr 2006 20:08:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22354</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0v0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>