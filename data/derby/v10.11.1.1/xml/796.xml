<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-796/DERBY-796.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-796] jdbc 4.0 specific Blob and Clob method support</title>
                <link>https://issues.apache.org/jira/browse/DERBY-796</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment>jdbc 4.0 on all platforms</environment>
        <key id="12327212">DERBY-796</key>
            <summary>jdbc 4.0 specific Blob and Clob method support</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jan 2006 23:49:19 +0000</created>
                <updated>Wed, 1 Jul 2009 01:34:34 +0100</updated>
                            <resolved>Thu, 18 May 2006 18:17:18 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12361754" author="narayanan" created="Wed, 4 Jan 2006 23:52:12 +0000"  >&lt;p&gt;DETAILS OF PATCH&lt;/p&gt;

&lt;p&gt;Patch addresses the following issues&lt;/p&gt;

&lt;p&gt;1)Modifications to the ClientJDBCObjectFactory class and the incorporation of the factory into the Client layer.&lt;br/&gt;
2)Blob and Clob method support&lt;/p&gt;

&lt;p&gt;Details of the above modifications are documented below. &lt;br/&gt;
1)Modifications to ClientJDBCObjectFactory class&lt;/p&gt;

&lt;p&gt;a) Addition of method &apos;createObject&apos; that uses reflection to create the objects depending on the version of VM under use and modifying ClientJDBCObjectFactory to use this method.&lt;/p&gt;

&lt;p&gt;b) Modifying Network Client classes to use the factory class.&lt;/p&gt;


&lt;p&gt;2)Blob and Clob method support&lt;/p&gt;

&lt;p&gt;The following are the methods from which the Util.notImplemented() exception has been removed and has been replaced with appropriate code.&lt;/p&gt;

&lt;p&gt;&amp;lt;trunk&amp;gt;/java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement40.java&lt;/p&gt;

&lt;p&gt;setClob(int parameterIndex, Reader reader, long length)&lt;br/&gt;
setBlob(int parameterIndex, InputStream inputStream, long length)&lt;/p&gt;

&lt;p&gt;&amp;lt;trunk&amp;gt;/java/client/org/apache/derby/client/am/PreparedStatement40.java&lt;/p&gt;

&lt;p&gt;setClob(int parameterIndex, Reader reader, long length)&lt;br/&gt;
setBlob(int parameterIndex, InputStream inputStream, long length)&lt;/p&gt;</comment>
                            <comment id="12361852" author="rhillegas" created="Fri, 6 Jan 2006 00:33:40 +0000"  >&lt;p&gt;Hi Narayanan: The patch itself looks good. However, I&apos;m seeing test failures:&lt;/p&gt;

&lt;p&gt;1) I&apos;m seeing the following diff on lobStreams.java run under DerbyNetClient:&lt;/p&gt;

&lt;p&gt;MasterFileName = master/lobStreams.out&lt;br/&gt;
1a2&lt;br/&gt;
&amp;gt; extin\aclob.txt&lt;br/&gt;
Test Failed.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;End:   lobStreams jdk1.4.2_08 DerbyNetClient 2006-01-05 07:09:44 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2) All of the jdbc4 tests fail. I am running them according to the instructions in jira 587. Perhaps the instructions have changed? In a shell window using the 1.6 vm, I run the jdbc4 tests as follows:&lt;/p&gt;

&lt;p&gt;java -Dverbose=true org.apache.derbyTesting.functionTests.harness.RunSuite jdbc4&lt;/p&gt;

&lt;p&gt;and each test fails to get a connection:&lt;/p&gt;

&lt;p&gt;&amp;gt; Failed in creating a Connection:	org.apache.derby.client.am.DisconnectException: java.security.PrivilegedActionException : Error opening socket to server xxxFILTERED_HOSTNAMExxx on port 1527 with message : null&lt;br/&gt;
&amp;gt; org.apache.derby.client.am.DisconnectException: java.security.PrivilegedActionException : Error opening socket to server xxxFILTERED_HOSTNAMExxx on port 1527 with message : null&lt;/p&gt;</comment>
                            <comment id="12362647" author="narayanan" created="Fri, 13 Jan 2006 23:32:40 +0000"  >&lt;p&gt;I have corrected the failures and am re-attaching the patch. &lt;/p&gt;</comment>
                            <comment id="12362846" author="rhillegas" created="Mon, 16 Jan 2006 21:30:34 +0000"  >&lt;p&gt;The code looks fine. Now derbyall passes cleanly. Also, the jdbc4 tests run cleanly on jdk1.6. I recommend that this patch be committed.&lt;/p&gt;</comment>
                            <comment id="12362860" author="djd" created="Tue, 17 Jan 2006 01:59:48 +0000"  >&lt;p&gt;The patch lacks comments, the methods  that have changed from being not implemented have no java doc or comments. New methods added such as atLeast have no comments, the entire class ClientJDBCObjectFactory has no comments.&lt;/p&gt;

&lt;p&gt;I think EmbedPreparedStatement40.setClob()/setBlob() should be calling setCharacterStreamInternal()/setBinaryStreamInternal(). This would remove the need for reader/stream being null checks.&lt;/p&gt;

&lt;p&gt;I&apos;m worried by this patch, or maybe previous patches in this series, reflection is used to allocate JDBC objects on the client, reflection is really slow, how often is this code invoked? E.g. is a NetResultSet allocated through reflection every time a ResultSet is returned to the client? The whole class ClientJDBCObjectFactory  looks terrible for performance, creating any JDBC object now involves many object creations, which will slow down performance, even the the objects which could be static (the Class arrays) are created on very method call. Why was reflection used instead of a factory pattern like the embedded driver?&lt;/p&gt;

&lt;p&gt;I think at sometime we need some performance tests to ensure client performance has not regressed from 10.1&lt;/p&gt;</comment>
                            <comment id="12362863" author="djd" created="Tue, 17 Jan 2006 02:17:50 +0000"  >&lt;p&gt;After looking a little more, currently setBinaryStreamInternal is not suitable, though it should be! Also looking at this I think I saw a bug in the exsiting setClob(int, Clob) method. There a long is converted to an int, and it is assumed that if the long is out of range that the result will be a negative integer. That is not true. It would probably be worth changing setCharacterStreamInternal and setBinaryStreamInternal to take a long for the length, and perform the &amp;gt; max int check in the internal methods. setBinaryStreamInternal could be shared if a valid length is passed in always, which would mean changing setBlob(int, Blob) to pass the length to setBinaryStreamInternal, as is done in setClob.&lt;/p&gt;</comment>
                            <comment id="12362867" author="skambha" created="Tue, 17 Jan 2006 02:48:24 +0000"  >&lt;p&gt;I actually have a patch to fix Derby-599, where I am changing the setBlob(int,Blob) to pass the length as is done in setClob to avoid materialization. I have some testing to do before I post the patch to the list (hopefully will get it out in a day or two). I can take care of changing the setBinaryStreamInternal to take a long for the length as part of the Derby 599 patch as it is related. &lt;/p&gt;
</comment>
                            <comment id="12362946" author="narayanan" created="Tue, 17 Jan 2006 19:11:56 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Thank You for the comments Dan. &lt;/p&gt;

&lt;p&gt;a) Sorry about the comments and the javadocs. I will fix this in my next patch.&lt;/p&gt;

&lt;p&gt;b)  I am asking Sunitha on how she is handling the length  as a long datatype &lt;br/&gt;
when the RawtoBinaryStream class expects an Integer. &lt;/p&gt;

&lt;p&gt;c) I have a solution where reflection would be used only once. I am&lt;br/&gt;
documenting my solution below&lt;/p&gt;

&lt;p&gt;    c.1) We could make ClientJDBCObjectFactory a interface&lt;br/&gt;
    c.2) Have two implementations ClientJDBCObjectFactoryImpl and&lt;br/&gt;
           ClientJDBCObjectFactoryImpl40&lt;br/&gt;
    c.3) A method getFactory() in the client driver that loads appropriate&lt;br/&gt;
            implementation depending on the jdk under use. This method would use&lt;br/&gt;
            reflection to load the JDBC40 class.&lt;/p&gt;

&lt;p&gt;This way we will have reflection only once.&lt;/p&gt;

&lt;p&gt;This could&apos;nt be done exactly the same way as the embedded side because&lt;br/&gt;
we do&apos;nt have the monitor concept here&lt;/p&gt;</comment>
                            <comment id="12363921" author="narayanan" created="Wed, 25 Jan 2006 13:41:08 +0000"  >&lt;p&gt;As pointed out in the above comments reflection is used and this was making the process slow. This has been overcome with the following changes.&lt;/p&gt;

&lt;p&gt;1) ClientJDBCObjectFactory is an interface having two implementations&lt;/p&gt;

&lt;p&gt;   a) ClientJDBCObjectFactoryImpl&lt;br/&gt;
   b) ClientJDBCObjectFactoryImpl40&lt;/p&gt;

&lt;p&gt;   ClientJDBCObjectFactoryImpl is compiled by jdk1.4&lt;br/&gt;
   ClientJDBCObjectFactoryImpl40 is compiled by mustang (compiled optionally if jdk16 variable is present in ant.properties)&lt;/p&gt;

&lt;p&gt;2) The method getFactory() in the ClientDriver class would initialize a variable of type ClientJDBCObjectFactory with an appropriate implementation depending on the jdk version under use.&lt;/p&gt;

&lt;p&gt;3) This method is then used to return an instance of the factory implementation that will be used to return the approriate JDBC interface implementations to the user&lt;/p&gt;

&lt;p&gt;Issues that were addresses earlier and have been fixed&lt;br/&gt;
------------------------------------------------------&lt;/p&gt;

&lt;p&gt;1) comments have been added to the ClientJDBCObjectFactory,ClientJDBCObjectFactoryImpl,ClientJDBCObjectFactoryImpl40 classes. Comments have also been added  to the atLeast method in Configuration.java&lt;/p&gt;

&lt;p&gt;2) I have raised a JIRA issue for setCharacterStreamInternal to be modified (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-856&quot; title=&quot;modify setCharacterStreamInternal to take a long for the length, and perform the &amp;gt; max int check in the method&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-856&quot;&gt;&lt;del&gt;DERBY-856&lt;/del&gt;&lt;/a&gt;) . setBinaryStreamInternal is being modified as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-599&quot; title=&quot;Using setBlob interface, should not materialize the entire blob value into memory.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-599&quot;&gt;&lt;del&gt;DERBY-599&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) Reflection would&apos;nt be used for every object creation as in the previous case and would be only be used in getFactory to rerurn a factory implementation. &lt;/p&gt;

&lt;p&gt;thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12363924" author="djd" created="Wed, 25 Jan 2006 14:14:26 +0000"  >&lt;p&gt;One quick comment (I&apos;m still reviewing the rest) in EmbedPreparedStatement40.&lt;/p&gt;

&lt;p&gt;The code throwing exceptions seems strange to me, and I don&apos;t think matches code elsewhere.&lt;/p&gt;

&lt;p&gt;+		throw Util.newEmbedSQLException(SQLState.LANG_INVALID_COLUMN_LENGTH,&lt;br/&gt;
+                           new Object[]&lt;/p&gt;
{new String(&quot;setBlob()&quot;)}
&lt;p&gt;,&lt;br/&gt;
+                           StandardException.getSeverityFromIdentifier&lt;br/&gt;
+                           (SQLState.LANG_INVALID_COLUMN_LENGTH));&lt;/p&gt;


&lt;p&gt;1) I don&apos;t understand the code new String(&quot;setBlob()&quot;) - &quot;setBlob()&quot; is already a String, why convert it to a String again?&lt;br/&gt;
In fact I never understood why that constructor String(String s) exists!&lt;/p&gt;

&lt;p&gt;2) Usually when throwing exceptions, the calling code doesn&apos;t create the Object array for the arguments, or calculate the severity. It&apos;s handled by utility methods.  Look at other examples in EmbedPreparedStatement, e.g.&lt;/p&gt;

&lt;p&gt;line 1239&lt;br/&gt;
throw newSQLException(SQLState.NO_INPUT_PARAMETERS)&lt;/p&gt;

&lt;p&gt;line 1247&lt;br/&gt;
throw newSQLException(SQLState.LANG_INVALID_PARAM_POSITION, &lt;br/&gt;
            new Integer(parameterIndex), new Integer(types.length))&lt;/p&gt;
</comment>
                            <comment id="12363927" author="narayanan" created="Wed, 25 Jan 2006 15:14:34 +0000"  >&lt;p&gt;Thanx for the comments&lt;/p&gt;

&lt;p&gt;You are right it should be &quot;SetBlob()&quot; only. I will fix this.&lt;/p&gt;

&lt;p&gt;I was confused with the usage of the newEmbedSQLException methods in Util.java. For example when throwing the notImplemented Exception the following is done&lt;/p&gt;

&lt;p&gt;return newEmbedSQLException(SQLState.NOT_IMPLEMENTED,&lt;br/&gt;
			new Object[] &lt;/p&gt;
{MessageService.getTextMessage(MessageId.CONN_NO_DETAILS)}
&lt;p&gt;,&lt;br/&gt;
                        StandardException.getSeverityFromIdentifier(SQLState.NOT_IMPLEMENTED));&lt;/p&gt;

&lt;p&gt;but as you say that is an utility method. Thank you for pointing this out. I will change this to match the signature in EmbedPreparedStatement. I will submit a new patch with this change incorporated.&lt;/p&gt;

&lt;p&gt;thanx once again&lt;/p&gt;

&lt;p&gt;Narayanan&lt;/p&gt;</comment>
                            <comment id="12363938" author="narayanan" created="Wed, 25 Jan 2006 18:56:40 +0000"  >&lt;p&gt;I have changed it to work in the same pattern as in EmbedPreparedStatement (i.e.)  it does a &lt;br/&gt;
throw newSQLException(SQLState.LANG_INVALID_COLUMN_LENGTH);&lt;br/&gt;
thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12365045" author="narayanan" created="Fri, 3 Feb 2006 14:55:16 +0000"  >&lt;p&gt;Hi Dan,&lt;br/&gt;
I have changed the patch to use newSQLException. I will also put the patch in for setCharacterStreamInternal with the suggessted changes. Can you please tell me any other changes that would be required for this patch so that I can do the same and submit it again.  &lt;br/&gt;
thanx,&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12365743" author="narayanan" created="Fri, 10 Feb 2006 00:16:14 +0000"  >&lt;p&gt;Hi Dan,&lt;br/&gt;
Sorry if this request is redundant but can you please tell me if this patch is good or if you think there are issues that need to be addressed so that I can do the same in a subsequent patch.&lt;br/&gt;
thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12365748" author="djd" created="Fri, 10 Feb 2006 00:58:26 +0000"  >&lt;p&gt;I thought the patch was going to be re-written to use the setBinaryStreamInternal and setCharacterStreamInternal that have been modified to take a long length argument.&lt;/p&gt;

&lt;p&gt;I think someone more familiar with the client side should review those changes, the more eyes the better.&lt;/p&gt;</comment>
                            <comment id="12366100" author="narayanan" created="Sun, 12 Feb 2006 20:45:26 +0000"  >&lt;p&gt;1) lob_3.diff is the new patch being attached&lt;br/&gt;
2) I have modified setClob to use setCharacterStreamInternal and setBlob to use setBinaryStreamInternal. &lt;/p&gt;

&lt;p&gt;Narayanan&lt;/p&gt;</comment>
                            <comment id="12366163" author="narayanan" created="Mon, 13 Feb 2006 18:00:33 +0000"  >&lt;p&gt;description of the changes made in this patch &lt;/p&gt;</comment>
                            <comment id="12366251" author="rhillegas" created="Tue, 14 Feb 2006 06:59:51 +0000"  >&lt;p&gt;I&apos;m a bit muddled and it might be that JIRA is misbehaving again. When I downloaded lob_3.diff, it didn&apos;t contain ClientJDBCObjectFactory and its implementations. Have those changes been moved out to another patch?&lt;/p&gt;</comment>
                            <comment id="12366297" author="narayanan" created="Tue, 14 Feb 2006 14:27:32 +0000"  >&lt;p&gt;I hadnt moved the changes to another patch. I tried downloading it today, it does contain the changes. I will anyway attach it once again and also attach the status file.&lt;/p&gt;</comment>
                            <comment id="12366299" author="narayanan" created="Tue, 14 Feb 2006 14:32:16 +0000"  >&lt;p&gt;Attaching it again&lt;/p&gt;</comment>
                            <comment id="12366365" author="rhillegas" created="Wed, 15 Feb 2006 03:44:21 +0000"  >&lt;p&gt;I have downloaded lob_4.diff. It appears to satisfy the previous objections: 1) reflection is no longer used to create network client jdbc objects, 2) calls to the streaming minions use long stream lengths, 3) SQLExceptions are created in the regular way.&lt;/p&gt;

&lt;p&gt;The patch builds on my machine and passes the jdbc4 suite. I will run derbyall once the regressions in the trunk settle down.&lt;/p&gt;

&lt;p&gt;I am very keen to commit this patch because several other chunks of JDBC4 work depend on it. However, I&apos;m also eager for this patch to be reviewed by one of our network experts (Kathey? Bryan?). Hopefully, after all this time, the comments will be fit and polish issues which Narayanan can address in a follow-on submission.&lt;/p&gt;

&lt;p&gt;Thanks in advance for your kind attention to this urgent patch.&lt;/p&gt;</comment>
                            <comment id="12366380" author="djd" created="Wed, 15 Feb 2006 05:47:03 +0000"  >&lt;p&gt;The embedded changes look good.&lt;/p&gt;

&lt;p&gt;Is there any reason for the changes in the TestConnection.java class, such as database name from mydb to mydb1?&lt;br/&gt;
And is there any good reason for this class, why don&apos;t these tests get the connections the standard way, used by all&lt;br/&gt;
other tests in the harness?&lt;/p&gt;

&lt;p&gt;I see this pattern in the tests for failed exceptions:&lt;/p&gt;

&lt;p&gt;+            catch(IOException ioe) &lt;/p&gt;
{
+                System.out.println(&quot;Input output exception occurred&quot; + ioe);
+            }
&lt;p&gt;+            catch(SQLException sqle) &lt;/p&gt;
{
+                System.out.println(&quot;SQLException occurred&quot; + sqle);
+            }

&lt;p&gt;I guess it&apos;s not critical but this approach to displaying errors is a real pain when you actually hit a failure.&lt;/p&gt;

&lt;p&gt;Just printing what you print means that on a failure, I have to find which line was causing the error,&lt;br/&gt;
not easy if one uses the same text like &quot;SQLException occurred&quot;, modify  that code to print the stack trace,&lt;br/&gt;
modify the code to print the SQLException chain, and then re-run the test.&lt;/p&gt;

&lt;p&gt;Printing the stack trace, and for SQLExceptions the complete nested chain and their stack traces can often&lt;br/&gt;
mean spotting what the problem is instantly.  &lt;/p&gt;</comment>
                            <comment id="12366458" author="narayanan" created="Wed, 15 Feb 2006 18:51:05 +0000"  >&lt;p&gt;Thanx a ton for the reviews and comments.&lt;/p&gt;

&lt;p&gt;I have tried to answer the queries raised for this issue. &lt;/p&gt;

&lt;p&gt;Issues Raised and the explanations follow&lt;br/&gt;
----------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Issue 1&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;Change of name of the database from mydb to mydb1&lt;br/&gt;
-------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Since I was creating the databases from my code I wanted to give meaningful names to the databases that I create to test the Embedded and Network JDBC4 code changes. I initially changed it to mydb1 to check for the run with different databases but missed out on changing the actual names. I apologize for this mistake I will change this to a more meaningful name say &quot;jdbc4test_database&quot;.&lt;/p&gt;

&lt;p&gt;Issue 2&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;Printing the stack trace&lt;br/&gt;
-----------------------------------------&lt;/p&gt;

&lt;p&gt;I will do this change and re-submit my patch&lt;/p&gt;

&lt;p&gt;Issue 3&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;Why was the TestConnection class created?&lt;br/&gt;
---------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;This class was created during the initial days when I wrote the JDBC4 suite. I understand that I can do a ij.startJBMS() to get a connection. I notice that doing a ij.getJBMS() from inside a 1.6 compiled class returns null with no message. Thanx for pointing this David. I will remove this class and change it the usual way once I fix the ij.startJBMS() bug. I will raise a JIRA issue for this.&lt;/p&gt;

&lt;p&gt;Issue 4&lt;br/&gt;
-------------&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (offset_ &amp;gt; (blob_.binaryString_.length - blob_.dataOffset_)) {&lt;br/&gt;
+        if ((offset_-1) &amp;gt; (blob_.binaryString_.length - blob_.dataOffset_)) { &lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Sorry for having missed this comment I will do this. &lt;/p&gt;


&lt;p&gt;Issue 5&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;&amp;#8212; java/client/org/apache/derby/client/am/Blob.java    (revision 377622)&lt;br/&gt;
+++ java/client/org/apache/derby/client/am/Blob.java    (working copy)&lt;br/&gt;
@@ -267,7 +267,10 @@&lt;/p&gt;

&lt;p&gt;      public int setBytesX(long pos, byte[] bytes, int offset, int len) throws SqlException {&lt;br/&gt;
          int length = 0;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if ((int) pos &amp;lt;= 0) {&lt;br/&gt;
+        boolean insertIntoEmpty = false;&lt;br/&gt;
+    if(pos==1 &amp;amp;&amp;amp; binaryString_.length==0)&lt;br/&gt;
+        insertIntoEmpty = true;&lt;br/&gt;
+        if ((int) pos &amp;lt;= 0 || ((!insertIntoEmpty) &amp;amp;&amp;amp; (pos &amp;gt; binaryString_.length - dataOffset_))) 
{
              throw new SqlException(agent_.logWriter_,
                  new MessageId(SQLState.BLOB_BAD_POSITION), new Long(pos));
          }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It seemed like the essence of this change was something like:&lt;/p&gt;

&lt;p&gt;   &quot;It&apos;s usually an error to pass a &apos;pos&apos; value greater than the&lt;br/&gt;
   length of the blob, but if the blob is currently empty then&lt;br/&gt;
   there is a special case where the caller passes 1, not 0, as&lt;br/&gt;
   you might expect.&quot; &lt;/p&gt;

&lt;p&gt;The interpretation above is exactly what I tried to do. I will try to explain what I intended and also restructure the code to make it more understandable.&lt;/p&gt;

&lt;p&gt;There are two cases when exception needs to be thrown&lt;/p&gt;

&lt;p&gt;a) when pos &amp;lt;=0&lt;br/&gt;
b) when pos &amp;gt; binaryString_.length - dataOffset_&lt;br/&gt;
   b.1) This case arises when your insert into a empty Blob. so here pos = 1 and (binaryString_.length - dataOffset_)=0.&lt;br/&gt;
        this should not result in a SQL exception being thrown.&lt;/p&gt;

&lt;p&gt;I will split this into two parts by doing this&lt;br/&gt;
if(pos&amp;lt;=0)&lt;br/&gt;
 Throw an exception&lt;br/&gt;
if(pos &amp;gt; binaryString_.length - dataOffset_)&lt;br/&gt;
{&lt;br/&gt;
	if(Insert in not into an empty Blob)&lt;/p&gt;
        {
		Throw an exception
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Issue - 6&lt;br/&gt;
-----------------&lt;/p&gt;

&lt;p&gt;it is a cleaner approach to do the conversion from one-based index to zero-based index on the highest possible level&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Would it be acceptable if I add a proper comment explaining my change for now and raise this as a seperate issue and fix it at the earliest?&lt;/p&gt;

&lt;p&gt;issue - 7&lt;br/&gt;
-----------------&lt;/p&gt;

&lt;p&gt;ij.startJBMS() throws error&lt;br/&gt;
-----------------------------------------------&lt;/p&gt;

&lt;p&gt;Thank you for pointing this out. I will raise an issue for this one&lt;/p&gt;

&lt;p&gt;issue - 8&lt;br/&gt;
----------------&lt;/p&gt;

&lt;p&gt;Appearence of unwanted changes as part of diff&lt;br/&gt;
--------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;eg&lt;/p&gt;
&lt;hr /&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setSQLXML(String parameterName, SQLXML xmlObject) throws SQLException {&lt;br/&gt;
+    public void setSQLXML(String parameterName, SQLXML xmlObject)&lt;br/&gt;
+           throws SQLException { &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I had tried to change the diff to keep to 80 characters per line wherever I noticed a deviation. The original was 83. I wanted to split it to keep it to 80. If it is felt that this is a distraction I will change it to the original and submit another patch to make this change.&lt;/p&gt;


&lt;p&gt;issue-9&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;Appearence of the variable con in ClientDataSource.java&lt;/p&gt;

&lt;p&gt;I will remove this.&lt;/p&gt;

&lt;p&gt;Thanx once again for the reviews and comments.&lt;/p&gt;

&lt;p&gt;Narayanan&lt;/p&gt;</comment>
                            <comment id="12366564" author="narayanan" created="Thu, 16 Feb 2006 09:01:27 +0000"  >&lt;p&gt;I have explained the changes made in the attachment ClientFrameworkExplanation_1.txt&lt;/p&gt;</comment>
                            <comment id="12366638" author="rhillegas" created="Thu, 16 Feb 2006 22:35:00 +0000"  >&lt;p&gt;The test runs look good: The jdbc4 suite runs cleanly against the lob_5.diff changes. Derbyall suffered two failures (wisconsin and xaSimplePositive); however, we see these same failures in Ole&apos;s automated tests.&lt;/p&gt;</comment>
                            <comment id="12366797" author="narayanan" created="Fri, 17 Feb 2006 23:44:24 +0000"  >&lt;p&gt;Thanx a ton for the detailed reviews and comments on the patch. I am working to get the issues with this patch resolved. I am summarizing the issues reported as part of the reviews as a series of points below.  I will fix them and resubmit the patch&lt;/p&gt;

&lt;p&gt;Issue-1&lt;br/&gt;
-------&lt;br/&gt;
Javadoc needs to have @param/@return tags&lt;/p&gt;

&lt;p&gt;Issue-2&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Some classes/methods do not have javadoc/comments&lt;/p&gt;

&lt;p&gt;specifc case&lt;/p&gt;

&lt;p&gt;ClientJDBCObjectfactory&lt;br/&gt;
ClientJDBCObjectFactoryImpl&lt;br/&gt;
ClientJDBCObjectFactoryImpl40&lt;/p&gt;

&lt;p&gt;--&amp;gt; In this specific case I did&apos;nt put in method level javadoc comments for the Impl classes because they inherit the javadoc comments of the interface. If you still feel that they need class level comments I will add these too.&lt;/p&gt;

&lt;p&gt;Issue-3&lt;br/&gt;
-------&lt;br/&gt;
The indentation style is not consistent and makes the code harder&lt;br/&gt;
to read.&lt;/p&gt;

&lt;p&gt;Issue-4&lt;br/&gt;
-------&lt;br/&gt;
In ClientConnectionPoolDataSource I don&apos;t see any reason to catch the SQLException since it&apos;s just going&lt;br/&gt;
to be thrown again anyway.&lt;/p&gt;

&lt;p&gt;Issue-5&lt;br/&gt;
-------&lt;br/&gt;
I am combining all the issues related to createDefaultFactoryImpl() here&lt;/p&gt;

&lt;p&gt;createDefaultFactoryImpl() is called in the exception handler, but&lt;br/&gt;
the return value is discarded. I guess it is supposed to be returned.&lt;/p&gt;

&lt;p&gt;The way exceptions are handled (in particular the use&lt;br/&gt;
of instanceof and throwing away the stack trace) is improper.&lt;/p&gt;

&lt;p&gt;don&apos;t see much value in the createObject() method, since it&apos;s&lt;br/&gt;
just calling Class.forName(...).newInstance() and is just being&lt;br/&gt;
used once&lt;/p&gt;

&lt;p&gt;Issue-6&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The method Configuration.atLeast() duplicates functionality found in&lt;br/&gt;
JVMInfo. &lt;/p&gt;

&lt;p&gt;Preferably, you could create a method supportsJDBC40() that&lt;br/&gt;
returns a boolean.&lt;/p&gt;

&lt;p&gt;Issue-7&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;moving ClientJDBCObjectFactoryImpl and ClientJDBCObjectFactoryImpl40 to net&lt;br/&gt;
package &lt;/p&gt;

&lt;p&gt;renaming method signatures inside this to be more generic&lt;/p&gt;

&lt;p&gt;thanx once again&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12367166" author="narayanan" created="Tue, 21 Feb 2006 18:12:07 +0000"  >&lt;p&gt;Please find attached the patch with the issues addressed&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12367183" author="knutanders" created="Tue, 21 Feb 2006 21:34:38 +0000"  >&lt;p&gt;Thanks for the improved patch, Narayanan! You have addressed most of&lt;br/&gt;
my concerns, but there is still one issue:&lt;/p&gt;

&lt;p&gt;ClientJDBCObjectFactory (in the am package) has a lot of references to&lt;br/&gt;
classes in the net package. There should not be any dependencies from&lt;br/&gt;
am to net.&lt;/p&gt;

&lt;p&gt;And while you&apos;re at it, there&apos;s a white-space change in&lt;br/&gt;
am/PreparedStatement.java that wasn&apos;t in your previous patch:&lt;/p&gt;

&lt;p&gt; public class PreparedStatement extends Statement&lt;br/&gt;
         implements java.sql.PreparedStatement,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;PreparedStatementCallbackInterface {&lt;br/&gt;
+        PreparedStatementCallbackInterface{&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12367369" author="narayanan" created="Thu, 23 Feb 2006 02:03:44 +0000"  >&lt;p&gt;Fixed the issues pointed out by knut in the earlier comments and am posting the patch again. In the current patch I am handling the issue pointed out by knut of the ClientJDBCObjectFatory class not to have any reference of net package. &lt;/p&gt;

&lt;p&gt;However because of this change in ClientJDBCObjectFactory please observe the following cast of NetLogWriter in ClientJDBCObjectFactoryImpl&lt;/p&gt;

&lt;p&gt;Line no 134&lt;/p&gt;

&lt;p&gt;        return (org.apache.derby.client.am.Connection)&lt;br/&gt;
        (new NetConnection((NetLogWriter)netLogWriter,user,password,dataSource,rmId,&lt;br/&gt;
                isXAConn));&lt;/p&gt;

&lt;p&gt;This cast won&apos;t fail since newConnection method is being called internally and is always called with NetLogWriter. However a better solution would be to change the NetConnection class constructors to accept LogWriter.&lt;/p&gt;

&lt;p&gt;I am opening a new JIRA issue for this and along with that patch I will submit the changes to remove the explicit casts in ClientJDBCObjectFactoryImpl and ClientJDBCObjectFactoryImpl40&lt;/p&gt;

&lt;p&gt;Narayanan&lt;/p&gt;

</comment>
                            <comment id="12367514" author="knutanders" created="Fri, 24 Feb 2006 00:16:52 +0000"  >&lt;p&gt;Thanks again for fixing up the patch, Narayanan. I have no further&lt;br/&gt;
comments to the client code. Great work!&lt;/p&gt;

&lt;p&gt;I haven&apos;t actually tested the patch with Mustang and JDBC 4.0, but&lt;br/&gt;
derbyall passes on Sun JVM 1.4.2/Solaris 10 x86.&lt;/p&gt;</comment>
                            <comment id="12367557" author="rhillegas" created="Fri, 24 Feb 2006 03:25:42 +0000"  >&lt;p&gt;The jdb4 tests run cleanly under 1.6. Derbyall ran cleanly for me on cygwin/xp under 1.4, modulo pre-existing failures in wisconsin, syscat, and xaSimplePositive. I have committed this patch with subversion rev 380187.&lt;/p&gt;</comment>
                            <comment id="12551300" author="fuzzylogic" created="Thu, 13 Dec 2007 09:04:45 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12323034" name="ClientFrameworkExplanation_1.txt" size="2086" author="narayanan" created="Thu, 16 Feb 2006 09:01:27 +0000"/>
                            <attachment id="12323233" name="ClientFrameworkExplanation_2.txt" size="1134" author="narayanan" created="Tue, 21 Feb 2006 18:12:07 +0000"/>
                            <attachment id="12322913" name="ClientFramework_Explanation.txt" size="3291" author="narayanan" created="Mon, 13 Feb 2006 18:00:33 +0000"/>
                            <attachment id="12321932" name="lob.diff" size="390019" author="narayanan" created="Fri, 13 Jan 2006 23:32:40 +0000"/>
                            <attachment id="12322328" name="lob_1.diff" size="422679" author="narayanan" created="Wed, 25 Jan 2006 13:41:08 +0000"/>
                            <attachment id="12322332" name="lob_2.diff" size="422218" author="narayanan" created="Wed, 25 Jan 2006 18:56:40 +0000"/>
                            <attachment id="12322895" name="lob_3.diff" size="416364" author="narayanan" created="Sun, 12 Feb 2006 20:45:26 +0000"/>
                            <attachment id="12322953" name="lob_4.diff" size="416472" author="narayanan" created="Tue, 14 Feb 2006 14:32:16 +0000"/>
                            <attachment id="12322954" name="lob_4.stat" size="2572" author="narayanan" created="Tue, 14 Feb 2006 14:32:16 +0000"/>
                            <attachment id="12323032" name="lob_5.diff" size="410354" author="narayanan" created="Thu, 16 Feb 2006 09:01:27 +0000"/>
                            <attachment id="12323033" name="lob_5.stat" size="2501" author="narayanan" created="Thu, 16 Feb 2006 09:01:27 +0000"/>
                            <attachment id="12323274" name="lob_6.diff" size="418274" author="narayanan" created="Thu, 23 Feb 2006 02:03:44 +0000"/>
                            <attachment id="12323275" name="lob_6.stat" size="2643" author="narayanan" created="Thu, 23 Feb 2006 02:03:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jan 2006 00:33:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29708</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0sz3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38512</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>