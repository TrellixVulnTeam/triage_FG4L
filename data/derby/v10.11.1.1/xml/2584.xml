<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2584/DERBY-2584.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2584] Creating a database with JPOX SchemaTool sometimes gives ArrayIndexOutOfBoundsException when getIndexInfo() is called</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2584</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;It has been reported (e.g. here: &lt;a href=&quot;http://www.jpox.org/servlet/forum/viewthread?thread=4034&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jpox.org/servlet/forum/viewthread?thread=4034&lt;/a&gt; ) that the database sometimes get corrupt when the db is created with JPOX SchemaTool. This leads to java.lang.ArrayIndexOutOfBoundsException for some (at least one: getIndexInfo) metadata calls. When this happens, the types array GenericParameterValueSet.initialize has length 0.&lt;/p&gt;

&lt;p&gt;I have not yet managed to reproduce the bug in a small repro. A workaround exists though: Create the database before you run the JPOX SchemaTool.&lt;/p&gt;

&lt;p&gt;The stack trace you get when getIndexInfo is called is &lt;/p&gt;

&lt;p&gt;2007-04-17 16:20:20.191 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_5,5,main&amp;#93;&lt;/span&gt; (XID = 1554), (SESSIONID = 10), (DATABASE = communitymc_portal1), (DRDAID = C0124DC3.H92B-954198994222304164&lt;/p&gt;
{11}
&lt;p&gt;), Failed Statement is: CALL SYSIBM.SQLSTATISTICS(?,?,?,?,?,?) with 6 parameters begin parameter #1: null :end parameter begin parameter #2: PORTAL :end parameter begin parameter #3: COMMUNITY :end parameter begin parameter #4: 1 :end parameter begin parameter #5: 1 :end parameter begin parameter #6: DATATYPE=&apos;JDBC&apos;;DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter&lt;br/&gt;
java.lang.ArrayIndexOutOfBoundsException: 0&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericParameterValueSet.initialize(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BaseActivation.setupActivation(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericActivationHolder.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.getActivation(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareMetaDataStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.prepareSPS(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQueryUsingSystemTables(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.doGetIndexInfo(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getIndexInfo(Unknown Source)&lt;br/&gt;
        at org.apache.derby.catalog.SystemProcedures.SQLSTATISTICS(Unknown Source)&lt;br/&gt;
        at org.apache.derby.exe.ac72e9c096x0112x0056x2b09xffffcd3424e39.g0(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.apache.derby.impl.services.reflect.ReflectMethod.invoke(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CallStatementResultSet.open(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedCallableStatement.executeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTTobjects(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.parseEXCSQLSTT(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.processCommands(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.drda.DRDAConnThread.run(Unknown Source)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12367904">DERBY-2584</key>
            <summary>Creating a database with JPOX SchemaTool sometimes gives ArrayIndexOutOfBoundsException when getIndexInfo() is called</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bernt">Bernt M. Johnsen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Apr 2007 09:25:30 +0100</created>
                <updated>Wed, 19 Feb 2014 13:44:13 +0000</updated>
                            <resolved>Wed, 9 May 2007 14:33:45 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12493951" author="mikem" created="Sun, 6 May 2007 22:51:50 +0100"  >&lt;p&gt;From reading the comments it looks like the db boots fine, but there is a persistent problem with some set of the metadata calls.  &lt;/p&gt;</comment>
                            <comment id="12494021" author="bernt" created="Mon, 7 May 2007 12:34:39 +0100"  >&lt;p&gt;The described workaround does not always solve the problem. &lt;/p&gt;</comment>
                            <comment id="12494022" author="bernt" created="Mon, 7 May 2007 12:36:23 +0100"  >&lt;p&gt;The bug is apparently inrouduced after we have had a 20 seconds hang (a lock timeout?) like the ones described in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-177&quot; title=&quot;Unnecessary waiting within EmbedDatabaseMetaData.getIndexInfo()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-177&quot;&gt;&lt;del&gt;DERBY-177&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1996&quot; title=&quot;DatabaseMetaData.getColumns() takes long time to return columns for a particular schema of Apache JDO TCK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1996&quot;&gt;DERBY-1996&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12494023" author="bernt" created="Mon, 7 May 2007 12:36:57 +0100"  >&lt;p&gt;Might be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1996&quot; title=&quot;DatabaseMetaData.getColumns() takes long time to return columns for a particular schema of Apache JDO TCK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1996&quot;&gt;DERBY-1996&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12494056" author="knutanders" created="Mon, 7 May 2007 16:13:22 +0100"  >&lt;p&gt;The attached java file (d2584.java) contains a simple repro for this error. What it does is:&lt;/p&gt;

&lt;p&gt;  1) create a new database&lt;br/&gt;
  2) open a connection in repeatable read, auto-commit off&lt;br/&gt;
  3) select * from sys.sysstatements&lt;br/&gt;
  4) call DatabaseMetaData.getIndexInfo() -&amp;gt; this will hang for derby.locks.waitTimeout seconds and return successfully&lt;br/&gt;
  5) call DatabaseMetaData.getIndexInfo() again -&amp;gt; this will throw ArrayIndexOutOfBoundsException&lt;/p&gt;

&lt;p&gt;I have verified that this fails consistently on 10.2.1.6, 10.2.2.0 and trunk. It does however not fail on 10.0.2.1 and 10.1.3.1.&lt;/p&gt;</comment>
                            <comment id="12494299" author="knutanders" created="Tue, 8 May 2007 15:57:48 +0100"  >&lt;p&gt;I don&apos;t know exactly what&apos;s happening, but it seems like an attempt to store the SPS for getIndexInfo() in a nested transaction fails because the parent transaction holds a shared lock on SYSSTATEMENTS. Therefore, an attempt is made to store the SPS in the parent transaction, and that succeeds. However, the SPS that is stored is not complete, so the next call to getIndexInfo() fails.&lt;/p&gt;

&lt;p&gt;SPSDescriptor.updateSYSSTATEMENTS() and DataDictionaryImpl.updateSPS() have some logic to ensure that parts of the stored statement are only updated the first time the statement is prepared. But since the first failed attempt in the nested transaction is counted as the first compile, the update in the main transaction does not update everything correctly.&lt;/p&gt;

&lt;p&gt;The attached patch restores some of the state (one boolean field--initiallyCompilable) when the first update times out, so that the update in the main transaction is regarded as the first compilation. This makes the repro run without errors. Does this sound like a reasonable approach? I have not run any tests yet.&lt;/p&gt;</comment>
                            <comment id="12494401" author="knutanders" created="Tue, 8 May 2007 22:28:44 +0100"  >&lt;p&gt;Derbyall and suites.All ran cleanly with initiallyCompilable.diff. I&apos;ll see if I can add some comments and a test case to it.&lt;/p&gt;</comment>
                            <comment id="12494460" author="knutanders" created="Wed, 9 May 2007 10:07:36 +0100"  >&lt;p&gt;Uploaded a new patch which adds a comment about the fix and a JUnit test case that fails without the fix. The patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12494464" author="bernt" created="Wed, 9 May 2007 10:55:58 +0100"  >&lt;p&gt;Patch looks good. Thanks! Tested on trunk, and the patched solved the corruption problem (although the deadlock (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-177&quot; title=&quot;Unnecessary waiting within EmbedDatabaseMetaData.getIndexInfo()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-177&quot;&gt;&lt;del&gt;DERBY-177&lt;/del&gt;&lt;/a&gt;) is still there).&lt;/p&gt;</comment>
                            <comment id="12494466" author="oysteing" created="Wed, 9 May 2007 11:02:25 +0100"  >&lt;p&gt;Patch looks good.  I have run the JPOX schema creation tool and the patch fixes the failure.&lt;/p&gt;</comment>
                            <comment id="12494474" author="bernt" created="Wed, 9 May 2007 12:05:36 +0100"  >&lt;p&gt;There are 3 Possible workarounds for this bug:&lt;/p&gt;

&lt;p&gt;1) Make JPOX SchemaTool run with READ_COMMITTED (the bug wil only&lt;br/&gt;
   happen for REPEATABLE_READ (or higher?).&lt;/p&gt;

&lt;p&gt;2) Make JPOX SchemaTool run in autocommit moed (if that&apos;s feasible).&lt;/p&gt;

&lt;p&gt;3) Create the database before you run SchemaTool with code like this:&lt;/p&gt;

&lt;p&gt;        Connection c = DriverManager.getConnection(url);&lt;br/&gt;
        DatabaseMetaData dmd = c.getMetaData();&lt;br/&gt;
        dmd.getIndexInfo(&quot;&quot;,&quot;&quot;,&quot;&quot;,false,false);&lt;br/&gt;
        dmd.getExportedKeys(&quot;&quot;,&quot;&quot;,&quot;&quot;);&lt;br/&gt;
        dmd.getImportedKeys(&quot;&quot;,&quot;&quot;,&quot;&quot;);&lt;br/&gt;
        c.close();&lt;/p&gt;

&lt;p&gt;   This is for SchemaTool in JPOX 1.1.0. If additional metadata calls&lt;br/&gt;
   is needed, you will easily see that in the stackTrace you get from&lt;br/&gt;
   the bug.&lt;/p&gt;</comment>
                            <comment id="12494497" author="knutanders" created="Wed, 9 May 2007 14:33:45 +0100"  >&lt;p&gt;Thanks Bernt and &#216;ystein for reviewing and testing the patch.&lt;br/&gt;
Committed to trunk with revision 536516.&lt;br/&gt;
Committed to 10.2 with revision 536517.&lt;/p&gt;</comment>
                            <comment id="12494678" author="bernt" created="Thu, 10 May 2007 10:04:21 +0100"  >&lt;p&gt;Verified.&lt;/p&gt;</comment>
                            <comment id="12494707" author="bernt" created="Thu, 10 May 2007 12:17:50 +0100"  >&lt;p&gt;Another possible workaround, avaialble for JPOX 1.1.1 and later: Write an extension to DerbyAdapter implementing&lt;/p&gt;

&lt;p&gt;    public int getTransactionIsolationForSchemaCreation()&lt;/p&gt;
    {
        return Connection.TRANSACTION_READ_COMMITTED;
    }

&lt;p&gt;Read &lt;a href=&quot;http://www.jpox.org/docs/1_1/extensions/datastore_adapter.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jpox.org/docs/1_1/extensions/datastore_adapter.html&lt;/a&gt; on how to plug in the new adapter.&lt;/p&gt;</comment>
                            <comment id="13292729" author="jodeleit" created="Mon, 11 Jun 2012 11:15:54 +0100"  >&lt;p&gt;I get a similar exception, ArrayIndexOutOfBoundsException in org.apache.derby.impl.sql.GenericParameterValueSet.initialize(), with derby 10.8.2.2.&lt;br/&gt;
Full trace appended as comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4160&quot; title=&quot;getMetaData().getIndexInfo crashes with &amp;quot;ERROR X0Y68: Column &amp;#39;PARAM1&amp;#39; already exists.&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4160&quot;&gt;&lt;del&gt;DERBY-4160&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12422868">DERBY-4160</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12353881">DERBY-1996</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12471541">DERBY-4773</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="31112">DERBY-177</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12356868" name="d2584.java" size="931" author="knutanders" created="Mon, 7 May 2007 16:13:22 +0100"/>
                            <attachment id="12356963" name="derby-2584-v1.diff" size="4179" author="knutanders" created="Wed, 9 May 2007 10:07:36 +0100"/>
                            <attachment id="12356964" name="derby-2584-v1.stat" size="173" author="knutanders" created="Wed, 9 May 2007 10:07:36 +0100"/>
                            <attachment id="12356925" name="initiallyCompilable.diff" size="765" author="knutanders" created="Tue, 8 May 2007 15:57:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 6 May 2007 21:51:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23110</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0be7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35664</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>