<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-918/DERBY-918.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-918] introduce a new test type to run junit tests from the current harness</title>
                <link>https://issues.apache.org/jira/browse/DERBY-918</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;It seems to me that for including a new JUnit test into i.e derby-all we need to make a new java class with a main() method, which parses a command line and set up the testsuite and run it, just like any java program. Basically we are running the junit tests as test type &quot;java&quot;.&lt;/p&gt;

&lt;p&gt;Instead of having to do this for every junit test going into a derby test suite, I would propose a different strategy.&lt;/p&gt;

&lt;p&gt;I propose to introduce a new test type called &quot;junit&quot; (current test types are: sql,sql2,unit,java,multi,demo - unit is not junit)&lt;/p&gt;

&lt;p&gt;Then you can use:&lt;/p&gt;

&lt;p&gt;java org.apache.derbyTesting.functionTests.harness.RunTest &amp;lt;TestCaseClassName&amp;gt;.junit&lt;/p&gt;

&lt;p&gt;to run a Junit test - instead of:&lt;/p&gt;

&lt;p&gt;java org.apache.derbyTesting.functionTests.harness.RunTest &amp;lt;AnotherClassWithMainMethod&amp;gt;.java&lt;/p&gt;

&lt;p&gt;When starting a test of type junit, the RunTest class may simply use the&lt;br/&gt;
junit.textui.TestRunner class, which has a main method which takes a TestCase class name as parameter.  The junit.textui.TestRunner  runs the tests defined by the suite() method of the TestCase class.&lt;/p&gt;

&lt;p&gt;I think this strategy will make it easier to integrate new JUnit tests into the current test suites, since it save you the trouble of creating a java class with a main method for every test.&lt;/p&gt;
</description>
                <environment>All</environment>
        <key id="12328521">DERBY-918</key>
            <summary>introduce a new test type to run junit tests from the current harness</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andreask">Andreas Korneliussen</assignee>
                                    <reporter username="andreask">Andreas Korneliussen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Feb 2006 21:12:15 +0000</created>
                <updated>Tue, 11 Apr 2006 18:05:12 +0100</updated>
                            <resolved>Tue, 11 Apr 2006 18:05:12 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Test</component>
                        <due>Fri, 10 Feb 2006 08:00:00 +0000</due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12365562" author="andreask" created="Wed, 8 Feb 2006 22:48:10 +0000"  >&lt;p&gt;Attached is a patch which introduces the new test type junit.&lt;/p&gt;

&lt;p&gt;I had a problem regarding running with security manager: it seems that if my testcase class (which is inside derbyTesting.jar) need a privilege, the privilege must be enabled in junit.jar. So junit.jar may need the superset of privileges for all jar files (derby.jar, derbyTesting.jar, ..)  &lt;br/&gt;
For this reason I added all permissions to junit.jar. The junit.jar has to be copied into the same directory as the other jar files.&lt;br/&gt;
Please let me know if someone has a better suggestion to solve this problem.&lt;/p&gt;</comment>
                            <comment id="12365578" author="djd" created="Thu, 9 Feb 2006 00:15:51 +0000"  >&lt;p&gt;Adding AllPermission to junit.jar is not required, Java provides the concept of privilieged blocks to solve this very issue.&lt;/p&gt;

&lt;p&gt;The Java security model is that all code in the calling stack must have the required permissions to execute a restricted action.&lt;br/&gt;
Thus you see that junit.jar requires whatever permission your code needed.&lt;/p&gt;

&lt;p&gt;However this is not a flexible solution, so Java has the concept of a privilieged block, kind of like the su command in unix.&lt;br/&gt;
Code executed in a priv block only requires permission for all code on the stack from the point of the restricted action up to&lt;br/&gt;
the start of the priv block.&lt;/p&gt;

&lt;p&gt;Thus, say with derby.jar the policy file can grant access to read/write a database directory  but not grant it to the calling applicaiton,&lt;br/&gt;
thus ensuring the application cannot bypass the database security by reading files directly.&lt;/p&gt;

&lt;p&gt;See the security section of the J2SE specifications for more details.&lt;/p&gt;</comment>
                            <comment id="12365615" author="davidvc" created="Thu, 9 Feb 2006 04:16:14 +0000"  >&lt;p&gt;This patch looks very good, solves the problem simply.  I agree however that granting allPermission to junit is not the way to go, and that privileged blocks should solve this.  A nice way to do privileged blocks is with anonymous inner classes so your test class doesn&apos;t have to implement a &quot;run&quot; method that does mutiple things.&lt;/p&gt;</comment>
                            <comment id="12365727" author="andreask" created="Thu, 9 Feb 2006 22:32:33 +0000"  >&lt;p&gt;Thanks for all tips for fixing the securitymanager issue.&lt;br/&gt;
Attached is an updated patch.  The new patch does not do anything with the policy file, however I have fixed TestUtil to do privileged calls for getting system properties and loading the JDBC driver. &lt;/p&gt;</comment>
                            <comment id="12365729" author="kristwaa" created="Thu, 9 Feb 2006 22:40:56 +0000"  >&lt;p&gt;(Sorry for accidentally finding a keyboard shortcut that submitted the comment before I was finished...)&lt;br/&gt;
 I have one comment related to the patch, or actually a comment in the patch:&lt;/p&gt;

&lt;p&gt;        else if (testType.equals(&quot;junit&quot;))&lt;/p&gt;
        {
            System.out.println(&quot;JUnit tests not implemented yet with useprocess=false&quot;);
            System.exit(1);
            
            // This does not compile since JUnit is not in the CLASSPATH
            //junit.textui.TestRunner.run
            //(new junit.framework.TestSuite(Class.forName(javaPath + &quot;.&quot; + testBase)));
        } 

&lt;p&gt;If we use the way described in the comment to start the test, it will differ from how we do it when useprocess=true. When we start the testrunner from the command line, it will use the method &apos;BaseTestRunner.getTest&apos;, which uses reflection to call the test class&apos; &apos;suite&apos; method. The way described by the comment will also use reflection, but it will get a list of all methods in the test class and find those that starts with &apos;test&apos;.&lt;/p&gt;

&lt;p&gt;The latter case would cause any test setup done/initiated from &apos;suite&apos; to be skipped. I have observed on the developer list that we have talked about using a test decorator, like &apos;TestSetup&apos;, to create a common test setup/environment for the tests in the suite (or test class). &apos;suite&apos; could also possibly skip one or more test methods that is known to fail, but these would be included in the latter case.&lt;/p&gt;

&lt;p&gt;I know this is a little ahead of time, but I would rather see the comment deleted, to make sure we don&apos;t simply uncomment it later and expect things to work as before.&lt;/p&gt;</comment>
                            <comment id="12365734" author="andreask" created="Thu, 9 Feb 2006 22:56:12 +0000"  >&lt;p&gt;Kristian, thanks for pointing the issue with the code in the comment.&lt;br/&gt;
I have removed it.&lt;/p&gt;</comment>
                            <comment id="12367357" author="andreask" created="Thu, 23 Feb 2006 00:19:09 +0000"  >&lt;p&gt;The improvement has been checked in&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12322796" name="DERBY-918.diff" size="6136" author="andreask" created="Thu, 9 Feb 2006 22:56:12 +0000"/>
                            <attachment id="12322789" name="DERBY-918.stat" size="243" author="andreask" created="Thu, 9 Feb 2006 22:32:33 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12328522">DERBY-919</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Feb 2006 00:15:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29775</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16tz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40757</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>