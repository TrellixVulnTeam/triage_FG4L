<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:44:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-335/DERBY-335.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-335] Enhance Derby by adding SYNONYM support. A synonym is an alternate name for a view or a table.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-335</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Synonym provides an alternate name for a table or a view that is present in the same schema or another schema. A synonym can also be created for another synonym, causing nesting of synonyms. A synonym can be used in SELECT, INSERT, UPDATE, DELETE or LOCK TABLE statements instead of the original qualified table or view name. Note that a synonym can be created for a table or a view that doesn&apos;t yet exists. But the target table/view must be present before the synonym can be used.&lt;/p&gt;

&lt;p&gt;Synonyms are supported by all major database vendors, including Oracle, DB2 and mySQL. DB2 also allows CREATE ALIAS statement, which does exactly same as CREATE SYNONYM. Creating aliases instead of synonyms is not supported by Oracle or mySQL, so I propose that Derby not support creating aliases. Synonyms are not part of SQL-2003 spec, but is a common-SQL statement among major database vendors. SQL standard doesn&apos;t pay attention to DDLs as much, so I suspect they skipped synonyms. &lt;/p&gt;

&lt;p&gt;I will be adding two new DDL statements to Derby:&lt;/p&gt;

&lt;p&gt;CREATE SYNONYM &amp;lt;SynonymSchema&amp;gt;.&amp;lt;SynonymName&amp;gt; FOR &amp;lt;TargetSchema&amp;gt;.&amp;lt;TargetName&amp;gt;&lt;br/&gt;
DROP SYNONYM &amp;lt;SynonymSchema&amp;gt;.&amp;lt;SynonymName&amp;gt;&lt;/p&gt;

&lt;p&gt;Synonyms share the same namespace as tables or views. It is not possible to create a synonym with same name as a table that already exists in the same schema. Similarly, a table/view can&apos;t be created that matches a synonym already present.&lt;/p&gt;</description>
                <environment>Generic</environment>
        <key id="12311069">DERBY-335</key>
            <summary>Enhance Derby by adding SYNONYM support. A synonym is an alternate name for a view or a table.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bandaram">Satheesh Bandaram</assignee>
                                    <reporter username="bandaram">Satheesh Bandaram</reporter>
                        <labels>
                    </labels>
                <created>Sun, 5 Jun 2005 09:52:38 +0100</created>
                <updated>Wed, 13 Mar 2013 17:58:13 +0000</updated>
                            <resolved>Wed, 15 Jun 2005 04:48:34 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12312666" author="bandaram" created="Sun, 5 Jun 2005 09:59:16 +0100"  >&lt;p&gt;Here is some Implementation notes and my patch tries to implement the proposed behavior.&lt;/p&gt;

&lt;p&gt;There are two primary parts to the implementation. First, implement the DDL support and second implement runtime mapping of a synonym to its base table/view.&lt;/p&gt;

&lt;p&gt;Create synonym DDL&lt;/p&gt;

&lt;p&gt;Derby already supports creating functions/procedures using CreateAliasNode and CreateAliasConstantAction. In trying to avoid creating more nodes, I have extended these to also handle synonyms. After parsing create synonym DDL, the bind phase performs some checks on the statement, like disabling a synonym on a temporary table (these don&apos;t exists in catalogs) etc.&lt;/p&gt;

&lt;p&gt;Most of the work is performed in the CreateAliasConstantAction. This tries to map schema information to system catalogs. Some of the constraints are:&lt;/p&gt;

&lt;p&gt;   1. TargetSchema needs to be stored as a name, rather than a schemaID. This ensures that a synonym stays valid even if the targetSchema is dropped and recreated. Similarly a TargetName needs to be stored as a string, instead of a tableID. TargetName need not be present at the DDL time as a database object.&lt;br/&gt;
   2. While I am providing implementation that allows creating synonyms for tables and views, it is possible to extend this mechanism to other database objects as well, like procedures or functions. Some of the database vendors already support this.&lt;/p&gt;

&lt;p&gt;There seem to be several options to map this info to existing catalogs&lt;/p&gt;

&lt;p&gt;   1. Use the SYSALIASES catalog to store all synonym info. This could be achieved either by adding more columns to store TargetSchema and TargetTable or by using AliasInfo to store them as a java object. We currently store function/procedure info by creating a RoutineAliasInfo. I am proposing we follow the same approach. Since synonyms share same namespace with views and tables, we need to check if a table/view is already present before allowing a synonym to be created.&lt;br/&gt;
   2. It is also possible to add extra columns to SYSTABLES to hold TargetSchema/TargetTable info, if the object refers to a synonym. This approach makes it easy to ensure same namespace is used for synonyms, tables and views. If synonyms are also allowed be created for other database objects, then we would have to check for any namespace conflicts. Database upgrade needs to ensure creating these extra columns following a hard upgrade.&lt;/p&gt;

&lt;p&gt;CreateAliasConstantAction also needs to catch some error conditions. Attempts to create a cycling synonym reference should result in an error. This can be achieved by traversing a synonym chain. Also attempts to create a synonym to a table/view that doesn&apos;t already exists should raise a warning and succeed.&lt;/p&gt;

&lt;p&gt;Synonym resolution&lt;/p&gt;

&lt;p&gt;When a DML statement refers to a synonym, it needs to be resolved to its base table or base view. This can be achieved by traversing a synonym chain by reading AliasDescriptors.&lt;/p&gt;

&lt;p&gt;Other changes&lt;/p&gt;

&lt;p&gt;I will also be providing some other related changes to Derby.&lt;/p&gt;

&lt;p&gt;   1. Enhance dblook schema dumping tool to emit synonym info. Changes are required to the tool and these depend on how the synonym info is stored in the catalogs.&lt;br/&gt;
   2. Add required dependency registering and checking. These ensure that when a synonym is dropped, for example, all plans that depend on the schema are invalidated.&lt;/p&gt;</comment>
                            <comment id="12312708" author="bandaram" created="Mon, 6 Jun 2005 13:01:06 +0100"  >&lt;p&gt;Second version of the patch. Still to implement include&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Dependency registration and checking. (will be submitted as another patch)&lt;/li&gt;
	&lt;li&gt;May make minor reorg of code to merge resolveTableToSynonym with existing routines.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12313626" author="bandaram" created="Wed, 15 Jun 2005 04:48:34 +0100"  >&lt;p&gt;Code has been present in the trunk for sometime.  Code changes were submitted as part of SVN checkins: 180459,  189716 and 190182. Feature should be available in 10.1 release.&lt;/p&gt;</comment>
                            <comment id="12420416" author="bandaram" created="Wed, 12 Jul 2006 03:42:10 +0100"  >&lt;p&gt;This new feature has been in Derby since 10.1.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12636820">DERBY-6109</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12310549" name="synonym.patch.jira" size="60650" author="bandaram" created="Mon, 6 Jun 2005 13:01:06 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12311258">DERBY-347</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0suf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38491</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>