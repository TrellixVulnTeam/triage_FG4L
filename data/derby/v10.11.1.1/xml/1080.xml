<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1080/DERBY-1080.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1080] Connection reset when using security mechanism=EUSRIDPWD results in protocol error.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1080</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;if connection is reset,  the security mechanism related information for EUSRIDPWD is not reset correctly and this leads to a protocol error. &lt;/p&gt;


</description>
                <environment></environment>
        <key id="12329863">DERBY-1080</key>
            <summary>Connection reset when using security mechanism=EUSRIDPWD results in protocol error.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skambha">Sunitha Kambhampati</assignee>
                                    <reporter username="skambha">Sunitha Kambhampati</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Mar 2006 08:16:44 +0000</created>
                <updated>Wed, 12 Jul 2006 02:44:48 +0100</updated>
                            <resolved>Wed, 12 Apr 2006 08:25:50 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12369282" author="skambha" created="Wed, 8 Mar 2006 02:30:37 +0000"  >&lt;p&gt;This patch Derby1080.diff.txt provides a fix to ensure that on a connection reset, we dont throw too many codepoint error when reading SECTKN on a parseSECCHK when EUSRIDPWD security mechanism  is used.&lt;/p&gt;

&lt;p&gt;Overview:&lt;br/&gt;
DRDA spec, mentions this in section about connection pooling:&lt;br/&gt;
&quot;Allows an application requester to reuse an existing network connection for a different&lt;br/&gt;
application once an application disconnects from the connection either by terminating or by&lt;br/&gt;
releasing the connection.&lt;br/&gt;
An application requester or application server at AGENT manager level 7 indicates the&lt;br/&gt;
support of flowing the EXCSAT, ACCSEC, SECCHK, and ACCRDB commands after a&lt;br/&gt;
successful commit or rollback to initialize a connection on behalf of a new application.&quot;&lt;/p&gt;

&lt;p&gt;The DDM manual (pg54) for the ACCSEC command states that &lt;br/&gt;
&quot;The source server can send repeated ACCSEC commands when it wants to reuse a connection&lt;br/&gt;
for another application or transaction. The ACCSEC must be preceded by an EXCSAT, and&lt;br/&gt;
followed by a SECCHK and ACCRDB.&quot;&lt;/p&gt;

&lt;p&gt;In the NetworkServer code:  we have comments in parseEXCSAT() which mentions about connection resets &lt;br/&gt;
where a EXCSAT is followed by an ACCSEC  (see DRDAConnThread.line 1222-1235)&lt;/p&gt;

&lt;p&gt;Couple things to note:&lt;br/&gt;
1)On a parseACCSEC, on a RDBNAM , we can re-use the database object. Database stored information for &lt;br/&gt;
 the decryptedUserId and decryptedPassword which is used only for EUSRIDPWD security mechanism case. &lt;/p&gt;

&lt;p&gt;2)ACCSEC is followed by SECCHK. On parseSECCHK, for the SECTKN codepoint we check if &lt;br/&gt;
database.decryptedUserId and decryptedPassword is null and if so only then read the sectkn&apos;s that &lt;br/&gt;
are sent by client.  (see method parseSECCHK/case CodePoint.SECTKN)&lt;/p&gt;

&lt;p&gt;3)On a re-use of a connection, since reset of the 2 variables in database does not happen, on a &lt;br/&gt;
SECCHK flow, we incorrectly throw an error that too many codepoints sent. The error can only be seen when &lt;br/&gt;
EUSRIDPWD security mechanism is used since only this requires the flow of SECTKN for encrypted Userid and password&lt;br/&gt;
that is sent from the client.  &lt;/p&gt;

&lt;p&gt;Fix: &lt;br/&gt;
This patch fixes the case for EUSRIDPWD where this problem happens. For other security mechanisms the fields decryptedUserId and decryptedPassword is not used. Reset decryptedUserId and decryptedPasword on a parseACCSEC/RDBNAM to null.&lt;/p&gt;

&lt;p&gt;svn stat:&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\DRDAConnThread.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\derbynet\testSecMec.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\testSecMec.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ver2.6\testSecMec.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ibm14\ver2.6\testSecMec.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ibm14\testSecMec.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\testSecMec.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\ibm14\testSecMec.out&lt;/p&gt;

&lt;p&gt;I have a feeling we need to investigate more into this connection pooling (connection reset) as well &lt;br/&gt;
as transaction pooling. Maybe someone with more knowledge can comment on how transaction pooling &lt;br/&gt;
happens in network server. &lt;/p&gt;

&lt;p&gt;I ran derbyall on ibm142/linux ok with known failures(stress.multi and surtest).&lt;br/&gt;
I ran derbynet/testSecMec.java for both JCC and client driver on ibm131/ibm141/ibm142/ibm15 as well as sun jvms 131/142/15.&lt;/p&gt;

&lt;p&gt;Can someone please review this change. Thanks. &lt;/p&gt;</comment>
                            <comment id="12369447" author="kmarsden" created="Wed, 8 Mar 2006 21:47:40 +0000"  >&lt;p&gt;Thanks for the patch Sunitha. I applied it and ran derbynetmats and derbynetclientmats and all passed.&lt;br/&gt;
Your change looks like it would resolve the problem but I think it would be better to put a reset() method in Database.java rather than resetting the variables  directly in DRDAConnThread. &lt;/p&gt;
</comment>
                            <comment id="12369926" author="skambha" created="Sat, 11 Mar 2006 05:41:28 +0000"  >&lt;p&gt;I am attaching a patch for Bryan&apos;s comments in&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-1080%29-Connection-reset-when-using-security-mechanism%3DEUSRIDPWD-results-in-protocol-error.-p3293695.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Re%3A-jira-Updated%3A-%28DERBY-1080%29-Connection-reset-when-using-security-mechanism%3DEUSRIDPWD-results-in-protocol-error.-p3293695.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks Bryan and Kathey for looking at this patch.  &lt;/p&gt;

&lt;p&gt;This patch (Derby1080.2.diff.txt) makes the following change compared to previous Derby1080.diff.txt.&lt;/p&gt;

&lt;p&gt;1) Reset of database.decryptedUserId and decryptedPassword is moved from DRDAConnThread to Database.reset(). Note: that these 2 variables were not correctly reset for connection-reuse which was causing the problem mentioned in this jira. This patch adds reset() method in Database and resets the above 2 variable and also resets the variables related to security mechanism only.&lt;/p&gt;

&lt;p&gt;I talked to Kathey on IRC about this:&lt;br/&gt;
&amp;#8211; the above change fixes this particular problem in this issue.&lt;br/&gt;
&amp;#8211; But more investigation is required for database reset when connection pooling and transaction pooling is done. &lt;br/&gt;
&amp;#8211; File a jira so the reset cleanup can be done after investigation. &lt;br/&gt;
Does this sound reasonable ?&lt;/p&gt;

&lt;p&gt;2) I have reorganized the regression test and added lots of comments. I hope they are helpful in understanding the expected results. &lt;/p&gt;

&lt;p&gt;3) Bryan asked&quot;Lastly, would your test have been any different if you had used&lt;br/&gt;
ConnectionPoolDataSource.getPooledConnection(String user, String password)&lt;br/&gt;
rather than ConnectionPoolDataSource.getPooledConnection()? &quot;&lt;/p&gt;

&lt;p&gt;The result would be the same.  For eusridpwd case, the client sends the encrypted userid and password sectkns as part of SECCHK. The protocol error was happening because we only read the 2 sectkns if the database.decryptedUserId , database.decryptedPassword is null,  otherwise we think we have already read this. Thus on a connection reset,if the decryptedUserId and decryptedPassword are not reset, server assumes we have seen more SECTKN&apos;s and thus we throw error too many codepoints.&lt;/p&gt;

&lt;p&gt;Per the code: The userid/password passed in getPooledConnection will be the user and password that is used. If userid and password is not  set in getPooledConnection, then the information is retrieved from the ConnectionPoolDataSource. &lt;/p&gt;

&lt;p&gt;svn stat:&lt;/p&gt;

&lt;p&gt;code change&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\Database.java&lt;br/&gt;
M      java\drda\org\apache\derby\impl\drda\DRDAConnThread.java&lt;/p&gt;

&lt;p&gt;test change&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\derbynet\testSecMec.java&lt;/p&gt;

&lt;p&gt;master file for JCC2.4 driver and for IBM131, Sun JVM131,141,142,15.&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\testSecMec.out&lt;/p&gt;

&lt;p&gt;master file for JCC2.6 driver and for IBM131, Sun JVM(versions 131,141,142,15)&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ver2.6\testSecMec.out&lt;/p&gt;

&lt;p&gt;master file for JCC2.6 driver and for IBM (versions 141,142,15). Note these jvms support the EUSRIDPWD security mechanism.&lt;br/&gt;
M     java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ibm14\ver2.6\testSecMec.out&lt;/p&gt;

&lt;p&gt;master file for JCC2.4 driver and for IBM(versions 141,142,15). Note these jvms support the EUSRIDPWD security mechanism.&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\ibm14\testSecMec.out&lt;/p&gt;

&lt;p&gt;master file for client driver and for IBM131, Sun JVM (versions 131,141,142,15)&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\testSecMec.out&lt;/p&gt;

&lt;p&gt;master file for client driver and for IBM jvm (versions 141,142,15)&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\ibm14\testSecMec.out&lt;/p&gt;

&lt;p&gt;Test ran ok with derbynetclientmats and derbynet with ibm142 on linux with known failures in surtest and stress.multi. &lt;br/&gt;
testSecMec.java was run with derby client, JCC2.4,JCC2.6 with ibm131,ibm141,ibm142,ibm15,sun - jdk131,141,142,15 ok.&lt;/p&gt;

&lt;p&gt;Please review this change.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12369952" author="skambha" created="Sat, 11 Mar 2006 09:56:46 +0000"  >&lt;p&gt;This issue requires &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1080&quot; title=&quot;Connection reset when using security mechanism=EUSRIDPWD results in protocol error.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1080&quot;&gt;&lt;del&gt;DERBY-1080&lt;/del&gt;&lt;/a&gt; to be fixed. Also both these issues affect one same file so patch for 962 wont cleanly apply for the file (testSecMec.java).&lt;/p&gt;</comment>
                            <comment id="12370212" author="skambha" created="Tue, 14 Mar 2006 01:22:44 +0000"  >&lt;p&gt;If there are no issues, I&apos;d appreciate if someone can commit this patch (derby1080.2.diff.txt).   Thanks. &lt;br/&gt;
Here is the short description for checkin comment. &lt;br/&gt;
--------------------------------------------------&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1080&quot; title=&quot;Connection reset when using security mechanism=EUSRIDPWD results in protocol error.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1080&quot;&gt;&lt;del&gt;DERBY-1080&lt;/del&gt;&lt;/a&gt;:  Connection reset when using security mechanism=EUSRIDPWD results in protocol error.&lt;/p&gt;

&lt;p&gt;For eusridpwd case, the client sends the encrypted userid and password sectkns as part of SECCHK. The protocol error was happening because we only read the 2 sectkns if the database.decryptedUserId , database.decryptedPassword is null, otherwise we think we have already read this. Thus on a connection reset,if the decryptedUserId and decryptedPassword are not reset, server assumes we have seen more SECTKN&apos;s and thus we throw error too many codepoints. &lt;/p&gt;

&lt;p&gt;Patch adds&lt;br/&gt;
&amp;#8211; code to reset the security mechanism related variables on a connection re-use.&lt;br/&gt;
&amp;#8211; regression test to testSecMec.java&lt;br/&gt;
----------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12370217" author="bryanpendleton" created="Tue, 14 Mar 2006 02:34:25 +0000"  >&lt;p&gt;I intend to submit this patch today. If any reviewers are still looking at it, please let me know.&lt;/p&gt;</comment>
                            <comment id="12370260" author="bryanpendleton" created="Tue, 14 Mar 2006 06:26:40 +0000"  >&lt;p&gt;Sunitha, I had a strange failure in testSecMec in the DerbyNet framework.&lt;/p&gt;

&lt;p&gt;This is on Linux, using Sun JDK 1.4, when I ran all of derbyall.&lt;/p&gt;

&lt;p&gt;I have attached the testSecMec.tmp file. Basically, the output just ceased at line 28, with no other error messages that I can find.&lt;/p&gt;

&lt;p&gt;I re-ran the test 5 or 6 times as a single test (-Dframework=DerbyNet derbynet/testSecMec.java) and I reran the derbynetmats suite with the DerbyNet framework.&lt;/p&gt;

&lt;p&gt;During the various re-runs, the test failed again the same way exactly once.&lt;/p&gt;

&lt;p&gt;So, there seems to be some sort of a very intermittent failure, but I cannot reproduce it.&lt;/p&gt;

&lt;p&gt;Does this make sense to you? Can you look at the attached testSecMec.tmp and tell me whether you have a theory for why I might have seen this very intermittent failure? Is there something that might be causing the test program to quit without flushing its output buffer?&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;</comment>
                            <comment id="12370265" author="skambha" created="Tue, 14 Mar 2006 06:45:37 +0000"  >&lt;p&gt;Thanks Bryan.&lt;/p&gt;

&lt;p&gt;No. I havent come across this test failing on my machines but I didnt run with jdk141 on linux. I had tested with sun 1.4.1 on windows (just this test). and on linux (ibm142).  &lt;/p&gt;

&lt;p&gt;In  derby-273, the dataSourcePermissions_net failed intermittently and that change affected testSecMec.java also and changed some streams.&lt;/p&gt;

&lt;p&gt;I&apos;d have to put some debug statements in the test to see up to what point it is running, but from the tmp, it seems like it doesnt get past the second testrun in the main for-loop.   I&apos;ll run it repeatedly on my machine and see if I can reproduce this failure.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Sunitha. &lt;/p&gt;</comment>
                            <comment id="12370273" author="forsini" created="Tue, 14 Mar 2006 08:05:44 +0000"  >&lt;p&gt;The changes look good to me and thanks for adding a connection reset test.&lt;/p&gt;

&lt;p&gt;My only minor comment would be to document a bit more in DRDAConnThread.java how we detect it is a connection re-use in parseACCSEC(). I know you have put lots of info in that JIRA but a bit more comment in that part of the code would be good.&lt;/p&gt;

&lt;p&gt;Regards.&lt;/p&gt;</comment>
                            <comment id="12370285" author="skambha" created="Tue, 14 Mar 2006 10:10:42 +0000"  >&lt;p&gt;I am attaching a DebugTest.diff.txt which adds some println statements to testSecMec to see if the intermittent problem with the test is an issue with the closing of System.out and System.err streams.  I built the insane version of derbyTesting.jar with this change in test.  Bryan-  if possible, can you run this test with this change or using this derbyTesting.jar and see if it reproduces.  Thanks much. &lt;/p&gt;

&lt;p&gt;Main logic for switching of  System.out and System.err streams was added as part of derby273 and then got merged with changes for derby 928. I&apos;ll study that more and see if I can find something.  &lt;/p&gt;

&lt;p&gt;I ran the test separately with jdk141/win2k several times and the test passed ok.   I tried to run it about 15 times on a linux machine (2.6 kernel, redhat) with sun 1.4.1 and the test passes. &lt;/p&gt;

&lt;p&gt;java version &quot;1.4.1_07&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_07-b02)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.4.1_07-b02, mixed mode)&lt;/p&gt;

&lt;p&gt;OS name:         Linux&lt;br/&gt;
OS architecture: i386&lt;br/&gt;
OS version:      2.6.9-22.0.1.ELsmp&lt;/p&gt;</comment>
                            <comment id="12370289" author="bryanpendleton" created="Tue, 14 Mar 2006 10:38:11 +0000"  >&lt;p&gt;The bug reproduces with the print statements in place, which I think is good, so we can continue to diagnose it.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the new &apos;.tmp&apos; file with the output of a failed test with the print statements in place, and also, this time, I am attaching the &apos;shutdown.std.log&apos; file. In the past, this file has been 0 bytes after the run, but this time it has 4 of the print statements in it.&lt;/p&gt;

&lt;p&gt;Please let me know what additional information I can provide.&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;</comment>
                            <comment id="12370374" author="skambha" created="Wed, 15 Mar 2006 01:28:40 +0000"  >&lt;p&gt;Thanks very much Bryan for the tmp and the log files.  &lt;/p&gt;

&lt;p&gt;The testSecMec test starts /stops the server and does so 4 times.  I will call one cycle of &lt;/p&gt;
{start server, runtest, stop server }
&lt;p&gt;as one testrun. &lt;/p&gt;

&lt;p&gt;from the printlns here is what I can see:&lt;br/&gt;
&amp;#8211; testrun0 - start server, runtest, switches System.out and System.err to the testSecMec.DerbyNet.shutdown.std.log and the testSecMec.DerbyNet.shutdown.err.log  &lt;br/&gt;
and shutsdown server and switches System.out and System.err streams back. &lt;/p&gt;

&lt;p&gt;&amp;#8211; testrun1 - start server, runtest and switches out and err streams and then after the call to shudown the server, the test seems to exit.&lt;/p&gt;

&lt;p&gt;Something in networkserver.shutdown() is causing the System.out stream to close and the test exits.&lt;/p&gt;

&lt;p&gt;I think the harness waits for the process streams to close and System.out.close() thus triggers the test to exit. To confirm this, I put a System.out.close() in the test program and the test exits.&lt;/p&gt;

&lt;p&gt;===============&lt;/p&gt;

&lt;p&gt;The 4 printlns in the shutdown.std.log makes sense.  It is printing the statements to this log after the switching of streams happens.  In the second testrun, the stream is switched and then prints the statement &quot;calling network server shutdown&quot; , but after that it exits. It doesnt print the next println which is Flush consoleLogStream. &lt;/p&gt;

&lt;p&gt;Calling network server shutdown. testrun&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
Flush consoleLogStream. testrun&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
Switch back consoleLogStream. testrun&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
Calling network server shutdown. testrun&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;====&amp;gt; after this println the next call is networkserver.shutdown()&lt;/p&gt;

&lt;p&gt;===============&lt;/p&gt;

&lt;p&gt;Not sure what is causing the streams to close in shutdown of the server.   The reason this stream switching logic was added seems to be that intentional exceptions on shutdown of server was written to the standard output streams causing diffs. Hence as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-273&quot; title=&quot;The derbynet/dataSourcePermissions_net.java test fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-273&quot;&gt;&lt;del&gt;DERBY-273&lt;/del&gt;&lt;/a&gt;, before calling shutdown, the system.out and System.err are switched to testSecMec.DerbyNet.shutdown.std.log and testSecMec.DerbyNet.shutdown.err.log files and after shutdown they are switched back so the test output can continue to go to System.out.&lt;/p&gt;

&lt;p&gt;I tried to look briefly if there were any java bugs related to streams but didnt find any that seemed related.&lt;/p&gt;

&lt;p&gt;==============&lt;br/&gt;
If this intermittent test failure is due to switching of streams, I&apos;d expect that maybe it will happen without the 1080 fix too, no? &lt;/p&gt;

&lt;p&gt;Can you mention what environment you are seeing this failure.&lt;/p&gt;

&lt;p&gt;I ran this test couple more times in the night yday but couldnt reproduce it either with sane/insane jars on my linux test machine. &lt;/p&gt;

&lt;p&gt;I will post if I learn more.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12370376" author="skambha" created="Wed, 15 Mar 2006 01:32:29 +0000"  >&lt;p&gt;Just want to check if there is anything interesting in derby.log. Could  you attach the derby.log from the testrun.    Thanks. &lt;/p&gt;</comment>
                            <comment id="12370378" author="bryanpendleton" created="Wed, 15 Mar 2006 01:41:42 +0000"  >&lt;p&gt;Hi Sunitha, thanks for the updates.&lt;/p&gt;

&lt;p&gt;I agree with your analysis and the conclusions you have reached so far. Good work. I think we&apos;re getting closer.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the derby.log from the run, and I&apos;ve also attached my sysinfo, to give you more details about my environment.&lt;/p&gt;

&lt;p&gt;I will try to see if the problem reproduces without your 1080 fix.&lt;/p&gt;</comment>
                            <comment id="12370380" author="skambha" created="Wed, 15 Mar 2006 02:03:36 +0000"  >&lt;p&gt;Thanks. &lt;/p&gt;

&lt;p&gt;The premature_shutdown_derby.log was interesting in that the shutdown message doesnt even get to the derby.log.&lt;br/&gt;
In my successful runs, I see 4 shutdown messages in derby.log which is correct and as expected.&lt;/p&gt;

</comment>
                            <comment id="12370382" author="bryanpendleton" created="Wed, 15 Mar 2006 02:18:25 +0000"  >&lt;p&gt;Sunitha, can you help me understand the purpose of the Thread.sleep(5000) line in testSecMec.java? If I change that line from (5000) to (100), the problem becomes &lt;b&gt;much&lt;/b&gt; more reproducible.&lt;/p&gt;

&lt;p&gt;Is there a possibility that, on my machine, some action is sometimes taking longer than 5 seconds to perform, and so the problem is related to that sleep() call returning &quot;too soon&quot;?&lt;/p&gt;

&lt;p&gt;In your environment, what happens if you change the Thread.sleep() call?&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;</comment>
                            <comment id="12370395" author="skambha" created="Wed, 15 Mar 2006 02:51:42 +0000"  >&lt;p&gt;I tested both with Thread.sleep(100) and removing the call altogether and the test still passes OK in my environment. I am going to try to see if I can get access to machine with 2.4 kernel similar to what you are using.&lt;/p&gt;

&lt;p&gt; I am not sure why the Thread.sleep(5000) line is in this test. I&apos;ll try to look at it. This line is also in the dataSourcePermissions_net.java test.    Does anyone know ?  &lt;/p&gt;

&lt;p&gt;There is this code:&lt;br/&gt;
		        // how do we do this with the new api?&lt;br/&gt;
		        //networkServer.join();&lt;br/&gt;
                                                  Thread.sleep(5000);&lt;br/&gt;
---------------------------------------------------------------------&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12370398" author="bryanpendleton" created="Wed, 15 Mar 2006 03:14:27 +0000"  >&lt;p&gt;Patch derby1080.2.diff.txt committed as Revision 385857:&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewcvs?rev=385857&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=385857&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will address the intermittent test failure as a separate issue.&lt;/p&gt;</comment>
                            <comment id="12370419" author="skambha" created="Wed, 15 Mar 2006 05:17:00 +0000"  >&lt;p&gt;Thanks Bryan for committing this patch.     I have opened a new issue (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1114&quot; title=&quot;derbynet/testSecMec.java fails intermittently and test exits mysteriously when server is shutdown as part of the testrun.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1114&quot;&gt;&lt;del&gt;DERBY-1114&lt;/del&gt;&lt;/a&gt;) for the intermittent test failure. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12328892">DERBY-962</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12324130" name="DebugTest.diff.txt" size="31703" author="skambha" created="Tue, 14 Mar 2006 10:10:42 +0000"/>
                            <attachment id="12323875" name="Derby1080.diff.txt" size="22881" author="skambha" created="Wed, 8 Mar 2006 02:30:37 +0000"/>
                            <attachment id="12323876" name="Derby1080.stat.txt" size="739" author="skambha" created="Wed, 8 Mar 2006 02:30:37 +0000"/>
                            <attachment id="12324114" name="derby-1080-testSecMec.tmp" size="2388" author="bryanpendleton" created="Tue, 14 Mar 2006 06:26:39 +0000"/>
                            <attachment id="12324040" name="derby1080.2.diff.txt" size="29736" author="skambha" created="Sat, 11 Mar 2006 05:41:28 +0000"/>
                            <attachment id="12324041" name="derby1080.2.stat.txt" size="798" author="skambha" created="Sat, 11 Mar 2006 05:41:28 +0000"/>
                            <attachment id="12324131" name="derbyTesting.jar" size="4992961" author="skambha" created="Tue, 14 Mar 2006 10:10:42 +0000"/>
                            <attachment id="12324172" name="premature_shutdown_derby.log" size="5193" author="bryanpendleton" created="Wed, 15 Mar 2006 01:41:36 +0000"/>
                            <attachment id="12324173" name="premature_shutdown_sysinfo.out" size="3137" author="bryanpendleton" created="Wed, 15 Mar 2006 01:41:42 +0000"/>
                            <attachment id="12324133" name="testSecMec.DerbyNet.shutdown.std.log_with_prints" size="164" author="bryanpendleton" created="Tue, 14 Mar 2006 10:38:11 +0000"/>
                            <attachment id="12324132" name="testSecMec_with_prints.tmp" size="2668" author="bryanpendleton" created="Tue, 14 Mar 2006 10:38:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Mar 2006 21:47:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22294</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy15k7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40551</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>