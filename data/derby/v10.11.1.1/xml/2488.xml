<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2488/DERBY-2488.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2488] When loaded by jvm1.6 - EmbeddedConnectionPoolDataSource is not returning a JDBC 4 compliant PooledConnection object</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2488</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Updated the problem description to reflect the actual issue &lt;span class=&quot;error&quot;&gt;&amp;#91;Stan 4/5/07&amp;#93;&lt;/span&gt;:  EmbeddedConnectionPoolDataSource is not returning a JDBC 4 compliant PooledConnection object&lt;/p&gt;

&lt;p&gt;When loaded using JVM 1.6 the JDBC 3.0 data source (org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource) is reporting a JDBC spec compliance level of 4.  The DatabaseMetaData.getJDBCMajorVersion method should return the&lt;br/&gt;
correct spec compliance level (3) for the JDBC 3.0 data source.  The application server that relies on the reported spec compliance level to determine if a statement event listener should be registered will encounter a failure when  attemptting to register  an event listener with the JDBC 3.0 driver.&lt;/p&gt;

&lt;p&gt;Note that the JDBC 4.0 metadata call ..getMetaData().supportsStoredFunctionsUsingCallSyntax() is executed by the JDBC 3.0 driver.  This doesn&apos;t bother me but seems curious that this is supported by a JDBC 3.0 driver.&lt;/p&gt;

&lt;p&gt;Attached is a test case based on the test code from DERBY-8862 (JDBC 4 driver reports incorrect spec complieance level).&lt;/p&gt;

&lt;p&gt;Running the test:&lt;br/&gt;
set JAVA_HOME to a 1.6 JVM&lt;br/&gt;
Compile program&lt;br/&gt;
run command:   $&lt;/p&gt;
{JAVA_HOME}
&lt;p&gt;/java showJDBCdsMetaDataLis &amp;lt;path-to-database&amp;gt; 3.0 &lt;/p&gt;

&lt;p&gt;Using JAVA 6.0&lt;/p&gt;

&lt;p&gt;&amp;gt; &quot;%JAVA_HOME%\bin\java&quot; showJDBCdsMetaDataLis &quot;c:\tstdb102&quot; 3.0&lt;br/&gt;
 . . JDBC 3 or less: Using jdbc.EmbeddedConnectionPoolDataSource&lt;br/&gt;
Database product: Apache Derby&lt;br/&gt;
Database version: 10.2.2.0 - (485682)&lt;br/&gt;
Driver name:      Apache Derby Embedded JDBC Driver&lt;br/&gt;
Driver version:   10.2.2.0 - (485682)&lt;br/&gt;
JDBC driver major version: 4&lt;br/&gt;
JDBC driver minor version: 0&lt;br/&gt;
JDBC 4.0 metaData - SFusingCall: true&lt;br/&gt;
 &amp;gt;&amp;gt; exception thrown:&lt;br/&gt;
A non SQL error occured.&lt;br/&gt;
java.lang.AbstractMethodError: org.apache.derby.jdbc.EmbedPooledConnection.addStatementEventListener(Ljavax/sql/Statemen&lt;br/&gt;
tEventListener;)V&lt;br/&gt;
        at showJDBCdsMetaDataLis.main(showJDBCdsMetaDataLis.java:103)&lt;/p&gt;

</description>
                <environment>Run test using JVM 1.6</environment>
        <key id="12365826">DERBY-2488</key>
            <summary>When loaded by jvm1.6 - EmbeddedConnectionPoolDataSource is not returning a JDBC 4 compliant PooledConnection object</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="stan">Stan Bradbury</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Mar 2007 19:34:58 +0100</created>
                <updated>Thu, 24 Jan 2008 22:54:59 +0000</updated>
                            <resolved>Sun, 22 Apr 2007 01:13:31 +0100</resolved>
                                    <version>10.2.2.0</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12484183" author="stan" created="Mon, 26 Mar 2007 19:37:10 +0100"  >&lt;p&gt;load the JDBC 4.0 datasource driver when args&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = 6.0&lt;br/&gt;
If any other value is passed the JDBC 3.0 datasource driver is used&lt;/p&gt;</comment>
                            <comment id="12484185" author="stan" created="Mon, 26 Mar 2007 19:39:03 +0100"  >&lt;p&gt;Attaching again: Forgot to Grant license to ASF.  Thought it might be important&lt;/p&gt;</comment>
                            <comment id="12484202" author="djd" created="Mon, 26 Mar 2007 20:22:02 +0100"  >&lt;p&gt;I think the bug here is that EmbeddedConnectionPoolDataSource is not returning a JDBC 4 compliant PooledConnection object in JDK 6.&lt;/p&gt;

&lt;p&gt;These &quot;older&quot; data source implementations do return JDBC 4 objects (at least they are meant to), it&apos;s just that they themselves cannot implement the JDBC apis such as Wrapper and CommonDataSource because these new interfaces do not exist on older jvms. They are not just JDBC 3 versions of the driver.&lt;/p&gt;</comment>
                            <comment id="12485010" author="stan" created="Wed, 28 Mar 2007 23:15:08 +0100"  >&lt;p&gt;Thanks, Dan, for the information.  I realized the results of this test could be interpreted two ways and it looks like I recorded the wrong interpretation.  Unless you or someone corrects me (I am still confused on the subject) I will change the description of this issue to be: &lt;/p&gt;

&lt;p&gt;When loaded by jvm1.6, the jdbc.EmbeddedConnectionPoolDataSource does not support registering a JDBC 4.0 Statement Event Listener.&lt;/p&gt;

&lt;p&gt;The documentation, however, seems to say there are two versions, so I will also file documentation sub-tasks related to this once I am sure I understand this correctly. Below are a few of the statements that lead me to believe there was a version 3.0 and 4.0 datasource.  &lt;br/&gt;
...If I now understand correctly people should always reference EmbeddedConnectionPoolDataSource and there is no need to reference EmbeddedConnectionPoolDataSource40 (except as a workaround to a bug like this one) .&lt;br/&gt;
 &amp;gt;&amp;gt; Is this correct?&lt;/p&gt;

&lt;p&gt;Documentation talking about different implementations/variants of the datasources:&lt;br/&gt;
JAVADOC&lt;br/&gt;
 EmbeddedConnectionPoolDataSource40 supports the JDBC 4.0 specification for the J2SE 6.0 Java Virtual Machine environment. Use EmbeddedConnectionPoolDataSource if your application runs in the following environments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;JDBC 3.0 - Java 2 - JDK 1.4, J2SE 5.0&lt;/li&gt;
	&lt;li&gt;JDBC 2.0 - Java 2 - JDK 1.2,1.3&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Developers Guide:&lt;br/&gt;
Each of these DataSources has two variants. Use the first variant if your application run&lt;br/&gt;
on JDK 1.5 or lower. Use the second variant (the one whose class name ends with &quot;40&quot;)&lt;br/&gt;
if your application runs on JDK 1.6 or higher.&lt;br/&gt;
&#8226; org.apache.derby.jdbc.EmbeddedDataSource and&lt;br/&gt;
org.apache.derby.jdbc.EmbeddedDataSource40    ....&lt;/p&gt;</comment>
                            <comment id="12485033" author="djd" created="Thu, 29 Mar 2007 01:09:00 +0100"  >&lt;p&gt;No, there are two data sources versions, the 40 ones and the older ones.&lt;/p&gt;

&lt;p&gt;In a JDK 1.4/1.5 environment the applications must use the old ones (e.g. EmbeddedConnectionPoolDataSource)&lt;/p&gt;

&lt;p&gt;In JDK 6 applications should be using EmbeddedConnectionPoolDataSource40.&lt;/p&gt;

&lt;p&gt;The situation you are seeing is that the old version is being run in JDK 6, which of course could happen for existing applications.&lt;br/&gt;
In this case the api presented is a bit of a mix-up, it is not coded to be a JDBC 3.0 data source.&lt;br/&gt;
It will (should) return JDBC 4 objects even though the object it self does not satisify the JDBC 4.0 interfaces. Ie. EmbeddedConnectionPoolDataSource does not implement Wrapper and CommonDataSource.&lt;/p&gt;

&lt;p&gt;I think the documentation is correct, but silent on what happens when using the old versions in JDK 6.&lt;/p&gt;</comment>
                            <comment id="12486415" author="army" created="Tue, 3 Apr 2007 17:49:16 +0100"  >&lt;p&gt;I read Dan&apos;s comments on this issue and I (perhaps incorrectly) interpret them to mean that the fix for this problem is to simply ensure that EmbeddedConnectionPoolDataSource returns JDBC 4 objects when the app is running with JDK 6.  That said, it looks like there is only one JDBC 4 object that can be returned from EmbeddedConnectionPoolDataSource, and that object is a PooledConnection.  So I made the attached change (d2488_notTested_v1.patch), which is pretty much just a one-liner to return a JDBC 4 PooledConnection when running with JDK 6.&lt;/p&gt;

&lt;p&gt;The patch does a similar thing in EmbeddedXADataSource just because that &lt;b&gt;seems&lt;/b&gt; like a similar situation.  I don&apos;t know for sure if that&apos;s necessary, but it looks like it could be.&lt;/p&gt;

&lt;p&gt;As the name implies I have not fully tested this patch.  All I&apos;ve done is run the repro attached to this issue and verified that the _v1 patch causes the repro to run successfully, even with an input argument that is not &quot;6.0&quot;:&lt;/p&gt;

&lt;p&gt;  &amp;gt; java showJDBCdsMetaDataLis dbdb 2.4&lt;br/&gt;
   . . JDBC 3 or less: Using jdbc.EmbeddedConnectionPoolDataSource&lt;br/&gt;
  Database product: Apache Derby&lt;br/&gt;
  Database version: 10.3.0.0 alpha - (1)&lt;br/&gt;
  Driver name:      Apache Derby Embedded JDBC Driver&lt;br/&gt;
  Driver version:   10.3.0.0 alpha - (1)&lt;br/&gt;
  JDBC driver major version: 4&lt;br/&gt;
  JDBC driver minor version: 0&lt;br/&gt;
  JDBC 4.0 metaData - SFusingCall: true&lt;br/&gt;
  Event: statementClosed a816c00e-0111-b830-0576-0000003d4c38&lt;/p&gt;

&lt;p&gt;Please note, though, that I am not at all familiar with this area of code, so it&apos;s possible I&apos;m being far too naive here.  If that&apos;s the case then I&apos;m hoping someone can elaborate a bit more on what the correct approach might be...&lt;/p&gt;</comment>
                            <comment id="12486456" author="army" created="Tue, 3 Apr 2007 19:26:06 +0100"  >&lt;p&gt;Okay, so d2488_noTest_v1 is not a valid patch.  It was fine when I applied and built, but when I clobbered and then built there are failures (because the 40 classes can&apos;t be built with jdk14).  Oops, silly me; sorry for th noise.&lt;/p&gt;

&lt;p&gt;Still curious to know, though, if this is the correct approach &lt;b&gt;functionally&lt;/b&gt; speaking?  I.e. we need to return JDBC 4 objects from the non-40 data sources?&lt;/p&gt;</comment>
                            <comment id="12486785" author="army" created="Wed, 4 Apr 2007 22:36:26 +0100"  >&lt;p&gt;Attaching a second patch that has the same functional behavior as the first one, except that it uses reflection to create the JDBC 4 object so that the non-JDBC 4 classes will still compile with 1.4.&lt;/p&gt;

&lt;p&gt;I did a full ant clobber and ant all with this patch and the build finishes cleanly.  I also ran suites.All and derbyall on Red Hat Linux with ibm142 with no issues.  I haven&apos;t run those suites with jdk16 yet because I don&apos;t have a machine available with that jvm at the moment.&lt;/p&gt;

&lt;p&gt;Before going any further with this I&apos;m hoping someone can offer input as to whether or not this is the correct approach.  Or to be more explicit, Dan, do these changes correlate with your comments above, or am I totally off-track here?&lt;/p&gt;</comment>
                            <comment id="12486796" author="djd" created="Wed, 4 Apr 2007 23:31:14 +0100"  >&lt;p&gt;Your approach is what I was describing though I think there is a somewhat cleaner way that doesn&apos;t require reflection.&lt;/p&gt;

&lt;p&gt;InternalDriver is the class that is the factory for all JDBC object, e.g. Connections, ResultSets etc. It has methods that return the correct level of JDBC object for a given JVM environment. This is because the specific version of InternalDriver is active in the JVM, e.g. Driver30 for JDBC 3.0 and Driver40 for JDBC 4.0.&lt;/p&gt;

&lt;p&gt;So the first thought would be to add a getNewPooledConnection(...) and getNewXAConnection(...) to InternalDriver, and then have the various implementations return the correct type for their JDBC level, thus no reflection.&lt;/p&gt;

&lt;p&gt;However, InternalDriver needs to work on JSR169 as it&apos;s the factory for objects there as well, and JSR169 does not support PooledConnection or XAConnection,&lt;br/&gt;
so the methods cannot be added there.&lt;/p&gt;

&lt;p&gt;What could be done is to add the newPooledConnection(...) and newXAConnection(...)  methods to Driver30 and then have the data source use those methods to get the objects, e.g.&lt;/p&gt;


&lt;p&gt;   ((Driver30) findDriver()).getNewPooledConnection(...);&lt;/p&gt;

&lt;p&gt;That code would then work on JDBC 3.0 and JDBC 4.0 with no need for the 40 versions of the DataSource to have specific methods to get new objects, instead that code would be in Driver40.&lt;/p&gt;

</comment>
                            <comment id="12486799" author="army" created="Wed, 4 Apr 2007 23:44:59 +0100"  >&lt;p&gt;Thank you for the feedback, Dan.  The approach you&apos;ve mentioned does indeed sound cleaner.  I will work with this some more to see if I can implement your suggestions.&lt;/p&gt;</comment>
                            <comment id="12487126" author="stan" created="Fri, 6 Apr 2007 01:50:32 +0100"  >&lt;p&gt;Updated the description to accurately reflect the problem as it is now understood.&lt;/p&gt;</comment>
                            <comment id="12487638" author="army" created="Mon, 9 Apr 2007 23:02:46 +0100"  >&lt;p&gt;Attaching d2488_v3.patch, which is an attempt to implement Dan&apos;s suggested approach.  This new approach is far cleaner than the original--so thank you to Dan for the great feedback.&lt;/p&gt;

&lt;p&gt;While working on this I discovered that the ClientXADataSource class suffers from the same problem as the Embedded classes, so I made similar changes there.  Note that the ClientConnectionPoolDataSource file was already doing something very similar to what Dan had suggested for Embedded, except that instead of using &quot;Driver30&quot; it uses &quot;ClientDriver.getFactory()&quot;. So that particular data source was working correctly even before my changes.  Given that, I have now updated the ClientXADataSource class to match the behavior of ClientConnectionPoolDataSource.&lt;/p&gt;

&lt;p&gt;This patch also includes a new test, jdbc4/JDBC4FromJDBC3DataSourceTest, which verifies that JDBC 4 connections will be returned from JDBC 3 data sources if the JDK in use is JDK 1.6.  I had to make some minor modifications to several classes in the junit/ directory, but hopefully none of these is a problem.  In a clean trunk the new test shows 3 failures (the ClientConnectionPoolDataSource test passes, as mentioned above); after applying d2488_v3.patch, the test runs cleanly.&lt;/p&gt;

&lt;p&gt;I ran derbyall and suites.All on a SUSE Linux 10.0 machine and there were the following failures, which also appear in the Tinderbox:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;derbyall:   lang/grantRevokeDDL.sql&lt;/li&gt;
	&lt;li&gt;suites.All: GroupByExpressionTest.testMiscExpressions&lt;/li&gt;
	&lt;li&gt;suites.All: SecurityPolicyReloadingTest&lt;/li&gt;
	&lt;li&gt;suites.All: UpdateCursorTest.testVirtualMemoryHeap&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There was also a failure in derbynet/testconnection.java, which does not show up in the tinderbox:&lt;/p&gt;

&lt;p&gt;  9d8&lt;br/&gt;
  &amp;lt; Unable to find host: ihave-inmyname.com.&lt;br/&gt;
  Test Failed.&lt;/p&gt;

&lt;p&gt;When I ran this on my Windows 2000 laptop the diff was slightly different:&lt;/p&gt;

&lt;p&gt;  9 del&lt;br/&gt;
  &amp;lt; Unable to find host: ihave-inmyname.com.&lt;br/&gt;
  9a9&lt;br/&gt;
  &amp;gt; Could not connect to Derby Network Server on host ihave-inmyname.com, port 1527.&lt;/p&gt;

&lt;p&gt;I did an &quot;ant clobber&quot; and rebuilt just to make sure, but the test still fails.  I then tried running it on a clean, fully-synced client and it still failed (with the same diff).  So I don&apos;t think this is related to my changes...&lt;/p&gt;

&lt;p&gt;Review comments and any other feedback would be much appreciated, especially since (as I mentioned earlier) this area of code is very new to me...&lt;/p&gt;</comment>
                            <comment id="12487655" author="army" created="Tue, 10 Apr 2007 00:58:29 +0100"  >&lt;p&gt;Attaching a _v4 patch that is identical to _v3 in terms of engine/client changes.  The only difference is that I have made the following tweaks to the new test:&lt;/p&gt;

&lt;p&gt;  1. Wired it into jdbc4/_Suite.java (forgot to do that with _v3)&lt;br/&gt;
  2. Created a new convenience method on TestConfiguration for forcing use of JDBC 3 datasources (instead of putting that code inside the new test).&lt;br/&gt;
  3. Updated the test (jdbc4/JDBC4FromJDBC3DataSourceTest) to use the new convenience method.&lt;/p&gt;

&lt;p&gt;Note that the convenience method on TestConfiguration wraps the test inside a CleanDatabaseTestSetup configuration.  This ensures that the target database (&quot;wombat&quot;) will always exist before the fixtures are run (which was not the case for the _v3 test).&lt;/p&gt;</comment>
                            <comment id="12490391" author="army" created="Fri, 20 Apr 2007 17:03:20 +0100"  >&lt;p&gt;I haven&apos;t heard any comments (good nor bad) about the _v4 patch for this issue.  I hope to re-run the regression suites later today to make sure everything is still okay (esp. since some DataSource tests were added to suites.All aftet I posted the patch), and if everything passes then I will likely commit  d2488_v4.patch before the end of today (Friday).&lt;/p&gt;

&lt;p&gt;If people have comments/feedback after that, I can of course address them in subsequent patches.&lt;/p&gt;</comment>
                            <comment id="12490674" author="army" created="Sun, 22 Apr 2007 01:13:31 +0100"  >&lt;p&gt;derbyall and suites.All both ran cleanly for me after a full sync / clobber / rebuild.  So I removed an extraneous import from the _v4 patch and committed with svn # 531129:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=531129&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=531129&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Marking the issue as resolved.  Thanks again to Dan for his input on how to best fix this.&lt;/p&gt;</comment>
                            <comment id="12562270" author="stan" created="Thu, 24 Jan 2008 22:54:56 +0000"  >&lt;p&gt;Catching up on Closing my reported issues.  Thanks to Dyre for the workflow reminder today.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12354862" name="d2488_notTested_v1.patch" size="4200" author="army" created="Tue, 3 Apr 2007 17:49:16 +0100"/>
                            <attachment id="12354955" name="d2488_v2.patch" size="11131" author="army" created="Wed, 4 Apr 2007 22:36:26 +0100"/>
                            <attachment id="12355195" name="d2488_v3.patch" size="30387" author="army" created="Mon, 9 Apr 2007 23:02:46 +0100"/>
                            <attachment id="12355196" name="d2488_v3.stat" size="1239" author="army" created="Mon, 9 Apr 2007 23:02:46 +0100"/>
                            <attachment id="12355200" name="d2488_v4.patch" size="31467" author="army" created="Tue, 10 Apr 2007 00:58:29 +0100"/>
                            <attachment id="12354243" name="showJDBCdsMetaDataLis.class" size="3979" author="stan" created="Mon, 26 Mar 2007 19:39:03 +0100"/>
                            <attachment id="12354240" name="showJDBCdsMetaDataLis.class" size="3979" author="stan" created="Mon, 26 Mar 2007 19:37:10 +0100"/>
                            <attachment id="12354242" name="showJDBCdsMetaDataLis.java" size="4822" author="stan" created="Mon, 26 Mar 2007 19:39:03 +0100"/>
                            <attachment id="12354239" name="showJDBCdsMetaDataLis.java" size="4822" author="stan" created="Mon, 26 Mar 2007 19:37:10 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12366945">DERBY-2538</subtask>
                            <subtask id="12367869">DERBY-2582</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Mar 2007 19:22:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23072</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39591</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>