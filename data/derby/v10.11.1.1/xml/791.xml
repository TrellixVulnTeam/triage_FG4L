<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:55:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-791/DERBY-791.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-791] Expose api for printing Abstract Syntax Trees in production (non-debug) servers</title>
                <link>https://issues.apache.org/jira/browse/DERBY-791</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently you can print Abstract Syntax Trees to derby.log by setting the DumpParseTree tracepoint at server startup. E.g.:&lt;/p&gt;

&lt;p&gt;java -cp $CLASSPATH -Dderby.debug.true=DumpParseTree -Dderby.stream.error.logSeverityLevel=0 org.apache.derby.tools.ij  z.sql&lt;/p&gt;

&lt;p&gt;This can be a useful debugging tool. However, it only works on debug servers built with the following flags:&lt;/p&gt;

&lt;p&gt;sanity=true&lt;br/&gt;
debug=true&lt;/p&gt;

&lt;p&gt;We should provide some mechanism for printing these trees in production (non-debug) servers.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12327185">DERBY-791</key>
            <summary>Expose api for printing Abstract Syntax Trees in production (non-debug) servers</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Wed, 4 Jan 2006 06:32:13 +0000</created>
                <updated>Tue, 25 Jun 2013 16:17:10 +0100</updated>
                                                                            <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12361765" author="djd" created="Thu, 5 Jan 2006 02:27:12 +0000"  >&lt;p&gt;I was thinking about something similar over the holiday period. I don&apos;t think the current mechanism should be used, but instead the tree could be represented as an XML document. It would be great to tie this into the runtime statistics output, so that there was a common XML format for displaying query information.&lt;br/&gt;
It would be good to also make this optional in a production server, rather than increasing the footprint for every deployment. If the node factory was not removed (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-673&quot; title=&quot;Get rid of the NodeFactory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-673&quot;&gt;&lt;del&gt;DERBY-673&lt;/del&gt;&lt;/a&gt;) then a debugging node factory option could return nodes that provide the tree printing. This debugging code could be in a separate jar file to the base engine, thus only incurring a footprint cost when runtime debugging is required.&lt;/p&gt;</comment>
                            <comment id="12361767" author="djd" created="Thu, 5 Jan 2006 02:29:07 +0000"  >&lt;p&gt;See comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-791&quot; title=&quot;Expose api for printing Abstract Syntax Trees in production (non-debug) servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-791&quot;&gt;DERBY-791&lt;/a&gt; for a use of the node factory.  It could be that a NodeFactory could still exist with strongly typed init methods instead of constructors.&lt;/p&gt;</comment>
                            <comment id="12668589" author="rhillegas" created="Thu, 29 Jan 2009 20:30:52 +0000"  >&lt;p&gt;For more context on this issue, see the following email threads:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Optimizer-work-issues-discussions....-td6573100.html#a6605675&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Optimizer-work-issues-discussions....-td6573100.html#a6605675&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/Having-trouble-finding-a-JIRA-issue-td21733256.html#a21733256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Having-trouble-finding-a-JIRA-issue-td21733256.html#a21733256&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12669019" author="rhillegas" created="Fri, 30 Jan 2009 20:55:49 +0000"  >&lt;p&gt;Attaching XmlTreeWalker.java. This is a simple Visitor which prints out the parsed AST in xml. You invoke it like so:&lt;/p&gt;

&lt;p&gt;   java XmlTreeWalker &quot;select r.a from r, s where r.b = s.c&quot;&lt;/p&gt;

&lt;p&gt;The program prints out an xml representation of the AST to standard out. Here&apos;s the output from the above command:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;queryTree&amp;gt;&lt;br/&gt;
    &amp;lt;queryText&amp;gt;select r.a from r, s where r.b = s.c&amp;lt;/queryText&amp;gt;&lt;br/&gt;
    &amp;lt;node&amp;gt;&lt;br/&gt;
        &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.CursorNode&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
        &amp;lt;contents&amp;gt;&lt;br/&gt;
            &amp;lt;member&amp;gt;name: null&amp;lt;/member&amp;gt;&lt;br/&gt;
            &amp;lt;member&amp;gt;updateMode: UNSPECIFIED (0)&amp;lt;/member&amp;gt;&lt;br/&gt;
            &amp;lt;member&amp;gt;statementType: SELECT&amp;lt;/member&amp;gt;&lt;br/&gt;
        &amp;lt;/contents&amp;gt;&lt;br/&gt;
        &amp;lt;node&amp;gt;&lt;br/&gt;
            &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.SelectNode&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
            &amp;lt;contents&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;isDistinct: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;groupByList: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;orderByList: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;resultSetNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;referencedTableMap: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;member&amp;gt;statementResultSet: false&amp;lt;/member&amp;gt;&lt;br/&gt;
            &amp;lt;/contents&amp;gt;&lt;br/&gt;
            &amp;lt;node&amp;gt;&lt;br/&gt;
                &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.ResultColumnList&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                &amp;lt;contents&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;exposedName: A&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;name: A&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableName: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isDefaultColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;wasDefaultColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isNameGenerated: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;sourceTableName: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;type: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;columnDescriptor: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isGenerated: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isGeneratedForUnmatchedColumnInInsert: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isGroupingColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isReferenced: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;isRedundant: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;virtualColumnId: 1&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;resultSetNumber: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;; &amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;/contents&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;&lt;br/&gt;
                    &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.ResultColumn&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                    &amp;lt;contents&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;exposedName: A&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;name: A&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;tableName: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isDefaultColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;wasDefaultColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isNameGenerated: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;sourceTableName: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;type: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;columnDescriptor: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isGenerated: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isGeneratedForUnmatchedColumnInInsert: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isGroupingColumn: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isReferenced: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;isRedundant: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;virtualColumnId: 1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;resultSetNumber: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;/contents&amp;gt;&lt;br/&gt;
                    &amp;lt;node&amp;gt;&lt;br/&gt;
                        &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.ColumnReference&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                        &amp;lt;contents&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;columnName: A&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;tableNumber: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;columnNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;replacesAggregate: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;tableName: R&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;nestingLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;sourceLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                            &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;/contents&amp;gt;&lt;br/&gt;
                    &amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;/node&amp;gt;&lt;br/&gt;
            &amp;lt;/node&amp;gt;&lt;br/&gt;
            &amp;lt;node&amp;gt;&lt;br/&gt;
                &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.FromBaseTable&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                &amp;lt;contents&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableName: R&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableDescriptor: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;updateOrDelete: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;existsBaseTable: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;dependencyMap: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;correlation Name: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableNumber -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;level 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;resultSetNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;referencedTableMap: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;statementResultSet: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;/contents&amp;gt;&lt;br/&gt;
            &amp;lt;/node&amp;gt;&lt;br/&gt;
            &amp;lt;node&amp;gt;&lt;br/&gt;
                &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.FromBaseTable&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                &amp;lt;contents&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableName: S&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableDescriptor: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;updateOrDelete: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;existsBaseTable: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;dependencyMap: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;correlation Name: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;tableNumber -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;level 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;resultSetNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;referencedTableMap: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;statementResultSet: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;/contents&amp;gt;&lt;br/&gt;
            &amp;lt;/node&amp;gt;&lt;br/&gt;
            &amp;lt;node&amp;gt;&lt;br/&gt;
                &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                &amp;lt;contents&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;operator: =&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;methodName: equals&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                &amp;lt;/contents&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;&lt;br/&gt;
                    &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.ColumnReference&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                    &amp;lt;contents&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;columnName: B&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;tableNumber: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;columnNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;replacesAggregate: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;tableName: R&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;nestingLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;sourceLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;/contents&amp;gt;&lt;br/&gt;
                &amp;lt;/node&amp;gt;&lt;br/&gt;
                &amp;lt;node&amp;gt;&lt;br/&gt;
                    &amp;lt;nodeType&amp;gt;org.apache.derby.impl.sql.compile.ColumnReference&amp;lt;/nodeType&amp;gt;&lt;br/&gt;
                    &amp;lt;contents&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;columnName: C&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;tableNumber: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;columnNumber: 0&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;replacesAggregate: false&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;tableName: S&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;nestingLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;sourceLevel: -1&amp;lt;/member&amp;gt;&lt;br/&gt;
                        &amp;lt;member&amp;gt;dataTypeServices: null&amp;lt;/member&amp;gt;&lt;br/&gt;
                    &amp;lt;/contents&amp;gt;&lt;br/&gt;
                &amp;lt;/node&amp;gt;&lt;br/&gt;
            &amp;lt;/node&amp;gt;&lt;br/&gt;
        &amp;lt;/node&amp;gt;&lt;br/&gt;
    &amp;lt;/node&amp;gt;&lt;br/&gt;
&amp;lt;/queryTree&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12669037" author="rhillegas" created="Fri, 30 Jan 2009 21:33:23 +0000"  >&lt;p&gt;Looking at the output of XmlTreeWalker, the following jumps out at me: The subclasses of QueryTreeNodeVector could use a little upgrading of their accept() and toString() methods. In particular:&lt;/p&gt;

&lt;p&gt;1) FromList.accept() should start out by calling v.visit( this ) as the other accept() implementations do.&lt;/p&gt;

&lt;p&gt;2) FromList and ResultColumnList should have their own overrides for toString()--right now they rely on the toString() method in their superclass, which is too generic to be  useful for tree printing.&lt;/p&gt;</comment>
                            <comment id="12669043" author="rhillegas" created="Fri, 30 Jan 2009 21:49:19 +0000"  >&lt;p&gt;Attaching derby-791-01-aa-fromListAndResultColumnList.diff. This experimental patch fixes up FromList.accept(), FromList.toString(), and ResultColumnList.toString() as mentioned above. This makes the output of XmlTreeWalker more useful.&lt;/p&gt;</comment>
                            <comment id="12670345" author="knutanders" created="Wed, 4 Feb 2009 15:19:45 +0000"  >&lt;p&gt;This looks very useful, and it&apos;s even relatively easy to read. Perhaps it would be even easier to process the output (at least for a machine) if we split the name:value string into two separate tags. That is, instead of&lt;/p&gt;

&lt;p&gt;&amp;lt;member&amp;gt;replacesAggregate: false&amp;lt;/member&amp;gt;&lt;/p&gt;

&lt;p&gt;something like&lt;/p&gt;

&lt;p&gt;&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;replacesAggregate&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;&lt;/p&gt;

&lt;p&gt;or perhaps even better&lt;/p&gt;

&lt;p&gt;&amp;lt;member name=&quot;replacesAggregate&quot;&amp;gt;false&amp;lt;/member&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12671185" author="rhillegas" created="Fri, 6 Feb 2009 16:17:34 +0000"  >&lt;p&gt;Thanks for the feedback, Knut. Attaching a new version of XmlTreeWalker together with the corresponding output: z.xml. This new version formats the node contents as member elements with name and value attributes, much as Knut suggested. The node type is also formatted as an attribute. This makes the xml a little more compact and readable.&lt;/p&gt;

&lt;p&gt;If you are using Firefox, you make be interested in this feature of the browser: By default, mysterious xml documents are presented as a directory tree, with each element being a separately collapsible level. This is a very handy way to view our ASTs. I think that Internet Explorer may do something similar. Safari, however, doesn&apos;t present xml files in this useful way.&lt;/p&gt;</comment>
                            <comment id="12743266" author="rhillegas" created="Fri, 14 Aug 2009 17:17:06 +0100"  >&lt;p&gt;Attaching another rev of the XmlTreeWalker. This version uses an in-memory database.&lt;/p&gt;</comment>
                            <comment id="12760581" author="kroepke" created="Tue, 29 Sep 2009 13:42:00 +0100"  >&lt;p&gt;Attached are an updated XmlTreeWalker and a Eclipse Zest visualization of the short class names of the AST.&lt;br/&gt;
They are laid out in a tree fashion.&lt;br/&gt;
Even though this mini application is far from perfect, it might be useful to someone. It should be trivial to add more information to the graph (like operator names, literal values, etc).&lt;/p&gt;

&lt;p&gt;For XmlTreeWalker the only difference to Rick&apos;s version is that its execute method will accept a visitor object instead of always using this (well, and the method is now public so ASTGrapher can access it).&lt;/p&gt;

&lt;p&gt;To compile this you need Zest from the Eclipse GEF project (and the RCP features). The easiest way to set up the Eclipse project is to create a new Eclipse RCP plugin project and then dropping in these two Java files. Run ASTGrapher.java as an Application (you do not need to start an entire RCP instance).&lt;br/&gt;
The RCP project only serves to properly set up the build path, nothing more.&lt;/p&gt;
</comment>
                            <comment id="12774297" author="rhillegas" created="Fri, 6 Nov 2009 14:34:10 +0000"  >&lt;p&gt;Attaching a new version of XmlTreeWalker, which implements the visitChildrenFirst() method which was added to the Visitor interface recently.&lt;/p&gt;</comment>
                            <comment id="12776677" author="rhillegas" created="Wed, 11 Nov 2009 21:42:56 +0000"  >&lt;p&gt;Attaching derby-791-02-aa-printTargetColumnList.diff. This patch adds some more accept methods so that InsertNodes walk their targetColumnLists in addition to the children they share with their superclasses. Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/compile/InsertNode.java&lt;/p&gt;</comment>
                            <comment id="12777021" author="rhillegas" created="Thu, 12 Nov 2009 15:32:04 +0000"  >&lt;p&gt;Committed derby-791-02-aa-printTargetColumnList.diff at subversion revision 835417.&lt;/p&gt;</comment>
                            <comment id="13693116" author="mamtas" created="Tue, 25 Jun 2013 16:09:56 +0100"  >&lt;p&gt;Rick, can this jira be closed or is there further work to be done? thanks&lt;/p&gt;</comment>
                            <comment id="13693123" author="rhillegas" created="Tue, 25 Jun 2013 16:17:10 +0100"  >&lt;p&gt;Hi Mamta,&lt;/p&gt;

&lt;p&gt;I think that further product changes related to this issue will probably happen under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;. However, XmlTreeWalker may need to be tweaked. I think I need to leave this issue open in order to attach new versions of XmlTreeWalker. Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12438486">DERBY-4415</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12325258">DERBY-673</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12652877">DERBY-6263</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12408365">DERBY-3946</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12420787" name="ASTGrapher.java" size="2739" author="kroepke" created="Tue, 29 Sep 2009 13:42:00 +0100"/>
                            <attachment id="12424206" name="XmlTreeWalker.java" size="12260" author="rhillegas" created="Fri, 6 Nov 2009 14:34:10 +0000"/>
                            <attachment id="12420786" name="XmlTreeWalker.java" size="12181" author="kroepke" created="Tue, 29 Sep 2009 13:41:59 +0100"/>
                            <attachment id="12416568" name="XmlTreeWalker.java" size="12147" author="rhillegas" created="Fri, 14 Aug 2009 17:17:06 +0100"/>
                            <attachment id="12399658" name="XmlTreeWalker.java" size="12140" author="rhillegas" created="Fri, 6 Feb 2009 16:17:34 +0000"/>
                            <attachment id="12399159" name="XmlTreeWalker.java" size="9120" author="rhillegas" created="Fri, 30 Jan 2009 20:55:49 +0000"/>
                            <attachment id="12399169" name="derby-791-01-aa-fromListAndResultColumnList.diff" size="1911" author="rhillegas" created="Fri, 30 Jan 2009 21:49:19 +0000"/>
                            <attachment id="12424653" name="derby-791-02-aa-printTargetColumnList.diff" size="1860" author="rhillegas" created="Wed, 11 Nov 2009 21:42:56 +0000"/>
                            <attachment id="12399659" name="z.xml" size="7842" author="rhillegas" created="Fri, 6 Feb 2009 16:17:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Jan 2006 02:27:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29706</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0rmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38294</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>