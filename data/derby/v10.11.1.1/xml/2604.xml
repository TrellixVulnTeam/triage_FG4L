<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:28:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2604/DERBY-2604.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2604] Implement Clob support for locators</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2604</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12368548">DERBY-2604</key>
            <summary>Implement Clob support for locators</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="31583">DERBY-208</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 May 2007 13:33:27 +0100</created>
                <updated>Fri, 15 Jun 2007 07:05:22 +0100</updated>
                            <resolved>Fri, 15 Jun 2007 07:05:22 +0100</resolved>
                                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12493359" author="narayanan" created="Thu, 3 May 2007 13:55:55 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2347&quot; title=&quot;Add code to support request and return of locators over DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2347&quot;&gt;&lt;del&gt;DERBY-2347&lt;/del&gt;&lt;/a&gt; adds the possibility to send locators between client and server instead of LOB values. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2496&quot; title=&quot;Implement Blob support for Locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2496&quot;&gt;&lt;del&gt;DERBY-2496&lt;/del&gt;&lt;/a&gt; adds locator support to Blobs&lt;/p&gt;

&lt;p&gt;On the same lines we need to add locator support for Clobs also.&lt;/p&gt;

&lt;p&gt;The changes that will be done as part of this issue will cover most of the locator work that would need be done with respect to Clobs.&lt;/p&gt;

&lt;p&gt;As already discussed in the JIRA issue that was raised for PreparedStatements and CallableStatements(&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2529&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-2529&lt;/a&gt;) &lt;br/&gt;
there are no changes needed here related to Clob also.&lt;/p&gt;

&lt;p&gt;A similar case would exist for ResultSets also since the LOB in this case is also B-Layer streamed and there would be no significant improvement with using locators.&lt;/p&gt;

&lt;p&gt;Connection.createClob() will use the constructor that would be introduced in this patch which accepts a locator as a parameter to return an empty Clob.&lt;/p&gt;

&lt;p&gt;The locators will not be enabled with this patch.&lt;/p&gt;

&lt;p&gt;A seperate issue will be raised to enable locators and handle test failures that might result because of that.&lt;/p&gt;</comment>
                            <comment id="12493366" author="narayanan" created="Thu, 3 May 2007 14:28:50 +0100"  >&lt;p&gt;The attached patch, ClobLocatorWork_v1.diff, adds support for locators for Clob methods. Note that the use of locators for Clob is still not enabled. This as mentioned will be done as a seperate JIRA issue.&lt;/p&gt;

&lt;p&gt;The changes to the various files and their purport are as following&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/net/NetCursor.java&lt;/p&gt;

&lt;p&gt;Create locator based Clob object if locator is sent.&lt;/p&gt;

&lt;p&gt;A      java/client/org/apache/derby/client/am/ClobLocatorWriter.java&lt;/p&gt;

&lt;p&gt;Writer for locator based Clob. &lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/Clob.java&lt;/p&gt;

&lt;p&gt;Add constructor for locator based Clob objects.&lt;/p&gt;

&lt;p&gt;Make all Clob operations support locators. Operations are performed by calling stored procedures through the framework implemented by CallableLocatorProcedures class.&lt;/p&gt;

&lt;p&gt;Create locator based versions of streams for locator based Clob objects &lt;/p&gt;

&lt;p&gt;A      java/client/org/apache/derby/client/am/ClobLocatorInputStream.java&lt;/p&gt;

&lt;p&gt;InputStream for locator based Clob. &lt;/p&gt;

&lt;p&gt;A      java/client/org/apache/derby/client/am/ClobLocatorOutputStream.java&lt;/p&gt;

&lt;p&gt;OutputStream for locator based Clob. &lt;/p&gt;

&lt;p&gt;A      java/client/org/apache/derby/client/am/ClobLocatorReader.java&lt;/p&gt;

&lt;p&gt;Reader for locator based Clob.&lt;/p&gt;

&lt;p&gt;I have run tests(junit All) on this patch and there were no failures.&lt;/p&gt;
</comment>
                            <comment id="12493734" author="rhillegas" created="Fri, 4 May 2007 17:33:05 +0100"  >&lt;p&gt;Thanks, Naryanan. The patch looks good to me. The tests pass cleanly. Committed ClobLocatorWork_v1.diff at subversion revision 535319.&lt;/p&gt;</comment>
                            <comment id="12493971" author="narayanan" created="Mon, 7 May 2007 06:23:52 +0100"  >&lt;p&gt;Thanx a ton for the commit on this issue Rick.&lt;/p&gt;</comment>
                            <comment id="12494234" author="knutanders" created="Tue, 8 May 2007 11:04:25 +0100"  >&lt;p&gt;Hi Narayanan, I haven&apos;t looked at the entire patch, only ClobLocatorInputStream.java, but I have a couple of comments:&lt;/p&gt;

&lt;p&gt;1) readBytes() doesn&apos;t look correct to me. It takes a len parameter, which is length in bytes, and passes it on to clobGetSubString(), which expects length in characters. This means that the byte array returned by readBytes() might contain more bytes than len. I cannot see that read() or read(byte[],int,int) are prepared for this.&lt;/p&gt;

&lt;p&gt;2) The boundary checking in read(byte[],int,int) might suffer from int overflow. (off+len &amp;gt; b.length) should be replaced with (len &amp;gt; b.length - off).&lt;/p&gt;

&lt;p&gt;3) clob and connection could be final, I think.&lt;/p&gt;</comment>
                            <comment id="12494244" author="narayanan" created="Tue, 8 May 2007 11:50:16 +0100"  >&lt;p&gt;Thank You for the comments Knut. I will address them in a following patch.&lt;/p&gt;

</comment>
                            <comment id="12494262" author="knutanders" created="Tue, 8 May 2007 12:24:58 +0100"  >&lt;p&gt;Thanks Narayanan! You might also want to check whether some of the comments above are valid for the other ClobLocator streams/readers/writers.&lt;/p&gt;

&lt;p&gt;I noticed that ClobLocator&lt;/p&gt;
{Reader,Writer}
&lt;p&gt; check whether the object is closed, whereas ClobLocator&lt;/p&gt;
{Input,Output}
&lt;p&gt;Stream don&apos;t. Is there any reason for this?&lt;/p&gt;

&lt;p&gt;ClobLocatorOutputStream.writeBytes() has this line:&lt;br/&gt;
    String clobStr = new String(b);&lt;br/&gt;
Should it also have specified the encoding?&lt;/p&gt;

&lt;p&gt;Perhaps it would be easier to make ClobLocatorInputStream a wrapper around ClobLocatorReader, and ClobLocatorOutputStream a wrapper around ClobLocatorWriter?&lt;/p&gt;</comment>
                            <comment id="12494462" author="narayanan" created="Wed, 9 May 2007 10:42:55 +0100"  >&lt;p&gt;Thanx a ton for looking at this and giving your feedback/comments. Pls find answers to your queries below. Pls do point out if I have made any mistake in any of the analysis I have done.&lt;/p&gt;

&lt;p&gt;&amp;gt;1) readBytes() doesn&apos;t look correct to me. It takes a len parameter, &lt;br/&gt;
&amp;gt;which is length in bytes, and passes it on to clobGetSubString(), which &lt;br/&gt;
&amp;gt;expects length in characters. This means that the byte array returned &lt;br/&gt;
&amp;gt;by readBytes() might contain more bytes than len. I cannot see that &lt;br/&gt;
&amp;gt;read() or read(byte[],int,int) are prepared for this.&lt;/p&gt;

&lt;p&gt;I agree. I should have taken care of this while submitting the patch.&lt;br/&gt;
I intend to allow the code top remain the same way except to change the&lt;br/&gt;
code after doing&lt;/p&gt;

&lt;p&gt;String resultStr = connection.locatorProcedureCall().&lt;br/&gt;
                    clobGetSubString(clob.getLocator(),&lt;br/&gt;
                    currentPos, actualLength);&lt;/p&gt;

&lt;p&gt;we know that when we do a resultStr.getBytes we would get more&lt;br/&gt;
Bytes than actualLength. So from resultStr.getBytes I need to get&lt;br/&gt;
only actualLength number of Bytes.&lt;/p&gt;

&lt;p&gt;In this conversion from String to Bytes I intend to use the method&lt;br/&gt;
getBytesFromString in ClobStreamControl  for the same reasons&lt;br/&gt;
the method was used in Derby-2346.&lt;/p&gt;

&lt;p&gt;&amp;gt;2) The boundary checking in read(byte[],int,int) might suffer from &lt;br/&gt;
&amp;gt;int overflow. (off+len &amp;gt; b.length) should be replaced with &lt;br/&gt;
&amp;gt;(len &amp;gt; b.length - off).&lt;/p&gt;

&lt;p&gt;you are correct. I will do this.&lt;/p&gt;

&lt;p&gt;&amp;gt;3) clob and connection could be final, I think.&lt;/p&gt;

&lt;p&gt;I will do this.&lt;/p&gt;

&lt;p&gt;2) and 3) are valid for ClobReader/Writer also.&lt;/p&gt;

&lt;p&gt;&amp;gt;4)I noticed that ClobLocator&lt;/p&gt;
{Reader,Writer}
&lt;p&gt; check whether the object is closed, &lt;br/&gt;
&amp;gt;  whereas ClobLocator&lt;/p&gt;
{Input,Output}
&lt;p&gt;Stream don&apos;t. Is there any reason for this?&lt;/p&gt;

&lt;p&gt;I read the API doc for java.io.Reader/Writer and saw that it was mentioned that&lt;br/&gt;
implementation of the close() method was mandatory here. This is not the case&lt;br/&gt;
for InputStream/OutputStream.&lt;/p&gt;

&lt;p&gt;Also in the the explanation for the close() method of Reader/Writer it was&lt;br/&gt;
mentioned that when a read or write is called after close an IOException is&lt;br/&gt;
thrown. But the behaviour that needs to be exhibited for InputStream/OutputStream&lt;br/&gt;
methods after close was not mentioned.&lt;/p&gt;

&lt;p&gt;&amp;gt;5) ClobLocatorOutputStream.writeBytes() has this line:&lt;br/&gt;
&amp;gt;    String clobStr = new String(b);&lt;br/&gt;
&amp;gt;   Should it also have specified the encoding?&lt;/p&gt;

&lt;p&gt;Yes you are correct. It should have been US-ASCII, I will fix this.&lt;/p&gt;

&lt;p&gt;&amp;gt;6) Perhaps it would be easier to make ClobLocatorInputStream a wrapper around &lt;br/&gt;
&amp;gt;ClobLocatorReader, and ClobLocatorOutputStream a wrapper around ClobLocatorWriter?&lt;/p&gt;

&lt;p&gt;I thought about this while working on the patch but decided against it because&lt;br/&gt;
if you did the wrapping as you suggested. &lt;/p&gt;

&lt;p&gt;The only method that would be shared  would have the functionality of a stored &lt;br/&gt;
procedure call to CLOBGETSTRING to get a string from the Clob. The interconversion &lt;br/&gt;
to Byte array or a Char array will still remain in the respective methods.&lt;/p&gt;

&lt;p&gt;There was not much code sharing I could achieve by forwarding calls to the Reader/Writer&lt;br/&gt;
implementation and the inter conversion between String and Bytes and Chars still remained.&lt;/p&gt;</comment>
                            <comment id="12494481" author="oysteing" created="Wed, 9 May 2007 12:47:42 +0100"  >&lt;p&gt;&amp;gt;     [ &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2604?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12494462&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-2604?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12494462&lt;/a&gt; ] &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; V.Narayanan commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2604&quot; title=&quot;Implement Clob support for locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2604&quot;&gt;&lt;del&gt;DERBY-2604&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt; ------------------------------------&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; 1) readBytes() doesn&apos;t look correct to me. It takes a len parameter, &lt;br/&gt;
&amp;gt;&amp;gt; which is length in bytes, and passes it on to clobGetSubString(), which &lt;br/&gt;
&amp;gt;&amp;gt; expects length in characters. This means that the byte array returned &lt;br/&gt;
&amp;gt;&amp;gt; by readBytes() might contain more bytes than len. I cannot see that &lt;br/&gt;
&amp;gt;&amp;gt; read() or read(byte[],int,int) are prepared for this.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I agree. I should have taken care of this while submitting the patch.&lt;br/&gt;
&amp;gt; I intend to allow the code top remain the same way except to change the&lt;br/&gt;
&amp;gt; code after doing&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; String resultStr = connection.locatorProcedureCall().&lt;br/&gt;
&amp;gt;                     clobGetSubString(clob.getLocator(),&lt;br/&gt;
&amp;gt;                     currentPos, actualLength);&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; we know that when we do a resultStr.getBytes we would get more&lt;br/&gt;
&amp;gt; Bytes than actualLength. So from resultStr.getBytes I need to get&lt;br/&gt;
&amp;gt; only actualLength number of Bytes.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; In this conversion from String to Bytes I intend to use the method&lt;br/&gt;
&amp;gt; getBytesFromString in ClobStreamControl  for the same reasons&lt;br/&gt;
&amp;gt; the method was used in Derby-2346.&lt;/p&gt;

&lt;p&gt;I am not quite following the discussion here.  This stream is returned&lt;br/&gt;
from Clob.getAsciiStream().  Since it is ASCII, I would think that it&lt;br/&gt;
should always return one byte per character.  I would have thought&lt;br/&gt;
that you should do the same as AsciiStream which has the following&lt;br/&gt;
code for the conversion:&lt;/p&gt;

&lt;p&gt;    public int read() throws java.io.IOException {&lt;br/&gt;
        int oneChar = reader_.read();&lt;br/&gt;
        ++charsRead_;&lt;br/&gt;
        if (oneChar != -1) // if not eos&lt;br/&gt;
        &lt;/p&gt;
{
            if(oneChar &amp;lt;= 0x00ff)
                return oneChar;
            else
                return 0x003f;
        }
&lt;p&gt; else &lt;/p&gt;
{
            return -1; // end of stream
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;(This implementation is actually an example of implementing the stream&lt;br/&gt;
by wrapping it in the Reader.)&lt;/p&gt;</comment>
                            <comment id="12494485" author="knutanders" created="Wed, 9 May 2007 13:05:00 +0100"  >&lt;p&gt;Thanks for answering, Narayanan!&lt;/p&gt;

&lt;p&gt;I believe &#216;ystein is correct about the conversion to ASCII.&lt;/p&gt;

&lt;p&gt;&amp;gt; But the behaviour that needs to be exhibited for InputStream/OutputStream&lt;br/&gt;
&amp;gt; methods after close was not mentioned. &lt;/p&gt;

&lt;p&gt;I found this the javadoc for OutputStream.write(int):&lt;br/&gt;
IOException - if an I/O error occurs. In particular, an IOException may be thrown if the output stream has been closed.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;5) ClobLocatorOutputStream.writeBytes() has this line:&lt;br/&gt;
&amp;gt;&amp;gt;    String clobStr = new String(b);&lt;br/&gt;
&amp;gt;&amp;gt;   Should it also have specified the encoding?&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Yes you are correct. It should have been US-ASCII, I will fix this.&lt;/p&gt;

&lt;p&gt;Since JDBC defines ASCII as the code points from 0 up to 255, I think it should be ISO-8859-1. US-ASCII is only 7 bits, I think.&lt;/p&gt;</comment>
                            <comment id="12494489" author="narayanan" created="Wed, 9 May 2007 13:51:15 +0100"  >&lt;p&gt;thanx a ton for taking a look at the patch and commenting on it Oystein &lt;br/&gt;
and Knut!&lt;/p&gt;

&lt;p&gt;1) Thank you for the suggestion on the conversion to ASCII.&lt;br/&gt;
    I think you are correct and I will do it the same way.&lt;/p&gt;

&lt;p&gt;2) The behaviour on Close() is not uniform in the streams returned from Lobs&lt;br/&gt;
     in the server and client.&lt;/p&gt;

&lt;p&gt;    For example in am/ClobWriter close does this&lt;/p&gt;

&lt;p&gt;    public void close() throws java.io.IOException {&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    while on the embedded side impl/jdbc/ClobUtf8Writer close() is this&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Closes the stream, flushing it first. Once the stream has been&lt;br/&gt;
closed,&lt;/li&gt;
	&lt;li&gt;further write() or flush() invocations will cause an IOException&lt;br/&gt;
to be&lt;/li&gt;
	&lt;li&gt;thrown. Closing a previously closed stream has no effect.&lt;br/&gt;
     */&lt;br/&gt;
    public void close() 
{
        closed = true;
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    I intend to leave close() as it is currently implemented in the &lt;br/&gt;
locator streams&lt;br/&gt;
    unless there is objection to this.&lt;/p&gt;

&lt;p&gt;3) In the writeBytes(byte b[]) method line no 66 &lt;br/&gt;
am/ClobOutputStream.java I found this&lt;br/&gt;
     conversion from byte to String&lt;/p&gt;

&lt;p&gt;    String str = new String(b, &quot;US-ASCII&quot;);&lt;/p&gt;

&lt;p&gt;    I am not sure if both the contexts match but seems like it.&lt;/p&gt;


</comment>
                            <comment id="12494490" author="narayanan" created="Wed, 9 May 2007 13:56:15 +0100"  >&lt;p&gt; &amp;gt;I found this the javadoc for OutputStream.write(int):&lt;br/&gt;
 &amp;gt;IOException - if an I/O error occurs. In particular,&lt;br/&gt;
 &amp;gt;an IOException may be thrown if the output stream has been closed.&lt;/p&gt;

&lt;p&gt;I agree. But I think it is OK to not throw an exception as seen from this.&lt;br/&gt;
I saw Oystein&apos;s reply also which agrees with this interpretation. My &lt;br/&gt;
previous&lt;br/&gt;
idea of retaining the current implementation in the locator streams for &lt;br/&gt;
close&lt;br/&gt;
are also on the same lines. Pls do mention if you think this should be &lt;br/&gt;
the case.&lt;/p&gt;

</comment>
                            <comment id="12494492" author="knutanders" created="Wed, 9 May 2007 14:08:23 +0100"  >&lt;p&gt;I am fine with your comments. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1519&quot; title=&quot;&amp;#39;setAsciiStream&amp;#39; uses different encodings for embedded and client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1519&quot;&gt;&lt;del&gt;DERBY-1519&lt;/del&gt;&lt;/a&gt; is logged for the US-ASCII/ISO-8859-1 issue.&lt;/p&gt;</comment>
                            <comment id="12494500" author="narayanan" created="Wed, 9 May 2007 14:51:15 +0100"  >
&lt;p&gt;Thank You Knut. I will submit a patch for this. Thanks to you and &lt;br/&gt;
Oystein for the guidance.&lt;/p&gt;

</comment>
                            <comment id="12494737" author="narayanan" created="Thu, 10 May 2007 13:58:40 +0100"  >&lt;p&gt;Thanks once again for the comments and guidance Oystein and Knut. &lt;br/&gt;
Pls find a patch attached addressing the comments and suggestions.&lt;br/&gt;
The changes to the various files and their purport apropos the context &lt;br/&gt;
are elucidated below.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorWriter.java&lt;/p&gt;

&lt;p&gt;1) Made the Clob and Connection objects final.&lt;br/&gt;
2) Removed making Clob and Connection null in close() (they are final)&lt;br/&gt;
3) changed  (off+len &amp;gt; c.length) to (len &amp;gt; c.length - off)&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorInputStream.java&lt;/p&gt;

&lt;p&gt;1) Made the Clob and Connection objects final.&lt;br/&gt;
2) Removed making Clob and Connection null in close() (they are final)&lt;br/&gt;
3) changed  (off+len &amp;gt; c.length) to (len &amp;gt; c.length - off)&lt;br/&gt;
4) Added a method getBytesFromString(String str) that accepts a String and returns&lt;br/&gt;
    a Byte array using the algorithm(in the code snippet) pointed by oystein in&lt;br/&gt;
    his comments.&lt;br/&gt;
5) Using this method in readBytes method to convert the String to bytes.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorOutputStream.java&lt;/p&gt;

&lt;p&gt;1) Made the Clob and Connection objects final.&lt;br/&gt;
2) Removed making Clob and Connection null in close() (they are final)&lt;br/&gt;
3) changed  (off+len &amp;gt; c.length) to (len &amp;gt; c.length - off)&lt;br/&gt;
4) Changed String(b) to String(b, &quot;ISO-8859-1&quot;)&lt;/p&gt;


&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorReader.java&lt;/p&gt;

&lt;p&gt;1) Made the Clob and Connection objects final.&lt;br/&gt;
2) Removed making Clob and Connection null in close() (they are final)&lt;br/&gt;
3) changed  (off+len &amp;gt; c.length) to (len &amp;gt; c.length - off)&lt;/p&gt;</comment>
                            <comment id="12494742" author="narayanan" created="Thu, 10 May 2007 14:04:39 +0100"  >&lt;p&gt;Sorry attached the wrong diff. Pls &lt;b&gt;ignore&lt;/b&gt; previous attachment ConnectionLocatorWork_v2.diff.&lt;/p&gt;

&lt;p&gt;Pls consider ClobLocatorWork_v2.diff for reviews and comments. I have started the tests and &lt;br/&gt;
shall report back as soon as they complete.&lt;/p&gt;</comment>
                            <comment id="12495062" author="narayanan" created="Fri, 11 May 2007 15:32:36 +0100"  >&lt;p&gt;I discussed this patch with knut and came to the conclusion that the check (off+len&amp;lt;0) (in ClobLocatorWriter and ClobLocatorOutputStream) was redundant because  if off+len overflows, and off&amp;gt;=0 and len&amp;gt;=0 and c.length&amp;gt;=0 and c.length &amp;lt;= Integer.MAX_VALUE, then (len &amp;gt; c.length - off) is always true. (Thanks to knut for pointing this out)&lt;/p&gt;

&lt;p&gt;I am submitting a patch with this reduntant check removed.&lt;/p&gt;

&lt;p&gt;I haven&apos;t run any tests with the new patch(with the check removed). The patch with this check did not give any failures. So I think this is OK. Also the locator code is not enabled yet and hence I do not expect any test failures.&lt;/p&gt;

&lt;p&gt;Pls consider v3 for reviews and comments and if everything is ok a commit too.&lt;/p&gt;</comment>
                            <comment id="12495065" author="knutanders" created="Fri, 11 May 2007 15:44:43 +0100"  >&lt;p&gt;Thanks for the patch, Narayanan! It looks like all my comments have been addressed, so I&apos;m planning to commit the patch once I have run the regression tests.&lt;/p&gt;</comment>
                            <comment id="12495171" author="knutanders" created="Fri, 11 May 2007 22:11:13 +0100"  >&lt;p&gt;Committed revision 537291.&lt;/p&gt;</comment>
                            <comment id="12495472" author="narayanan" created="Mon, 14 May 2007 06:34:28 +0100"  >&lt;p&gt;Thank you for the commit knut!&lt;/p&gt;

</comment>
                            <comment id="12499274" author="narayanan" created="Sat, 26 May 2007 03:23:24 +0100"  >&lt;p&gt;This patch addresses the bugs that were found during the process of enabling &lt;br/&gt;
Clob support for locators.&lt;/p&gt;

&lt;p&gt;Pls note that Clob locators are currently disabled. &lt;/p&gt;

&lt;p&gt;I have not yet run junit All for the patch. Since the code is diabled I do not &lt;br/&gt;
expect any failures. But  I will run junit All and revert back with the results.&lt;/p&gt;

&lt;p&gt;The following are the details of the details of the files modified and their&lt;br/&gt;
import apropos the context.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorWriter.java&lt;/p&gt;

&lt;p&gt;writeCharacters(line no 162) method was using c.length as the length of the string&lt;br/&gt;
transmitted to the server using the clobSetString stored procedure. This should&lt;br/&gt;
use len instead.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/Clob.java&lt;/p&gt;

&lt;p&gt;The PositionX method on the client that accepts a Clob had not been converted &lt;br/&gt;
to use locators. This has been done.&lt;/p&gt;

&lt;p&gt;The getCharacterStream(long pos, long length) method should return a stream of&lt;br/&gt;
length characters starting from pos. Hence the length parameter that should be&lt;br/&gt;
passed to the constructor of the ClobLocatorReader class should have been&lt;br/&gt;
pos+len-1 instead of len.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/CallableLocatorProcedures.java&lt;/p&gt;

&lt;p&gt;The stored procedure call to CLOBGETPOSITIONFROMSTRING was sending the &lt;br/&gt;
original string instead of sending it in chunks. This has been changed to send the &lt;br/&gt;
chunks instead(stringToBeCompared).&lt;/p&gt;</comment>
                            <comment id="12499276" author="narayanan" created="Sat, 26 May 2007 03:28:14 +0100"  >&lt;p&gt;I attached the wrong file ConnectionLocatorWork_v4.&lt;/p&gt;

&lt;p&gt;Pls &lt;b&gt;ignore&lt;/b&gt; ConnectionLocatorWork_v4.diff&lt;/p&gt;

&lt;p&gt;Attaching the correct file ClobLocatorWork_v4.diff.&lt;/p&gt;

&lt;p&gt;Pls consider ClobLocatorWork_v4.diff for reviews and comments.&lt;/p&gt;

&lt;p&gt;I have not yet run junit All on this patch. I will run the tests and&lt;br/&gt;
revert back with the results.&lt;/p&gt;</comment>
                            <comment id="12499277" author="narayanan" created="Sat, 26 May 2007 03:43:47 +0100"  >&lt;p&gt;I have two more tasks to this issue. &lt;/p&gt;

&lt;p&gt;1)  Making the necessary changes to  enable the use &lt;br/&gt;
     of locators for Clob.  As part of this task I will have to &lt;br/&gt;
     modify tests that experience changed behavior with &lt;br/&gt;
     locators.&lt;/p&gt;

&lt;p&gt;2)  Enable Locator Support for Clobs. &lt;/p&gt;

&lt;p&gt;I intend to raise two subtasks under Derby-208 the parent &lt;br/&gt;
issue for doing this for the following reasons&lt;/p&gt;

&lt;p&gt;a)  Ideally these should be a subtask of this issue. But I&lt;br/&gt;
     cannot create a subtask of a subtask.&lt;/p&gt;

&lt;p&gt;b)  Parrallel discussion on these issues can happen without&lt;br/&gt;
      the comments getting mixed up in the same issue.&lt;/p&gt;

&lt;p&gt;c)  It will help potential committers reviewing these patches&lt;br/&gt;
      since then the patches will not get mixed up in the plethora of &lt;br/&gt;
      versions already exisiting in this issue and those which I might&lt;br/&gt;
      have to attach.&lt;/p&gt;</comment>
                            <comment id="12499292" author="narayanan" created="Sat, 26 May 2007 08:38:38 +0100"  >&lt;p&gt;I ran junit All on v4 and found no failures. I request for v4 to be considered for a commit.&lt;/p&gt;</comment>
                            <comment id="12499316" author="narayanan" created="Sat, 26 May 2007 16:11:02 +0100"  >&lt;p&gt;There are a few more issues I haven&apos;t addressed in v4 that need to be addressed&lt;/p&gt;

&lt;p&gt;1)  Add buffering for InputStreams by wrapping ClobLocatorInputStream in&lt;br/&gt;
      a BufferedInputStream and ClobLocatorReader in a BufferedReader.&lt;/p&gt;

&lt;p&gt;2)  I noticed that in BlobLocatorInputStream, maxPos is used to store the size&lt;br/&gt;
     of the Blob. This is initialized in the constructor of BlobLocatorInputStream.&lt;br/&gt;
     This I observed serves the following purpose.&lt;/p&gt;

&lt;p&gt;     a)   If the locator associated with the Blob object becomes invalid(e.g. due to&lt;br/&gt;
           a transaction commit) and the getBinaryStream is called to retrieve&lt;br/&gt;
           an InputStream the sqlLength() call in the constructor of BlobInputStream&lt;br/&gt;
           would throw an SQLException saying the locator associated with this &lt;br/&gt;
           Blob is invalid. &lt;/p&gt;

&lt;p&gt;           On the other hand if this method call were not there we would&lt;br/&gt;
           get a stream from the Blob and would be informed of the locator invalidation&lt;br/&gt;
           only during the first call to any method on this InputStream. &lt;/p&gt;

&lt;p&gt;           I observed this when I ran BlobClob4BlobTest after enabling locators.&lt;br/&gt;
           In testClobAfterCommit() clob.getAsciiStream was not failing as expected &lt;br/&gt;
           because the current ClobLocatorInputStream does not call clob.sqlLength()&lt;br/&gt;
           in its constructor.&lt;/p&gt;

&lt;p&gt;3)  I also think using maxPos to return a CharacterStream subset requested by&lt;br/&gt;
      getCharacterStream(long, long) is better than the length() method implemented&lt;br/&gt;
      by.&lt;/p&gt;

&lt;p&gt;Pls accept my apologies for this last moment change. I will be submitting a new v5 patch addressing the above.&lt;br/&gt;
pls ignore v4. &lt;/p&gt;

&lt;p&gt;If anyone has reviewed v4 and find this addition inconvinient I will submit these changes as a&lt;br/&gt;
follow up to v4.&lt;/p&gt;</comment>
                            <comment id="12499322" author="narayanan" created="Sat, 26 May 2007 17:21:42 +0100"  >&lt;p&gt;This patch addresses the bugs that were found during the process of enabling &lt;br/&gt;
Clob support for locators. It contains within itself the changes made in v4&lt;br/&gt;
and the changes as explained in the comments above.&lt;/p&gt;

&lt;p&gt;The following are the details of the details of the files modified and their&lt;br/&gt;
import apropos the context.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorWriter.java&lt;/p&gt;

&lt;p&gt;writeCharacters(line no 162) method was using c.length as the length of the string&lt;br/&gt;
transmitted to the server using the clobSetString stored procedure. This should&lt;br/&gt;
use len instead.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/Clob.java&lt;/p&gt;

&lt;p&gt;The PositionX method on the client that accepts a Clob had not been converted to use &lt;br/&gt;
locators. This has been done.&lt;/p&gt;

&lt;p&gt;Added buffering for InputStreams by wrapping ClobLocatorInputStream in&lt;br/&gt;
a BufferedInputStream and ClobLocatorReader in a BufferedReader.&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/CallableLocatorProcedures.java&lt;/p&gt;

&lt;p&gt;The stored procedure call to CLOBGETPOSITIONFROMSTRING was sending the original string &lt;br/&gt;
instead of sending it in chunks. This has been changed to send the chunks instead&lt;br/&gt;
(stringToBeCompared).&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/am/ClobLocatorInputStream.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/ClobLocatorReader.java&lt;/p&gt;

&lt;p&gt;Converted the locator streams to use maxPos in the same way this is done&lt;br/&gt;
in BlobLocatorInputStream.&lt;/p&gt;

&lt;p&gt;I have not run junit All on the patch yet. I will run the tests and revert back with&lt;br/&gt;
the results.&lt;/p&gt;

&lt;p&gt;Please consider v5 for reviews and comments.&lt;/p&gt;</comment>
                            <comment id="12499514" author="narayanan" created="Mon, 28 May 2007 10:32:21 +0100"  >&lt;p&gt;I have run junit all on this patch. I observed no failures. I request for this patch to be considered for a commit.&lt;/p&gt;</comment>
                            <comment id="12499516" author="narayanan" created="Mon, 28 May 2007 10:35:34 +0100"  >&lt;p&gt;I ran junit all on v5(ClobLocatorWork_v5.diff) and saw no failures. I request for ClobLocatorWork_v5.diff to be considered for a commit. (I hadn&apos;t mentioned the patch version on which I had run tests properly in the previous email.)&lt;/p&gt;</comment>
                            <comment id="12501200" author="knutanders" created="Mon, 4 Jun 2007 14:00:12 +0100"  >&lt;p&gt;Looks good to me. Committed revision 544119.&lt;/p&gt;

&lt;p&gt;A couple of minor nits:&lt;/p&gt;

&lt;p&gt;The new field maxPos in ClobLocatorInputStream/Reader could be final, I think. (The same is probably true for the clob and connection field, and for the corresponding fields in the Blob streams, but those classes/fields were not touched by your patch.)&lt;/p&gt;

&lt;p&gt;Since there are both JDBC positions (counting from 1) and stream positions (counting from 0) in the stream classes, it would be good if maxPos&apos;s javadoc said where maxPos started counting from.&lt;/p&gt;

&lt;p&gt;In Clob.positionX(), I think that it would be clearer if the code that increments index by 1 for non-locator lobs were moved into the else block right above it. (Then we don&apos;t need to check isLocator() twice.)&lt;/p&gt;

&lt;p&gt;Also in Clob.positionX(), I think the index variable should be changed to a long. As it is now, clobGetPositionFromLocator() returns a long which is cast to int before it is cast back to long and returned. It&apos;s better to keep it as a long all the way.&lt;/p&gt;</comment>
                            <comment id="12501205" author="narayanan" created="Mon, 4 Jun 2007 14:22:40 +0100"  >&lt;p&gt;Thanx a ton for this commit Knut.&lt;/p&gt;

&lt;p&gt;I am hoping to submit a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2702&quot; title=&quot;Enable Clob locator support between NetworkServer and NetworkClient and modify tests that experience changed behaviour due to this(enabling Clob Locators).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2702&quot;&gt;&lt;del&gt;DERBY-2702&lt;/del&gt;&lt;/a&gt; before going home today.&lt;/p&gt;

&lt;p&gt;I will produce the follow up patch for this tommorrow.&lt;/p&gt;

&lt;p&gt;Thanx again for the reviews, comments and commit.&lt;/p&gt;


</comment>
                            <comment id="12502660" author="myrna" created="Fri, 8 Jun 2007 06:17:46 +0100"  >&lt;p&gt;Is a follow up patch still forthcoming, or is that with another issue?&lt;/p&gt;</comment>
                            <comment id="12502663" author="narayanan" created="Fri, 8 Jun 2007 06:23:41 +0100"  >&lt;p&gt;Thank you for following up, I will submit a follow-up for this today, I was held up with maxPos relating to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2764&quot; title=&quot;In the Network Client Streams returned using Clob.getAsciiStream() and Clob.getCharacterStream() should reflect the changes made to the underlying Clob.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2764&quot;&gt;&lt;del&gt;DERBY-2764&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2763&quot; title=&quot;In the Network Client InputStreams and Readers returned from LOB&amp;#39;s should be sensitive to underlying LOB data changes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2763&quot;&gt;&lt;del&gt;DERBY-2763&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12504306" author="narayanan" created="Wed, 13 Jun 2007 17:17:29 +0100"  >&lt;p&gt;I have addressed all the follow up issues pointed out in this patch.&lt;br/&gt;
I request for this patch to be considered for reviews and comments. &lt;/p&gt;

&lt;p&gt;I shall run junit All and revert back.&lt;/p&gt;</comment>
                            <comment id="12504551" author="narayanan" created="Thu, 14 Jun 2007 06:59:25 +0100"  >&lt;p&gt;I found a few problems in v6 I submitted yesterday. I am working on v6&lt;br/&gt;
and shall revert back with a new patch and corresponding test runs in a&lt;br/&gt;
few hours.&lt;/p&gt;


</comment>
                            <comment id="12504557" author="narayanan" created="Thu, 14 Jun 2007 07:23:00 +0100"  >&lt;p&gt;I had made a mistake in changing maxPos to final&lt;br/&gt;
and not changing the corresponding contructor and&lt;br/&gt;
also in not returning the index that had been moved&lt;br/&gt;
to the else block as suggested.&lt;/p&gt;

&lt;p&gt;I have fixed these issues in this patch.&lt;/p&gt;

&lt;p&gt;I ran BlobClob4BlobTest after these changes and found no failures.&lt;/p&gt;

&lt;p&gt;I have started junit All.&lt;/p&gt;

&lt;p&gt;The changes are very small. I request for this patch to be considered&lt;br/&gt;
for reviews/comments.&lt;/p&gt;</comment>
                            <comment id="12504602" author="narayanan" created="Thu, 14 Jun 2007 09:51:28 +0100"  >&lt;p&gt;I ran junit All on this patch and found no failures. I request that if&lt;br/&gt;
everything is OK this patch(v7) be considered for a commit.&lt;/p&gt;

</comment>
                            <comment id="12504623" author="knutanders" created="Thu, 14 Jun 2007 10:36:37 +0100"  >&lt;p&gt;Thanks for the follow-up patch, Narayanan!&lt;/p&gt;

&lt;p&gt;Most of it looks good, but I think this change in Clob positionX(Clob,long) is wrong:&lt;/p&gt;

&lt;p&gt;@@ -559,18 +559,12 @@&lt;br/&gt;
                 index = string_.indexOf(searchstr.getSubString(1L,&lt;br/&gt;
                                                     (int) searchstr.length()),&lt;br/&gt;
                                         (int) start - 1);&lt;br/&gt;
+                index++;&lt;br/&gt;
             }&lt;br/&gt;
         } catch (java.sql.SQLException e) {&lt;/p&gt;

&lt;p&gt;index should only be increased by one if it is not equal to -1. This didn&apos;t show up in the JUnit tests because the code is only used if the client runs against a 10.2 server or earlier. By the way, perhaps this line should have a comment which said something like &quot;increase the index by one since String positions are 0-based and Clob positions are 1-based&quot;?&lt;/p&gt;</comment>
                            <comment id="12504627" author="narayanan" created="Thu, 14 Jun 2007 10:53:18 +0100"  >&lt;p&gt;Thank you for the comments Knut. I have fixed the issue pointed out.&lt;/p&gt;</comment>
                            <comment id="12504697" author="knutanders" created="Thu, 14 Jun 2007 13:45:11 +0100"  >&lt;p&gt;Thanks Narayanan. Committed revision 547236.&lt;/p&gt;</comment>
                            <comment id="12504699" author="narayanan" created="Thu, 14 Jun 2007 13:48:28 +0100"  >&lt;p&gt;Thanks for the commit knut!!!&lt;/p&gt;


</comment>
                            <comment id="12505052" author="narayanan" created="Fri, 15 Jun 2007 07:05:22 +0100"  >&lt;p&gt;All patches submitted and committed!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12370325">DERBY-2702</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12356712" name="ClobLocatorWork_v1.diff" size="37910" author="narayanan" created="Thu, 3 May 2007 14:28:46 +0100"/>
                            <attachment id="12356713" name="ClobLocatorWork_v1.stat" size="498" author="narayanan" created="Thu, 3 May 2007 14:28:50 +0100"/>
                            <attachment id="12357039" name="ClobLocatorWork_v2.diff" size="6705" author="narayanan" created="Thu, 10 May 2007 14:04:39 +0100"/>
                            <attachment id="12357036" name="ClobLocatorWork_v2.stat" size="380" author="narayanan" created="Thu, 10 May 2007 13:58:40 +0100"/>
                            <attachment id="12357109" name="ClobLocatorWork_v3.diff" size="6671" author="narayanan" created="Fri, 11 May 2007 15:32:36 +0100"/>
                            <attachment id="12357110" name="ClobLocatorWork_v3.stat" size="380" author="narayanan" created="Fri, 11 May 2007 15:32:36 +0100"/>
                            <attachment id="12358298" name="ClobLocatorWork_v4.diff" size="4259" author="narayanan" created="Sat, 26 May 2007 03:28:14 +0100"/>
                            <attachment id="12358297" name="ClobLocatorWork_v4.stat" size="229" author="narayanan" created="Sat, 26 May 2007 03:23:24 +0100"/>
                            <attachment id="12358305" name="ClobLocatorWork_v5.diff" size="10395" author="narayanan" created="Sat, 26 May 2007 17:21:42 +0100"/>
                            <attachment id="12358306" name="ClobLocatorWork_v5.stat" size="372" author="narayanan" created="Sat, 26 May 2007 17:21:42 +0100"/>
                            <attachment id="12359614" name="ClobLocatorWork_v6.diff" size="4391" author="narayanan" created="Wed, 13 Jun 2007 17:17:29 +0100"/>
                            <attachment id="12359615" name="ClobLocatorWork_v6.stat" size="375" author="narayanan" created="Wed, 13 Jun 2007 17:17:29 +0100"/>
                            <attachment id="12359674" name="ClobLocatorWork_v7.diff" size="4871" author="narayanan" created="Thu, 14 Jun 2007 07:23:00 +0100"/>
                            <attachment id="12359675" name="ClobLocatorWork_v7.stat" size="375" author="narayanan" created="Thu, 14 Jun 2007 07:23:00 +0100"/>
                            <attachment id="12359704" name="ClobLocatorWork_v8.diff" size="5060" author="narayanan" created="Thu, 14 Jun 2007 10:53:18 +0100"/>
                            <attachment id="12359705" name="ClobLocatorWork_v8.stat" size="375" author="narayanan" created="Thu, 14 Jun 2007 10:53:18 +0100"/>
                            <attachment id="12357035" name="ConnectionLocatorWork_v2.diff" size="11217" author="narayanan" created="Thu, 10 May 2007 13:58:40 +0100"/>
                            <attachment id="12358296" name="ConnectionLocatorWork_v4.diff" size="1938" author="narayanan" created="Sat, 26 May 2007 03:23:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 4 May 2007 16:33:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30538</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11vr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39955</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>