<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4066/DERBY-4066.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4066] Allow functions/procedures to take Blob/Clob arguments</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4066</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Derby objects if you try to declare a function or procedure with an argument whose type is BLOB or CLOB. These kinds of arguments are allowed in the SQL standard and the matching Java types are java.sql.Blob and java.sql.Clob. See the SignatureMatching.html summary attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3652&quot; title=&quot;Derby does not follow the SQL Standard when trying to map SQL routines to Java methods.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3652&quot;&gt;&lt;del&gt;DERBY-3652&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We should lift this restriction and allow functions and procedures to take large object arguments.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12415237">DERBY-4066</key>
            <summary>Allow functions/procedures to take Blob/Clob arguments</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>LOB</label>
                    </labels>
                <created>Fri, 20 Feb 2009 15:44:46 +0000</created>
                <updated>Sun, 14 Oct 2012 00:10:14 +0100</updated>
                            <resolved>Sun, 14 Oct 2012 00:10:07 +0100</resolved>
                                    <version>10.4.2.0</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12675391" author="rhillegas" created="Fri, 20 Feb 2009 16:17:59 +0000"  >&lt;p&gt;Attaching derby-4066-01-aa-enableLobArgs.diff. This patch removes disabling code which prevents us from declaring and invoking functions/procedures with LOB arguments.&lt;/p&gt;

&lt;p&gt;I haven&apos;t run regression tests yet and I&apos;m waiting for community feedback on why we don&apos;t allow these arguments today.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java&lt;/p&gt;

&lt;p&gt;Removes the code which prevents us from declaring functions/procedures with long argument types.&lt;/p&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java&lt;/p&gt;

&lt;p&gt;Removes the code which prevents us from invoking functions/procedures with long argument types.&lt;/p&gt;


&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignaturesTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignatures.java&lt;/p&gt;

&lt;p&gt;Adds some simple tests to verify that you can now declare and invoke functions with LOB arguments.&lt;/p&gt;</comment>
                            <comment id="12675400" author="bryanpendleton" created="Fri, 20 Feb 2009 17:06:10 +0000"  >&lt;p&gt;Perhaps it was one of those cases where the functionality was disabled&lt;br/&gt;
to preserve compatibility with an older version of DB2?&lt;/p&gt;</comment>
                            <comment id="12675410" author="kmarsden" created="Fri, 20 Feb 2009 17:49:19 +0000"  >&lt;p&gt;Bryan said.&lt;/p&gt;

&lt;p&gt;&amp;gt;Perhaps it was one of those cases where the functionality was disabled&lt;br/&gt;
&amp;gt;to preserve compatibility with an older version of DB2? &lt;/p&gt;

&lt;p&gt;Perhaps that is the case, but it is not entirely clear from the history.  The exception was added before we had CREATE FUNCTION and CREATE PROCEDURE syntax, so there never were tests for that so it good Rick is adding it.&lt;/p&gt;

&lt;p&gt;On the patch, I think it would be good to enable this test for client to make sure lob parameters are working properly there too.&lt;/p&gt;</comment>
                            <comment id="12675994" author="rhillegas" created="Mon, 23 Feb 2009 18:07:21 +0000"  >&lt;p&gt;Thanks for the quick feedback, Bryan and Kathey. Attaching a second rev of the patch: derby-4066-01-ab-enableLobArgs.diff. This changes the canon for the LOB test, which used to expect the old failure. I also incorporated Kathey&apos;s recommendation to change the test to run client/server as well as embedded. This turned up another problem: in the client/server configuration the numeric/decimal tests in AnsiSignaturesTest raise an overflow condition. I think this is a bug and I will log an issue to track it. In the meantime, I have disabled those tests for the client/server configuration.&lt;/p&gt;

&lt;p&gt;In addition, the XMLTypeAndOpsTest had errors because the original patch allowed XML datatypes as method parameters too. That situation should still be forbidden until we provide an implementation of JDBC&apos;s SQLXML datatype. This second patch disallows XML datatypes as method parameters. &lt;/p&gt;

&lt;p&gt;Touches the following additional files:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/LOB.sql&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/LOB.out&lt;/p&gt;

&lt;p&gt;I will run the regression tests again.&lt;/p&gt;</comment>
                            <comment id="12677331" author="kristwaa" created="Fri, 27 Feb 2009 11:51:18 +0000"  >&lt;p&gt;I looked at derby-4066-01-ab-enableLobArgs.diff, and except for an occurrence of inconsistent use of tabs/spaces (CreateAliasNode), I didn&apos;t find anything more to comment on.&lt;/p&gt;

&lt;p&gt;What I would like to see, are tests testing larger LOBs used as arguments. I think objects larger than what can be sent as a single message in DRDA and larger than the JVM heap would be good candidates.&lt;br/&gt;
We already have a test for the low memory scenario (see tests.memory._Suite), maybe a new test can be added there. Of course, such a test must not explicitly materialize the LOB.&lt;/p&gt;</comment>
                            <comment id="12678127" author="rhillegas" created="Mon, 2 Mar 2009 21:59:02 +0000"  >&lt;p&gt;Attaching derby-4066-01-ag-enableLobArgs.diff. However, this patch is not ready for committing. LOB return values work across the network. However, LOB arguments (both input and output) do not work across the network. I am not going to put any more effort into this issue for 10.5.&lt;/p&gt;</comment>
                            <comment id="12748802" author="knutanders" created="Fri, 28 Aug 2009 14:07:45 +0100"  >&lt;p&gt;When procedures are allowed to take Blob/Clob arguments, we should also implement CallableStatement.getBlob() and CallableStatement.getClob(), either as part of this issue or in a follow-up issue. Those methods are not implemented on the embedded driver, see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-477&quot; title=&quot;JDBC client and embedded drivers differ wrt API subset supported&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-477&quot;&gt;&lt;del&gt;DERBY-477&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12748829" author="rhillegas" created="Fri, 28 Aug 2009 15:27:47 +0100"  >&lt;p&gt;Hi Knut. Yes, the problems with LOB return values from CallableStatements are half of the reason that the existing patch is not ready for commit.&lt;/p&gt;</comment>
                            <comment id="12891712" author="rhillegas" created="Fri, 23 Jul 2010 19:29:32 +0100"  >&lt;p&gt;Attaching derby-4066-01-ak-enableLobArgs.diff. This is a re-warmed version of the patch.&lt;/p&gt;

&lt;p&gt;In addition to bringing the patch up to date with the current state of the trunk, this patch adds some new test cases to verify the setting of LOB function args using ? parameters. These new tests fail, so the patch is not ready for commit.&lt;/p&gt;

&lt;p&gt;Also, more tests are needed to examine the behavior of procedure arguments. As currently coded, the patch should still forbid the declaration of LOB output procedure arguments.&lt;/p&gt;

&lt;p&gt;I believe that the problem with ? CLOB args is backed up behind &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4754&quot; title=&quot;SQLClob.getObject() should always return a java.sql.Clob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4754&quot;&gt;&lt;del&gt;DERBY-4754&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12895767" author="rhillegas" created="Thu, 5 Aug 2010 20:15:02 +0100"  >&lt;p&gt;Attaching a new version of the patch, derby-4066-01-al-enableLobArgs.diff. Regression tests run cleanly on the previous version now that the initial patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4754&quot; title=&quot;SQLClob.getObject() should always return a java.sql.Clob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4754&quot;&gt;&lt;del&gt;DERBY-4754&lt;/del&gt;&lt;/a&gt; has been committed.&lt;/p&gt;

&lt;p&gt;This new rev adds some additional test cases to verify the following:&lt;/p&gt;

&lt;p&gt;1) LOBs can be used as input parameters to procedures, including as ? parameters.&lt;/p&gt;

&lt;p&gt;2) However, you will get a compilation error if you try to declare a procedure with a LOB output or inout parameter.&lt;/p&gt;

&lt;p&gt;If the regression tests pass cleanly, I am inclined to check in this version of the patch. The next task would then be to make it possible to use LOBs as output and inout parameters to procedures.&lt;/p&gt;</comment>
                            <comment id="12896024" author="rhillegas" created="Fri, 6 Aug 2010 13:25:16 +0100"  >&lt;p&gt;Regression tests passed cleanly on derby-4066-01-al-enableLobArgs.diff, modulo the testPing problem I see on my machine. Committed at subversion revision 982936. &lt;/p&gt;</comment>
                            <comment id="12896895" author="rhillegas" created="Tue, 10 Aug 2010 15:29:13 +0100"  >&lt;p&gt;Attaching derby-4066-02-ac-outputLOBs.diff. This patch allows LOB-valued OUT/INOUT arguments to Derby routines. Regression tests passed cleanly for me.&lt;/p&gt;

&lt;p&gt;As follow-on work, we will want to verify that large LOBs behave correctly. Hopefully, the work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4544&quot; title=&quot;Referencing streaming CLOBs in (some) generated column clauses fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4544&quot;&gt;&lt;del&gt;DERBY-4544&lt;/del&gt;&lt;/a&gt; will be applicable to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4754&quot; title=&quot;SQLClob.getObject() should always return a java.sql.Clob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4754&quot;&gt;&lt;del&gt;DERBY-4754&lt;/del&gt;&lt;/a&gt; and help improve the performance of LOB arguments.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java&lt;/p&gt;

&lt;p&gt;Allow LOB types as OUT and INOUT arguments in routine declarations.&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java&lt;/p&gt;

&lt;p&gt;Retrieve LOB values from OUT and INOUT parameters of CallableStatements.&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M      java/client/org/apache/derby/client/net/NetCursor.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/DRDAResultSet.java&lt;br/&gt;
M      java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;/p&gt;

&lt;p&gt;Transport LOB-valued OUT/INOUT parameters across the network.&lt;/p&gt;

&lt;p&gt;--------------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java&lt;/p&gt;

&lt;p&gt;Verify small LOB-valued OUT/INOUT arguments.&lt;/p&gt;</comment>
                            <comment id="12897240" author="rhillegas" created="Wed, 11 Aug 2010 13:46:46 +0100"  >&lt;p&gt;Committed derby-4066-02-ac-outputLOBs.diff at subversion revision 984393.&lt;/p&gt;</comment>
                            <comment id="12897898" author="rhillegas" created="Thu, 12 Aug 2010 20:11:58 +0100"  >&lt;p&gt;Attaching derby-4066-03-aa-bigLOBs.diff. This patch adds tests for large (&amp;gt;1M) LOB inout args. Committed at subversion revision 984916.&lt;/p&gt;

&lt;p&gt;As Kristian notes, it would be good to add a test for the case when a LOB is bigger than the size of VM memory. Right now, that case will fail because SQLClob.getObject() and SQLBlob.getObject() materialize the LOB contents. I will add a comment to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4754&quot; title=&quot;SQLClob.getObject() should always return a java.sql.Clob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4754&quot;&gt;&lt;del&gt;DERBY-4754&lt;/del&gt;&lt;/a&gt; so that we don&apos;t forget to add that test case as we make progress on improving our LOB support. &lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java&lt;/p&gt;</comment>
                            <comment id="12897902" author="rhillegas" created="Thu, 12 Aug 2010 20:19:04 +0100"  >&lt;p&gt;This wraps up all of the work which I can think of for this issue. Additional work needs to be done to improve the memory usage and performance of the LOBs returned by SQLBlob.getObject() and SQLClob.getObject(). However, that work can happen as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4754&quot; title=&quot;SQLClob.getObject() should always return a java.sql.Clob&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4754&quot;&gt;&lt;del&gt;DERBY-4754&lt;/del&gt;&lt;/a&gt; and/or other issues.&lt;/p&gt;</comment>
                            <comment id="12898219" author="rhillegas" created="Fri, 13 Aug 2010 13:55:39 +0100"  >&lt;p&gt;Attaching derby-4066-04-aa-testTweak.diff. This adds some asserts to the test cases added in the previous submission. Committed at subversion  revision 985182.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12470025">DERBY-4754</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12494758">DERBY-4959</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12395004">DERBY-3652</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12400615" name="derby-4066-01-aa-enableLobArgs.diff" size="6949" author="rhillegas" created="Fri, 20 Feb 2009 16:17:59 +0000"/>
                            <attachment id="12400778" name="derby-4066-01-ab-enableLobArgs.diff" size="13022" author="rhillegas" created="Mon, 23 Feb 2009 18:07:21 +0000"/>
                            <attachment id="12401260" name="derby-4066-01-ag-enableLobArgs.diff" size="18985" author="rhillegas" created="Mon, 2 Mar 2009 21:59:02 +0000"/>
                            <attachment id="12450336" name="derby-4066-01-ak-enableLobArgs.diff" size="19854" author="rhillegas" created="Fri, 23 Jul 2010 19:29:32 +0100"/>
                            <attachment id="12451358" name="derby-4066-01-al-enableLobArgs.diff" size="27406" author="rhillegas" created="Thu, 5 Aug 2010 20:15:02 +0100"/>
                            <attachment id="12451676" name="derby-4066-02-ac-outputLOBs.diff" size="19304" author="rhillegas" created="Tue, 10 Aug 2010 15:29:12 +0100"/>
                            <attachment id="12451936" name="derby-4066-03-aa-bigLOBs.diff" size="4477" author="rhillegas" created="Thu, 12 Aug 2010 20:11:58 +0100"/>
                            <attachment id="12452020" name="derby-4066-04-aa-testTweak.diff" size="1551" author="rhillegas" created="Fri, 13 Aug 2010 13:55:39 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Feb 2009 17:06:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31118</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0jmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36998</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>