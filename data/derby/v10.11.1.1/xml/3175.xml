<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3175/DERBY-3175.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3175] NullPointerException on INSERT after ALTER TABLE ... DROP COLUMN</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3175</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;ij version 10.3&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:bugdb;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table t (&lt;br/&gt;
       x varchar(12),&lt;br/&gt;
       y varchar(12),&lt;br/&gt;
       id int primary key generated by default as identity&lt;br/&gt;
);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; alter table t drop column y;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values &apos;a&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main14.main(Unknown Source)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(Unknown Source)&lt;br/&gt;
        at org.apache.derby.iapi.tools.run.main(Unknown Source)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 18 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumn.columnTypeAndLengthMatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ResultColumnList.columnTypesAndLengthsMatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.InsertNode.bindStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)&lt;br/&gt;
        ... 11 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="12381898">DERBY-3175</key>
            <summary>NullPointerException on INSERT after ALTER TABLE ... DROP COLUMN</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Nov 2007 09:06:19 +0000</created>
                <updated>Thu, 3 Jan 2008 09:48:13 +0000</updated>
                            <resolved>Thu, 15 Nov 2007 19:47:18 +0000</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12540383" author="knutanders" created="Tue, 6 Nov 2007 09:08:00 +0000"  >&lt;p&gt;Uploading repro script.&lt;/p&gt;</comment>
                            <comment id="12540627" author="bryanpendleton" created="Tue, 6 Nov 2007 23:40:09 +0000"  >&lt;p&gt;In the trunk, with a Sane build, I see the following instead of the NPE:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values &apos;a&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED If column is not autoinc and have defaultInfo, isDefaultValueAutoinc can not be true: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12540628" author="bryanpendleton" created="Tue, 6 Nov 2007 23:47:14 +0000"  >&lt;p&gt;The &lt;b&gt;order&lt;/b&gt; of the column definitions in the CREATE TABLE statement is relevant. If I reverse the order of the &apos;y&apos; and &apos;id&apos; columns so that the CREATE TABLE statement reads:&lt;/p&gt;

&lt;p&gt;create table t (&lt;br/&gt;
       x varchar(12),&lt;br/&gt;
       id int primary key generated by default as identity,&lt;br/&gt;
       y varchar(12)&lt;br/&gt;
); &lt;/p&gt;

&lt;p&gt;then the bug does not reproduce.&lt;/p&gt;</comment>
                            <comment id="12540655" author="bryanpendleton" created="Wed, 7 Nov 2007 02:53:11 +0000"  >&lt;p&gt;The core of the problem happens when AlterTableConstantAction.dropColumnFromTable &lt;br/&gt;
calls SYSCOLUMNSRowFactory.makeRow (via DataDictionaryImpl.addDescriptorArray).&lt;/p&gt;

&lt;p&gt;The relevant dropColumnFromTable code is here:&lt;/p&gt;

&lt;p&gt;		// drop the column from syscolumns &lt;br/&gt;
		dd.dropColumnDescriptor(td.getUUID(), columnInfo&lt;span class=&quot;error&quot;&gt;&amp;#91;ix&amp;#93;&lt;/span&gt;.name, tc);&lt;br/&gt;
		ColumnDescriptor[] cdlArray = &lt;br/&gt;
            new ColumnDescriptor&lt;span class=&quot;error&quot;&gt;&amp;#91;size - columnDescriptor.getPosition()&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;		for (int i = columnDescriptor.getPosition(), j = 0; i &amp;lt; size; i+&lt;ins&gt;, j&lt;/ins&gt;+)&lt;/p&gt;
		{
			ColumnDescriptor cd = (ColumnDescriptor) tab_cdl.elementAt(i);
			dd.dropColumnDescriptor(td.getUUID(), cd.getColumnName(), tc);
			cd.setPosition(i);
			cdlArray[j] = cd;
		}
&lt;p&gt;		dd.addDescriptorArray(cdlArray, td,&lt;br/&gt;
							  DataDictionary.SYSCOLUMNS_CATALOG_NUM, false, tc);&lt;/p&gt;

&lt;p&gt;This code does the following:&lt;br/&gt;
1) For the column we&apos;re dropping, deletes the corresponding row from SYSCOLUMNS&lt;br/&gt;
2) For each column &lt;b&gt;after&lt;/b&gt; the column we&apos;re dropping, deletes that column&apos;s&lt;br/&gt;
row from SYSCOLUMNS, and accumulates that ColumnDescriptor object into the&lt;br/&gt;
cdlArray, updating the ColumnDescriptor to have the new position of that column in the table&lt;br/&gt;
3) calls addDescriptorArray to add the new SYSCOLUMNS rows for the columns with&lt;br/&gt;
the modified positions.&lt;/p&gt;

&lt;p&gt;DataDictionaryImpl.addDescriptorArray then makes a new row for each ColumnDescriptor&lt;br/&gt;
with this code:&lt;/p&gt;

&lt;p&gt;		for (int index = 0; index &amp;lt; td.length; index++)&lt;/p&gt;
		{
			ExecRow row = crf.makeRow(td[index], parent);
			rl[index] = row;
		}

&lt;p&gt;And the crf.makeRow() call arrives at SYSCOLUMNSRowFactory.makeRow.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;HOWEVER&lt;/b&gt;, SYSCOLUMNSRowFactory.makeRow expects that the ColumnDescriptor&lt;br/&gt;
will specify how to set the autoincInc, autoincStart, and autoincValue columns in SYSCOLUMNS&lt;br/&gt;
via the awkwardly-named getAutoinc_create_or_modify_Start_Increment() value:&lt;/p&gt;

&lt;p&gt;		if (autoinc_create_or_modify_Start_Increment == ColumnDefinitionNode.CREATE_AUTOINCREMENT ||&lt;br/&gt;
				autoinc_create_or_modify_Start_Increment == ColumnDefinitionNode.MODIFY_AUTOINCREMENT_INC_VALUE)&lt;br/&gt;
		&lt;/p&gt;
{//user is adding an autoinc column or is changing the increment value of autoinc column
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTVALUE, 
						  new SQLLongint(autoincStart));
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTSTART, 
						  new SQLLongint(autoincStart));
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTINC, 
						  new SQLLongint(autoincInc));
		}
&lt;p&gt; else if (autoinc_create_or_modify_Start_Increment == ColumnDefinitionNode.MODIFY_AUTOINCREMENT_RESTART_VALUE)&lt;/p&gt;
		{//user asked for restart with a new value, so don&apos;t change increment by and original start
			//with values in the SYSCOLUMNS table. Just record the RESTART WITH value as the
			//next value to be generated in the SYSCOLUMNS table
			ColumnDescriptor  column = (ColumnDescriptor)td;
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTVALUE, new SQLLongint(autoincStart));
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTSTART, new SQLLongint(autoincStart));
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTINC, new SQLLongint(
					column.getTableDescriptor().getColumnDescriptor(colName).getAutoincInc()));
		}
&lt;p&gt;		else&lt;/p&gt;
		{
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTVALUE, 
						  new SQLLongint());
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTSTART, 
						  new SQLLongint());
			row.setColumn(SYSCOLUMNS_AUTOINCREMENTINC,
						  new SQLLongint());
		}

&lt;p&gt;But when we are re-adding the column descriptors in AlterTableConstantAction.dropColumnFromTable,&lt;br/&gt;
this autoinc_create_or_modify_Start_Increment value is not set, and so the makeRow() code&lt;br/&gt;
falls into the &quot;else&quot; block above, and resets the autoincement fields to 0, thus&lt;br/&gt;
corrupting the SYSCOLUMNS row.&lt;/p&gt;

&lt;p&gt;I suspect the fix is as simple as forcing a value of ColumnDefinitionNode.CREATE_AUTOINCREMENT&lt;br/&gt;
when re-adding the ColumnDescriptors; I&apos;ll try this fix in a little while and report back on the results.&lt;/p&gt;</comment>
                            <comment id="12540673" author="bryanpendleton" created="Wed, 7 Nov 2007 05:41:27 +0000"  >&lt;p&gt;Attached is d3175_codeChangeOnly.diff, which is not for commit. This change appears to fix the bug. I intend to work up a more complete patch proposal, incorporating Knut&apos;s test case as a regression test. I also intend to see whether this code change affects the repro script given in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3177&quot; title=&quot;Dropping columns casues auto_increment field to be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3177&quot;&gt;&lt;del&gt;DERBY-3177&lt;/del&gt;&lt;/a&gt; and if so I&apos;ll link the two issues and include that reproduction script in the regression test as well.&lt;/p&gt;

&lt;p&gt;In the meantime, feedback and suggestions about the analysis or the code change are most welcome.&lt;/p&gt;</comment>
                            <comment id="12540816" author="bryanpendleton" created="Wed, 7 Nov 2007 17:57:02 +0000"  >&lt;p&gt;Attached is &quot;fixWithTest.diff&quot;, which incorporates Knut&apos;s example from&lt;br/&gt;
the bug description into the altertable.sql regression test.&lt;/p&gt;

&lt;p&gt;I&apos;ve run the altertable.sql regression test, but haven&apos;t run the full test suites.&lt;/p&gt;
</comment>
                            <comment id="12540959" author="bryanpendleton" created="Thu, 8 Nov 2007 04:30:57 +0000"  >&lt;p&gt;Attached is &quot;fixWith3177Case.diff&quot;, a patch proposal.&lt;/p&gt;

&lt;p&gt;I believe that this patch proposal is ready for review, and I&lt;br/&gt;
believe that it will resolve both &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3175&quot; title=&quot;NullPointerException on INSERT after ALTER TABLE ... DROP COLUMN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3175&quot;&gt;&lt;del&gt;DERBY-3175&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3177&quot; title=&quot;Dropping columns casues auto_increment field to be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3177&quot;&gt;&lt;del&gt;DERBY-3177&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please have a look at the patch and let us know your comments.&lt;/p&gt;</comment>
                            <comment id="12540963" author="bryanpendleton" created="Thu, 8 Nov 2007 04:39:44 +0000"  >&lt;p&gt;Except for a strange failure in lang/triggerGeneral, all the regression results were&lt;br/&gt;
clean. I believe that the triggerGeneral error is unrelated, and is due to some sort&lt;br/&gt;
of configuration error in my environment.&lt;/p&gt;</comment>
                            <comment id="12541214" author="bryanpendleton" created="Fri, 9 Nov 2007 02:39:43 +0000"  >&lt;p&gt;I propose to submit fixWith3177Case.diff to the trunk fairly soon.  I&apos;m also&lt;br/&gt;
interested in merging the fix back to the 10.3 branch, if the trunk change goes well.&lt;/p&gt;</comment>
                            <comment id="12541218" author="chubbard" created="Fri, 9 Nov 2007 03:21:36 +0000"  >&lt;p&gt;I&apos;m actually encountering this issue as well as 1377, but it&apos;s intermittent.  I haven&apos;t dropped a column that occurs before an primary key column, but it fails periodically after inserting lots of data.  It doesn&apos;t fail every time.  It usually recovers.  Just thought I&apos;d mention it.&lt;/p&gt;

&lt;p&gt;So does this mean we can expect a new version for 10.3 to fix this issue?&lt;/p&gt;</comment>
                            <comment id="12541221" author="bryanpendleton" created="Fri, 9 Nov 2007 03:49:42 +0000"  >&lt;p&gt;Hi Charlie, thanks for the update! Is there any way for you to verify whether the patch&lt;br/&gt;
attached to this issue affects your symptoms? Can you build a modified version of 10.3&lt;br/&gt;
with this change and try it out in your test environment? That would be very helpful.&lt;/p&gt;</comment>
                            <comment id="12541258" author="knutanders" created="Fri, 9 Nov 2007 08:58:03 +0000"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I downloaded the patch and it indeed fixes the problem I reported. However, it seems to reset the counter which keeps track of the next identity value to be generated. Please see the modified repro script below:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table d3175 (x varchar(12), y varchar(12),&lt;br/&gt;
id int primary key generated by default as identity);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into d3175&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values &apos;a&apos;;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; alter table d3175 drop column y;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into d3175&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values &apos;b&apos;;&lt;br/&gt;
ERROR 23505: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL071109094158840&apos; defined on &apos;D3175&apos;.&lt;/p&gt;</comment>
                            <comment id="12541264" author="knutanders" created="Fri, 9 Nov 2007 09:06:14 +0000"  >&lt;p&gt;&amp;gt; So does this mean we can expect a new version for 10.3 to fix this issue?&lt;/p&gt;

&lt;p&gt;There&apos;s already a 10.3 maintenance release scheduled. Hopefully, we&apos;ll get a fix into that release. Please see &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyTenThreeTwoRelease&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyTenThreeTwoRelease&lt;/a&gt; for details about the release.&lt;/p&gt;</comment>
                            <comment id="12541318" author="chubbard" created="Fri, 9 Nov 2007 13:48:14 +0000"  >&lt;p&gt;Sure I can try it out sometime this weekend.  I&apos;ve never built derby before how would I get the source to build it with?&lt;/p&gt;</comment>
                            <comment id="12541335" author="bryanpendleton" created="Fri, 9 Nov 2007 14:39:03 +0000"  >&lt;p&gt;Knut, good catch on the start value; I&apos;ll have a look at that right away.&lt;/p&gt;

&lt;p&gt;Charlie, you can learn about building Derby from source here:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/dev/derby_source.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/dev/derby_source.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12541384" author="bryanpendleton" created="Fri, 9 Nov 2007 17:40:53 +0000"  >&lt;p&gt;Resetting the next-value counter is occurring in the makeRow() code that I quoted in my earlier comment. Pay particular attention to these lines:&lt;/p&gt;

&lt;p&gt;                        row.setColumn(SYSCOLUMNS_AUTOINCREMENTVALUE,&lt;br/&gt;
                                                  new SQLLongint(autoincStart));&lt;br/&gt;
                        row.setColumn(SYSCOLUMNS_AUTOINCREMENTSTART,&lt;br/&gt;
                                                  new SQLLongint(autoincStart));&lt;/p&gt;

&lt;p&gt;Note that &apos;autoincStart&apos; is used for &lt;b&gt;both&lt;/b&gt; the &apos;start&apos; column of SYSCOLUMNS and the &apos;value&apos; column.&lt;/p&gt;

&lt;p&gt;Also, note that when we build a ColumnDescriptor from a SYSCOLUMNS row, in buildDescriptor(),&lt;br/&gt;
we intentionally omit the AUTOINCREMENTVALUE from the ColumnDescriptor object:&lt;/p&gt;

&lt;p&gt;/* 7th column is AUTOINCREMENTVALUE, not cached in descriptor (long) */&lt;/p&gt;

&lt;p&gt;So we don&apos;t even have the previous counter value available at the time that we make the new row.&lt;/p&gt;

&lt;p&gt;More study is needed.&lt;/p&gt;</comment>
                            <comment id="12541435" author="bryanpendleton" created="Fri, 9 Nov 2007 20:40:58 +0000"  >&lt;p&gt;Here are 3 possible ways to ensure that the autoincrementValue is preserved during the drop column:&lt;/p&gt;

&lt;p&gt;1) Add autoincrementValue to ColumnDescriptor. Change SYSCOLUMNS.buildDescriptor to&lt;br/&gt;
retrieve the autoincrementValue from the SYSCOLUMNS row. Change SYSCOLUMNS.makeRow&lt;br/&gt;
to set the autoincrementValue in SYSCOLUMNS from the ColumnDescriptor&apos;s value. Change&lt;br/&gt;
any other places that create a ColumnDescriptor to initialize the autoincrementValue to match&lt;br/&gt;
autoincrementStart.&lt;/p&gt;

&lt;p&gt;2) Change SYSCOLUMNS.makeRow to take a new 3rd argument: autoincrementValue. Change&lt;br/&gt;
AlterTableCOnstantAction&apos;s drop column logic so that it fetches the old value of the&lt;br/&gt;
autoincrementValue from the SYSCOLUMNS row before it deletes it, then passes that old value&lt;br/&gt;
to the makeRow call when adding back the column descriptor. I don&apos;t really like this solution,&lt;br/&gt;
but I thought of it so I&apos;m recording it here.&lt;/p&gt;

&lt;p&gt;3) Change AlterTableConstantAction&apos;s  drop column logic so that it doesn&apos;t drop-and-re-add&lt;br/&gt;
all the subsequent column descriptors in order to change their positions, but instead issues&lt;br/&gt;
an UPDATE operation on those column descriptors to decrement their column number field.&lt;/p&gt;

&lt;p&gt;Technique #1 seems pretty straightforward, it&apos;s just a bunch of code grunging. It does make the&lt;br/&gt;
ColumnDescriptor object instance slightly larger in memory.&lt;/p&gt;

&lt;p&gt;Technique #3 seems appealing, because if all we want to change about a particular&lt;br/&gt;
SYSCOLUMNS row is the column number, why should we have to delete and re-add the&lt;br/&gt;
SYSCOLUMNS row in order to make that change? It doesn&apos;t appear that the column number&lt;br/&gt;
field in SYSCOLUMNS is indexed, so I don&apos;t think there should be any index complexity.&lt;/p&gt;

&lt;p&gt;If I can find some example code for one of the other system catalogs which issues an UPDATE&lt;br/&gt;
rather than a DROP and an INSERT, I&apos;ll try to implement technique #3 modelled on that.&lt;/p&gt;</comment>
                            <comment id="12541446" author="bryanpendleton" created="Fri, 9 Nov 2007 21:22:59 +0000"  >&lt;p&gt;I don&apos;t understand this little snippet from SYSCOLUMNSRowFactory.java:&lt;/p&gt;

&lt;p&gt;        /* 8th column is AUTOINCREMENTSTART (long) */&lt;br/&gt;
        autoincStart = row.getColumn(SYSCOLUMNS_AUTOINCREMENTSTART).getLong();&lt;/p&gt;

&lt;p&gt;        /* 9th column is AUTOINCREMENTINC (long) */&lt;br/&gt;
        autoincInc = row.getColumn(SYSCOLUMNS_AUTOINCREMENTINC).getLong();&lt;/p&gt;

&lt;p&gt;        DataValueDescriptor col = row.getColumn(SYSCOLUMNS_AUTOINCREMENTSTART);&lt;br/&gt;
        autoincStart = col.getLong();&lt;/p&gt;

&lt;p&gt;        col = row.getColumn(SYSCOLUMNS_AUTOINCREMENTINC);&lt;br/&gt;
        autoincInc = col.getLong();&lt;/p&gt;

&lt;p&gt;Isn&apos;t this doing the same thing twice? Aren&apos;t the second group of statements redundant with the first?&lt;/p&gt;</comment>
                            <comment id="12541461" author="bryanpendleton" created="Fri, 9 Nov 2007 22:28:57 +0000"  >&lt;p&gt;Attached is preserveAutoincValue.diff, which addresses the new variant &lt;br/&gt;
problem that Knut found. This patch uses technique #1 from my previous &lt;br/&gt;
comment; that is, it adds an autoincValue field to the ColumnDescriptor&lt;br/&gt;
object, reads that value in from the SYSCOLUMNS row in buildDescriptor,&lt;br/&gt;
and sets that value into the SYSCOLUMNS row in makeRow.&lt;/p&gt;

&lt;p&gt;The test case is also modified as Knut suggested to verify that the&lt;br/&gt;
autoincrement value is properly preserved by the drop column command.&lt;/p&gt;

&lt;p&gt;I&apos;ve run lang/altertable.sql successfully with the new patch. I&apos;ll run the&lt;br/&gt;
full regression suite overnight and report back with any other problems.&lt;/p&gt;

&lt;p&gt;Please have a look at preserveAutoincValue.diff if you have a chance.&lt;/p&gt;</comment>
                            <comment id="12541548" author="bryanpendleton" created="Sat, 10 Nov 2007 15:30:46 +0000"  >&lt;p&gt;Complete regression suite was clean for preserveAutoincValue.diff&lt;/p&gt;</comment>
                            <comment id="12541590" author="chubbard" created="Sat, 10 Nov 2007 21:57:27 +0000"  >&lt;p&gt;I pulled down the source from the 10.3 branch.  Built the code, packaged the jars, and ran the bug.sql script in the ij tool.  Here is what I saw:&lt;/p&gt;

&lt;p&gt;D:\dev\db-derby-10.3-src&amp;gt;java -cp jars/sane/derby.jar;jars/sane/derbytools.jar org.apache.derby.tools.ij d:\temp\bug.sql&lt;br/&gt;
ij version 10.3&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:bugdb;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table t (&lt;br/&gt;
       x varchar(12),&lt;br/&gt;
       y varchar(12),&lt;br/&gt;
       id int primary key generated by default as identity&lt;br/&gt;
);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; alter table t drop column y;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; values &apos;a&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED If column is not autoinc and have defaultInfo, isDefaultValueAutoinc can not be true: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
ij&amp;gt;&lt;br/&gt;
D:\dev\db-derby-10.3-src&amp;gt;&lt;/p&gt;

&lt;p&gt;Did I do something wrong?  Are the patches attached to this bug committed in the 10.3 branch?  Or do I have to apply these patches manually before I build the project in order to get the fixes?&lt;/p&gt;

&lt;p&gt;Charlie&lt;/p&gt;</comment>
                            <comment id="12541594" author="bryanpendleton" created="Sat, 10 Nov 2007 22:40:25 +0000"  >&lt;p&gt;Excellent! That is exactly the symptom that I see with the trunk, so I believe&lt;br/&gt;
that you have set up your environment successfully.&lt;/p&gt;

&lt;p&gt;None of the patches have been committed yet, so yes, you have to apply the&lt;br/&gt;
patch of interest manually before you build the code. Please try &apos;preserveAutoincValue.diff&apos;,&lt;br/&gt;
as it is the most recent and most complete patch proposal.&lt;/p&gt;</comment>
                            <comment id="12541670" author="chubbard" created="Sun, 11 Nov 2007 23:41:58 +0000"  >&lt;p&gt;I finally built derby with the patches.  I tested the bug.sql on it before patching it and received the assertion problem I posted earlier.  I then patched the source code and retested with bug.sql and it completed successfully.  I copied the files over and tried it out on my environment, and unfortunately, I still experienced the issue.  I don&apos;t know if this is the same exception as before, but it looks like it:&lt;/p&gt;

&lt;p&gt;Any ideas?&lt;/p&gt;

&lt;p&gt;2007-11-11 18:35:08,224 &lt;span class=&quot;error&quot;&gt;&amp;#91;Mail loader&amp;#93;&lt;/span&gt; WARN  org.hibernate.util.JDBCExceptionReporter  - SQL Error: 0, SQLState: XJ001&lt;br/&gt;
2007-11-11 18:35:08,224 &lt;span class=&quot;error&quot;&gt;&amp;#91;Mail loader&amp;#93;&lt;/span&gt; ERROR org.hibernate.util.JDBCExceptionReporter  - Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
2007-11-11 18:35:08,240 &lt;span class=&quot;error&quot;&gt;&amp;#91;Mail loader&amp;#93;&lt;/span&gt; ERROR com.emailarchive.demon.MailIndexer  - could not execute query&lt;br/&gt;
org.hibernate.exception.GenericJDBCException: could not execute query&lt;br/&gt;
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)&lt;br/&gt;
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)&lt;br/&gt;
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)&lt;br/&gt;
	at org.hibernate.loader.Loader.doList(Loader.java:2223)&lt;br/&gt;
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2104)&lt;br/&gt;
	at org.hibernate.loader.Loader.list(Loader.java:2099)&lt;br/&gt;
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:378)&lt;br/&gt;
	at org.hibernate.hql.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:338)&lt;br/&gt;
	at org.hibernate.engine.query.HQLQueryPlan.performList(HQLQueryPlan.java:172)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.list(SessionImpl.java:1121)&lt;br/&gt;
	at org.hibernate.impl.QueryImpl.list(QueryImpl.java:79)&lt;br/&gt;
	at org.hibernate.impl.AbstractQueryImpl.uniqueResult(AbstractQueryImpl.java:811)&lt;br/&gt;
	at com.emailarchive.web.model.EmailAddressDao.createIfNotExists(EmailAddressDao.java:21)&lt;br/&gt;
	at com.emailarchive.web.model.MessageDao.createEmailIfNotExists(MessageDao.java:124)&lt;br/&gt;
	at com.emailarchive.web.model.MessageDao.create(MessageDao.java:111)&lt;br/&gt;
	at com.emailarchive.demon.MailIndexer.process(MailIndexer.java:49)&lt;br/&gt;
	at com.emailarchive.demon.MailDemonLoader.saveMessages(MailDemonLoader.java:89)&lt;br/&gt;
	at com.emailarchive.demon.MailDemonLoader.archiveMessages(MailDemonLoader.java:57)&lt;br/&gt;
	at com.emailarchive.demon.MailDemonLoader.run(MailDemonLoader.java:41)&lt;br/&gt;
	at java.util.TimerThread.mainLoop(Timer.java:512)&lt;br/&gt;
	at java.util.TimerThread.run(Timer.java:462)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1293)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:275)&lt;br/&gt;
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:186)&lt;br/&gt;
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1787)&lt;br/&gt;
	at org.hibernate.loader.Loader.doQuery(Loader.java:674)&lt;br/&gt;
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:236)&lt;br/&gt;
	at org.hibernate.loader.Loader.doList(Loader.java:2220)&lt;br/&gt;
	... 17 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.finishAndRTS(BasicNoPutResultSetImpl.java:634)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.finish(BasicNoPutResultSetImpl.java:607)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BaseActivation.close(BaseActivation.java:351)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericActivationHolder.execute(GenericActivationHolder.java:304)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:368)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	... 24 more&lt;/p&gt;
</comment>
                            <comment id="12541706" author="knutanders" created="Mon, 12 Nov 2007 08:21:45 +0000"  >&lt;p&gt;Charlie, the exception you&apos;re seeing now looks more like &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3197&quot; title=&quot;NPE in ProjectRestrictResultSet on  finishAndRTS&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3197&quot;&gt;&lt;del&gt;DERBY-3197&lt;/del&gt;&lt;/a&gt;. It would be great if you could run with derby.language.logStatementText=true and post the contents of derby.log on that issue.&lt;/p&gt;</comment>
                            <comment id="12541717" author="knutanders" created="Mon, 12 Nov 2007 09:25:17 +0000"  >&lt;p&gt;Bryan, preserveAutoincValue.diff looks good. +1 to commit. (nit: the if statement in AlterTableConstantAction would perhaps have been clearer if it used braces, since it spans multiple lines)&lt;/p&gt;</comment>
                            <comment id="12541951" author="bryanpendleton" created="Mon, 12 Nov 2007 21:23:08 +0000"  >&lt;p&gt;Thanks Knut! Attachment &apos;preserveFixWithComments.diff&apos; includes&lt;br/&gt;
the braces to improve readability in AlterTableConstantAction, and&lt;br/&gt;
also adds comments to a number of the code changes.&lt;/p&gt;

&lt;p&gt;I intend to commit this fix to the trunk.&lt;/p&gt;

&lt;p&gt;Thanks all for the reviews and testing.&lt;/p&gt;</comment>
                            <comment id="12542289" author="bryanpendleton" created="Wed, 14 Nov 2007 00:14:30 +0000"  >&lt;p&gt;Committed preserveFixWithComments.diff to the trunk as revision 594727.&lt;/p&gt;

&lt;p&gt;After we get a bit of experience with this change in the trunk, I&apos;ll investigate merging it back to 10.3.&lt;/p&gt;
</comment>
                            <comment id="12542517" author="bryanpendleton" created="Wed, 14 Nov 2007 17:31:17 +0000"  >&lt;p&gt;There was a minor conflict on SYSCOLUMNSRowFactory.java&lt;br/&gt;
when merging to the 10.3 line. Attached is merge10_3.diff&lt;br/&gt;
showing the intended patch to the 10.3 line after the conflict is resolved.&lt;/p&gt;</comment>
                            <comment id="12542634" author="bryanpendleton" created="Wed, 14 Nov 2007 23:56:19 +0000"  >&lt;p&gt;derbyall and junit suites.All runs on the 10.3 branch with the patch were clean.&lt;/p&gt;</comment>
                            <comment id="12542863" author="bryanpendleton" created="Thu, 15 Nov 2007 19:47:18 +0000"  >&lt;p&gt;No issues appear to have arisen with this change on the trunk in the last 48 hours,&lt;br/&gt;
and my merge and build/test results with 10.3 were very clean, so I&apos;ve committed&lt;br/&gt;
the merged patch to the 10.3 branch as subversion revision 595408.&lt;/p&gt;

&lt;p&gt;I&apos;m a bit concerned about &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3177&quot; title=&quot;Dropping columns casues auto_increment field to be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3177&quot;&gt;&lt;del&gt;DERBY-3177&lt;/del&gt;&lt;/a&gt;. I thought the two issues were the same,&lt;br/&gt;
but Charlie reported that the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3175&quot; title=&quot;NullPointerException on INSERT after ALTER TABLE ... DROP COLUMN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3175&quot;&gt;&lt;del&gt;DERBY-3175&lt;/del&gt;&lt;/a&gt; changes didn&apos;t improve his results&lt;br/&gt;
with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3177&quot; title=&quot;Dropping columns casues auto_increment field to be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3177&quot;&gt;&lt;del&gt;DERBY-3177&lt;/del&gt;&lt;/a&gt;. Perhaps I was premature to link the issues as duplicates.&lt;/p&gt;

&lt;p&gt;I believe this issue is resolved, though. Thanks again to everyone for the help!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12381920">DERBY-3177</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12369013" name="bug.sql" size="223" author="knutanders" created="Tue, 6 Nov 2007 09:07:59 +0000"/>
                            <attachment id="12369076" name="d3175_codeChangeOnly.diff" size="1653" author="bryanpendleton" created="Wed, 7 Nov 2007 05:41:27 +0000"/>
                            <attachment id="12369154" name="fixWith3177Case.diff" size="26906" author="bryanpendleton" created="Thu, 8 Nov 2007 04:30:56 +0000"/>
                            <attachment id="12369129" name="fixWithTest.diff" size="4144" author="bryanpendleton" created="Wed, 7 Nov 2007 17:57:01 +0000"/>
                            <attachment id="12369540" name="merge10_3.diff" size="38442" author="bryanpendleton" created="Wed, 14 Nov 2007 17:31:17 +0000"/>
                            <attachment id="12369273" name="preserveAutoincValue.diff" size="36934" author="bryanpendleton" created="Fri, 9 Nov 2007 22:28:57 +0000"/>
                            <attachment id="12369395" name="preserveFixWithComments.diff" size="38419" author="bryanpendleton" created="Mon, 12 Nov 2007 21:23:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Nov 2007 23:40:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ztj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39621</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>