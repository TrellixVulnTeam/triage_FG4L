<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:03 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5472/DERBY-5472.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5472] Speed up MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5472</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats() takes fairly long time. When I run it with -Xmx16M (per instructions in the comments) in my environment, that test case alone takes 80-90 seconds. And it runs twice (embedded and client) so it takes nearly 3 minutes in total.&lt;/p&gt;

&lt;p&gt;There are ways to speed it up and still have it expose &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5336&quot; title=&quot;Repeated database creation causes OutOfMemoryError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5336&quot;&gt;&lt;del&gt;DERBY-5336&lt;/del&gt;&lt;/a&gt;, for which it was originally written:&lt;/p&gt;

&lt;p&gt;1) The body of the test is executed 50 times. When the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5336&quot; title=&quot;Repeated database creation causes OutOfMemoryError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5336&quot;&gt;&lt;del&gt;DERBY-5336&lt;/del&gt;&lt;/a&gt; is backed out, the test case typically fails in the 8th or 9th iteration, so 20 iterations should be enough.&lt;/p&gt;

&lt;p&gt;2) In each iteration, a table with 500 rows is created. Since the goal is to get the istat daemon to run, we only need to insert enough rows to exceed derby.storage.indexStats.debug.createThreshold, which is 100 by default. Reducing the size to for example 200 rows would be OK.&lt;/p&gt;

&lt;p&gt;3) When populating the table, a select statement is compiled and executed in between each insert statement. To get the istat daemon running, it&apos;s sufficient to execute a single select statement once the table is populated.&lt;/p&gt;

&lt;p&gt;4) Every insert statement is compiled separately. Would be better to compile once and execute multiple times.&lt;/p&gt;

&lt;p&gt;5) Populating the table could happen with auto-commit off.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12527746">DERBY-5472</key>
            <summary>Speed up MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Oct 2011 14:37:03 +0100</created>
                <updated>Thu, 20 Oct 2011 09:07:54 +0100</updated>
                            <resolved>Thu, 20 Oct 2011 09:07:54 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13130624" author="knutanders" created="Wed, 19 Oct 2011 14:40:40 +0100"  >&lt;p&gt;The attached patch makes the suggested changes to the test case. I&apos;ve verified that it still fails with OOME when backing out &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5336&quot; title=&quot;Repeated database creation causes OutOfMemoryError&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5336&quot;&gt;&lt;del&gt;DERBY-5336&lt;/del&gt;&lt;/a&gt; and running with -Xmx16M.&lt;/p&gt;

&lt;p&gt;This reduces the time to run MemoryLeakFixesTest from 210 seconds to 40 seconds in my environment.&lt;/p&gt;</comment>
                            <comment id="13130642" author="bryanpendleton" created="Wed, 19 Oct 2011 15:07:27 +0100"  >&lt;p&gt;Did you happen to benchmark the effects of the 5 changes individually? Or do you only have a number for the effect of all 5 altogether?&lt;/p&gt;

&lt;p&gt;I think the speedup is great; making tests run faster means we can run the tests more often and in more configurations.&lt;/p&gt;

&lt;p&gt;I was just wondering if you knew which change had what effect on the overall runtime.&lt;/p&gt;</comment>
                            <comment id="13130759" author="knutanders" created="Wed, 19 Oct 2011 17:51:37 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I didn&apos;t benchmark them individually, but here&apos;s approximately what I saw as I added them:&lt;/p&gt;

&lt;p&gt;With no changes: 85 sec for the embedded case&lt;/p&gt;

&lt;p&gt;2+3+4 reduced it to 10 sec&lt;/p&gt;

&lt;p&gt;1+2+3+4 reduced it to 5 sec&lt;/p&gt;

&lt;p&gt;1+2+3+4+5 reduced it to 4.5 sec (don&apos;t know if the difference between 5 and 4.5 is significant or just variation...)&lt;/p&gt;

&lt;p&gt;So it&apos;s difficult to say if the improvements are mostly because of the reduced number of iterations, or if the reduced compilation contributed. Disabling auto-commit didn&apos;t seem to do much, but I ran the test on a file system where synchronous writes had been disabled, so the cost of the extra commits cannot really be seen from these experiments.&lt;/p&gt;

&lt;p&gt;I also had a hidden agenda, as I hope that removing the excessive recompilation will allow us to remove the work-around for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5412&quot; title=&quot;MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats() fails on phoneME: java.lang.InternalError: Number of class names exceeds vm limit.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5412&quot;&gt;&lt;del&gt;DERBY-5412&lt;/del&gt;&lt;/a&gt; in the test case, but I haven&apos;t verified that yet.&lt;/p&gt;

&lt;p&gt;But now you made me curious, so I guess I&apos;ll have to run the experiments to see how costly the compilation was. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;If it turns out compiling insert statements actually contributes to the time it takes to run the test, OrderByAndSortAvoidanceTest would be the next test to look at. That test has thousands of hard-coded insert statements in the decorator, each of them needs to be compiled separately.&lt;/p&gt;</comment>
                            <comment id="13130842" author="knutanders" created="Wed, 19 Oct 2011 19:13:53 +0100"  >&lt;p&gt;More numbers:&lt;/p&gt;

&lt;p&gt;Only 4 (compiling the INSERT statement once and execute multiple times) reduced the time from 85 sec to 58 sec.&lt;/p&gt;

&lt;p&gt;Doing 3 (compile/execute the SELECT statement only once) in addition to 4, reduced the time further down to 12 sec.&lt;/p&gt;

&lt;p&gt;So it looks like reducing the amount of compilation is actually more important than reducing the number of iterations.&lt;/p&gt;</comment>
                            <comment id="13131291" author="bryanpendleton" created="Thu, 20 Oct 2011 03:41:40 +0100"  >&lt;p&gt;&amp;gt;  it looks like reducing the amount of compilation is actually more important&lt;/p&gt;

&lt;p&gt;An interesting finding!&lt;/p&gt;

&lt;p&gt;Thank you for taking the extra time to break down the numbers and share your observations.&lt;/p&gt;</comment>
                            <comment id="13131417" author="knutanders" created="Thu, 20 Oct 2011 07:59:31 +0100"  >&lt;p&gt;Committed revision 1186630.&lt;/p&gt;</comment>
                            <comment id="13131436" author="knutanders" created="Thu, 20 Oct 2011 09:06:13 +0100"  >&lt;p&gt;I&apos;ve now verified that the changes in this issue makes the workaround for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5412&quot; title=&quot;MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats() fails on phoneME: java.lang.InternalError: Number of class names exceeds vm limit.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5412&quot;&gt;&lt;del&gt;DERBY-5412&lt;/del&gt;&lt;/a&gt; unnecessary. The VM limit on the number of class names in phoneME is no longer exceeded. The attached patch removes the workaround.&lt;/p&gt;</comment>
                            <comment id="13131437" author="knutanders" created="Thu, 20 Oct 2011 09:07:54 +0100"  >&lt;p&gt;Committed revision 1186656.&lt;/p&gt;

&lt;p&gt;Closing the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12514127">DERBY-5336</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12499826" name="d5472-phoneme.diff" size="1438" author="knutanders" created="Thu, 20 Oct 2011 09:06:13 +0100"/>
                            <attachment id="12499682" name="d5472.diff" size="3941" author="knutanders" created="Wed, 19 Oct 2011 14:40:40 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Oct 2011 14:07:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>89238</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0f3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36266</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>