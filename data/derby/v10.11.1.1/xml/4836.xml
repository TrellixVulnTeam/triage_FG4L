<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4836/DERBY-4836.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4836] many failures with IBM 1.5 and 1.6 on windows after test InternationalConnectTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4836</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;After changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4757&quot; title=&quot;(Client) Implement UTF8 support on DRDA&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4757&quot;&gt;&lt;del&gt;DERBY-4757&lt;/del&gt;&lt;/a&gt;, revision 1004460, multiple tests are failing with ibm 1.5 and 1.6 jvms on windows XP.&lt;br/&gt;
See: &lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testSummary-1004498.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testSummary-1004498.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first error is this (linebreaks inserted at &lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt; for readability of this JIRA):&lt;br/&gt;
1) testBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)java.sql.SQLException:&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt; &lt;br/&gt;
DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.security.AccessControlExceptionAccess denied&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt; &lt;br/&gt;
(java.io.FilePermission C:\derbyt\tst\system\AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tmp delete)&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
XJ001.U&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:96)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
	at org.apache.derby.jdbc.ClientDriver.connect(ClientDriver.java:149)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:322)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:273)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest.testBoundaries(InternationalConnectTest.java:92)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:16)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: &lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
java.security.AccessControlExceptionAccess denied (java.io.FilePermission C:\derbyt\tst\system\AAAAAAAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tmp delete)XJ001.U&lt;br/&gt;
	at org.apache.derby.client.am.Connection.completeSqlca(Connection.java:2117)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseRdbAccessFailed(NetConnectionReply.java:541)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseAccessRdbError(NetConnectionReply.java:434)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseACCRDBreply(NetConnectionReply.java:297)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.readAccessDatabase(NetConnectionReply.java:121)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.readSecurityCheckAndAccessRdb(NetConnection.java:846)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowSecurityCheckAndAccessRdb(NetConnection.java:769)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowUSRIDONLconnect(NetConnection.java:601)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.flowConnect(NetConnection.java:408)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.&amp;lt;init&amp;gt;(NetConnection.java:218)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection40.&amp;lt;init&amp;gt;(NetConnection40.java:77)&lt;br/&gt;
	at org.apache.derby.client.net.ClientJDBCObjectFactoryImpl40.newNetConnection(ClientJDBCObjectFactoryImpl40.java:269)&lt;br/&gt;
	at org.apache.derby.jdbc.ClientDriver.connect(ClientDriver.java:83)&lt;br/&gt;
	... 41 more&lt;br/&gt;
==========================&lt;br/&gt;
after which other tests fail with database shutdown errors and the like. For instance:&lt;br/&gt;
==========================&lt;br/&gt;
2) shutdownDerby(org.apache.derbyTesting.functionTests.tests.store.BootAllTest)java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.getService(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:572)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:165)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.getConnectionByAttributes(DriverManagerConnector.java:134)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.shutEngine(DriverManagerConnector.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngine(TestConfiguration.java:1522)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.BootAllTest.shutdownDerby(BootAllTest.java:116)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;===============&lt;/p&gt;


&lt;p&gt;This does &lt;b&gt;not&lt;/b&gt; occur with the sun jdk on this hardware (build 1.6.0_21-b07).&lt;br/&gt;
It also does &lt;b&gt;not&lt;/b&gt; occur with the same jvm levels on unix.&lt;/p&gt;

&lt;p&gt;Interestingly, when I try running the test by itself with ibm 1.6 on windows, it also fails:&lt;br/&gt;
===============&lt;br/&gt;
1) testBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)java.sql.SQLException: No suitable driver&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:330)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:273)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest.testBoundaries(InternationalConnectTest.java:92)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;This is the second time testBoundaries fixture gets run.&lt;/p&gt;

&lt;p&gt;This &lt;b&gt;does&lt;/b&gt; happen on linux with the same jvm level (ibm16 sr8), but does this occur on Windows XP with sun/oracle jdk 1.6.&lt;/p&gt;


</description>
                <environment>Windows XP with ibm 1.5.  SR11 FP1, and ibm 1.6 SR8.</environment>
        <key id="12476715">DERBY-4836</key>
            <summary>many failures with IBM 1.5 and 1.6 on windows after test InternationalConnectTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Oct 2010 23:27:19 +0100</created>
                <updated>Tue, 14 Feb 2012 20:01:36 +0000</updated>
                            <resolved>Mon, 12 Dec 2011 22:31:13 +0000</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12918710" author="myrna" created="Wed, 6 Oct 2010 23:28:14 +0100"  >&lt;p&gt;I&apos;m not quite sure still what&apos;s happening here, but I suggest preventing the test from running with ibm jvms for the time being.&lt;/p&gt;</comment>
                            <comment id="12918723" author="myrna" created="Thu, 7 Oct 2010 00:01:25 +0100"  >&lt;p&gt;Attaching a patch that will cause the test run to skip over this test with ibm jvms while I do further investigations. I&apos;ll commit this shortly. I&apos;ve not run suites.All with this, just a temporary suite, and the test itself.&lt;/p&gt;</comment>
                            <comment id="12918725" author="myrna" created="Thu, 7 Oct 2010 00:04:21 +0100"  >&lt;p&gt;committed the skipping patch with revision 1005285.&lt;/p&gt;</comment>
                            <comment id="12918806" author="espinha" created="Thu, 7 Oct 2010 08:34:31 +0100"  >&lt;p&gt;Myrna, if you have the time could you please try creating a test application that attempts to create a database with 255 characters (&apos;A&apos; as the repeating character) under the IBM JVM? I&apos;m away from my own computer until Monday so I can&apos;t test anything myself until then but it would be interesting to see if with a previous release (say, 10.6.2) and the IBM JVM we are able to create databases with names whose length is right on the maximum limit.&lt;/p&gt;

&lt;p&gt;If this is a quirk of the IBM JVM then maybe skipping the test for it is the way to go in the long run.&lt;/p&gt;</comment>
                            <comment id="12918827" author="knutanders" created="Thu, 7 Oct 2010 09:15:31 +0100"  >&lt;p&gt;This is also seen with Sun&apos;s 1.4.2 on Windows:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.4/testing/Limited/testSummary-1005095.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.4/testing/Limited/testSummary-1005095.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.5 and 1.6 were clean.&lt;/p&gt;</comment>
                            <comment id="12918938" author="espinha" created="Thu, 7 Oct 2010 16:05:01 +0100"  >&lt;p&gt;I don&apos;t have much knowledge of how the JVMs implement IO access but if they resort to the Win32 API, then I might have found the source of the problem.&lt;/p&gt;

&lt;p&gt;This link &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; explains that &quot;the maximum length for a path is MAX_PATH, which is defined as 260 characters&quot;. But it also says that some functions &quot;also have Unicode versions to permit an extended-length path for a maximum total path length of 32,767 characters.&quot;&lt;/p&gt;

&lt;p&gt;Could it be that Sun&apos;s 1.4 and IBM&apos;s JVMs are using these stricter API functions and thus the limit for the whole path is 260 characters? If this were to be true, then considering that the database is inside other folders, we would easily go over this limit as the database name itself uses 255 characters.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; - &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx#maxpath&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx#maxpath&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12919097" author="myrna" created="Fri, 8 Oct 2010 00:26:26 +0100"  >&lt;p&gt;breaking up the text to display the jira more conveniently in my browser.&lt;/p&gt;</comment>
                            <comment id="12919098" author="myrna" created="Fri, 8 Oct 2010 00:30:16 +0100"  >&lt;p&gt;One more piece of information from yesterday&apos;s experiments: with classes (not jars) and set to sane=true, my subset of the tests doesn&apos;t fail, using the same ibm 1.6 jvm. Running the test by itself does fail.&lt;/p&gt;</comment>
                            <comment id="12919132" author="bryanpendleton" created="Fri, 8 Oct 2010 02:44:29 +0100"  >&lt;p&gt;Indeed, from the original description, the folder is &apos; C:\derbyt\tst\system\&apos;, which is more than 5 characters long. Tiago, I think your explanation rings true.&lt;/p&gt;</comment>
                            <comment id="12919187" author="knutanders" created="Fri, 8 Oct 2010 08:46:43 +0100"  >&lt;p&gt;It could be this bug: &lt;a href=&quot;http://bugs.sun.com/view_bug.do?bug_id=4403166&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/view_bug.do?bug_id=4403166&lt;/a&gt;&lt;br/&gt;
Which was fixed in Java SE 6.0 and backported to 5.0 in one of the early update releases.&lt;/p&gt;

&lt;p&gt;For the Sun VMs, I&apos;d be happy with a solution that simply skipped testBoundaries() on 1.4.2. Testing this on newer JVMs should be enough to detect regressions.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if the issue seen on the IBM VMs is the same though. The stack trace Myrna posted seems to indicate it&apos;s a permission problem, but neither the stack trace nor derby.log contains any traces of permission problems in the Sun tests.&lt;/p&gt;</comment>
                            <comment id="12919191" author="knutanders" created="Fri, 8 Oct 2010 08:54:05 +0100"  >&lt;p&gt;Attaching derby.log from one of the runs on Sun&apos;s 1.4.2.&lt;/p&gt;

&lt;p&gt;The underlying exception is the following, which supports Tiago&apos;s hypothesis:&lt;/p&gt;

&lt;p&gt;ERROR XSLAQ: cannot create log file at directory C:\cludev\jagtmp\autoderbyN_derbyall\suitesAll_1\log\system\AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\log.&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.log.LogToFile.getLogDirectory(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.log.LogToFile.getControlFileName(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.store.raw.log.LogToFile.boot(Unknown Source)&lt;/p&gt;</comment>
                            <comment id="12920336" author="espinha" created="Tue, 12 Oct 2010 21:38:11 +0100"  >&lt;p&gt;I would think that despite it throwing a different exception on the IBM JVMs, the underlying issue is probably the same. Shall we make a patch to skip Sun&apos;s 1.4.2 and the IBM JVMs altogether?&lt;/p&gt;</comment>
                            <comment id="12920512" author="knutanders" created="Wed, 13 Oct 2010 13:28:13 +0100"  >&lt;p&gt;Sounds fine to me. Since it only seems to affect windows, perhaps we should also check the os.name system property and only exclude those JVMs on Windows?&lt;/p&gt;</comment>
                            <comment id="12920936" author="espinha" created="Thu, 14 Oct 2010 13:19:50 +0100"  >&lt;p&gt;This patch should make the test skip on IBM JVMs and on Sun&apos;s 1.4.2.&lt;/p&gt;

&lt;p&gt;I currently don&apos;t have a Windows machine to test this on. Does anyone volunteer to run InternationalConnectTest with and without the patch on Windows using Sun 1.4.2?&lt;/p&gt;

&lt;p&gt;It should be fairly straight forward and it should be working, but just to be safe.&lt;/p&gt;

&lt;p&gt;With this patch I&apos;m skipping IBM JVMs altogether, meaning that we&apos;ll skip even newer versions. Do you think this is ok or should I only skip up to 1.6 (the current version)? I think it would be interesting to hardcode the version if IBM was actually working on this but for all we know, further versions will still have this issue.&lt;/p&gt;</comment>
                            <comment id="12921362" author="knutanders" created="Fri, 15 Oct 2010 15:06:28 +0100"  >&lt;p&gt;The version number in this check looks a bit too specific:&lt;/p&gt;

&lt;p&gt;    getSystemProperty(&quot;java.version&quot;).equals(&quot;1.4.2_19&quot;)&lt;/p&gt;

&lt;p&gt;The JVMs that fail in Ole&apos;s nightly tests will have 1.4.2_13 and 1.4.2_16 in that property. What about startsWith(&quot;1.4.2&quot;) instead?&lt;/p&gt;

&lt;p&gt;And instead of getSystemProperty(&quot;java.vendor&quot;).equals(&quot;Sun Microsystems Inc.&quot;), you could use the helper method isSunJVM(). It doesn&apos;t look like there&apos;s a corresponding helper method to check if the vendor is IBM, though.&lt;/p&gt;</comment>
                            <comment id="12922309" author="myrna" created="Mon, 18 Oct 2010 23:03:33 +0100"  >&lt;p&gt;I am definitely not seeing the same problem with the sun 1.4.2. jvm that Knut refers to with the IBM 1.5 and 1.6 jvms. &lt;br/&gt;
I&apos;m working on a repro but other stuff keeps pushing to the front, so it&apos;s taking longer than I had hoped.&lt;/p&gt;

&lt;p&gt;At the same time, on Linux, where this test passed with IBM jvms 1.5 and 1.6, the test left behind some databases with really big names, one of them including only c-cedilles. &lt;br/&gt;
And one of my backup tools is choking on this; so I&apos;d like for now, at least until I&apos;ve looked into that one, to not run this test with ibm jvms at all...&lt;/p&gt;</comment>
                            <comment id="12923696" author="espinha" created="Fri, 22 Oct 2010 00:36:44 +0100"  >&lt;p&gt;Attaching a new patch that should skip IBM JVMs (only for this specific fixture, as opposed to skipping the whole test) and Sun &amp;lt;= 1.4.2_xx.&lt;/p&gt;

&lt;p&gt;I&apos;m still getting some issues with the databases with really long names not being cleaned up and I&apos;m still investigating this. I&apos;ve noticed that the database with just 1 international character gets cleaned up, but not the ones with long names.&lt;/p&gt;</comment>
                            <comment id="12924482" author="knutanders" created="Mon, 25 Oct 2010 08:46:32 +0100"  >&lt;p&gt;The patch looks fine to me. Thanks.&lt;/p&gt;</comment>
                            <comment id="12924683" author="espinha" created="Mon, 25 Oct 2010 20:04:20 +0100"  >&lt;p&gt;Thank you Knut for reviewing. I&apos;ve added a few more simple changes to cleanup all the databases created by the test. Since these are small changes to tests only, I&apos;m gonna go ahead and commit this new patch.&lt;/p&gt;</comment>
                            <comment id="12924721" author="espinha" created="Mon, 25 Oct 2010 22:07:59 +0100"  >&lt;p&gt;Resolved in revision 1027261.&lt;/p&gt;</comment>
                            <comment id="12925185" author="espinha" created="Tue, 26 Oct 2010 23:57:26 +0100"  >&lt;p&gt;Regressions failed on the daily run. Somehow the test is not being skipped on Sun&apos;s 1.4.2 under Windows.&lt;/p&gt;</comment>
                            <comment id="12925293" author="knutanders" created="Wed, 27 Oct 2010 08:35:18 +0100"  >&lt;p&gt;The latest nightly test report was for an earlier revision (1027173) that didn&apos;t include the fix. Hopefully, it&apos;ll look better when the next report is sent out later today.&lt;/p&gt;</comment>
                            <comment id="12925311" author="espinha" created="Wed, 27 Oct 2010 10:59:33 +0100"  >&lt;p&gt;Oh, you&apos;re right Knut! I forgot these tests were actually failing in the first place for Sun&apos;s JVM. When I saw that, I assumed it had been my changes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll wait for the next report then.&lt;/p&gt;</comment>
                            <comment id="12925415" author="myrna" created="Wed, 27 Oct 2010 16:20:50 +0100"  >&lt;p&gt;Firstly, I filed a bug against the ibm 1.5 and 1.6 jvms re the security.AccessControlException.&lt;/p&gt;

&lt;p&gt;Then, it looks like the test is now fine (i.e. getting skipped) with sun&apos;s jdk 1.4.2: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.4/testing/Limited/testSummary-1027607.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.4/testing/Limited/testSummary-1027607.html&lt;/a&gt; shows no failures.&lt;br/&gt;
I also verified the tests are running and the files are getting cleaned up with ibm 1.6 jvm on linux. The test also gets skipped for ibm 1.5 and 1.6 on windows.&lt;/p&gt;

&lt;p&gt;However, I ran the test with my temporary suite with the test enabled for ibm1.6 on windows, it &lt;b&gt;doesn&apos;t&lt;/b&gt; clean up the database correctly on that platform - it chokes on removing AAA*AAA/db.lck.&lt;br/&gt;
Not sure why. I see the same is happening for sun/oracle jvms: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/Limited/testSummary-1027607.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/Limited/testSummary-1027607.html&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12925446" author="knutanders" created="Wed, 27 Oct 2010 17:48:42 +0100"  >&lt;p&gt;Looks like the database isn&apos;t really shut down. Maximum db name length is 255 including connection attributes. testBoundaries() account for &quot;;create=true&quot; (12 characters) but not &quot;;shutdown=true&quot; (14 characters), so the shutdown command fails.&lt;/p&gt;</comment>
                            <comment id="12925448" author="knutanders" created="Wed, 27 Oct 2010 17:53:47 +0100"  >&lt;p&gt;I believe the attached patch will fix the issue. I haven&apos;t tested it on Windows, though. The patch makes the following changes to the test:&lt;/p&gt;

&lt;p&gt;1) Make tearDown() fail if it cannot shut down the database, so that we&apos;re told about problems.&lt;/p&gt;

&lt;p&gt;2) Don&apos;t add database to list of databasesForCleanup in testFailureOnNonExistentDatabase(), since that test case doesn&apos;t create a database.&lt;/p&gt;

&lt;p&gt;3) Make testBoundaries() use a database name that&apos;s two characters shorter, so that it doesn&apos;t exceed the limit when shutdown=true is added to it.&lt;/p&gt;</comment>
                            <comment id="12925451" author="myrna" created="Wed, 27 Oct 2010 17:57:28 +0100"  >&lt;p&gt;I forgot to mention what I found regarding the &apos;No suitable driver&apos; error I got when running the test by itself:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it occurs with both sun and ibm jvms&lt;/li&gt;
	&lt;li&gt;it goes away if I add the following before the first DriverManager.getConnection(url);&lt;br/&gt;
-----------------&lt;br/&gt;
try 
{
                Class.forName(&quot;org.apache.derby.jdbc.ClientDriver&quot;).newInstance();
            }
&lt;p&gt; catch (IllegalAccessException e) &lt;/p&gt;
{
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (InstantiationException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
&lt;p&gt; catch (ClassNotFoundException e) &lt;/p&gt;
{
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
&lt;p&gt;//(my IDE put those TODO&apos;s in, should be cleaned up) &lt;br/&gt;
---------------&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;the difference between how this fixture starts and the fixture testDriverManagerConnect is these two lines:&lt;br/&gt;
-------------------&lt;br/&gt;
        //get a connection to load the driver&lt;br/&gt;
        getConnection();&lt;br/&gt;
-------------------&lt;br/&gt;
I don&apos;t know if the driver was expected to be autoloaded and that&apos;s not working, but as this has been in the test since it got first created, I assume this is acceptable.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, there are two ways to get around that error situation.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a closer look at the assertion failure on windows, for I have the windows system to look at.&lt;/p&gt;</comment>
                            <comment id="12925453" author="knutanders" created="Wed, 27 Oct 2010 18:00:49 +0100"  >&lt;p&gt;I committed the patch with revision 1028035. It&apos;ll hopefully work now, but the fix went in just too late to be part of the next test cycle, so we won&apos;t see the results in the Sun test reports until Friday.&lt;/p&gt;</comment>
                            <comment id="12925456" author="knutanders" created="Wed, 27 Oct 2010 18:04:36 +0100"  >&lt;p&gt;I also see the no suitable driver error when running the test standalone from classes, but the error goes away when I run it from jars (probably because of driver auto-loading).&lt;/p&gt;</comment>
                            <comment id="12925470" author="knutanders" created="Wed, 27 Oct 2010 18:28:56 +0100"  >&lt;p&gt;I think it would be fine to add a call to getConnection() at the top of testBoundaries(). It was probably added to testDriverManagerConnect() because it used to be the first test case running, but it&apos;s not now that testBoundaries() was added at the top. Perhaps it&apos;s better to add it to a setUp() method, so that we won&apos;t get the same problem if a new test case is added?&lt;/p&gt;

&lt;p&gt;I had expected that a connection would have been opened (and then the driver would be loaded) by the CleanDatabaseTestSetup that decorates the test suite, though. But it looks like TestConfiguration.defaultSuite() adds the clean database decorator outside the client/server decorator, and I think that means the setUp/tearDown code of the decorator will use the embedded driver. Hence, it won&apos;t cause the client driver to be loaded.&lt;/p&gt;</comment>
                            <comment id="12925586" author="myrna" created="Wed, 27 Oct 2010 23:23:27 +0100"  >&lt;p&gt;With the latest incarnation of the test, I again commented out the skipping with ibm jvms, and added a getConnection call to the top of testBoundaries. &lt;br/&gt;
With that, I see no problem when I run with classes, either with sun or ibm jvm (only tried 1.6) - not even the ibm jvm issue with the AccessControlException - that I decided was an issue with the long name and the File(String, String) constructor on windows.&lt;/p&gt;

&lt;p&gt;However, running the test by itself with ibm 1.6 and jars (sane), I see some unusual errors:&lt;br/&gt;
There was 1 error:&lt;br/&gt;
1) testBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
...&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;Looking at derby.log, I see the following interesting sequence:&lt;br/&gt;
------------------&lt;br/&gt;
Wed Oct 27 14:23:37 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.sql.SQLException: Database &apos;wombat&apos; not found.&lt;br/&gt;
...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;booting and shuttding down of a couple of instances with classloader...&amp;#93;&lt;/span&gt;&lt;br/&gt;
....&lt;br/&gt;
Wed Oct 27 14:23:46 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.sql.SQLException: Database &apos;abcdefghijklmnopq&#229;&apos; not found.&lt;br/&gt;
...&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest.testFailureOnNonExistentDatabase(InternationalConnectTest.java:255)&lt;br/&gt;
...&lt;br/&gt;
Wed Oct 27 14:23:47 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_10,5,derby.daemons&amp;#93;&lt;/span&gt; Cleanup action starting&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.stop(BaseDataFileFactory.java:471)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.stop(TopService.java:442)&lt;br/&gt;
...&lt;br/&gt;
Wed Oct 27 14:23:47 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_10,5,derby.daemons&amp;#93;&lt;/span&gt; (DATABASE = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;br/&gt;
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA), &lt;br/&gt;
(DRDAID = &lt;/p&gt;
{3}
&lt;p&gt;), Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
....&lt;br/&gt;
Wed Oct 27 14:23:51 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_14,5,derby.daemons&amp;#93;&lt;/span&gt; (DATABASE = ?), (DRDAID = &lt;/p&gt;
{14}
&lt;p&gt;), Database &apos;?&apos; shutdown.&lt;br/&gt;
...&lt;br/&gt;
Wed Oct 27 14:23:51 PDT 2010 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_11,5,derby.daemons&amp;#93;&lt;/span&gt; (DATABASE = ?), (DRDAID = .-4255055934720357393&lt;/p&gt;
{11}
&lt;p&gt;), ASSERT FAILED pbsd is not expected to be null&lt;br/&gt;
Wed Oct 27 14:23:51 PDT 2010 : ASSERT FAILED pbsd is not expected to be null&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED pbsd is not expected to be null&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.writePBSD(DRDAConnThread.java:2726)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.processCommands(DRDAConnThread.java:1044)&lt;br/&gt;
	at org.apache.derby.impl.drda.DRDAConnThread.run(DRDAConnThread.java:294)&lt;br/&gt;
---------------&lt;br/&gt;
Stack traces for all live threads:&lt;br/&gt;
...&lt;br/&gt;
------&lt;br/&gt;
This doesn&apos;t happen with sun/oracle jdk 1.6&lt;br/&gt;
I&apos;ll confirm my environment is not messed up, and then log a new bug for that one, and attach the full derby.log. It seems the attempt to shutdown the non-existant database succeeded only partially, leaving everything in a weird state.&lt;/p&gt;
</comment>
                            <comment id="12927136" author="myrna" created="Mon, 1 Nov 2010 20:21:06 +0000"  >&lt;p&gt;spin off issue for the NPE found during one of the iterations.&lt;/p&gt;</comment>
                            <comment id="12927139" author="myrna" created="Mon, 1 Nov 2010 20:24:59 +0000"  >&lt;p&gt;I think this issue can now be closed - what&apos;s remaining is for me to wait until the jvm issue issue fixed, and then I can reinstate the test for the ibm jvms. We don&apos;t need to keep this open for that.&lt;/p&gt;</comment>
                            <comment id="12927397" author="espinha" created="Tue, 2 Nov 2010 13:18:02 +0000"  >&lt;p&gt;Thank you very much Myrna and Knut for resolving this. I&apos;ve just moved to a different country and I&apos;m still settling in, that&apos;s why I haven&apos;t had much time to be on top of this issue.&lt;/p&gt;

&lt;p&gt;Thanks again!&lt;/p&gt;</comment>
                            <comment id="13167875" author="myrna" created="Mon, 12 Dec 2011 22:25:21 +0000"  >&lt;p&gt;This test now passes with the newly released IBM 1.5 SR13, so it can be revived for that jvm. &lt;br/&gt;
It&apos;s still not working for 1.4.2 jvms. &lt;/p&gt;

&lt;p&gt;Also adding the getConnection() call that we decided was ok to be added.&lt;/p&gt;

&lt;p&gt;I intend to commit this shortly.&lt;/p&gt;</comment>
                            <comment id="13167886" author="myrna" created="Mon, 12 Dec 2011 22:31:13 +0000"  >&lt;p&gt;committed the revive of this test for IBM 1.5 and 1.6 jvms (requires 1.6 SR9 and 1.5 SR13) with revision 1213473 on trunk (10.9 alpha).&lt;br/&gt;
closing again&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12541126">DERBY-5601</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12478631">DERBY-4873</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12457993" name="DERBY-4836.diff" size="5914" author="espinha" created="Mon, 25 Oct 2010 20:04:20 +0100"/>
                            <attachment id="12457803" name="DERBY-4836.diff" size="2511" author="espinha" created="Fri, 22 Oct 2010 00:36:44 +0100"/>
                            <attachment id="12457151" name="DERBY-4836.diff" size="1360" author="espinha" created="Thu, 14 Oct 2010 13:19:50 +0100"/>
                            <attachment id="12507076" name="DERBY-4836_revive.diff" size="1405" author="myrna" created="Mon, 12 Dec 2011 22:25:21 +0000"/>
                            <attachment id="12456550" name="DERBY-4836_tmpskiptest.diff" size="1175" author="myrna" created="Thu, 7 Oct 2010 00:01:25 +0100"/>
                            <attachment id="12456684" name="jvm1.4-derby.log" size="31831" author="knutanders" created="Fri, 8 Oct 2010 08:54:05 +0100"/>
                            <attachment id="12458170" name="shutdown.diff" size="2297" author="knutanders" created="Wed, 27 Oct 2010 17:53:47 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 Oct 2010 07:34:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24488</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0e4f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36106</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>