<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:54:35 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1489/DERBY-1489.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1489] Provide ALTER TABLE DROP COLUMN functionality</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1489</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Provide a way to drop a column from an existing table. Possible syntax would be:&lt;/p&gt;

&lt;p&gt;  ALTER TABLE tablename DROP COLUMN columnname CASCADE / RESTRICT;&lt;/p&gt;

&lt;p&gt;Feature should properly handle columns which are used in constraints, views, triggers, indexes, etc.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12345616">DERBY-1489</key>
            <summary>Provide ALTER TABLE DROP COLUMN functionality</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanpendleton">Bryan Pendleton</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                    </labels>
                <created>Sun, 9 Jul 2006 00:16:27 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:36 +0100</updated>
                            <resolved>Fri, 6 Oct 2006 00:15:56 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Documentation</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12419867" author="bryanpendleton" created="Sun, 9 Jul 2006 00:20:57 +0100"  >&lt;p&gt;Attachment dropColumn_2.diff continues the work done in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-396&quot; title=&quot;Support for ALTER STATEMENT to DROP ,  MODIFY, RENAME a COLUMN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-396&quot;&gt;&lt;del&gt;DERBY-396&lt;/del&gt;&lt;/a&gt;&apos;s dropColumn_1.diff by adding a number of additional tests, and by modifying the db2Compatibility test.&lt;/p&gt;

&lt;p&gt;With this diff, derbyall passes cleanly.&lt;/p&gt;

&lt;p&gt;Feedback about the compiler changes in this diff would be wonderful, as would feedback about additional test cases to add.&lt;/p&gt;</comment>
                            <comment id="12421187" author="bryanpendleton" created="Fri, 14 Jul 2006 19:31:41 +0100"  >&lt;p&gt;This comment captures the results of a discussion on the derby-dev list regarding the interaction of ALTER TABLE DROP COLUMN with the new security privileges functionality:&lt;/p&gt;

&lt;p&gt;1) DROP COLUMN RESTRICT does not need to consider any additional restrictions regarding privileges. The SQL spec does not appear to contain any text that stops the drop in restrict mode if privileges have been granted on the column. If an object (view, trigger, etc.) is dependent on a column level privilege then it should already be dependent on the column itself. There should be no need to go through the list of privileges to see what objects are dependent on them.&lt;/p&gt;

&lt;p&gt;2) DROP COLUMN needs to automatically revoke any privileges granted on the column. We need some code in the dropColumnFromTable() method in AlterTableConstantAction which looks for privileges granted on this column, and if there are any, automatically revoke those privileges.&lt;/p&gt;

&lt;p&gt;3) Lastly, of course, tests of these various conditions need to be added.&lt;/p&gt;</comment>
                            <comment id="12421188" author="djd" created="Fri, 14 Jul 2006 19:38:43 +0100"  >&lt;p&gt;Bryan wrote:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;2) DROP COLUMN needs to automatically revoke any privileges granted on the column. We need some code in the dropColumnFromTable() method in AlterTableConstantAction which looks for privileges granted on this column, and if there are any, automatically revoke those privileges. &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;That should also be driven by the dependency system. A grant privilege on a column should be dependent on the column.&lt;br/&gt;
When the column is dropped it fires off a invalidation event  and the privilege should drop itself .&lt;/p&gt;

</comment>
                            <comment id="12421193" author="bryanpendleton" created="Fri, 14 Jul 2006 19:56:11 +0100"  >&lt;p&gt;On the derby-dev list, Dan explained further: &quot;with the dependency system it&apos;s not so much that code checks for dependent objects, more that code fires off an invalidation event (makeInvalid call) and the dependents either handle it or throw an exception to stop it.&quot;&lt;/p&gt;

&lt;p&gt;If I&apos;m understanding this all correctly, then we don&apos;t really need to add any additional code to incorporate the new privileges feature&apos;s interaction with DROP COLUMN; we just need to add test cases to ensure that the existing dependency system is working properly.&lt;/p&gt;</comment>
                            <comment id="12421197" author="djd" created="Fri, 14 Jul 2006 20:11:30 +0100"  >&lt;p&gt;My guess is that some new code will need to be added in the privilege descriptor code. It probably doesn&apos;t handle an invalidation event corresponding to drop column, since drop column was not supported when that code was added.&lt;/p&gt;

&lt;p&gt;I think you are right that the existing drop column code should not need to change because of this. (famous last words &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12424863" author="rhillegas" created="Tue, 1 Aug 2006 14:42:00 +0100"  >&lt;p&gt;Hi Bryan: Thanks for this great feature. The parser changes look good: thanks for cleaning up the LOOKAHEADs in alterTableAction().&lt;/p&gt;

&lt;p&gt;1) I agree that it would be good to see some tests verifying that privilege descriptors are cleaned up.&lt;/p&gt;

&lt;p&gt;2) I&apos;m curious about why ALTER TABLE DROP COLUMN CASCADE fails if a view mentions the column. From your comment in altertable.sql, it seems that this puzzles you too. It does look wrong to me.&lt;/p&gt;</comment>
                            <comment id="12425063" author="bryanpendleton" created="Wed, 2 Aug 2006 00:47:47 +0100"  >&lt;p&gt;Thanks for the review, Rick! I will work on investigating the issues you raised.&lt;/p&gt;</comment>
                            <comment id="12425976" author="bryanpendleton" created="Sat, 5 Aug 2006 17:57:05 +0100"  >&lt;p&gt;Cleared patch available; I need to revise the patch to incorporate the suggestions from reviewers.&lt;/p&gt;</comment>
                            <comment id="12426787" author="bryanpendleton" created="Wed, 9 Aug 2006 02:19:05 +0100"  >&lt;p&gt;Set Fix Version to unknown; this patch won&apos;t be ready in time for 10.2.0.0&lt;/p&gt;</comment>
                            <comment id="12429465" author="bryanpendleton" created="Mon, 21 Aug 2006 18:16:35 +0100"  >&lt;p&gt;Derby user Tim Dudgeon has been successfully experimenting with this patch,&lt;br/&gt;
see: &lt;a href=&quot;http://www.nabble.com/drop-column-functionality-tf2141055.html#a5910820&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/drop-column-functionality-tf2141055.html#a5910820&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12429936" author="tdudgeon" created="Wed, 23 Aug 2006 09:33:16 +0100"  >&lt;p&gt;I&apos;ve tested the basic drop column funtionality and it seems to be working. It is a bit slow though.&lt;br/&gt;
Here are some apporximate benchmarks for this. I created a tables like these:&lt;/p&gt;

&lt;p&gt;CREATE TABLE a_table cd_id&lt;br/&gt;
                INT NOT NULL GENERATED ALWAYS AS IDENTITY &lt;br/&gt;
                (START WITH 1, INCREMENT BY 1)&lt;br/&gt;
                cd_structure BLOB, cd_smiles VARCHAR(4000)&lt;br/&gt;
                cd_fp1 INT, &lt;br/&gt;
                cd_fp2 INT,&lt;br/&gt;
                cd_fp3 INT,&lt;br/&gt;
                cd_fp4 INT,&lt;br/&gt;
                cd_fp5 INT,&lt;br/&gt;
                cd_fp6 INT,&lt;br/&gt;
                cd_fp7 INT,&lt;br/&gt;
                cd_fp8 INT,&lt;br/&gt;
                cd_fp9 INT,&lt;br/&gt;
                cd_fp10 INT,&lt;br/&gt;
                cd_fp11 INT,&lt;br/&gt;
                cd_fp12 INT,&lt;br/&gt;
                cd_fp13 INT,&lt;br/&gt;
                cd_fp14 INT,&lt;br/&gt;
                cd_fp15 INT,&lt;br/&gt;
                cd_fp16 INT&lt;br/&gt;
)&lt;/p&gt;

&lt;p&gt;This is typical column for me. The BLOB column contains a long (approx 5K) string, all other columns are small.&lt;br/&gt;
Then I loaded approx 60,000 rows into one of these tables, added a column and then dropped it. Then repeated the process in a different tables for 250,000 and 3,000,000 rows.  I also did the first 2 in oracle for a comparison. The oracle db already had lots of data in it so things are probably tipped in Derby&apos;s favour. The times for dropping the column are shown in millis.&lt;/p&gt;

&lt;p&gt;Table size        Derby      Oracle&lt;br/&gt;
60K                   4886        1088&lt;br/&gt;
250K                 32108      13786&lt;br/&gt;
3M                     421521    ND&lt;/p&gt;

&lt;p&gt;Presumably the time is taken to delete all the data (though the column being dropped contains only nulls). But Derby is significantly slower than Oracle.&lt;/p&gt;</comment>
                            <comment id="12430123" author="bryanpendleton" created="Wed, 23 Aug 2006 23:32:09 +0100"  >&lt;p&gt;While trying to test the interaction between DROP COLUMN and GRANT/REVOKE, I encountered bug &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1754&quot; title=&quot;sqlAuthorization mode causes Null Pointer Exception during ALTER TABLE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1754&quot;&gt;&lt;del&gt;DERBY-1754&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12430257" author="bryanpendleton" created="Thu, 24 Aug 2006 15:31:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1754&quot; title=&quot;sqlAuthorization mode causes Null Pointer Exception during ALTER TABLE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1754&quot;&gt;&lt;del&gt;DERBY-1754&lt;/del&gt;&lt;/a&gt; was a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1583&quot; title=&quot;With grant revoke enabled, defining a trigger whose actions updates a table (from different schema) results in NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1583&quot;&gt;&lt;del&gt;DERBY-1583&lt;/del&gt;&lt;/a&gt;. Fixing link.&lt;/p&gt;</comment>
                            <comment id="12430520" author="bryanpendleton" created="Fri, 25 Aug 2006 15:38:52 +0100"  >&lt;p&gt;The issue with views which are dependent on the column being dropped seems to involve&lt;br/&gt;
the handling of the prepareToInvalidate() and makeInvalid() methods in the&lt;br/&gt;
org.apache.derby.iapi.sql.dictionary.ViewDescriptor class.&lt;/p&gt;

&lt;p&gt;As a first experiment, I tried adding case statements for DependencyManager.DROP_COLUMN&lt;br/&gt;
into both methods:&lt;br/&gt;
 in prepareToInvalidate, break&lt;br/&gt;
 in makeInvalid, call dropViewWork&lt;/p&gt;

&lt;p&gt;This partially fixes the problem: now ALTER TABLE DROP COLUMN drops any view which&lt;br/&gt;
is dependent on that column.&lt;/p&gt;

&lt;p&gt;However, with this change, the view is dropped regardless of whether I say CASCADE or RESTRICT.&lt;/p&gt;

&lt;p&gt;I notice that ViewDescriptor has handling for REVOKE_PRIVILEGE and REVOKE_PRIVILEGE_RESTRICT,&lt;br/&gt;
and I wonder: should I create a DependencyManager.DROP_COLUMN_RESTRICT and mimic&lt;br/&gt;
the handling of REVOKE_PRIVILEGE?&lt;/p&gt;</comment>
                            <comment id="12430541" author="bryanpendleton" created="Fri, 25 Aug 2006 18:03:28 +0100"  >&lt;p&gt;The only two places where DependencyManager.DROP_COLUMN appears&lt;br/&gt;
to be used right now are:&lt;br/&gt;
  java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;br/&gt;
  java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java&lt;/p&gt;

&lt;p&gt;Hopefully this means that the impact of creating a new DROP_COLUMN_RESTRICT&lt;br/&gt;
would be confined to these two places (plus ViewDescriptor.java).&lt;/p&gt;</comment>
                            <comment id="12430750" author="bryanpendleton" created="Sat, 26 Aug 2006 16:38:42 +0100"  >&lt;p&gt;Attached is dropColumn_v3_view_drop.diff, a patch proposal which supercedes&lt;br/&gt;
the previous patch proposal. This patch proposal adds some changes to the&lt;br/&gt;
dependency manager&apos;s handling of views so that DROP COLUMN CASCADE&lt;br/&gt;
now is able to drop a dependent view.&lt;/p&gt;

&lt;p&gt;The new patch uses a technique similar to that used by REVOKE PRIVILEGE&lt;br/&gt;
to cause the view to be dropped when CASCADE is specified. The differences&lt;br/&gt;
between this patch and the previous patch are as follows:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added the new field DependencyManager.DROP_COLUMN_RESTRICT&lt;/li&gt;
	&lt;li&gt;ViewDescriptor now includes handling for DROP_COLUMN and&lt;br/&gt;
   DROP_COLUMN_RESTRICT: if RESTRICT is specified, a dependent view&lt;br/&gt;
   causes the DROP COLUMN to fail; if RESTRICT is &lt;b&gt;not&lt;/b&gt; specified, a&lt;br/&gt;
   dependent view is automatically dropped when the column is dropped.&lt;/li&gt;
	&lt;li&gt;SPSDescriptor, which was the only other user of DependencyManager.DROP_COLUMN,&lt;br/&gt;
   treats DROP_COLUMN and DROP_COLUMN_RESTRICT identically.&lt;/li&gt;
	&lt;li&gt;When AlterTableConstantAction calls the DependencyManager, it passes&lt;br/&gt;
   either DROP_COLUMN or DROP_COLUMN_RESTRICT, depending on&lt;br/&gt;
   what the user specified.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Tests and test output is also updated to match the new correct results.&lt;/p&gt;

&lt;p&gt;This patch is not ready for commit yet, because I need to address the interactions&lt;br/&gt;
with GRANT/REVOKE, but that will require investigating &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1583&quot; title=&quot;With grant revoke enabled, defining a trigger whose actions updates a table (from different schema) results in NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1583&quot;&gt;&lt;del&gt;DERBY-1583&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the meantime, feedback on this patch would be very welcome!&lt;/p&gt;</comment>
                            <comment id="12432564" author="bryanpendleton" created="Tue, 5 Sep 2006 04:27:08 +0100"  >&lt;p&gt;Attached is drop_column_v4_grant_tests.diff. This patch proposal is&lt;br/&gt;
updated to the latest trunk, to resolve some conflicts following the commit&lt;br/&gt;
of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-119&quot; title=&quot;Add ALTER TABLE option to change column from NULL to NOT NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-119&quot;&gt;&lt;del&gt;DERBY-119&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1583&quot; title=&quot;With grant revoke enabled, defining a trigger whose actions updates a table (from different schema) results in NPE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1583&quot;&gt;&lt;del&gt;DERBY-1583&lt;/del&gt;&lt;/a&gt;. The patch also contains some new tests&lt;br/&gt;
which start to investigate the interaction of DROP COLUMN and column permissions.&lt;/p&gt;

&lt;p&gt;Unfortunately, the tests fail; the current behavior is that DROP COLUMN is not&lt;br/&gt;
properly aware of granted column permissions. This, I think, confirms the&lt;br/&gt;
suspicions that were raised earlier&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-1489#action_12421197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-1489#action_12421197&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next step will be to investigate the dependency manager handling of&lt;br/&gt;
column permissions with respect to dropping a column.&lt;/p&gt;</comment>
                            <comment id="12432997" author="bryanpendleton" created="Thu, 7 Sep 2006 00:28:05 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1729&quot; title=&quot;Invoking Java stored procedure that contains GRANT or REVOKE statement with CONTAINS SQL should fail.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1729&quot;&gt;&lt;del&gt;DERBY-1729&lt;/del&gt;&lt;/a&gt; has some good examples of how to write tests which add &lt;br/&gt;
and remove permissions and check that the permissions come and go as expected.&lt;/p&gt;</comment>
                            <comment id="12433730" author="bryanpendleton" created="Sun, 10 Sep 2006 20:58:45 +0100"  >&lt;p&gt;I investigated the dependency manager to see how it handles column&lt;br/&gt;
permissions. It doesn&apos;t appear to track dependencies between column&lt;br/&gt;
permissions and the underlying columns. I sent a message to the derby-dev&lt;br/&gt;
list to inquire about this part of the GRANT implementation.&lt;/p&gt;

&lt;p&gt;I&apos;ve been studying how DROP COLUMN handles triggers which mention this&lt;br/&gt;
column, to see if that holds some clues for how to handle GRANTs which&lt;br/&gt;
mention this column. DROP COLUMN locates such triggers by asking the&lt;br/&gt;
DataDictionary for a list of all triggers on this table, then iterates through the&lt;br/&gt;
list, asking each trigger which columns it references, and then either cascades&lt;br/&gt;
the DROP to the affected trigger or fails the DROP, depending on whether the&lt;br/&gt;
user said CASCADE or RESTRICT.&lt;/p&gt;

&lt;p&gt;Unfortunately, there don&apos;t appear to be analogous methods for column&lt;br/&gt;
permissions in the data dictionary to allow retrieval of all the column permissions&lt;br/&gt;
on this table, for example. &lt;/p&gt;

&lt;p&gt;So, for now, I don&apos;t have a way to handle GRANTed column permissions when&lt;br/&gt;
dropping a column from a table, and this appears to be a blocker problem&lt;br/&gt;
for this feature.&lt;/p&gt;</comment>
                            <comment id="12433736" author="bryanpendleton" created="Sun, 10 Sep 2006 21:11:16 +0100"  >&lt;p&gt;drop_column_v5_grant_tests.diff is an updated patch proposal&lt;br/&gt;
which resolves the conflicts from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1491&quot; title=&quot;Provide ALTER TABLE functionality to change a column&amp;#39;s default value&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1491&quot;&gt;&lt;del&gt;DERBY-1491&lt;/del&gt;&lt;/a&gt;, but is otherwise&lt;br/&gt;
unchanged from the v4 version of the patch proposal. It can be&lt;br/&gt;
applied cleanly to the head of trunk and demonstrates the&lt;br/&gt;
unsatisfactory interactions with GRANTed column permissions.&lt;/p&gt;</comment>
                            <comment id="12436655" author="bryanpendleton" created="Thu, 21 Sep 2006 22:37:59 +0100"  >&lt;p&gt;I copied this comment from a different email discussion, involving some&lt;br/&gt;
possible interactions between &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-655&quot; title=&quot;getImportedKeys returns duplicate rows in some cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-655&quot;&gt;&lt;del&gt;DERBY-655&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1854&quot; title=&quot;SYSCS_COMPRESS_TABLE corrupts table with a single column which is both a primary key and a foreign key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1854&quot;&gt;&lt;del&gt;DERBY-1854&lt;/del&gt;&lt;/a&gt;, and this bug:&lt;/p&gt;

&lt;p&gt;&amp;gt; There are a number of code paths in the server that use the&lt;br/&gt;
&amp;gt; &quot;bait/switch&quot; method.  Off the top of my head: some alter table&lt;br/&gt;
&amp;gt; modify column paths, maybe drop column, bulk load to an empty table.&lt;br/&gt;
&amp;gt; Were these also broken for this problem?  Is the code to do the&lt;br/&gt;
&amp;gt; syscat update shared, and thus this fixes all of them?  Probably&lt;br/&gt;
&amp;gt; worth adding some test cases.&lt;/p&gt;

&lt;p&gt;So, the current overall status of this issu is:&lt;br/&gt;
1) Need to write logic to drop GRANTed column permissions when dropping a column&lt;br/&gt;
2) Need to add test cases to see if the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-655&quot; title=&quot;getImportedKeys returns duplicate rows in some cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-655&quot;&gt;&lt;del&gt;DERBY-655&lt;/del&gt;&lt;/a&gt; regression affects DROP COLUMN&lt;/p&gt;</comment>
                            <comment id="12436682" author="bryanpendleton" created="Thu, 21 Sep 2006 23:44:07 +0100"  >&lt;p&gt;Linked this issue to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1854&quot; title=&quot;SYSCS_COMPRESS_TABLE corrupts table with a single column which is both a primary key and a foreign key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1854&quot;&gt;&lt;del&gt;DERBY-1854&lt;/del&gt;&lt;/a&gt; because I&apos;d like to add a similar test case to this issue to verify that the conglomerate ID matching is working correctly.&lt;/p&gt;</comment>
                            <comment id="12437036" author="bryanpendleton" created="Sat, 23 Sep 2006 01:13:20 +0100"  >&lt;p&gt;Hmmm... The column permissions may be a bit tougher than I thought.&lt;br/&gt;
Here&apos;s an interesting case:&lt;/p&gt;

&lt;p&gt;create table t (a int, b int, c int, d int);&lt;br/&gt;
grant select(a,c,d) on t to bryan;&lt;br/&gt;
alter table t drop column c;&lt;/p&gt;

&lt;p&gt;In this case, we want the existing permissions for columns &quot;a&quot; and &quot;d&quot;&lt;br/&gt;
to be preserved after the drop of column &quot;c&quot;&lt;/p&gt;

&lt;p&gt;In fact, it seems like we may have to do some relatively tricky processing&lt;br/&gt;
of the SYSCOLPERMS table during DROP COLUMN because the&lt;br/&gt;
column permissions are recorded by column position number, and the&lt;br/&gt;
column permission numbers can change during DROP COLUMN.&lt;/p&gt;

&lt;p&gt;Previously, I had thought that we just had to scan through SYSCOLPERMS&lt;br/&gt;
and delete the corresponding rows, but now I see that we need to check&lt;br/&gt;
the rows and re-write them to reflect the changed column position numbers&lt;br/&gt;
as well as the dropped column.&lt;/p&gt;</comment>
                            <comment id="12437038" author="yipng" created="Sat, 23 Sep 2006 01:39:44 +0100"  >&lt;p&gt;It appears that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt; has similar problem to what you described.  Specifically, the &quot;COLUMN&quot; field of the SYS.SYSCOLPERMS needs to be updated at ALTER TABLE ADD/DROP COLUMN time when the system is in SQL authorization mode.&lt;/p&gt;</comment>
                            <comment id="12437046" author="bryanpendleton" created="Sat, 23 Sep 2006 04:54:34 +0100"  >&lt;p&gt;Thanks Yip! I agree, there is considerable similarity between these issues. I will follow the progress of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12437106" author="bryanpendleton" created="Sat, 23 Sep 2006 15:55:09 +0100"  >&lt;p&gt;It seems like DataDictionaryImpl.clearCaches() ought to clear the PermissionsCache, the&lt;br/&gt;
same way it clears the other DD caches. By itself, this doesn&apos;t fix anything, but it does seem&lt;br/&gt;
like it will have to be a building block for a solution.&lt;/p&gt;</comment>
                            <comment id="12437110" author="bryanpendleton" created="Sat, 23 Sep 2006 16:25:24 +0100"  >&lt;p&gt;I think it will be easier to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt; first, as fixing that problem&lt;br/&gt;
will involving building the necessary infrastructure to enable repairing&lt;br/&gt;
the SYSCOLPERMS entries during DROP COLUMN. The DROP COLUMN&lt;br/&gt;
changes to SYSCOLPERMS will be a tad more involved than the ADD COLUMN&lt;br/&gt;
changes to SYSCOLPERMS, but we can get most of the heavy lifting out&lt;br/&gt;
of the way by fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1847&quot; title=&quot;SELECT statement asserts with XJ001 when attempted to select a newly added column in SQL authorization mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1847&quot;&gt;&lt;del&gt;DERBY-1847&lt;/del&gt;&lt;/a&gt; first.&lt;/p&gt;</comment>
                            <comment id="12437116" author="djd" created="Sat, 23 Sep 2006 16:58:00 +0100"  >&lt;p&gt;Is it possible to commit the alter table drop column patch (in trunk) and work on the permissions issues as a follow on?&lt;br/&gt;
Since it would be the trunk it could either be left as broken in SQL authorization mode, or a quick check could be made and throw an unimplemented exception in sql auth mode. Then at least the base code wouldbe available for others to test easily.&lt;/p&gt;</comment>
                            <comment id="12437215" author="bryanpendleton" created="Sun, 24 Sep 2006 16:08:03 +0100"  >&lt;p&gt;Thanks for the suggestion, Dan. I think that is a pretty interesting idea. I will have a look&lt;br/&gt;
at the details of throwing an unimplemented exception in SQL Auth mode.&lt;/p&gt;

&lt;p&gt;I agree that it is desirable to get the current code into the trunk so that the community&lt;br/&gt;
can start gaining experience with it.&lt;/p&gt;</comment>
                            <comment id="12437684" author="bryanpendleton" created="Mon, 25 Sep 2006 23:38:05 +0100"  >&lt;p&gt;Dan suggested perhaps throwing a NOT_IMPLEMENTED exception if the user&lt;br/&gt;
tries to issue ALTER TABLE DROP COLUMN in sqlAuthorization mode.&lt;/p&gt;

&lt;p&gt;This seems pretty straightforward to do.&lt;/p&gt;

&lt;p&gt;One issue, though, is with testing. Currently, the entire altertable.sql test runs&lt;br/&gt;
in sqlAuthorization mode. Therefore, it&apos;s hard to see how to provide some&lt;br/&gt;
tests of DROP COLUMN which run when sqlAuthorization mode is off, and&lt;br/&gt;
some other tests of DROP COLUMN which run when sqlAuthorization mode&lt;br/&gt;
is on.&lt;/p&gt;

&lt;p&gt;Any suggestions as to how to provide reasonable tests in this situation? Should we:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;put just a single DROP COLUMN test in altertable.sql, verifying that DROP COLUMN&lt;br/&gt;
   is rejected in sqlAuthorization mode&lt;/li&gt;
	&lt;li&gt;and then add a new test case, lang/altertableDropColumn.sql, to hold the&lt;br/&gt;
   tests that verify the proper operation of DROP COLUMN when sqlAuthorization&lt;br/&gt;
   is off?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12437852" author="bryanpendleton" created="Tue, 26 Sep 2006 15:19:16 +0100"  >&lt;p&gt;Attached is drop_column_v6_grant_not_implemented.diff, a patch proposal&lt;br/&gt;
which I believe is ready for review and possibly for commit (depending on&lt;br/&gt;
what turns up during review).&lt;/p&gt;

&lt;p&gt;This patch causes ALTER TABLE DROP COLUMN to throw a NOT&lt;br/&gt;
IMPLEMENTED error if sqlAuthorization is true. Because of this, all of&lt;br/&gt;
the DROP COLUMN tests are shifted to a new test script, rather than being&lt;br/&gt;
placed in altertable.sql, which runs with sqlAuthorization. If we adopt this&lt;br/&gt;
patch proposal, I&apos;ll file a new JIRA to track the issue of getting DROP COLUMN&lt;br/&gt;
to work under sqlAuthorization, and I&apos;ll update the test scripts to indicate that&lt;br/&gt;
the separate test script is temporary, and should be consolidated once that&lt;br/&gt;
problem is fixed.&lt;/p&gt;

&lt;p&gt;Except for this change in the testing mechanics and the new NOT IMPLEMENTED&lt;br/&gt;
check in the grammar, this patch proposal is the same as the previous few&lt;br/&gt;
attached patches. derbyall passes with this patch proposal.&lt;/p&gt;

&lt;p&gt;Please have a look and tell me what you think.&lt;/p&gt;</comment>
                            <comment id="12438545" author="mamtas" created="Thu, 28 Sep 2006 21:20:50 +0100"  >&lt;p&gt;Bryan, thanks for the patch. I have some comments on it.&lt;/p&gt;

&lt;p&gt;***************************************************************************************************************************************************************&lt;br/&gt;
Comments for the engine changes&lt;br/&gt;
***************************************************************************************************************************************************************&lt;br/&gt;
1)In ViewDescriptor.prepareToInvalide, there are some existing comments saying that REVOKE_PRIVILEGE_RESTRICT is going to throw an exception. Should we add some comments for DROP_COLUMN_RESTRICT too? I can see why you didn&apos;t add anything because by default, any invalidation that is not caught will endup in exception and hence probably no need to add comments for them.&lt;br/&gt;
********&lt;br/&gt;
2)In AlterTableConstantAction, why is following if condition not required anymore?&lt;br/&gt;
    if (numRefCols &amp;gt; 1 || cd.getConstraintType() == DataDictionary.PRIMARYKEY_CONSTRAINT)&lt;br/&gt;
********&lt;br/&gt;
3)Is keyword COLUMN optional in the following syntax?&lt;br/&gt;
ALTER TABLE tablename DROP COLUMN columnname &lt;span class=&quot;error&quot;&gt;&amp;#91;CASCADE | RESTRICT&amp;#93;&lt;/span&gt; &lt;br/&gt;
The reason I ask is there is a test in altertableDropColumn as follows&lt;br/&gt;
+ij&amp;gt; alter table atdc_2 drop b;&lt;br/&gt;
+ERROR 42X14: &apos;B&apos; is not a column in table or VTI &apos;ATDC_2&apos;.&lt;br/&gt;
I thought the error message will be something different for missing keyword COLUMN/CONSTRAINT.&lt;br/&gt;
********&lt;br/&gt;
4)I am wondering if we should change the error text for the drop column in sql authorization mode ie rather than saying (sqlAuthorization=true), say that we are in SQL Authorization mode or something along that line. But since this is temporary, probably not worth it.&lt;br/&gt;
+ERROR 0A000: Feature not implemented: ALTER TABLE DROP COLUMN (sqlAuthorization=true).&lt;br/&gt;
***************************************************************************************************************************************************************&lt;/p&gt;


&lt;p&gt;***************************************************************************************************************************************************************&lt;br/&gt;
Comments for the test cases&lt;br/&gt;
***************************************************************************************************************************************************************&lt;br/&gt;
1)If there is a check constraint defined on a column and drop column CASCADE is executed, should it drop the check constraint? In the new test file, I see an example for drop column restrict failing when there is a check constraint defined on it but I am not clear on what would happen for drop column cascade in this case.&lt;br/&gt;
********&lt;br/&gt;
2)Also, I didn&apos;t quite understand the behavior when a column is dropped that participates in a multi-column index? It seems from the test that the column gets dropped but index is still around.&lt;br/&gt;
Also, from the test, it looks like if the colum being dropped is the only column in the index, then the column and index both get dropped.&lt;br/&gt;
********&lt;br/&gt;
3)Is there some work required for following comment in the new test?&lt;br/&gt;
+-- FIXME: cascade/restrict processing doesn&apos;t currently consider indexes?&lt;br/&gt;
It seems like your concern is correct because if there is a primary key/check constraint, the drop column fails. So, seems like it should fail for index too. I haven&apos;t checked what the SQL spec says.&lt;br/&gt;
If we find that the behavior of drop column is different for different kinds of constraints, then some documentation on that will be very useful.&lt;br/&gt;
********&lt;br/&gt;
4)With one level dependency, ie a view defined on a column. The column drop drops the view but there is no warning raised. In case of triggers, we generate a warning (copied following from the new test master). Should there be warning for drop of views/other constraints that get dropped automatically because of drop column cascade?&lt;br/&gt;
+ij&amp;gt; alter table atdc_6 drop column b cascade;&lt;br/&gt;
+0 rows inserted/updated/deleted&lt;br/&gt;
+WARNING 01502: The trigger ATDC_6_TRIGGER_1 on table ATDC_6 has been dropped.&lt;br/&gt;
********&lt;br/&gt;
5)Consider a case where a column is referenced by a view and that view is referenced by another view. What would happen if someone tries to&lt;br/&gt;
drop that column with cascade behavior. Will it succeed, will both views get dropped too or will the drop fail?&lt;br/&gt;
column-&amp;gt;view1-&amp;gt;view2&lt;br/&gt;
drop column cascade will drop both views?&lt;br/&gt;
***************************************************************************************************************************************************************&lt;/p&gt;



&lt;p&gt;General comment&lt;br/&gt;
1)Bryan, I think you already have this in your radar screen but I will bring it up, just in case. I think you are planning to add a new jira entry for DROP COLUMN and sql authorization if we decide to go ahead with the functionality proposed by this patch. Once that is done and before this patch gets committed, we should put the correct jira number in comments in altertableDropColumn.sql and in altertable.sql. Since we donot have a jira entry at this point, I see that we refer to it as DERBY-XXXX in the test comments. Also, in the new jira entry for DROP COLUMN in sql authorization mode, we should mention that altertableDropColumn.sql and in altertable.sql should be consolidated into altertable.sql.&lt;/p&gt;</comment>
                            <comment id="12438612" author="bryanpendleton" created="Fri, 29 Sep 2006 03:15:27 +0100"  >&lt;p&gt;Thanks Mamta! This is very useful and helpful.&lt;/p&gt;</comment>
                            <comment id="12438929" author="bryanpendleton" created="Sat, 30 Sep 2006 21:42:27 +0100"  >&lt;p&gt;The community seems comfortable with the idea of tracking the problems with DROP COLUMN and GRANTed column privileges as a separate JIRA entry, so I am going to go ahead and file that issue now.&lt;/p&gt;</comment>
                            <comment id="12438937" author="bryanpendleton" created="Sat, 30 Sep 2006 22:20:16 +0100"  >&lt;p&gt;Mamta, thanks again for the great review and the suggestions! They have been very interesting to pursue.&lt;/p&gt;

&lt;p&gt;I am intending to attach a revised patch later this weekend incorporating your suggestions, but I wanted&lt;br/&gt;
to respond to a couple of your notes separately, as follows:&lt;/p&gt;

&lt;p&gt;1) Regarding the handling of indexes when dropping a column, there was a discussion in early July&lt;br/&gt;
on the derby-dev list in which we concluded that CASCADE/RESTRICT should not consider indexes,&lt;br/&gt;
but instead should always simply remove the column from any affected indexes, and drop the entire&lt;br/&gt;
index if this column was the last column. Here&apos;s a pointer to the email discussion:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/forum/ViewPost.jtp?post=5254954&amp;amp;framed=y&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/forum/ViewPost.jtp?post=5254954&amp;amp;framed=y&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) I&apos;m glad you asked some questions about constraint handling because that caused me to write&lt;br/&gt;
some more tests with PRIMARY and FOREIGN keys, and I found a problem in the case where the&lt;br/&gt;
primary key, and the foreign key which references it, are both in the same table. The execution code&lt;br/&gt;
was correctly cascading the delete, but during the table rebuild we were using a stale table&lt;br/&gt;
descriptor and getting a &quot;conglomerate not found&quot; error. I changed the execution logic so that, after&lt;br/&gt;
it has dropped all the affected PRIMARY and FOREIGN key constraints (and indexes) and before&lt;br/&gt;
it rebuilds the base table, it re-reads the table descriptor from the system tables to ensure that it&lt;br/&gt;
has the right table descriptor information. So I added a bunch more tests in this latest patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3) You asked a very interesting question: why is following if condition not required anymore?&lt;br/&gt;
    if (numRefCols &amp;gt; 1 || cd.getConstraintType() == DataDictionary.PRIMARYKEY_CONSTRAINT) &lt;/p&gt;

&lt;p&gt;I removed this &quot;if&quot; test when I was changing DROP COLUMN to properly handle UNIQUE constraints.&lt;/p&gt;

&lt;p&gt;This line of code is in the code path which is performing RESTRICT analysis, to see if the constraint&lt;br/&gt;
that has been found should cause the DROP COLUMN to fail.&lt;/p&gt;

&lt;p&gt;The effect of the &quot;if&quot; test was to say that the only constraints that caused DROP COLUMN RESTRICT&lt;br/&gt;
to fail were those that were either:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;PRIMARY KEY constraints that referred to this column, or&lt;/li&gt;
	&lt;li&gt;other types of constraints that referred to this column, as well as some other column in this table&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When I added processing for UNIQUE constraints, I thought about modifying this &quot;if&quot; test to say&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; cd.getConstraintType() == DataDictionary.UNIQUE_CONSTRAINT&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;so that UNIQUE constraints that referred to &lt;b&gt;only&lt;/b&gt; this column in this table would fail in RESTRICT mode,&lt;br/&gt;
but the more I looked at this &quot;if&quot; test, the more I thought that the test was just unnecessary. We don&apos;t&lt;br/&gt;
actually care whether the constraint affects 1 column or multiple columns, and we don&apos;t care whether&lt;br/&gt;
it is a PRIMARYKEY_CONSTRAINT or some other sort of constraint. All we care about is that there&lt;br/&gt;
is a constraint on this table which references this column, and the user has said RESTRICT.&lt;/p&gt;

&lt;p&gt;By removing the &quot;if&quot; test, the code interprets RESTRICT to apply to any such constraint, which I think&lt;br/&gt;
is the right behavior.&lt;/p&gt;

&lt;p&gt;===================&lt;/p&gt;

&lt;p&gt;I believe I&apos;ve incorporated all your other suggestions into the revised patch. When my testing completes,&lt;br/&gt;
I&apos;ll attach that patch, and look forward to additional feedback.&lt;/p&gt;
</comment>
                            <comment id="12438990" author="bryanpendleton" created="Sun, 1 Oct 2006 16:49:00 +0100"  >&lt;p&gt;Attached is &quot;drop_column_v7_suggestions_from_mamta.diff&quot;, which updates the&lt;br/&gt;
previous patch proposal to respond to feedback from reviewers (thanks Mamta!)&lt;/p&gt;

&lt;p&gt;This patch contains more tests and more comments. It also contains two functional&lt;br/&gt;
changes relative to the previous diff:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a warning message is now issued if a view is dropped indirectly as a result of&lt;br/&gt;
   revoking a privilege or dropping a column that the view is dependent on. This&lt;br/&gt;
   required updating the master file for grantRevokeDDL.out&lt;/li&gt;
	&lt;li&gt;the DROP COLUMN execution code now re-reads the table descriptor from the&lt;br/&gt;
   system catalogs after dropping all the dependent schema objects and before&lt;br/&gt;
   compressing the table, to ensure that the compressTable logic uses the most&lt;br/&gt;
   up-to-date table definition.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Additional comments and feedback would be very appreciated!&lt;/p&gt;

&lt;p&gt;I think this patch may be ready to commit, so I&apos;d really like to encourage anybody&lt;br/&gt;
who has a chance, to give it a look.&lt;/p&gt;</comment>
                            <comment id="12438991" author="bryanpendleton" created="Sun, 1 Oct 2006 16:53:23 +0100"  >&lt;p&gt;OOPS! Patch 7 lost the tests. I messed up my &quot;svn add&quot; in my workspace. Hang on a bit...&lt;/p&gt;</comment>
                            <comment id="12438993" author="bryanpendleton" created="Sun, 1 Oct 2006 17:18:44 +0100"  >&lt;p&gt;I recovered the tests from a backup machine, and attached is&lt;br/&gt;
&apos;drop_column_v8_restored_tests.diff&apos;, which is the complete patch.&lt;/p&gt;

&lt;p&gt;Please have a look. Thanks!&lt;/p&gt;</comment>
                            <comment id="12439654" author="bryanpendleton" created="Tue, 3 Oct 2006 21:56:26 +0100"  >&lt;p&gt;I propose to commit drop_column_v8_restored_tests.diff. If there are any&lt;br/&gt;
reviewers currently examining this patch, please let me know. Unless any&lt;br/&gt;
additional review comments are raised in the next 48 hours, I will commit the patch.&lt;/p&gt;</comment>
                            <comment id="12439661" author="mamtas" created="Tue, 3 Oct 2006 22:13:39 +0100"  >&lt;p&gt;Bryan, I am reviewing the patch right now. Once I finish looking through the test changes, I will post some trivial comments from documentation point of view.&lt;/p&gt;</comment>
                            <comment id="12439662" author="mamtas" created="Tue, 3 Oct 2006 22:22:17 +0100"  >&lt;p&gt;I just finished reviewing the patch. It looks great, especially the comments in the code and in the tests. Will be very beneficial to next person in the line. &lt;/p&gt;

&lt;p&gt;My only feedback is do we have a jira entry for doc changes that need to go for this feature? It will be very helpful to outline how for instance unnamed NOT NULL constraint will not block DROP COLUMN RESTRICT, but an explicitly named CHECK constraint will blcok DROP COLUMN RESTRICT. Similarly, the behavior of indexes and DROP COLUMN RESTRICT should be documented. In short, what would block a RESTRICT and what would be allowed to pass through should be clearly documented so users are aware of the expected behavior.&lt;/p&gt;

&lt;p&gt;Other than that, thumbs up for this patch. Great Job.&lt;/p&gt;</comment>
                            <comment id="12439667" author="bryanpendleton" created="Tue, 3 Oct 2006 22:39:09 +0100"  >&lt;p&gt;Hi Mamta, thanks very much for the feedback. I didn&apos;t mean to rush you, just trying to find out who was reviewing.&lt;/p&gt;

&lt;p&gt;I definitely agree that we need good documentation for this feature, and I will file a new JIRA issue accordingly.&lt;/p&gt;

&lt;p&gt;I&apos;m concerned that the current ALTER TABLE doc is already a bit unwieldy, and so I&apos;m interested to get some suggestions about how we can rework that doc to make it more comprehensible and usable.&lt;/p&gt;

&lt;p&gt;I think we can deal with all those topics as part of the documentation JIRA.&lt;/p&gt;</comment>
                            <comment id="12439714" author="bryanpendleton" created="Wed, 4 Oct 2006 04:05:52 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1926&quot; title=&quot;Provide documentation for ALTER TABLE DROP COLUMN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1926&quot;&gt;&lt;del&gt;DERBY-1926&lt;/del&gt;&lt;/a&gt; tracks the documentation for ALTER TABLE DROP COLUMN.&lt;/p&gt;</comment>
                            <comment id="12440285" author="bryanpendleton" created="Fri, 6 Oct 2006 00:15:56 +0100"  >&lt;p&gt;Thanks very much to all the reviewers, and particularly to Mamta who checked several versions of this patch.&lt;/p&gt;

&lt;p&gt;I&apos;ve committed the &lt;em&gt;v8&lt;/em&gt; version of the patch to subversion as revision 453420.&lt;/p&gt;

&lt;p&gt;I&apos;m marking this issue resolved; for now, we have an undocumented new feature which does not work with sqlAuthorization mode. I hope to find time soon to work on the two followon issues: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1909&quot; title=&quot;ALTER TABLE DROP COLUMN needs to update GRANTed column privileges&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1909&quot;&gt;&lt;del&gt;DERBY-1909&lt;/del&gt;&lt;/a&gt; to fix the sqlAuthorization problem, and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1926&quot; title=&quot;Provide documentation for ALTER TABLE DROP COLUMN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1926&quot;&gt;&lt;del&gt;DERBY-1926&lt;/del&gt;&lt;/a&gt; to provide documentation.&lt;/p&gt;</comment>
                            <comment id="12551366" author="fuzzylogic" created="Thu, 13 Dec 2007 09:05:01 +0000"  >&lt;p&gt;This issue has been resolved for over a year with no further movement. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12346595">DERBY-1583</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348513">DERBY-1754</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12349878">DERBY-1847</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12352140">DERBY-1909</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12408012">DERBY-3940</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12311732">DERBY-396</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12325964">DERBY-726</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="30653">DERBY-165</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12349986">DERBY-1854</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12349878">DERBY-1847</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12352347">DERBY-1926</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12336531" name="dropColumn_2.diff" size="27347" author="bryanpendleton" created="Sun, 9 Jul 2006 00:20:57 +0100"/>
                            <attachment id="12339641" name="dropColumn_v3_view_drop.diff" size="30884" author="bryanpendleton" created="Sat, 26 Aug 2006 16:38:42 +0100"/>
                            <attachment id="12340164" name="dropColumn_v4_grant_tests.diff" size="31429" author="bryanpendleton" created="Tue, 5 Sep 2006 04:27:08 +0100"/>
                            <attachment id="12340533" name="drop_column_v5_grant_tests.diff" size="31169" author="bryanpendleton" created="Sun, 10 Sep 2006 21:11:16 +0100"/>
                            <attachment id="12341717" name="drop_column_v6_grant_not_implemented.diff" size="37334" author="bryanpendleton" created="Tue, 26 Sep 2006 15:19:16 +0100"/>
                            <attachment id="12342049" name="drop_column_v7_suggestions_from_mamta.diff" size="23386" author="bryanpendleton" created="Sun, 1 Oct 2006 16:49:00 +0100"/>
                            <attachment id="12342050" name="drop_column_v8_restored_tests.diff" size="61307" author="bryanpendleton" created="Sun, 1 Oct 2006 17:18:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Jul 2006 18:38:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30013</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0sxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>