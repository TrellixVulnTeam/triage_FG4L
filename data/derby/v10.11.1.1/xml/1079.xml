<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:39:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1079/DERBY-1079.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1079] Build javadoc  under jdk 1.6</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1079</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We would like to build the javadoc under 1.6 so that all of the classes (including the JDBC 3 and JDBC 4 support) end up in the same directory tree. This is particularly important for the published API which we expose to end-users.&lt;/p&gt;

&lt;p&gt;Right now you can do the following:&lt;/p&gt;

&lt;p&gt;1) Build the whole codeline using the 1.4 compiler for most classes and the 1.6 compiler for the JDBC4 support.&lt;/p&gt;

&lt;p&gt;2) Build javadoc in a 1.4 environment (with JAVA_HOME set to 1.4). This runs step (1) if it has not already happened. This javadoc excludes the JDBC4 support because generics-laden JDBC4 signatures choke the 1.4 compiler.&lt;/p&gt;

&lt;p&gt;3) Build the javadoc in a 1.6 environment (with JAVA_HOME set to 1.6). This will fail if you have not run step (1); this is because you can&apos;t build Derby in a 1.6 environment yet. This also generates a number of warnings because the 1.6 javadoc tool objects to code generated by the JAVACC grammar tool; JAVACC turns out code with loop variables distastefully named &quot;enum&quot;. In addition, today, the 1.6 javadoc excludes the JDBC4 support.&lt;/p&gt;

&lt;p&gt;We would like to end up with the following situation:&lt;/p&gt;

&lt;p&gt;a) If your ant.properties points at a 1.6 installation, then the javadoc targets will use the 1.6 javadoc tool and will include Derby&apos;s JDBC4 support. This will work regardless of whether you have already built the class tree. If you have not already built the class tree, then we will compile it under scenario (1) above.&lt;/p&gt;

&lt;p&gt;b) If, however, your ant.properties does not point at a 1.6 installation, then the javadocs target will continue to use the 1.4 javadoc tool to build only the classes built today. The JDBC4 support will be excluded from this javadoc.&lt;/p&gt;

&lt;p&gt;c) As part of releasing 10.2, we will build the javadoc under scenario (a).&lt;/p&gt;

&lt;p&gt;d) Once 1.6 exits beta and becomes a production vm, the community can debate when we want to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1078&quot; title=&quot;Be able to build Derby when JAVA_HOME is set 1.6&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1078&quot;&gt;&lt;del&gt;DERBY-1078&lt;/del&gt;&lt;/a&gt; and require 1.6 in the build environment.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12329862">DERBY-1079</key>
            <summary>Build javadoc  under jdk 1.6</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Mar 2006 08:14:45 +0000</created>
                <updated>Wed, 14 Jun 2006 04:21:08 +0100</updated>
                            <resolved>Wed, 14 Jun 2006 04:20:11 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Build tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12369286" author="fuzzylogic" created="Wed, 8 Mar 2006 03:07:56 +0000"  >&lt;p&gt;Just curious, but would any of the new JDBC 4 classes actually show up in the published api?&lt;/p&gt;</comment>
                            <comment id="12370758" author="rhillegas" created="Fri, 17 Mar 2006 05:55:37 +0000"  >&lt;p&gt;Some new DataSource implementations (which satisify the JDBC4 DataSource contract) would turn up in the published api. This is the crux of the javadoc problem: A single class can&apos;t satisfy both the JDBC3 and JDBC4 DataSource contracts, so we need two sets of public DataSource implementations. It makes sense to me that we should publish a single javadoc, containing both sets. This unified javadoc would describe the whole public api in our jar files.&lt;/p&gt;</comment>
                            <comment id="12374223" author="rhillegas" created="Thu, 13 Apr 2006 02:39:22 +0100"  >&lt;p&gt;As a first step, I would like to check in the latest version of JavaCC (4.0). This involves making the following change to trunk/java/tools/org/apache/derby/impl/tools/build.xml. For some reason, two generated grammars (ij and mtGrammar) are currently compiled against the jdk1.3 libraries; the new JavaCC generates code which invokes a RuntimeException constructor not available in 1.3. This change moves that grammar compilation to the corresponding jdk14 build target:&lt;/p&gt;

&lt;p&gt;&amp;lt;       &amp;lt;exclude name=&quot;$&lt;/p&gt;
{derby.dir}/impl/tools/ij/ij.java&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;       &amp;lt;exclude name=&quot;${derby.dir}
&lt;p&gt;/impl/tools/ij/mtGrammar.java&quot;/&amp;gt;&lt;br/&gt;
78,79d75&lt;br/&gt;
&amp;lt;       &amp;lt;include name=&quot;$&lt;/p&gt;
{derby.dir}/impl/tools/ij/ij.java&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;       &amp;lt;include name=&quot;${derby.dir}
&lt;p&gt;/impl/tools/ij/mtGrammar.java&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;The new JavaCC does not generate code using the &quot;enum&quot; keyword for variable names. These illegal variable names choked the jdk1.6 javadoc tool. Using the new JavaCC, I am able to build javadoc under 1.6.&lt;/p&gt;

&lt;p&gt;I will run derbyall before proceeding with this patch. Does anyone know why I should not make this change and upgrade our checked-in version of JavaCC to the latest 4.0 version?&lt;/p&gt;</comment>
                            <comment id="12374225" author="rhillegas" created="Thu, 13 Apr 2006 02:42:59 +0100"  >&lt;p&gt;Hm. Never mind that previous comment. I can see that the RuntimeException constructors will create problems under jdk13 if the grammars execute certain error paths.&lt;/p&gt;</comment>
                            <comment id="12374227" author="rhillegas" created="Thu, 13 Apr 2006 03:01:31 +0100"  >&lt;p&gt;Hoopla. The previous rev of javacc solves Goldilocks&apos; problem: it is just right. It doesn&apos;t generate the noxious variables named &quot;enum&quot; and it doesn&apos;t generate RuntimeException constructor invocations not supported in jdk13. So the first patch would just consist of replacing our current JavaCC with the 3.2 rev.&lt;/p&gt;</comment>
                            <comment id="12374228" author="fuzzylogic" created="Thu, 13 Apr 2006 03:09:55 +0100"  >&lt;p&gt;JavaCC 3.2 has a problem with lookahead that causes exceptions from the parser with attempting to parse poorly formed SQL. One case in particular is if you use two periods in a row, e.g. VALUES 1..0, IIRC.&lt;/p&gt;

&lt;p&gt;If I had to choose between the two, i&apos;d rather disable the stress test on jdk13 then have a parser that lets uncaught exceptions fall out. Others may feel differently.&lt;/p&gt;</comment>
                            <comment id="12374243" author="rhillegas" created="Thu, 13 Apr 2006 05:03:40 +0100"  >&lt;p&gt;Hi Andrew,&lt;/p&gt;

&lt;p&gt;Please help me understand the problem with the 3.2 grammar generator. I&apos;m afraid I&apos;m not tracking this one. The following script raises identical errors run against Derby built the old JavaCC (3.1) and the 3.2 version. Thanks-Rick&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:testdb10.2&apos;;&lt;br/&gt;
ij&amp;gt; VALUES 1.0;&lt;br/&gt;
1&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;1.0&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; VALUES &apos;IIRC&apos;;&lt;br/&gt;
1&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;IIRC&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; VALUES 1..0;&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;.0&quot; at line 1, column 10.&lt;br/&gt;
ij&amp;gt; VALUES 1..0, IIRC;&lt;br/&gt;
ERROR 42X01: Syntax error: Encountered &quot;.0&quot; at line 1, column 10.&lt;/p&gt;</comment>
                            <comment id="12374369" author="rhillegas" created="Fri, 14 Apr 2006 01:00:55 +0100"  >&lt;p&gt;Thanks, Andrew, for your suggestions. The multi stress tests do indeed pass cleanly under 1.3 using the 4.0 JavaCC, so moving the compilation of mtGrammar.java appears to be ok. Derbyall ran cleanly for me (even the volatile wisconsin test passed!). I have committed this first chunk of work as subversion revision 393834.&lt;/p&gt;</comment>
                            <comment id="12374413" author="rhillegas" created="Fri, 14 Apr 2006 04:50:14 +0100"  >&lt;p&gt;Patch bug1079_rev1.diff makes the following changes to javadoc generation:&lt;/p&gt;

&lt;p&gt;1) If ant.properties points at a jdk16 installation, then we include JDBC4-specific classes in publishedapi and derbydocs and we use the jdk16 javadoc tool.&lt;/p&gt;

&lt;p&gt;2) Otherwise, we exclude JDBC4-specific classes from publishedapi and derbydocs and we use the javadoc tool under $JAVA_HOME/bin.&lt;/p&gt;

&lt;p&gt;This patch touches the following files:&lt;/p&gt;

&lt;p&gt;M      build.xml&lt;br/&gt;
A      tools\javadoc\publishedapi_jdbc4.ant&lt;br/&gt;
A      tools\javadoc\derbydocs_jdbc4_exclusions.ant&lt;br/&gt;
M      tools\javadoc\publishedapi.ant&lt;br/&gt;
M      tools\javadoc\derbydocs_exclusions.ant&lt;/p&gt;</comment>
                            <comment id="12374525" author="rhillegas" created="Fri, 14 Apr 2006 22:28:36 +0100"  >&lt;p&gt;Committed bug1079_rev1.diff at subversion revision 394110.&lt;/p&gt;</comment>
                            <comment id="12374534" author="rhillegas" created="Fri, 14 Apr 2006 23:41:13 +0100"  >&lt;p&gt;I&apos;d like to clean up the following JavaCC diagnostic, coughed up while generating the SQL grammar. I don&apos;t know whether this was introduced by upgrading to rev 4.0, but I&apos;m noticing it now:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Warning: Line 11, Column 9: Bad option name &quot;OPTIMIZE_TOKEN_MANAGER&quot;.  Option setting will be ignored.&lt;/p&gt;

&lt;p&gt;The JavaCC release notes don&apos;t say much about this generator option and don&apos;t tell me when or why it was deprecated. Anyway, I&apos;m removing it from the SQL grammar. Before committing this change (bug1179_deprecated.diff), I&apos;ll run derbylang as a sanity check. The affected file is:&lt;/p&gt;

&lt;p&gt; M      java\engine\org\apache\derby\impl\sql\compile\sqlgrammar.jj&lt;/p&gt;</comment>
                            <comment id="12374541" author="fuzzylogic" created="Sat, 15 Apr 2006 00:38:19 +0100"  >&lt;p&gt;Also mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-73&quot; title=&quot;Ability to compile under JDK1.5&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-73&quot;&gt;&lt;del&gt;DERBY-73&lt;/del&gt;&lt;/a&gt; and javacc40.diff there. FWIW, I ran derbyall on jdk142 with the same change and got no errors.&lt;/p&gt;</comment>
                            <comment id="12374555" author="rhillegas" created="Sat, 15 Apr 2006 02:41:34 +0100"  >&lt;p&gt;Derbylang passed except for query plan diffs in wisconsin and staleplans. I reran staleplans and it passed. Let&apos;s keep an eye on the instability in staleplans. Committed bug1179_deprecated.diff at subversion revision 394169.&lt;/p&gt;</comment>
                            <comment id="12374815" author="rhillegas" created="Tue, 18 Apr 2006 05:33:45 +0100"  >&lt;p&gt;Committed bug1079_embeddedPublicAPI.diff at subversion revision 394780. This patch improves the javadoc for the publicly visible JDBC4 classes in the embedded client. Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java\engine\org\apache\derby\jdbc\EmbedPooledConnection.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedXADataSource40.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbedPooledConnection40.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedDataSource.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedDataSource40.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedConnectionPoolDataSource.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedConnectionPoolDataSource40.java&lt;br/&gt;
M      java\engine\org\apache\derby\jdbc\EmbeddedXADataSource.java&lt;/p&gt;</comment>
                            <comment id="12376826" author="rhillegas" created="Fri, 28 Apr 2006 05:51:36 +0100"  >&lt;p&gt;Committed bug1079_clientPublicAPI.diff at subversion revision 397650. This adds javadoc to our public JDBC4 classes in the client. Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java\client\org\apache\derby\jdbc\ClientXADataSource.java&lt;br/&gt;
M      java\client\org\apache\derby\jdbc\ClientConnectionPoolDataSource.java&lt;br/&gt;
M      java\client\org\apache\derby\jdbc\ClientXADataSource40.java&lt;br/&gt;
M      java\client\org\apache\derby\jdbc\ClientConnectionPoolDataSource40.java&lt;br/&gt;
M      java\client\org\apache\derby\jdbc\ClientDataSource.java&lt;br/&gt;
M      java\client\org\apache\derby\jdbc\ClientDataSource40.java&lt;/p&gt;</comment>
                            <comment id="12378534" author="rhillegas" created="Tue, 9 May 2006 07:29:53 +0100"  >&lt;p&gt;Attaching bug1079_split.diff. This patch splits the public api javadoc into two separate sets: one for JDBC3 applications and one for JDBC4 applications. The patch also bolts a webpage on top of these two sets. The webpage explains when to use each of these sets. This addresses the problems raised on derby-dev in the email thread titled &quot;Javadoc lies&quot;.&lt;/p&gt;

&lt;p&gt;The J2ME/CDC DataSource (EmbeddedSimpleDataSource) goes into the JDBC3 set of javadoc. If someone has the itch, they can add an additional J2ME/CDC DataSource to implement the JDBC4 DataSource api. This additional DataSource can then go into the JDBC4 set.&lt;/p&gt;</comment>
                            <comment id="12378564" author="fuzzylogic" created="Tue, 9 May 2006 11:42:43 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;antcall target=&quot;public-jdbc4-api&quot;/&amp;gt;&lt;br/&gt;
+    &amp;lt;antcall target=&quot;public-jdbc4-api&quot; if=&quot;jdk16&quot;/&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please don&apos;t break the top-level publishedapi target for JVMs &amp;lt; 1.6.&lt;/p&gt;

&lt;p&gt;Instead of a publishedapi_index.html how about we create a top-level index.html for the bin distribution that also has pointers to the manuals? I can take care of the doc section of the file if you like.&lt;/p&gt;</comment>
                            <comment id="12378770" author="rhillegas" created="Wed, 10 May 2006 06:45:38 +0100"  >&lt;p&gt;Committed bug1079_split2.diff at subversion revision 405560. This improves the previous patch as follows:&lt;/p&gt;

&lt;p&gt;o Renames the webpage to trunk/index.html and removes it from the publishedapi directory. Andrew will sand down this file and link it to additional documents, including our html user guides.&lt;/p&gt;

&lt;p&gt;o Corrects the wording of the webpage as John recommended.&lt;/p&gt;

&lt;p&gt;Note that the if=&quot;jdk16&quot; conditional mentioned by Andrew is included in the target itself. If you build the javadoc without jdk16 in your ant.properties, then you will get the same javadoc you got six months ago.&lt;/p&gt;</comment>
                            <comment id="12416071" author="rhillegas" created="Wed, 14 Jun 2006 04:21:08 +0100"  >&lt;p&gt;This issue is closed. However, a new issue needs to be opened because the new javadoc needs to be wired into the documentation.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12328845">DERBY-954</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12325975" name="bug1079_clientPublicAPI.diff" size="15476" author="rhillegas" created="Fri, 28 Apr 2006 05:51:36 +0100"/>
                            <attachment id="12325342" name="bug1079_deprecated.diff" size="510" author="rhillegas" created="Fri, 14 Apr 2006 23:41:13 +0100"/>
                            <attachment id="12325454" name="bug1079_embeddedPublicAPI.diff" size="13369" author="rhillegas" created="Tue, 18 Apr 2006 05:33:45 +0100"/>
                            <attachment id="12325318" name="bug1079_rev1.diff" size="10592" author="rhillegas" created="Fri, 14 Apr 2006 04:50:14 +0100"/>
                            <attachment id="12326419" name="bug1079_split.diff" size="8880" author="rhillegas" created="Tue, 9 May 2006 07:29:53 +0100"/>
                            <attachment id="12326478" name="bug1079_split2.diff" size="8608" author="rhillegas" created="Wed, 10 May 2006 06:45:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Mar 2006 03:07:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22293</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy164n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40643</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>