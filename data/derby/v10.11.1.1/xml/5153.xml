<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:52:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5153/DERBY-5153.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5153] Intermittent ASSERT FAILED Internal Error-- statistics not found in selectivityForConglomerate when running InterruptResilienceTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5153</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Cf the enclosed derby.log:&lt;/p&gt;

&lt;p&gt;While executing this statement: &quot;select * from mtTab where i=?&quot;, we see this stacktrace:&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED Internal Error-- statistics not found in selectivityForConglomerate.&lt;br/&gt;
 cd = ConglomerateDescriptor: conglomerateNumber = 1249 name = SQL110325154339720 uuid = f04340b7-012e-ed78-50c3-00005e21fe7a indexable = true&lt;br/&gt;
numKeys = 1&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.iapi.sql.dictionary.TableDescriptor.selectivityForConglomerate(TableDescriptor.java:1443)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.PredicateList.selectivity(PredicateList.java:3903)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(FromBaseTable.java:1295)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OptimizerImpl.estimateTotalCost(OptimizerImpl.java:2626)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OptimizerImpl.costBasedCostOptimizable(OptimizerImpl.java:2172)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OptimizerImpl.costOptimizable(OptimizerImpl.java:1985)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.FromBaseTable.optimizeIt(FromBaseTable.java:526)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.ProjectRestrictNode.optimizeIt(ProjectRestrictNode.java:316)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.OptimizerImpl.costPermutation(OptimizerImpl.java:1939)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.SelectNode.optimize(SelectNode.java:1916)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.DMLStatementNode.optimizeStatement(DMLStatementNode.java:315)&lt;br/&gt;
	at org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement(CursorNode.java:587)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:384)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:85)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.rePrepare(GenericPreparedStatement.java:229)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:409)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1686)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:284)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest$WorkerThread.run(InterruptResilienceTest.java:414)&lt;/p&gt;

&lt;p&gt;I saw this twice with the enclosed patch to InterruptResilienceTest (adds a test case in preparation for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5152&quot; title=&quot;Shutting down db, information that the thread received an interrupt will not be restored to thread&amp;#39;s interrupt flag&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5152&quot;&gt;&lt;del&gt;DERBY-5152&lt;/del&gt;&lt;/a&gt;) - but the error occurs before we execute that fixture, so I think the patch is irrelevant (a third and fourth execution failed to show the issue). I am posting it here in case somebody can guess what could be wrong, I&apos;ll run more experiments to see if I can reproduce it. Could it be related to our new index statistics daemon?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12502389">DERBY-5153</key>
            <summary>Intermittent ASSERT FAILED Internal Error-- statistics not found in selectivityForConglomerate when running InterruptResilienceTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Mar 2011 15:24:38 +0000</created>
                <updated>Tue, 19 Apr 2011 13:38:59 +0100</updated>
                            <resolved>Mon, 4 Apr 2011 09:01:44 +0100</resolved>
                                    <version>10.8.1.2</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13014216" author="knutanders" created="Thu, 31 Mar 2011 22:14:18 +0100"  >&lt;p&gt;A similar error was logged as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5169&quot; title=&quot;Derby intermittently fails with an internal error&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5169&quot;&gt;&lt;del&gt;DERBY-5169&lt;/del&gt;&lt;/a&gt;. That one was seen on 10.7.1.1, so the problem does not seem to be related to, or at least not limited to, the new index statistics daemon.&lt;/p&gt;</comment>
                            <comment id="13014467" author="knutanders" created="Fri, 1 Apr 2011 09:18:07 +0100"  >&lt;p&gt;Attaching a standalone repro for this bug. If you run the D5153 class with a sane build of Derby, you should see the assert failure fairly quickly.&lt;/p&gt;

&lt;p&gt;The repro starts two threads. One that repeatedly performs a join using a table with a multi-column index, and one that repeatedly updates the index statistics.&lt;/p&gt;</comment>
                            <comment id="13014502" author="knutanders" created="Fri, 1 Apr 2011 11:07:44 +0100"  >&lt;p&gt;Uploading a patch that adds the repro as a JUnit test case in UpdateStatisticsTest. The test case fails fairly consistently in my environment. It has failed in every run so far, either in embedded mode or in client mode, but sometimes not in both modes.&lt;/p&gt;

&lt;p&gt;The test case is disabled for now. To try it, remove the &quot;disabled_&quot; prefix from the name of the test method.&lt;/p&gt;

&lt;p&gt;Committed revision 1087636.&lt;/p&gt;</comment>
                            <comment id="13014504" author="knutanders" created="Fri, 1 Apr 2011 11:14:10 +0100"  >&lt;p&gt;I think the problem here is that code on a higher level check that the statistics exist before calling TableDescriptor.selectivityForConglomerate() and assumes that the statistics exist in that method. However, there are no locks or other mechanisms that prevent the statistics from being dropped between the check on the higher level and the call to selectivityForConglomerate(). Since selectivityForConglomerate() knows how to handle missing statistics in a reasonable way (which it does in production builds), I think we should just remove the asserts here.&lt;/p&gt;</comment>
                            <comment id="13014530" author="knutanders" created="Fri, 1 Apr 2011 13:09:51 +0100"  >&lt;p&gt;I&apos;m attaching a patch that removes the asserts and enables the test case.&lt;/p&gt;

&lt;p&gt;Before the patch, if the statistics couldn&apos;t be found by non-debug builds, different heuristics for the selectivity would be used depending on where it detected that statistics were missing.&lt;/p&gt;

&lt;p&gt;If it was detected near the start of selectivityForConglomerate(), it would estimate the selectivity to 0.1^(numKeys+1). But if it was detected later in the method, 0.1 would be returned.&lt;/p&gt;

&lt;p&gt;I think the first estimate is the best one, as it sounds reasonable that the selectivity is reduced (fewer rows match) the more columns we specify in the predicates. However, I believe it was a typo in the original code that made it estimate the selectivity as 0.1^(numKeys+1) and not as 0.1^numKeys. I&apos;ve therefore removed both of the original heuristics and replaced them with one single heuristic which is 0.1^numKeys.&lt;/p&gt;

&lt;p&gt;The reason why I think the original calculation has a typo, is that other places in the code we usually calculate selectivity in a way similar to this:&lt;/p&gt;

&lt;p&gt;double selectivity = 1.0;&lt;br/&gt;
for (int i = 0; i &amp;lt; predicates; i++) &lt;/p&gt;
{
    selectivity *= &amp;lt;selectivity for predicate i&amp;gt;;
}

&lt;p&gt;In selectivityForConglomerate, the selectivity is initialized to 0.1 instead of 1.0, apparently for no good reason. Apart from not being consistent with other calculations, it has some strange effects on the boundaries, like the selectivity for numKeys=0, that is the selectivity for TRUE, becomes 0.1, whereas it clearly should be 1.0.&lt;/p&gt;

&lt;p&gt;In any case, the accuracy of the heuristic is probably not very important in this case. This will only happen if the compilation of a query happens to come to this code in the short window between dropping of the old statistics and inserting the new statistics. And recreation of statistics invalidates the query plan, so the query is likely to be recompiled with fresh statistics very soon afterwards.&lt;/p&gt;</comment>
                            <comment id="13015304" author="knutanders" created="Mon, 4 Apr 2011 09:01:44 +0100"  >&lt;p&gt;Committed revision 1088495.&lt;/p&gt;</comment>
                            <comment id="13015703" author="dagw" created="Tue, 5 Apr 2011 01:44:39 +0100"  >&lt;p&gt;The explanation of the bug and the heuristics sounds convincing to me. +1&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12503049">DERBY-5169</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12503290">DERBY-5174</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12475202" name="D5153.java" size="1582" author="knutanders" created="Fri, 1 Apr 2011 09:18:07 +0100"/>
                            <attachment id="12474623" name="derby.log" size="75570" author="dagw" created="Fri, 25 Mar 2011 15:25:42 +0000"/>
                            <attachment id="12475215" name="remove-asserts.diff" size="2765" author="knutanders" created="Fri, 1 Apr 2011 13:09:51 +0100"/>
                            <attachment id="12475212" name="test.diff" size="3815" author="knutanders" created="Fri, 1 Apr 2011 11:07:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Mar 2011 21:14:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24678</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0grb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36533</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>