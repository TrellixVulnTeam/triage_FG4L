<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:32:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4310/DERBY-4310.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4310] Closing a prepared statement with an embedded   XAConnection can cause the statement to be reprepared and errors related to missing dependencies. This can interfere with network server closeSession()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4310</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The XATest is showing the following on the log:&lt;br/&gt;
2009-07-16 00:15:42.838 GMT : Apache Derby Network Server - 10.6.0.0 alpha - (794457M) started and ready to accept connections on port 9920&lt;br/&gt;
2009-07-16 00:15:44.394 GMT : Unexpected exception:&lt;br/&gt;
 Table/View &apos;APP.FOO&apos; does not exist.&lt;/p&gt;

&lt;p&gt;Here is the full stack trace  from derby.log.  The error comes closing a prepared statement on a brokered connection if the table referenced by the statement has been dropped.  This looks like an embedded bug causing network server shutdown to fail.  Also if this test is enabled in a suite &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;, the next time network server is started the tests will hang with java.net.BindException: Address already in use: NET_Bind in the derby.log&lt;/p&gt;


&lt;p&gt;2009-07-16 17:05:45.062 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;derby.NetworkServerStarter,5,derby.daemons&amp;#93;&lt;/span&gt; (XID = 497), (SESSIONID = 53), (DATABASE = wombat), (DRDAID = &lt;/p&gt;
{7}
&lt;p&gt;), Failed Statement is: SELECT * FROM APP.FOO&lt;/p&gt;

&lt;p&gt;ERROR 42X05: Table/View &apos;APP.FOO&apos; does not exist.&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:286)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.FromBaseTable.bindTableDescriptor(FromBaseTable.java:2463)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(FromBaseTable.java:2183)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.FromList.bindTables(FromList.java:310)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.SelectNode.bindNonVTITables(SelectNode.java:390)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.DMLStatementNode.bindTables(DMLStatementNode.java:199)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.DMLStatementNode.bind(DMLStatementNode.java:137)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.compile.CursorNode.bindStatement(CursorNode.java:245)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:316)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:88)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:822)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:129)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:105)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1542)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1423)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement30.createDuplicateStatement(BrokeredPreparedStatement30.java:56)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.jdbc.XAStatementControl.getRealPreparedStatement(XAStatementControl.java:143)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement.getPreparedStatement(BrokeredPreparedStatement.java:526)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.BrokeredPreparedStatement.getStatement(BrokeredPreparedStatement.java:533)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.BrokeredStatement.close(BrokeredStatement.java:130)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.DRDAStatement.close(DRDAStatement.java:1027)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.Database.close(Database.java:352)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.Session.close(Session.java:115)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:833)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;/p&gt;

&lt;p&gt;	at java.lang.reflect.Method.invoke(Method.java:599)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236)&lt;/p&gt;

&lt;p&gt;	at java.lang.Thread.run(Thread.java:735)&lt;/p&gt;

&lt;p&gt;Cleanup action completed&lt;/p&gt;

&lt;p&gt;2009-07-16 17:05:45.078 GMT : Unexpected exception:&lt;br/&gt;
 Table/View &apos;APP.FOO&apos; does not exist.&lt;/p&gt;

&lt;p&gt;An exception was thrown during network server startup. DRDA_UnexpectedException.S:Unexpected exception:&lt;br/&gt;
 Table/View &apos;APP.FOO&apos; does not exist.&lt;/p&gt;

&lt;p&gt;java.lang.reflect.InvocationTargetException&lt;/p&gt;

&lt;p&gt;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)&lt;/p&gt;

&lt;p&gt;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;/p&gt;

&lt;p&gt;	at java.lang.reflect.Method.invoke(Method.java:599)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236)&lt;/p&gt;

&lt;p&gt;	at java.lang.Thread.run(Thread.java:735)&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.Exception: DRDA_UnexpectedException.S:Unexpected exception:&lt;br/&gt;
 Table/View &apos;APP.FOO&apos; does not exist.&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessageWork(NetworkServerControlImpl.java:3216)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.consolePropertyMessage(NetworkServerControlImpl.java:1885)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:835)&lt;/p&gt;

&lt;p&gt;	... 6 more&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12430639">DERBY-4310</key>
            <summary>Closing a prepared statement with an embedded   XAConnection can cause the statement to be reprepared and errors related to missing dependencies. This can interfere with network server closeSession()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Jul 2009 08:47:05 +0100</created>
                <updated>Fri, 21 Jan 2011 18:46:19 +0000</updated>
                            <resolved>Mon, 3 Aug 2009 21:13:57 +0100</resolved>
                                    <version>10.1.3.3</version>
                    <version>10.2.2.1</version>
                    <version>10.3.3.1</version>
                    <version>10.4.2.1</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.1.3.3</fixVersion>
                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12731847" author="espinha" created="Thu, 16 Jul 2009 08:48:07 +0100"  >&lt;p&gt;Attaching the log folder for this test.&lt;/p&gt;</comment>
                            <comment id="12732030" author="kmarsden" created="Thu, 16 Jul 2009 18:21:38 +0100"  >&lt;p&gt;linking to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;. This issue needs to be resolved before XATest can be enabled.&lt;/p&gt;</comment>
                            <comment id="12732159" author="kmarsden" created="Thu, 16 Jul 2009 22:04:19 +0100"  >&lt;p&gt;Thank you Tiago for picking up this issue.&lt;br/&gt;
What seems to be happening is that for logical connections when we close a prepared statement it under some circumstances tries to reprepare the statement. This is a problem if the table being referenced has been dropped.&lt;/p&gt;

&lt;p&gt;It would be a good first step to get an embedded reproduction. Take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1016&quot; title=&quot;javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1016&quot;&gt;&lt;del&gt;DERBY-1016&lt;/del&gt;&lt;/a&gt; repro to see how to get an XA connection. Start with just a local transaction, creating a table and commit, preparing a statement to select from the table. Creating another regular connection with driver manager and dropping the table and then trying to close the prepared statement. Hopefully that will pop it.&lt;/p&gt;</comment>
                            <comment id="12733329" author="espinha" created="Mon, 20 Jul 2009 20:37:16 +0100"  >&lt;p&gt;I&apos;m attaching a repro that I am having trouble with. Basically this repro is locking with a timeout and I can&apos;t work out how to get around it, to actually get the repro to work.&lt;/p&gt;</comment>
                            <comment id="12733335" author="kmarsden" created="Mon, 20 Jul 2009 21:20:37 +0100"  >&lt;p&gt;Hi Tiago,&lt;/p&gt;

&lt;p&gt;I think the timeout is expected in the embedded case as the statement has been executed but the results have not been fetched.&lt;/p&gt;

&lt;p&gt;I think we should focus on getting a client reproduction first and then will narrow it down to embedded.  I changed the program to use client  but it is not showing the issue on shutdown yet.&lt;/p&gt;

&lt;p&gt;I also made a few other minor changes to get it to run.  From the test  checkHeldRS method it does look like the test fetches some rows/commits etc.  You might want to play with that to get it to reproduce.&lt;/p&gt;

</comment>
                            <comment id="12733767" author="espinha" created="Tue, 21 Jul 2009 19:18:41 +0100"  >&lt;p&gt;I&apos;m attaching the XATest as I have it currently (with all the fixtures but testDerby966 &quot;commented, and with testDerby966 reduced to the bare essentials to make the error pop) and a repro that I am trying to create, which does not yet reproduce the bug.&lt;/p&gt;</comment>
                            <comment id="12733792" author="kmarsden" created="Tue, 21 Jul 2009 20:19:29 +0100"  >&lt;p&gt;Attached is an updated reproduction with the Network Server repro ReproDerby4310.java.&lt;br/&gt;
I changed several things from the Tests.zip version but I think the key points were. Shutting down network server, using ClientXADataSource, closing the ResultSet, not closing the XAConnection  &lt;br/&gt;
I changed the port number because I was running some other tests on my machine.&lt;/p&gt;

&lt;p&gt;ReproEmbeddedDerby4310 shows the embedded bug which is the root cause.  For that one we need to use a prepared statement.  I suggest you use the embedded version for  debugging the issue.&lt;/p&gt;
</comment>
                            <comment id="12733923" author="kmarsden" created="Wed, 22 Jul 2009 01:43:22 +0100"  >&lt;p&gt;Tiago and I discussed this issue on IRC.  I will just talk about the PreparedStatement case. There probably similar bugs in similar code for regular Statement and CallableStatement but it seemed best to address PreparedStatement first.  In general as we transition from a local transaction to a global one the underlying real connection gets swapped out.   I am not sure of the details of why this is needed but it  happens in EmbedXAConnection.getConnection().    If we try to access a statement after the connection has changed out from underneath it we end up calling XAStatementControl.getRealPreparedStatement()  to perform the operation. This method detects the connection change and if it has occurred, tries to make a new statement just like the old one with a call to  ((BrokeredPreparedStatement) applicationStatement).createDuplicateStatement(xaConnection.realConnection, realPreparedStatement);&lt;br/&gt;
The applicationStatement has saved away the sql text so we can reprepare.&lt;/p&gt;

&lt;p&gt;In our case however the table has been dropped so it cannot be reprepared.  If we were trying to reexecute  this I think is a perfectly reasonable error to get, but for close() we should avoid the recreation all together and I think  just close the original realPreparedStatement.&lt;/p&gt;

&lt;p&gt;I suggested to Tiago we  make a closeRealPreparedStatement() method in BrokeredStatementControl/XAStatementControl, which would not attempt to create a new statement.&lt;br/&gt;
To implement this I think you would need to.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add closeRealPreparedStatement to the BrokeredStatementControl interface.&lt;/li&gt;
	&lt;li&gt;Add closeRealPreparedStatement to XAStatementControl which just closes the realPreparedStatement and does not attempt to make a new one. Question: Currently we ignore any errors that occur closing this statement, should we continue to do so?  I suggested to Tiago as a first pass not to and see if any problems arise in the tests.&lt;/li&gt;
	&lt;li&gt;In BrokeredPreparedStatement override the close() method to call control.closeRealPreparedStatement()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Clobber before  building.  There may be another class implementing BrokeredStatementControl that I don&apos;t see.&lt;/p&gt;

&lt;p&gt;Implementing this solution does not bring us in sync with the behavior when we don&apos;t have a global connection, because we would still get the check for validity and error for calls like isClosed(), setFetchSize() or getFetchDirection() which currently succeed after the table has been dropped if there is no global transaction.  I guess a more complete solution would determine which calls don&apos;t check and have them use the original prepared statement and then have the ones  that should check try to create a new statement and copy the state as is currently done.  I don&apos;t know if that is worth the effort.&lt;/p&gt;





</comment>
                            <comment id="12734512" author="espinha" created="Thu, 23 Jul 2009 09:36:58 +0100"  >&lt;p&gt;At this point I have took on Kathey&apos;s suggestion and I have the close() method in BrokeredPreparedStatement invoking the closeRealPreparedStatement() method in the control (XAControl) property. This last method invokes the close() on the realPreparedStatement object.&lt;/p&gt;

&lt;p&gt;This solution does make the error go away (since we jump straight away to closing without repreparing) but for the suites.All run we added another change that seems to be causing mayhem. Under the getRealPreparedStatement() method we removed the try...catch block in the following piece of code:&lt;br/&gt;
try &lt;/p&gt;
{
	realPreparedStatement.close();
}
&lt;p&gt; catch (SQLException sqle) {&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;It is possible that this piece of code was hiding exceptions similar to the ones we are facing now, but this will also hide any other SQLException in the process, which is less than ideal.&lt;/p&gt;

&lt;p&gt;However, by removing the try..catch block, the suites.All would hang on the testSystemShutdown, so to temporarily avert this behavior I have removed the exception.getMessage() on the server shutdown, which will crash when the exception is an NPE. Still, this test seems to be hanging nonetheless.&lt;/p&gt;</comment>
                            <comment id="12734584" author="kmarsden" created="Thu, 23 Jul 2009 13:48:56 +0100"  >&lt;p&gt;Hi Tiago, If you are still not getting console output showing the exception that is occurring shortly before the hang, then we could try reintroducing the try/catch but just  printing  out the exception stack trace to see what exception it is getting.&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
realPreparedStatement.close();
}
&lt;p&gt; catch (SQLException sqle) &lt;/p&gt;
{
    sqle.printStackTrace();
}</comment>
                            <comment id="12735117" author="espinha" created="Fri, 24 Jul 2009 19:32:05 +0100"  >&lt;p&gt;First off, this patch I am attaching is NOT for commit.&lt;/p&gt;

&lt;p&gt;This patch fixes the issue in the sense that the PreparedStatements no longer are reprepared when we want to close them. Instead, we go directly to the source and try to close the statement.&lt;/p&gt;

&lt;p&gt;In the process, some exceptions aroused which would hang the run on the shutdown test, so to override this I had to encapsulate the close() call on the realPreparedStatement in a try..catch block, printing the stack trace of the exception.&lt;/p&gt;

&lt;p&gt;Now the run does go through until the end but I&apos;m getting some exceptions. A great deal of them seem to be like this one:&lt;br/&gt;
-----------&lt;del&gt;8&amp;lt;&lt;/del&gt;-------------&lt;br/&gt;
33) class org.apache.derby.iapi.jdbc.BrokeredCallableStatement40.setQueryTimeout(org.apache.derbyTesting.functionTests.tests.jdbcapi.ClosedObjectTest)junit.framework.AssertionFailedError: No exception was thrown&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.ClosedObjectTest.testClosedObjects(ClosedObjectTest.java:99)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor2076.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
----------------&lt;del&gt;8&amp;lt;&lt;/del&gt;----------------&lt;/p&gt;

&lt;p&gt;And there&apos;s a few others I have managed to copy &amp;amp; paste from the console that I will be attaching in a file. I will also be attaching the derby.log file from this run. (Do note that I also ran out of disk space during this run - this is because the test output folder is at around 5.5Gb due to the amount of failures).&lt;/p&gt;</comment>
                            <comment id="12735200" author="kmarsden" created="Fri, 24 Jul 2009 23:54:51 +0100"  >&lt;p&gt;One problem seems to be that realPrepardStatement can be null on close so we can get a NullPointerException.  I am not totally sure I think maybe this is happening for callable statements because we have not yet implemented closeRealCallableStatement() so for this reason we are getting errors like callbacks not gettting called, and perhaps events being called on the wrong statement but I haven&apos;t quite figured that one out.&lt;/p&gt;

&lt;p&gt;As an aside,  EmbedXAConnection.onStatementClose() is where the callbacks are processed and this is called from EmbedPreparedStatement.closeActions() which gets called from EmbedStatement.close().    So we definitely need to close a statement when doing the close and cannot have a null check.&lt;/p&gt;

&lt;p&gt;I suggest you go ahead and implement the callable statement changes. It will either make things better or expose this idea as a bad solution.&lt;/p&gt;</comment>
                            <comment id="12735265" author="espinha" created="Sat, 25 Jul 2009 12:30:33 +0100"  >&lt;p&gt;The suites.All run went without a hitch after I implemented the changes for the BrokeredCallableStatement. I faced one failure but it does not seem to be related:&lt;br/&gt;
1) IjSecurityManagerTest:embeddedjunit.framework.AssertionFailedError: org/apache/derbyTesting/functionTests/tests/tools/IjSecurityManagerTest.sql&lt;br/&gt;
	at org.apache.derbyTesting.junit.SupportFilesSetup.copyFiles(SupportFilesSetup.java:174)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SupportFilesSetup.access$000(SupportFilesSetup.java:64)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SupportFilesSetup$1.run(SupportFilesSetup.java:139)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SupportFilesSetup.privCopyFiles(SupportFilesSetup.java:135)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SupportFilesSetup.setUp(SupportFilesSetup.java:121)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 11362,  Failures: 1,  Errors: 0&lt;/p&gt;

&lt;p&gt;Also, grepping the output file (attached) for &quot;Exception&quot; showed no signs of a stack trace whatsoever. My next test will be to remove the try..catch blocks on the calls to real(.*)Statement.close();&lt;/p&gt;

&lt;p&gt;If this works, I think I can then issue a final patch for commit.&lt;/p&gt;</comment>
                            <comment id="12735285" author="kmarsden" created="Sat, 25 Jul 2009 16:44:47 +0100"  >&lt;p&gt;I agree that looks unrelated.  I wonder why it would have a problem getting the resource from the jar file:&lt;br/&gt;
                 URL url = BaseTestCase.getTestResource(name);&lt;br/&gt;
            assertNotNull(name, url);&lt;br/&gt;
Does it pass on rerun?&lt;/p&gt;

&lt;p&gt;I neglected to mention for the final patch, you should add comments and javadoc.  Do we need to make similar changes for BrokeredStatement or is that ok as is because no objects are referenced in the statement?  What do you think about the other calls like isClosed()?  Should we address those or just log a minor bug and move on?&lt;/p&gt;</comment>
                            <comment id="12735294" author="espinha" created="Sat, 25 Jul 2009 17:09:00 +0100"  >&lt;p&gt;Interestingly enough I got that same failure on rerun. This becomes more intriguing considering the fact that it was I who introduced that file I believe. I&apos;m thinking something might be wrong with my code tree. The plot thickens.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure we would need this for the BrokeredStatement. After all, if this isn&apos;t a prepared statement, when we duplicate the statement to accommodate the connection change the statement does not get reprepared, so nothing evil should happen. However, perhaps for standardization&apos;s sake we should have all the statements being closed in the same manner (this would also possibly improve performance? We don&apos;t really need to duplicate a statement to close it...).&lt;/p&gt;

&lt;p&gt;As for the remaining calls, yes, we should probably get this for isClosed() and for isValid() as these are the other two methods that throw an exception when the statement is closed according to ClosedObjectTest.&lt;br/&gt;
-------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-----------------&lt;br/&gt;
if (name.equals(&quot;close&quot;) || name.equals(&quot;isClosed&quot;)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; name.equals(&quot;isValid&quot;)) 
{
                return false;
            }
&lt;p&gt;------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-------------------&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Still, looking at BrokeredStatement&apos;s implementation of isClosed(), I am dazzled. Why exactly do we have an exception being thrown there?&lt;br/&gt;
&amp;gt; throw Util.notImplemented();&lt;/p&gt;

</comment>
                            <comment id="12735304" author="kmarsden" created="Sat, 25 Jul 2009 19:04:27 +0100"  >&lt;p&gt;I agree that probably the copyFiles problem is related to your client. Check to see if the file is in your source tree. Even if it is do svn update -force on that one file.  Check to see it is in classes and lastly check the derbyTesting.jar with jar tvf.&lt;/p&gt;

&lt;p&gt;The actual implementation of isClosed() is in BrokeredStatement40.java. This is because it is a new method with JDBC 4.0. With JDK 1.5 and lower (JDBC 3.0) you will see the not implemented exception, but for 1.6 it is implemented.&lt;/p&gt;

&lt;p&gt;isValid() is actually not a Statement method but rather a method on  Connection.  I think there are other methods besides isClosed() that in a regular connection won&apos;t check if the dependencies if the table is dropped.  A couple I tried were getFetchSize() and setFetchSize(). If we fix this for isClosed() I think we should fix it for the other calls that are impacted as well.  &lt;/p&gt;

&lt;p&gt;Doing so would require some more significant code reorganization where we first write tests to determine which calls check dependencies and then decide on a strategy to make sure the various calls get the possibly reprepared statement or the original one as appropriate.   &lt;br/&gt;
Also we will need to check that the state gets transferred properly if calls like setFetchSize() are made on the original statement.  The more I think about it, I think this is a bigger project than you have time for in the next couple of weeks, so probably best to just get this issue wrapped up for close() and file a new bug  for the other calls.&lt;/p&gt;

</comment>
                            <comment id="12735305" author="kmarsden" created="Sat, 25 Jul 2009 19:06:58 +0100"  >&lt;p&gt;Oh, I forgot to mention. I think it makes sense to implement the new close logic for BrokeredStatement too.&lt;/p&gt;</comment>
                            <comment id="12735312" author="espinha" created="Sat, 25 Jul 2009 20:08:43 +0100"  >&lt;p&gt;Ok Kathey, I&apos;m not yet attaching the patch but I have &quot;refreshed&quot; that sql file that was causing the file and implemented the new logic for BrokeredStatement. At this point I&apos;m running suites.All again to make sure everything still works fine.&lt;/p&gt;

&lt;p&gt;I agree that the isClosed() and the other changes should be done in another issue. This fix will allow us to bring back/forth XATest which is already a big step forward.&lt;/p&gt;</comment>
                            <comment id="12736326" author="espinha" created="Tue, 28 Jul 2009 22:51:41 +0100"  >&lt;p&gt;I&apos;m attaching another patch that is not yet complete. This patch incorporates the fix for this issue and it adds a fixture to XATest (in addition to some house-cleaning on XATest since the fixtures are currently dependent on one another).&lt;/p&gt;

&lt;p&gt;This patch is NOT final yet and it is not meant to be committed as it still fails when the client test is activated. If the test is ran only in embedded mode then it all passes, but if the client server mode is enabled, I get a hang which I am still trying to figure out.&lt;/p&gt;</comment>
                            <comment id="12737341" author="kmarsden" created="Thu, 30 Jul 2009 23:50:55 +0100"  >&lt;p&gt;I tried the test and  found the first failure to be in testSingleConnectionOnePhaseCommit&lt;/p&gt;

&lt;p&gt;junit.framework.AssertionFailedError: Unexpected row count expected:&amp;lt;1&amp;gt; but was:&amp;lt;2&amp;gt;&lt;br/&gt;
        at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
        at junit.framework.Assert.failNotEquals(Assert.java:282)&lt;br/&gt;
        at junit.framework.Assert.assertEquals(Assert.java:64)&lt;br/&gt;
        at junit.framework.Assert.assertEquals(Assert.java:201)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertUnorderedResultSet(JDBC.java:1227)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertUnorderedResultSet(JDBC.java:1164)&lt;br/&gt;
        at org.apache.derbyTesting.junit.XATestUtil.checkXATransactionView(XATestUtil.java:82)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest.testSingleConnectionOnePhaseCommit(XATest.java:111&lt;br/&gt;
)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:599)&lt;br/&gt;
        at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
        at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
        at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
        at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
        at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;br/&gt;
        at junit.textui.TestRunner.start(TestRunner.java:172)&lt;br/&gt;
        at junit.textui.TestRunner.main(TestRunner.java:138)&lt;/p&gt;

&lt;p&gt;I think the other issues cascade from there.  Tiago said if he took out his new test this problem does not occur.  It would be interesting 1) To print the transaction table at the failure point to see what our extra transaction is.  2) put an xar.rollback(xid)  after &lt;br/&gt;
		xar.end(xid, XAResource.TMSUCCESS);&lt;br/&gt;
in testDerby4310. It could be that  transaction  is sticking around for a while even though we have done no work.&lt;/p&gt;


</comment>
                            <comment id="12737680" author="espinha" created="Fri, 31 Jul 2009 20:44:41 +0100"  >&lt;p&gt;This patch fixes the issue described. The fixtures to reproduce the described behavior are added on the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt; patch.&lt;/p&gt;

&lt;p&gt;I&apos;ll be running suites.All with both this and the other patch enabled.&lt;/p&gt;</comment>
                            <comment id="12737789" author="espinha" created="Sat, 1 Aug 2009 01:31:15 +0100"  >&lt;p&gt;The suites.All run went fine with only my usual failure on IjSecurityManagerTest, but that&apos;s really an issue with my code tree that&apos;s been somehow corrupted. I had tried it on a different checkout folder before and I do not face this issue.&lt;/p&gt;

&lt;p&gt;As long as the patches look good, I think we&apos;re ready for commit.&lt;/p&gt;

&lt;p&gt;Please note that this patch should be committed before the one in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;, otherwise the testDerby4310 fixture will fail.&lt;/p&gt;</comment>
                            <comment id="12738551" author="kmarsden" created="Mon, 3 Aug 2009 21:13:57 +0100"  >&lt;p&gt;Resolving for 10.6.&lt;br/&gt;
Committed revision 800523 with this fix and the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;.  I would like to backport to 10.5, but will wait until decisions are made about the release and will update fix versions at that time if I do the backport.&lt;/p&gt;</comment>
                            <comment id="12739677" author="kmarsden" created="Wed, 5 Aug 2009 20:01:52 +0100"  >&lt;p&gt;See related comment related to affects version in:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4337?focusedCommentId=12739680&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12739680&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-4337?focusedCommentId=12739680&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12739680&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12740189" author="espinha" created="Thu, 6 Aug 2009 19:35:03 +0100"  >&lt;p&gt;Per Kathey&apos;s request I have merged both &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4310&quot; title=&quot;Closing a prepared statement with an embedded   XAConnection can cause the statement to be reprepared and errors related to missing dependencies. This can interfere with network server closeSession()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4310&quot;&gt;&lt;del&gt;DERBY-4310&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt; into the 10.5 branch. To do so, I also had to merge the revision 793089 which contains Kathey&apos;s changes to XATest.&lt;/p&gt;

&lt;p&gt;After both merges, the XATest ran fine with no failures whatsoever. I am now running suites.All with these changes on.&lt;/p&gt;

&lt;p&gt;The commands used for the merge were, by this order:&lt;br/&gt;
svn merge -r 793088:793089 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -r 800522:800523 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12740271" author="kmarsden" created="Thu, 6 Aug 2009 23:04:04 +0100"  >&lt;p&gt;Rick, should I put this into the 10.5 branch or wait until after you cut the new release candidate? &lt;/p&gt;</comment>
                            <comment id="12740639" author="kmarsden" created="Fri, 7 Aug 2009 18:24:50 +0100"  >&lt;p&gt;Changing title to be more descriptive.&lt;/p&gt;</comment>
                            <comment id="12740647" author="espinha" created="Fri, 7 Aug 2009 18:40:23 +0100"  >&lt;p&gt;I was running suites.All yesterday but unfortunately the power went out and my VM died overnight. Still, I was noticing a very odd symptom with the run being extremely slow and with several errors along the way. This is a symptom I am facing again today as I am repeating the run. &lt;/p&gt;

&lt;p&gt;It is possible that it is somehow my code tree that is damaged so when this is done I&apos;ll be checking out the 10.5 trunk again and repeat at least the failing tests. If these failures persist we might want to hold on on committing this code to 10.5.&lt;/p&gt;</comment>
                            <comment id="12740748" author="espinha" created="Fri, 7 Aug 2009 22:24:59 +0100"  >&lt;p&gt;Kathey pointed me to a merge that I was missing for the 10.5 backport. After I merged this last revision and rebuilt, suites.All ran fine with one failure that looks unrelated. I got a failure on testStartStopManagementFromApplication in ManagementMBeanTest and upon rerunning this one test, I got no failures.&lt;/p&gt;

&lt;p&gt;I think it is safe to chalk this up as a random occurrence and do the merge.&lt;/p&gt;

&lt;p&gt;To wrap up, the following merge commands must be issued:&lt;br/&gt;
svn merge -r 793088:793089 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -r 800522:800523 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;br/&gt;
svn merge -r 794105:794106 &lt;a href=&quot;https://svn.apache.org/repos/asf/db/derby/code/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/db/derby/code/trunk&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12740768" author="espinha" created="Fri, 7 Aug 2009 23:32:28 +0100"  >&lt;p&gt;I&apos;ve also ran derbyall with no failures.&lt;/p&gt;</comment>
                            <comment id="12741260" author="kristwaa" created="Mon, 10 Aug 2009 11:53:27 +0100"  >&lt;p&gt;FYI, I started a run before the weekend, just porting the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4310&quot; title=&quot;Closing a prepared statement with an embedded   XAConnection can cause the statement to be reprepared and errors related to missing dependencies. This can interfere with network server closeSession()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4310&quot;&gt;&lt;del&gt;DERBY-4310&lt;/del&gt;&lt;/a&gt; fix. It took almost 95 hours to complete suites.All &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ( I saw 7 failures and 30 errors)&lt;br/&gt;
Glad to see that issue has been fixed!&lt;/p&gt;</comment>
                            <comment id="12741380" author="espinha" created="Mon, 10 Aug 2009 16:40:07 +0100"  >&lt;p&gt;Likewise, this issue has also been merged to the 10.5 branch. Closing it.&lt;/p&gt;</comment>
                            <comment id="12749184" author="mamtas" created="Sat, 29 Aug 2009 22:19:19 +0100"  >&lt;p&gt;Merged changes into 10.4 codeline using revision 809201.&lt;/p&gt;</comment>
                            <comment id="12750079" author="mamtas" created="Tue, 1 Sep 2009 21:15:27 +0100"  >&lt;p&gt;Backported the changes into 10.3 codeline using revision 810210.&lt;/p&gt;</comment>
                            <comment id="12754177" author="mamtas" created="Fri, 11 Sep 2009 16:44:30 +0100"  >&lt;p&gt;Backported changes into 10.2.2.1 codeline using revision 813882.&lt;br/&gt;
Had to hand write the tests in XATest because that test has not been converted to junit test in 10.2 codeline and hence the merge on it didn&apos;t work.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12422507">DERBY-4155</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12432230">DERBY-4337</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12430250">DERBY-4304</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12432081">DERBY-4334</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12414812" name="DERBY-4310-1.diff" size="24531" author="espinha" created="Tue, 28 Jul 2009 22:51:41 +0100"/>
                            <attachment id="12415165" name="DERBY-4310-fix.patch" size="3835" author="espinha" created="Fri, 31 Jul 2009 20:44:41 +0100"/>
                            <attachment id="12414460" name="DERBY-4310.diff" size="3303" author="espinha" created="Fri, 24 Jul 2009 19:32:05 +0100"/>
                            <attachment id="12414131" name="ReproDerby4310.java" size="3919" author="kmarsden" created="Tue, 21 Jul 2009 20:19:29 +0100"/>
                            <attachment id="12414030" name="ReproDerby4310.java" size="3720" author="kmarsden" created="Mon, 20 Jul 2009 21:20:37 +0100"/>
                            <attachment id="12414028" name="ReproDerby4310.java" size="3262" author="espinha" created="Mon, 20 Jul 2009 20:37:16 +0100"/>
                            <attachment id="12414133" name="ReproEmbeddedDerby4310.java" size="3354" author="kmarsden" created="Tue, 21 Jul 2009 20:19:29 +0100"/>
                            <attachment id="12414124" name="Tests.zip" size="6667" author="espinha" created="Tue, 21 Jul 2009 19:18:41 +0100"/>
                            <attachment id="12413656" name="XATestLog.tar.gz" size="111223" author="espinha" created="Thu, 16 Jul 2009 08:48:07 +0100"/>
                            <attachment id="12414458" name="console.out.txt" size="28219" author="espinha" created="Fri, 24 Jul 2009 19:32:05 +0100"/>
                            <attachment id="12414459" name="derby.log.tar.gz" size="76877" author="espinha" created="Fri, 24 Jul 2009 19:32:05 +0100"/>
                            <attachment id="12414511" name="outall.txt" size="578500" author="espinha" created="Sat, 25 Jul 2009 12:30:32 +0100"/>
                            <attachment id="12414132" name="utilXid.java" size="1524" author="kmarsden" created="Tue, 21 Jul 2009 20:19:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Jul 2009 17:21:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24175</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ji7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36978</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>