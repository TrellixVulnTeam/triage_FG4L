<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5246/DERBY-5246.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5246] Simplify bytecode generation for concatenation operator</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5246</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;ConcatenationOperatorNode generates bytecode that ensures the result object is not null before calling the method that implements the operator. This breaks the pattern used by other operators (which ensures that the result object is not null inside the method that implements the operator, not in the generated bytecode), and it unnecessarily complicates the code in BinaryOperatorNode.&lt;/p&gt;

&lt;p&gt;The comments indicate that the current approach was chosen to prevent the null check from happening at execution time, but the generated bytecode does perform the null check at execution time, so generating byte code for it shouldn&apos;t have any real benefit over writing Java code for it. In general, implementing as much as possible of the execution time code as Java code is preferred to implementing it directly as bytecode because it&apos;s easier to read and debug Java code, and because the generated bytecode cannot be shared between execution plans and take more memory.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12508295">DERBY-5246</key>
            <summary>Simplify bytecode generation for concatenation operator</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 May 2011 11:09:22 +0100</created>
                <updated>Thu, 30 Jun 2011 10:21:43 +0100</updated>
                            <resolved>Thu, 26 May 2011 13:25:31 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13039058" author="knutanders" created="Wed, 25 May 2011 11:17:28 +0100"  >&lt;p&gt;The attached patch removes the generation of the null check in ConcatenationOperatorNode and removes the special handling of concatenation that was required in BinaryOperatorNode because of it.&lt;/p&gt;

&lt;p&gt;The patch also changes the implementations of concatenate() in SQLChar, SQLLongvarchar and SQLBinary to work if a null value is passed in for the result object. This makes the methods match the javadoc comments in the interfaces (StringDataValue and BitDataValue), which state that the result parameter in the concatenate() methods should accept null values.&lt;/p&gt;

&lt;p&gt;The regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13039671" author="knutanders" created="Thu, 26 May 2011 13:25:31 +0100"  >&lt;p&gt;Committed revision 1127886.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12480395" name="concat.diff" size="5072" author="knutanders" created="Wed, 25 May 2011 11:17:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31566</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ftr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36382</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>