<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:47:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-582/DERBY-582.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-582] Dynamic parameter should be allowed to be the operand of unary operator &quot;-&quot;. Derby throws exception 42X36: The &apos;-&apos; operator is not allowed to take a ? parameter as an operand.&quot;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-582</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A simple test program which uses dynamic parameter for unary operator &quot;-&quot; fails with an exception. Following is the snippet of the code&lt;br/&gt;
	ps = con.prepareStatement(&quot;select * from t1 where c11 = -?&quot;);&lt;br/&gt;
	ps.setInt(1,1);&lt;br/&gt;
	rs = ps.executeQuery();&lt;br/&gt;
The prepareStatement call fails with following exception&lt;br/&gt;
SQLSTATE(42X36):ERROR 42X36: The &apos;-&apos; operator is not allowed to take a ? parameter as an operand.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12317156">DERBY-582</key>
            <summary>Dynamic parameter should be allowed to be the operand of unary operator &quot;-&quot;. Derby throws exception 42X36: The &apos;-&apos; operator is not allowed to take a ? parameter as an operand.&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Sep 2005 16:18:34 +0100</created>
                <updated>Tue, 1 Nov 2005 04:14:52 +0000</updated>
                            <resolved>Tue, 1 Nov 2005 04:14:10 +0000</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12330493" author="mamtas" created="Tue, 27 Sep 2005 04:04:37 +0100"  >&lt;p&gt;The patch fixes the problem and allows parameters for unary minus and unary plus. The parameter will be bound to DOUBLE. Can a committer please commit this if it looks good?&lt;/p&gt;</comment>
                            <comment id="12331347" author="mamtas" created="Wed, 5 Oct 2005 14:22:18 +0100"  >&lt;p&gt;This patch tries to support the type setting of unary-/unary+ parameter similar to what is done for ? parameter ie the type of the -?/&lt;ins&gt;? will be dependent on the context in which it is used. And hence the type setting rules for -?/&lt;/ins&gt;? will be same as for a regular ? parameter. &lt;/p&gt;

&lt;p&gt;In order to achieve this, I have changed UnaryOperatorNode to extend ParameterNode. In addition, it has the method isParameterNode which will return true only if its operand is an instance of ParameterNode and it&apos;s method isParameterNode returns true AND the unary operator is of the type unary-/unary+. What this means is that just because a class is instance of ParameterNode doesn&apos;t automatically mean it indeed is a ParameterNode. An additional check of the isParameterNode is required to make sure there is a parameter underneath. This change in rule has required adding a new class called HasParameterNodeVisitor which gets used by the sqlgrammar to make sure there are no parameters allowed in views and triggers. HasParameterNodeVisitor checks if the node is of the type ParameterNode AND checks if the isParameterNode returns true. If yes, then the HasParameterNodeVisitor&apos;s visit method will return that node and grammar will throw an exception for parameter usage in views/triggers. &lt;/p&gt;

&lt;p&gt;One additional change is to not do any binding of -?/&lt;ins&gt;? if the type of the parameter is not yet determined. When the type does get set using setDescriptor method, it will call the binding code on the -?/&lt;/ins&gt;?. &lt;br/&gt;
An example here will make things clearer select * from t1 where c1 = -? &lt;br/&gt;
During the bind phase of compilation, BinaryOperatorNode&apos;s bindExpression method gets called. This method first calls bindExpression on c1 and then it calls bindExpression on -?. But at this point, we don&apos;t know the type of -? and hence the bindExpression of UnaryOperatorNode simply returns w/o trying to do any binding. After the binding calls on the 2 operands, bindExpression in BinaryOperatorNode checks if the right operand is a parameter and if so, it calls setDescriptor method on it to set it&apos;s type to the type of the left operand. This is when the actual binding of -? will happen and this is accomplished by overwriting the setDescriptor method in the UnaryArithmeticOperatorNode. This method after setting the type of -? calls the binding code on it which among other checks will make sure that the type is getting set to a numeric type. &lt;/p&gt;

&lt;p&gt;I hope this explanation, the comments in the code and the new test makes it easier to understand the patch.&lt;/p&gt;

&lt;p&gt;svn stat&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ParameterNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\UnaryDateTimestampOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\UnaryArithmeticOperatorNode.java &lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\CollectNodesVisitor.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\HasNodeVisitor.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\sqlgrammar.jj &lt;br/&gt;
A      java\engine\org\apache\derby\impl\sql\compile\HasParameterNodeVisitor.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\UnaryOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ValueNode.java &lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\build.xml&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\lang\unaryArithmeticDynamicParameter.java&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\unaryArithmeticDynamicParameter.out &lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\suites\derbylang.runall&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\suites\derbynetmats.runall&lt;/p&gt;

&lt;p&gt;I have run all the tests and no new failures. I have added a new test which is part of this patch. The patch is attached to the JIRA entry. Any comments, feedback would be great.&lt;/p&gt;
</comment>
                            <comment id="12331865" author="mamtas" created="Wed, 12 Oct 2005 16:24:33 +0100"  >&lt;p&gt;I have a new patch to allow dynamic parameters for unary minus and unary plus operator. This is based on the feedback from Jeff and Dan. The unary minus/plus parameters will determine their types depending on the context. For this, I have added requiresTypeFromContext to ValueNode which always returns false. ParameterNode always returns true for this method. UnaryOperatorNode&apos;s requiresTypeFromContext calls the operand&apos;s requiresTypeFromContext if operand is not null. SimpleStringOperatorNode(subclass of UnaryOperatorNode) ends up overriding this method and returns false because functions lower and upper are always typed to String and do not need to get their type from the context.&lt;/p&gt;

&lt;p&gt;I have added 2 methods to UnaryOperatorNode.java, namely getParameterOperand() and isUnaryMinusOrPlusWithParameter(). There are few places in engine, where we need to access the underlying parameter and that is when getParameterOperand() gets used. This is required to directly call the ParameterNode methods such as  getDefaultValue(), getParameterNumber() etc isUnaryMinusOrPlusWithParameter() is required so that engine can catch edge cases like select * from t1 where -? and c11=c11 or &lt;ins&gt;? ie such a use of -?/&lt;/ins&gt;? should be disallowed, same as what we do for ? parameters.&lt;/p&gt;

&lt;p&gt;Also, as mentioned in the earlier review packages, the binding code for unary minus/unary plus dynamic parameters will not be executed until the type of these parameters can be determined. The type gets detemined when the setType method is called. For this reason, setType method is overridden in UnaryArithmeticOperatorNode. After setting the type, this method calls the binding code to make sure all the bind time rules are enforced.&lt;/p&gt;

&lt;p&gt;I have also consolidated the 2 type setting methods into one, namely setType. This setType is overwritten in ParameterNode so it can also set the type in the array of parameter types in StatementNode. Hopefully, this will make the type setting code much cleaner. &lt;/p&gt;

&lt;p&gt;I have added several new tests to check this functionality and these tests are in unaryArithmeticDynamicParameter.java. The test will get run in both embedded and network server modes.&lt;/p&gt;

&lt;p&gt;svn stat&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\CastNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ResultSetNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\TernaryOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\HasVariantValueNodeVisitor.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ParameterNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\LikeEscapeOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\Predicate.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\BinaryOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\StaticClassFieldReferenceNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\MethodCallNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\SelectNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\SubqueryNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ResultColumn.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\VirtualColumnNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ColumnDefinitionNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\UnaryArithmeticOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ConditionalNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\TimestampOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\SimpleStringOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\JoinNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\SQLToJavaValueNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\BinaryRelationalOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\HashJoinStrategy.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\FromBaseTable.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\IsNullNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\SetOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ValueNodeList.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\JavaValueNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\sqlgrammar.jj&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\CoalesceFunctionNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\BaseColumnNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\BinaryLogicalOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\LengthOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ConcatenationOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\UnaryOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\PredicateList.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\BinaryListOperatorNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\NonStaticMethodCallNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ColumnReference.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ValueNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\ResultColumnList.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\sql\compile\StaticMethodCallNode.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\sql\compile\OptimizablePredicate.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\sql\compile\JoinStrategy.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\build.xml&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\tests\lang\unaryArithmeticDynamicParameter.java&lt;br/&gt;
A      java\testing\org\apache\derbyTesting\functionTests\master\unaryArithmeticDynamicParameter.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\suites\derbylang.runall&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\suites\derbynetmats.runall&lt;/p&gt;

&lt;p&gt;The patch is attached to the JIRA entry. As always, any feedback will be very appreciated.&lt;/p&gt;</comment>
                            <comment id="12356429" author="mamtas" created="Tue, 1 Nov 2005 04:14:10 +0000"  >&lt;p&gt;Satheesh checked in the fix for this in 10.2 codeline with revision r329295.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12314570" name="Derby582UnaryDynamic092605.txt" size="5422" author="mamtas" created="Tue, 27 Sep 2005 04:04:37 +0100"/>
                            <attachment id="12314737" name="Derby582UnaryMinusDynamic104005.txt" size="30993" author="mamtas" created="Wed, 5 Oct 2005 14:22:18 +0100"/>
                            <attachment id="12314833" name="Derby582UnaryParameter101105.txt" size="93386" author="mamtas" created="Wed, 12 Oct 2005 16:24:33 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12317709">DERBY-608</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22029</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17lj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40881</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>