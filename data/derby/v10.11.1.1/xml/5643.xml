<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:10 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5643/DERBY-5643.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5643] Occasional hangs in replication tests on Linux</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5643</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;We occasionally see hangs in the replication tests on Linux. For example here: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sles/1298470-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/testlog/sles/1298470-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This test run was stuck in tearDown() after ReplicationRun_Local_Derby4910.testSlaveWaitsForMaster(). (Waiting for Thread.join() to return.)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12545792">DERBY-5643</key>
            <summary>Occasional hangs in replication tests on Linux</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Mar 2012 08:37:45 +0000</created>
                <updated>Tue, 24 Jul 2012 18:28:04 +0100</updated>
                            <resolved>Thu, 22 Mar 2012 11:38:09 +0000</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Replication</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13225936" author="knutanders" created="Fri, 9 Mar 2012 08:40:43 +0000"  >&lt;p&gt;The thread dump in the above link was truncated. Attaching a file with the full thread dump.&lt;/p&gt;

&lt;p&gt;Unfortunately, I only have the thread dump for the main JUnit process and not for the two sub-processes (master server and slave server). I&apos;ll try to get a thread dump for those processes too when it happens the next time.&lt;/p&gt;</comment>
                            <comment id="13225969" author="kristwaa" created="Fri, 9 Mar 2012 09:48:21 +0000"  >&lt;p&gt;I see that the handling of sub-process streams isn&apos;t optimal in ReplicationRun. This may lead to problems as in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5608&quot; title=&quot;BaseTestCase.readProcessOutput should read getInputStream()  and getErrorStream() in separate threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5608&quot;&gt;&lt;del&gt;DERBY-5608&lt;/del&gt;&lt;/a&gt;. It would be good to fix this once further investigation has been carried out.&lt;/p&gt;</comment>
                            <comment id="13226041" author="knutanders" created="Fri, 9 Mar 2012 12:30:50 +0000"  >&lt;p&gt;I ran ReplicationSuite in a loop on one of the machines where this was seen, and after a couple of iterations it was stuck. I ran the suite with derby.tests.repltrace=true, and the trace indicated that the slave server used more than 3 minutes to get up and accept connections. ReplicationRun.startServer() pings the server for 75 seconds before it gives up, so it gave up before the server was up. The attempt to shut down the slave server also failed, because a connection to the server could not be established. tearDown() ended up waiting for the server to stop, and the server of course didn&apos;t stop since it never received the shutdown command.&lt;/p&gt;

&lt;p&gt;So the question is: Why does it take 3 minutes for the server to start accepting connections?&lt;/p&gt;</comment>
                            <comment id="13226175" author="kristwaa" created="Fri, 9 Mar 2012 16:19:35 +0000"  >&lt;p&gt;Just another data point: I ran the replication suite 100 times on Linux (Fedora) without seeing the hang. I consistently took about 3 minutes per iteration. I ran with 1.6.0_22 (IcedTea6 1.10.4), sane Derby build.&lt;/p&gt;</comment>
                            <comment id="13226205" author="knutanders" created="Fri, 9 Mar 2012 17:09:33 +0000"  >&lt;p&gt;The call that takes three minutes is ServerSockedFactory.createServerSocket().&lt;/p&gt;

&lt;p&gt;I notice that the replication test cases wait until they see EOF on stdout and stderr from the forked processes. However, they do not actually check that the forked processes have terminated before they continue. Maybe this causes a problem if the old server process hasn&apos;t completely released all resources when the new server process starts.&lt;/p&gt;

&lt;p&gt;The attached patch adds a call to Process.waitFor() after the streams have been exhausted. It might be unrelated, but I&apos;m running ReplicationSuite in a loop now to see if it helps.&lt;/p&gt;</comment>
                            <comment id="13226330" author="knutanders" created="Fri, 9 Mar 2012 19:07:16 +0000"  >&lt;p&gt;The previous patch didn&apos;t help. The test still got stuck rather quickly. But I found another place where we didn&apos;t wait for the process to complete. Attaching an updated patch to account for that. With the latest patch, I&apos;ve had ReplicationSuite running in a loop for 1 1/2 hours without seeing a hang. I usually see the hang in less than half an hour, so it looks promising.&lt;/p&gt;</comment>
                            <comment id="13227367" author="knutanders" created="Mon, 12 Mar 2012 08:31:01 +0000"  >&lt;p&gt;The test eventually hung with the waitFor-2.diff patch too. It took longer than it did before, so maybe it helped, but that may also be coincidental. In any case, the changes should improve resource handling in the replication tests, so I committed the patch with revision 1299573.&lt;/p&gt;</comment>
                            <comment id="13227371" author="knutanders" created="Mon, 12 Mar 2012 08:40:20 +0000"  >&lt;p&gt;In the latest test cycle, the compatibility tests hung on one of the platforms where we&apos;ve seen hangs in the replication tests, so the problem doesn&apos;t seem to be specific to the replication tests.&lt;/p&gt;

&lt;p&gt;I found this bug report, which seems to match what we&apos;re seeing with createServerSocket() taking more than three minutes: &lt;a href=&quot;http://bugs.sun.com/view_bug.do?bug_id=6483406&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/view_bug.do?bug_id=6483406&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bug is fixed in Java 7, which is consistent with what we&apos;re seeing in the nightlies (I have only found occurrences with Java 5 and Java 6).&lt;/p&gt;

&lt;p&gt;Perhaps we could work around this problem in the tests by increasing the timeout for server startup to more than 3 minutes. Since we stop waiting as soon as the server is up, this shouldn&apos;t slow down test execution unless there actually is a problem with starting the server.&lt;/p&gt;</comment>
                            <comment id="13227403" author="kristwaa" created="Mon, 12 Mar 2012 10:08:02 +0000"  >&lt;p&gt;+1 on the extended wait.&lt;br/&gt;
You could consider adding an alarm(...) if waiting for longer than the current limit, but I don&apos;t know if it&apos;s worth it since I don&apos;t know how many people are running the tests to qualify Derby on their machine/platform.&lt;/p&gt;</comment>
                            <comment id="13228445" author="knutanders" created="Tue, 13 Mar 2012 15:33:07 +0000"  >&lt;p&gt;Attaching a new patch (higher-timeout.diff) that changes the default server startup timeout in NetworkServerTestSetup to four minutes. If the server startup eventually succeeds, but takes more than one minute, it&apos;ll call alarm(...) to tell that something isn&apos;t quite as it should be, but it won&apos;t actually fail unless it has been unsuccessful for four minutes.&lt;/p&gt;

&lt;p&gt;The patch also makes the replication tests and the compatibility tests use NetworkServerTestSetup&apos;s helper methods to ping the server while waiting for it to start. This makes it possible to remove some duplicate logic from those tests, and makes the tests behave in a more consistent manner.&lt;/p&gt;

&lt;p&gt;I&apos;ve run derbyall, suites.All and the compatibility tests successfully with the patch. I&apos;ve also had the replication tests running in a loop for four hours on a machine where I saw frequent hangs before. No hangs so far, but I&apos;ve seen two occurrences of the alarm message, which indicates that the condition that previously made the tests hang did happen:&lt;/p&gt;

&lt;p&gt;ALARM: Very slow server startup: 189735 ms&lt;br/&gt;
ALARM: Very slow server startup: 189850 ms&lt;/p&gt;</comment>
                            <comment id="13229063" author="knutanders" created="Wed, 14 Mar 2012 07:46:50 +0000"  >&lt;p&gt;I had the replication tests running for 20 hours without seeing hangs. Nine times the warning about very slow server startup was printed.&lt;/p&gt;

&lt;p&gt;Committed revision 1300475.&lt;/p&gt;</comment>
                            <comment id="13232537" author="knutanders" created="Mon, 19 Mar 2012 10:37:21 +0000"  >&lt;p&gt;The compatibility tests have had problems in the nightlies after this fix went in. I suspect that they are caused by the changes made in this issue, although I did run the compatibility tests successfully in my environment before committing. I&apos;ll investigate.&lt;/p&gt;</comment>
                            <comment id="13232750" author="knutanders" created="Mon, 19 Mar 2012 17:28:37 +0000"  >&lt;p&gt;I&apos;ve found some problems with the previous changes. I&apos;m not sure if that&apos;s what causing problems in the nightly testing, though.&lt;/p&gt;

&lt;p&gt;The replication tests and the compatibility tests now call pingForServerUp() and wait until the server is up or a timeout happens, but they don&apos;t fail if a timeout happens. The attached patch (fail-on-timeout.diff) makes those tests check the return value of pingForServerUp() and fail if the server did not come up in time.&lt;/p&gt;

&lt;p&gt;The patch also changes how AutoloadTest.testAutoNetworkServerBoot() verifies that the server did not come up. In the existing code, it pings until the timeout happens, and then returns successfully. This took 40 seconds before the timeout was changed, and now it takes 4 minutes. The timeout is not supposed to affect tests under normal operation, so it should not have pinged that long in the first place.&lt;/p&gt;

&lt;p&gt;The patch makes the test wait for a shorter time (5 seconds) before concluding that the server didn&apos;t come up. This may cause bugs to go unnoticed on very slow machines (if the server comes up when it shouldn&apos;t, but it takes more than 5 seconds), but it will speed up the test considerably and still detect the problem on reasonably fast machines.&lt;/p&gt;</comment>
                            <comment id="13233333" author="knutanders" created="Tue, 20 Mar 2012 09:51:34 +0000"  >&lt;p&gt;Committed revision 1302811.&lt;/p&gt;</comment>
                            <comment id="13233822" author="mikem" created="Tue, 20 Mar 2012 21:48:29 +0000"  >&lt;p&gt;got 7 failures in nightly tests on ibm16 and ibm17.  are these the kinds of problems you expect to be fixed by changes in this JIRA?  If so I won&apos;t bother to open a new JIRA:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm16/1301855-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm16/1301855-derbyall_diff.txt&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm17/1301855-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm17/1301855-derbyall_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13233919" author="knutanders" created="Tue, 20 Mar 2012 23:02:50 +0000"  >&lt;p&gt;The fix only touched helper methods used by the JUnit tests, so I don&apos;t think tests in derbyall will be affected by the fix. A new JIRA would probably be in order.&lt;/p&gt;</comment>
                            <comment id="13233935" author="knutanders" created="Tue, 20 Mar 2012 23:20:30 +0000"  >&lt;p&gt;I mentioned in an earlier comment that the compatibility tests in Oracle&apos;s nightly test runs had problems after the fix went in. That wasn&apos;t quite true. When looking closer at the test reports, it turned out it was suites.All that had problems. It looks like it got stuck in the replication tests on all platforms except Windows. And the tinderbox has hung in a similar state since Thursday (it did however run successfully twice after the fix for this issue was checked in, but I have no doubt it was the changes in this issue that caused the problems). I haven&apos;t been able to reproduce these hangs in my own environment yet.&lt;/p&gt;

&lt;p&gt;The nightly tests haven&apos;t run with the latest fix for this issue yet, because the Svn EU mirror was down when the tests were supposed to start last night. Looks like they&apos;re running now, and so far two Solaris platforms have completed their suites.All runs - &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/Limited/testSummary-1302996.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.6/testing/Limited/testSummary-1302996.html&lt;/a&gt;. Not sure if that means the problem is fixed, as it appears to be intermittent. I guess we know more in a couple of hours when the results from the other platforms appear.&lt;/p&gt;</comment>
                            <comment id="13235513" author="knutanders" created="Thu, 22 Mar 2012 11:38:09 +0000"  >&lt;p&gt;There haven&apos;t been any failures in the last two nightly test cycles, so it looks like the last fix sorted out the problems. Resolving again.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12518914" name="fail-on-timeout.diff" size="4071" author="knutanders" created="Mon, 19 Mar 2012 17:28:37 +0000"/>
                            <attachment id="12518193" name="higher-timeout.diff" size="13748" author="knutanders" created="Tue, 13 Mar 2012 15:33:06 +0000"/>
                            <attachment id="12517691" name="thread-dump.txt" size="12308" author="knutanders" created="Fri, 9 Mar 2012 08:40:41 +0000"/>
                            <attachment id="12517762" name="waitFor-2.diff" size="2344" author="knutanders" created="Fri, 9 Mar 2012 19:07:16 +0000"/>
                            <attachment id="12517746" name="waitFor.diff" size="1022" author="knutanders" created="Fri, 9 Mar 2012 17:09:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Mar 2012 09:48:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>230975</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0arj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35562</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>