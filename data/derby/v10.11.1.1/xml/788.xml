<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-788/DERBY-788.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-788] &apos;store/encryptionKey.sql&apos; fails on Solaris 10</title>
                <link>https://issues.apache.org/jira/browse/DERBY-788</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The &apos;store/encryptionKey.sql&apos; test fails on Solaris 10.&lt;br/&gt;
Investigation revealed that the failure is caused by a difference in behavior between the &apos;SunPCKS11-Solaris&apos; provider and other providers (tested with &apos;SunJCE&apos; and &apos;IBMJCE&apos;).&lt;/p&gt;

&lt;p&gt;The initialization of the DES cipher fails because the 16 byte key (specified in the test) is not translated to a 8 byte DES key by SecretKeyFactory.translateKey(). This might be a bug in the provider (I don&apos;t know the spec). Enquiries are being made.&lt;/p&gt;

&lt;p&gt;The exception is being thrown from the constructor of &apos;impl.services.jce.JCECipherProvider&apos;.&lt;/p&gt;</description>
                <environment>Solaris 10 (generic hardware)&lt;br/&gt;
Sun JDK 5.0 with the &amp;#39;SunPCKS11-Solaris&amp;#39; Java Security provider</environment>
        <key id="12327170">DERBY-788</key>
            <summary>&apos;store/encryptionKey.sql&apos; fails on Solaris 10</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jan 2006 00:00:30 +0000</created>
                <updated>Mon, 29 Jun 2009 23:43:23 +0100</updated>
                            <resolved>Sat, 29 Apr 2006 02:08:51 +0100</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.1.2.1</version>
                                    <fixVersion>10.1.3.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Services</component>
                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12362838" author="kristwaa" created="Mon, 16 Jan 2006 19:29:49 +0000"  >&lt;p&gt;I got a response to my inquiry about this issue:&lt;/p&gt;

&lt;p&gt;&quot;...it is not clearly defined how SecretKeyFactories and Ciphers behave when passed a key that is &quot;too long&quot;. In most cases I would expect the two to behave the same. That means that even though your technique worked for DES and the providers you have tried, it may not work for other algorithms or providers.&quot;&lt;/p&gt;

&lt;p&gt;This raises a few questions:&lt;br/&gt;
1) Is the approach used by Derby valid? (wrt. what we can expect from crypto providers)&lt;br/&gt;
Why allow the user to believe, say, a  512 byte key is used, when in fact only the first 8 bytes are used for encrypting/decrypting the database? Are we able to enforce a valid key length for a given algorithm? (without hardcoding limits in Derby code)&lt;/p&gt;

&lt;p&gt;2) Why does the test use a 16 byte key for the DES algorithm?&lt;br/&gt;
Should it be changed to 8 byte, or is the test written to test the behavior of Derby when the key is not according to the specifications for the given algorithm?&lt;/p&gt;

&lt;p&gt;I will take no further action until I get some feedback. Until a) the &apos;SunPCKS11-Solaris&apos; is changed, b) the test is changed or c) another default provider is set for Solaris10, the test will continue to fail on Solaris10 (and probably higher versions).&lt;/p&gt;</comment>
                            <comment id="12365799" author="kristwaa" created="Fri, 10 Feb 2006 08:45:48 +0000"  >&lt;p&gt;Added component &apos;Regression Test Failure&apos;, as this test fails on Solaris10 with the &apos;SunPCKS11-Solaris&apos; Java Security provider (which is the default provider). Will fail until the test is changed or the provider is changed/fixed. See earlier comment for more details.&lt;/p&gt;</comment>
                            <comment id="12366257" author="skambha" created="Tue, 14 Feb 2006 07:50:07 +0000"  >&lt;p&gt;there was some  discussion on the derbydev  list, cut &amp;amp; paste. &lt;br/&gt;
Kristian Waagan wrote:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Actually, the test won&apos;t be able to create the encrypted database, which is the initial step for almost all test cases exercised by the ij script.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; An alternative solution would be to reduce the key length, as I have described in the Jira issue. Since there are no comments about the key length, I do not know if the test was written to test the handling of keys that are too long, or if the key is just too long (for the specified encryption algorithm) for some other reason. We could perhaps modify the test to use a key of correct length for all test cases except one, and then use Myrna&apos;s trick of using sed to mask out the differing lines.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Just for information, the code block where things go wrong is a try-catch. If the code inside the try block fails, a security provider method is executed in the catch block to translate the apparently invalid key to a valid key. Then the same steps as those inside the try block are retried. If it fails again (but this time in the catch block - the code is duplicated), i.e. the key was/could not be translated to a valid key, the exception from the Cipher.init method is wrapped and thrown.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I would appreciate some more information of what the test is actually written to test before I go ahead and change it!&lt;/p&gt;


&lt;p&gt;I looked at the test.  As per the comments in the test, the tests are for testing using encryption using the encryptionKey.  I dont think it is trying to pass in an invalid key length for DES.&lt;br/&gt;
So some possible options:&lt;br/&gt;
1)  how about changing the  algorithm to use AES , and in AES the cipher length is 16bytes.  Is that available with the &apos;SunPCKS11-Solaris&apos;  ?&lt;br/&gt;
2)  change the key length for DES ( as you suggest).&lt;/p&gt;

&lt;p&gt;I&apos;ll look at the derby code too and see if we can/should be doing something else for DES or other algorithms and report back.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Sunitha. &lt;/p&gt;</comment>
                            <comment id="12366318" author="kristwaa" created="Tue, 14 Feb 2006 19:03:08 +0000"  >&lt;p&gt;According to the comment, Sunitha is having a look at the code/test. Awaiting feedback before we decide what to do with the test.&lt;/p&gt;</comment>
                            <comment id="12366386" author="skambha" created="Wed, 15 Feb 2006 06:52:18 +0000"  >&lt;p&gt;Since the test is testing the codepath when encryptionKey attribute is used, changing the test so it passes with the JCE provider on Solaris (SunPCKS11-Solaris) should be ok and I think this is what we should do ( either implement 1 or 2)&lt;/p&gt;

&lt;p&gt;1) change test to either use DES with 8byte encryptionKey &lt;br/&gt;
2) change test to use AES algorithm with 16byte encryptionKey provided AES support is available with the PCKS11-Solaris. &lt;/p&gt;

&lt;p&gt;That should solve the test failure issue and we would still be testing this case for encryptionKey. &lt;/p&gt;

&lt;p&gt;Just as an fyi , I tried the first connection url with AES and it works ok with the Sun JCE with jdk 142 on windows. &lt;/p&gt;

&lt;p&gt;=====================&lt;br/&gt;
That said, I think it is interesting that we cant expect the translateKey to always translate the key for us. &lt;/p&gt;

&lt;p&gt;I found this in the java api for SecretKeySpec.&lt;br/&gt;
public SecretKeySpec(byte[] key,&lt;br/&gt;
                     String algorithm)Constructs a secret key from the given byte array. &lt;br/&gt;
This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if key is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific key specification class (in this case: DESKeySpec) should be used. &lt;/p&gt;

&lt;p&gt;In derby code, there is &lt;br/&gt;
	// Since the key may be a series of bytes generated by an arbitary means&lt;br/&gt;
	// we need to translate it into a key suitable for the algorithm.&lt;br/&gt;
	secretKey = skf.translateKey(new SecretKeySpec(secretKey.getEncoded(), secretKey.getAlgorithm()));&lt;/p&gt;

&lt;p&gt;I think you are right  about - that we cannot assume that invalid key checks would not happen with the call. I looked at the Java api for 1.4.2 but I didnt find any AES specific KeySpec but found for others like DES and DESede. &lt;/p&gt;

&lt;p&gt;I think we should open another jira so we can record what we learnt here so we can improve this.&lt;/p&gt;

&lt;p&gt;Thanks Kristian for your analysis and following up on this jira. &lt;/p&gt;</comment>
                            <comment id="12366388" author="skambha" created="Wed, 15 Feb 2006 06:58:23 +0000"  >&lt;p&gt;One question - does the exception come from the Cipher.init , or the (SecretKeyFactory) skf.translateKey method ?&lt;/p&gt;</comment>
                            <comment id="12366473" author="kristwaa" created="Wed, 15 Feb 2006 21:45:57 +0000"  >&lt;p&gt;For the cases I have tested, the exception comes from the Cipher.init method. The skf.translateKey seems to simply return what is passed in when it does not know what to do with the key. Note that the capabilities of the method depends on the implementation/provider.&lt;/p&gt;

&lt;p&gt;I tried using AES instead of DES, but got a few errors. I suspect they are only minor changes in the error message that are reported, but I have not investigated.&lt;/p&gt;

&lt;p&gt;I plan on rewriting this test to a JUnit test, but I am awaiting some JUnit framework commits. Then we could have the test run with both DES and AES with minimal changes and code duplication in the test.&lt;/p&gt;

&lt;p&gt;My suggestion is that we create a new Jira issue to track the general problem regarding use of the skf.translageKey method (as Sunitha suggested), and that the 16 byte key is replaced with a 8 byte key to stop the test from failing in the regression test on Solaris10. I will start/do the rewrite during a few days if I don&apos;t get pushback.&lt;/p&gt;</comment>
                            <comment id="12367015" author="kristwaa" created="Mon, 20 Feb 2006 18:24:58 +0000"  >&lt;p&gt;&apos;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-788&quot; title=&quot;&amp;#39;store/encryptionKey.sql&amp;#39; fails on Solaris 10&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-788&quot;&gt;&lt;del&gt;DERBY-788&lt;/del&gt;&lt;/a&gt;-1a.diff&apos; is a patch that replaces the 16 byte key with a 8 byte key for the DES encryption algorithm used in the test &apos;store/encryptionKey.sql&apos;. The test still exercises the intended parts of the Derby code (according to my own analysis and that of Sunitha). The patch makes the test stop failing on Solaris10 (with security provider &apos;SunPCKS11-Solaris&apos;) .&lt;/p&gt;

&lt;p&gt;One test case is changed; where it previously tested a key that was of incorrect length (longer than 8 bytes, shorter than 16), it now tests an incorrect key of the correct length. It is not possible to make the test pass on Solaris10 with a key of incorrect length, because keys of length less than 8 bytes are caught by a check in the code, and keys longer than 8 bytes cause the underlying security provider to fail (&apos;SunPCKS11-Solaris&apos;). This issue will be addressed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1001&quot; title=&quot;Rewrite &amp;#39;store/encryptionKey.sql&amp;#39; to a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1001&quot;&gt;&lt;del&gt;DERBY-1001&lt;/del&gt;&lt;/a&gt; (rewrite of test to a JUnit-test).&lt;/p&gt;

&lt;p&gt;Ran derbyall on Solaris10, which resulted in 6 known errors (some are already fixed according to the tinderbox test). &apos;store/encryptionKey.sql&apos; passed.&lt;/p&gt;</comment>
                            <comment id="12367926" author="knutanders" created="Mon, 27 Feb 2006 19:17:47 +0000"  >&lt;p&gt;I&apos;m planning to review and commit this patch.&lt;/p&gt;</comment>
                            <comment id="12367948" author="knutanders" created="Mon, 27 Feb 2006 22:10:50 +0000"  >&lt;p&gt;Patch looks good. store/encryptionKey.sql does not fail under&lt;br/&gt;
Solaris 10 / Sun JVM 1.5.0. Derbyall passes without errors.&lt;/p&gt;

&lt;p&gt;Committed revision 381333.&lt;/p&gt;</comment>
                            <comment id="12369481" author="kristwaa" created="Wed, 8 Mar 2006 23:55:59 +0000"  >&lt;p&gt;Linked to issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-788&quot; title=&quot;&amp;#39;store/encryptionKey.sql&amp;#39; fails on Solaris 10&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-788&quot;&gt;&lt;del&gt;DERBY-788&lt;/del&gt;&lt;/a&gt; with background information.&lt;/p&gt;</comment>
                            <comment id="12369482" author="kristwaa" created="Thu, 9 Mar 2006 00:00:16 +0000"  >&lt;p&gt;Fix verified. Created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1088&quot; title=&quot;Verify handling of invalid encryption keys&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1088&quot;&gt;DERBY-1088&lt;/a&gt; to track general issues/weaknesses in the way external encryption keys are handled.&lt;/p&gt;</comment>
                            <comment id="12376976" author="fuzzylogic" created="Sat, 29 Apr 2006 02:08:51 +0100"  >&lt;p&gt;Committed to 10.1 branch with revision 397972.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12329112">DERBY-1001</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12329978">DERBY-1088</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323188" name="DERBY-788-1a.diff" size="13402" author="kristwaa" created="Mon, 20 Feb 2006 18:24:58 +0000"/>
                            <attachment id="12323189" name="DERBY-788-1a.stat" size="171" author="kristwaa" created="Mon, 20 Feb 2006 18:24:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Feb 2006 07:50:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22148</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0vyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38996</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>