<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3456/DERBY-3456.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3456] Allow removing not null from collumns particpating in unique constraint.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3456</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Enable alter table to change a column that participates in a unique constraint to allow nulls.&lt;/p&gt;</description>
                <environment>all</environment>
        <key id="12389384">DERBY-3456</key>
            <summary>Allow removing not null from collumns particpating in unique constraint.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12386534">DERBY-3330</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anurag">Anurag Shekhar</assignee>
                                    <reporter username="anurag">Anurag Shekhar</reporter>
                        <labels>
                    </labels>
                <created>Sat, 23 Feb 2008 12:55:24 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:32 +0000</updated>
                            <resolved>Tue, 20 Oct 2009 20:15:32 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12572240" author="anurag" created="Mon, 25 Feb 2008 21:16:52 +0000"  >&lt;p&gt;derby-3456v1.diff enables setting columns (if they are part of unique &lt;br/&gt;
constraint) null able . &lt;br/&gt;
If the backing index for the unique constraints are unique indexes (ie &lt;br/&gt;
created before hard upgrade) it drops the index and recreates them with &lt;br/&gt;
index type as duplicate and unique when not null.&lt;/p&gt;

&lt;p&gt;Setting column null able works only after hard upgrade. If the data base&lt;br/&gt;
 is running in soft upgrade mode setting the column null able will &lt;br/&gt;
continue to throw exception. &lt;/p&gt;

&lt;p&gt;modified files &lt;br/&gt;
java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java&lt;/p&gt;

&lt;p&gt;Check for Unique Constraint is now optional (only if the data dictionary &lt;br/&gt;
version is not the latest one). &lt;/p&gt;


&lt;p&gt;java/engine/org/apache/derby/impl/sql/execute/DDLSingleTableConstantAction.java&lt;br/&gt;
added a new method () to drop backing index and recreating with type &lt;br/&gt;
set to non unique and unique when not null.&lt;/p&gt;


&lt;p&gt;Added code, while setting column to null able, to check if the column is &lt;br/&gt;
participating in a unique constraint and if the unique constraint was &lt;br/&gt;
created before hard upgrade (index type will be unique in this case) use &lt;br/&gt;
the method in DDLSingleTableConstantAction to recreate the backing &lt;br/&gt;
index.&lt;/p&gt;</comment>
                            <comment id="12572243" author="anurag" created="Mon, 25 Feb 2008 21:17:52 +0000"  >&lt;p&gt;This patch should be applied after applying patch from derby-3330.&lt;/p&gt;</comment>
                            <comment id="12572404" author="anurag" created="Tue, 26 Feb 2008 10:29:23 +0000"  >&lt;p&gt;This patch has upgrade tests for unique constraint.&lt;/p&gt;


&lt;p&gt;under soft upgrade&lt;br/&gt;
1. Setting columns from unique constraint to null able - should fail&lt;br/&gt;
2. creation of unique constraint over nullable columns - should fail&lt;br/&gt;
3. creation of unique constraint over not null column - should pass&lt;/p&gt;

&lt;p&gt;under post soft upgrade&lt;br/&gt;
test unique constraint created in soft upgrade phase.&lt;/p&gt;

&lt;p&gt;under hard upgrade&lt;br/&gt;
1. Tests unique constraint creation prior to upgrade&lt;br/&gt;
2. Tests unique constraint over null able columns - should pass&lt;br/&gt;
3. Test setting column from unique constraint to null able - should pass&lt;/p&gt;</comment>
                            <comment id="12573017" author="army" created="Wed, 27 Feb 2008 18:40:03 +0000"  >&lt;p&gt;When creating the backing index for a constraint, Derby currently attempts to share conglomerates if there is an existing conglomerate such that:&lt;/p&gt;

&lt;p&gt;  1. the set of columns and their order in the constraint-backing index is the same&lt;br/&gt;
    as that of an existing index AND&lt;/p&gt;

&lt;p&gt;  2. the ordering attributes are the same AND&lt;/p&gt;

&lt;p&gt;  3. both the already-existing index and the constraint-backing index being created&lt;br/&gt;
    are non-unique OR the already existing index is unique&lt;/p&gt;

&lt;p&gt;If all three of these conditions are true then Derby will use a single physical conglomerate to support the already-existing index and the new constraint-backing index.&lt;/p&gt;

&lt;p&gt;So my question is: when unique constraints over nullable columns are introduced, will this criteria (found in CreateIndexConstantAction.java; search for &quot;shareExisting&quot;) need to be updated?  In particular, I&apos;m wondering if #3 is still good enough, or will additional logic for nullable unique constraints need to be added?&lt;/p&gt;</comment>
                            <comment id="12573031" author="anurag" created="Wed, 27 Feb 2008 19:14:51 +0000"  >&lt;p&gt;After applying 3330. A unique constraint won&apos;t be using a unique index &lt;br/&gt;
but will use a  non unique backing  index with special case of &lt;br/&gt;
uniqueWhenNotNull. So Case 3 needs to modified.&lt;br/&gt;
Thanks for pointing out.&lt;/p&gt;

&lt;p&gt;There is one more minor change in CreateIndexConstantAction required (to &lt;br/&gt;
fetch new attribute uniqueWhenNotNull) while creating a replacement index.&lt;br/&gt;
I will make these two changes in a separate patch.&lt;/p&gt;

</comment>
                            <comment id="12573067" author="anurag" created="Wed, 27 Feb 2008 21:16:13 +0000"  >&lt;p&gt;This patch contains additional tests to test indexes created at various phases of upgrades. &lt;br/&gt;
It creates a set of indexes (unique and non unique with null able and not null columns) and tests in others phases. &lt;/p&gt;</comment>
                            <comment id="12573299" author="anurag" created="Thu, 28 Feb 2008 14:28:10 +0000"  >&lt;p&gt;I have run derbyall harness and upgrade tests with derby-3330v11.diff.&lt;/p&gt;

&lt;p&gt;There is one failure in altertable.sql test (it expects setting a column &lt;br/&gt;
null able should fail). I am attaching altertable.diff to fix this failure.&lt;/p&gt;

&lt;p&gt;I have also written another test to test setting nulls to a unique constraint after creation the constraint. The same test also tests setting the column back to not null. setnulltest.diff as this new test.&lt;/p&gt;

&lt;p&gt;I will be regenerating all the test cases related patch after 3330 is checked in as there are some conflicts between the two.&lt;/p&gt;

&lt;p&gt;main patch dery-3456v1 doesn&apos;t have any conflicts so I will just test it again after derby-3330 is checked, &lt;/p&gt;
</comment>
                            <comment id="12573739" author="anurag" created="Fri, 29 Feb 2008 13:41:43 +0000"  >&lt;p&gt;derby-3456v2.diff &lt;br/&gt;
updated to work with latest patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; (derby-3330v13.diff)&lt;/p&gt;

&lt;p&gt;I will regenerate the test case patches after 3330 is checked in.&lt;/p&gt;</comment>
                            <comment id="12575132" author="anurag" created="Tue, 4 Mar 2008 20:50:12 +0000"  >&lt;p&gt;Description of derby-3456v3.diff&lt;br/&gt;
I have regenerated the patch with latest trunk. In my last patch &lt;br/&gt;
(v2) I had made a mistake, I was skipping  creating new index if the &lt;br/&gt;
existing was unique index, while setting the key part to null able. It should be other ways. I have fixed that in this patch.&lt;/p&gt;

&lt;p&gt;Description of derby-3456-Tests.diff&lt;br/&gt;
This has Test Cases for&lt;br/&gt;
1. Soft and Hard upgrade &lt;br/&gt;
2. Index tests (created while running older version and soft upgrade and used during other phases).&lt;br/&gt;
3. New test case to test setting a column participating in unique constraint to null.&lt;br/&gt;
4. Updated lang/altertable.sql and altertable.out for setting column participating in unique constraint to null. (Modified to expect success)&lt;/p&gt;

&lt;p&gt;I haven&apos;t finished running tests with these two patch. &lt;/p&gt;

</comment>
                            <comment id="12575180" author="army" created="Tue, 4 Mar 2008 23:01:46 +0000"  >&lt;p&gt;Thanks for the patch, Anurag.  It seems that with the patch applied, some conglomerate sharing now occurs where it should not, which can lead to incorrect behavior.  For example, the following works as expected:&lt;/p&gt;

&lt;p&gt;  create table t1 (i int, j int not null);&lt;br/&gt;
  alter table t1 add constraint uc unique (i,j);&lt;br/&gt;
  insert into t1 values (2, 2);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Should fail due to unique constraint on i, j, and it does.&lt;br/&gt;
  insert into t1 values (2, 2);&lt;/p&gt;

&lt;p&gt;But if I create a non-unique index before creating the unique constraint, the unique constraint is no longer enforced:&lt;/p&gt;

&lt;p&gt;  create table t1 (i int, j int not null);&lt;br/&gt;
  create index ixnu on t1 (i,j);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; This new constraint UC will incorrectly share a conglomerate with &quot;IXNU&quot;, which is non-unique...&lt;br/&gt;
  alter table t1 add constraint uc unique (i,j);&lt;/p&gt;

&lt;p&gt;  insert into t1 values (2, 2);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; This should fail due to unique constraint on i, j, but it succeeds.&lt;br/&gt;
  insert into t1 values (2, 2);&lt;/p&gt;

&lt;p&gt;  ij&amp;gt; select * from t1;&lt;br/&gt;
  I          |J&lt;br/&gt;
  -----------------------&lt;br/&gt;
  2          |2&lt;br/&gt;
  2          |2&lt;/p&gt;

&lt;p&gt;2 rows selected&lt;/p&gt;

&lt;p&gt;I think this goes back to my Feb 27th comment: namely, I think the criteria for sharing a conglomerate has to be updated to account for the fact that we can now have non-unique conglomerates which enforce uniqueness in the absence of NULLs.  In such a case the uniqueWhenNotNull constraint, which is implemented using a non-unique conglomerate, canNOT share with an existing non-unique conglomerate UNLESS the existing conglomerate is itself uniqueWhenNotNull.  At least I think that&apos;s how it&apos;s should work; can you verify?&lt;/p&gt;</comment>
                            <comment id="12575193" author="mikem" created="Tue, 4 Mar 2008 23:37:27 +0000"  >&lt;p&gt;how hard would it be to separate out the tests that apply to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; and submit that patch there.  I would like to get as complete a set of tests submitted for that change before working on applying patches for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3456&quot; title=&quot;Allow removing not null from collumns particpating in unique constraint.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3456&quot;&gt;&lt;del&gt;DERBY-3456&lt;/del&gt;&lt;/a&gt; code changes.&lt;/p&gt;</comment>
                            <comment id="12575212" author="army" created="Wed, 5 Mar 2008 01:01:43 +0000"  >&lt;p&gt;As follow-up to my previous comment I ran various &quot;conglomerate sharing&quot; scenarios with uniqueWhenNotNull constraints.  After applying derby-3456v3.diff, I see the following:&lt;/p&gt;

&lt;p&gt;  1. uniqueWhenNotNull constraint can share a conglomerate with an existing non-unique index, which renders the uniqueWhenNotNull constraint ineffective (per my previous comment).&lt;/p&gt;

&lt;p&gt;  2. uniqueWhenNotNull constraint can share a conglomerate with an existing unique index.  This seems okay from the &quot;sharing&quot; perspective, but if the unique index is dropped, the &quot;replacement&quot; conglomerate that is created must correctly enforce uniqueWhenNotNull.  That is not currently the case; instead, the replacement conglomerate ends up being a normal non-unique conglomerate.  Ex:&lt;/p&gt;

&lt;p&gt;  create table t1 (i int, j int not null, k int);&lt;br/&gt;
  insert into t1 values (1, -1, 1), (2, -2, 4), (4, -4, 16), (3, -3, 9);&lt;br/&gt;
  create unique index uix on t1(i,j);&lt;br/&gt;
  insert into t1 values (null, 1, -1);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; This will share a conglomerate with UIX.&lt;br/&gt;
  alter table t1 add constraint uc unique(i,j);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Should drop shared conglomerate and re-create a new one&lt;br/&gt;
  &amp;#8211; that is uniqueWhenNotNull.  But currently we just end up&lt;br/&gt;
  &amp;#8211; with a non-unique index where uniqueWhenNotNull is false.&lt;br/&gt;
  drop index uix;&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Should be okay.&lt;br/&gt;
  insert into t1 values (null, 1, -1);&lt;br/&gt;
  insert into t1 values (null, 1, -1);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Should fail due to uniqueWhenNotNull, but currently succeeds.&lt;br/&gt;
  insert into t1 values (1, -1, 1);&lt;/p&gt;

&lt;p&gt;I think the problem here is that the IndexRowGenerator() which is created for a &quot;sharing&quot; conglomerates does not account for the uniqueWhenNotNull attribute.  See line ~492 in CreateIndexConstantAction.java.&lt;/p&gt;

&lt;p&gt;3. A foreign key constraint can share a conglomerate with a uniqueWhenNotNull constraint.  This seems okay from the &quot;sharing&quot; perspective, but if the uniqueWhenNotNull constraint is dropped, Derby should create a &quot;replacement&quot; conglomerate that is a normal, non-unique conglomerate.  That is not currently the case, though; instead, the uniqueWhenNotNull conglomerate remains in tact and incorrectly enforces uniqueness where it should not be enforced (similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3299&quot; title=&quot;Uniqueness violation error (23505) occurs after dropping a PK constraint if there exists a foreign key on the same columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3299&quot;&gt;&lt;del&gt;DERBY-3299&lt;/del&gt;&lt;/a&gt;).  Ex:&lt;/p&gt;

&lt;p&gt;  create table t1 (i int, j int not null, k int);&lt;br/&gt;
  insert into t1 values (1, -1, 1), (2, -2, 4), (4, -4, 16), (3, -3, 9);&lt;br/&gt;
  alter table t1 add constraint uc unique(i,j);&lt;/p&gt;

&lt;p&gt;  create table t2 (a int not null, b int not null);&lt;br/&gt;
  alter table t2 add constraint pkt2 primary key(a,b);&lt;br/&gt;
  insert into t2 values (1, -1), (2, -2), (4, -4), (3, -3);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; This foreign key will share a conglomerate with UC, which is uniqueWhenNotNull.&lt;br/&gt;
  alter table t1 add constraint fkt1 foreign key (i,j) references t2;&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Should fail due to UC (and it does).&lt;br/&gt;
  insert into t1(i,j) values (1, -1);&lt;/p&gt;

&lt;p&gt;  &amp;#8211; Drop UC, the conglomerate for the foreign key should be re-created as non-unique.&lt;br/&gt;
  &amp;#8211; But this doesn&apos;t currently happen.&lt;br/&gt;
  alter table t1 drop constraint uc;&lt;/p&gt;

&lt;p&gt;  &amp;#8211; This should now succeed because UC has been dropped, but it still fails, claiming&lt;br/&gt;
  &amp;#8211; (incorrectly) that FKT1 is a unique constraint.&lt;br/&gt;
  insert into t1(i,j) values (1, -1);&lt;/p&gt;

&lt;p&gt;I think the problem here is that the &quot;drop(...)&quot; and &quot;describeSharedConglomerate(...)&quot; methods of ConglomerateDescriptor.java do not recognize the &quot;uniqueWhenNotNull&quot; attribute, and thus are not able to detect that a new (non-unique) conglomerate is necessary.&lt;/p&gt;

&lt;p&gt;As a summary of all three issues, I think it&apos;s safe to say that the changes which were made for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3299&quot; title=&quot;Uniqueness violation error (23505) occurs after dropping a PK constraint if there exists a foreign key on the same columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3299&quot;&gt;&lt;del&gt;DERBY-3299&lt;/del&gt;&lt;/a&gt; need to be enhanced to account for the new &quot;uniqueWhenNotNull&quot; type of conglomerate, and to do the correct thing when such a conglomerate is in play.&lt;/p&gt;</comment>
                            <comment id="12575325" author="anurag" created="Wed, 5 Mar 2008 12:38:56 +0000"  >&lt;p&gt;thanks Army for looking at the patch testing the backing indexes. &lt;/p&gt;

&lt;p&gt;I have fixed the 1st issue and will be uploading the patch shortly. &lt;br/&gt;
Is it ok if I create a new issue for 2 and 3 ? They are actually &lt;br/&gt;
independent issue caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; and creating a separate &lt;br/&gt;
issues for them  will allow this (3456) issue to remain unblocked.&lt;/p&gt;</comment>
                            <comment id="12575329" author="anurag" created="Wed, 5 Mar 2008 12:52:02 +0000"  >&lt;p&gt;This patch fixes issues related to unique constraint using &lt;br/&gt;
existing non unique index as backing index (see Army&apos;s comments issues 1).&lt;/p&gt;

&lt;p&gt;I have updated lterTableConstantAction.java to check for uniqueWithDuplicateNulls while deciding whether to share existing index or not. In case there is a uniqueWithDuplicateNulls index it can be used by a non unique index but not vice-versa. &lt;/p&gt;

&lt;p&gt;I am investigating other two issues.&lt;/p&gt;</comment>
                            <comment id="12575410" author="army" created="Wed, 5 Mar 2008 16:36:28 +0000"  >&lt;p&gt;&amp;gt; Is it ok if I create a new issue for 2 and 3 ? They are actually independent&lt;br/&gt;
&amp;gt; issue caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; and creating a separate issues for them&lt;br/&gt;
&amp;gt; will allow this (3456) issue to remain unblocked.&lt;/p&gt;

&lt;p&gt;Sure, that&apos;s fine with me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  In fact, if you&apos;d like to put all 3 of the &quot;shared backing index&quot; issues I mentioned above into one new Jira issue, that seems reasonable (and perhaps &quot;cleaner&quot; from an incremental development approach) to me....&lt;/p&gt;</comment>
                            <comment id="12575740" author="anurag" created="Thu, 6 Mar 2008 15:26:08 +0000"  >&lt;p&gt;I have created &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3502&quot; title=&quot;Unique Constraint&amp;#39;s backing index when shared with existing indexes doesn&amp;#39;t behave as expected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3502&quot;&gt;&lt;del&gt;DERBY-3502&lt;/del&gt;&lt;/a&gt; to address issues related to shared backing indexed. Please ignore derby-3456v4.diff&lt;/p&gt;</comment>
                            <comment id="12575742" author="anurag" created="Thu, 6 Mar 2008 15:27:40 +0000"  >&lt;p&gt;Reattaching derby-3456v3.diff as derby-3456v5.diff to avoid confusion. &lt;/p&gt;</comment>
                            <comment id="12575806" author="dyret" created="Thu, 6 Mar 2008 17:51:13 +0000"  >&lt;p&gt;As RM I would like to see this committed, so I took a brief look. The patch looks good to me, but I have not followed this issue closely so confirmation from an expert in this area would be appreciated. &lt;/p&gt;</comment>
                            <comment id="12575888" author="anurag" created="Thu, 6 Mar 2008 21:20:22 +0000"  >&lt;p&gt;derby-3456-Tests_v2.diff&lt;/p&gt;

&lt;p&gt;Fixed conflicts with latest svn version.&lt;/p&gt;</comment>
                            <comment id="12576044" author="mikem" created="Fri, 7 Mar 2008 05:32:44 +0000"  >&lt;p&gt;i am looking at committing these patches.  Are the upgrade patches still valid, or was all of that moved to the already committed work in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Right now I am looking at derby-3456v5.diff and the v2 test patch, but not the upgrade patches.&lt;/p&gt;</comment>
                            <comment id="12576053" author="anurag" created="Fri, 7 Mar 2008 06:38:10 +0000"  >&lt;p&gt;upgrade and other tests are included in test patch (erby-3456-Tests_v2.diff).&lt;/p&gt;</comment>
                            <comment id="12576284" author="mikem" created="Fri, 7 Mar 2008 17:30:36 +0000"  >&lt;p&gt;I have committed the derby-3456-Tests_v2.diff and derby-3456v5.diff patches.&lt;br/&gt;
I believe these are the only outstanding patches for this issue.  I did a&lt;br/&gt;
review of the changes, and ran complete set of tests against ibm15 jvm.  Thanks&lt;br/&gt;
to army for providing the initial reviews that led to the complete patch.&lt;/p&gt;</comment>
                            <comment id="12576292" author="anurag" created="Fri, 7 Mar 2008 17:35:49 +0000"  >&lt;p&gt;Thanks Mike for committing it.&lt;/p&gt;

&lt;p&gt;You have missed one file (UniqueConstraintSetNullTest.java) but there &lt;br/&gt;
entry is already there in lang/_Suite.java  and build is failing.&lt;/p&gt;</comment>
                            <comment id="12576308" author="army" created="Fri, 7 Mar 2008 17:58:38 +0000"  >&lt;p&gt;Minor observation: the error message 42Z20 currently says:&lt;/p&gt;

&lt;p&gt;  ERROR 42Z20: Column &apos;K&apos; cannot be made nullable. It is part of a primary key or unique constraint,&lt;br/&gt;
  which cannot have any nullable columns.&lt;/p&gt;

&lt;p&gt;Should this message be updated to exclude &quot;unique constraint&quot;, since a unique constraint can now have a nullable columns?&lt;/p&gt;</comment>
                            <comment id="12576311" author="anurag" created="Fri, 7 Mar 2008 18:09:29 +0000"  >&lt;p&gt;This error message is thrown while setting  a unique &lt;br/&gt;
constraint column to null able in soft upgrade mode. &lt;/p&gt;

&lt;p&gt;In one of the two instances (soft upgrade or regular run) message &lt;br/&gt;
will be wrong.  Changed  message will give a wrong info in soft upgrade&lt;br/&gt;
mode claiming that user was trying to modify a column from primary key&lt;br/&gt;
 when he is actually modifying  the constraint.&lt;/p&gt;

&lt;p&gt;Is it ok to return wrong info in soft upgrade mode ? Probably we can &lt;br/&gt;
mention it in release note that in case of soft upgrade mode a wrong&lt;br/&gt;
info will be thrown.&lt;/p&gt;</comment>
                            <comment id="12706882" author="kmarsden" created="Thu, 7 May 2009 14:29:13 +0100"  >&lt;p&gt;There has been no activity on this issue for over a year, so unassigning. Anurag, please reassign yourself if you want to do further work on this issue.  It looks like there was a patch that was close to ready.&lt;/p&gt;</comment>
                            <comment id="12767861" author="myrna" created="Tue, 20 Oct 2009 17:24:39 +0100"  >&lt;p&gt;I don&apos;t see any patches waiting in this?&lt;br/&gt;
Mike committed the last patches on Mar 07 2008 and Mar 08 2008.&lt;/p&gt;

&lt;p&gt;The only concern I see left is that apparently there&apos;s an issue with the message not reflecting correct behavior in upgrade mode - and apparently there was a suggestion of adding something to the release notes.&lt;/p&gt;

&lt;p&gt;But the code for this has gone in and has been released at least with 10.5 - without the issue getting set to fixed or a release note getting added,  so no release note was ever provided, and so it seems to me Army&apos;s concern has gotten resolved de facto, so now the error returned during soft upgrade is incorrect.&lt;/p&gt;

&lt;p&gt;It seems to me this issue should be closed?&lt;/p&gt;</comment>
                            <comment id="12767914" author="myrna" created="Tue, 20 Oct 2009 20:15:32 +0100"  >&lt;p&gt;Actually, looking at the current code, it appears to me that the issue of the message was resolved after all.&lt;br/&gt;
(there&apos;s a switch happening based on DataDictionary.DD_VERSION_DERBY_10_4 in ModifyColumnNode).&lt;/p&gt;

&lt;p&gt;So, this can just be resolved.&lt;/p&gt;

&lt;p&gt;I also noted that there &lt;b&gt;is&lt;/b&gt; no release note for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; or its subtasks...Probably because &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt; was closed &lt;b&gt;after&lt;/b&gt; release of 10.4 into which the functionality went, the check for existence of release note was not carried out. But there&apos;s no need for a release note on behalf of this subtask.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12376729" name="altertable.diff" size="1710" author="anurag" created="Thu, 28 Feb 2008 14:28:10 +0000"/>
                            <attachment id="12377121" name="derby-3456-Tests.diff" size="19050" author="anurag" created="Tue, 4 Mar 2008 20:50:12 +0000"/>
                            <attachment id="12377284" name="derby-3456-Tests_v2.diff" size="9833" author="anurag" created="Thu, 6 Mar 2008 21:20:21 +0000"/>
                            <attachment id="12376443" name="derby-3456v1.diff" size="6631" author="anurag" created="Mon, 25 Feb 2008 21:16:52 +0000"/>
                            <attachment id="12376827" name="derby-3456v2.diff" size="6613" author="anurag" created="Fri, 29 Feb 2008 13:41:43 +0000"/>
                            <attachment id="12377120" name="derby-3456v3.diff" size="6614" author="anurag" created="Tue, 4 Mar 2008 20:50:12 +0000"/>
                            <attachment id="12377163" name="derby-3456v4.diff" size="9319" author="anurag" created="Wed, 5 Mar 2008 12:52:02 +0000"/>
                            <attachment id="12377261" name="derby-3456v5.diff" size="6614" author="anurag" created="Thu, 6 Mar 2008 15:27:40 +0000"/>
                            <attachment id="12376728" name="setnulltest.diff" size="5922" author="anurag" created="Thu, 28 Feb 2008 14:28:10 +0000"/>
                            <attachment id="12376474" name="upgradetests.diff" size="3861" author="anurag" created="Tue, 26 Feb 2008 10:29:23 +0000"/>
                            <attachment id="12376670" name="upgradetests_v2.diff" size="10643" author="anurag" created="Wed, 27 Feb 2008 21:16:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Feb 2008 18:40:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30864</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37326</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>