<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1445/DERBY-1445.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1445]  Add new streaming overloads and modify some existing ones.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1445</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The task involves Adding and modifying the following methods, which were recently added by the JDBC4 expert group and which appeared in Mustang build 86:&lt;/p&gt;

&lt;p&gt;        add PreparedStatement.setAsciiStream (int columnIndex, InputStream x, long length)&lt;br/&gt;
  	add PreparedStatement.setBinaryStream (int columnIndex, InputStream x, long length&lt;br/&gt;
  	add PreparedStatement.setCharacterStream (int columnIndex, Reader x, long length)&lt;/p&gt;

&lt;p&gt;  	add CallableStatement.setAsciiStream (String columnName, InputStream x, long length)&lt;br/&gt;
  	add CallableStatement.setBinaryStream (String columnName, InputStream x, long length)&lt;br/&gt;
  	add CallableStatement.setCharacterStream (String columnName, Reader x, long length)&lt;/p&gt;

&lt;p&gt;  	add ResultSet.updateAsciiStream (int columnIndex, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateBinaryStream (int columnIndex, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateCharacterStream (int columnIndex, Reader x, long length)&lt;br/&gt;
  	add ResultSet.updateAsciiStream (String columnName, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateBinaryStream (String columnName, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateCharacterStream (String columnName, Reader x, long length)&lt;br/&gt;
  	add ResultSet.updateBlob (int columnIndex, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateBlob (String columnName, InputStream x, long length)&lt;br/&gt;
  	add ResultSet.updateClob (int columnIndex, Reader x, long length)&lt;br/&gt;
  	add ResultSet.updateClob (String columnName, Reader x, long length)&lt;br/&gt;
  	add ResultSet.updateNClob (int columnIndex, Reader x, long length)&lt;br/&gt;
  	add ResultSet.updateNClob (String columnName, Reader x, long length)&lt;/p&gt;

&lt;p&gt;  	modify ResultSet.updateNCharacterStream(int columnIndex, Reader x, int length) to ResultSet.updateNCharacterStream(int columnIndex, Reader x, long&lt;br/&gt;
        length)&lt;br/&gt;
  	modify ResultSet.updateNCharacterStream(String columnName, Reader x, int length) to ResultSet.updateNCharacterStream(String columnName, &lt;br/&gt;
        Reader x, long length)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12344836">DERBY-1445</key>
            <summary> Add new streaming overloads and modify some existing ones.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Jun 2006 17:31:13 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:39 +0100</updated>
                            <resolved>Wed, 28 Jun 2006 17:46:04 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12417446" author="narayanan" created="Fri, 23 Jun 2006 17:40:00 +0100"  >&lt;p&gt;Attaching patch for issue. Please also find the output of svn stat attached.&lt;/p&gt;

&lt;p&gt;thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12417495" author="knutanders" created="Fri, 23 Jun 2006 22:04:04 +0100"  >&lt;p&gt;Hi Narayanan,&lt;/p&gt;

&lt;p&gt;It seems like your editor has eight character tabs, so your&lt;br/&gt;
indentation doesn&apos;t always match the surrounding code. For instance,&lt;br/&gt;
the javadocs for EmbedResultSet.updateAsciiStream, updateBinaryStream&lt;br/&gt;
and updateCharacterStream are indented with four characters too much.&lt;/p&gt;

&lt;p&gt;I also notice that several places the indentation is a mix of tabs and&lt;br/&gt;
spaces. For instance, in EmbedPreparedStatement you have&lt;/p&gt;

&lt;p&gt;+    public final void setCharacterStream(int parameterIndex,&lt;br/&gt;
+       			  java.io.Reader reader,&lt;br/&gt;
+			  int length) throws SQLException &lt;/p&gt;
{
+        setCharacterStream(parameterIndex,reader,(long)length);
+    }

&lt;p&gt;First line is indented with spaces only.&lt;br/&gt;
Second line with spaces followed by tabs followed by spaces.&lt;br/&gt;
Third line with tabs followed by spaces.&lt;br/&gt;
Fourth line and fifth line are indented with spaces only.&lt;/p&gt;

&lt;p&gt;Please check your tab setting (four characters) and try to keep the&lt;br/&gt;
indentation consistent (at least try to avoid mixing tabs and spaces&lt;br/&gt;
on the same line). Thanks!&lt;/p&gt;</comment>
                            <comment id="12417769" author="kristwaa" created="Mon, 26 Jun 2006 18:03:22 +0100"  >&lt;p&gt;I had a look at the patch, and found some issues worth commenting.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;EmbedResultSet&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;updateAsciiStream(String,InputStream,int)&lt;br/&gt;
  JavaDoc - this was added in JDBC 2, not 4.&lt;/li&gt;
	&lt;li&gt;updateBinaryStream(String,InputStream,int)&lt;br/&gt;
  JavaDoc - this was added in JDBC 2, not 4.&lt;/li&gt;
	&lt;li&gt;updateCharacterStream(String,Reader,int)&lt;br/&gt;
  JavaDoc - this was added in JDBC 2, not 4.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Tests&amp;#93;&lt;/span&gt;&lt;br/&gt;
The points below are my own preferences. The existing code works, but I&lt;br/&gt;
think it could be made a little easier to read by changing the things&lt;br/&gt;
below.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Unless a specific error message is to be specified/given, there is no&lt;br/&gt;
  need to catch exceptions in a JUnit test when you don&apos;t take&lt;br/&gt;
  corrective actions. If an exception is thrown, the test will fail.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Using an available assert-method where possible makes the test more&lt;br/&gt;
  compact, and the stacktrace/msg more descriptive. For instance,&lt;br/&gt;
  instead of&lt;br/&gt;
      if (str1.compareTo(str2) != 0)&lt;br/&gt;
          fail(errmsg)&lt;br/&gt;
  this could be used:&lt;br/&gt;
      assertEquals(errmsg, str1, str2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ResultSetTest&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Duplicate comment in method &apos;testUpdateBinaryStream&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;A lot of arrays with the same content are defined in multiple places.&lt;br/&gt;
  Could these be made static final and only be defined once?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Whitespace change in &apos;tearDown&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Use assertEquals(String, byte, byte) in the for-loops comparing&lt;br/&gt;
  byte-values? Makes it a lot easier to immediatly spot what&apos;s wrong, as&lt;br/&gt;
  opposed to only getting the message &quot;Error in updateXXXStream&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;No need/use to have &apos;return&apos; after a &apos;fail(some-text)&apos;.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;A few general comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;End the first sentence of JavaDoc with a dot.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Avoid inserting spaces at end of lines and on empty lines.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I think the patch can be committed when the tab-space issue commented by Knut Anders and the incorrect JavaDoc are fixed.&lt;br/&gt;
It would be nice to get the other comments addressed as well.&lt;/p&gt;


&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12417831" author="narayanan" created="Mon, 26 Jun 2006 23:39:06 +0100"  >&lt;p&gt;Hi,&lt;br/&gt;
Thanx a ton for the detailed reviews and comments. Please find attached the patch with the comments addressed. Please do point out any changes you think is necessary and I shall fix the same.&lt;/p&gt;

&lt;p&gt;thanx once again&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12417970" author="kristwaa" created="Tue, 27 Jun 2006 15:33:22 +0100"  >&lt;p&gt;The changes look good Narayanan!&lt;/p&gt;

&lt;p&gt;I have only one more comment; there are still a few lines with mixed tabs and spaces (line numbers from the version 2 diff):&lt;br/&gt;
2915, 3024, 3055, 3071 and 3087.&lt;/p&gt;


&lt;p&gt;Regards,&lt;/p&gt;</comment>
                            <comment id="12418014" author="narayanan" created="Tue, 27 Jun 2006 19:51:43 +0100"  >&lt;p&gt;Thank you for the patient and detailed review of the patch. Please find attached the patch with the issues addressed. Please do point out any more changes you think is necessary. I shall make them and post them again.&lt;/p&gt;

&lt;p&gt;thanx once again&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12418015" author="knutanders" created="Tue, 27 Jun 2006 20:06:40 +0100"  >&lt;p&gt;Thanks Narayanan and Kristian! I will look into committing the patch.&lt;/p&gt;</comment>
                            <comment id="12418096" author="knutanders" created="Wed, 28 Jun 2006 03:20:27 +0100"  >&lt;p&gt;The ver2 and ver3 patches reformatted large portions of otherwise&lt;br/&gt;
unmodified code. This makes it rather difficult to see what has been&lt;br/&gt;
changed by the patch, and it increases the probability of conflicts&lt;br/&gt;
with others working in this area of the code. Also, there were still&lt;br/&gt;
some methods that were indented more than the surrounding code. I took&lt;br/&gt;
the liberty of washing the formatting changes and incorrect&lt;br/&gt;
indentation out of the patch before reviewing and committing it.&lt;/p&gt;

&lt;p&gt;The washed patch (based on ver3) is attached as ver3-washed.diff. It&lt;br/&gt;
was committed into trunk with revision 417548. With this commit, the&lt;br/&gt;
four jdbc40 tests that have been failing the last weeks now run&lt;br/&gt;
cleanly. Thank you Narayanan!&lt;/p&gt;

&lt;p&gt;I still see two issues with the patch, and it would be great if you&lt;br/&gt;
could address them in a follow-up patch.&lt;/p&gt;

&lt;p&gt;1) CallableStatementTest: testSetCharacterStream, testSetAsciiStream&lt;br/&gt;
   and testSetBinaryStream only fail if an exception is thrown that is&lt;br/&gt;
   not SQLFeatureNotSupportedException. They should also fail if no&lt;br/&gt;
   exception is thrown.&lt;/p&gt;

&lt;p&gt;2) (This one is a minor issue which you can ignore if you want.) I&lt;br/&gt;
   agree with Kristian&apos;s earlier review comment that &quot;there is no need&lt;br/&gt;
   to catch exceptions in JUnit tests when you don&apos;t take corrective&lt;br/&gt;
   actions.&quot;  That is, instead of writing&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
  doSomething();
}
&lt;p&gt; catch (SomeKindOfException e) &lt;/p&gt;
{
  fail(&quot;Failed &quot; + e.getMessage());
}

&lt;p&gt;   you could just declare the test method as &quot;throws Exception&quot; and&lt;br/&gt;
   skip try/catch/fail. It is simpler, and you also lose less&lt;br/&gt;
   information in the case of a failure (you preserve the stack trace,&lt;br/&gt;
   and possibly &quot;caused by...&quot;). The try/catch/fail pattern is used in&lt;br/&gt;
   PreparedStatementTest (testSetCharacterStream, testSetAsciiStream,&lt;br/&gt;
   testSetBinaryStream) and ResultSetTest (testUpdateBinaryStream,&lt;br/&gt;
   testUpdateAsciiStream, testUpdateCharacterStream,&lt;br/&gt;
   testUpdateBinaryStreamStringParameterName,&lt;br/&gt;
   testUpdateAsciiStreamStringParameterName,&lt;br/&gt;
   testUpdateCharacterStreamStringParameterName, embeddedUpdateClob,&lt;br/&gt;
   embeddedUpdateClobStringParameterName, embeddedUpdateBlob,&lt;br/&gt;
   embeddedUpdateBlobStringParameterName).&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12418180" author="narayanan" created="Wed, 28 Jun 2006 14:02:08 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;thanx a ton for the commit. Please find attached the follow-up patch with the comments addressed.&lt;/p&gt;

&lt;p&gt;thanx&lt;br/&gt;
Narayanan&lt;/p&gt;</comment>
                            <comment id="12418210" author="knutanders" created="Wed, 28 Jun 2006 17:46:04 +0100"  >&lt;p&gt;Thanks! Committed the follow-up patch into trunk with revision 417705.&lt;/p&gt;</comment>
                            <comment id="12424510" author="kristwaa" created="Mon, 31 Jul 2006 12:02:42 +0100"  >&lt;p&gt;The new JDBC 4 overloads with a long argument for length have been implemented. No issues have popped up, closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12335822" name="JDBC40_long_length_overloads.diff" size="107269" author="narayanan" created="Fri, 23 Jun 2006 17:40:00 +0100"/>
                            <attachment id="12335823" name="JDBC40_long_length_overloads.stat" size="1316" author="narayanan" created="Fri, 23 Jun 2006 17:40:00 +0100"/>
                            <attachment id="12335928" name="JDBC40_long_length_overloads_ver2.diff" size="115099" author="narayanan" created="Mon, 26 Jun 2006 23:39:06 +0100"/>
                            <attachment id="12335929" name="JDBC40_long_length_overloads_ver2.stat" size="1316" author="narayanan" created="Mon, 26 Jun 2006 23:39:06 +0100"/>
                            <attachment id="12335993" name="JDBC40_long_length_overloads_ver3.diff" size="115104" author="narayanan" created="Tue, 27 Jun 2006 19:51:43 +0100"/>
                            <attachment id="12335994" name="JDBC40_long_length_overloads_ver3.stat" size="1316" author="narayanan" created="Tue, 27 Jun 2006 19:51:43 +0100"/>
                            <attachment id="12336039" name="ver3-washed-v1.diff" size="11734" author="narayanan" created="Wed, 28 Jun 2006 14:02:08 +0100"/>
                            <attachment id="12336040" name="ver3-washed-v1.stat" size="376" author="narayanan" created="Wed, 28 Jun 2006 14:02:08 +0100"/>
                            <attachment id="12336018" name="ver3-washed.diff" size="99859" author="knutanders" created="Wed, 28 Jun 2006 03:20:27 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Jun 2006 21:04:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29996</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0su7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38490</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>