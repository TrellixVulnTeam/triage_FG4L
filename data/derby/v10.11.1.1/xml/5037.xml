<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:30 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5037/DERBY-5037.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5037] Assertion failure from index-stat-thread when running AutomaticIndexStatisticsTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5037</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I see the following assertion failure on the console when running AutomaticIndexStatisticsTest standalone against debug jars. This may be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5026&quot; title=&quot;testStatsCreatedOnGrowthThenDeleteDb failing with ibm15 on trunk. The revision on trunk is 1069665 &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5026&quot;&gt;&lt;del&gt;DERBY-5026&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5031&quot; title=&quot;Exception in thread &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException while calling ControlRow.getControlRowForPage(Unknown Source)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5031&quot;&gt;&lt;del&gt;DERBY-5031&lt;/del&gt;&lt;/a&gt;. The test itself completes successfully:&lt;/p&gt;

&lt;p&gt;...Exception in thread &quot;index-stat-thread&quot; org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED No page at pagenumber: 1; ContainerHandle = BaseContainerHandle:(Container(0, 1153))&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:838)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:820)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeScan.reposition(BTreeScan.java:850)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:109)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNextGroup(BTreeScan.java:1596)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl$KeyComparator.fetchRows(IndexStatisticsDaemonImpl.java:1103)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(IndexStatisticsDaemonImpl.java:453)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatistics(IndexStatisticsDaemonImpl.java:324)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.run(IndexStatisticsDaemonImpl.java:710)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:637)&lt;br/&gt;
---------------&lt;br/&gt;
Stack traces for all live threads:&lt;br/&gt;
Thread name=derby.rawStoreDaemon id=13 priority=5 state=TIMED_WAITING isdaemon=true&lt;br/&gt;
	java.lang.Object.wait(Native Method)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.BasicDaemon.rest(BasicDaemon.java:576)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.BasicDaemon.run(BasicDaemon.java:390)&lt;br/&gt;
	java.lang.Thread.run(Thread.java:637)&lt;/p&gt;

&lt;p&gt;Thread name=Finalizer id=3 priority=8 state=WAITING isdaemon=true&lt;br/&gt;
	java.lang.Object.wait(Native Method)&lt;br/&gt;
	java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)&lt;br/&gt;
	java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)&lt;br/&gt;
	java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)&lt;/p&gt;

&lt;p&gt;Thread name=Reference Handler id=2 priority=10 state=WAITING isdaemon=true&lt;br/&gt;
	java.lang.Object.wait(Native Method)&lt;br/&gt;
	java.lang.Object.wait(Object.java:485)&lt;br/&gt;
	java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)&lt;/p&gt;

&lt;p&gt;Thread name=main id=1 priority=5 state=RUNNABLE isdaemon=false&lt;br/&gt;
	java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	org.apache.derby.impl.store.raw.data.BaseDataFileFactory.releaseJBMSLockOnDB(BaseDataFileFactory.java:2040)&lt;br/&gt;
	org.apache.derby.impl.store.raw.data.BaseDataFileFactory.stop(BaseDataFileFactory.java:519)&lt;br/&gt;
	org.apache.derby.impl.services.monitor.TopService.stop(TopService.java:442)&lt;br/&gt;
	org.apache.derby.impl.services.monitor.TopService.shutdown(TopService.java:393)&lt;br/&gt;
	org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:229)&lt;br/&gt;
	org.apache.derby.impl.db.DatabaseContextImpl.cleanupOnError(DatabaseContextImpl.java:62)&lt;br/&gt;
	org.apache.derby.iapi.services.context.ContextManager.cleanupOnError(ContextManager.java:343)&lt;br/&gt;
	org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnError(TransactionResourceImpl.java:433)&lt;br/&gt;
	org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:633)&lt;br/&gt;
	org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:56)&lt;br/&gt;
	org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:70)&lt;br/&gt;
	org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:248)&lt;br/&gt;
	org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:480)&lt;br/&gt;
	org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:424)&lt;br/&gt;
	org.apache.derbyTesting.junit.JDBCDataSource.shutdownDatabase(JDBCDataSource.java:266)&lt;br/&gt;
	org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete(AutomaticIndexStatisticsTest.java:180)&lt;br/&gt;
	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	junit.framework.TestCase.runTest(TestCase.java:164)&lt;br/&gt;
	junit.framework.TestCase.runBare(TestCase.java:130)&lt;br/&gt;
	org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:112)&lt;br/&gt;
	junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	junit.framework.TestSuite.runTest(TestSuite.java:230)&lt;br/&gt;
	junit.framework.TestSuite.run(TestSuite.java:225)&lt;br/&gt;
	junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	junit.textui.TestRunner.doRun(TestRunner.java:121)&lt;br/&gt;
	junit.textui.TestRunner.start(TestRunner.java:185)&lt;br/&gt;
	junit.textui.TestRunner.main(TestRunner.java:143)&lt;/p&gt;

&lt;p&gt;Thread name=index-stat-thread id=18 priority=5 state=RUNNABLE isdaemon=true&lt;br/&gt;
	java.lang.Thread.dumpThreads(Native Method)&lt;br/&gt;
	java.lang.Thread.getAllStackTraces(Thread.java:1511)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.ThreadDump.getStackDumpString(ThreadDump.java:34)&lt;br/&gt;
	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.AssertFailure$1.run(AssertFailure.java:165)&lt;br/&gt;
	java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.AssertFailure.dumpThreads(AssertFailure.java:159)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.AssertFailure.&amp;lt;init&amp;gt;(AssertFailure.java:72)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:838)&lt;br/&gt;
	org.apache.derby.impl.store.access.btree.ControlRow.get(ControlRow.java:820)&lt;br/&gt;
	org.apache.derby.impl.store.access.btree.BTreeScan.reposition(BTreeScan.java:850)&lt;br/&gt;
	org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:109)&lt;br/&gt;
	org.apache.derby.impl.store.access.btree.BTreeScan.fetchNextGroup(BTreeScan.java:1596)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl$KeyComparator.fetchRows(IndexStatisticsDaemonImpl.java:1103)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(IndexStatisticsDaemonImpl.java:453)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatistics(IndexStatisticsDaemonImpl.java:324)&lt;br/&gt;
	org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.run(IndexStatisticsDaemonImpl.java:710)&lt;br/&gt;
	java.lang.Thread.run(Thread.java:637)&lt;/p&gt;

&lt;p&gt;Thread name=Signal Dispatcher id=5 priority=9 state=RUNNABLE isdaemon=true&lt;/p&gt;

&lt;p&gt;Thread name=Timer-0 id=9 priority=5 state=WAITING isdaemon=true&lt;br/&gt;
	java.lang.Object.wait(Native Method)&lt;br/&gt;
	java.lang.Object.wait(Object.java:485)&lt;br/&gt;
	java.util.TimerThread.mainLoop(Timer.java:483)&lt;br/&gt;
	java.util.TimerThread.run(Timer.java:462)&lt;/p&gt;


&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;....&lt;br/&gt;
Time: 153.799&lt;/p&gt;

&lt;p&gt;OK (7 tests)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12498544">DERBY-5037</key>
            <summary>Assertion failure from index-stat-thread when running AutomaticIndexStatisticsTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>derby_backport_reject_10_5</label>
                    </labels>
                <created>Mon, 14 Feb 2011 15:55:58 +0000</created>
                <updated>Fri, 14 Jun 2013 18:31:13 +0100</updated>
                            <resolved>Thu, 13 Sep 2012 00:20:04 +0100</resolved>
                                    <version>10.8.1.2</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12994363" author="rhillegas" created="Mon, 14 Feb 2011 16:56:04 +0000"  >&lt;p&gt;I have commented out all of the test cases in AutomaticIndexStatisticsTest except for testShutdownWhileScanningThenDelete(). The assertion still occurs with that test case left in.&lt;/p&gt;</comment>
                            <comment id="12994408" author="mikem" created="Mon, 14 Feb 2011 18:27:53 +0000"  >&lt;p&gt;Looking at the stack traces this looks like a problem with the istat thread running while another thread is shutting down the database.  Looking at the stacks&lt;br/&gt;
printed the test is at line 180:&lt;br/&gt;
JDBCDataSource.shutdownDatabase(ds);&lt;/p&gt;

&lt;p&gt;Meanwhile the background thread is likely just trying to process the queue for the next bit of work.  Derby monitor support for coordinated shutdown is a known issue, but I think at least for a very &quot;ordered&quot; shutdown where there is a request to shutdown we should be able to shutdown the known background thread&lt;br/&gt;
in this case.  I think it is a bigger problem if the whole system is shutting down due to some error found at the lowest level.&lt;/p&gt;</comment>
                            <comment id="12994409" author="mikem" created="Mon, 14 Feb 2011 18:29:22 +0000"  >&lt;p&gt;ps. kudo&apos;s to lily&apos;s work to get all the threads dumped on sanity error, made it very easy to see what was happening in this case.&lt;/p&gt;</comment>
                            <comment id="12994479" author="rhillegas" created="Mon, 14 Feb 2011 20:42:57 +0000"  >&lt;p&gt;Thanks to Mike for spotting that and to Lily for the instrumentation. Note that DataDictionary.stop() is supposed to shut down the the istat thread gracefully.&lt;/p&gt;</comment>
                            <comment id="12994745" author="knutanders" created="Tue, 15 Feb 2011 10:35:41 +0000"  >&lt;p&gt;Thanks to Erlend, who fixed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3618&quot; title=&quot;Perform thread dump with ASSERTS with jdk 1.5 or higher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3618&quot;&gt;&lt;del&gt;DERBY-3618&lt;/del&gt;&lt;/a&gt;, you mean... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12994845" author="rhillegas" created="Tue, 15 Feb 2011 15:44:14 +0000"  >&lt;p&gt;Attaching derby-5037-01-aa-checkForShutdown.diff. This is a first attempt to fix this bug. I would like to hear your opinions.&lt;/p&gt;

&lt;p&gt;The approach taken here is to assume that exceptions raised during database shutdown are meaningless and can be thrown away. That is, the istat thread now tries to ignore exceptions which are raised during database shutdown.&lt;/p&gt;

&lt;p&gt;There is then the tricky bit of figuring out whether the database is being shutdown. I have found that it is not sufficient to check whether the istat thread itself has been marked for shutdown. Sometimes I see daemonStopped set to true (meaning that the DataDictionary has marked the thread for shutdown) and sometimes daemonStopped is still false when Store raises an exception.&lt;/p&gt;

&lt;p&gt;As a backup, I am also checking the status of Database.isActive(). I am not sure this is the best global sign that the database is being shutdown. Please let me know if you think there is a better global flag. I have a hunch that TopService.inShutdown is a better global flag but I do not see how to get to it.&lt;/p&gt;


&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/daemon/IndexStatisticsDaemonImpl.java&lt;/p&gt;</comment>
                            <comment id="12994869" author="kmarsden" created="Tue, 15 Feb 2011 16:36:06 +0000"  >&lt;p&gt;Rick said: &quot;The approach taken here is to assume that exceptions raised during database shutdown are meaningless and can be thrown away.&quot;&lt;/p&gt;

&lt;p&gt;I  can recall cases where errors in shutdown were important to diagnosing user problems, so would prefer we not introduce a blanket assumption like that.  If possible,  I think it would be good for the shutdown process to do an orderly shutdown of the istat daemon if  is running before shutdown.&lt;/p&gt;

&lt;p&gt;Pardon if this this an ignorant approach. I am not familiar with the istat implementation, but just know that general error suppression  can be problematic.&lt;/p&gt;</comment>
                            <comment id="12994880" author="knutanders" created="Tue, 15 Feb 2011 17:04:17 +0000"  >&lt;p&gt;It sounds reasonable to me that the istat daemon simply ignores any exceptions if the database is being shut down under its feet. However, I think the patch also ignores exceptions when statistics are updated explicitly (e.g., by using ALTER TABLE or SYSCS_UPDATE_STATISTICS) because of the changes in runExplicitly(). We should probably continue raising exceptions if these explicit calls fail during shutdown.&lt;/p&gt;</comment>
                            <comment id="12994905" author="mikem" created="Tue, 15 Feb 2011 18:04:10 +0000"  >&lt;p&gt;I have not looked at patch yet.&lt;/p&gt;

&lt;p&gt;In keeping with trying to have as much zero admin as possible I am ok with the istat deamon handling it&apos;s own errors and not making those errors affect the rest of the server.  It&apos;s job is to work in background and OPTIONALLY complete units of work.  Because the&lt;br/&gt;
work it does is optional, it is in a unique situation for error handling and should take advantage of it - basically it can catch everything&lt;br/&gt;
clean up its resources move on.  If it gets an error&lt;br/&gt;
doing a piece of work it should catch it and try to figure out what to do.  Maybe it throws it away, maybe it retries it.   Deciding to throw away the unit of work when it detects that a shutdown is in progress is reasonable to me.   As I understand the&lt;br/&gt;
current design it is well suited to throwing away the unit of work, because it has a way to pick it up again the next time a query is run.   I think a good design would be that it&apos;s errors do not affect user threads in any way.  Once it throws away a unit of work and see&apos;s that&lt;br/&gt;
shutdown is in progress it should just shutdown.&lt;/p&gt;

&lt;p&gt;For some sorts of database shutdown this &quot;bottom-up&quot; shutdown may be the only way it will work.   For example when store gets&lt;br/&gt;
a serious problem while logging, it raises a database shutdown level error and for safety basically nulls out the ability to do i/o to &lt;br/&gt;
the log or the database.  This results in the kind of errors that the istat daemon is seeing.&lt;/p&gt;

&lt;p&gt;For an orderly shutdown on the database, should the system wait for istat daemon to complete it&apos;s current unit of work?  If so it &lt;br/&gt;
seems like it should be possible to make the system wait for istat daemon to shutdown, but I am not sure how easy that would be.&lt;/p&gt;

&lt;p&gt;There may be some value to logging information about failures in the background istat thread to derby.log, but i don&apos;t think by default&lt;br/&gt;
it should be enabled.  I guess the worst case is if there is some bug causing the istat daemon to always fail it&apos;s unit of work.  I know there&lt;br/&gt;
is already some toggle for istat logging, so maybe it&apos;s error logging could be tied to this somehow. &lt;/p&gt;

&lt;p&gt;This is a similar methodology done for background processing done in store using the monitor provided background daemon thread.  &lt;/p&gt;</comment>
                            <comment id="12994946" author="rhillegas" created="Tue, 15 Feb 2011 19:29:44 +0000"  >&lt;p&gt;Thanks to Kathey, Knut, and Mike for the quick feedback. Tests passed cleanly on the first rev of the patch. Attaching derby-5037-01-ab-checkForShutdown.diff. This second rev addresses Knut&apos;s concern that the user is entitled to an error if database shutdown aborts an ALTER TABLE statement or an explicit attempt to recompute statistics.&lt;/p&gt;

&lt;p&gt;Concerning Kathey&apos;s comment: As I read the code, the orderly shutdown of the istat thread will happen regardless of whether the shutdown-induced exception is thrown away. I think that the system will wait for the DataDictionary to shutdown and DataDictionary shutdown will, in turn, wait for the istat stop() logic to finish. &lt;/p&gt;

&lt;p&gt;Concerning Mike&apos;s comments: I don&apos;t think that there is much value in trying to coax istat into finishing the current unit of work if the rest of the system is shutting down. The worst that can happen is that the current unit of work will be rolled back. For this particular problem, I think that&apos;s what the exiting Store has already done and there is no point in trying to ask Store to do anything else. Rolling back the current unit of work is pretty much equivalent to what will happen to the other queued up units of work during orderly shutdown: they will simply be thrown away. I recommend against prolonging or complicating the shutdown.&lt;/p&gt;

&lt;p&gt;There might be some value in adding trace logic around the exception-swallowing but I&apos;m not sure how to filter the signal out of the noise here.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12994995" author="rhillegas" created="Tue, 15 Feb 2011 20:43:39 +0000"  >&lt;p&gt;Tests passed cleanly for me on derby-5037-01-ab-checkForShutdown.diff except for some variation of the istat-related instability in updatelocksJDBC30 tracked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5038&quot; title=&quot;updatelocks test failing in tinderbox when background update statistics are enabled.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5038&quot;&gt;&lt;del&gt;DERBY-5038&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5039&quot; title=&quot;store/updatelocksJDBC30.sql test failing in tinderbox when background update statistics are enabled.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5039&quot;&gt;&lt;del&gt;DERBY-5039&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/encryptionAll/storemats/storemats/updatelocksJDBC30.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: updatelocksJDBC30 jdk1.5.0_22 storemats:storemats 2011-02-15 11:10:10 ***&lt;br/&gt;
2504,2513d2503&lt;br/&gt;
&amp;lt; APP     |UserTran|TABLE   |1   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
&amp;lt; ij&amp;gt; next scan_cursor;&lt;br/&gt;
&amp;lt; A          |B          |C                                                                                                                               &lt;br/&gt;
&amp;lt; --------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&amp;lt; 3          |-30        |-three                                                                                                                          &lt;br/&gt;
&amp;lt; ij&amp;gt; update a set b=30,c=&apos;three&apos; where current of scan_cursor;&lt;br/&gt;
&amp;lt; 1 row inserted/updated/deleted&lt;br/&gt;
&amp;lt; ij&amp;gt; select * from lock_table order by tabname, type desc, mode, cnt, lockname;&lt;br/&gt;
&amp;lt; USERNAME|TRANTYPE|TYPE    |CNT |MODE|TABNAME     |LOCKNAME  |STATE|STATUS  &lt;br/&gt;
&amp;lt; ---------------------------------------------------------------------------&lt;br/&gt;
2514a2505,2514&lt;br/&gt;
&amp;gt; ij&amp;gt; next scan_cursor;&lt;br/&gt;
&amp;gt; A          |B          |C                                                                                                                               &lt;br/&gt;
&amp;gt; --------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&amp;gt; 3          |-30        |-three                                                                                                                          &lt;br/&gt;
&amp;gt; ij&amp;gt; update a set b=30,c=&apos;three&apos; where current of scan_cursor;&lt;br/&gt;
&amp;gt; 1 row inserted/updated/deleted&lt;br/&gt;
&amp;gt; ij&amp;gt; select * from lock_table order by tabname, type desc, mode, cnt, lockname;&lt;br/&gt;
&amp;gt; USERNAME|TRANTYPE|TYPE    |CNT |MODE|TABNAME     |LOCKNAME  |STATE|STATUS  &lt;br/&gt;
&amp;gt; ---------------------------------------------------------------------------&lt;br/&gt;
&amp;gt; APP     |UserTran|TABLE   |3   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
2524 del&lt;br/&gt;
&amp;lt; APP     |UserTran|TABLE   |2   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
2524a2524&lt;br/&gt;
&amp;gt; APP     |UserTran|TABLE   |3   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
2531 del&lt;br/&gt;
&amp;lt; APP     |UserTran|TABLE   |2   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
2531a2531&lt;br/&gt;
&amp;gt; APP     |UserTran|TABLE   |3   |IX  |A           |Tablelock |GRANT|ACTIVE  &lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   updatelocksJDBC30 jdk1.5.0_22 storemats:storemats 2011-02-15 11:10:24 ***&lt;br/&gt;
------------------------------------------------------&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12995001" author="knutanders" created="Tue, 15 Feb 2011 20:56:30 +0000"  >&lt;p&gt;Thanks for making the changes, Rick. I&apos;m fine with that patch.&lt;/p&gt;

&lt;p&gt;One small nit is that the comments in tryToGatherStats() seem to imply that StandardException can only be raised by non-debug jars and RuntimeException only by debug jars. I&apos;m not sure that&apos;s necessarily correct. For example, in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt; a NullPointerException is raised in this code when running with non-debug jars. I suppose the opposite could happen as well.&lt;/p&gt;</comment>
                            <comment id="12995011" author="kristwaa" created="Tue, 15 Feb 2011 21:22:30 +0000"  >&lt;p&gt;Attaching patch 2a.&lt;/p&gt;

&lt;p&gt;Providing my input as a patch I wrote when investigating this issue. I have not taken daemonStopped into consideration, as I don&apos;t know how it relates to db.isActive(). If the order in which they are set varies, the variable has to be considered too.&lt;/p&gt;

&lt;p&gt;Note also the debug code in the catch-block for RuntimeException, which should cause another RuntimeException to be thrown if &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt; is hit.&lt;/p&gt;

&lt;p&gt;I think Mike&apos;s comments/observations above agree pretty much with my thinking when writing the code. Seems there are several error-handling issues to iron out though...&lt;br/&gt;
A few specific comments:&lt;br/&gt;
 o I decided to not make Derby wait for the background thread to finish on shutdown, as it might potentially be scanning a very large table.&lt;br/&gt;
 o Logging is rather verbose now during testing, but I agree it should be less verbose (or maybe turned off completely) when released.&lt;br/&gt;
 o I&apos;m logging a lot of exceptions to aid testing/debugging. These should also go away, or be enabled by a property if the user wishes to do so.&lt;/p&gt;</comment>
                            <comment id="12995069" author="kmarsden" created="Wed, 16 Feb 2011 00:05:12 +0000"  >&lt;p&gt;Are the 376 failures on Win Vista 64 since istat was enabled the same thing as this issue?&lt;br/&gt;
&lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/vista-64/1069888-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/vista-64/1069888-suitesAll_diff.txt&lt;/a&gt;&lt;br/&gt;
Mostly it complains that wombat already exists, but has happened consistently since revision 1069888.&lt;/p&gt;</comment>
                            <comment id="12995151" author="lilywei" created="Wed, 16 Feb 2011 04:16:36 +0000"  >&lt;p&gt;Apply derby-5037-2a-alternative_patch.diff. On Windows 7, AutomaticIndexStatisticsTest failed on testShutdownWhileScanningThenDelete(line 181) on assertDirectoryDeleted(constructDbPath(db));&lt;br/&gt;
This is the stacktrace:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Error/failure logged at Tue Feb 15 19:54:25 PST 2011&amp;#93;&lt;/span&gt;&lt;br/&gt;
junit.framework.AssertionFailedError: Failed to delete 3 files (root=c:\derby2\t&lt;br/&gt;
runk\testtmp\system\singleUse\copyShutdown: c:\derby2\trunk\testtmp\system\singl&lt;br/&gt;
eUse\copyShutdown\seg0\c481.dat (isDir=false, canRead=true, canWrite=true, size=&lt;br/&gt;
22351872), c:\derby2\trunk\testtmp\system\singleUse\copyShutdown\seg0 (isDir=tru&lt;br/&gt;
e, canRead=true, canWrite=true, size=12288), c:\derby2\trunk\testtmp\system\sing&lt;br/&gt;
leUse\copyShutdown (isDir=true, canRead=true, canWrite=true, size=4096)&lt;br/&gt;
        at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeleted&lt;br/&gt;
(BaseJDBCTestCase.java:1496)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStati&lt;br/&gt;
sticsTest.testShutdownWhileScanningThenDelete(AutomaticIndexStatisticsTest.java:&lt;br/&gt;
181)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
        at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        Without study too much of the code, , should we put more sleep between &quot;JDBCDataSource.shutdownDatabase(ds); and assertDirectoryDeleted(constructDbPath(db));&quot;?&lt;/p&gt;

&lt;p&gt;        Will try derby-5037-01-ab-checkForShutdown.diff patch next?  Thanks.&lt;/p&gt;</comment>
                            <comment id="12995258" author="kristwaa" created="Wed, 16 Feb 2011 11:32:43 +0000"  >&lt;p&gt;I&apos;ve seen the delete error before too. If it is always c481.dat it would maybe be helpful to find out which conglomerate/table this is.&lt;br/&gt;
I&apos;ve also seen intermittent delete errors in other tests before the istat code was committed, so that may be a separate issue.&lt;/p&gt;

&lt;p&gt;Lily, did you run the tests with a sane or an insane build?&lt;br/&gt;
The 2a patch will only help with sane builds, with insane builds you will still get &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12995386" author="rhillegas" created="Wed, 16 Feb 2011 16:59:13 +0000"  >&lt;p&gt;Thanks for the continued analysis, everyone. Attaching derby-5037-01-ac-checkForShutdown.diff. This patch removes a comment line, hopefully addressing Knut&apos;s concerns about muddy wording. Committed at subversion revision 1071310.&lt;/p&gt;

&lt;p&gt;I have committed this patch in the interests of cleaning up the noise in the regression tests. Let&apos;s see if this does address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt; also.&lt;/p&gt;

&lt;p&gt;No doubt, additional work can be done in the area of error logging and exception swallowing. If people want to recommend other approaches, I recommend filing new JIRAs to track those efforts.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12995452" author="lilywei" created="Wed, 16 Feb 2011 18:53:51 +0000"  >&lt;p&gt;Thanks, Kristian and Rick. With with svn 1071319. I did not see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5030&quot; title=&quot; &amp;quot;index-stat-thread&amp;quot; java.lang.NullPointerException at store.access.btree.ControlRow.getControlRowForPage in suites.All &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5030&quot;&gt;&lt;del&gt;DERBY-5030&lt;/del&gt;&lt;/a&gt; (no delete problem from AutomaticIndexStatisticsTest). I still see it on the insane build for Windows 7.&lt;/p&gt;</comment>
                            <comment id="12996599" author="lilywei" created="Fri, 18 Feb 2011 21:28:28 +0000"  >&lt;p&gt;Thanks Rick for point out generateStatistics() no longer calls updateIndexStatsMinion() directly. This is delete problem stack trace I am seeing on Windows 7 (insane build)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Error/failure logged at Fri Feb 18 11:09:46 PST 2011&amp;#93;&lt;/span&gt;&lt;br/&gt;
junit.framework.AssertionFailedError: Failed to delete 3 files (root=c:\derby2\t&lt;br/&gt;
runk\testtmp\system\singleUse\copyShutdown: c:\derby2\trunk\testtmp\system\singl&lt;br/&gt;
eUse\copyShutdown\seg0\c481.dat (isDir=false, canRead=true, canWrite=true, size=&lt;br/&gt;
22351872), c:\derby2\trunk\testtmp\system\singleUse\copyShutdown\seg0 (isDir=tru&lt;br/&gt;
e, canRead=true, canWrite=true, size=12288), c:\derby2\trunk\testtmp\system\sing&lt;br/&gt;
leUse\copyShutdown (isDir=true, canRead=true, canWrite=true, size=4096)&lt;br/&gt;
        at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeleted&lt;br/&gt;
(BaseJDBCTestCase.java:1496)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStati&lt;br/&gt;
sticsTest.testShutdownWhileScanningThenDelete(AutomaticIndexStatisticsTest.java:&lt;br/&gt;
188)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
        at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
        at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
        at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
        at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
        at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
        at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
        at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
I think it is like what Kristian said earlier, it is relate to unable to delete singleUse/copyShutdown/seg0/c481.dat. Thanks!&lt;/p&gt;</comment>
                            <comment id="13001078" author="rhillegas" created="Tue, 1 Mar 2011 20:00:33 +0000"  >&lt;p&gt;The patch appears to have fixed this problem.&lt;/p&gt;</comment>
                            <comment id="13086847" author="kristwaa" created="Thu, 18 Aug 2011 08:18:30 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12492660">DERBY-4939</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12498403">DERBY-5026</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12498427">DERBY-5030</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12498432">DERBY-5031</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12471081" name="derby-5037-01-aa-checkForShutdown.diff" size="2993" author="rhillegas" created="Tue, 15 Feb 2011 15:44:14 +0000"/>
                            <attachment id="12471099" name="derby-5037-01-ab-checkForShutdown.diff" size="2651" author="rhillegas" created="Tue, 15 Feb 2011 19:29:44 +0000"/>
                            <attachment id="12471116" name="derby-5037-2a-alternative_patch.diff" size="2404" author="kristwaa" created="Tue, 15 Feb 2011 21:22:30 +0000"/>
                            <attachment id="12471194" name="derby_5037-01-ac-checkForShutdown.diff" size="2600" author="rhillegas" created="Wed, 16 Feb 2011 16:59:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Feb 2011 18:27:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24609</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0a1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35447</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>