<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:51:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4018/DERBY-4018.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4018] ArrayIndexOutOfBoundsException in TopService.inService under heavy multithreaded use of EmbeddedDriver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4018</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have created a test program that reproduces this issue.  The program pounds on Derby by running jobs on a pool of 10 threads.  Each job creates a new Derby database, a schema, a table, and an index.  Then it shuts down the database and finishes.  The program runs until an error occurs or until 1000 jobs have finished.&lt;/p&gt;

&lt;p&gt;The problem is very intermittent, and related I think to multithreaded access of a vector &quot;moduleInstances&quot; in TopService.java.  I am seeing the error on my machine about half the time I run the test program.  Sometimes it happens after 100 or 200 jobs...but sometimes not until 500 or more, or not at all.&lt;/p&gt;

&lt;p&gt;I am using the 10.4.2 derby.jar downloaded from &lt;a href=&quot;http://db.apache.org/derby/releases/release-10.4.2.0.cgi&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/releases/release-10.4.2.0.cgi&lt;/a&gt;, without any modifications on my part.&lt;/p&gt;

&lt;p&gt;I will attach the test program plus output from a run that failed with the ArrayIndexOutOfBoundsException.  (The actual exception thrown to the application from Derby is SQLException, but the underlying cause is an ArrayIndexOutOfBoundsException.)  BE AWARE that if you run this test program it can use up a GByte or more of disk space in your Java tmp directory.&lt;/p&gt;
</description>
                <environment>Windows XP SP2&lt;br/&gt;
Intel Core 2 Duo 3GHz, 3GB RAM&lt;br/&gt;
Java JDK 1.6.0_07</environment>
        <key id="12412295">DERBY-4018</key>
            <summary>ArrayIndexOutOfBoundsException in TopService.inService under heavy multithreaded use of EmbeddedDriver</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="clary2137">Jeff Clary</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Jan 2009 14:45:16 +0000</created>
                <updated>Fri, 21 Jan 2011 17:52:12 +0000</updated>
                            <resolved>Wed, 1 Jul 2009 23:29:01 +0100</resolved>
                                    <version>10.4.2.0</version>
                                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12663346" author="clary2137" created="Tue, 13 Jan 2009 14:48:07 +0000"  >&lt;p&gt;A test program that demonstrates the issue, plus the output from a run.  Note that this issue is intermittent, and only show up on my machine perhaps half the time I run the test program.&lt;/p&gt;</comment>
                            <comment id="12663361" author="kristwaa" created="Tue, 13 Jan 2009 15:49:22 +0000"  >&lt;p&gt;Reproduced this with trunk (on the second run) on a Intel Core2 Duo with JDK 1.6 (OpenSolaris).&lt;/p&gt;

&lt;p&gt;Stack trace with line numbers attached as &apos;trunk_stacktrace.txt&apos;.&lt;/p&gt;</comment>
                            <comment id="12663709" author="knutanders" created="Wed, 14 Jan 2009 10:13:09 +0000"  >&lt;p&gt;It looks like the synchronization in TopService is not used consistently. The moduleInstances variable is a Vector with its own internal synchronization, but the intention of the code seems to be that all accesses to it should be synchronized on the TopService object (this). Most of the places the accesses are synchronized on the TopService, but some (for instance where the exception is thrown) are not.&lt;/p&gt;

&lt;p&gt;I made an attempt on cleaning up the synchronization (see the attached patch), and also replaced the Vector with an ArrayList to make it clearer that we shouldn&apos;t rely on the internal synchronization in the Vector object. Now I don&apos;t see the exception, but instead I see a Java level deadlock between TopService and FileMonitor, so there is clearly some more cleanup needed. I&apos;m attaching the patch for reference anyway in case someone wants to have a look at it.&lt;/p&gt;</comment>
                            <comment id="12679321" author="npuz" created="Thu, 5 Mar 2009 19:41:06 +0000"  >&lt;p&gt;Hi, &lt;br/&gt;
Any update on this or plans to get a fix into trunk or 10.5 ? I&apos;m also running into this issue - in our application we have a separate derby db for each &quot;user&quot; and the access pattern is: open, do stuff, close. (it&apos;s not kept open so a bank of machines can all do it and users can be directed to any of them). &lt;/p&gt;

&lt;p&gt;I see now that the above fix hits a deadlock so I&apos;ll look more into it and play around. Any suggestions from derby developers, I&apos;m just starting w/ derby src code. &lt;/p&gt;

&lt;p&gt;-Nick&lt;/p&gt;</comment>
                            <comment id="12717790" author="mikem" created="Tue, 9 Jun 2009 20:13:42 +0100"  >&lt;p&gt;problem is in the monitor, marking as services component.&lt;/p&gt;</comment>
                            <comment id="12724567" author="knutanders" created="Fri, 26 Jun 2009 16:11:20 +0100"  >&lt;p&gt;d4018-1a is a partial fix for the problem, and it should be sufficient to fix the ArrayIndexOutOfBoundsException in TopService.inService(). I ran the full repro on two machines on which I could reproduce the problem reliably without the fix, and now I don&apos;t see the exception. I don&apos;t see the deadlock that I saw with the previous patch either.&lt;/p&gt;

&lt;p&gt;This fix factors out two for loops which iterate over moduleInstances into a helper method which synchronizes on the moduleInstances object over the entire loop. This prevents other threads from removing elements from the vector, and therefore the value returned by Vector.size() should still be valid when we call Vector.get(), and no AIOOBE should be thrown. I believe that it is safe, since the calls to size() and get() are already synchronized on the Vector, and the loop doesn&apos;t do anything except unsynchronized accessing a field in the object fetched from the Vector. So there should be no new ordering of how the synchronization locks are obtained, which was the problem with the previous patch.&lt;/p&gt;

&lt;p&gt;There are still a couple of places where there&apos;s an unsynchronized window between the checking of the size and the actual retrieval from the Vector. I&apos;ll see if I can address those in a follow-up patch.&lt;/p&gt;</comment>
                            <comment id="12724582" author="knutanders" created="Fri, 26 Jun 2009 16:41:14 +0100"  >&lt;p&gt;Derbyall and suites.All ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="12725090" author="knutanders" created="Mon, 29 Jun 2009 09:59:01 +0100"  >&lt;p&gt;Committed revision 789264.&lt;/p&gt;</comment>
                            <comment id="12725211" author="knutanders" created="Mon, 29 Jun 2009 16:14:16 +0100"  >&lt;p&gt;Patch 2a addresses the remaining issue where there&apos;s a possibility&lt;br/&gt;
that the size of the Vector changes between the calls to size() and&lt;br/&gt;
elementAt() in bootModule().&lt;/p&gt;

&lt;p&gt;I only added synchronization on moduleInstances over the two calls&lt;br/&gt;
that needed a consistent view of the Vector. Since the synchronization&lt;br/&gt;
block does not cover the entire for loop, there is still a possibility&lt;br/&gt;
that elements are added to or removed from the Vector between two&lt;br/&gt;
retrievals from it. That should be harmless, though, since it should&lt;br/&gt;
only make the loop skip one of the modules or look at one of the&lt;br/&gt;
modules twice.&lt;/p&gt;

&lt;p&gt;If one is skipped, the worst case would be if it was the module we&lt;br/&gt;
were looking for so that we boot a module unnecessarily, but this case&lt;br/&gt;
is already handled by the method and it&apos;ll just shut down the module&lt;br/&gt;
when it detects that it has been booted twice.&lt;/p&gt;

&lt;p&gt;If one module is looked at twice, it&apos;ll just conclude twice that it&apos;s&lt;br/&gt;
not the module we&apos;re looking for and go on to the next one. (Since&lt;br/&gt;
modules are always added to the end of the Vector currently, I don&apos;t&lt;br/&gt;
think this will ever happen with the code as it is today.)&lt;/p&gt;

&lt;p&gt;The patch does not introduce the possibility for any of those&lt;br/&gt;
situations by the way, they are just as likely without the patch.&lt;/p&gt;

&lt;p&gt;The repro still runs without hangs or ArrayIndexOutOfBoundsExceptions,&lt;br/&gt;
and both Derbyall and suites.All ran cleanly.&lt;/p&gt;</comment>
                            <comment id="12726108" author="knutanders" created="Wed, 1 Jul 2009 16:30:49 +0100"  >&lt;p&gt;Committed 2a with revision 790218.&lt;/p&gt;

&lt;p&gt;Will keep the issue open until the fixes have been back-ported to the 10.5 branch.&lt;/p&gt;</comment>
                            <comment id="12726247" author="knutanders" created="Wed, 1 Jul 2009 23:29:01 +0100"  >&lt;p&gt;Merged to 10.5 and committed revision 790412.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12397784" name="BeatDerbyToPieces.java" size="5642" author="clary2137" created="Tue, 13 Jan 2009 14:48:07 +0000"/>
                            <attachment id="12411930" name="d4018-1a.diff" size="2146" author="knutanders" created="Fri, 26 Jun 2009 16:11:20 +0100"/>
                            <attachment id="12412075" name="d4018-2a.diff" size="1969" author="knutanders" created="Mon, 29 Jun 2009 16:14:16 +0100"/>
                            <attachment id="12397785" name="program_output.txt" size="144843" author="clary2137" created="Tue, 13 Jan 2009 14:48:07 +0000"/>
                            <attachment id="12397878" name="sync.diff" size="4666" author="knutanders" created="Wed, 14 Jan 2009 10:13:09 +0000"/>
                            <attachment id="12397794" name="trunk_stacktrace.txt" size="6739" author="kristwaa" created="Tue, 13 Jan 2009 15:49:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Jan 2009 15:49:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23969</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0l8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37259</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>