<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3678/DERBY-3678.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3678] StackOverflowException in deadlock trace</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3678</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I am getting a deadlock in SYSTABLE. When I turn on Dderby.locks.deadlockTrace=true, I get a StackOverflowException&lt;/p&gt;

&lt;p&gt;Derby version The Apache Software Foundation - Apache Derby - 10.3.2.2&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;(618335): instance 80220011-0119-f93f-b912-00000000bced&lt;br/&gt;
on database directory /db/domains/geoff  &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Database Class Loader started - derby.database.classpath=&apos;&apos;&lt;br/&gt;
2008-05-17 23:44:36.380&lt;br/&gt;
GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-2,5,main&amp;#93;&lt;/span&gt; (XID = 7556), (SESSIONID = 4), (DATABASE =&lt;br/&gt;
domains/geoff), (DRDAID = null), Cleanup action starting&lt;br/&gt;
java.lang.StackOverflowError&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericExecutionFactory.getValueRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory.makeRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory.makeEmptyRow(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllConglomerateDescriptorsByNumber(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.TableNameInfo.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.buildLockTableString(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.createException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.buildException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForRead(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeScan.next(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllTableDescriptorsByTableId(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.TableNameInfo.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.buildLockTableString(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.createException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Timeout.buildException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForRead(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeScan.next(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllTableDescriptorsByTableId(Unknown&lt;br/&gt;
Source)&lt;/p&gt;</description>
                <environment>(this is actually in version 10.3.2.2)&lt;br/&gt;
MacOS 10, JDK 1.6</environment>
        <key id="12396285">DERBY-3678</key>
            <summary>StackOverflowException in deadlock trace</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="geoff_hendrey">geoff hendrey</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 May 2008 21:09:39 +0100</created>
                <updated>Tue, 11 May 2010 00:57:11 +0100</updated>
                            <resolved>Thu, 12 Jun 2008 00:43:56 +0100</resolved>
                                    <version>10.3.2.1</version>
                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12597893" author="knutanders" created="Mon, 19 May 2008 09:20:43 +0100"  >&lt;p&gt;Bryan Pendleton said this about the problem on derby-user (&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-user/200805.mbox/%3c48304502.8050602@amberpoint.com%3e):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-user/200805.mbox/%3c48304502.8050602@amberpoint.com%3e):&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) When the deadlock happens, the lock table tracing logic that is run&lt;br/&gt;
&amp;gt; by derby.locks.deadlockTrace is itself encountering the same lock&lt;br/&gt;
&amp;gt; problem, only that code has a bug and as you say you get stuck in an&lt;br/&gt;
&amp;gt; infinite recursion:&lt;br/&gt;
&amp;gt;  - got a deadlock, which causes&lt;br/&gt;
&amp;gt;    - deadlockTrace code to run, which&lt;br/&gt;
&amp;gt;      - get a deadlock, which causes&lt;br/&gt;
&amp;gt;        - deadlockTrace code to run, which&lt;br/&gt;
&amp;gt;          - get a deadlock, which causes ...&lt;br/&gt;
&amp;gt; and so forth.&lt;/p&gt;

&lt;p&gt;I think that&apos;s a correct observation (except it&apos;s not clear to me if it&apos;s a lock timeout or a deadlock). From the stack trace, it seems like we fail to get the scan protection lock on an index page for the SYS.SYSSCHEMAS table. That probably means that one thread is holding an exclusive lock on the scan protection row. Not sure how that could happen. Could be an index split deadlock (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2991&quot; title=&quot;Index split deadlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2991&quot;&gt;&lt;del&gt;DERBY-2991&lt;/del&gt;&lt;/a&gt;), but that doesn&apos;t sound very likely since this is the SYSSCHEMAS table. Or do you have multiple threads creating lots of schemas?&lt;/p&gt;</comment>
                            <comment id="12597964" author="geoff_hendrey" created="Mon, 19 May 2008 15:23:38 +0100"  >&lt;p&gt;&quot;Or do you have multiple threads creating lots of schemas?&quot;   &lt;br/&gt;
I&apos;m not creating any schemas at the time this problem happens.&lt;/p&gt;

&lt;p&gt;I will try to describe what I am doing, as background. There are two databases, naturally each has a different connection URL. Let&apos;s call them Database A and Database B. I read in a configuration file that describes a set of tables in Database A, and then I create those tables, and store some information about them in Database B.&lt;/p&gt;

&lt;p&gt;1) define tables in Database A&lt;br/&gt;
2) store some information about tables in Database A in a table in Database B&lt;br/&gt;
3) alter tables in Database A to add a named foreign key constraint to some of the tabes&lt;br/&gt;
4) store some more information about tables in A into a table in Database B&lt;/p&gt;

&lt;p&gt;The problem only occurs on step 4, and it only occurs when there are 9 insertions into Database B as part of step (4). If I remove a single item from my configuration file, so that step (4) only processes 8 items, there is no problem.&lt;/p&gt;

&lt;p&gt;Here is the trace from derby.language.logQueryPlan. I excerpted only the portions related to &quot;SYS....&quot;. There are two groups of relevant trace, and I separated them with &quot;=================&quot; in the cut-and-paste that follows. The lock timeout (or StackOverflowException if I turn on derby.locks.deadlockTrace) occurs after the second set of information in the logQueryPlan.&lt;/p&gt;

&lt;p&gt;2008-05-18 19:24:52.764 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8142), (SESSIONID = 2), EXECUTE STATEMENT SYS.&quot;getTables&quot; ******* Sort ResultSet:&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows input = 13&lt;br/&gt;
Rows returned = 13&lt;br/&gt;
Eliminate duplicates = false&lt;br/&gt;
In sorted order = false&lt;br/&gt;
Sort information:&lt;br/&gt;
        Number of rows input=13&lt;br/&gt;
        Number of rows output=13&lt;br/&gt;
        Sort type=internal&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            0.24&lt;br/&gt;
        optimizer estimated cost:            5.71&lt;/p&gt;

&lt;p&gt;Source result set:&lt;br/&gt;
        Project-Restrict ResultSet (20):&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen = 13&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        restriction = false&lt;br/&gt;
        projection = true&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                restriction time (milliseconds) = 0&lt;br/&gt;
                projection time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            0.24&lt;br/&gt;
                optimizer estimated cost:            5.71&lt;/p&gt;

&lt;p&gt;        Source result set:&lt;br/&gt;
                Nested Loop Join ResultSet:&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen from the left = 13&lt;br/&gt;
                Rows seen from the right = 13&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Rows returned = 13&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        optimizer estimated row count:            0.24&lt;br/&gt;
                        optimizer estimated cost:            5.71&lt;/p&gt;

&lt;p&gt;                Left result set:&lt;br/&gt;
                        Nested Loop Exists Join ResultSet:&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen from the left = 13&lt;br/&gt;
                        Rows seen from the right = 13&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        Rows returned = 13&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.06&lt;br/&gt;
                                optimizer estimated cost:            5.71&lt;/p&gt;

&lt;p&gt;                        Left result set:&lt;br/&gt;
                                Project-Restrict ResultSet (5):&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 32&lt;br/&gt;
                                Rows filtered = 19&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                        optimizer estimated cost:            5.43&lt;/p&gt;

&lt;p&gt;                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSTABLES:&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 32&lt;br/&gt;
                                        Columns accessed from heap = &lt;/p&gt;
{1, 2, 3}&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                optimizer estimated cost:            5.43&lt;br/&gt;
&lt;br/&gt;
                                                Index Scan ResultSet for SYSTABLES using index SYSTABLES_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 1&lt;br/&gt;
                                                Rows seen = 32&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched={0, 2}&lt;br/&gt;
                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=8&lt;br/&gt;
                                                        Number of pages visited=1&lt;br/&gt;
                                                        Number of rows qualified=32&lt;br/&gt;
                                                        Number of rows visited=40&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
&lt;br/&gt;
                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            5.43&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                        Right result set:&lt;br/&gt;
                                Project-Restrict ResultSet (8):&lt;br/&gt;
                                Number of opens = 13&lt;br/&gt;
                                Rows seen = 13&lt;br/&gt;
                                Rows filtered = 0&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                        optimizer estimated cost:            0.27&lt;br/&gt;
&lt;br/&gt;
                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSSCHEMAS:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                        Columns accessed from heap = {1}&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                optimizer estimated cost:            0.27&lt;br/&gt;
&lt;br/&gt;
                                                Index Scan ResultSet for SYSSCHEMAS using index SYSSCHEMAS_INDEX2 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 1&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=0&lt;br/&gt;
                                                        Number of pages visited=13&lt;br/&gt;
                                                        Number of rows qualified=13&lt;br/&gt;
                                                        Number of rows visited=13&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt; on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            0.27&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                Right result set:&lt;br/&gt;
                        Project-Restrict ResultSet (19):&lt;br/&gt;
                        Number of opens = 13&lt;br/&gt;
                        Rows seen = 52&lt;br/&gt;
                        Rows filtered = 39&lt;br/&gt;
                        restriction = true&lt;br/&gt;
                        projection = false&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                restriction time (milliseconds) = 0&lt;br/&gt;
                                projection time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.24&lt;br/&gt;
                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                        Source result set:&lt;br/&gt;
                                Union ResultSet:&lt;br/&gt;
                                Number of opens = 13&lt;br/&gt;
                                Rows seen from the left = 39&lt;br/&gt;
                                Rows seen from the right = 13&lt;br/&gt;
                                Rows returned = 52&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.24&lt;br/&gt;
                                        optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                Left result set:&lt;br/&gt;
                                        Union ResultSet:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen from the left = 26&lt;br/&gt;
                                        Rows seen from the right = 13&lt;br/&gt;
                                        Rows returned = 39&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.18&lt;br/&gt;
                                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                        Left result set:&lt;br/&gt;
                                                Union ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen from the left = 13&lt;br/&gt;
                                                Rows seen from the right = 13&lt;br/&gt;
                                                Rows returned = 26&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.12&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                                Left result set:&lt;br/&gt;
                                                        Normalize ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows seen = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.12&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                                        Source result set:&lt;br/&gt;
                                                                Row ResultSet:&lt;br/&gt;
                                                                Number of opens = 13&lt;br/&gt;
                                                                Rows returned = 13&lt;br/&gt;
                                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                                        optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                                                Right result set:&lt;br/&gt;
                                                        Row ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows returned = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                                        Right result set:&lt;br/&gt;
                                                Normalize ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.18&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                                Source result set:&lt;br/&gt;
                                                        Row ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows returned = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                                Right result set:&lt;br/&gt;
                                        Normalize ResultSet:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.24&lt;br/&gt;
                                                optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
                                        Source result set:&lt;br/&gt;
                                                Row ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows returned = 13&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2008-05-18 19:24:52.848 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8145), (SESSIONID = 2), EXECUTE STATEMENT SYS.&quot;getColumns&quot; ******* Sort ResultSet:&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows input = 6&lt;br/&gt;
Rows returned = 6&lt;br/&gt;
Eliminate duplicates = false&lt;br/&gt;
In sorted order = false&lt;br/&gt;
Sort information:&lt;br/&gt;
        Number of rows input=6&lt;br/&gt;
        Number of rows output=6&lt;br/&gt;
        Sort type=internal&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            0.18&lt;br/&gt;
        optimizer estimated cost:            7.30&lt;br/&gt;
&lt;br/&gt;
Source result set:&lt;br/&gt;
        Project-Restrict ResultSet (12):&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen = 6&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        restriction = false&lt;br/&gt;
        projection = true&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                restriction time (milliseconds) = 0&lt;br/&gt;
                projection time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            0.18&lt;br/&gt;
                optimizer estimated cost:            7.30&lt;br/&gt;
&lt;br/&gt;
        Source result set:&lt;br/&gt;
                Nested Loop Join ResultSet:&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen from the left = 1&lt;br/&gt;
                Rows seen from the right = 6&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Rows returned = 6&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        optimizer estimated row count:            0.18&lt;br/&gt;
                        optimizer estimated cost:            7.30&lt;br/&gt;
&lt;br/&gt;
                Left result set:&lt;br/&gt;
                        Nested Loop Join ResultSet:&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen from the left = 15&lt;br/&gt;
                        Rows seen from the right = 1&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        Rows returned = 1&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.05&lt;br/&gt;
                                optimizer estimated cost:            6.22&lt;br/&gt;
&lt;br/&gt;
                        Left result set:&lt;br/&gt;
                                Project-Restrict ResultSet (5):&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 15&lt;br/&gt;
                                Rows filtered = 0&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.43&lt;br/&gt;
                                        optimizer estimated cost:            4.99&lt;br/&gt;
&lt;br/&gt;
                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSSCHEMAS:&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 15&lt;br/&gt;
                                        Columns accessed from heap = {0, 1}&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.43&lt;br/&gt;
                                                optimizer estimated cost:            4.99&lt;br/&gt;
&lt;br/&gt;
                                                Index Scan ResultSet for SYSSCHEMAS using index SYSSCHEMAS_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 1&lt;br/&gt;
                                                Rows seen = 15&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=12&lt;br/&gt;
                                                        Number of pages visited=1&lt;br/&gt;
                                                        Number of rows qualified=15&lt;br/&gt;
                                                        Number of rows visited=27&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
&lt;br/&gt;
                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.43&lt;br/&gt;
                                                        optimizer estimated cost:            4.99&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                        Right result set:&lt;br/&gt;
                                Project-Restrict ResultSet (8):&lt;br/&gt;
                                Number of opens = 15&lt;br/&gt;
                                Rows seen = 13&lt;br/&gt;
                                Rows filtered = 12&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.05&lt;br/&gt;
                                        optimizer estimated cost:            1.23&lt;br/&gt;
&lt;br/&gt;
                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSTABLES:&lt;br/&gt;
                                        Number of opens = 15&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                        Columns accessed from heap = {0, 1, 3}&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.05&lt;br/&gt;
                                                optimizer estimated cost:            1.23&lt;br/&gt;
&lt;br/&gt;
                                                Index Scan ResultSet for SYSTABLES using index SYSTABLES_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 15&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=3&lt;br/&gt;
                                                        Number of deleted rows visited=120&lt;br/&gt;
                                                        Number of pages visited=15&lt;br/&gt;
                                                        Number of rows qualified=13&lt;br/&gt;
                                                        Number of rows visited=330&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
1&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
&lt;br/&gt;
                                                        qualifiers:&lt;br/&gt;
Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 1&lt;br/&gt;
Operator: =&lt;br/&gt;
Ordered nulls: false&lt;br/&gt;
Unknown return value: false&lt;br/&gt;
Negate comparison result: false&lt;br/&gt;
&lt;br/&gt;
                                                        optimizer estimated row count:            0.05&lt;br/&gt;
                                                        optimizer estimated cost:            1.23&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
                Right result set:&lt;br/&gt;
                        Project-Restrict ResultSet (11):&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen = 6&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        restriction = true&lt;br/&gt;
                        projection = true&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                restriction time (milliseconds) = 0&lt;br/&gt;
                                projection time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.18&lt;br/&gt;
                                optimizer estimated cost:            1.08&lt;br/&gt;
&lt;br/&gt;
                        Source result set:&lt;br/&gt;
                                Index Row to Base Row ResultSet for SYSCOLUMNS:&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 6&lt;br/&gt;
                                Columns accessed from heap = {0, 1, 2, 3, 4, 7, 8}&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.18&lt;br/&gt;
                                        optimizer estimated cost:            1.08&lt;br/&gt;
&lt;br/&gt;
                                        Index Scan ResultSet for SYSCOLUMNS using index SYSCOLUMNS_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 6&lt;br/&gt;
                                        Rows filtered = 0&lt;br/&gt;
                                        Fetch Size = 16&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
                                        scan information:&lt;br/&gt;
                                                Bit set of columns fetched=All&lt;br/&gt;
                                                Number of columns fetched=3&lt;br/&gt;
                                                Number of deleted rows visited=0&lt;br/&gt;
                                                Number of pages visited=2&lt;br/&gt;
                                                Number of rows qualified=6&lt;br/&gt;
                                                Number of rows visited=7&lt;br/&gt;
                                                Scan type=btree&lt;br/&gt;
                                                Tree height=2&lt;br/&gt;
                                                start position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                stop position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                optimizer estimated row count:            0.18&lt;br/&gt;
                                                optimizer estimated cost:            1.08&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2008-05-18 19:24:52.891 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8148), (SESSIONID = 3), SELECT CONSTRAINTNAME FROM SYS.SYSCONSTRAINTS ******* Index Scan ResultSet for SYSCONSTRAINTS using index SYSCONSTRAINTS_INDEX2 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 24&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        next time in milliseconds/row = 0&lt;br/&gt;
&lt;br/&gt;
scan information:&lt;br/&gt;
        Bit set of columns fetched={0}&lt;br/&gt;
        Number of columns fetched=1&lt;br/&gt;
        Number of deleted rows visited=20&lt;br/&gt;
        Number of pages visited=3&lt;br/&gt;
        Number of rows qualified=24&lt;br/&gt;
        Number of rows visited=44&lt;br/&gt;
        Scan type=btree&lt;br/&gt;
        Tree height=-1&lt;br/&gt;
        start position:&lt;br/&gt;
        None&lt;br/&gt;
        stop position:&lt;br/&gt;
        None&lt;br/&gt;
        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
        optimizer estimated row count:           43.00&lt;br/&gt;
        optimizer estimated cost:           61.46&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
==========================&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
2008-05-18 19:40:06.154 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8189), (SESSIONID = 2), EXECUTE STATEMENT SYS.&quot;getTables&quot; ******* Sort ResultSet:&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows input = 13&lt;br/&gt;
Rows returned = 13&lt;br/&gt;
Eliminate duplicates = false&lt;br/&gt;
In sorted order = false&lt;br/&gt;
Sort information:&lt;br/&gt;
        Number of rows input=13&lt;br/&gt;
        Number of rows output=13&lt;br/&gt;
        Sort type=internal&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            0.24&lt;br/&gt;
        optimizer estimated cost:            5.71&lt;br/&gt;
&lt;br/&gt;
Source result set:&lt;br/&gt;
        Project-Restrict ResultSet (20):&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen = 13&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        restriction = false&lt;br/&gt;
        projection = true&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                restriction time (milliseconds) = 0&lt;br/&gt;
                projection time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            0.24&lt;br/&gt;
                optimizer estimated cost:            5.71&lt;br/&gt;
&lt;br/&gt;
        Source result set:&lt;br/&gt;
                Nested Loop Join ResultSet:&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen from the left = 13&lt;br/&gt;
                Rows seen from the right = 13&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Rows returned = 13&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        optimizer estimated row count:            0.24&lt;br/&gt;
                        optimizer estimated cost:            5.71&lt;br/&gt;
&lt;br/&gt;
                Left result set:&lt;br/&gt;
                        Nested Loop Exists Join ResultSet:&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen from the left = 13&lt;br/&gt;
                        Rows seen from the right = 13&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        Rows returned = 13&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.06&lt;br/&gt;
                                optimizer estimated cost:            5.71&lt;br/&gt;
&lt;br/&gt;
                        Left result set:&lt;br/&gt;
                                Project-Restrict ResultSet (5):&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 32&lt;br/&gt;
                                Rows filtered = 19&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                        optimizer estimated cost:            5.43&lt;br/&gt;
&lt;br/&gt;
                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSTABLES:&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 32&lt;br/&gt;
                                        Columns accessed from heap = {1, 2, 3}
&lt;p&gt;                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                optimizer estimated cost:            5.43&lt;/p&gt;

&lt;p&gt;                                                Index Scan ResultSet for SYSTABLES using index SYSTABLES_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 1&lt;br/&gt;
                                                Rows seen = 32&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=&lt;/p&gt;
{0, 2}
&lt;p&gt;                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=8&lt;br/&gt;
                                                        Number of pages visited=1&lt;br/&gt;
                                                        Number of rows qualified=32&lt;br/&gt;
                                                        Number of rows visited=40&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            5.43&lt;/p&gt;


&lt;p&gt;                        Right result set:&lt;br/&gt;
                                Project-Restrict ResultSet (8):&lt;br/&gt;
                                Number of opens = 13&lt;br/&gt;
                                Rows seen = 13&lt;br/&gt;
                                Rows filtered = 0&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                        optimizer estimated cost:            0.27&lt;/p&gt;

&lt;p&gt;                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSSCHEMAS:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                        Columns accessed from heap = &lt;/p&gt;
{1}
&lt;p&gt;                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                optimizer estimated cost:            0.27&lt;/p&gt;

&lt;p&gt;                                                Index Scan ResultSet for SYSSCHEMAS using index SYSSCHEMAS_INDEX2 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 1&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=0&lt;br/&gt;
                                                        Number of pages visited=13&lt;br/&gt;
                                                        Number of rows qualified=13&lt;br/&gt;
                                                        Number of rows visited=13&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt; on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            0.27&lt;/p&gt;



&lt;p&gt;                Right result set:&lt;br/&gt;
                        Project-Restrict ResultSet (19):&lt;br/&gt;
                        Number of opens = 13&lt;br/&gt;
                        Rows seen = 52&lt;br/&gt;
                        Rows filtered = 39&lt;br/&gt;
                        restriction = true&lt;br/&gt;
                        projection = false&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                restriction time (milliseconds) = 0&lt;br/&gt;
                                projection time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.24&lt;br/&gt;
                                optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                        Source result set:&lt;br/&gt;
                                Union ResultSet:&lt;br/&gt;
                                Number of opens = 13&lt;br/&gt;
                                Rows seen from the left = 39&lt;br/&gt;
                                Rows seen from the right = 13&lt;br/&gt;
                                Rows returned = 52&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.24&lt;br/&gt;
                                        optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                Left result set:&lt;br/&gt;
                                        Union ResultSet:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen from the left = 26&lt;br/&gt;
                                        Rows seen from the right = 13&lt;br/&gt;
                                        Rows returned = 39&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.18&lt;br/&gt;
                                                optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                        Left result set:&lt;br/&gt;
                                                Union ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen from the left = 13&lt;br/&gt;
                                                Rows seen from the right = 13&lt;br/&gt;
                                                Rows returned = 26&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.12&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                                Left result set:&lt;br/&gt;
                                                        Normalize ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows seen = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.12&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                                        Source result set:&lt;br/&gt;
                                                                Row ResultSet:&lt;br/&gt;
                                                                Number of opens = 13&lt;br/&gt;
                                                                Rows returned = 13&lt;br/&gt;
                                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                                        optimizer estimated cost:            0.00&lt;/p&gt;



&lt;p&gt;                                                Right result set:&lt;br/&gt;
                                                        Row ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows returned = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;/p&gt;



&lt;p&gt;                                        Right result set:&lt;br/&gt;
                                                Normalize ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.18&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                                Source result set:&lt;br/&gt;
                                                        Row ResultSet:&lt;br/&gt;
                                                        Number of opens = 13&lt;br/&gt;
                                                        Rows returned = 13&lt;br/&gt;
                                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                                open time (milliseconds) = 0&lt;br/&gt;
                                                                next time (milliseconds) = 0&lt;br/&gt;
                                                                close time (milliseconds) = 0&lt;br/&gt;
                                                                optimizer estimated row count:            0.06&lt;br/&gt;
                                                                optimizer estimated cost:            0.00&lt;/p&gt;




&lt;p&gt;                                Right result set:&lt;br/&gt;
                                        Normalize ResultSet:&lt;br/&gt;
                                        Number of opens = 13&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.24&lt;br/&gt;
                                                optimizer estimated cost:            0.00&lt;/p&gt;

&lt;p&gt;                                        Source result set:&lt;br/&gt;
                                                Row ResultSet:&lt;br/&gt;
                                                Number of opens = 13&lt;br/&gt;
                                                Rows returned = 13&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        optimizer estimated row count:            0.06&lt;br/&gt;
                                                        optimizer estimated cost:            0.00&lt;/p&gt;






&lt;p&gt;2008-05-18 19:40:06.201 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8191), (SESSIONID = 2), EXECUTE STATEMENT SYS.&quot;getColumns&quot; ******* Sort ResultSet:&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows input = 6&lt;br/&gt;
Rows returned = 6&lt;br/&gt;
Eliminate duplicates = false&lt;br/&gt;
In sorted order = false&lt;br/&gt;
Sort information:&lt;br/&gt;
        Number of rows input=6&lt;br/&gt;
        Number of rows output=6&lt;br/&gt;
        Sort type=internal&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            0.18&lt;br/&gt;
        optimizer estimated cost:            7.30&lt;/p&gt;

&lt;p&gt;Source result set:&lt;br/&gt;
        Project-Restrict ResultSet (12):&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen = 6&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        restriction = false&lt;br/&gt;
        projection = true&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                restriction time (milliseconds) = 0&lt;br/&gt;
                projection time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            0.18&lt;br/&gt;
                optimizer estimated cost:            7.30&lt;/p&gt;

&lt;p&gt;        Source result set:&lt;br/&gt;
                Nested Loop Join ResultSet:&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen from the left = 1&lt;br/&gt;
                Rows seen from the right = 6&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Rows returned = 6&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        optimizer estimated row count:            0.18&lt;br/&gt;
                        optimizer estimated cost:            7.30&lt;/p&gt;

&lt;p&gt;                Left result set:&lt;br/&gt;
                        Nested Loop Join ResultSet:&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen from the left = 15&lt;br/&gt;
                        Rows seen from the right = 1&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        Rows returned = 1&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.05&lt;br/&gt;
                                optimizer estimated cost:            6.22&lt;/p&gt;

&lt;p&gt;                        Left result set:&lt;br/&gt;
                                Project-Restrict ResultSet (5):&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 15&lt;br/&gt;
                                Rows filtered = 0&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.43&lt;br/&gt;
                                        optimizer estimated cost:            4.99&lt;/p&gt;

&lt;p&gt;                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSSCHEMAS:&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 15&lt;br/&gt;
                                        Columns accessed from heap = &lt;/p&gt;
{0, 1}
&lt;p&gt;                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.43&lt;br/&gt;
                                                optimizer estimated cost:            4.99&lt;/p&gt;

&lt;p&gt;                                                Index Scan ResultSet for SYSSCHEMAS using index SYSSCHEMAS_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 1&lt;br/&gt;
                                                Rows seen = 15&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=2&lt;br/&gt;
                                                        Number of deleted rows visited=12&lt;br/&gt;
                                                        Number of pages visited=1&lt;br/&gt;
                                                        Number of rows qualified=15&lt;br/&gt;
                                                        Number of rows visited=27&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;                                                        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                        optimizer estimated row count:            0.43&lt;br/&gt;
                                                        optimizer estimated cost:            4.99&lt;/p&gt;


&lt;p&gt;                        Right result set:&lt;br/&gt;
                                Project-Restrict ResultSet (8):&lt;br/&gt;
                                Number of opens = 15&lt;br/&gt;
                                Rows seen = 13&lt;br/&gt;
                                Rows filtered = 12&lt;br/&gt;
                                restriction = true&lt;br/&gt;
                                projection = true&lt;br/&gt;
                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        restriction time (milliseconds) = 0&lt;br/&gt;
                                        projection time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.05&lt;br/&gt;
                                        optimizer estimated cost:            1.23&lt;/p&gt;

&lt;p&gt;                                Source result set:&lt;br/&gt;
                                        Index Row to Base Row ResultSet for SYSTABLES:&lt;br/&gt;
                                        Number of opens = 15&lt;br/&gt;
                                        Rows seen = 13&lt;br/&gt;
                                        Columns accessed from heap = &lt;/p&gt;
{0, 1, 3}
&lt;p&gt;                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                optimizer estimated row count:            0.05&lt;br/&gt;
                                                optimizer estimated cost:            1.23&lt;/p&gt;

&lt;p&gt;                                                Index Scan ResultSet for SYSTABLES using index SYSTABLES_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                                Number of opens = 15&lt;br/&gt;
                                                Rows seen = 13&lt;br/&gt;
                                                Rows filtered = 0&lt;br/&gt;
                                                Fetch Size = 16&lt;br/&gt;
                                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                                        open time (milliseconds) = 0&lt;br/&gt;
                                                        next time (milliseconds) = 0&lt;br/&gt;
                                                        close time (milliseconds) = 0&lt;br/&gt;
                                                        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                                                scan information:&lt;br/&gt;
                                                        Bit set of columns fetched=All&lt;br/&gt;
                                                        Number of columns fetched=3&lt;br/&gt;
                                                        Number of deleted rows visited=120&lt;br/&gt;
                                                        Number of pages visited=15&lt;br/&gt;
                                                        Number of rows qualified=13&lt;br/&gt;
                                                        Number of rows visited=330&lt;br/&gt;
                                                        Scan type=btree&lt;br/&gt;
                                                        Tree height=1&lt;br/&gt;
                                                        start position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
1&lt;br/&gt;
                                                        stop position:&lt;br/&gt;
        &amp;gt;= on first 1 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;/p&gt;

&lt;p&gt;                                                        qualifiers:&lt;br/&gt;
Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 1&lt;br/&gt;
Operator: =&lt;br/&gt;
Ordered nulls: false&lt;br/&gt;
Unknown return value: false&lt;br/&gt;
Negate comparison result: false&lt;/p&gt;

&lt;p&gt;                                                        optimizer estimated row count:            0.05&lt;br/&gt;
                                                        optimizer estimated cost:            1.23&lt;/p&gt;



&lt;p&gt;                Right result set:&lt;br/&gt;
                        Project-Restrict ResultSet (11):&lt;br/&gt;
                        Number of opens = 1&lt;br/&gt;
                        Rows seen = 6&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                        restriction = true&lt;br/&gt;
                        projection = true&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                restriction time (milliseconds) = 0&lt;br/&gt;
                                projection time (milliseconds) = 0&lt;br/&gt;
                                optimizer estimated row count:            0.18&lt;br/&gt;
                                optimizer estimated cost:            1.08&lt;/p&gt;

&lt;p&gt;                        Source result set:&lt;br/&gt;
                                Index Row to Base Row ResultSet for SYSCOLUMNS:&lt;br/&gt;
                                Number of opens = 1&lt;br/&gt;
                                Rows seen = 6&lt;br/&gt;
                                Columns accessed from heap = &lt;/p&gt;
{0, 1, 2, 3, 4, 7, 8}
&lt;p&gt;                                        constructor time (milliseconds) = 0&lt;br/&gt;
                                        open time (milliseconds) = 0&lt;br/&gt;
                                        next time (milliseconds) = 0&lt;br/&gt;
                                        close time (milliseconds) = 0&lt;br/&gt;
                                        optimizer estimated row count:            0.18&lt;br/&gt;
                                        optimizer estimated cost:            1.08&lt;/p&gt;

&lt;p&gt;                                        Index Scan ResultSet for SYSCOLUMNS using index SYSCOLUMNS_INDEX1 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
                                        Number of opens = 1&lt;br/&gt;
                                        Rows seen = 6&lt;br/&gt;
                                        Rows filtered = 0&lt;br/&gt;
                                        Fetch Size = 16&lt;br/&gt;
                                                constructor time (milliseconds) = 0&lt;br/&gt;
                                                open time (milliseconds) = 0&lt;br/&gt;
                                                next time (milliseconds) = 0&lt;br/&gt;
                                                close time (milliseconds) = 0&lt;br/&gt;
                                                next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                                        scan information:&lt;br/&gt;
                                                Bit set of columns fetched=All&lt;br/&gt;
                                                Number of columns fetched=3&lt;br/&gt;
                                                Number of deleted rows visited=0&lt;br/&gt;
                                                Number of pages visited=3&lt;br/&gt;
                                                Number of rows qualified=6&lt;br/&gt;
                                                Number of rows visited=7&lt;br/&gt;
                                                Scan type=btree&lt;br/&gt;
                                                Tree height=2&lt;br/&gt;
                                                start position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                stop position:&lt;br/&gt;
        &amp;gt;= on first 2 column(s).&lt;br/&gt;
        Ordered null semantics on the following columns:&lt;br/&gt;
0&lt;br/&gt;
                                                qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                                optimizer estimated row count:            0.18&lt;br/&gt;
                                                optimizer estimated cost:            1.08&lt;/p&gt;




&lt;p&gt;2008-05-18 19:40:06.219 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;btpool0-4,5,main&amp;#93;&lt;/span&gt; (XID = 8193), (SESSIONID = 3), SELECT CONSTRAINTNAME FROM SYS.SYSCONSTRAINTS ******* Index Scan ResultSet for SYSCONSTRAINTS using index SYSCONSTRAINTS_INDEX2 at read uncommitted isolation level using share row locking chosen by the optimizer&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 24&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
Fetch Size = 16&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;scan information:&lt;br/&gt;
        Bit set of columns fetched=&lt;/p&gt;
{0}
&lt;p&gt;        Number of columns fetched=1&lt;br/&gt;
        Number of deleted rows visited=24&lt;br/&gt;
        Number of pages visited=3&lt;br/&gt;
        Number of rows qualified=24&lt;br/&gt;
        Number of rows visited=48&lt;br/&gt;
        Scan type=btree&lt;br/&gt;
        Tree height=-1&lt;br/&gt;
        start position:&lt;br/&gt;
        None&lt;br/&gt;
        stop position:&lt;br/&gt;
        None&lt;br/&gt;
        qualifiers:&lt;br/&gt;
None&lt;br/&gt;
        optimizer estimated row count:           26.00&lt;br/&gt;
        optimizer estimated cost:           59.49&lt;/p&gt;
</comment>
                            <comment id="12599713" author="geoff_hendrey" created="Sun, 25 May 2008 21:11:04 +0100"  >&lt;p&gt;Any plan to investigate? this is a major issue for us. Especially if you run derby embedded, this will freeze the webserver that shares the JVM with the database. I have to &quot;kill -9&quot; the process, it is frozen so badly. I can gather as much information as you need to help resolve this, just tell me what you need.&lt;/p&gt;</comment>
                            <comment id="12599769" author="knutanders" created="Mon, 26 May 2008 08:07:28 +0100"  >&lt;p&gt;Dag H. Wanvik posted the following comment on derby-dev:&lt;/p&gt;

&lt;p&gt;The following scenario creates a hang when a 2nd connection is made&lt;br/&gt;
for the user &quot;newuser&quot;:&lt;/p&gt;

&lt;p&gt;&amp;gt; java -Dij.exceptionTrace=true org.apache.derby.tools.ij&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:wombat;user=newuser&apos;;&lt;br/&gt;
                            &amp;#8211; no schema is yet created for newuser.                          &lt;br/&gt;
ij&amp;gt; autocommit off;&lt;br/&gt;
ij&amp;gt; create table i (i int); &amp;#8211; the schema is only created for &apos;newuser&apos; at this point&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;Notice that this session has not yet committed... now we make a new&lt;br/&gt;
session with the same user:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby:wombat;user=newuser&apos;;&lt;br/&gt;
ERROR 40XL1: A lock could not be obtained within the time requested&lt;/p&gt;

&lt;p&gt;Might this be what happens for you?  The first time a new user&lt;br/&gt;
connects and creates a database object, his schema will be&lt;br/&gt;
created. But until that session commits, another session cannot login&lt;br/&gt;
with the same user name, since the new entry in SYSSCHEMAS&lt;br/&gt;
corresponding to the new user&apos;s schema has not been committed either&lt;br/&gt;
(it has a write lock on it so it can&apos;t be read by the second session).&lt;/p&gt;

&lt;p&gt;Note, even if you don&apos;t use explicit users, there will still be be an&lt;br/&gt;
implicit user, so the same thing applies.&lt;/p&gt;

&lt;p&gt;Dag&lt;/p&gt;

&lt;p&gt;ERROR 40XL1: A lock could not be obtained within the time requested&lt;br/&gt;
(full stack trace I got):&lt;/p&gt;

&lt;p&gt;java.sql.SQLTransactionRollbackException: A lock could not be obtained within the time requested&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:201)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2179)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkUserIsNotARole(EmbedConnection.java:1197)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkUserCredentials(EmbedConnection.java:1130)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:398)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:54)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:238)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:582)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:154)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.dynamicConnection(ij.java:1237)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ConnectStatement(ij.java:1087)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ijStatement(ij.java:915)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:328)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
Caused by: java.sql.SQLException: A lock could not be obtained within the time requested&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	... 23 more&lt;br/&gt;
Caused by: ERROR 40XL1: A lock could not be obtained within the time requested&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)&lt;br/&gt;
	at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(ConcurrentLockSet.java:602)&lt;br/&gt;
	at org.apache.derby.impl.services.locks.AbstractPool.lockObject(AbstractPool.java:117)&lt;br/&gt;
	at org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(ConcurrentPool.java:28)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForRead(RowLocking3.java:187)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:520)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:638)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(B2IRowLocking3.java:335)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(B2IRowLocking3.java:628)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(B2IRowLockingRR.java:112)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:304)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeScan.next(BTreeScan.java:1756)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(DataDictionaryImpl.java:8243)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(DataDictionaryImpl.java:1559)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(DataDictionaryImpl.java:1469)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initDefaultSchemaDescriptor(GenericLanguageConnectionContext.java:370)&lt;br/&gt;
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initialize(GenericLanguageConnectionContext.java:347)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.setupConnection(BasicDatabase.java:309)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.startTransaction(TransactionResourceImpl.java:188)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkUserIsNotARole(EmbedConnection.java:1166)&lt;br/&gt;
	... 18 more&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12599770" author="knutanders" created="Mon, 26 May 2008 08:09:05 +0100"  >&lt;p&gt;Kathey Marsden posted a comment on derby-dev saying that the issue mentioned by Dag is filed as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-48&quot; title=&quot; A connection request that has a default schema that is being created by another transaction will fail to connect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-48&quot;&gt;&lt;del&gt;DERBY-48&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12599772" author="knutanders" created="Mon, 26 May 2008 08:29:54 +0100"  >&lt;p&gt;When I try Dag&apos;s test case with derby.locks.deadlockTrace=true, I see the originally reported StackOverflowException:&lt;/p&gt;

&lt;p&gt;$ java -Dderby.locks.waitTimeout=1 -Dderby.locks.deadlockTrace=true -jar derbyrun.jar ij&lt;br/&gt;
ij version 10.5&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:wombat;user=newuser;create=true&apos;;&lt;br/&gt;
ij&amp;gt; autocommit off; &lt;br/&gt;
ij&amp;gt; create table i (i int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:wombat;user=newuser&apos;;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.lang.StackOverflowError&apos;.&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12600488" author="geoff_hendrey" created="Wed, 28 May 2008 15:32:18 +0100"  >&lt;p&gt;I only have one connection open to the given database. So it seems this problem will occur even with only one connection. However, I found that the problem can be made to go away, in my case, by more carefully closing my prepared statements immediately after I am done with them, instead of relying on Connection.close. So the problem seems, in my case,  to be related to having 9 or more PreparedStatements open through a given connection.&lt;/p&gt;</comment>
                            <comment id="12600669" author="dagw" created="Thu, 29 May 2008 03:48:00 +0100"  >&lt;p&gt;&quot;geoff hendrey (JIRA)&quot; &amp;lt;jira@apache.org&amp;gt; writes:&lt;/p&gt;

&lt;p&gt;&amp;gt; I only have one connection open to the given database. So it seems&lt;br/&gt;
&amp;gt; this problem will occur even with only one connection. However, I&lt;br/&gt;
&amp;gt; found that the problem can be made to go away, in my case, by more&lt;br/&gt;
&amp;gt; carefully closing my prepared statements immediately after I am done&lt;br/&gt;
&amp;gt; with them, instead of relying on Connection.close. So the problem&lt;br/&gt;
&amp;gt; seems, in my case, to be related to having 9 or more&lt;br/&gt;
&amp;gt; PreparedStatements open through a given connection.&lt;/p&gt;

&lt;p&gt;Would you be able to post a repro with and without the mod that made it work? It would help a lot in pin-pointing&lt;br/&gt;
your problem...&lt;/p&gt;</comment>
                            <comment id="12601654" author="dagw" created="Mon, 2 Jun 2008 16:41:32 +0100"  >&lt;p&gt;The underlying issue that provoked the bug in the deadlock detection (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-48&quot; title=&quot; A connection request that has a default schema that is being created by another transaction will fail to connect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-48&quot;&gt;&lt;del&gt;DERBY-48&lt;/del&gt;&lt;/a&gt;) in this case,&lt;br/&gt;
has been fixed on trunk. &lt;br/&gt;
To reproduce the stack overflow now that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-48&quot; title=&quot; A connection request that has a default schema that is being created by another transaction will fail to connect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-48&quot;&gt;&lt;del&gt;DERBY-48&lt;/del&gt;&lt;/a&gt; is fixed, one could roll back that fix or find some other&lt;br/&gt;
way of provoking it.&lt;/p&gt;</comment>
                            <comment id="12602130" author="dagw" created="Wed, 4 Jun 2008 01:27:00 +0100"  >&lt;p&gt;This patch, derby-3678-1, adds a testcase, testDerby3678, to&lt;br/&gt;
LazyDefaultSchemaCreationTest. This reproduces the infinite recursion&lt;br/&gt;
seen by this issue, if applied without the rest of the patch, which&lt;br/&gt;
also contains a fix.&lt;/p&gt;

&lt;p&gt;Description of the problem:&lt;/p&gt;

&lt;p&gt;A time-out occurs when a second transaction tries to connect if&lt;br/&gt;
another connection creates a schema and populates it with a table&lt;br/&gt;
without committing. See also &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-48&quot; title=&quot; A connection request that has a default schema that is being created by another transaction will fail to connect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-48&quot;&gt;&lt;del&gt;DERBY-48&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the repro test case, after the timeout occurs on the second&lt;br/&gt;
connect, the code in Timeout.java tries to construct the diagnostic&lt;br/&gt;
lock table when tracing is enabled&lt;br/&gt;
(derby.locks.deadlockTrace=true). The first thing Timeout does when&lt;br/&gt;
contructing an exception (inside buildLockTableString), is to create a&lt;br/&gt;
new instance of TableNameInfo, which it uses to map conglomerate ids&lt;br/&gt;
to names to make the print-out more user friendly.&lt;/p&gt;

&lt;p&gt;The constructor of TableNameInfo calls&lt;br/&gt;
DataDictionary#hashAllTableDescriptorsByTableId, which scans&lt;br/&gt;
SYS.SYSTABLES in read uncommitted mode. When an entry is found, a&lt;br/&gt;
descriptor for that table is built&lt;br/&gt;
(SYSTABLESRowFactory#buildDescriptor).&lt;/p&gt;

&lt;p&gt;As part of building the descriptor for the table, buildDescriptor&lt;br/&gt;
tries to look up thats table&apos;s schema using the UUID of the schema&lt;br/&gt;
(found in the row from SYSTABLES describing the table) using&lt;br/&gt;
dd.getSchemaDescriptor. This method tries to read SYS.SYSSCHEMAS with&lt;br/&gt;
repeatable read mode, which leads to the recursive lock and finally&lt;br/&gt;
stack overflow for the thread.&lt;/p&gt;

&lt;p&gt;If the lookup of the table&apos;s schema is done with read uncommitted&lt;br/&gt;
instead, the recursion will not happen. This seems permissible, since&lt;br/&gt;
SYS.SYSTABLES is also read in read uncommitted mode from&lt;br/&gt;
hashAllTableDescriptorsByTableId, which is only ever called from&lt;br/&gt;
TableNameInfo, which, in turn, is only used for diagnostics, as far as&lt;br/&gt;
I can tell.&lt;/p&gt;

&lt;p&gt;Patch description:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds a new testcase to LazyDefaultSchemaCreationTest&lt;/li&gt;
	&lt;li&gt;Makes hashAllTableDescriptorsByTableId use read uncommitted mode when&lt;br/&gt;
  accessing SYS.SYSSCHEMAS. Unfortunately I had to add many overloads&lt;br/&gt;
  to be able to propagate the isolation mode all the way down. Is&lt;br/&gt;
  there a better way?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Running regressions now.&lt;/p&gt;</comment>
                            <comment id="12602255" author="dagw" created="Wed, 4 Jun 2008 12:50:02 +0100"  >&lt;p&gt;Regressions passed.&lt;/p&gt;</comment>
                            <comment id="12603583" author="dagw" created="Mon, 9 Jun 2008 16:09:31 +0100"  >&lt;p&gt;I will commit this patch soon if nobody has any objections. I&apos;d still appreciate a review of this one, though.&lt;/p&gt;</comment>
                            <comment id="12603855" author="knutanders" created="Tue, 10 Jun 2008 13:51:25 +0100"  >&lt;p&gt;The approach looks fine to me. Two tiny nits:&lt;/p&gt;

&lt;p&gt;1. Javadoc for hashAllTableDescriptorsByTableId() should be updated:&lt;br/&gt;
  &quot;This method will scan SYS.SYSTABLES at READ UNCOMMITTED.&quot; --&amp;gt; &quot;This method will scan SYS.SYSTABLES and SYS.SYSSCHEMAS at READ UNCOMMITTED.&quot;&lt;/p&gt;

&lt;p&gt;2. The indentation seems to have been accidentally deleted for a line in DataDictionaryImpl:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/**&lt;br/&gt;
+&lt;br/&gt;
+/**&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Get the target schema by searching for a matching row&lt;/li&gt;
	&lt;li&gt;in SYSSCHEMAS by schema name.  Read only scan.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12603861" author="knutanders" created="Tue, 10 Jun 2008 14:04:59 +0100"  >&lt;p&gt;I also noticed that hashAllTableDescriptorsByTableId() says:&lt;/p&gt;

&lt;p&gt;        // it is important for read uncommitted scans to use fetchNext() rather&lt;br/&gt;
        // than fetch, so that the fetch happens while latch is held, otherwise&lt;br/&gt;
        // the next() might position the scan on a row, but the subsequent&lt;br/&gt;
        // fetch() may find the row deleted or purged from the table.&lt;/p&gt;

&lt;p&gt;With the patch, getDescriptorViaIndexMinion() sometimes uses read uncommitted isolation level, but still it uses next() + fetch() instead of fetchNext(). Do you think this could cause any problems?&lt;/p&gt;</comment>
                            <comment id="12604041" author="dagw" created="Tue, 10 Jun 2008 22:02:29 +0100"  >&lt;p&gt;Thanks for looking at this, Knut Anders. Fixed the javadoc and the&lt;br/&gt;
accidental whitespace thing.  As for your second, comment, I agree it&lt;br/&gt;
is probably better to use the idiom for reading the index row under&lt;br/&gt;
read uncommitted mode, so I did that.&lt;/p&gt;

&lt;p&gt;Additionally, I modified the existing sanity code which asserts that&lt;br/&gt;
the base row is always there to just run when repeatable read is used,&lt;br/&gt;
and added an extra check for this case for read uncommitted mode in&lt;br/&gt;
which case I just throw an error (RAWSTORE_RECORD_VANISHED).  This&lt;br/&gt;
should be very unlikely, but if it happens we have seen that TimeOut&lt;br/&gt;
swallows exceptions when building TableNameInfo and prints the lock&lt;br/&gt;
table even without table information, so I think it is ok. We could&lt;br/&gt;
possibly catch this exception in hashAllTableDescriptorsByTableId and&lt;br/&gt;
just skip that table (which has gone anyway since its schema has&lt;br/&gt;
gone...&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, but I didn&apos;t.&lt;/p&gt;

&lt;p&gt;I also added javadoc to say that only repeatable read (normal case)&lt;br/&gt;
and read uncommitted are supported (in the new signatures).&lt;/p&gt;

&lt;p&gt;Re-running tests.&lt;/p&gt;</comment>
                            <comment id="12604196" author="knutanders" created="Wed, 11 Jun 2008 13:17:13 +0100"  >&lt;p&gt;Thanks for the new patch, Dag. Some more comments:&lt;/p&gt;

&lt;p&gt;1) typo in javadoc: SYS:SYSSCHEMAS -&amp;gt; SYS.SYSSCHEMAS (colon -&amp;gt; comma)&lt;/p&gt;

&lt;p&gt;2) Message for SQLState.RAWSTORE_RECORD_VANISHED needs a parameter (recordName)&lt;/p&gt;

&lt;p&gt;3) In the code below, couldn&apos;t the nested if statements be combined into a single one? Then the debug code doesn&apos;t have to be reindented.&lt;br/&gt;
+				if (! base_row_exists) {&lt;br/&gt;
+					if (isolationLevel ==&lt;br/&gt;
+							TransactionController.ISOLATION_REPEATABLE_READ) {&lt;br/&gt;
--&amp;gt; if (!base_row_exists &amp;amp;&amp;amp; isolationLevel == ...)&lt;/p&gt;

&lt;p&gt;4) I don&apos;t know the store API well enough to say whether the code is correct or not, but isn&apos;t there a risk in getDescriptorViaIndexMinion() that heapCC.fetch() reads the wrong row, as the row isn&apos;t protected by a lock between retrieving the row location from the index and actually reading the value?&lt;/p&gt;

&lt;p&gt;5) If getDescriptorViaIndex() only supports repeatable read and read uncommitted, should it have an assert so that no one accidentally calls it with another isolation level?&lt;/p&gt;</comment>
                            <comment id="12604300" author="dagw" created="Wed, 11 Jun 2008 19:28:00 +0100"  >&lt;p&gt;Thanks for your comment, Knut Anders.&lt;br/&gt;
A new version of the patch, #3, addresses all your comments so:&lt;/p&gt;

&lt;p&gt;1) Typo fixed&lt;br/&gt;
2) Moved away from throwing the vanished exception, I just return an empty descriptor.&lt;br/&gt;
    I tried this by simulating that the base row had gone and the diagnostics printed ok.&lt;br/&gt;
    Please see the new comment in the code. &lt;br/&gt;
3) Done&lt;br/&gt;
4) I think this can only happen is a compress managed to squeeze in between the &lt;br/&gt;
    reading of the index row adn the base row; as far as i remember the row location &lt;br/&gt;
    is not reused until a compress happens...&lt;br/&gt;
5) Added sanity checks.&lt;/p&gt;

&lt;p&gt;Re-running regression tests &lt;/p&gt;
</comment>
                            <comment id="12604313" author="knutanders" created="Wed, 11 Jun 2008 20:37:02 +0100"  >&lt;p&gt;Thanks again, Dag!&lt;/p&gt;

&lt;p&gt;I guess you&apos;re right that the problem is limited to concurrent compress of SYS.SYSSCHEMAS and is not very likely, nor very harmful given that this code is only used for diagnostics. Great that you added a comment about this in the code! I have no more comments to the latest patch.&lt;/p&gt;</comment>
                            <comment id="12604381" author="dagw" created="Thu, 12 Jun 2008 00:43:56 +0100"  >&lt;p&gt;Patch derby-3678-3 committed as svn 666901, resolving.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="27923">DERBY-48</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12425714">DERBY-4233</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12383342" name="derby-3678-1.diff" size="13022" author="dagw" created="Wed, 4 Jun 2008 01:27:00 +0100"/>
                            <attachment id="12383343" name="derby-3678-1.stat" size="410" author="dagw" created="Wed, 4 Jun 2008 01:27:00 +0100"/>
                            <attachment id="12383788" name="derby-3678-2.diff" size="18272" author="dagw" created="Tue, 10 Jun 2008 22:02:29 +0100"/>
                            <attachment id="12383789" name="derby-3678-2.stat" size="410" author="dagw" created="Tue, 10 Jun 2008 22:02:29 +0100"/>
                            <attachment id="12383861" name="derby-3678-3.diff" size="18908" author="dagw" created="Wed, 11 Jun 2008 19:28:00 +0100"/>
                            <attachment id="12383862" name="derby-3678-3.stat" size="410" author="dagw" created="Wed, 11 Jun 2008 19:28:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 May 2008 08:20:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23781</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0qcv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38088</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>