<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3839/DERBY-3839.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3839] Convert &quot;org.apache.derbyTesting.functionTests.tests.store.holdCursorJDBC30.sql&quot; to junit. </title>
                <link>https://issues.apache.org/jira/browse/DERBY-3839</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12402360">DERBY-3839</key>
            <summary>Convert &quot;org.apache.derbyTesting.functionTests.tests.store.holdCursorJDBC30.sql&quot; to junit. </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="espinha">Tiago R. Espinha</assignee>
                                    <reporter username="thinkallday">Junjie Peng</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Aug 2008 09:53:46 +0100</created>
                <updated>Thu, 13 Oct 2011 04:44:09 +0100</updated>
                            <resolved>Wed, 6 May 2009 17:31:17 +0100</resolved>
                                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12623178" author="thinkallday" created="Sun, 17 Aug 2008 09:15:35 +0100"  >&lt;p&gt;Please check the patch, thanks!&lt;/p&gt;</comment>
                            <comment id="12625255" author="mamtas" created="Mon, 25 Aug 2008 07:38:55 +0100"  >&lt;p&gt;Junjie, thanks for picking this really long test for conversion. The conversion job has been done pretty well. I just have following comments. (the comments might look little scattered because I wrote them down as I went through each of the subtest conversion.)&lt;/p&gt;

&lt;p&gt;1)The first thing the test does is set autocommit to false. Shouldn&apos;t each of the junit test fixture do the same?&lt;/p&gt;

&lt;p&gt;2)In several places in the original test, it does close on resultset first and then commit but the converted junit test appears to do it in reverse order. &lt;/p&gt;


&lt;p&gt;3)The converted junit test has fixture testBasicBtreeScanForZeroRowsUpdateNonkeyfield. This test uses for update of clause here but the some of the other tests didn&apos;t.&lt;/p&gt;

&lt;p&gt;4)The converted junit test has fixture testBasicBtreeScanTestsForMultipleRowsOrUpdateNonkeyField. It needs to define index like the earlier test stUtil.executeUpdate(&quot;create index foox on foo (a)&quot;); This will match what the original non-junit test intended.&lt;/p&gt;

&lt;p&gt;5)The following set of tests from original test are missing in the junit test. I think it could go in test fixutre  testBasicBtreeScanTestsForMultipleRowsOrUpdateNonkeyField&lt;br/&gt;
ij&amp;gt; &amp;#8211;  test negative case of trying non next operations after commit&lt;br/&gt;
get with hold cursor test1 as &lt;br/&gt;
    &apos;select * from foo for update of data&apos;;&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |10         &lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; delete from foo where current of test1;&lt;br/&gt;
ERROR 24000: Invalid cursor state - no current row.&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |20         &lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; update foo set data=-3000 where current of test1;&lt;br/&gt;
ERROR 24000: Invalid cursor state - no current row.&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |30         &lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |40         &lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |50         &lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
No current row&lt;br/&gt;
ij&amp;gt; close test1;&lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; &amp;#8211; should fail&lt;br/&gt;
next test1;&lt;br/&gt;
IJ ERROR: Unable to establish cursor&lt;/p&gt;

&lt;p&gt;6)There is a test as follows in the original test&lt;br/&gt;
ij&amp;gt; &amp;#8211;  make sure above deletes/updates worked.&lt;br/&gt;
get with hold cursor test1 as &lt;br/&gt;
    &apos;select * from foo for update of data&apos;;&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |10         &lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |30         &lt;br/&gt;
ij&amp;gt; commit;&lt;br/&gt;
ij&amp;gt; next  test1;&lt;br/&gt;
A          |DATA       &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |-3000 &lt;br/&gt;
The test above checks that update made earlier shows up. The converted test does not look for new value -3000. The converted test for above test is as below (it is in testBasicBtreeScanTestsForMultipleRowsOrUpdateNonkeyField)&lt;br/&gt;
+        //make sure above deletes/updates worked.&lt;br/&gt;
+        test1 = st.executeQuery(&quot;select * from foo for update of data&quot;);&lt;br/&gt;
+        assertTrue(test1.next());&lt;br/&gt;
+        assertEquals(1, test1.getRow());&lt;br/&gt;
+        commit();&lt;br/&gt;
+        assertTrue(test1.next());&lt;br/&gt;
+        assertEquals(2, test1.getRow());&lt;br/&gt;
+        commit();&lt;br/&gt;
+        assertTrue(test1.next());&lt;br/&gt;
+        assertEquals(3, test1.getRow());&lt;/p&gt;


&lt;p&gt;7)The converted junit test has fixture testBasicBtreeScanTestsForMultipleRowsOrReadOnly. It should create an index on foo to match the original test.&lt;/p&gt;


&lt;p&gt;8)There are several places in the test where it matters what was the exact row data retruned on a &quot;next..&quot; but the converted test always just checks for test1.getRow() rather than the actual row data. One of those examples would be Test 7, Test 8, Test 9. There might be other places in the test where we should look for the row data rather than row number.&lt;/p&gt;</comment>
                            <comment id="12625982" author="thinkallday" created="Wed, 27 Aug 2008 07:30:20 +0100"  >&lt;p&gt;Hi, Mamta. Thanks for attention. I&apos;m sorry to return lately  as not free these days. I will provide a new patch some time later.&lt;/p&gt;</comment>
                            <comment id="12627587" author="kristwaa" created="Tue, 2 Sep 2008 07:28:48 +0100"  >&lt;p&gt;Clearing patch available flag, a new patch is expected later.&lt;/p&gt;</comment>
                            <comment id="12694142" author="espinha" created="Tue, 31 Mar 2009 16:08:32 +0100"  >&lt;p&gt;Assigning this issue to me as it is related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4090&quot; title=&quot;Provide the ability to run tests concurrently on the same machine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4090&quot;&gt;DERBY-4090&lt;/a&gt; and I&apos;m continuing its resolution.&lt;/p&gt;</comment>
                            <comment id="12701464" author="espinha" created="Wed, 22 Apr 2009 11:01:09 +0100"  >&lt;p&gt;Mamta said:&lt;br/&gt;
&amp;gt; 3)The converted junit test has fixture testBasicBtreeScanForZeroRowsUpdateNonkeyfield. This test uses for update of clause here but the some of the other tests didn&apos;t.&lt;/p&gt;

&lt;p&gt;Mamta, you say that some of the other tests did not use the &apos;for update of&apos; clause, but looking at holdCursorJDBC30.out it seems to me that all the tests on the Btree Scan For Zero Rows Update Nonkey (refer to line 328 of holdCursorJDBC30.out) do use &apos;for update of data&apos;.&lt;/p&gt;

&lt;p&gt;Am I missing something or were you talking about Junjie&apos;s patch not containing the said clause?&lt;/p&gt;</comment>
                            <comment id="12701620" author="mamtas" created="Wed, 22 Apr 2009 19:23:10 +0100"  >&lt;p&gt;Tiago, I think you can disregard that comment. I looked through the test and the patch and seems like the conversion is fine. From what I recall, I may have thought that all the tests in the junit need to use for update clause but I don&apos;t see the original test using for update clause for all the test cases either.&lt;/p&gt;</comment>
                            <comment id="12701692" author="espinha" created="Wed, 22 Apr 2009 22:39:19 +0100"  >&lt;p&gt;I went through Junjie&apos;s patch line-by-line and here&apos;s what I changed:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added the &apos;for update&apos; clause where it was missing, to mimic the original test.&lt;/li&gt;
	&lt;li&gt;Added the setAutoCommit(false) on the setUp() method.&lt;/li&gt;
	&lt;li&gt;Set the bulkFetch to 1 where it was missing, as per the original test.&lt;/li&gt;
	&lt;li&gt;Removed assertTrue(true) from the exceptions as I believe this is a waste of space and resources.&lt;/li&gt;
	&lt;li&gt;Checked the order of all the close() and commit() calls, so that it also mimics the original test (there were a few wrong ones as Mamta said).&lt;/li&gt;
	&lt;li&gt;Made the asserts so that we check the actual data in the tables rather than just the row number.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now, the problem is that when I run the test, I systematically get errors like &quot;Table/View &apos;FOO&apos; already exists in Schema &apos;APP&apos;.&quot;.&lt;/p&gt;

&lt;p&gt;Ideally we&apos;d create the tables on the decorator so that they&apos;d be self-managed, but that isn&apos;t optimal as each test has its own requirement as far as tables go. Some require the tables to be empty, some require some records in it, and it is often the case that the tables are simply different.&lt;/p&gt;

&lt;p&gt;With this said, I kept Junjie&apos;s approach of creating and dropping the tables on each fixture. I must be doing something wrong though, as I keep hitting that error.&lt;/p&gt;

&lt;p&gt;Just to cover all possibilities, I added a commit() call after the dropTable is called but still no luck. I still get the same errors and I must be missing something.&lt;/p&gt;

&lt;p&gt;If anyone has any ideas, I&apos;d appreciate it.&lt;/p&gt;</comment>
                            <comment id="12701966" author="espinha" created="Thu, 23 Apr 2009 16:40:56 +0100"  >&lt;p&gt;This file is a repro test class that I&apos;m uploading to sort out a behaviour that I&apos;m witnessing. This is either a bug or then I am most certainly missing something.&lt;/p&gt;

&lt;p&gt;This test should mimic the following behaviour:&lt;br/&gt;
---------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-----------------------&lt;br/&gt;
call SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(&apos;derby.language.bulkFetchDefault&apos;, &apos;1&apos;);&lt;/p&gt;

&lt;p&gt;create table foo4 (a int, data int);&lt;/p&gt;

&lt;p&gt;insert into foo4 values (1,10);&lt;br/&gt;
insert into foo4 values (1,20);&lt;br/&gt;
insert into foo4 values (1,30);&lt;br/&gt;
insert into foo4 values (1,40);&lt;br/&gt;
insert into foo4 values (1,50);&lt;/p&gt;

&lt;p&gt;get with hold cursor test1 as &apos;select * from foo4 for update of data&apos;;&lt;/p&gt;

&lt;p&gt;next test1;&lt;br/&gt;
commit;&lt;/p&gt;

&lt;p&gt;delete from foo4 where current of test1;&lt;br/&gt;
&amp;#8211; should fail&lt;/p&gt;

&lt;p&gt;next test1;&lt;br/&gt;
commit;&lt;/p&gt;

&lt;p&gt;update foo4 set data=-3000 where current of test1;&lt;br/&gt;
&amp;#8211; should fail&lt;br/&gt;
---------------------&lt;del&gt;8&amp;lt;&lt;/del&gt;-----------------------&lt;br/&gt;
Both the update and the delete should fail because of the commit, and they do if I follow those exact steps on ij. However, the JDBC test doesn&apos;t throw an exception on the update and it reaches the fail() call.&lt;/p&gt;

&lt;p&gt;The error that ij rightfully throws is ERROR 24000: Invalid cursor state - no current row.&lt;/p&gt;

&lt;p&gt;Any ideas?&lt;/p&gt;</comment>
                            <comment id="12702051" author="espinha" created="Thu, 23 Apr 2009 19:38:54 +0100"  >&lt;p&gt;After talking this over on IRC, Dag suggested something that fixed this issue.&lt;/p&gt;

&lt;p&gt;This test is using the following parameters on the createStatement:&lt;br/&gt;
ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE and ResultSet.HOLD_CURSORS_OVER_COMMIT&lt;/p&gt;

&lt;p&gt;After going through the ResultSet code, I found out that the checkForUpdatableResultSet() method (called upon the deleteRow() )  overrides any of the checks that it would do, unless the ResultSet is set as CONCUR_READ_ONLY. So, basically put, switching this parameter will make the repro pass.&lt;/p&gt;

&lt;p&gt;I am still working on the actual test and at this point I decided that it would be a better option to create individual tables for each test.&lt;br/&gt;
(As suggested by Kathey here: &lt;a href=&quot;http://tinyurl.com/dxozhb&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tinyurl.com/dxozhb&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;Finally, I am also opening a bug for the described behavior above.&lt;/p&gt;</comment>
                            <comment id="12702900" author="espinha" created="Sun, 26 Apr 2009 17:02:30 +0100"  >&lt;p&gt;I am uploading a new version of my reproduction test. This time I think I might have found a different bug.&lt;/p&gt;

&lt;p&gt;The test as it is, is failing but it shouldn&apos;t. The problem seems to be that the updateInt() isn&apos;t persisting the changes into the database. The fail I get is:&lt;br/&gt;
1) testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)junit.framework.AssertionFailedError: expected:&amp;lt;-3000&amp;gt; but was:&amp;lt;10&amp;gt;&lt;/p&gt;

&lt;p&gt;suggesting that the update isn&apos;t indeed being successful. No exceptions are thrown and no update is made, so I believe that either way there is something wrong going on here.&lt;/p&gt;</comment>
                            <comment id="12702904" author="knutanders" created="Sun, 26 Apr 2009 18:03:15 +0100"  >&lt;p&gt;Shouldn&apos;t there have been a call to ResultSet.updateRow()? I don&apos;t think the database will be updated if you only call updateInt() + commit().&lt;/p&gt;</comment>
                            <comment id="12702914" author="espinha" created="Sun, 26 Apr 2009 19:17:26 +0100"  >&lt;p&gt;Oh you&apos;re right Knut, my bad. I am not much of a JDBC user so I end up missing on these little details...&lt;/p&gt;

&lt;p&gt;Anyway, I did add the updateRow() call after the updateInt() and now I&apos;m getting an even weirder error. It&apos;s even weirder that it is happening on such a small fixture...&lt;/p&gt;

&lt;p&gt;I&apos;m getting this on one of the drivers:&lt;br/&gt;
1) testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED statementContext is not expected to equal statementContexts&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;(this one also blows the JVM away)&lt;/p&gt;

&lt;p&gt;and this on the other:&lt;br/&gt;
2)testReproduction(org.apache.derbyTesting.functionTests.tests.store.ReproHoldCursorBug)java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;/p&gt;

&lt;p&gt;Any ideas? This should be so simple...&lt;/p&gt;</comment>
                            <comment id="12702918" author="knutanders" created="Sun, 26 Apr 2009 19:56:20 +0100"  >&lt;p&gt;The assert failure must be a bug, so it would be good to file a separate JIRA issue for it.&lt;/p&gt;

&lt;p&gt;I was able to get the test to run without failures by replacing &quot;for update of data&quot; with &quot;for update&quot; (or by removing the entire FOR UPDATE clause). No idea why that should be necessary, though.&lt;/p&gt;</comment>
                            <comment id="12704174" author="espinha" created="Wed, 29 Apr 2009 17:07:34 +0100"  >&lt;p&gt;This issue is currently blocked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4198&quot; title=&quot;When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4198&quot;&gt;&lt;del&gt;DERBY-4198&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was reading through the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3801&quot; title=&quot;Convert &amp;quot;org.apache.derbyTesting.functionTests.tests.lang.holdCursorIJ.sql&amp;quot; to junit. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3801&quot;&gt;&lt;del&gt;DERBY-3801&lt;/del&gt;&lt;/a&gt; and Myrna says:&lt;br/&gt;
&quot;I think you believe a ScriptTest is a &apos;tool&apos; to convert the test to junit, and it may have started as a quick way to run certain .sql ways in junit, but it is currently the best way to execute the language constructs that are specific to ij.&lt;br/&gt;
Yes, we have in the charter to use only standard SQL, but there are some extensions that are specific to Derby and they have to be tested also.&lt;/p&gt;

&lt;p&gt;Language clauses as &quot;get cursor with hold&quot;, &quot;next&quot;, &quot;update where current of&quot;.&lt;br/&gt;
So, it&apos;s important to keep a test that verifies appropriate behavior when such things are used in ij. Thus, we &lt;b&gt;do&lt;/b&gt; need a HoldCursorIJTest, but it should be extending ScriptTestCase.&quot;&lt;/p&gt;

&lt;p&gt;Considering that this test does rely a lot on the GET CURSOR WITH HOLD and it has its share of UPDATE WHERE CURRENT OF, should this test be extending ScriptTest as well rather than a BaseJDBCTestCase?&lt;/p&gt;</comment>
                            <comment id="12704337" author="myrna" created="Wed, 29 Apr 2009 22:01:51 +0100"  >&lt;p&gt;As long as the constructs are tested in one place, it should suffice. Lang is probably more suitable for that then store, I don&apos;t think we&apos;d need to test ij specifics in any test in the tests/store directory.&lt;/p&gt;</comment>
                            <comment id="12704343" author="espinha" created="Wed, 29 Apr 2009 22:07:27 +0100"  >&lt;p&gt;So can I simply switch this over to a ScriptTest under Lang?&lt;/p&gt;

&lt;p&gt;If I get a green light, I&apos;ll get on it first thing tomorrow, since this issue will no longer be blocked.&lt;/p&gt;</comment>
                            <comment id="12704345" author="kmarsden" created="Wed, 29 Apr 2009 22:14:19 +0100"  >&lt;p&gt;I think having a JDBC test for this is good as it has already brought to light a serious bug.  I think you should continue with the java test and work around the bug for now and put a comment referring that it should be changed once &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4198&quot; title=&quot;When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4198&quot;&gt;&lt;del&gt;DERBY-4198&lt;/del&gt;&lt;/a&gt; is fixed.&lt;/p&gt;

&lt;p&gt;Then make  a separate small ScriptTest that just tests the ij specific syntax without all the rigorous testing of hold behavior, but just basic testing to make  the ij syntax works.&lt;/p&gt;


</comment>
                            <comment id="12704799" author="espinha" created="Thu, 30 Apr 2009 22:02:38 +0100"  >&lt;p&gt;I have run into what seems to be another bug.&lt;/p&gt;

&lt;p&gt;Initially I thought this could simply be a normal different behaviour between embedded and client drivers. Kathey has however suggested that it could be a bug so I&apos;m posting it here to get some opinions.&lt;/p&gt;

&lt;p&gt;The issue is on the embedded driver. The problem happens when we create a cursor and while having it on a certain record, another statement is executed that deletes both the record that the cursor is on and the next one. If afterwards we advance the cursor, the embedded driver will act as if the rows haven&apos;t been deleted at all, whereas the client driver seems to behave correctly.&lt;/p&gt;

&lt;p&gt;It needs to be said though that the client driver will only pass as long as the bulkFetchDefault is set to 1. Any other values on this property seem to make the client error out as well.&lt;/p&gt;</comment>
                            <comment id="12705146" author="espinha" created="Fri, 1 May 2009 23:08:16 +0100"  >&lt;p&gt;This is a working patch of this test. I haven&apos;t yet ran suites.All nor derbyall but will do so if this patch is considered for committal.&lt;/p&gt;

&lt;p&gt;Keep in mind that this test has two workarounds:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It drops the &apos;FOR UPDATE&apos; clause of some of the fixtures as they were causing crashes (on both embedded and client/server)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It has two separate behaviours (for embedded and client/server) on the tests testPositionPurgedRow and testPositionPurgedPage.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also, my last comment was wrong. It is the client driver&apos;s results that aren&apos;t faithful to those of the original test. As can be seen on the repro class I have attached, the underlying changes to a table aren&apos;t replicated to an already open cursor of that table. Is this by design? Considering it only happens on the client driver?&lt;/p&gt;</comment>
                            <comment id="12705633" author="dagw" created="Mon, 4 May 2009 16:51:24 +0100"  >&lt;p&gt;It seems in the client/Server case, a prefetch of rows is performed independently of setting derby.language.bulkFetchDefault, so the change is not seen. I think it acceptable&lt;br/&gt;
behavior that the client driver does some prefetching of its own. I tried calling st.setFetchSize(1) but it made no difference. That quantity is only considered a hint, though. If the app really cares about changes, it should make a new query.  Btw, Derby does not yet implement scrollable sensitive result sets.&lt;/p&gt;
</comment>
                            <comment id="12705635" author="dagw" created="Mon, 4 May 2009 16:57:07 +0100"  >&lt;p&gt;Btw, making the result set updatable, makes the repro work correctly since this forces prefetching to be disabled.&lt;/p&gt;</comment>
                            <comment id="12705714" author="kmarsden" created="Mon, 4 May 2009 20:56:14 +0100"  >&lt;p&gt;Thanks Tiago for the patch.  The test looks good, but we need to add the new test to store._Suite and remove the old test from derbynetmats.runall, storemore.runall and j9derbynetmats.runall.&lt;/p&gt;

&lt;p&gt;It might be cleanest to change the result set to be updatable as Dag suggests to get consistent client/embedded behavior and add a comment as to why this was done.&lt;/p&gt;</comment>
                            <comment id="12706110" author="espinha" created="Tue, 5 May 2009 18:08:57 +0100"  >&lt;p&gt;I tried Dag&apos;s suggestion of making the result set updatable but it didn&apos;t help. Both the repro and the actual test fail, even with the result set set as updatable.&lt;/p&gt;</comment>
                            <comment id="12706134" author="espinha" created="Tue, 5 May 2009 19:17:44 +0100"  >&lt;p&gt;I&apos;m attaching another patch. This one removes the test from the harness, adds it to the Suite and effectively removes the .sql and .out files from the system.&lt;/p&gt;

&lt;p&gt;It seems that Junjie&apos;s patch wasn&apos;t removing those files but just emptying them instead. I&apos;m not sure we want to keep the empty files around so I just deleted them. If this isn&apos;t the desired behavior please let me know.&lt;/p&gt;</comment>
                            <comment id="12706503" author="kmarsden" created="Wed, 6 May 2009 17:31:17 +0100"  >&lt;p&gt;Committed revision 772354.  &lt;/p&gt;</comment>
                            <comment id="12707010" author="espinha" created="Thu, 7 May 2009 18:21:55 +0100"  >&lt;p&gt;Thank you Kathey for committing the patch. The regressions ran fine, so I&apos;m closing the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12424171">DERBY-4198</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12416700">DERBY-4090</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12526969">DERBY-5459</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406959" name="ReproHoldCursorBug.java" size="2732" author="espinha" created="Thu, 30 Apr 2009 22:02:38 +0100"/>
                            <attachment id="12406471" name="ReproHoldCursorBug.java" size="3018" author="espinha" created="Sun, 26 Apr 2009 17:02:30 +0100"/>
                            <attachment id="12406241" name="ReproHoldCursorBug.java" size="2772" author="espinha" created="Thu, 23 Apr 2009 16:40:56 +0100"/>
                            <attachment id="12388374" name="derby-3839-1.patch" size="228024" author="thinkallday" created="Sun, 17 Aug 2008 09:15:35 +0100"/>
                            <attachment id="12388375" name="derby-3839-1.stat" size="832" author="thinkallday" created="Sun, 17 Aug 2008 09:15:35 +0100"/>
                            <attachment id="12407268" name="derby-3839.patch" size="146272" author="espinha" created="Tue, 5 May 2009 19:17:44 +0100"/>
                            <attachment id="12407040" name="derby-3839.patch" size="143783" author="espinha" created="Fri, 1 May 2009 23:08:16 +0100"/>
                            <attachment id="12406170" name="derby-3839.patch" size="138324" author="espinha" created="Wed, 22 Apr 2009 22:39:19 +0100"/>
                            <attachment id="12407269" name="derby-3839.stat" size="711" author="espinha" created="Tue, 5 May 2009 19:17:44 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Aug 2008 06:38:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31024</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0f67:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36276</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>