<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4073/DERBY-4073.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4073] Creation/configuration of ClientXDataSource fails because of two setSsl methods</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4073</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Applications using reflection (and JavaBean conventions) have problems configuring the Derby client data sources.&lt;br/&gt;
Depending on how things are done, the user may or may not see the problems.&lt;br/&gt;
For instance, some applications obtain all valid data source properties and list them with their default settings. In the case of SSL, this will be &quot;Ssl&quot; with value &quot;off&quot;. When the application is trying to call setSsl(&quot;off&quot;) through reflection it may invoke setSsl(int) instead of setSsl(String), failing because &quot;off&quot; cannot be converted to an integer. In some implementations both methods will be invoked.&lt;/p&gt;

&lt;p&gt;There are two ways to look at this, and I don&apos;t know which one is correct:&lt;br/&gt;
  o the reflection code of the third-party applications using Derby isn&apos;t written well enough.&lt;br/&gt;
  o Derby is to blame for the problem by providing two setSsl-methods.&lt;/p&gt;

&lt;p&gt;I don&apos;t know if providing overloading setters violates the JavaBean spec, or any other relevant spec we should follow.&lt;/p&gt;

&lt;p&gt;The easiest technical solution is to rename one of the methods or possibly making one of them private. Both of these will break existing applications using that method to configure a Derby client data source.&lt;br/&gt;
Is doing this, and providing a release note, sufficient?&lt;br/&gt;
Does anyone see any other solutions?&lt;/p&gt;

&lt;p&gt;It should be noted that in some applications, it is impossible to configure ClientConnectionPoolDataSource or ClientXADataSource to use SSL. The reasons are the problem described here and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4067&quot; title=&quot;ClientConnectionPoolDataSource.getPooledConnection and ClientXADataSource.getXAConnection ignore connection attributes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4067&quot;&gt;&lt;del&gt;DERBY-4067&lt;/del&gt;&lt;/a&gt;. One typical class of software with this problem is application servers. A workaround is to avoid setting the SSL property, which isn&apos;t doable if you need SSL of course...&lt;/p&gt;

&lt;p&gt;A related issue is whether it should be allowed to set the SSL property both through the setter method(s) and as a connection attribute.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12415660">DERBY-4073</key>
            <summary>Creation/configuration of ClientXDataSource fails because of two setSsl methods</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 Feb 2009 12:45:47 +0000</created>
                <updated>Tue, 30 Jun 2009 17:12:57 +0100</updated>
                            <resolved>Fri, 13 Mar 2009 09:11:26 +0000</resolved>
                                    <version>10.3.3.1</version>
                    <version>10.4.2.1</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12677051" author="rhillegas" created="Thu, 26 Feb 2009 16:14:16 +0000"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;I&apos;m not an expert on Java Beans. It may be that the calling application falls back on ordinary introspection to find the bean methods. There could be a bug in the the application or in the Introspector class provided with the JRE. It may be possible to hide the setSsl(int) method by providing BeanInfo classes in our public api packages. E.g., a ClientDataSource40BeanInfo class which just exposes the getters and setters we really want to publish. There is some explanation of this pattern in the BeanInfo javadoc and here: &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/javabeans/introspection/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/docs/books/tutorial/javabeans/introspection/index.html&lt;/a&gt; This may be an annoying amount of work which still doesn&apos;t fix the problem.&lt;/p&gt;

&lt;p&gt;It seems to me that the Introspector or the calling application ought to be smart enough to look for the setSsl() overload which matches the return type of getSsl(). It&apos;s not clear to me that this is a Derby bug.&lt;/p&gt;</comment>
                            <comment id="12677962" author="kristwaa" created="Mon, 2 Mar 2009 11:35:34 +0000"  >&lt;p&gt;Thanks for the comment, Rick.&lt;/p&gt;

&lt;p&gt;Even if this isn&apos;t a Derby bug, I think we should consider addressing the issue.&lt;/p&gt;

&lt;p&gt;The allowed values are; str_value=off|basic|peerAuthentication&lt;br/&gt;
Why do we have three ways to set the same property?&lt;br/&gt;
  a) connectionAttributes (ssl=&amp;lt;str_value&amp;gt;)&lt;br/&gt;
  b) setSsl(String) ; &amp;lt;str_values&amp;gt; can be used&lt;br/&gt;
  c) setSsl(int) ; 0, 1 and 2 are valid values, but the input isn&apos;t validated. When getSsl() is called, invalid values will cause &quot;off&quot; to be returned.&lt;/p&gt;

&lt;p&gt;To me, it looks as if setSsl(int) is more of an internal helper method, and it shouldn&apos;t be exposed. I also find using a string value is more informative.&lt;/p&gt;</comment>
                            <comment id="12678019" author="rhillegas" created="Mon, 2 Mar 2009 15:30:25 +0000"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;According to my interpretation of ClientBaseDataSource.setConnectionAttributes(), option (a) is forbidden and results in unpredictable behavior. Users should not use setConnectionAttributes() to set the ssl attribute.&lt;/p&gt;

&lt;p&gt;Neither of the overloads for setSsl() has any javadoc explaining what the legal values are. For setSsl(String), I suppose that someone can extrapolate the values from the &quot;Setting attributes for the database connection URL&quot; section of the Reference Guide. But how does a user figure out what the legal values of setSsl(int) are? If there is no user documentation on this overload, then the method has no contract and it ought to be ok to remove it.&lt;/p&gt;
</comment>
                            <comment id="12678674" author="kristwaa" created="Wed, 4 Mar 2009 10:12:55 +0000"  >&lt;p&gt;Thanks again, Rick.&lt;br/&gt;
Patch 1a adds some JavaDoc comments, removes the methods setSsl(int) and adds string constants for the valid values denoting SSL modes.&lt;br/&gt;
I would also like to backport this fix to 10.4.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;br/&gt;
I have started the regression tests&lt;/p&gt;</comment>
                            <comment id="12678713" author="kristwaa" created="Wed, 4 Mar 2009 12:24:09 +0000"  >&lt;p&gt;Regression tests (suites.All &amp;amp; derbyall) passed.&lt;/p&gt;</comment>
                            <comment id="12678975" author="myrna" created="Wed, 4 Mar 2009 23:01:49 +0000"  >&lt;p&gt;Does this warrant getting marked as &apos;existing application impact&apos;?&lt;br/&gt;
i.e. could anyone have tried to use getSsl(int) sucessfully and now have to change their app?&lt;/p&gt;</comment>
                            <comment id="12679150" author="kristwaa" created="Thu, 5 Mar 2009 10:53:52 +0000"  >&lt;p&gt;That is possible.&lt;br/&gt;
To use the method, the user would have to use either brute force or inspect the source code to determine the valid values. To my knowledge, setSsl(int) isn&apos;t documented anywhere. Leaning on the statement Rick made, the valid values for setSsl(String) could be extrapolated from the documentation of connection URL attributes.&lt;br/&gt;
I think we should write a release note for this fix.&lt;/p&gt;

&lt;p&gt;Note that if we make Derby throw an exception if the user specifies a property that has its own setter method in connectionAttributes, we definitely have to write a release note.&lt;/p&gt;</comment>
                            <comment id="12680115" author="kristwaa" created="Mon, 9 Mar 2009 10:23:19 +0000"  >&lt;p&gt;Added first version of a release note.&lt;br/&gt;
Ready for review.&lt;/p&gt;</comment>
                            <comment id="12680195" author="dagw" created="Mon, 9 Mar 2009 16:49:46 +0000"  >&lt;p&gt;Release note, looks good. A clarification suggestion:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;Having two setSsl-methods caused problems for applications using&lt;br/&gt;
  Derby data sources, configuring the data source through&lt;br/&gt;
  introspection.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;suggest:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;Having two setSsl-methods caused choice problems for some applications using&lt;br/&gt;
  Derby data sources and also configuring the data source through&lt;br/&gt;
  introspection, since there were two method called setSsl;&lt;br/&gt;
  setSsl(int) and setSsl(String).&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12681644" author="kristwaa" created="Fri, 13 Mar 2009 09:08:55 +0000"  >&lt;p&gt;Thanks, Dag.&lt;/p&gt;

&lt;p&gt;Updated the release note.&lt;/p&gt;</comment>
                            <comment id="12681646" author="kristwaa" created="Fri, 13 Mar 2009 09:11:26 +0000"  >&lt;p&gt;Committed patch 1a to trunk with revision 753176.&lt;br/&gt;
Backported to the 10.4 branch with revision 753177, and to the 10.3 branch with revision 753179.&lt;/p&gt;

&lt;p&gt;Will perform some testing with an appserver before closing.&lt;/p&gt;</comment>
                            <comment id="12683102" author="myrna" created="Wed, 18 Mar 2009 17:30:16 +0000"  >&lt;p&gt;I think the usage of the @code tag may not be ok in 10.3. I believe it should be possible with 10.3 to use the 1.4.2 compiler, which wouldn&apos;t support @code, right?&lt;br/&gt;
At least, when I use the 1.4.2 compiler for building the javadoc, I see:&lt;br/&gt;
Since revision 753179 in 10.3 I see the following javadoc warning in 10.3:&lt;br/&gt;
&amp;lt;path_to_10.3&amp;gt;\java\client\org\apache\derby\jdbc\ClientBaseDataSource.java:202: warning - @code is an unknown tag.&lt;br/&gt;
Can you suggest another way to improve the comment?&lt;/p&gt;</comment>
                            <comment id="12683392" author="kristwaa" created="Thu, 19 Mar 2009 09:44:25 +0000"  >&lt;p&gt;Replacing &lt;/p&gt;
{@code string}
&lt;p&gt; with &amp;lt;code&amp;gt;string&amp;lt;/code&amp;gt; is a simple solution.&lt;br/&gt;
However, I&apos;m slightly confused. When I grep the 10.3 source files, I find at least 72 occurrences of @code. Why aren&apos;t those a problem?&lt;br/&gt;
Second, if I run &apos;ant derbydocs&apos; with JAVA_HOME pointing to Java 1.4.2, it fails when processing the files containing Java 5.0 features (in my case I see it fail when processing ConcurrentLockSet).&lt;/p&gt;

&lt;p&gt;Is my ant.properties file wrong?&lt;/p&gt;</comment>
                            <comment id="12683871" author="kristwaa" created="Fri, 20 Mar 2009 13:06:46 +0000"  >&lt;p&gt;Replaced @code tag on the 10.3 branch with revision 756441.&lt;br/&gt;
Closing issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12401395" name="derby-4073-1a-add_docs_and_remove_setSsl_int.diff" size="4549" author="kristwaa" created="Wed, 4 Mar 2009 10:12:55 +0000"/>
                            <attachment id="12402119" name="releaseNote.html" size="3975" author="kristwaa" created="Fri, 13 Mar 2009 09:08:54 +0000"/>
                            <attachment id="12401743" name="releaseNote.html" size="3909" author="kristwaa" created="Mon, 9 Mar 2009 10:23:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 26 Feb 2009 16:14:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24009</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ubb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38729</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>