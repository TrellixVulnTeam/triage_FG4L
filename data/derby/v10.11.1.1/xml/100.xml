<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-100/DERBY-100.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-100] Add support for insert functionality using JDBC 2.0 updatable resultset apis</title>
                <link>https://issues.apache.org/jira/browse/DERBY-100</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The JDBC 2.0 API introduced the ability to update/delete/insert rows from a resultset using methods in the Java programming language rather than having to send an SQL command. This Jira entry is to track the insert rows functionality using JDBC 2.0 apis.&lt;/p&gt;</description>
                <environment></environment>
        <key id="28909">DERBY-100</key>
            <summary>Add support for insert functionality using JDBC 2.0 updatable resultset apis</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="fernanda">Fernanda Pizzorno</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Dec 2004 20:52:59 +0000</created>
                <updated>Thu, 2 May 2013 03:28:57 +0100</updated>
                            <resolved>Sun, 30 Jul 2006 08:32:33 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12361020" author="fernanda" created="Wed, 21 Dec 2005 15:57:18 +0000"  >&lt;p&gt;The patch attached is an implementation of insertRow() for both embedded and client/server drivers. Can someone please look into what I have done so far and let me know if there is something I have forgotten, something that should be done in a different way and/or more tests I could write?&lt;/p&gt;

&lt;p&gt;I am going to be on holidays for the next 3 weeks so it might be that I am slow to reply to comments during this period.&lt;/p&gt;</comment>
                            <comment id="12361115" author="djd" created="Fri, 23 Dec 2005 01:04:39 +0000"  >&lt;p&gt;Looks good generally, some minor comments:&lt;/p&gt;

&lt;p&gt;In EmbedResultSet.moveToInsertRow you always generate a new  blank row, such a holder could be re-used across multiple insertRow operations from the same ResultSet&lt;/p&gt;

&lt;p&gt;The SQL state you added is CANNOT_INSERT_AT_CURRENT_POSITION, which in my thinking is a little misleading.&lt;br/&gt;
The text of the message describes the error better, so I wonder if the constant should be:&lt;br/&gt;
NOT_POSITIONED_ON_INSERT_ROW&lt;/p&gt;

&lt;p&gt;There seems to be potential for code sharing in EmbedResultSet with the updateRow and deleteRow case, maybe once this patch is in that could be a further improvement.&lt;/p&gt;

&lt;p&gt;Typically for tests when an expected exception is caught, its message and sql state are displayed to ensure the correct message is being returned.&lt;br/&gt;
And in all cases when you catch and display a SQL exception you should display the SQLState and the message, and walk down the SQLException chain using getNextException reporting all of them.&lt;/p&gt;



</comment>
                            <comment id="12361118" author="djd" created="Fri, 23 Dec 2005 01:27:33 +0000"  >&lt;p&gt;In Positive test 47 you check to see what happens if you call insertRow() without setting any of the column values.&lt;br/&gt;
You code will just do nothing in this case, no exceptions, insertRow just returns having done nothing due to:&lt;/p&gt;

&lt;p&gt;+                if (currentRowHasBeenUpdated == false) // not columns got updated&lt;br/&gt;
+                    return; //nothing to do since no updateXXX method has been called&lt;br/&gt;
+&lt;/p&gt;

&lt;p&gt;But that got me thinking, if a table&apos;s columns in the result set then why can&apos;t I do an insert without setting any values?&lt;br/&gt;
E.g. on a result set of SELECT A,B FROM T, execute INSERT INTO T  VALUES DEFAULT&lt;/p&gt;

&lt;p&gt;Then I looked at the javadoc for insertRow (JDK142) and it says:&lt;/p&gt;

&lt;p&gt;Throws:&lt;br/&gt;
    SQLException - if a database access error occurs, if this method is called when the cursor is not on the insert row, or if not all of non-nullable columns in the insert row have been given a value&lt;/p&gt;

&lt;p&gt;You code does not throw that exception, but it&apos;s a strange wording. It implies to me that  with the above SELECT if I set only A then the correct SQL is&lt;/p&gt;

&lt;p&gt;INSERT INTO T(A,B) VALUES (?, NULL) &lt;span class=&quot;error&quot;&gt;&amp;#91;I don&amp;#39;t this is correct, but it&amp;#39;s what that wording implies&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;rather than what you are executing,&lt;/p&gt;

&lt;p&gt;INSERT INTO T(A) VALUES &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
which is the same as&lt;br/&gt;
INSERT INTO T(A,B) VALUES (?, DEFAULT)&lt;/p&gt;

&lt;p&gt;The JDBC 3.0 spec is somewhat clearer, from section: 14.2.4.3 Inserting a Row&lt;/p&gt;

&lt;p&gt;Each column in the insert row that does not allow null as a value and does not&lt;br/&gt;
have a default value must be given a value using the approriate update method. If&lt;br/&gt;
this is not the case, the method insertRow will throw an SQLException.&lt;/p&gt;

&lt;p&gt;I&apos;m still unclear as to why the reference to not allowing null, that does not seem relevant.&lt;/p&gt;

&lt;p&gt;So, since the engine will throw the SQLException if a value does not have a default, I believe that an insertRow&lt;br/&gt;
with no modified columns should be allowed and should insert a row.&lt;/p&gt;
</comment>
                            <comment id="12361121" author="djd" created="Fri, 23 Dec 2005 01:42:58 +0000"  >&lt;p&gt;OK - the coffee has kicked in and I understand the allow null comment in the spec. I&apos;d forgotten that nullable meant a default of NULL, so compiling a truth table made it clear.&lt;/p&gt;

&lt;p&gt;Each column in the insert row that does not allow null as a value and does not&lt;br/&gt;
have a default value must be given a value using the appropriate update method.&lt;/p&gt;


&lt;p&gt;nullable    has default&lt;/p&gt;

&lt;p&gt;no          no               needs user supplied value (enforced by engine, exception)&lt;br/&gt;
no          yes              no user supplied value needed (handled by engine, set to default)&lt;br/&gt;
yes         no               no user supplied value needed (handled by engine, set to null)&lt;br/&gt;
yes         yes              no user supplied value needed (handled by engine, set to default)&lt;/p&gt;

&lt;p&gt;So I believe that this code does not implement the spec correctly, in the case of no user supllied values.&lt;/p&gt;</comment>
                            <comment id="12363947" author="fernanda" created="Wed, 25 Jan 2006 21:58:22 +0000"  >&lt;p&gt;Thank you for looking into my previous patch.&lt;/p&gt;

&lt;p&gt;In this new patch I have:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;changed moveToInsertRow in java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java so that it will not create a new blank row each time&lt;/li&gt;
	&lt;li&gt;changed the sqlState I have added from CANNOT_INSERT_AT_CURRENT_POSITION to NOT_POSITIONED_ON_INSERT_ROW&lt;/li&gt;
	&lt;li&gt;changed the tests so that they will print sqlState and message for all exceptions and walk down the SQLException chain&lt;/li&gt;
	&lt;li&gt;added some more tests&lt;/li&gt;
	&lt;li&gt;changed the behavior of insertRow when no updateXXX has been called before insertRow is called. It now inserts a row with the row&apos;s default values.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can someone please review this patch?&lt;/p&gt;

&lt;p&gt;I have not updated the canon for updatableResultSet.java under j9_13 and DerbyNet.&lt;/p&gt;

&lt;p&gt;I have successfully run derbyall.&lt;/p&gt;</comment>
                            <comment id="12365687" author="bryanpendleton" created="Thu, 9 Feb 2006 13:01:29 +0000"  >&lt;p&gt;In java/client/org/apache/derby/client/am/ResultSet.java, I did not understand why you deleted the exit tracing at the end of the getBoolean() method (near line 541), and I also did not understand why you deleted the entry tracing in the rowInserted() method (near line 2643). Are these trace messages no longer needed/wanted?&lt;/p&gt;</comment>
                            <comment id="12365719" author="fernanda" created="Thu, 9 Feb 2006 21:44:53 +0000"  >&lt;p&gt;Thank you for looking into the patch Bryan Pendleton. &lt;/p&gt;

&lt;p&gt;The change to the getBoolean() method that you mentioned (deleting the exit trancing), that was an accident that happened while I was manually merging changes. I am sorry I did not notice it before. I am attaching a patch to fix it. &lt;/p&gt;

&lt;p&gt;For rowInserted(), my intention was to make the implementation of this method as similar as possible to that of the rowDeteled() and rowUpdated() methods. Since these two methods do not have entry trancing, I removed it from the rowInserted() method.&lt;/p&gt;

&lt;p&gt;I have only run derbylang with this new patch since the changes where so small. Please let me know if you think it is necessary that I run derbyall and I will do it.&lt;/p&gt;</comment>
                            <comment id="12366728" author="djd" created="Fri, 17 Feb 2006 10:00:39 +0000"  >&lt;p&gt;Just to confirm - to make this change I need to apply two patches?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-100&quot; title=&quot;Add support for insert functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-100&quot;&gt;&lt;del&gt;DERBY-100&lt;/del&gt;&lt;/a&gt;-3.diff&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-100&quot; title=&quot;Add support for insert functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-100&quot;&gt;&lt;del&gt;DERBY-100&lt;/del&gt;&lt;/a&gt;-4.diff&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this once this is confirmed.&lt;/p&gt;</comment>
                            <comment id="12366730" author="djd" created="Fri, 17 Feb 2006 10:05:52 +0000"  >&lt;p&gt;never mind Bernt already did it.&lt;/p&gt;

&lt;p&gt;Can the bug be closed now or is there more work ot be done?&lt;/p&gt;</comment>
                            <comment id="12366761" author="fernanda" created="Fri, 17 Feb 2006 17:16:37 +0000"  >&lt;p&gt;Do you mean if the jira issue should be closed? I seems to me that this issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-99&quot; title=&quot;Add support for update functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-99&quot;&gt;&lt;del&gt;DERBY-99&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-98&quot; title=&quot;Add support for delete functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-98&quot;&gt;&lt;del&gt;DERBY-98&lt;/del&gt;&lt;/a&gt; are general for all types of result sets. Today we only have deleteRow, insertRow and updateRow for forward-only updatable result sets. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-99&quot; title=&quot;Add support for update functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-99&quot;&gt;&lt;del&gt;DERBY-99&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-98&quot; title=&quot;Add support for delete functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-98&quot;&gt;&lt;del&gt;DERBY-98&lt;/del&gt;&lt;/a&gt; have been left open so that they can be implemented for other result set types. In my opinion, we should either close all three issues (98, 99 and 100), and create new ones, if necessary, when we implement other result set types; or we should leave this issue opened as it has been done with the other two.&lt;/p&gt;</comment>
                            <comment id="12366802" author="djd" created="Sat, 18 Feb 2006 00:25:13 +0000"  >&lt;p&gt;Patch has been applied&lt;/p&gt;</comment>
                            <comment id="12375366" author="andreask" created="Thu, 20 Apr 2006 22:30:29 +0100"  >&lt;p&gt;Release note suggestion:&lt;br/&gt;
Updatable resultsets now supports inserting rows using ResultSet.insertRow()&lt;/p&gt;</comment>
                            <comment id="12375368" author="andreask" created="Thu, 20 Apr 2006 22:35:19 +0100"  >&lt;p&gt;I think this issue can be closed, along with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-99&quot; title=&quot;Add support for update functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-99&quot;&gt;&lt;del&gt;DERBY-99&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-98&quot; title=&quot;Add support for delete functionality using JDBC 2.0 updatable resultset apis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-98&quot;&gt;&lt;del&gt;DERBY-98&lt;/del&gt;&lt;/a&gt;, since work has been done to support these features on all types of resultsets which Derby supports.  Derby does not support resultsets of type TYPE_SCROLL_SENSITIVE at all, however that could be filed in another JIRA issue. I will leave it up to the reporter to close the issues.&lt;/p&gt;</comment>
                            <comment id="12419889" author="kmarsden" created="Sun, 9 Jul 2006 06:52:41 +0100"  >&lt;p&gt;Removing patch available.  As best I can tell all patches for this issue have been committed.  Please correct if I am wrong.&lt;/p&gt;</comment>
                            <comment id="12424365" author="mamtas" created="Sun, 30 Jul 2006 08:32:33 +0100"  >&lt;p&gt;Closing this issue since insert functionality using JDBC 2.0 has been implemented for all the types of resultsets supported by Derby at this point.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12325456">DERBY-690</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12322335" name="DERBY-100-2.diff" size="472086" author="fernanda" created="Wed, 25 Jan 2006 21:58:22 +0000"/>
                            <attachment id="12322336" name="DERBY-100-2.stat" size="817" author="fernanda" created="Wed, 25 Jan 2006 21:58:22 +0000"/>
                            <attachment id="12322696" name="DERBY-100-3.diff" size="461354" author="fernanda" created="Tue, 7 Feb 2006 17:15:44 +0000"/>
                            <attachment id="12322697" name="DERBY-100-3.stat" size="817" author="fernanda" created="Tue, 7 Feb 2006 17:15:44 +0000"/>
                            <attachment id="12322785" name="DERBY-100-4.diff" size="690" author="fernanda" created="Thu, 9 Feb 2006 21:44:53 +0000"/>
                            <attachment id="12322786" name="DERBY-100-4.stat" size="61" author="fernanda" created="Thu, 9 Feb 2006 21:44:53 +0000"/>
                            <attachment id="12321480" name="DERBY-100.diff" size="50020" author="fernanda" created="Wed, 21 Dec 2005 15:57:17 +0000"/>
                            <attachment id="12321481" name="DERBY-100.stat" size="808" author="fernanda" created="Wed, 21 Dec 2005 15:57:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Dec 2005 15:57:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29395</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0skv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38448</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>