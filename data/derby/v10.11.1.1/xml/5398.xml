<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:24:29 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5398/DERBY-5398.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5398] NullPointerException in storemore/bug3498.sql</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5398</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The tinderbox failed when testing revision 1164361:&lt;/p&gt;

&lt;p&gt;Failure Details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;
			&lt;ul&gt;
				&lt;li&gt;
				&lt;ul&gt;
					&lt;li&gt;
					&lt;ul&gt;
						&lt;li&gt;
						&lt;ul&gt;
							&lt;li&gt;
							&lt;ul&gt;
								&lt;li&gt;
								&lt;ul&gt;
									&lt;li&gt;Diff file derbyall/storeall/storemore/bug3498.diff&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
							&lt;/li&gt;
						&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
					&lt;/li&gt;
				&lt;/ul&gt;
				&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
			&lt;li&gt;Start: bug3498 jdk1.6.0_24 storeall:storemore 2011-09-02 10:04:59 ***&lt;br/&gt;
322 del&lt;br/&gt;
&amp;lt; ij&amp;gt; &lt;br/&gt;
322 add&lt;br/&gt;
&amp;gt; ij&amp;gt; Exception in thread &quot;main&quot; java.lang.NullPointerException&lt;br/&gt;
Test Failed.&lt;/li&gt;
			&lt;li&gt;End:   bug3498 jdk1.6.0_24 storeall:storemore 2011-09-02 10:05:02 ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here&apos;s the full stack trace:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.SequenceUpdater.clean(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.SequenceUpdater.clearIdentity(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.removeEntry(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.cache.ConcurrentCache.ageOut(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearSequenceCaches(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.stop(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.stop(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.shutdown(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:582)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:207)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.cleanupGo(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Unknown Source)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(Unknown Source)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12521163">DERBY-5398</key>
            <summary>NullPointerException in storemore/bug3498.sql</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Sep 2011 10:17:23 +0100</created>
                <updated>Tue, 24 Jul 2012 18:26:08 +0100</updated>
                            <resolved>Mon, 12 Sep 2011 18:21:24 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.2.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13095899" author="kristwaa" created="Fri, 2 Sep 2011 11:11:41 +0100"  >&lt;p&gt;Caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5390&quot; title=&quot;NPE in BasicDatabase.stop in replication slave mode (dd.clearSequenceCaches)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5390&quot;&gt;&lt;del&gt;DERBY-5390&lt;/del&gt;&lt;/a&gt;, but the question is why the code fails with an NPE.&lt;br/&gt;
I haven&apos;t been able to reproduce this on my own PC so far, so this seems to be timing dependent.&lt;/p&gt;</comment>
                            <comment id="13098487" author="myrna" created="Wed, 7 Sep 2011 00:52:54 +0100"  >&lt;p&gt;For the record, I see this with 10.8 also.  I can also reproduce it very easily with a recent insane build on that branch or on trunk on my - 4 years old - laptop.&lt;/p&gt;
</comment>
                            <comment id="13098686" author="kristwaa" created="Wed, 7 Sep 2011 08:48:39 +0100"  >&lt;p&gt;I backported the change that is causing this NPE (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5390&quot; title=&quot;NPE in BasicDatabase.stop in replication slave mode (dd.clearSequenceCaches)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5390&quot;&gt;&lt;del&gt;DERBY-5390&lt;/del&gt;&lt;/a&gt;). The change fixed one NPE and introduced another intermittent one (in a different location of the code)... What happened before was that the NPE was simply swallowed (catch Throwable), but there was no comment describing why Throwable was caught.&lt;/p&gt;

&lt;p&gt;If there is no other option, I can re-introduce the old behavior (swallow NPE) in 10.8. It would be good to understand why the NPE happens in the first place though.&lt;/p&gt;</comment>
                            <comment id="13098836" author="kristwaa" created="Wed, 7 Sep 2011 11:34:12 +0100"  >&lt;p&gt;I was able to reproduce it too on my laptop, with the following stack:&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk(SequenceUpdater.java:403)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SequenceUpdater.clean(SequenceUpdater.java:201)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SequenceUpdater.clearIdentity(SequenceUpdater.java:215)&lt;br/&gt;
        at org.apache.derby.impl.services.cache.ConcurrentCache.removeEntry(ConcurrentCache.java:167)&lt;br/&gt;
        at org.apache.derby.impl.services.cache.ConcurrentCache.ageOut(ConcurrentCache.java:583)&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearSequenceCaches(DataDictionaryImpl.java:8836)&lt;br/&gt;
        at org.apache.derby.impl.db.BasicDatabase.stop(BasicDatabase.java:250)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.TopService.stop(TopService.java:443)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.TopService.shutdown(TopService.java:394)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:229)&lt;br/&gt;
        at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:199)&lt;br/&gt;
        at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:241)&lt;/p&gt;

&lt;p&gt;Seems it fails because the language connection context cannot be obtained.&lt;br/&gt;
Does this imply that the clearing the sequence caches is being done in the wrong place (i.e. too late)?&lt;/p&gt;</comment>
                            <comment id="13098961" author="rhillegas" created="Wed, 7 Sep 2011 14:58:05 +0100"  >&lt;p&gt;Attaching derby-5398.sql. This script shows the following behaviors related to this problem:&lt;/p&gt;

&lt;p&gt;1) If you shutdown the database in an orderly fashion, then there is enough context when we need it and sequences are able to flush their current positions to disk, reclaiming unused values.&lt;/p&gt;

&lt;p&gt;2) If you shutdown the database in an unorderly fashion, there isn&apos;t enough context when we need it and the sequences trip over an NPE when trying to reclaim their unused values.&lt;/p&gt;

&lt;p&gt;I can imagine several ways to fix this problem, listed in rising order of usefulness and complexity:&lt;/p&gt;

&lt;p&gt;i) Re-instate the original exception swallowing.&lt;/p&gt;

&lt;p&gt;ii) Have BasicDatabase check for the presence of enough context before trying to clear the sequence caches. If there isn&apos;t enough context then we are somewhere in an unorderly shutdown and the sequences can&apos;t reclaim their unused values.&lt;/p&gt;

&lt;p&gt;iii) Find another place in shutdown where DataDictionary.clearSequenceCaches() succeeds in more cases. If you find a place that always succeeds, then you have a solution to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5151&quot; title=&quot;Don&amp;#39;t leak unused identity/sequence values on abnormal exit.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5151&quot;&gt;DERBY-5151&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13098963" author="bryanpendleton" created="Wed, 7 Sep 2011 15:00:13 +0100"  >&lt;p&gt;I like (ii), depending on how awkward those checks are.&lt;/p&gt;

&lt;p&gt;Do you think there would be enough context left to be able to emit a message to derby.log if you can&apos;t flush the caches?&lt;/p&gt;
</comment>
                            <comment id="13099038" author="knutanders" created="Wed, 7 Sep 2011 16:41:40 +0100"  >&lt;p&gt;I don&apos;t think this is an issue with orderly vs unorderly shutdown, but rather database shutdown vs system shutdown. ij runs a system shutdown on exit, so simply exiting the script, like in the repro, doesn&apos;t actually cause an unorderly shutdown. I also see the NPE if I add an explicit system shutdown at the end of the repro script.&lt;/p&gt;</comment>
                            <comment id="13099304" author="rhillegas" created="Wed, 7 Sep 2011 21:55:34 +0100"  >&lt;p&gt;Thanks for that observation, Knut. It makes some sense that there is no LanguageConnectionContext during engine shutdown: there is no distinguished database, so there is no connection, so there is no LCC.&lt;/p&gt;

&lt;p&gt;The consequence of this bug is that sequences and identities leak values on orderly engine shutdown (but not on orderly database shutdown).&lt;/p&gt;

&lt;p&gt;The SequenceUpdater needs the LCC only in order to get its hands on a transaction for flushing the unused values. I am attaching derby-5398-01-aa-dummyTransaction.diff. This patch causes the SequenceUpdater to create a transient transaction for its work in the event that an LCC does not exist. This solution eliminates the NPE and causes the unused sequence values to be flushed so that the sequence does not leak values after an orderly engine shutdown.&lt;/p&gt;

&lt;p&gt;I have verified that derby-5398.sql passes now and that unused values are not leaked after the orderly engine shutdown. I have also verified that SequenceGeneratorTest continues to run cleanly. I will run a full regression suite now.&lt;/p&gt;

&lt;p&gt;On orderly shutdown, the transient transaction does not wait for the locks it needs in order to update the catalogs. If the transient transaction can&apos;t get those locks, then the sequence/identity will leak unused values. This seems better than delaying/hanging the engine shutdown. I would like to further polish this patch by printing a diagnostic to derby.log when the locks can&apos;t be obtained and values leak.&lt;/p&gt;

&lt;p&gt;Let me know if this approach sounds reasonable. Thanks.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/catalog/SequenceUpdater.java&lt;/p&gt;</comment>
                            <comment id="13100134" author="knutanders" created="Thu, 8 Sep 2011 08:41:41 +0100"  >&lt;p&gt;The explanation sounds reasonable, and so does the proposed fix. What I don&apos;t understand is why the bug is intermittent. Is the LCC sometimes available during engine shutdown and sometimes not?&lt;/p&gt;</comment>
                            <comment id="13100282" author="rhillegas" created="Thu, 8 Sep 2011 13:56:05 +0100"  >&lt;p&gt;Tests passed cleanly for me on this patch except for the following issues:&lt;/p&gt;

&lt;p&gt;A) A trigger-related error in AlterTableTest which also occurs in a clean subversion client without the patch.&lt;/p&gt;

&lt;p&gt;B) Heisenbugs in NetworkServerControlClientCommandTest and InvalidLDAPServerAuthenticationTest which do not seem related to these changes and which do not recur when I run the tests standalone.&lt;/p&gt;

&lt;p&gt;The errors were:&lt;/p&gt;

&lt;p&gt;There were 2 errors:&lt;br/&gt;
1) testDropColumn(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)java.sql.SQLException: Operation &apos;DROP COLUMN&apos; cannot be performed on object &apos;A2&apos; because TRIGGER &apos;ATDC_14_TRIGGER_1&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:400)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:348)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2290)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:179)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropColumn(AlterTableTest.java:2492)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: ERROR X0Y25: Operation &apos;DROP COLUMN&apos; cannot be performed on object &apos;A2&apos; because TRIGGER &apos;ATDC_14_TRIGGER_1&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:365)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.columnDroppedAndTriggerDependencies(AlterTableConstantAction.java:1901)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.dropColumnFromTable(AlterTableConstantAction.java:1748)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(AlterTableConstantAction.java:507)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(AlterTableConstantAction.java:276)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:61)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	... 47 more&lt;br/&gt;
2) testDropColumn(org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest)java.sql.SQLException: Operation &apos;DROP COLUMN&apos; cannot be performed on object &apos;A2&apos; because TRIGGER &apos;ATDC_14_TRIGGER_1&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:46)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(SqlException.java:358)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeUpdate(Statement.java:512)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropColumn(AlterTableTest.java:2492)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: Operation &apos;DROP COLUMN&apos; cannot be performed on object &apos;A2&apos; because TRIGGER &apos;ATDC_14_TRIGGER_1&apos; is dependent on that object.&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeSqlca(Statement.java:1836)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.completeExecuteImmediate(Statement.java:1424)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.parseEXCSQLIMMreply(NetStatementReply.java:208)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatementReply.readExecuteImmediate(NetStatementReply.java:59)&lt;br/&gt;
	at org.apache.derby.client.net.StatementReply.readExecuteImmediate(StatementReply.java:45)&lt;br/&gt;
	at org.apache.derby.client.net.NetStatement.readExecuteImmediate_(NetStatement.java:124)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.readExecuteImmediate(Statement.java:1420)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.flowExecute(Statement.java:2144)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeUpdateX(Statement.java:517)&lt;br/&gt;
	at org.apache.derby.client.am.Statement.executeUpdate(Statement.java:503)&lt;br/&gt;
	... 54 more&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) testPingWithWrongHost(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest)junit.framework.AssertionFailedError: Could not find expectedString:Unable to find host in output:&amp;lt;STDOUT&amp;gt; Wed Sep 07 17:37:57 PDT 2011 : Could not connect to Derby Network Server on host nothere, port 1527: Operation timed out&lt;br/&gt;
&amp;lt;END STDOUT&amp;gt;&lt;br/&gt;
&amp;lt;STDERR&amp;gt;&amp;lt;END STDERR&amp;gt;&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:520)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.assertFailedPing(NetworkServerControlClientCommandTest.java:147)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.testPingWithWrongHost(NetworkServerControlClientCommandTest.java:112)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
2) testInvalidLDAPServerConnectionError(org.apache.derbyTesting.functionTests.tests.jdbcapi.InvalidLDAPServerAuthenticationTest)junit.framework.AssertionFailedError&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.InvalidLDAPServerAuthenticationTest.testInvalidLDAPServerConnectionError(InvalidLDAPServerAuthenticationTest.java:122)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 9776,  Failures: 2,  Errors: 2&lt;/p&gt;</comment>
                            <comment id="13100283" author="rhillegas" created="Thu, 8 Sep 2011 13:58:56 +0100"  >&lt;p&gt;Thanks for the vote of confidence, Knut. I don&apos;t know why the original problem in the storemore tests is intermittent.&lt;/p&gt;</comment>
                            <comment id="13100418" author="rhillegas" created="Thu, 8 Sep 2011 17:09:40 +0100"  >&lt;p&gt;Attaching derby-5398-01-ac-dummyTransaction.diff. I am running regression tests now. This version makes two improvements to the previous version of the patch:&lt;/p&gt;

&lt;p&gt;1) Logs a diagnostic message to derby.log if we can&apos;t get the locks needed to flush the unused, preallocated sequence values.&lt;/p&gt;

&lt;p&gt;2) Adds a regression test to make sure that we don&apos;t leak sequence values after orderly engine shutdown.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/catalog/SequenceUpdater.java&lt;/p&gt;

&lt;p&gt;The original change plus the new logging of a diagnostic message if we can&apos;t flush the values.&lt;/p&gt;


&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M      java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;/p&gt;

&lt;p&gt;The new diagnostic message.&lt;/p&gt;

&lt;p&gt;---------------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/SequenceGeneratorTest.java&lt;/p&gt;

&lt;p&gt;The new regression test.&lt;/p&gt;</comment>
                            <comment id="13100508" author="mamtas" created="Thu, 8 Sep 2011 18:58:13 +0100"  >&lt;p&gt;Rick, the trigger test failure you noticed is related to my checkin yesterday for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5044&quot; title=&quot;ALTER TABLE DROP COLUMN will not detect triggers defined on other tables with their trigger action using the column being dropped&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5044&quot;&gt;&lt;del&gt;DERBY-5044&lt;/del&gt;&lt;/a&gt;. I am working on fixing the existing tests for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5044&quot; title=&quot;ALTER TABLE DROP COLUMN will not detect triggers defined on other tables with their trigger action using the column being dropped&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5044&quot;&gt;&lt;del&gt;DERBY-5044&lt;/del&gt;&lt;/a&gt; which now should work because of yesterday&apos;s fix. Hope to have the tests checked in by later today or early tomorrow.&lt;/p&gt;</comment>
                            <comment id="13100574" author="rhillegas" created="Thu, 8 Sep 2011 19:52:34 +0100"  >&lt;p&gt;Thanks for that information, Mamta. Except for that failure, tests ran cleanly on derby-5398-01-ac-dummyTransaction.diff. Committed to trunk at subversion revision 1166859.&lt;/p&gt;</comment>
                            <comment id="13100626" author="rhillegas" created="Thu, 8 Sep 2011 20:34:49 +0100"  >&lt;p&gt;Ported 1166859 from trunk to 10.8 branch at subversion revision 1166868. Leaving the issue unresolved because the original issue was a heisenbug and we don&apos;t know yet whether the problem has just moved some place else in the storemore tests.&lt;/p&gt;</comment>
                            <comment id="13102816" author="myrna" created="Mon, 12 Sep 2011 18:22:54 +0100"  >&lt;p&gt;Somehow my comment was lost when I resolved this issue. Here it is: &lt;br/&gt;
I superficially checked nightly results, and there are a number of failures in replication tests since this fix (some of which actually look like other issues, e.g. I saw &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4269&quot; title=&quot;Failover did not succeed in 2 min.: testReplication_Local_3_p6_autocommit_OK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4269&quot;&gt;&lt;del&gt;DERBY-4269&lt;/del&gt;&lt;/a&gt;), but no more storemore test failures or NPEs.&lt;br/&gt;
I am resolving this issue and suggest opening new one(s) for further replication issues if appropriate, so it can be properly marked as fixed in 10.8.2.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                                                <inwardlinks description="is broken by">
                                        <issuelink>
            <issuekey id="12520151">DERBY-5390</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12493383" name="derby-5398-01-aa-dummyTransaction.diff" size="2129" author="rhillegas" created="Wed, 7 Sep 2011 21:55:34 +0100"/>
                            <attachment id="12493609" name="derby-5398-01-ac-dummyTransaction.diff" size="6466" author="rhillegas" created="Thu, 8 Sep 2011 17:09:40 +0100"/>
                            <attachment id="12493320" name="derby-5398.sql" size="977" author="rhillegas" created="Wed, 7 Sep 2011 14:58:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Sep 2011 10:11:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24817</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ayn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35594</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>