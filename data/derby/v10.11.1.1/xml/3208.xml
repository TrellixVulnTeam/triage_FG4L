<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:59 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3208/DERBY-3208.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3208] Callers of DaemonService.serviceNow() assume behaviour not guaranteed by the interface</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3208</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;There are two callers of DaemonService.serviceNow() in the code:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Clock.rotateClock()&lt;/li&gt;
	&lt;li&gt;LogToFile.flush()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;They implicitly assume that if they are not currently waiting to be serviced by the daemon service, a call to serviceNow() is guaranteed to result in their performWork() method being invoked at some point in the future. They maintain flags (Clock.cleanerRunning and LogToFile.checkpointDaemonCalled) which tell whether serviceNow() has been called, and if they are true, serviceNow() is not called again. When performWork() is called, they reset the flag, allowing others to call serviceNow() again.&lt;/p&gt;

&lt;p&gt;However, DaemonService.serviceNow() does not guarantee that performWork() always gets called in these cases. Its javadoc says the following:&lt;/p&gt;

&lt;p&gt;	/**&lt;br/&gt;
	    Service this subscription ASAP.  Does not guarantee that the daemon&lt;br/&gt;
		will actually do anything about it.&lt;/p&gt;

&lt;p&gt;		@param clientNumber the number that uniquely identify the client&lt;br/&gt;
	 */&lt;/p&gt;

&lt;p&gt;If one of the calls to serviceNow() does not result in a call to performWork(), the flags which prevent new calls to serviceNow() are not reset. Since both Clock and LogToFile are subscribed to the daemon service in on-demand-only mode, performWork() is only called if the subscriber calls serviceNow(). That means there is no way to reset the flags, and Clock/LogToFile are never allowed to call serviceNow() again.&lt;/p&gt;

&lt;p&gt;Although BasicDaemon&apos;s implementation of the DaemonService interface does in fact give the necessary guarantees (without explicitly stating them, though) to make this protocol work, Clock and LogToFile should be coded against the specification of the interface rather than against the undocumented behaviour of an implementation of the interface.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12382611">DERBY-3208</key>
            <summary>Callers of DaemonService.serviceNow() assume behaviour not guaranteed by the interface</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Nov 2007 21:02:25 +0000</created>
                <updated>Mon, 19 Nov 2007 10:54:56 +0000</updated>
                            <resolved>Mon, 19 Nov 2007 10:54:32 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Services</component>
                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12542884" author="knutanders" created="Thu, 15 Nov 2007 21:16:58 +0000"  >&lt;p&gt;The easiest solution is probably to extend the javadoc comment for&lt;br/&gt;
DaemonService.serviceNow() with the necessary guarantee for this code&lt;br/&gt;
to work. My suggestion is:&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Service this subscription ASAP. When this method is called, the subscriber&apos;s&lt;/li&gt;
	&lt;li&gt;&amp;lt;code&amp;gt;performWork()&amp;lt;/code&amp;gt; method is guaranteed to be invoked at some point&lt;/li&gt;
	&lt;li&gt;in the future. However, there is no guarantee that a subscriber&apos;s&lt;/li&gt;
	&lt;li&gt;&amp;lt;code&amp;gt;performWork()&amp;lt;/code&amp;gt; is called the same number of times as the&lt;/li&gt;
	&lt;li&gt;subscriber calls this method. More precisely, if a subscriber is already&lt;/li&gt;
	&lt;li&gt;waiting for this daemon service to invoke its &amp;lt;code&amp;gt;performWork()&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;method, a call to this method may or may not be a no-op.&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think the above description exactly matches how it is implemented in&lt;br/&gt;
BasicDaemon, except that &quot;may or may not be&quot; in the last sentence can&lt;br/&gt;
be replaced with &quot;is&quot;.&lt;/p&gt;</comment>
                            <comment id="12542924" author="dagw" created="Fri, 16 Nov 2007 01:21:14 +0000"  >&lt;p&gt;Makes sense to me, but what would it be it were not a no-op (last line)?&lt;br/&gt;
Enqueue a request to call performWork more times?&lt;/p&gt;</comment>
                            <comment id="12543017" author="knutanders" created="Fri, 16 Nov 2007 09:46:30 +0000"  >&lt;p&gt;Yes, at one extreme one could imagine an implementation which queued up all calls to serviceNow() and guaranteed that performWork() would be called exactly the same number of times as the subscriber had called serviceNow(). Or one could imagine an implementation that queued up multiple requests from the same subscriber, but occasionally lost some of them. Since the original description was so vague, I thought it was best not to restrict the aspects that are unimportant for the correct behaviour of the current code.&lt;/p&gt;</comment>
                            <comment id="12543519" author="knutanders" created="Mon, 19 Nov 2007 10:54:32 +0000"  >&lt;p&gt;Thanks for your comments, Dag and Bryan. I have tried to make the last sentence clearer and committed revision 596262.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Nov 2007 01:21:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23494</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39763</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>