<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:25:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-500/DERBY-500.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-500] Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream</title>
                <link>https://issues.apache.org/jira/browse/DERBY-500</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have table contained BLOB and CLOB fields:&lt;/p&gt;

&lt;p&gt;Create table string is:&lt;/p&gt;

&lt;p&gt;private static final String CREATE = &quot;CREATE TABLE ta (&quot; +&lt;br/&gt;
            &quot;ta_id INTEGER NOT NULL,&quot; +&lt;br/&gt;
            &quot;mname VARCHAR( 254 ) NOT NULL,&quot; +&lt;br/&gt;
            &quot;mvalue INT NOT NULL,&quot; +&lt;br/&gt;
            &quot;mdate DATE NOT NULL,&quot; +&lt;br/&gt;
            &quot;bytedata BLOB NOT NULL,&quot; +&lt;br/&gt;
            &quot;chardata CLOB NOT NULL,&quot; +&lt;br/&gt;
            &quot;PRIMARY KEY ( ta_id ))&quot;;&lt;/p&gt;


&lt;p&gt;Then I insert 2000 rows in the table.&lt;/p&gt;



&lt;p&gt;Then I update all 2000 rows by command:&lt;/p&gt;

&lt;p&gt;private static final String UPDATE  =  &quot;UPDATE ta &quot; +&lt;br/&gt;
    		&quot;SET bytedata=? ,chardata=? &quot; +&lt;br/&gt;
    		&quot;WHERE mvalue=?&quot;;&lt;/p&gt;

&lt;p&gt;/*&lt;b&gt;create blob and clob arrays&lt;/b&gt;*/&lt;br/&gt;
        int len1 = 10000;//for blob length data&lt;br/&gt;
        int len2 = 15000;//for clob length data&lt;br/&gt;
        byte buf [] = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;len1&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        for(int i=0;i&amp;lt;len1;i++)&lt;/p&gt;
{
        	buf [i] = (byte)45;
        }
&lt;p&gt;        ByteArrayInputStream bais = new ByteArrayInputStream(buf);&lt;/p&gt;

&lt;p&gt;        char[] bufc = new char&lt;span class=&quot;error&quot;&gt;&amp;#91;len2&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        for (int i = 0; i &amp;lt; bufc.length; i++) &lt;/p&gt;
{
        	bufc[i] = (char)&apos;b&apos;;
		}
&lt;p&gt;        CharArrayReader car = new CharArrayReader(bufc);&lt;br/&gt;
/***/&lt;br/&gt;
PreparedStatement pstmt = connection.prepareStatement(UPDATE);&lt;br/&gt;
pstmt.setBinaryStream(1,bais, len1);&lt;br/&gt;
pstmt.setCharacterStream(2,car, len2);&lt;br/&gt;
pstmt.setInt(3,5000);&lt;br/&gt;
int updated =  pstmt.executeUpdate();&lt;br/&gt;
pstmt.close();&lt;br/&gt;
System.out.printlen(&quot;updated =&quot;+updated );&lt;/p&gt;


&lt;p&gt;all 2000 rows updated , because I receive output : updated =2000&lt;/p&gt;

&lt;p&gt;But If I run select (SELECT bytedata ,chardata  FROM ta)  after update, select failed with error:&lt;/p&gt;

&lt;p&gt;ERROR XSDA7: Restore of a serializable or SQLData object of class , attempted to&lt;br/&gt;
 read more data than was originally stored&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardEx&lt;br/&gt;
ception.java)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(S&lt;br/&gt;
toredPage.java)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFromSlot&lt;br/&gt;
(StoredPage.java)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlot(BasePage.&lt;br/&gt;
java)&lt;br/&gt;
        at org.apache.derby.impl.store.access.conglomerate.GenericScanController&lt;br/&gt;
.fetchRows(GenericScanController.java)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapScan.fetchNextGroup(HeapS&lt;br/&gt;
can.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.reloadArray(&lt;br/&gt;
BulkTableScanResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.getNextRowCo&lt;br/&gt;
re(BulkTableScanResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowC&lt;br/&gt;
ore(NestedLoopJoinResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NestedLoopLeftOuterJoinResultSet.ge&lt;br/&gt;
tNextRowCore(NestedLoopLeftOuterJoinResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRow&lt;br/&gt;
Core(ProjectRestrictResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.SortResultSet.getRowFromResultSet(S&lt;br/&gt;
ortResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.SortResultSet.getNextRowFromRS(Sort&lt;br/&gt;
ResultSet.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResult&lt;br/&gt;
Set.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSe&lt;br/&gt;
t.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicN&lt;br/&gt;
oPutResultSetImpl.java)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPre&lt;br/&gt;
paredStatement.java)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedState&lt;br/&gt;
ment.java)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Em&lt;br/&gt;
bedPreparedStatement.java)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPrepar&lt;br/&gt;
edStatement.java)&lt;br/&gt;
        at com.beep_beep.dbtest.complex.Benchmark.testSelect(Unknown Source)&lt;br/&gt;
        at com.beep_beep.dbtest.complex.Benchmark.executeSimplestBigTable(Unknown Sour&lt;br/&gt;
ce)&lt;br/&gt;
        at com.beep_beep.dbtest.complex.Benchmark.testBigTable(Unknown Source)&lt;br/&gt;
        at com.beep_beep.dbtest.complex.Benchmark.executeDegradationBenchmark(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
        at com.beep_beep.dbtest.complex.Benchmark.main(Unknown Source)&lt;/p&gt;


&lt;p&gt;From the stack trace and from console I see that Update passed, but error was raised in Select after Update.&lt;/p&gt;


&lt;p&gt;When I try the same update, but with difference(I changed WHERE clause, causing update only 1 row):&lt;br/&gt;
private static final String UPDATE  =  &quot;UPDATE ta &quot; +&lt;br/&gt;
    		&quot;SET bytedata=? ,chardata=? &quot; +&lt;br/&gt;
    		&quot;WHERE mname=?&quot;;&lt;/p&gt;

&lt;p&gt;PreparedStatement pstmt = connection.prepareStatement(UPDATE);&lt;br/&gt;
pstmt.setBinaryStream(1,bais, len1);&lt;br/&gt;
pstmt.setCharacterStream(2,car, len2);&lt;br/&gt;
pstmt.setInt(3,&quot;PETER&quot;);&lt;br/&gt;
int updated =  pstmt.executeUpdate();&lt;br/&gt;
pstmt.close();&lt;br/&gt;
System.out.printlen(&quot;updated =&quot;+updated );&lt;/p&gt;

&lt;p&gt;Only 1 row updated , because I receive output : updated =1&lt;/p&gt;

&lt;p&gt;In this case I have NO errors in select(the same as previous) .&lt;/p&gt;

&lt;p&gt;My assumption:&lt;br/&gt;
It seems that Update receives ByteArrayInputStream and updates correctly only 1 row, then all rows updated by some&lt;br/&gt;
incorrect value(may be because ByteArrayInputStream reached its end in first update), causing select failure.&lt;/p&gt;

&lt;p&gt;I tested PointBase by the same test and PointBase passed this stage without errors, no matter how many rows was updated.&lt;br/&gt;
So I think it is a bug.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;













</description>
                <environment>Windows 2000, java SDK 1.4</environment>
        <key id="12313208">DERBY-500</key>
            <summary>Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skambha">Sunitha Kambhampati</assignee>
                                    <reporter username="beep_beep">Peter Kovgan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Aug 2005 18:38:01 +0100</created>
                <updated>Wed, 9 Nov 2005 06:09:07 +0000</updated>
                            <resolved>Fri, 21 Oct 2005 13:59:15 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12318126" author="beep_beep" created="Tue, 9 Aug 2005 18:44:45 +0100"  >&lt;p&gt;In previous description I have one mistake:&lt;/p&gt;

&lt;p&gt;instead pstmt.setInt(3,&quot;PETER&quot;);&lt;br/&gt;
really in code I have pstmt.setString(3,&quot;PETER&quot;);&lt;/p&gt;
</comment>
                            <comment id="12318130" author="beep_beep" created="Tue, 9 Aug 2005 19:08:00 +0100"  >&lt;p&gt;Could you provide some example how to Update BLOB and CLOB fields correctly ?&lt;/p&gt;</comment>
                            <comment id="12331445" author="army" created="Thu, 6 Oct 2005 09:41:41 +0100"  >&lt;p&gt;Unassigning myself since I&apos;m not currently looking at this issue and Sunitha is looking into it...&lt;/p&gt;</comment>
                            <comment id="12332328" author="skambha" created="Tue, 18 Oct 2005 17:35:41 +0100"  >&lt;p&gt;Background :&lt;br/&gt;
In Derby, when a stream is set as a parameter value, the wrapper stream object used for character data is ReaderToUTF8Stream &lt;br/&gt;
and for binary data it is RawToBinaryFormatStream.Both these stream objects on read() return data in a format that is used to store the respective datatype value. E.g in case of char, the characters read from the user stream are converted using utf-8 derby specific encoding and read calls return &lt;br/&gt;
the data as expected by store layer. Beginning 2 bytes either have the utflen or has zeroes, or if it is a long string, then the value is ended with the special marker 0xE0 , 0x00, 0x00. For binary data, the stream data is prepended with 4 zeroes. &lt;/p&gt;

&lt;p&gt;Problem:&lt;br/&gt;
once,the stream has been read fully and end of file reached, further read() returns a -1.  If a stream is re-read, it returns a -1 which is incorrect data.  E.g.in the repro for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-500&quot; title=&quot;Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-500&quot;&gt;&lt;del&gt;DERBY-500&lt;/del&gt;&lt;/a&gt;, the update statement has multiple rows that qualify and since the stream parameter is used; the first row gets updated with the correct value and the stream is drained. For the subsequent rows, the read from the stream parameter value returns -1 and thus is updated with incorrect data.When retrieving the row back, the format of the fields is incorrect and thus the exception. &lt;br/&gt;
__________&lt;br/&gt;
This patch&lt;/p&gt;

&lt;p&gt;1. adds changes to RawToBinaryFormatStream and ReaderToUTF8Stream to throw an EOFException if stream is re-read.&lt;br/&gt;
If a stream value has been fully read and end of file reached, any further reads on the stream object  will result in an EOFException. This seems reasonable and more correct than using incorrect values.  &lt;br/&gt;
Adds a new error message - &apos;Stream has already been read and end-of-file reached and cannot be re-used.&apos;&lt;/p&gt;

&lt;p&gt;2. changes to RememberBytesInputStream to keep track of the stream state and not call read on the stream objects once eof is reached.&lt;/p&gt;

&lt;p&gt;3. Fix a bug in StoredPage.logColumn related to streams. In one particular scenario, column was not being set to RememberBytesInputStream object and thus losing the data that would be read from stream into RememberBytesInputStream.&lt;/p&gt;

&lt;p&gt;4. adds testcases to store/streamingColumn.java and lang/forbitdata.java &lt;/p&gt;


&lt;p&gt;Also note&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This fix affects cases when a stream is re-used in which case an exception will be thrown.&lt;br/&gt;
So code that reads the stream once and materializes it will not be affected. E.g.  Currently in case of char,varchar,long varchar, streams are materialized and this will work fine as before.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Ran tests ok on jdk142/win2k (using classes directory)&lt;/p&gt;

&lt;p&gt;svn stat&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\RawToBinaryFormatStream.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\ReaderToUTF8Stream.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\store\raw\data\RememberBytesInputStream.java&lt;br/&gt;
M      java\engine\org\apache\derby\impl\store\raw\data\StoredPage.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\reference\SQLState.java&lt;br/&gt;
M      java\engine\org\apache\derby\loc\messages_en.properties&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\lang\forbitdata.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\store\streamingColumn.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\streamingColumn.out&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\forbitdata.out&lt;/p&gt;

&lt;p&gt;I&apos;ll add clarifications to the paper - JDBCImplementation.html and attach it as another patch to this jira entry.&lt;/p&gt;

&lt;p&gt;Can someone please review it. Thanks.&lt;/p&gt;</comment>
                            <comment id="12332522" author="skambha" created="Thu, 20 Oct 2005 08:07:35 +0100"  >&lt;p&gt;I would like this fix to go into 10.1 codeline. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-500&quot; title=&quot;Update/Select failure when BLOB/CLOB fields updated in several rows by PreparedStatement using setBinaryStream and setCharacterStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-500&quot;&gt;&lt;del&gt;DERBY-500&lt;/del&gt;&lt;/a&gt; fix was committed to trunk(10.2) with SVN 326307.  The SVN merge command  has conflicts in 2 files ( ReaderToUTF8Stream and streamingColumn.java). The reason for this is some changes went into these 2 files as part of DERBY352, but fix for DERBY352 is not a bug-fix but a behavior change and so it is not ported to 10.1 codeline.  As a result, I have had to hand merge these 2 files and so I am attaching the patch ( V10.1_Derby500.diff.txt and V10.1_Derby500.stat.txt).  &lt;/p&gt;

&lt;p&gt;This patch fixes DERBY500 in 10.1 codeline, similar to trunk.  Also have added  comments in ReaderToUTF8Stream.close() to explain why reader.close() should not be called.&lt;/p&gt;

&lt;p&gt;I ran derbyall on ibm 142/win2k and there were 4 failures , none related to my change.&lt;br/&gt;
derbyall/derbyall.fail:i18n/JapanCodeConversion.sql&lt;br/&gt;
derbyall/derbyall.fail:i18n/iepnegativetests_ES.sql&lt;br/&gt;
derbyall/derbynetclientmats/derbynetmats.fail:tools/importExport.java&lt;br/&gt;
derbyall/derbynetmats/derbynetmats.fail:tools/importExport.java &lt;/p&gt;

&lt;p&gt;First two are master updates issue (not related to this change). Rerunning the 2 importExport tests in network server frameworks and running derbynetclientmats and derbynetmats does not have any failures. &lt;/p&gt;

&lt;p&gt;If someone could review and commit it, that would be great.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12332644" author="kmarsden" created="Fri, 21 Oct 2005 08:45:10 +0100"  >&lt;p&gt;Checked this fix into 10.1&lt;/p&gt;

&lt;p&gt;Date: Thu Oct 20 15:18:36 2005&lt;br/&gt;
New Revision: 327012&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewcvs?rev=327012&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewcvs?rev=327012&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12332667" author="skambha" created="Fri, 21 Oct 2005 13:59:15 +0100"  >&lt;p&gt;committed to &lt;br/&gt;
10.2  -  SVN 326307&lt;br/&gt;
10.1.2  - SVN 327012&lt;/p&gt;

&lt;p&gt;I have verified the fix by running  a test. &lt;/p&gt;
</comment>
                            <comment id="12332668" author="skambha" created="Fri, 21 Oct 2005 14:23:49 +0100"  >&lt;p&gt;This patch(Doc_JdbcImpl_paper.diff.txt) adds some clarifications to the JDBCImplementation.html paper.&lt;br/&gt;
I used vi to edit this file. Can someone please review and commit this.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12357076" author="jta" created="Wed, 9 Nov 2005 05:57:36 +0000"  >&lt;p&gt;Committed Doc_JdbcImpl_paper.diff.txt, revision 331887.&lt;/p&gt;</comment>
                            <comment id="12357077" author="skambha" created="Wed, 9 Nov 2005 06:09:07 +0000"  >&lt;p&gt;Thanks Jean for commiting the clarifications to JDBCImplementation.html that I wanted to target with DERBY500. Code fixes have already been committed and resolved, hence closing the bug. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12314932" name="Derby500.diff.txt" size="39398" author="skambha" created="Tue, 18 Oct 2005 17:35:40 +0100"/>
                            <attachment id="12314931" name="Derby500.stat.txt" size="782" author="skambha" created="Tue, 18 Oct 2005 16:52:43 +0100"/>
                            <attachment id="12315013" name="Doc_JdbcImpl_paper.diff.txt" size="1923" author="skambha" created="Fri, 21 Oct 2005 14:23:49 +0100"/>
                            <attachment id="12314972" name="V10.1_Derby500.diff.txt" size="40459" author="skambha" created="Thu, 20 Oct 2005 08:07:35 +0100"/>
                            <attachment id="12314973" name="V10.1_Derby500.stat.txt" size="1205" author="skambha" created="Thu, 20 Oct 2005 08:07:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Oct 2005 08:41:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21985</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17kn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40877</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>