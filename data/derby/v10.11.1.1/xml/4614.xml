<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4614/DERBY-4614.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4614] JDBC metadata gives incorrect lengths for timestamps</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4614</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;While looking into &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2602&quot; title=&quot;TIMESTAMP value is truncated  when return to client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2602&quot;&gt;&lt;del&gt;DERBY-2602&lt;/del&gt;&lt;/a&gt;, I noticed that Derby gives the wrong lengths for various fields in the JDBC metadata for timestamps. I will attach a spec describing what I think should be done to correct this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12461979">DERBY-4614</key>
            <summary>JDBC metadata gives incorrect lengths for timestamps</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Apr 2010 20:18:22 +0100</created>
                <updated>Fri, 14 Jun 2013 18:35:20 +0100</updated>
                            <resolved>Tue, 1 Mar 2011 17:39:18 +0000</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12856886" author="rhillegas" created="Wed, 14 Apr 2010 14:31:57 +0100"  >&lt;p&gt;Attaching functional spec for the metadata changes.&lt;/p&gt;</comment>
                            <comment id="12856888" author="rhillegas" created="Wed, 14 Apr 2010 14:33:33 +0100"  >&lt;p&gt;This seems like a good issue for a newcomer. This issue is a good introduction to how Derby&apos;s JDBC metadata is implemented and tested.&lt;/p&gt;</comment>
                            <comment id="12903957" author="nirmal" created="Sun, 29 Aug 2010 12:30:37 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;I would like to take up this bug. I&apos;ve read through the specification that you&apos;ve attached.&lt;br/&gt;
Can you suggest me an entry point to implement the spec? I can see that solving this bug,&lt;br/&gt;
will help to solve the other linked bugs.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12903975" author="bryanpendleton" created="Sun, 29 Aug 2010 15:53:16 +0100"  >&lt;p&gt;Some good places to start might include:&lt;/p&gt;

&lt;p&gt;1) Setting up java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java&lt;br/&gt;
in your debugger, so that you can have an easy way to set breakpoints in various&lt;br/&gt;
metadata methods and hit them from the test.&lt;/p&gt;

&lt;p&gt;2) Have a look at &lt;br/&gt;
java/engine/org/apache/derby/impl/jdbc/EmbedResultSetMetaData.java&lt;br/&gt;
and&lt;br/&gt;
java/engine/org/apache/derby/iapi/types/DataTypeUtilities.java&lt;br/&gt;
to get a feel for how some of the RSMD methods are implemented for embedded Derby&lt;/p&gt;

&lt;p&gt;3) Have a look at &lt;br/&gt;
java/client/org/apache/derby/client/am/ColumnMetaData.java&lt;br/&gt;
to get a feel for how some of the RSMD methods are implemented for client/server Derby&lt;/p&gt;

&lt;p&gt;Then I&apos;d suggest having a close look through the spec and ensuring that&lt;br/&gt;
the existing test programs provide reasonable test coverage for the API calls of interest.&lt;/p&gt;</comment>
                            <comment id="12904192" author="rhillegas" created="Mon, 30 Aug 2010 14:22:56 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;In addition to Bryan&apos;s suggestions, you&apos;ll want to take a look at metadata.properties. That file contains the queries which support the DatabaseMetaData calls. Thanks.&lt;/p&gt;</comment>
                            <comment id="12904223" author="nirmal" created="Mon, 30 Aug 2010 16:22:53 +0100"  >&lt;p&gt;Thanks Bryan &amp;amp; Rick! I&apos;ll look into those.&lt;/p&gt;</comment>
                            <comment id="12904627" author="nirmal" created="Tue, 31 Aug 2010 14:46:10 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Is there a way to find tests involved with database metadata? or the better way is, make my changes run java -Xmx512m -XX:MaxPermSize=128m junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All &amp;gt;junitAll.out 2&amp;gt;&amp;amp;1 and see the failures and change the tests? &lt;/p&gt;

&lt;p&gt;PS: I&apos;m not sure whether running only java -Xmx512m -XX:MaxPermSize=128m junit.textui.TestRunner org.apache.derbyTesting.functionTests.suites.All &amp;gt;junitAll.out 2&amp;gt;&amp;amp;1 will be enough. Please suggest me if not.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12904639" author="rhillegas" created="Tue, 31 Aug 2010 15:29:02 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I don&apos;t have a comprehensive list of tests which stress the metadata calls so I would recommend running the full regression test suite. Before doing that, though, I would recommend running the following tests standalone:&lt;/p&gt;

&lt;p&gt;DatabaseMetaDataTest&lt;br/&gt;
TestDbMetaData&lt;br/&gt;
ParameterMetaDataJdbc30Test&lt;br/&gt;
ResultSetMetaDataTest&lt;br/&gt;
PrepStmtMetaDataTest&lt;/p&gt;

&lt;p&gt;In addition, I would recommend running the upgrade tests because they test the metadata in old versions of Derby and you will want to make sure that they don&apos;t break when you change the metadata in 10.7.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12905178" author="nirmal" created="Wed, 1 Sep 2010 20:37:34 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I am attaching patch #1 which is intended to implement the spec of this issue.&lt;br/&gt;
Additionally this patch is addressing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4625&quot; title=&quot;TIMESTAMP function doesn&amp;#39;t accept nanoseconds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4625&quot;&gt;&lt;del&gt;DERBY-4625&lt;/del&gt;&lt;/a&gt; as well, both are co-related&lt;br/&gt;
so difficult to separate.&lt;br/&gt;
I ran the full regression test suite successfully!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12905467" author="knutanders" created="Thu, 2 Sep 2010 10:47:32 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;It looks to me that this issue and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4625&quot; title=&quot;TIMESTAMP function doesn&amp;#39;t accept nanoseconds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4625&quot;&gt;&lt;del&gt;DERBY-4625&lt;/del&gt;&lt;/a&gt; are orthogonal issues that would be better addressed separately. What are the problems you have found that made them difficult to separate? To me it looks like the changes in SQLTimestamp.java and DateTimeTest.java are only related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4625&quot; title=&quot;TIMESTAMP function doesn&amp;#39;t accept nanoseconds&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4625&quot;&gt;&lt;del&gt;DERBY-4625&lt;/del&gt;&lt;/a&gt;, and the changes in the other files are only related to this issue. Would that be a reasonable way to split the patch?&lt;/p&gt;</comment>
                            <comment id="12905481" author="knutanders" created="Thu, 2 Sep 2010 12:38:44 +0100"  >&lt;p&gt;A couple comments to the parts of the patch that affects this issue:&lt;/p&gt;

&lt;p&gt;1) I don&apos;t think we can change DRDAConstants.DRDA_TIMESTAMP_LENGTH&lt;br/&gt;
from 26 to 29. This constant needs to stay at 26 to ensure that newer&lt;br/&gt;
servers can talk to old clients after the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2602&quot; title=&quot;TIMESTAMP value is truncated  when return to client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2602&quot;&gt;&lt;del&gt;DERBY-2602&lt;/del&gt;&lt;/a&gt; changes. It is&lt;br/&gt;
not used by any of the meta-data calls, as far as I know, so I think&lt;br/&gt;
it is safe to leave this change out. You may want to run the&lt;br/&gt;
compatibility tests to verify that we don&apos;t break compatibility. See&lt;br/&gt;
java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/README.html&lt;br/&gt;
for details on how to set up and run these tests.&lt;/p&gt;

&lt;p&gt;2) We have this code in ColumnMetaData.getScale():&lt;/p&gt;

&lt;p&gt;    // We get the scale from the SQLDA as returned by DERBY, but DERBY does not return the ANSI-defined&lt;br/&gt;
    // value of scale 6 for TIMESTAMP.&lt;br/&gt;
    //&lt;br/&gt;
    //   The JDBC drivers should hardcode this info as a short/near term solution.&lt;br/&gt;
    //&lt;br/&gt;
    if (types_&lt;span class=&quot;error&quot;&gt;&amp;#91;column - 1&amp;#93;&lt;/span&gt; == Types.TIMESTAMP) &lt;/p&gt;
{
        return 6;
    }

&lt;p&gt;    return sqlScale_&lt;span class=&quot;error&quot;&gt;&amp;#91;column - 1&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;The patch changes this code to return 9 in the case of a timestamp,&lt;br/&gt;
which I think is fine, but I&apos;m wondering if the special case for&lt;br/&gt;
timestamp could be removed now that we make the embedded driver return&lt;br/&gt;
9 from its getScale() method. I think the value in sqlScale_&lt;span class=&quot;error&quot;&gt;&amp;#91;column-1&amp;#93;&lt;/span&gt;&lt;br/&gt;
comes from the embedded driver, but we need to check that.&lt;/p&gt;

&lt;p&gt;3) I see that the existing tests have been updated, and those changes&lt;br/&gt;
look fine to me. But do we also need new test cases to cover all the&lt;br/&gt;
changes listed in the functional spec? I see that the existing tests&lt;br/&gt;
cover these methods with the timestamp type:&lt;/p&gt;

&lt;p&gt;    DatabaseMetaData.getTypeInfo()&lt;br/&gt;
    DatabaseMetaData.getProcedureColumns()&lt;br/&gt;
    DatabaseMetaData.getFunctionColumns()&lt;br/&gt;
    ResultSetMetaData.getColumnDisplaySize()&lt;br/&gt;
    ResultSetMetaData.getPrecision()&lt;br/&gt;
    ResultSetMetaData.getScale()&lt;/p&gt;

&lt;p&gt;But I couldn&apos;t find that we test ParameterMetaData.getPrecision() and&lt;br/&gt;
ParameterMetaData.getScale() with timestamp anywhere. Do you think it&lt;br/&gt;
would be worthwhile to add tests for those two methods?&lt;/p&gt;</comment>
                            <comment id="12905483" author="knutanders" created="Thu, 2 Sep 2010 12:49:28 +0100"  >&lt;p&gt;I ran the regression tests with the patch, and these three tests failed for me in derbyall:&lt;/p&gt;

&lt;p&gt;derbyall/derbyall.fail:lang/compressTable.sql&lt;br/&gt;
derbyall/derbyall.fail:lang/specjPlans.sql&lt;br/&gt;
derbyall/derbyall.fail:lang/triggerRefClause.sql&lt;/p&gt;

&lt;p&gt;It looks like all failures were caused by ij giving more space to timestamp columns, so we just need to update the master files.&lt;/p&gt;</comment>
                            <comment id="12905509" author="nirmal" created="Thu, 2 Sep 2010 14:55:32 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Regarding your first comment, when I remove those changes earlier I got some test failures in DateTimeTest. But now I can&apos;t reproduce them. So I&apos;ll provide separate patches.&lt;br/&gt;
Thanks for pointing that out.&lt;/p&gt;</comment>
                            <comment id="12905514" author="kmarsden" created="Thu, 2 Sep 2010 15:10:34 +0100"  >&lt;p&gt;Hi Nirmal,&lt;/p&gt;

&lt;p&gt;I haven&apos;t had a chance to look at the patch, but  i know earlier you asked about specific tests  for database metadata. Traditionally one area of concern regrarding these queries has been upgrade because they are stored in the database.  Hopefully we have that worked out with the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1107&quot; title=&quot;For existing databases JDBC metadata queries do not get updated properly  between maintenance versions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1107&quot;&gt;&lt;del&gt;DERBY-1107&lt;/del&gt;&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt; I believe the upgrade tests test test metadata make sure that everything behaves properly.  But it would be interesting to do some ad hoc testing around soft upgrade, particularly with maintenance versions around your changes.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12905533" author="nirmal" created="Thu, 2 Sep 2010 16:03:32 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Regarding your second comment,&lt;/p&gt;

&lt;p&gt;1) I found that in java/engine/org/apache/derby/iapi/types/TypeId.java we use &quot;public static final int TIMESTAMP_MAXWIDTH      = DRDAConstants.DRDA_TIMESTAMP_LENGTH;	// yyyy-mm-dd hh:mm:ss.fffffffff&quot;. &lt;/p&gt;

&lt;p&gt;2) I&apos;ll look into it.&lt;/p&gt;

&lt;p&gt;3) I&apos;ll add some tests.&lt;/p&gt;

&lt;p&gt;Regarding your third comment,&lt;br/&gt;
Sorry about that I did not run derbyall previously, I&apos;ll update those tests soon, thanks for running tests Knut!&lt;/p&gt;

&lt;p&gt;Thanks again for quick reviews!&lt;/p&gt;</comment>
                            <comment id="12910546" author="nirmal" created="Fri, 17 Sep 2010 12:46:41 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ve separated the derby-4625 issue related changes from this issue, in patch #2.&lt;br/&gt;
But I couldn&apos;t find any time to look at Knut&apos;s 2) &amp;amp; 3) points in his one before last comment.&lt;br/&gt;
I&apos;ve unassigned my self from this issue since I&apos;ve to concentrate on my final year research project.&lt;/p&gt;

&lt;p&gt;Things to be done:&lt;br/&gt;
1) Run regression tests on new patch&lt;br/&gt;
2) Consider Knut&apos;s above mentioned 2nd &amp;amp; 3rd points &lt;/p&gt;

&lt;p&gt;Thanks for all the help provided on this issue!&lt;/p&gt;</comment>
                            <comment id="12913057" author="knutanders" created="Tue, 21 Sep 2010 17:11:15 +0100"  >&lt;p&gt;From the comments it sounds like the patch is not quite ready yet, so I&apos;m removing the Patch Available flag.&lt;/p&gt;</comment>
                            <comment id="12934578" author="rhillegas" created="Mon, 22 Nov 2010 20:07:43 +0000"  >&lt;p&gt;Attaching derby-4614-01-aa-warmedUp.diff. This warms up Nirmal&apos;s second patch, updating a couple more test canons for ij tests whose output changed because the width of timestamp columns has grown.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/metadata.properties&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/types/DataTypeUtilities.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/types/TypeId.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/reference/DRDAConstants.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/CoalesceTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/PrepStmtMetaDataTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/cast.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/aggbuiltin.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/implicitConversions.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/nonreserved.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/compressTable.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/orderby.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/specjPlans.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/insert.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/triggerRefClause.out&lt;br/&gt;
M      java/client/org/apache/derby/client/am/ColumnMetaData.java&lt;/p&gt;</comment>
                            <comment id="12934874" author="rhillegas" created="Tue, 23 Nov 2010 16:15:19 +0000"  >&lt;p&gt;Attaching derby-4614-01-ab-warmedUp.diff. This removes the special case in ColumnMetaData.getScale() per Knut&apos;s second recommendation on 2010-09-02. Tests ran cleanly for me.&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous version of the warmed-up patch.&lt;/p&gt;</comment>
                            <comment id="12966581" author="rhillegas" created="Fri, 3 Dec 2010 17:02:59 +0000"  >&lt;p&gt;Attaching derby-4614-01-ac-warmedUp.diff. This patch adds more tests, addressing Knut&apos;s third concern. I am running regression tests now.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/jdbc/metadata.properties&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/types/DataTypeUtilities.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/types/TypeId.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/reference/DRDAConstants.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/CoalesceTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/PrepStmtMetaDataTest.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/cast.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/aggbuiltin.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/implicitConversions.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/nonreserved.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/compressTable.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/orderby.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/specjPlans.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/insert.out&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/master/triggerRefClause.out&lt;br/&gt;
M      java/client/org/apache/derby/client/am/ColumnMetaData.java&lt;/p&gt;</comment>
                            <comment id="12966595" author="rhillegas" created="Fri, 3 Dec 2010 17:34:08 +0000"  >&lt;p&gt;Attaching a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="12966633" author="rhillegas" created="Fri, 3 Dec 2010 19:11:42 +0000"  >&lt;p&gt;Attaching a new rev of the patch, derby-4614-01-ad-warmedUp.diff. DatabaseMetaDataTest failed on the last rev when run on Java 5. The new rev fixes the reflection performed by that test when it invokes the getFunctionColumns() method. Now DatabaseMetaDataTest runs cleanly on Java 5. Re-running regression tests now.&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous patch.&lt;/p&gt;</comment>
                            <comment id="12966674" author="rhillegas" created="Fri, 3 Dec 2010 21:07:37 +0000"  >&lt;p&gt;Tests passed cleanly for me on the latest patch.&lt;/p&gt;</comment>
                            <comment id="12967165" author="knutanders" created="Mon, 6 Dec 2010 12:22:53 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;Some minor comments to the patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The @param tags in the javadoc for ParameterMetaDataJdbc30Test.dummyString() don&apos;t match the actual parameters.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The assertResults() method in DatabaseMetaDataTest appears to be reinventing JDBC.assertFullResultSet().&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The javadoc for DatabaseMetaDataTest stops in the middle of a sentence (ends with a comma), and its @throws tag misspells SQLException.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Apart from that, the patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="12967219" author="rhillegas" created="Mon, 6 Dec 2010 15:28:12 +0000"  >&lt;p&gt;Thanks for the review, Knut. Attaching derby-4614-01-ae-warmedUp.diff, which addresses most of your concerns. I did not use JDBC.assertFullResultSet because I needed trickier comparison logic to handle system-generated names. Committed at subversion revision 1042675.&lt;/p&gt;</comment>
                            <comment id="12967223" author="knutanders" created="Mon, 6 Dec 2010 15:35:44 +0000"  >&lt;p&gt;JDBC.assertFullResultSet() does have logic to handle system-generated names. Take a look at TableFunctionTest for an example.&lt;/p&gt;</comment>
                            <comment id="12967229" author="rhillegas" created="Mon, 6 Dec 2010 15:47:32 +0000"  >&lt;p&gt;Ported 1042675 from trunk to 10.7 branch at subversion revision 1042682.&lt;/p&gt;</comment>
                            <comment id="12967230" author="rhillegas" created="Mon, 6 Dec 2010 15:48:38 +0000"  >&lt;p&gt;Thanks for that information, Knut. I am declaring victory on this issue. Cheers.&lt;/p&gt;</comment>
                            <comment id="12969685" author="knutanders" created="Thu, 9 Dec 2010 10:42:47 +0000"  >&lt;p&gt;I&apos;m reopening this issue since the compatibility tests have not been able to complete in the tinderbox or in the nightly tests after the patch was checked in. They seem to hang when testing old clients against servers running trunk.&lt;/p&gt;</comment>
                            <comment id="12969689" author="knutanders" created="Thu, 9 Dec 2010 10:48:18 +0000"  >&lt;p&gt;The attached Java program (d4614_hang.java) reproduces the hang outside of the compatibility tests. Start a server running trunk and run the program with the 10.5.3.0 (or earlier) client driver, and you&apos;ll see the hang. It doesn&apos;t hang with a 10.6 client.&lt;/p&gt;</comment>
                            <comment id="12971027" author="rhillegas" created="Mon, 13 Dec 2010 20:36:59 +0000"  >&lt;p&gt;Attaching derby-4614-02-ab-compatProblem.diff. This fixes the problem case which Knut found. I will run regression tests.&lt;/p&gt;

&lt;p&gt;This patch makes the trunk client and server use 26 character timestamps if the other end of the connection does not expect nanosecond precision.&lt;/p&gt;

&lt;p&gt;I have tested Knut&apos;s problem case in the following scenarios:&lt;/p&gt;

&lt;p&gt;1) Client = trunk; server = trunk&lt;/p&gt;

&lt;p&gt;2) Client = trunk; server = 10.5&lt;/p&gt;

&lt;p&gt;3) Client = trunk; server = 10.6&lt;/p&gt;

&lt;p&gt;4) Client = 10.6; server = trunk&lt;/p&gt;

&lt;p&gt;5) Client = 10.5; server = trunk&lt;/p&gt;

&lt;p&gt;I have successfully run the compatibility tests on Java 6 using clients and servers at the following rev levels:&lt;/p&gt;

&lt;p&gt;trunk&lt;br/&gt;
10.4.2.1&lt;br/&gt;
10.6.1.0&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/reference/DRDAConstants.java&lt;/p&gt;

&lt;p&gt;Introduced a constant to represent the old 26 character timestamp length.&lt;/p&gt;

&lt;p&gt;-------------&lt;/p&gt;

&lt;p&gt;M      java/drda/org/apache/derby/impl/drda/AppRequester.java&lt;br/&gt;
M      java/client/org/apache/derby/client/am/DateTime.java&lt;/p&gt;

&lt;p&gt;Use the old length if the other side of the connection expects it.&lt;/p&gt;</comment>
                            <comment id="12971325" author="rhillegas" created="Tue, 14 Dec 2010 17:21:31 +0000"  >&lt;p&gt;Tests ran cleanly for me. Committed derby-4614-02-ab-compatProblem.diff at subversion revision 1049180.&lt;/p&gt;</comment>
                            <comment id="12971622" author="knutanders" created="Wed, 15 Dec 2010 11:01:34 +0000"  >&lt;p&gt;Thanks, Rick! The compatibility tests completed successfully in the latest run of the tinderbox, so the fix seems to have done the trick.&lt;/p&gt;</comment>
                            <comment id="12971686" author="rhillegas" created="Wed, 15 Dec 2010 14:14:35 +0000"  >&lt;p&gt;At the risk of jinxing this re-opened bug, I am going to re-close it.&lt;/p&gt;</comment>
                            <comment id="12971689" author="knutanders" created="Wed, 15 Dec 2010 14:31:43 +0000"  >&lt;p&gt;The original fix was backported to 10.7, so we probably need to backport the fix for the compatibility issue too.&lt;/p&gt;</comment>
                            <comment id="12971691" author="rhillegas" created="Wed, 15 Dec 2010 14:45:19 +0000"  >&lt;p&gt;Good point, Knut. Ported 1049180 from trunk to 10.7 branch at subversion revision 1049569.&lt;/p&gt;</comment>
                            <comment id="13000975" author="rhillegas" created="Tue, 1 Mar 2011 17:38:15 +0000"  >&lt;p&gt;Re-opening this issue, hoping that this will let me attach a revised release note.&lt;/p&gt;</comment>
                            <comment id="13000976" author="rhillegas" created="Tue, 1 Mar 2011 17:38:51 +0000"  >&lt;p&gt;Adjusted the release note.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12462639">DERBY-4626</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12368487">DERBY-2602</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12462637">DERBY-4625</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12441733" name="ASF.LICENSE.NOT.GRANTED--derby-4614-fs.html" size="9225" author="rhillegas" created="Wed, 14 Apr 2010 14:31:57 +0100"/>
                            <attachment id="12465893" name="d4614_hang.java" size="539" author="knutanders" created="Thu, 9 Dec 2010 10:48:18 +0000"/>
                            <attachment id="12460198" name="derby-4614-01-aa-warmedUp.diff" size="112793" author="rhillegas" created="Mon, 22 Nov 2010 20:07:43 +0000"/>
                            <attachment id="12460276" name="derby-4614-01-ab-warmedUp.diff" size="113078" author="rhillegas" created="Tue, 23 Nov 2010 16:15:19 +0000"/>
                            <attachment id="12465246" name="derby-4614-01-ac-warmedUp.diff" size="122805" author="rhillegas" created="Fri, 3 Dec 2010 17:02:59 +0000"/>
                            <attachment id="12465263" name="derby-4614-01-ad-warmedUp.diff" size="122797" author="rhillegas" created="Fri, 3 Dec 2010 19:11:42 +0000"/>
                            <attachment id="12465379" name="derby-4614-01-ae-warmedUp.diff" size="122610" author="rhillegas" created="Mon, 6 Dec 2010 15:28:12 +0000"/>
                            <attachment id="12466167" name="derby-4614-02-ab-compatProblem.diff" size="1882" author="rhillegas" created="Mon, 13 Dec 2010 20:36:59 +0000"/>
                            <attachment id="12453614" name="derby-4614-1.diff" size="88705" author="nirmal" created="Wed, 1 Sep 2010 20:37:34 +0100"/>
                            <attachment id="12454843" name="derby_4614-2.diff" size="86173" author="nirmal" created="Fri, 17 Sep 2010 12:34:34 +0100"/>
                            <attachment id="12472335" name="releaseNote.html" size="4823" author="rhillegas" created="Tue, 1 Mar 2011 17:38:51 +0000"/>
                            <attachment id="12465250" name="releaseNote.html" size="4700" author="rhillegas" created="Fri, 3 Dec 2010 17:34:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 29 Aug 2010 11:30:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24365</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0h1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>