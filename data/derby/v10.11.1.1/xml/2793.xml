<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:11 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2793/DERBY-2793.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2793] Ensure LIKE predicate follows correct rules for determing collation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2793</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The current code in LikeEscapeOperatorNode seems to only check that the collations are identical. That is not the correct mechanism for determing collation which is based upon SQL spec Section 9.13 &quot;Collation determination&quot; or item 12 in the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1478&quot; title=&quot;Add built in language based ordering and like processing to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1478&quot;&gt;&lt;del&gt;DERBY-1478&lt;/del&gt;&lt;/a&gt; wiki page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think it&apos;s also essential that the (somewhat complex) logic to implement collation determination is in a single method, not repeated multiple times for each collation.&lt;/p&gt;

&lt;p&gt;There is a TODO in LikeEscapeOperatorNode  that might be related to this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12371265">DERBY-2793</key>
            <summary>Ensure LIKE predicate follows correct rules for determing collation</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12369915">DERBY-2678</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="4" iconUrl="https://issues.apache.org/jira/images/icons/statuses/reopened.png" description="This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.">Reopened</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                            <label>derby_triage10_10</label>
                    </labels>
                <created>Fri, 8 Jun 2007 17:16:23 +0100</created>
                <updated>Tue, 2 Oct 2012 06:02:59 +0100</updated>
                                                                            <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12508303" author="djd" created="Tue, 26 Jun 2007 20:38:03 +0100"  >&lt;p&gt;Hopefully is a single collation determination method &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2875&quot; title=&quot;Check if collation determination logic can be consolidated in one central place rather than multiple places in the compile package&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2875&quot;&gt;DERBY-2875&lt;/a&gt; is created it will fix this issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2793&quot; title=&quot;Ensure LIKE predicate follows correct rules for determing collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2793&quot;&gt;DERBY-2793&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12510297" author="mamtas" created="Thu, 5 Jul 2007 08:04:27 +0100"  >&lt;p&gt;Checked in fix 553395 in main codeline to fix the problem. Now, LikeEscapeOperatorNode will check both collation derivation and type for equality. Will merge this change into Derby 10.3.1.1 shortly.&lt;/p&gt;</comment>
                            <comment id="12510298" author="mamtas" created="Thu, 5 Jul 2007 08:21:42 +0100"  >&lt;p&gt;Merged the change from main codeline (revision 553395) into 10.3.1.1 codeline (revision 553399).&lt;/p&gt;</comment>
                            <comment id="12510380" author="djd" created="Thu, 5 Jul 2007 16:12:20 +0100"  >&lt;p&gt;Reopened as ensuring the collation type and derivation match is not the what the SQL Standard describes.&lt;/p&gt;</comment>
                            <comment id="12510386" author="mamtas" created="Thu, 5 Jul 2007 16:28:23 +0100"  >&lt;p&gt;I had closed this bug because there is already a Jira entry &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2678&quot; title=&quot;Derby should follow SQL standards when operand(s) in the collation operation have collation derivation of NONE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2678&quot;&gt;DERBY-2678&lt;/a&gt; for incorrect comparison of collation derivation and collation type in Derby. We can keep &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2793&quot; title=&quot;Ensure LIKE predicate follows correct rules for determing collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2793&quot;&gt;DERBY-2793&lt;/a&gt; open until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2678&quot; title=&quot;Derby should follow SQL standards when operand(s) in the collation operation have collation derivation of NONE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2678&quot;&gt;DERBY-2678&lt;/a&gt; is fixed or we can close &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2793&quot; title=&quot;Ensure LIKE predicate follows correct rules for determing collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2793&quot;&gt;DERBY-2793&lt;/a&gt; and address all the places where the comparison is incorrect in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2678&quot; title=&quot;Derby should follow SQL standards when operand(s) in the collation operation have collation derivation of NONE&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2678&quot;&gt;DERBY-2678&lt;/a&gt;. I am fine either way.&lt;/p&gt;</comment>
                            <comment id="12510447" author="djd" created="Thu, 5 Jul 2007 19:35:23 +0100"  >&lt;p&gt;The description for this issue says the collation for LIKE should match the SQL standard. The latest change does not match the SQL standard, thus I don&apos;t think it should be closed. I didn&apos;t know that those other bugs existed, after reading them I think that the current collation determination is not a sub-set of the SQL standard. That is some comparisions allowed by the current code will not be allowed once collation determination correctly follows 9.13.&lt;/p&gt;

&lt;p&gt;A sub-set of the SQL standard would seem fine, as a work in progress. That is all comparisions that are allowed by Derby are also allowed by the SQL standard, but Derby may not support comparisions (throws exception at compile time) that the SQL standard supports. But I don&apos;t think that&apos;s where the code is at the moment.&lt;/p&gt;

&lt;p&gt;One case is that if the derivation is NONE for all operands of the comparision operator then the current code would seem to allow collation, but 9.13 expects a &apos;42&apos; error to be raised. Allowing a release with this may have backwards compatibility issues, SQL statements that  incorrectly worked will  fail.&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t it be simple to add a check that at least  one of the operands have the derivation IMPLICIT or EXPLICIT (in addition to the existing tests)?&lt;/p&gt;

&lt;p&gt;I also wonder if fixing the collation determination to be correct (9.13 based) will affect existing applications/databases, those with collation=UCS_BASIC. Will there be some comparisons that will (correctly) not be supported anymore?&lt;/p&gt;</comment>
                            <comment id="12510830" author="myrna" created="Sat, 7 Jul 2007 02:23:01 +0100"  >&lt;p&gt;removing fix in 10.3.1.1, it&apos;s not going to make it...&lt;/p&gt;</comment>
                            <comment id="12511296" author="mamtas" created="Tue, 10 Jul 2007 00:58:02 +0100"  >&lt;p&gt;Dan&apos;s last comment on July 5th had this question &quot;Wouldn&apos;t it be simple to add a check that at least one of the operands have the derivation IMPLICIT or EXPLICIT (in addition to the existing tests)? &quot; We have jira entry for this issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2725&quot; title=&quot;If all the operands involved in collation operation have a collation derivation of NONE, then Derby should throw an exception for that as per the SQL standards.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2725&quot;&gt;&lt;del&gt;DERBY-2725&lt;/del&gt;&lt;/a&gt; ( If all the operands involved in collation operation have a collation derivation of NONE, then Derby should throw an exception for that as per the SQL standards.) and it was fixed on July 6th. After this fix, now we have a behavior which is sub-set of the SQL standard.&lt;/p&gt;

&lt;p&gt;As for Dan&apos;s another remark &quot;I also wonder if fixing the collation determination to be correct (9.13 based) will affect existing applications/databases, those with collation=UCS_BASIC. Will there be some comparisons that will (correctly) not be supported anymore? &quot; I haven&apos;t spent enough time to be able to visualize a problem with existing applications/databases. Dan, do you have some examples in mind which shows how the existing application might get impacted? The only way one can run into colllation derivation of NONE is if character string types of different collation types are involved in operations like CONCAT, COALESCE, NULLIF etc. But since existing applications/databases will all always have the same collation type which is UCS_BASIC, at this point, I can&apos;t see how they might get affected?&lt;/p&gt;</comment>
                            <comment id="12511299" author="djd" created="Tue, 10 Jul 2007 01:20:01 +0100"  >&lt;p&gt;I don&apos;t understand what was fixed for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2725&quot; title=&quot;If all the operands involved in collation operation have a collation derivation of NONE, then Derby should throw an exception for that as per the SQL standards.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2725&quot;&gt;&lt;del&gt;DERBY-2725&lt;/del&gt;&lt;/a&gt; for LIKE. LikeEscapeNode line 342 still has the incorrect collation determination.&lt;/p&gt;

&lt;p&gt;I have no examples in mind for backwards compatibilty issues with UCS_BASIC, just wondering if it had been thought about ...&lt;/p&gt;</comment>
                            <comment id="12516796" author="mamtas" created="Tue, 31 Jul 2007 21:30:25 +0100"  >&lt;p&gt;Checked in a fix for this jira entry so that all collation comparison is done in one place. The revision in main with this fix is 561494. Will migrate it to 10.3 very soon. Commit comments are as follows&lt;/p&gt;

&lt;p&gt;Collation comparison algorithm for LIKE is incorrect. Rather than duplicating the code in 2 places, I am including a genric method in DataTypeDescriptor which can be called whenever needed.&lt;/p&gt;</comment>
                            <comment id="12516800" author="mamtas" created="Tue, 31 Jul 2007 21:51:27 +0100"  >&lt;p&gt;Made another svn change to add comment to the new method in DTD. The change went in as 561514&lt;/p&gt;</comment>
                            <comment id="12516801" author="mamtas" created="Tue, 31 Jul 2007 21:53:30 +0100"  >&lt;p&gt;Migated changes from main into 10.3 codeline using revision 561518.&lt;/p&gt;</comment>
                            <comment id="12516872" author="mamtas" created="Wed, 1 Aug 2007 06:45:01 +0100"  >&lt;p&gt;Clarified the comments some more (revision 561668 in main) for the method added in DTD as part of revision 561494. The commit comments for this most recent checkin is as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2793&quot; title=&quot;Ensure LIKE predicate follows correct rules for determing collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2793&quot;&gt;DERBY-2793&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another commit for comments involved with DTD.compareCollationInfo method. Derby&apos;s behavior is a subset of SQL standard when it comes to comparability rules involving collation derivation of IMPLICIT and collation derivation of NONE. The additional comments for the method explains that.&lt;/p&gt;</comment>
                            <comment id="12516873" author="mamtas" created="Wed, 1 Aug 2007 06:48:00 +0100"  >&lt;p&gt;Migrated comment changes from main into 10.3 codeline with revision 561669.&lt;/p&gt;</comment>
                            <comment id="12582541" author="dyret" created="Thu, 27 Mar 2008 08:23:26 +0000"  >&lt;p&gt;This issue is targeted for 10.4, but has not been updated in 2008. Should the fix-version be changed/removed?&lt;/p&gt;</comment>
                            <comment id="12583997" author="mamtas" created="Tue, 1 Apr 2008 05:47:56 +0100"  >&lt;p&gt;No current plans to fix it in 10.4 so I am marking fix in as unknown. I am not sure if we have been marking jira entries with no specific fix plan as unknown or next release (which in this case I guess would mean 10.5).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12372459">DERBY-2875</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 Jul 2007 07:04:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30600</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy08fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35184</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>