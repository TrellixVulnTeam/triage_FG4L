<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5469/DERBY-5469.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5469] Make it possible to build Derby if you are on Mac OS X and your JDK is JDK 7</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5469</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12527490">DERBY-5469</key>
            <summary>Make it possible to build Derby if you are on Mac OS X and your JDK is JDK 7</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Oct 2011 21:03:24 +0100</created>
                <updated>Fri, 14 Jun 2013 18:20:58 +0100</updated>
                            <resolved>Tue, 8 Nov 2011 13:33:44 +0000</resolved>
                                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Build tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13129476" author="kristwaa" created="Tue, 18 Oct 2011 05:26:35 +0100"  >&lt;p&gt;Apple pulled some tricks regarding the various JDK versions installed on Mac OS X, where older versions simply pointed at the latest version.&lt;br/&gt;
Is that the case with the JDK 1.7 preview too?&lt;br/&gt;
Can someone build with &quot;ant -DprintCompilerPropertiesVerbose=true&quot; and post the relevant output?&lt;/p&gt;</comment>
                            <comment id="13129691" author="rhillegas" created="Tue, 18 Oct 2011 13:39:23 +0100"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;Up until recently, I was on a machine running Mac OS X 10.5. On that machine I had separate JDKs for 1.3, 1.4, 1.5, and a beta version of 1.6. A couple weeks ago I upgraded to Mac OS X 10.6. This clobbered the old JDKs and left me in the situation which you describe: I only had JDK 1.6; the older JDKs were just symlinks to JDK 1.6. Over the past several years, Apple has been getting out of the business of making JDKs. It seems that Apple didn&apos;t have the resources to make sure that older JDKs still ran on new revs of Mac OS X. Apple has donated its JDK implementation to the Open JDK effort and an open source community is now responsible for producing future revs of the JDK for Mac OS X.&lt;/p&gt;

&lt;p&gt;My machine stopped booting this weekend (it goes into the shop this afternoon). Now I&apos;m using a new machine which runs Mac OS X 10.7. Here the situation is similar to Mac OS X 10.6: the machine came installed with just JDK 1.6; JDKs 1.4 and 1.5 are just symlinks to JDK 1.6. Here&apos;s the result of running &quot;ls -l&quot; on the directory of JDK versions:&lt;/p&gt;

&lt;p&gt;lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.4 -&amp;gt; CurrentJDK&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.4.2 -&amp;gt; CurrentJDK&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.5 -&amp;gt; CurrentJDK&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.5.0 -&amp;gt; CurrentJDK&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.6 -&amp;gt; CurrentJDK&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   10 Oct 16 18:30 1.6.0 -&amp;gt; CurrentJDK&lt;br/&gt;
drwxr-xr-x  8 root  wheel  272 Oct 16 18:30 A&lt;br/&gt;
lrwxr-xr-x  1 root  wheel    1 Oct 16 18:30 Current -&amp;gt; A&lt;br/&gt;
lrwxr-xr-x  1 root  wheel   59 Oct 16 18:30 CurrentJDK -&amp;gt; /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&lt;/p&gt;

&lt;p&gt;I have also installed the preview release of Open JDK 1.7. That lives in another directory tree.&lt;/p&gt;

&lt;p&gt;I don&apos;t know what the situation is going to be now that the Apple port is being driven by Open JDK. I will see if I can get some information. Here is the result of starting a build under JDK 1.6 with printCompilerProperties set to true:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerPropsAlreadySet = $&lt;/p&gt;
{compilerPropsAlreadySet}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.6&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = /Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/btclasses.zip:/Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/basis.jar:/Users/rh161140/sw/jsr169Support/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = $&lt;/p&gt;
{j14lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = ${java14compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = ${j15lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = ${java15compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j16lib = ${j16lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = ${java16compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerPropsAlreadySet = true&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerLevel16 = 1.6&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  jsr169compile.classpath = /Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/btclasses.zip:/Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/basis.jar:/Users/rh161140/sw/jsr169Support/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j14lib = ${j14lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java14compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jdbc3:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j15lib = $&lt;/p&gt;
{j15lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java15compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jdbc3:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j16lib = $&lt;/p&gt;
{jdk16}
&lt;p&gt;/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java16compile.classpath = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13129703" author="kristwaa" created="Tue, 18 Oct 2011 14:01:23 +0100"  >&lt;p&gt;Thanks, Rick.&lt;/p&gt;

&lt;p&gt;Do you think you can run with -DprintCompilerPropertiesVerbose=true as well? Note &apos;Verbose&apos; at the end of that property name. I&apos;m interested in the output that says stuff about candidate JDKs and about selecting a JDK for each level.&lt;/p&gt;</comment>
                            <comment id="13129708" author="rhillegas" created="Tue, 18 Oct 2011 14:08:27 +0100"  >&lt;p&gt;Hi Kristian,&lt;/p&gt;

&lt;p&gt;Here are the build diagnostics when I set printCompilerPropertiesVerbose=true and don&apos;t set the -quiet flag:&lt;/p&gt;

&lt;p&gt;printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerPropsAlreadySet = $&lt;/p&gt;
{compilerPropsAlreadySet}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.6&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = /Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/btclasses.zip:/Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/basis.jar:/Users/rh161140/sw/jsr169Support/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = $&lt;/p&gt;
{j14lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = ${java14compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = ${j15lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = ${java15compile.classpath}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j16lib = ${j16lib}&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = ${java16compile.classpath}&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; jdkParent derived from &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home&apos;: &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; PropertySetter environment =&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.vendor = Apple Inc.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.home = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.version = 1.6.0_26&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; os.name = Mac OS X&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j14lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j15lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j16lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; jdkSearchPath = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; jdkParent derived from &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home&apos;: &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Locating Apple JDKs:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; locating JDKs in &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; candidate &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&apos; -&amp;gt; &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; checking root &apos;/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; found JDK: vendor=Apple Computer, Inc., specVersion=1.6, implVersion=1.6.0_26, path=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; located 1 JDKs in total&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Selecting JDK candidates:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; INFO: No valid JDK with specification version &apos;1.4&apos; found&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; INFO: No valid JDK with specification version &apos;1.5&apos; found&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Candidate JDK for specification version 1.6 (vendor Apple Inc.): vendor=Apple Computer, Inc., specVersion=1.6, implVersion=1.6.0_26, path=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Setting property java16compile.classpath to /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;br/&gt;
&lt;br/&gt;
printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerPropsAlreadySet = true&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  compilerLevel16 = 1.6&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  jsr169compile.classpath = /Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/btclasses.zip:/Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/basis.jar:/Users/rh161140/sw/jsr169Support/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j14lib = ${j14lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java14compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jdbc3:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j15lib = $&lt;/p&gt;
{j15lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java15compile.classpath = /Users/rh161140/derby/mainline/trunk/classes/stubs/jdbc3:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  j16lib = $&lt;/p&gt;
{jdk16}
&lt;p&gt;/jre/lib&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; After setting properties:  java16compile.classpath = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-rt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/alt-string.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/dt.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jconsole.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/management-agent.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13129726" author="rhillegas" created="Tue, 18 Oct 2011 14:27:18 +0100"  >&lt;p&gt;Here is the build output with the printCompiler properties set, running from a shell window in which JAVA_HOME points at the jdk 7 preview:&lt;/p&gt;

&lt;p&gt;printCompilerProperties:&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerPropsAlreadySet = $&lt;/p&gt;
{compilerPropsAlreadySet}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  compilerLevel16 = 1.6&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  jsr169compile.classpath = /Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/btclasses.zip:/Users/rh161140/sw/phoneME/phoneme_advanced_mr2/lib/basis.jar:/Users/rh161140/sw/jsr169Support/jdbc.jar&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j14lib = $&lt;/p&gt;
{j14lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java14compile.classpath = $&lt;/p&gt;
{java14compile.classpath}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j15lib = $&lt;/p&gt;
{j15lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java15compile.classpath = $&lt;/p&gt;
{java15compile.classpath}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  j16lib = $&lt;/p&gt;
{j16lib}
&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Before setting properties:  java16compile.classpath = $&lt;/p&gt;
{java16compile.classpath}
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; jdkParent derived from &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/jre&apos;: &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; PropertySetter environment =&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.vendor = Oracle Corporation&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.home = /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/jre&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; java.version = 1.7.0-ea&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; os.name = Mac OS X&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j14lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j15lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; j16lib = null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; jdkSearchPath = /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; jdkParent derived from &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/jre&apos;: &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Locating Apple JDKs:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; locating JDKs in &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; candidate &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home&apos; -&amp;gt; &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; candidate &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/MacOS&apos; -&amp;gt; &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/MacOS&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; checking root &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Missing JDK directory: /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/Classes&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; checking root &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/MacOS&apos;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Missing JDK directory: /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/MacOS/Classes&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; located 0 JDKs in total&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; Selecting JDK candidates:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; No candidate JDKs (version &apos;1.4&apos;)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; No candidate JDKs (version &apos;1.5&apos;)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; No candidate JDKs (version &apos;1.6&apos;)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;setJdkProperties&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;verbose&amp;#93;&lt;/span&gt; jdkParent derived from &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/jre&apos;: &apos;/Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&apos;&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;br/&gt;
/Users/rh161140/derby/mainline/trunk/build.xml:278: Don&apos;t know how to set java15compile.classpath, java16compile.classpath using this environment:&lt;/p&gt;

&lt;p&gt;java.vendor = Oracle Corporation&lt;br/&gt;
java.home = /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents/Home/jre&lt;br/&gt;
java.version = 1.7.0-ea&lt;br/&gt;
os.name = Mac OS X&lt;br/&gt;
j14lib = null&lt;br/&gt;
j15lib = null&lt;br/&gt;
j16lib = null&lt;br/&gt;
jdkSearchPath = /Library/Java/JavaVirtualMachines/JDK 1.7.0 Developer Preview.jdk/Contents&lt;/p&gt;

&lt;p&gt;Please consult BUILDING.html for instructions on how to set the compiler-classpath properties.&lt;/p&gt;</comment>
                            <comment id="13130636" author="rhillegas" created="Wed, 19 Oct 2011 14:54:53 +0100"  >&lt;p&gt;Attaching derby-5469-01-ae-add17andJavadoc.diff. This patch makes it possible for me to build Derby and the javadoc using the open jdk 7 preview for mac os x. I am running regression tests against Derby jars built by this jdk in order to verify that the resulting jar files run correctly on Java 6.&lt;/p&gt;

&lt;p&gt;I would appreciate it if other developers could test-drive this patch on Windows, Solaris, and Linux. I&apos;m hoping that the patch allows us to use jdk 7 on those platforms too, but some more tuning may be necessary. I would appreciate it if the following tests could be run:&lt;/p&gt;

&lt;p&gt;a) Build Derby on JDK 6&lt;/p&gt;

&lt;p&gt;b) Build javadoc on JDK 6&lt;/p&gt;

&lt;p&gt;c) Build Derby on JDK 7&lt;/p&gt;

&lt;p&gt;d) Build javadoc on JDK 7&lt;/p&gt;

&lt;p&gt;This patch makes the following changes to PropertySetter:&lt;/p&gt;

&lt;p&gt;P1) Refactors the code to make it more table-driven and eliminate duplicated code. These changes center around the addition of a new inner class, JDKVersion. That class encapsulates the information needed to set the classpath variable for a JDK level.&lt;/p&gt;

&lt;p&gt;P2) Adds JDK 7 to the table of JDKVersions.&lt;/p&gt;

&lt;p&gt;P3) Comments out the check which rejected early access releases. We may want to uncomment this later on. For the moment, however, I see more value than harm in allowing testing against early access JDKs.&lt;/p&gt;

&lt;p&gt;P4) Adds additional logic to handle the inspection of open jdk 7 on mac os x.&lt;/p&gt;

&lt;p&gt;P5) Expands the list of VMs which are sufficient to build Derby. Previously, you had to have JDK 5 or JDK 6. Now JDK 7 is sufficient to build Derby.&lt;/p&gt;

&lt;p&gt;The patch makes the following changes to the master build script:&lt;/p&gt;

&lt;p&gt;B1) Adds a new java17compile.classpath variable. This variable will be set by PropertySetter if that task finds a valid jdk 7 installation on the machine.&lt;/p&gt;

&lt;p&gt;B2) If java16compile.classpath is not set, then set it to be java15compile.classpath along with the JDBC4 stubs, as was done previously. However, if java15compile.classpath is also not set, then java16compile.classpath is set to be java17compile.classpath.&lt;/p&gt;

&lt;p&gt;B3) If java17compile.classpath is not set, then it is forced to be java16compile.classpath. Note that java17compile.classpath is not currently used by the build--but someday it may be.&lt;/p&gt;

&lt;p&gt;B4) Increases the memory given to the javadoc tasks. Java 7 changed the javadoc format. The Java 7 javadoc program needs more memory--at least on mac os x it does.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/build/org/apache/derbyPreBuild/PropertySetter.java&lt;br/&gt;
M       build.xml&lt;/p&gt;</comment>
                            <comment id="13130732" author="knutanders" created="Wed, 19 Oct 2011 17:22:57 +0100"  >&lt;p&gt;The patch seems to do the right thing in my environment.&lt;/p&gt;

&lt;p&gt;One small anomaly:&lt;/p&gt;

&lt;p&gt;When building with JDK 5, and both JDK 6 and JDK 7 are found by PropertySetter, java16compile.classpath will be based on JDK 5, whereas java17compile.classpath will be based on JDK 7. But since we don&apos;t use java17compile.classpath when compiling yet, that&apos;s not a problem for now.&lt;/p&gt;</comment>
                            <comment id="13130737" author="rhillegas" created="Wed, 19 Oct 2011 17:30:56 +0100"  >&lt;p&gt;Tests passed cleanly for me on Java 6 running against Derby jars built using the open jdk 7 mac os x preview.&lt;/p&gt;</comment>
                            <comment id="13130739" author="rhillegas" created="Wed, 19 Oct 2011 17:32:42 +0100"  >&lt;p&gt;Thanks, Knut. Hm, that&apos;s odd. Without the patch, if you build with JDK 5 (and both JDK 6 and JDK 7 are present), what is java16compile.classpath based on? Thanks.&lt;/p&gt;</comment>
                            <comment id="13130817" author="knutanders" created="Wed, 19 Oct 2011 18:52:25 +0100"  >&lt;p&gt;java16compile.classpath is based on JDK 5 without the patch too (which is the correct behaviour, since the JDK 5 compiler might not understand classes in a newer format). What I meant to point out, was that if we start using java17compile.classpath to build parts of the code, and we still want to support building with JDK 5 or JDK 6, we need to add logic to construct java17compile.classpath from the lower version JDKs. But that logic isn&apos;t needed for now, so I think the patch is fine.&lt;/p&gt;</comment>
                            <comment id="13130905" author="rhillegas" created="Wed, 19 Oct 2011 20:30:28 +0100"  >&lt;p&gt;Thanks for pointing that out, Knut. Does the following make sense:&lt;/p&gt;

&lt;p&gt;1) The compiler must support generics (this we already enforce).&lt;/p&gt;

&lt;p&gt;2) The java$&lt;/p&gt;
{version}compiler.classpath and j{version}
&lt;p&gt;lib variables should not be set (either by the user or by PropertySetter) if $&lt;/p&gt;
{version}
&lt;p&gt; is greater than the compiler version.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13130934" author="knutanders" created="Wed, 19 Oct 2011 21:02:04 +0100"  >&lt;p&gt;That sounds right. Note that since we support building with JDK 5, even the code that&apos;s only ever supposed to run on Java 6 and newer is restricted to the Java 5 subset of the language and libraries (unless we use reflection).&lt;/p&gt;</comment>
                            <comment id="13131848" author="rhillegas" created="Thu, 20 Oct 2011 19:03:51 +0100"  >&lt;p&gt;Attaching derby-5469-01-af-dontSetUprevVariables.diff. This improves the previous version of the patch by not setting the java$&lt;/p&gt;
{version}compile.classpath variable for ${version}
&lt;p&gt; greater than the compiler version. This patch flunks the build if the user has set java$&lt;/p&gt;
{version}compile.classpath or j${version}
&lt;p&gt;lib while trying to run with a compiler whose rev level is less than $&lt;/p&gt;
{version}
&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Knut, could you test-drive the new version of the patch and verify whether it fixes the problem you saw?&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous rev of the patch.&lt;/p&gt;</comment>
                            <comment id="13132607" author="knutanders" created="Fri, 21 Oct 2011 12:45:33 +0100"  >&lt;p&gt;Thanks, Rick. The results look good now. With the 01-af patch, I see this when all JDK versions are found by PropertySetter:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Building with Java 5, java17compile.classpath is based on Java 5 + JDBC 4 stubs&lt;/li&gt;
	&lt;li&gt;Building with Java 6, java17compile.classpath is based on Java 6&lt;/li&gt;
	&lt;li&gt;Building with Java 7, java17compile.classpath is based on Java 7&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13132617" author="rhillegas" created="Fri, 21 Oct 2011 13:17:37 +0100"  >&lt;p&gt;Thanks, Knut. I think you were testing on Solaris?&lt;/p&gt;

&lt;p&gt;Still need a volunteer to test-drive the patch on Windows. I may be able to cover Ubuntu soon--am recovering my virtual machines now. Thanks.&lt;/p&gt;</comment>
                            <comment id="13132627" author="knutanders" created="Fri, 21 Oct 2011 13:52:57 +0100"  >&lt;p&gt;That&apos;s right. I tested the patch on Solaris.&lt;/p&gt;</comment>
                            <comment id="13133840" author="dagw" created="Mon, 24 Oct 2011 06:52:39 +0100"  >&lt;p&gt;I built ok on Windows Vista/Cygwin with JDK 5,6, and 7.  For some reason, the JDK 7 build is much slower than the JDK 6 build: ca 5 vs ca 3 m (two attempts at each, interleaved). No clue why yet. &lt;/p&gt;</comment>
                            <comment id="13133870" author="knutanders" created="Mon, 24 Oct 2011 08:34:14 +0100"  >&lt;p&gt;I see similar differences on Solaris. &quot;ant -q all&quot; takes ~40 s when JAVA_HOME points to JDK 6, and ~65 s when it points to JDK 7. I also see this when running without the patch, so I don&apos;t think there&apos;s a problem with the patch.&lt;/p&gt;

&lt;p&gt;Another observation: If I remove the source=&quot;...&quot; and target=&quot;...&quot; attributes from all the javac targets in the build files, the JDK 7 build runs as fast as the JDK 6 build. Perhaps javac in JDK 7 is less optimized for compiling classes with source and target level 1.4.&lt;/p&gt;</comment>
                            <comment id="13133940" author="kristwaa" created="Mon, 24 Oct 2011 10:47:50 +0100"  >&lt;p&gt;I tested the patch on Windows Vista, and it works fine for me. Note that ant uses JAVA_HOME to decide which version of Java is used to invoke ant, so one has to either unset it or point it at the Java version one wants to use.&lt;/p&gt;

&lt;p&gt;Javadocs built with both JDK 6 and 7.&lt;/p&gt;

&lt;p&gt;A few comments on the changes in PropertySetter:&lt;br/&gt;
 o 141: JAVA_5 is unused.&lt;br/&gt;
 o 578: currentJDK is unused&lt;br/&gt;
 o 1302: printProperty is unused (used for debugging?)&lt;br/&gt;
 o 1525: requireProperty is unused&lt;/p&gt;

&lt;p&gt;It would maybe be good to comment on the structure and methods of JDKVersion.&lt;br/&gt;
The variables &apos;baseJavaVersion&apos;, &apos;oracleName&apos;, &apos;ibmBaseName&apos;, and &apos;ibmLatestName&apos; are not immediately self-explaining to me. For instance, why are both &apos;baseJavaVersion&apos; and &apos;oracleName&apos; needed? What&apos;s the difference between &apos;ibmBaseName&apos; and &apos;ibmLatestName&apos;?  It&apos;s also not clear to me if name is another word for version, or if name is something else. Is &apos;baseJavaVersion&apos; the specification version of the JDK/JRE?&lt;/p&gt;</comment>
                            <comment id="13134169" author="rhillegas" created="Mon, 24 Oct 2011 16:47:27 +0100"  >&lt;p&gt;Thanks for test-driving the patch, Dag, Knut, and Kristian. Some responses to Kristian&apos;s comments:&lt;/p&gt;

&lt;p&gt; o 141: JAVA_5 is unused.&lt;br/&gt;
 o 578: currentJDK is unused&lt;/p&gt;

&lt;p&gt;Thanks, I will remove these.&lt;/p&gt;

&lt;p&gt; o 1302: printProperty is unused (used for debugging?)&lt;br/&gt;
 o 1525: requireProperty is unused&lt;/p&gt;

&lt;p&gt;These two methods are also unused without my patch. I think that requireProperty() is cruft which I can remove. The printProperty() method may be useful for debugging purposes so I propose to leave it alone.&lt;/p&gt;

&lt;p&gt;I agree that the state and methods of JDKVersion need better names and comments. I will attempt to address this issue in the next rev of the patch. Thanks.&lt;/p&gt;</comment>
                            <comment id="13134175" author="rhillegas" created="Mon, 24 Oct 2011 16:52:02 +0100"  >&lt;p&gt;Attaching derby-5469-01-ag-cleanedUp.diff. This patch removes some unused cruft. It also renames and adds comments to fields and methods in JDKVersion.&lt;/p&gt;

&lt;p&gt;Touches the same files as the previous patch.&lt;/p&gt;</comment>
                            <comment id="13135013" author="rhillegas" created="Tue, 25 Oct 2011 14:09:31 +0100"  >&lt;p&gt;My virtualized Ubuntu appliance seems to be working again. I have tested the patch on Ubuntu using Oracle JDKs, and the patch seems to do the right thing there too. I did not notice a big difference between the build times on JDK 6 and JDK 7 on Ubuntu. Using the JDK 6 compiler the build took 2 minutes and 21 seconds. It took just 9 seconds longer using the JDK 7 compiler.&lt;/p&gt;</comment>
                            <comment id="13135067" author="kristwaa" created="Tue, 25 Oct 2011 14:53:08 +0100"  >&lt;p&gt;Thanks for the updated patch, Rick.&lt;/p&gt;

&lt;p&gt;Unfortunately, the comments for the names/seeds are now inaccurate, as the values aren&apos;t used as directory name seeds by the setForXXXJARInspection methods. The way I understand it, the seed is used as a directory name seed with the directory-based algorithm, and as a specification version seed with the JAR-inspection-based algorithm. This is only relevant for the variables &apos;_oracleDirectoryNameSeed&apos; and &apos;_ibmDirectoryNameSeed&apos;. &apos;_ibmDirectoryNameSeedWithoutPeriod&apos; is only used by the directory-based algorithm and is correct as it stands.&lt;br/&gt;
Not sure what to suggest, besides from either making these two names less specific again or creating two methods with different names returning the same value...&lt;/p&gt;

&lt;p&gt;Maybe it&apos;s not so important either, I&apos;ll let you decide.&lt;/p&gt;

&lt;p&gt;There&apos;s no comment about the tool setting &apos;java17compile.classpath&apos;. Is that correct, or just an omission?&lt;/p&gt;</comment>
                            <comment id="13135074" author="rhillegas" created="Tue, 25 Oct 2011 15:08:22 +0100"  >&lt;p&gt;Thanks for the review, Kristian. I have added a comment about setting java17compile.classpath. That will turn up in the next rev of the patch.&lt;/p&gt;

&lt;p&gt;The seeds are used by the setForMostJDKsJARInspection() and setForMostJDKs() methods. Could you suggest some more extensive header comments for those methods? I can add those to the next rev. More extensive comments for those methods will help us wordsmith the names and comments on the JDKVersion methods. Thanks.&lt;/p&gt;</comment>
                            <comment id="13135075" author="rhillegas" created="Tue, 25 Oct 2011 15:09:09 +0100"  >&lt;p&gt;I have downloaded an IBM JDK 7 for Linux. The build does not work with it. Stand by...&lt;/p&gt;</comment>
                            <comment id="13135146" author="rhillegas" created="Tue, 25 Oct 2011 16:30:38 +0100"  >&lt;p&gt;When I back out the patch and remove the IBM JDK 7 from my Ubuntu appliance (leaving only the IBM JDK 6), the build fails early on. The build is unable to find a JDK to build against. Might be an environmental problem in my Linux appliance. Might be that we have never tested the build against IBM JDKs on Linux. In any event, I think that fixing the build in this environment falls outside the scope of this JIRA.&lt;/p&gt;

&lt;p&gt;Have we tested the build against IBM JDKs on Linux?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13135189" author="kmarsden" created="Tue, 25 Oct 2011 17:10:32 +0100"  >&lt;p&gt;I know there are nightly builds on linux with JDK 1.6, but I think with &lt;br/&gt;
the following local.properties:&lt;/p&gt;

&lt;p&gt;j16lib=/local1/cloudtst/dev/src/ibm16/jre/lib&lt;br/&gt;
j15lib=/local1/cloudtst/dev/src/ibm15/jre/lib&lt;br/&gt;
j14lib=/local1/cloudtst/dev/src/ibm142/jre/lib&lt;br/&gt;
jdk16=/local1/cloudtst/dev/src/ibm16&lt;br/&gt;
java14compile.classpath=$&lt;/p&gt;
{j14lib}/core.jar;${j14lib}
&lt;p&gt;/server.jar;$&lt;/p&gt;
{j14lib}/xml.jar;${j14lib}
&lt;p&gt;/ibmjcefw.jar;$&lt;/p&gt;
{j14lib}
&lt;p&gt;/security.jar&lt;br/&gt;
java15compile.classpath=$&lt;/p&gt;
{j15lib}/core.jar;${j15lib}
&lt;p&gt;/server.jar;$&lt;/p&gt;
{j15lib}/xml.jar;${j15lib}
&lt;p&gt;/ibmjcefw.jar;$&lt;/p&gt;
{j15lib}/security.jar;${j15lib}
&lt;p&gt;/vm.jar&lt;br/&gt;
java16compile.classpath=$&lt;/p&gt;
{j16lib}/sql.jar;${j16lib}
&lt;p&gt;/xml.jar;$&lt;/p&gt;
{j16lib}/ibmjcefw.jar;${j16lib}
&lt;p&gt;/rt.jar;$&lt;/p&gt;
{j16lib}/vm.jar;${j16lib}
&lt;p&gt;/security.jar;$&lt;/p&gt;
{j16lib}/&lt;br/&gt;
java.util.jar;${j16lib}
&lt;p&gt;/jndi.jar;$&lt;/p&gt;
{j16lib}/logging.jar;${j16lib}
&lt;p&gt;/jlm.jar;$&lt;/p&gt;
{j16lib}
&lt;p&gt;/annotation.jar&lt;br/&gt;
junit=/local1/cloudtst/dev/src/junit/junit.jar&lt;br/&gt;
proceed=true&lt;br/&gt;
sane=false&lt;/p&gt;

&lt;p&gt;I have built on linux in the past with JDK 1.6 as well, but have always &lt;br/&gt;
set the various compile.classpath properties.&lt;/p&gt;


</comment>
                            <comment id="13135307" author="rhillegas" created="Tue, 25 Oct 2011 19:24:17 +0100"  >&lt;p&gt;Thanks, Kathey. I believe I have made some headway in understanding how the IBM JDK 7 for Linux is confusing the Derby build. The PropertySetter task is looking inside the rt.jar of the IBM JDK 7 in order to read the jar manifest and figure out what kind of JDK this is. Unfortunately, the manifest for that jar file looks wrong. Here it is:&lt;/p&gt;

&lt;p&gt;Manifest-Version: 1.0&lt;br/&gt;
Ant-Version: Apache Ant 1.7.1&lt;br/&gt;
Created-By: 2.4 (IBM Corporation)&lt;br/&gt;
Build-Level: $HeadURL$@$Rev$,2011-08-27 07:16:30.694&lt;br/&gt;
Implementation-Version: 6.0&lt;/p&gt;

&lt;p&gt;The manifest says that the JDK is Java 6 rather than Java 7 and the manifest is missing the Implementation-Vendor and Specification-Version attributes. For comparison, here is the manifest from the rt.jar for IBM JDK 6 for Linux:&lt;/p&gt;

&lt;p&gt;Manifest-Version: 1.0&lt;br/&gt;
Ant-Version: Apache Ant 1.6.5&lt;br/&gt;
Created-By: 2.3 (IBM Corporation)&lt;br/&gt;
Specification-Title: Java Platform API Specification&lt;br/&gt;
Implementation-Title: Java Runtime Environment&lt;br/&gt;
Specification-Version: 1.6.0&lt;br/&gt;
Specification-Vendor: Sun Microsystems, Inc.&lt;br/&gt;
Implementation-Version: 1.6.0&lt;br/&gt;
Implementation-Vendor: IBM Corporation&lt;/p&gt;

&lt;p&gt;It is possible that the same problem may be found in the jar files for IBM JDK 7 for other platforms. For the time being, this may prevent us from using those JDKs to build Derby.&lt;/p&gt;

&lt;p&gt;Could someone at IBM bring this to the attention of the IBM JDK team? Thanks.&lt;/p&gt;</comment>
                            <comment id="13135333" author="kmarsden" created="Tue, 25 Oct 2011 19:57:53 +0100"  >&lt;p&gt;Thanks Rick,&lt;/p&gt;

&lt;p&gt;I will report it.  I wonder, is their a reason we use the manifest entries instead of the system properties &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;  to determine this information?&lt;/p&gt;

&lt;p&gt;Are the values in the manifest a documented standard or convention?&lt;/p&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/System.html#getProperties(&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/6/docs/api/java/lang/System.html#getProperties(&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13135343" author="rhillegas" created="Tue, 25 Oct 2011 20:18:52 +0100"  >&lt;p&gt;Thanks, Kathey. The PropertySetter task does look at system properties. However, where it&apos;s falling down is in the part of its processing where it looks around the directory system to find other JDKs. It does this so that it can find libraries for lower versions of the JDK. In particular, it wants to find a 1.4 JDK if it can so that it can use those libraries when compiling the bulk of Derby code. Being able to use those libraries means that the compiler can object if someone tries to call a Java 6 method in code which is supposed to run on small devices.&lt;/p&gt;

&lt;p&gt;It&apos;s a very tricky piece of logic and I am beginning to fear that the number of special cases may be expanding faster than we can keep up with them.&lt;/p&gt;

&lt;p&gt;Standard attributes in the jar manifest are documented here: &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/guide/jar/jar.html#Manifest%20Specification&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.4.2/docs/guide/jar/jar.html#Manifest%20Specification&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13135388" author="kristwaa" created="Tue, 25 Oct 2011 21:15:53 +0100"  >&lt;p&gt;Kathey wrote:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I wonder, is their a reason we use the manifest entries instead of the system properties &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; to determine this information? &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Yes, spawning a process for each of the candidate VMs to extract the system properties is taking much longer. This will surely annoy some developers.&lt;/p&gt;

&lt;p&gt;Both the mechanisms we are using to determine the version (&quot;encoded&quot; in the directory name, and inspecting JAR files manifest) have weaknesses. As Rick suggests, we should consider a simplified build process and leave the more complex configurations to be manually configured by those who want/have to run with them.&lt;/p&gt;

&lt;p&gt;I believe the reason why the PropertySetter was created was to allow casual developers and newcomers to Derby to get started quickly. Today the minimal requirement for a build is probably one JDK, and that should be the VM used to invoke ant.&lt;/p&gt;</comment>
                            <comment id="13135399" author="knutanders" created="Tue, 25 Oct 2011 21:26:42 +0100"  >&lt;p&gt;I agree that PropertySetter is starting to get too complex. In my opinion, it would be sufficient if PropertySetter were able to detect which Java version Ant is running (which can be done by inspecting system properties, no need to parse rt.jar) and set up the various compile classpaths based on that Java instance. This would still allow easy building of Derby, which was the goal when PropertySetter was introduced. If someone wants a more exotic setup (like pointing java14compile.classpath to actual Java 1.4 runtime libraries), they should be able to override the compile classpaths with properties the same way as today, but PropertySetter doesn&apos;t need to do that automatically.&lt;/p&gt;

&lt;p&gt;Although it might be possible to make PropertySetter detect all old Java versions from all vendors on all platforms, and to keep it updated, I&apos;d much rather spend my time writing database code than maintaining PropertySetter... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13135408" author="kmarsden" created="Tue, 25 Oct 2011 21:40:44 +0100"  >&lt;p&gt;I tried the build with the patch on IBM 1.6 with my setup on Windows with the local.properties below:&lt;/p&gt;

&lt;p&gt;jdk14=C:/cygwin/ibmsvn/ntsoftware/ibm142&lt;br/&gt;
j14lib=$&lt;/p&gt;
{jdk14}
&lt;p&gt;/jre/lib&lt;br/&gt;
jdk15=C:/cygwin/ibmsvn/ntsoftware/ibm15&lt;br/&gt;
j15lib=$&lt;/p&gt;
{jdk15}
&lt;p&gt;/jre/lib&lt;br/&gt;
jdk16=C:/cygwin/ibmsvn/ntsoftware/ibm16&lt;br/&gt;
j16lib=$&lt;/p&gt;
{jdk16}
&lt;p&gt;/jre/lib&lt;br/&gt;
sane=true&lt;br/&gt;
sanity=true&lt;/p&gt;

&lt;p&gt;and with a similar local.properties tp the one I posted before (just paths changed) on Linux, and the IBM 1.6 build seems to be working fine.  I will log a bug for the IBM 1.7 manifest issue which also seems to be  an issue on Windows.&lt;/p&gt;

&lt;p&gt;So I think the patch does not regress anything for IBM 1.6. I think for IBM 1.7, it would be sufficient to  file an issue to get the build working with IBM JDK 1.7.&lt;/p&gt;

&lt;p&gt;As an aside, for some time I could build on Windows  without  a local.properties or ant.properties.   About a month ago&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I noticed that was no longer the case.  I  am not sure if something changed on my machine or with the build that caused that problem.&lt;/p&gt;
</comment>
                            <comment id="13135448" author="knutanders" created="Tue, 25 Oct 2011 22:33:10 +0100"  >&lt;p&gt;I got a chance to test the build time with JDK 6 vs JDK 7 on Ubuntu too, and in my experiments there was a significant difference: 5 min 20 sec vs 8 min 50 sec when I ran &quot;ant -q all&quot;. If I modified all the build.xml files and specified source and target level 1.5 (or 1.6 or 1.7) instead of 1.4, it improved to 5 min 50 sec. So it definitely looks like there&apos;s something that&apos;s slower when compiling code targeted for 1.4 with JDK 7.&lt;/p&gt;</comment>
                            <comment id="13135908" author="rhillegas" created="Wed, 26 Oct 2011 13:47:21 +0100"  >&lt;p&gt;Attaching derby-5469-01-ah-cleanedUp.diff. This adds java17compileclasspath to the class  header comment. Otherwise this is identical to the previous patch. Since the patch seems to work in many environments (thanks for the testing, everyone), I have committed it at subversion revision 1189174.&lt;/p&gt;

&lt;p&gt;I intend to open a new issue to simplify PropertySetter. I believe that work will make further wordsmithing of this patch unnecessary.&lt;/p&gt;</comment>
                            <comment id="13146303" author="rhillegas" created="Tue, 8 Nov 2011 13:33:44 +0000"  >&lt;p&gt;Since the build now works on the Mac OS X preview for JDK 7, I am resolving this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12528876">DERBY-5485</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12528781">DERBY-5483</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12499684" name="derby-5469-01-ae-add17andJavadoc.diff" size="29080" author="rhillegas" created="Wed, 19 Oct 2011 14:54:53 +0100"/>
                            <attachment id="12499903" name="derby-5469-01-af-dontSetUprevVariables.diff" size="34252" author="rhillegas" created="Thu, 20 Oct 2011 19:03:51 +0100"/>
                            <attachment id="12500475" name="derby-5469-01-ag-cleanedUp.diff" size="36937" author="rhillegas" created="Mon, 24 Oct 2011 16:52:02 +0100"/>
                            <attachment id="12500875" name="derby-5469-01-ah-cleanedUp.diff" size="37125" author="rhillegas" created="Wed, 26 Oct 2011 13:47:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Oct 2011 04:26:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>88680</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0dz3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36082</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>