<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:51:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1357/DERBY-1357.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1357] Short-circuit logic in optimizer appears to be incorrect...</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1357</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When considering different join orders for the FROM tables in a query, the optimizer will decide to give up on a join order midway through if the cost of that (partial) join order is already higher than the cost of some other &lt;b&gt;complete&lt;/b&gt; join order that the optimizer previously found.  This &quot;short-circuiting&quot; of a join order can save compilation time.&lt;/p&gt;

&lt;p&gt;That said, the logic to perform this &quot;short-circuit&quot; of a join order is currently as follows (from OptimizerImpl.java):&lt;/p&gt;

&lt;p&gt;  /*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Pick the next table in the join order, if there is an unused position&lt;/li&gt;
		&lt;li&gt;in the join order, and the current plan is less expensive than&lt;/li&gt;
		&lt;li&gt;the best plan so far, and the amount of time spent optimizing is&lt;/li&gt;
		&lt;li&gt;still less than the cost of the best plan so far, and a best&lt;/li&gt;
		&lt;li&gt;cost has been found in the current join position.  Otherwise,&lt;/li&gt;
		&lt;li&gt;just pick the next table in the current position.&lt;br/&gt;
  */&lt;br/&gt;
  boolean joinPosAdvanced = false;&lt;br/&gt;
  if ((joinPosition &amp;lt; (numOptimizables - 1)) &amp;amp;&amp;amp;&lt;br/&gt;
    ((currentCost.compare(bestCost) &amp;lt; 0) ||&lt;br/&gt;
    (currentSortAvoidanceCost.compare(bestCost) &amp;lt; 0)) &amp;amp;&amp;amp;&lt;br/&gt;
    ( ! timeExceeded )&lt;br/&gt;
    )
  {
    ...
  }&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are two &quot;current costs&quot; in this statement: one for the cost if the optimizer is calculating a &quot;sort avoidance&quot; plan (which it does if there is a required row ordering on the results) and one if it is calculating a plan for which row order is not important.&lt;/p&gt;

&lt;p&gt;I admit that I&apos;m not all that familiar with what goes on with the costing of a sort-avoidance plan, but inspection of the code shows that, when there is no required row ordering-&lt;del&gt;i.e. when we aren&apos;t looking for a sort-avoidance plan&lt;/del&gt;-the cost field of currentSortAvoidanceCost will always be 0.0d. That in turn means that in the above &quot;if&quot; statement, the check for&lt;/p&gt;

&lt;p&gt;  ((currentCost.compare(bestCost) &amp;lt; 0) ||&lt;br/&gt;
    (currentSortAvoidanceCost.compare(bestCost) &amp;lt; 0))&lt;/p&gt;

&lt;p&gt;will always return true (because bestCost should-&lt;del&gt;in theory&lt;/del&gt;-always be greater than 0.0d).  Thus, in the case where we don&apos;t have a required row ordering, the short-circuit logic will fail even if currentCost is actually greater than bestCost.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12343690">DERBY-1357</key>
            <summary>Short-circuit logic in optimizer appears to be incorrect...</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 May 2006 04:52:29 +0100</created>
                <updated>Mon, 29 Jun 2009 15:33:55 +0100</updated>
                            <resolved>Fri, 21 Jul 2006 17:54:22 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12419761" author="army" created="Sat, 8 Jul 2006 01:50:24 +0100"  >&lt;p&gt;Attaching a patch, d1357_v1.patch, to address the incorrect logic as noted in the description. &lt;/p&gt;

&lt;p&gt;I also had to update the lang/predicatePushdown.out master file because with the d1357_v1.patch the order of a couple of qualifiers has changed.  Note that the query plans themselves are exactly the same--the only thing that&apos;s changed is the the qualifier ordering for one query.  This change of order occurs because as part of the costing code in FromBaseTable.estimateCost() the optimizer transfers predicates from one predicate list to another, gets an estimated cost, then puts the predicates back into the original list.  The methods to do this transferring are in NestedLoopJoinStrategy.java and HashJoinStrategy.java.  In the former, the predicates are transferred away in front-to-back order and then transferred back in back-to-front order, which leads to a reversal of the relevant predicate ordering.  Ex. If we have a list L1 of preds A,B,C and we transfer them to L2 in front-to-back order, L2 will end up with A,B,C.  Then, when we transfer the predicates back to L1, if we process L2 in back-to-front order, L1 will end up with C,B,A.  That said, with d1357_v1 applied the short-circuit logic prevents the optimizer from trying to optimize a join order that is known to be bad.  This means that we skip an unnecessary round of optimization and therefore skip one round of order reversal, which means the order of the predicate qualifiers in the final plan is now different.&lt;/p&gt;

&lt;p&gt;I ran derbyall on Red Hat with sane jars and ibm142, and saw no new failures.&lt;/p&gt;

&lt;p&gt;Review/commit would be appreciated.&lt;/p&gt;</comment>
                            <comment id="12421183" author="bryanpendleton" created="Fri, 14 Jul 2006 19:06:31 +0100"  >&lt;p&gt;Hi Army,&lt;/p&gt;

&lt;p&gt;Your change looks very good to me. I like the way you named the boolean temp variable; it makes the code substantially easier to read. And thanks for adding the good comments in the code.&lt;/p&gt;

&lt;p&gt;One question, though: what is the actual symptom of this bug? If I am understanding it correctly, the symptom is that the optimizer may pointlessly continue to investigate a possible query plan which it should already be able to reject as being too expensive.&lt;/p&gt;

&lt;p&gt;Does that mean that the only symptom here is that the optimizer may waste some resources?&lt;/p&gt;

&lt;p&gt;I guess the thing I&apos;m still struggling with is the bit of the change which adds &quot;reloadBestPlan = true&quot; at about line 530. Does that part of the patch have any actual user-visible impact on which query plan would be chosen, such that we need to have a release note here? Or is that just another bit of resource wastage that we&apos;re improving?&lt;/p&gt;</comment>
                            <comment id="12421941" author="army" created="Tue, 18 Jul 2006 21:24:51 +0100"  >&lt;p&gt;Possible RELEASE NOTE for this fix is as follows, based on suggestions from Bryan in the following thread:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://article.gmane.org/gmane.comp.apache.db.derby.devel/23875&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://article.gmane.org/gmane.comp.apache.db.derby.devel/23875&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;begin_release_note&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1357&quot; title=&quot;Short-circuit logic in optimizer appears to be incorrect...&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1357&quot;&gt;&lt;del&gt;DERBY-1357&lt;/del&gt;&lt;/a&gt;: Short-circuit logic in optimizer appears to be incorrect.&lt;/p&gt;

&lt;p&gt;Changes have been made to prevent the optimizer from spending time optimizing/evaluating join orders that it already knows are bad.&lt;/p&gt;

&lt;p&gt;WHAT CHANGED&lt;/p&gt;

&lt;p&gt;The optimizer will now abandon sub-optimal join orders as soon as it realizes that they cost more than the best join order so far.&lt;/p&gt;

&lt;p&gt;This fix also ensures that, in the case of short-circuited join orders, Derby will still generate (and execute) an overall plan that matches the &quot;best path&quot; decisions made by the optimizer--which was not always the case prior to these changes.&lt;/p&gt;

&lt;p&gt;SYMPTOM&lt;/p&gt;

&lt;p&gt;Execution performance of large queries (esp. those with nested subqueries and/or with large FROM clauses) may change.  The expectation is that the new (10.2) query plans will show improved performance over the old ones. &lt;/p&gt;

&lt;p&gt;CAUSE&lt;/p&gt;

&lt;p&gt;Since the optimizer is now spending less time evaluating sub-optimal join orders, it is possible that it will be able to try out more join orders before optimizer &quot;timeout&quot; occurs.  As a result the optimizer can sometimes find better plans than it did in earlier versions of Derby.&lt;/p&gt;

&lt;p&gt;SOLUTION &lt;/p&gt;

&lt;p&gt;This was an intentional change to fix behavior that was not working correctly in earlier versions of Derby. The expectation is that the new behavior-&lt;del&gt;and the subsequent query plans&lt;/del&gt;-will lead to improved performance over the old ones, so no further solution is required.&lt;/p&gt;

&lt;p&gt;WORKAROUND&lt;/p&gt;

&lt;p&gt;There is no way to disable/workaround this new behavior since the symptom as described above is a good one for Derby.&lt;/p&gt;

&lt;p&gt;That said, any user who notices a negative performance change after moving to Derby 10.2, and who believes that the difference in performance is related to this optimizer change, is encouraged to visit the following &quot;performance diagnosis&quot; page and to follow up with his/her findings on the Derby mailing lists:&lt;/p&gt;

&lt;p&gt;	&lt;a href=&quot;http://wiki.apache.org/db-derby/PerformanceDiagnosisTips&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/PerformanceDiagnosisTips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;end_release_note&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12422336" author="bandaram" created="Thu, 20 Jul 2006 05:30:51 +0100"  >&lt;p&gt;Submitted this patch. Thanks for documenting the changes very well!&lt;/p&gt;

&lt;p&gt;Sending        compile\OptimizerImpl.java&lt;br/&gt;
Transmitting file data .&lt;br/&gt;
Committed revision 423754.&lt;/p&gt;</comment>
                            <comment id="12422711" author="army" created="Fri, 21 Jul 2006 17:54:22 +0100"  >&lt;p&gt;Resolving issue as the patch was committed by Satheesh with svn #423754.  I&apos;ll wait a couple of days to see if anything comes up and then will close this next week if all is well.&lt;/p&gt;</comment>
                            <comment id="12434524" author="army" created="Wed, 13 Sep 2006 20:15:37 +0100"  >&lt;p&gt;Changes have been committed for almost 2 months, so closing the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12377120">DERBY-3033</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12384857">DERBY-3288</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12336512" name="d1357_v1.patch" size="4216" author="army" created="Sat, 8 Jul 2006 01:50:24 +0100"/>
                            <attachment id="12336513" name="d1357_v1.stat" size="229" author="army" created="Sat, 8 Jul 2006 01:50:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Jul 2006 18:06:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22457</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0wif:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39085</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>