<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2041/DERBY-2041.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2041] Trigger should register a dependency on tables and columns used in its body</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2041</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A trigger registers a dependency in the Dependency Manager for those columns which cause the firing of the trigger, but does not register a dependency on tables and columns which are used in the body of the trigger. This means that the trigger may unexpectedly become invalid due to a change to one of those tables and columns in its body, and the user may be surprised that Derby did not warn them of this problem when the underlying table/column change was made.&lt;/p&gt;

&lt;p&gt;An example of this problem is as follows:&lt;/p&gt;

&lt;p&gt;create table t1 (c1 int);&lt;br/&gt;
create table t2 (c2 int);&lt;br/&gt;
create trigger tr1 after update of c1 on t1  for each row mode db2sql insert into t2 (c2) values (1);&lt;/p&gt;

&lt;p&gt;With this set of definitions, Derby will warn/prevent the user about changes to table t1 and column c1, but will not warn the user about changes to table t2 and column c2. If the user drops or renames t2 or c2, the trigger will then give an error the next time it fires.&lt;/p&gt;

&lt;p&gt;It seems like it would be an improvement for the trigger to record this dependency on table t2 and column c2.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12354729">DERBY-2041</key>
            <summary>Trigger should register a dependency on tables and columns used in its body</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bryanpendleton">Bryan Pendleton</reporter>
                        <labels>
                            <label>derby_backport_reject_10_10</label>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Fri, 3 Nov 2006 20:07:16 +0000</created>
                <updated>Mon, 18 Aug 2014 20:10:18 +0100</updated>
                            <resolved>Thu, 5 Dec 2013 07:43:03 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13766339" author="knutanders" created="Fri, 13 Sep 2013 09:39:32 +0100"  >&lt;p&gt;Changing issue type from Improvement to Bug, since the lack of dependency tracking may cause errors later when the trigger that still references dropped objects is fired. Also, the lack of dependency tracking for columns has been reported as a bug by others (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3940&quot; title=&quot;Dropping a column does not drop triggers which mention that column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3940&quot;&gt;&lt;del&gt;DERBY-3940&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4887&quot; title=&quot;ALTER TABLE DROP COLUMN leaves the dependent trigger invalid rather than drop it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4887&quot;&gt;&lt;del&gt;DERBY-4887&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13766345" author="knutanders" created="Fri, 13 Sep 2013 10:02:59 +0100"  >&lt;p&gt;Here&apos;s a repro that shows that dropping a table referenced in the trigger action silently succeeds, and that the invalid trigger still exists afterwards:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij version 10.10
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;
ij&amp;gt; create table t1(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create table t2(x int);
0 rows inserted/updated/deleted
ij&amp;gt; create trigger tr1 after insert on t1 for each row insert into t2 values 1;
0 rows inserted/updated/deleted
ij&amp;gt; drop table t2;
0 rows inserted/updated/deleted
ij&amp;gt; insert into t1 values 1,2,3;
ERROR 42X05: Table/View &apos;T2&apos; does not exist. (errorCode = 30000)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A repro that shows the problem with dropping a column referenced in the trigger action can be found in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3940&quot; title=&quot;Dropping a column does not drop triggers which mention that column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3940&quot;&gt;&lt;del&gt;DERBY-3940&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13790354" author="knutanders" created="Wed, 9 Oct 2013 14:44:13 +0100"  >&lt;p&gt;The same problem exists with other SQL objects, such as functions. You can drop a function that&apos;s used in a trigger body, but the trigger will fail when it tries to invoke the function.&lt;/p&gt;</comment>
                            <comment id="13790356" author="knutanders" created="Wed, 9 Oct 2013 14:49:19 +0100"  >&lt;p&gt;The WHEN clause (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-534&quot; title=&quot;Support use of the WHEN clause in CREATE TRIGGER statements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-534&quot;&gt;&lt;del&gt;DERBY-534&lt;/del&gt;&lt;/a&gt;) also suffers from this problem, because its implementation mostly reuses the existing implementation used by the triggered SQL statement. When this bug is fixed, we should make sure that it works both for the WHEN clause and for the triggered SQL statement.&lt;/p&gt;</comment>
                            <comment id="13811184" author="knutanders" created="Fri, 1 Nov 2013 11:43:47 +0000"  >&lt;p&gt;The reference manual says the following in &lt;a href=&quot;http://db.apache.org/derby/docs/10.10/ref/rrefsqlj43125.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;CREATE TRIGGER statement&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The triggered-SQL-statement can reference database objects other than the table upon which the trigger is declared. If any of these database objects is dropped, the trigger is invalidated. If the trigger cannot be successfully recompiled upon the next execution, the invocation throws an exception and the statement that caused it to fire will be rolled back.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When we have fixed the bug, we should update this paragraph.&lt;/p&gt;

&lt;p&gt;Adding &quot;Documentation&quot; component.&lt;/p&gt;</comment>
                            <comment id="13815814" author="knutanders" created="Thu, 7 Nov 2013 10:04:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6390&quot; title=&quot;Document the WHEN clause in the CREATE TRIGGER statement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6390&quot;&gt;&lt;del&gt;DERBY-6390&lt;/del&gt;&lt;/a&gt; removed the above mentioned paragraph from the CREATE TRIGGER statement topic. We may consider reintroducing it after fixing this bug (with the actual text changed to reflect the new, corrected behaviour). It may be just fine to leave it out, though, since the new behaviour should be as described in the various DROP statement topics, so there should be no exception to document for triggers.&lt;/p&gt;</comment>
                            <comment id="13819082" author="knutanders" created="Mon, 11 Nov 2013 16:17:58 +0000"  >&lt;p&gt;I&apos;ll have a look and see if we can fix this issue by making CREATE TRIGGER register dependencies in a similar way to how CREATE VIEW does it.&lt;/p&gt;</comment>
                            <comment id="13820240" author="knutanders" created="Tue, 12 Nov 2013 16:51:22 +0000"  >&lt;p&gt;It looks like using the same approach as CREATE VIEW might work.&lt;/p&gt;

&lt;p&gt;The attached patch, register-dependencies.diff, makes CreateTriggerNode register dependencies the same way as CreateViewNode, and pass them on to CreateTriggerConstantAction, which stores those dependencies in SYS.SYSDEPENDS.&lt;/p&gt;

&lt;p&gt;Those changes alone were enough to make DROP TABLE behave as expected. Additionally, TriggerDescriptor.prepareToInvalidate() had to be told to raise an error if some other kinds of SQL objects were dropped, such as functions and views.&lt;/p&gt;

&lt;p&gt;DROP TYPE, DROP SEQUENCE and DROP DERBY AGGREGATE already had the expected behaviour, as they piggybacked on the trigger&apos;s SPS and had SPSDescriptor.prepareToInvalidate() raise an error if such a dependency was about to be dropped. Unfortunately, that creates a rather cryptic error message:&lt;/p&gt;

&lt;p&gt;ERROR X0Y24: Operation &apos;DROP DERBY AGGREGATE&apos; cannot be performed on object &apos;INTMODE&apos; because STATEMENT &apos;TRIGGERACTN_5ddba7b4-0142-4c61-18e0-000058ee2be7_c6f5a764-0142-4c61-18e0-000058ee2be7&apos; is dependent on that object.&lt;/p&gt;

&lt;p&gt;The patch moves that error handling from SPSDescriptor to TriggerDescriptor, which makes the error message clearer:&lt;/p&gt;

&lt;p&gt;ERROR X0Y25: Operation &apos;DROP DERBY AGGREGATE&apos; cannot be performed on object &apos;INTMODE&apos; because TRIGGER &apos;TR_INTMODE&apos; is dependent on that object.&lt;/p&gt;

&lt;p&gt;The patch adds a new test case to TriggerTest which verifies that dropping of procedures, functions, table functions, synonyms, sequences, aggregates, views, tables, columns and UDTs works as expected.&lt;/p&gt;

&lt;p&gt;Currently, many of the existing regression tests fail with the patch. The failures seem to be mainly because the tests attempt to drop a table while there&apos;s still a trigger that references it. Those failures are expected, and the tests need to be updated.&lt;/p&gt;

&lt;p&gt;One thing to consider, is how we expect the behaviour to be on upgrade and downgrade.&lt;/p&gt;

&lt;p&gt;The current behaviour of the patch is as following:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;The trigger&apos;s dependencies are registered when the trigger is created, so existing triggers will not automatically get the new dependency tracking on upgrade.&lt;/li&gt;
	&lt;li&gt;CREATE TRIGGER registers the dependencies even if the database is in soft-upgrade mode. This means the dependencies are still registered after downgrade, but the old version is only partially capable of using the dependencies. (Since it doesn&apos;t have the TriggerDescriptor updates, it still won&apos;t detect dependencies for example in DROP FUNCTION and DROP VIEW, but it will be able to detect them with DROP TABLE.)&lt;/li&gt;
	&lt;li&gt;After upgrade (soft or hard) dropping UDTs, aggregates or sequences will no longer detect dependencies on triggers created with the old version. (Since the trigger dependencies were not registered at CREATE TRIGGER time, and the code that piggybacked on the SPS dependencies is not in the new version.)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I guess #1 is OK, since existing triggers won&apos;t behave worse than before. It might be possible to create some upgrade code that reconstructs the dependencies on upgrade, but that may be more complexity than it&apos;s worth.&lt;/p&gt;

&lt;p&gt;#2 is probably OK too, as it makes the behaviour after downgrade more correct, even though it still misses a few cases.&lt;/p&gt;

&lt;p&gt;#3 means that the trigger&apos;s dependencies on UDTs, aggregates and sequences are lost on upgrade, and the trigger needs to be dropped and recreated with the new version in order to make the dependency tracking as good as it was in the old version. We should try to find a better way to handle this.&lt;/p&gt;

&lt;p&gt;I can see two quick solutions to that problem:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Move the invalidation logic for those three types of SQL objects back from TriggerDescriptor to SPSDescriptor. That means the cryptic error messages are back, but it also means the behaviour does not change on upgrade. (Apart from the messages being somewhat cryptic, the behaviour was correct before upgrade.)&lt;/li&gt;
	&lt;li&gt;Have the invalidation logic both in TriggerDescriptor and SPSDescriptor. In that case, we&apos;ll have the cryptic message when we drop a UDT/aggregate/sequence used in one of the existing triggers. And if we drop one that is used in a trigger created with the new version, we&apos;ll get &lt;b&gt;both&lt;/b&gt; the cryptic message and the one that shows the actual trigger name, in two SQLExceptions that are linked to each other.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I guess we could live with either of those solutions even though both are suboptimal.&lt;/p&gt;

&lt;p&gt;Another option is to keep the logic in SPSDescriptor.prepareToInvalidate() and add some logic to make it look up the actual trigger name in the system tables. But I think that would probably be too much complexity for too little gain in these edge cases.&lt;/p&gt;</comment>
                            <comment id="13822449" author="knutanders" created="Thu, 14 Nov 2013 13:45:57 +0000"  >&lt;p&gt;I&apos;ve come to the conclusion that, at least in the first round, we should keep the fix minimal and not try to improve those parts that already work. That is, DROP COLUMN, DROP DERBY AGGREGATE, DROP TYPE and DROP SEQUENCE seem to detect dependent triggers already, so they should be left as they are.&lt;/p&gt;

&lt;p&gt;I&apos;ve gone through the failing tests and found that they come in the following categories:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Cleanup code that drops tables/triggers between test cases without paying attention to trigger dependencies. These DROP statements should be reordered so that dependents are dropped before their dependencies.&lt;/li&gt;
	&lt;li&gt;Tests that explicitly check for the old behaviour. That is, they verify that trigger dependencies can be dropped, and that the trigger still exists afterwards and fails when it fires. These test cases should instead verify the new behaviour (dropping the dependency fails, and the trigger is still functioning).&lt;/li&gt;
	&lt;li&gt;Tests that inspect the contents of the SYS.SYSDEPENDS table, and now see more rows.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The one test failure that stood out, was the following (copied from lang/refActions.sql):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; create table t1( a int not null primary key , b int , c int not null unique) ;
0 rows inserted/updated/deleted
ij&amp;gt; create table t2( x int not null unique references t1(c) ON DELETE CASCADE ) ;
0 rows inserted/updated/deleted
ij&amp;gt; create table t3( y int references t2(x) ON DELETE CASCADE) ;
0 rows inserted/updated/deleted
ij&amp;gt; create trigger trig_delete after DELETE on t1
for each row
delete from t2;
0 rows inserted/updated/deleted
ij&amp;gt; drop table t3;
ERROR X0Y25: Operation &apos;DROP TABLE&apos; cannot be performed on object &apos;T3&apos; because TRIGGER &apos;TRIG_DELETE&apos; is dependent on that object.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The trigger &apos;TRIG_DELETE&apos; doesn&apos;t reference table &apos;T3&apos;, so I found this error puzzling. TRIG_DELETE&apos;s action deletes rows from T2, and possibly cascades to T3 because of T3&apos;s REFERENCING clause. So it is true that TRIG_DELETE depends on T3. However, it&apos;s more of a soft dependency, as its trigger action would still be compilable after T3 is dropped. So I think it wouldn&apos;t be unreasonable to expect &quot;drop table t3&quot; to succeed in this case, and just have TRIG_DELETE recompile its SPS. I&apos;m not sure if it is possible to distinguish between these kinds of dependencies currently, but at least there is room for improvement in this edge case.&lt;/p&gt;</comment>
                            <comment id="13822451" author="knutanders" created="Thu, 14 Nov 2013 13:49:25 +0000"  >&lt;p&gt;Attaching an updated patch, d2041-1a.diff, which has removed the handling of those DROP statements that already work as expected, and which updates the tests that failed because of the changed behaviour. All regression tests ran cleanly with this patch.&lt;/p&gt;</comment>
                            <comment id="13823679" author="knutanders" created="Fri, 15 Nov 2013 14:10:50 +0000"  >&lt;p&gt;The edge case mentioned above, where a foreign key causes DROP TABLE to think the trigger references the table, seems to happen because DMLModStatementNode.createConstraintDependencies() adds all referencing tables as dependencies. The comments indicate that these dependencies are added in order to make statements recompile if the referencing tables change, and not in order to restrict or cascade DROP operations. One possible way forward might be to make this code skip adding those dependencies if the dependent is a TriggerDescriptor. The dependencies are still added to the SPSDescriptor, so the trigger action should be able to detect that it needs to be recompiled even if the TriggerDescriptor itself doesn&apos;t depend on the table.&lt;/p&gt;</comment>
                            <comment id="13826417" author="knutanders" created="Tue, 19 Nov 2013 11:58:47 +0000"  >&lt;p&gt;I&apos;ve given up on the edge case described above for now.&lt;/p&gt;

&lt;p&gt;The suggested workaround did not work for a number of reasons: DMLModStatementNode.createConstraintDependencies() doesn&apos;t get called with the TriggerDescriptor as a dependent. (These dependencies are collected in the auxiliary provider list and copied to the TriggerDescriptor later. In fact, the TriggerDescriptor doesn&apos;t even exist yet when the dependencies are collected.) So we cannot tell in that method whether the dependencies are for a trigger or something else. And even if we could tell the difference there, the dependency on the referencing table also gets added via other code paths where it&apos;s equally difficult to tell whether it&apos;s a trigger dependency.&lt;/p&gt;

&lt;p&gt;An alternative workaround that I explored, was to make TriggerDescriptor.prepareToInvalidate() check if it was possible to parse and bind the trigger action and ignore the dependency if it was still possible. That approach didn&apos;t work either, because the DROP operations check the dependencies before they mark the object as dropped in the system tables, so recompilation of the trigger action during invalidation will not detect that a dependency is about to be dropped.&lt;/p&gt;

&lt;p&gt;This edge case is somewhat similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1632&quot; title=&quot;During revoke privilege, Derby does not look for replacement privilege for the dependent objects and simply drops the dependent objects. This is not SQL compliant and should be fixed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1632&quot;&gt;DERBY-1632&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1782&quot; title=&quot;When a privilege is revoked at table level, Derby should only drop objects that require that particular privilege and not all the objects that require some form of privilege on that table.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1782&quot;&gt;DERBY-1782&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4681&quot; title=&quot;Dropping a column in the table drops the views that use this table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4681&quot;&gt;DERBY-4681&lt;/a&gt; where the dependency manager is too strict. It might be possible to devise a fix for this particular case, but it might also be that we need to build more flexibility into the dependency tracking to have something that could be used for all these cases. In any case I think the edge case is small enough that the current approach is a net improvement.&lt;/p&gt;

&lt;p&gt;I&apos;m uploading an updated patch (d2041-1b.diff) which cleans up some comments and adds more test cases to TriggerTest.&lt;/p&gt;

&lt;p&gt;All tests ran cleanly.&lt;/p&gt;</comment>
                            <comment id="13831286" author="jira-bot" created="Mon, 25 Nov 2013 08:59:25 +0000"  >&lt;p&gt;Commit 1545179 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1545179&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1545179&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;: Trigger should register a dependency on tables and columns used in its body&lt;/p&gt;</comment>
                            <comment id="13831356" author="knutanders" created="Mon, 25 Nov 2013 11:00:47 +0000"  >&lt;p&gt;I&apos;ve filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6420&quot; title=&quot;Clarify how DROP statements work on trigger dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6420&quot;&gt;&lt;del&gt;DERBY-6420&lt;/del&gt;&lt;/a&gt; to update the documentation, so I&apos;m removing the Documentation component from this issue.&lt;/p&gt;</comment>
                            <comment id="13837879" author="knutanders" created="Tue, 3 Dec 2013 16:41:45 +0000"  >&lt;p&gt;Attaching a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="13839306" author="knutanders" created="Wed, 4 Dec 2013 20:17:41 +0000"  >&lt;p&gt;Attaching a patch that adds an upgrade test case that verifies the behaviour on upgrade and downgrade.&lt;/p&gt;

&lt;p&gt;This is the first upgrade test case that creates a view, and that caused some problems for DatabaseMetaDataTest when it runs as part of the upgrade test suite. The problems happen when DatabaseMetaDataTest cross checks all rows returned by getColumns() against ResultSetMetaData.getSchemaName() and ResultSetMetaData.getTableName(). Those checks fail because the RSMD methods return data for the underlying table and not for the view itself (intentionally, judging by other tests). The patch avoids these problems by making DatabaseMetaDataTest skip the failing checks for columns in views.&lt;/p&gt;</comment>
                            <comment id="13839917" author="jira-bot" created="Thu, 5 Dec 2013 07:41:49 +0000"  >&lt;p&gt;Commit 1548032 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1548032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1548032&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;: Trigger should register a dependency on tables and columns used in its body&lt;/p&gt;

&lt;p&gt;Add an upgrade test to verify how the dependencies are handled after&lt;br/&gt;
upgrade and downgrade.&lt;/p&gt;

&lt;p&gt;Skip some cross checking between getColumns() and ResultSetMetaData&lt;br/&gt;
for views in DatabaseMetaDataTest, since those checks only pass for&lt;br/&gt;
tables. The upgrade test case adds a view that upsets the meta-data&lt;br/&gt;
test. (This is the first upgrade test that uses views.)&lt;/p&gt;</comment>
                            <comment id="13839918" author="knutanders" created="Thu, 5 Dec 2013 07:43:03 +0000"  >&lt;p&gt;No more changes are planned for this issue. Marking as resolved.&lt;/p&gt;</comment>
                            <comment id="13913303" author="mikem" created="Wed, 26 Feb 2014 18:46:30 +0000"  >&lt;p&gt;consider for 10.10 backport&lt;/p&gt;</comment>
                            <comment id="13918340" author="myrna" created="Mon, 3 Mar 2014 18:12:28 +0000"  >&lt;p&gt;I&apos;m marking this as reject backport to 10.10, it seems this issue might cause compatibility issues, judging by the release note.&lt;/p&gt;</comment>
                            <comment id="14025172" author="rhillegas" created="Mon, 9 Jun 2014 14:15:15 +0100"  >&lt;p&gt;Correct typos in the detailed release note.&lt;/p&gt;</comment>
                            <comment id="14094963" author="jira-bot" created="Wed, 13 Aug 2014 01:43:23 +0100"  >&lt;p&gt;Commit 1617641 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1617641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1617641&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6684&quot; title=&quot;Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6684&quot;&gt;&lt;del&gt;DERBY-6684&lt;/del&gt;&lt;/a&gt;(Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk)&lt;br/&gt;
We ran into &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6684&quot; title=&quot;Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6684&quot;&gt;&lt;del&gt;DERBY-6684&lt;/del&gt;&lt;/a&gt; after the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt; went into 10.11&lt;br/&gt;
The failure is the expected behavior since when dropping a table,&lt;br/&gt;
we should detect any dependent triggers defined on other tables&lt;br/&gt;
and drop table should fail if such dependencies exist. To fix the&lt;br/&gt;
test failure, we just need to switch the order of drop table&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;(Trigger should register a dependency on tables and columns used in its body)&lt;br/&gt;
Drop ATDC_TAB1 before ATDC_BKUP1 because ATDC_TAB1 has a trigger&lt;br/&gt;
on it which references ATDC_BKUP1. If we try dropping ATDC_BKUP1&lt;br/&gt;
without first dropping ATDC_TAB1, there will be an error message&lt;br/&gt;
that trigger ATDC_TAB1_TRG1 depends on ATDC_BKUP1&lt;/p&gt;</comment>
                            <comment id="14094979" author="jira-bot" created="Wed, 13 Aug 2014 01:56:06 +0100"  >&lt;p&gt;Commit 1617642 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.11&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1617642&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1617642&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6684&quot; title=&quot;Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6684&quot;&gt;&lt;del&gt;DERBY-6684&lt;/del&gt;&lt;/a&gt;(Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk)&lt;br/&gt;
Backporting changes from trunk to 10.11. No futher backporting is needed because the test had started failing because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt;(Trigger should register a dependency on tables and columns used in its body) but the change for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2041&quot; title=&quot;Trigger should register a dependency on tables and columns used in its body&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2041&quot;&gt;&lt;del&gt;DERBY-2041&lt;/del&gt;&lt;/a&gt; went in 10.11 codeline&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12408012">DERBY-3940</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12479221">DERBY-4887</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12465638">DERBY-4681</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12347134">DERBY-1632</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12348900">DERBY-1782</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12313741">DERBY-534</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12345617">DERBY-1490</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12731721">DERBY-6684</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12681009">DERBY-6420</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12613829" name="d2041-1a.diff" size="65202" author="knutanders" created="Thu, 14 Nov 2013 13:49:25 +0000"/>
                            <attachment id="12614610" name="d2041-1b.diff" size="70542" author="knutanders" created="Tue, 19 Nov 2013 11:58:47 +0000"/>
                            <attachment id="12617054" name="d2041-2a-upgrade-test.diff" size="8809" author="knutanders" created="Wed, 4 Dec 2013 20:17:41 +0000"/>
                            <attachment id="12613396" name="register-dependencies.diff" size="20521" author="knutanders" created="Tue, 12 Nov 2013 16:51:22 +0000"/>
                            <attachment id="12649376" name="releaseNote.html" size="3155" author="rhillegas" created="Mon, 9 Jun 2014 14:15:15 +0100"/>
                            <attachment id="12616812" name="releaseNote.html" size="5271" author="knutanders" created="Tue, 3 Dec 2013 16:41:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Sep 2013 08:39:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30250</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy141j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40305</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>