<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:22:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-925/DERBY-925.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-925] Implement new JDBC 4 metadata API getFunctionParameters()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-925</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I am currently implementing this to return an empty result set so at least we&apos;re compliant, but we should be able to provide real metadata here.&lt;/p&gt;</description>
                <environment>JDK 1.6</environment>
        <key id="12328558">DERBY-925</key>
            <summary>Implement new JDBC 4 metadata API getFunctionParameters()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dyret">Dyre Tjeldvoll</assignee>
                                    <reporter username="davidvc">David Van Couvering</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Feb 2006 10:00:45 +0000</created>
                <updated>Wed, 1 Jul 2009 01:34:45 +0100</updated>
                            <resolved>Fri, 21 Apr 2006 17:13:10 +0100</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12367858" author="dyret" created="Mon, 27 Feb 2006 04:30:19 +0000"  >&lt;p&gt;As far as I can tell it is not possible to obtain all the necessary information from Derby&apos;s existing system tables. The getProcedureColumns() method needs much of the same information, but solves the problem by joining SYSALIASES and SYSSCHEMAS with a the VTI GetProcedureColumns.java.&lt;/p&gt;

&lt;p&gt;I think it will be difficult to extend it so that it works for getFunctionParameters() as well, but I think should be relatively easy to implement a new VTI along the same lines (with some new columns, and a row for the return value). &lt;/p&gt;</comment>
                            <comment id="12367959" author="dyret" created="Mon, 27 Feb 2006 23:28:33 +0000"  >&lt;p&gt;I have some questions about the columns in the resultset that is returned from this method.&lt;/p&gt;

&lt;p&gt;Abbreviations:&lt;br/&gt;
GFP=DatabaseMetaData.getFunctionParameters()		&lt;br/&gt;
GPC=DatabaseMetaData.getProcedureColumns()		&lt;/p&gt;

&lt;p&gt;Column (3, PARAMETER_NAME): Will this be NULL in the return value row?&lt;/p&gt;

&lt;p&gt;Column (8, PRECISION): GPC returns non-NULL for all SQL types. Should it return NULL for some types?&lt;/p&gt;

&lt;p&gt;Column (9, LENGTH): GPC uses TypeDescriptor.getMaximumWidthInBytes(). When running in ij, this returns 256 for VARCHAR(128), and it looks like it will return 256 for CLOB and BLOB. That does not seem right to me...&lt;/p&gt;

&lt;p&gt;Column (11, RADIX): GPC returns 10 for all types, except REAL, FLOAT and DOUBLE.  Should it not be NULL for some types, e.g. VARCHAR, CLOB?&lt;/p&gt;

&lt;p&gt;Column (12, NULLABLE): &lt;br/&gt;
a) GPC always returns procedureNullable. Should GFP return functionNullable for all types? (TypeDescriptor.isNullable() exists but is not used)&lt;br/&gt;
		b) Should this column be NULL for the return value row?&lt;/p&gt;

&lt;p&gt;Column (14, CHAR_OCTET_LENGTH) a) How can we identify the char/binary types in Derby? Can we use DataTypeDescriptor.isBinary() and isCharacter()?&lt;br/&gt;
		b) How to get the true max for the type? (Don&apos;t think getMaximumWidthInBytes() will work as it returns maximumWidth for these types.&lt;/p&gt;

&lt;p&gt;Column (16, IS_NULLABLE	a) Is this a String equivalent of column 12? &lt;br/&gt;
		b) Does YES in quotes mean String s = &quot;YES&quot; or String s = &quot;&apos;YES&apos;&quot;?&lt;/p&gt;</comment>
                            <comment id="12368002" author="rhillegas" created="Tue, 28 Feb 2006 03:27:51 +0000"  >&lt;p&gt;Hi Dyre,&lt;/p&gt;

&lt;p&gt;As far as CHAR_OCTET_LENGTH is concerned, I think that DataTypeDescriptor.getTypeId().isStringTypeId() and DataTypeDescriptor.getTypeId().isBitTypeId() will give you what you need. See the attached program.&lt;/p&gt;</comment>
                            <comment id="12368699" author="dyret" created="Fri, 3 Mar 2006 20:17:06 +0000"  >&lt;p&gt;I just realized that DatabaseMetaData.getProcedureColumns() has been changed in JDBC 4.0. The result set it returns now conatains a number of new columns and is, in fact, a super set of the columns returned by getFunctionParameters. For JDBC 4.0 it will likely be necessary to extend the existing GetProcedureColumns.java VTI with much of the same information that I was thinking about putting into the new VTI. Perhaps both methods can be implemented with queries against a single VTI? We will probably need a separate getProcedureColumns40 query in metadata.properties to maintain backward compatibility?&lt;/p&gt;</comment>
                            <comment id="12368708" author="knutanders" created="Fri, 3 Mar 2006 22:01:23 +0000"  >&lt;p&gt;Dyre wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; I just realized that DatabaseMetaData.getProcedureColumns() has been&lt;br/&gt;
&amp;gt; changed in JDBC 4.0. The result set it returns now conatains a&lt;br/&gt;
&amp;gt; number of new columns and is, in fact, a super set of the columns&lt;br/&gt;
&amp;gt; returned by getFunctionParameters. For JDBC 4.0 it will likely be&lt;br/&gt;
&amp;gt; necessary to extend the existing GetProcedureColumns.java VTI with&lt;br/&gt;
&amp;gt; much of the same information that I was thinking about putting into&lt;br/&gt;
&amp;gt; the new VTI. Perhaps both methods can be implemented with queries&lt;br/&gt;
&amp;gt; against a single VTI? We will probably need a separate&lt;br/&gt;
&amp;gt; getProcedureColumns40 query in metadata.properties to maintain&lt;br/&gt;
&amp;gt; backward compatibility?&lt;/p&gt;

&lt;p&gt;I don&apos;t think it is necessary have a separate JDBC4&lt;br/&gt;
implementation. The 13 columns specified by JDBC3 have not changed in&lt;br/&gt;
JDBC4, so I would say that you could just add the seven columns that&lt;br/&gt;
are new in JDBC4 and return the same result regardless of JDBC&lt;br/&gt;
version. I can&apos;t see why any application should rely on&lt;br/&gt;
getProcedureColumns() returning a result set with exactly 13&lt;br/&gt;
columns. The current Derby implementation of getProcedureColumns()&lt;br/&gt;
returns 15 columns, so if returning 20 columns would break it, it&apos;s&lt;br/&gt;
probably already broken.&lt;/p&gt;</comment>
                            <comment id="12368709" author="dyret" created="Fri, 3 Mar 2006 22:18:05 +0000"  >&lt;p&gt;I agree, no separate JDBC4 implementation should be necessary. But I was thinking that we could have multiple queries in metadata.properties, one that returns the old result set and another that returns the new one with more columns. That way EmbedDatabaseMetaData40 could use the new query, while the existing implementation could use the old query... maybe this would let us keep most of the master files as they are?&lt;/p&gt;</comment>
                            <comment id="12368710" author="knutanders" created="Fri, 3 Mar 2006 22:26:10 +0000"  >&lt;p&gt;Keeping the master files unmodified is not very important. If the output is different with the JDBC 3.0 driver and the JDBC 4.0 driver, you don&apos;t have to modify the master files, but you&apos;ll have to duplicate them to make derbyall succeed under JVM 1.6.&lt;/p&gt;</comment>
                            <comment id="12368724" author="djd" created="Sat, 4 Mar 2006 00:21:56 +0000"  >&lt;p&gt;Single implementation for 3.0 and 4.0 seems ok to me, changing master files or not should not be a decision factor for implementing somthing.&lt;/p&gt;</comment>
                            <comment id="12369129" author="kmarsden" created="Tue, 7 Mar 2006 09:54:13 +0000"  >&lt;p&gt;I&apos;m interested to know  the behaviour&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if Server is at 10.1 and Client is at 10.2&lt;/li&gt;
	&lt;li&gt;If server and client are at different jvm versions.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This I guess is a general question about JDBC 4.0.  &lt;br/&gt;
What combinations should work and what errors are users  going to see if it doesn&apos;t work?&lt;/p&gt;

&lt;p&gt;It sounds like the final conclusion was that metadata.properties won&apos;t change.  If it does  in the end need to change, I am curious the behaviour for  soft upgrade and downgrade and soft upgrade again.  This was handled in old Cloudscape versions by dropping and recreating the SPS&apos;s on every version change, but I think that is no longer done in  Derby.&lt;/p&gt;

</comment>
                            <comment id="12369193" author="dyret" created="Tue, 7 Mar 2006 17:54:37 +0000"  >&lt;p&gt;First of all, metadata.properties WILL have to change for JDBC 4.0, and it already has. David has already added new queries for getFunctions and getFunctionParameters (and others I think), but they only return empty resultsets. For &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-924&quot; title=&quot;new JDBC4 metadata API getFunctions() needs to be implemented&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-924&quot;&gt;&lt;del&gt;DERBY-924&lt;/del&gt;&lt;/a&gt; I changed the query for getFunctions to return the correct values, but I have not created a system procedure that invokes this method so that it can be used in client server mode. &lt;/p&gt;

&lt;p&gt;I guess that means that a JDBC 4.0 client that tries to invoke getFunctions will get a &quot;no such PROCEDURE&quot; error or something, but I have not verified this. I guess this depends on the implementation of DatabaseMetaData in the client? &lt;/p&gt;

&lt;p&gt;I don&apos;t know how the jvm version affects this. Presumably it would still be possible to run an old version of Derby in java 1.6, but then one would get a &quot;no such method&quot; exception when attempting to invoke the new methods?&lt;/p&gt;

&lt;p&gt;For getProcdures and getProcedureColumns there should not be any upgrade issues, since they already exist in JDBC 3.0. Note however, that metadata.properties will have to change for these as well. A JDBC 4.0 client should be able to execute these methods against a JDBC 3.0 server without any problems as long as it doesn&apos;t attempt to access any of the new columns in the returned result set. If it does, I expect that the conventional &quot;no such column&quot; exception will be thrown (can be avoided by using ResultSetMetaData defensively, I think).&lt;/p&gt;</comment>
                            <comment id="12369276" author="davidvc" created="Wed, 8 Mar 2006 01:44:36 +0000"  >&lt;p&gt;The network client currently returns a &quot;Not Implemented&quot; SQLException for these new metadata functions, but that&apos;s logged as a bug (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-970&quot; title=&quot;Add new metadata methods to network client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-970&quot;&gt;&lt;del&gt;DERBY-970&lt;/del&gt;&lt;/a&gt;).  &lt;/p&gt;</comment>
                            <comment id="12369670" author="dyret" created="Fri, 10 Mar 2006 01:01:51 +0000"  >&lt;p&gt;Knut Anders Hatlen wrote in a message to derby-dev:&lt;/p&gt;

&lt;p&gt;getFunctionParameters() and getFunctions() are not implemented (not&lt;br/&gt;
even to throw &quot;Not Implemented&quot;) on the client, so you will get an&lt;br/&gt;
AbstractMethodError.&lt;/p&gt;</comment>
                            <comment id="12375154" author="dyret" created="Thu, 20 Apr 2006 00:49:29 +0100"  >&lt;p&gt;Attaching a patch for review.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12375156" author="rhillegas" created="Thu, 20 Apr 2006 00:55:48 +0100"  >&lt;p&gt;I will take a look at this patch and run the tests. Cheers-Rick&lt;/p&gt;</comment>
                            <comment id="12375158" author="dyret" created="Thu, 20 Apr 2006 01:02:01 +0100"  >&lt;p&gt;Patch is available. &lt;/p&gt;

&lt;p&gt;Some comments about the patch:&lt;br/&gt;
A lot of the earlier comments on this issue turned out not to be relevant. The query for getFunctionParameters is mostly based on the generated ODBC getProcedureColumns query, which already has all the new columns. I did however have to extend the GetProcedureColumns VTI so that the return value (parameter) is included for functions, and that the new functionParameter* constants are used for functions.&lt;/p&gt;</comment>
                            <comment id="12375207" author="rhillegas" created="Thu, 20 Apr 2006 06:29:38 +0100"  >&lt;p&gt;Looks solid thanks to the thoughtful discussion which preceded this patch. JDBC4 tests pass cleanly. Derbyall passes modulo wisconsin noise. Committed at subversion revision 395414.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12328909">DERBY-968</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12323463" name="TypePrinter.java" size="4744" author="rhillegas" created="Tue, 28 Feb 2006 03:27:51 +0000"/>
                            <attachment id="12325564" name="derby-925.v1.diff" size="62969" author="dyret" created="Thu, 20 Apr 2006 00:49:29 +0100"/>
                            <attachment id="12325565" name="derby-925.v1.stat" size="2582" author="dyret" created="Thu, 20 Apr 2006 00:49:29 +0100"/>
                            <attachment id="12325566" name="derbyall_report.txt" size="3952" author="dyret" created="Thu, 20 Apr 2006 00:49:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Feb 2006 04:30:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29781</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0sm7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>