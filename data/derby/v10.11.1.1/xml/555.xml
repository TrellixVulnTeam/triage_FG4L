<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:02 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-555/DERBY-555.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-555] Unable to restart after disk is full</title>
                <link>https://issues.apache.org/jira/browse/DERBY-555</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;1. Inserted data into the database until the disk was full. (5 clients inserting into 5 different tables in parallel.)&lt;br/&gt;
2. Shut down the server&lt;br/&gt;
3. Start the database again without freeing any disk space.&lt;/p&gt;

&lt;p&gt;When I try to start the database again, I get Null-pointer-exception, regardless of how I connect (have tried embedded, client server, ij, jdbc applications).  I have not tried to free some space on the disk before starting.  &lt;/p&gt;

&lt;p&gt;The call stack is not available right now (the computer I used had to be shut down due to problems with our cooling system), but the exception comes from the following line in RawStore.java:&lt;br/&gt;
     properties.put(Attribute.LOG_DEVICE, logFactory.getCanonicalLogPath());&lt;/p&gt;

&lt;p&gt;getCanonicalLogPath() returns null which results in a NPE in the hash table.&lt;br/&gt;
A quick debug before the computer was stopped, showed that the logFactory was an instance of org.apache.derby.impl.store.raw.log.ReadOnly which always returns null in its  getCanonicalLogPath().&lt;/p&gt;

&lt;p&gt;I suspect this may be related to the fact that I ran with the log in a non-default location.&lt;/p&gt;</description>
                <environment>Sun Sparc Solaris, 1.4 JDK, Derby Client/Server</environment>
        <key id="12314126">DERBY-555</key>
            <summary>Unable to restart after disk is full</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oysteing">&#216;ystein Gr&#248;vlen</assignee>
                                    <reporter username="oysteing">&#216;ystein Gr&#248;vlen</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 Sep 2005 00:30:57 +0100</created>
                <updated>Thu, 16 Aug 2012 19:45:18 +0100</updated>
                            <resolved>Tue, 3 Mar 2009 22:29:22 +0000</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.3.3</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12320895" author="oysteing" created="Sat, 3 Sep 2005 00:33:24 +0100"  >&lt;p&gt;Can anyone explain why LogFactory becomes an instance of ReadOnly when I restart the database?  I have not been able to figure out how/where/when that happens.&lt;/p&gt;</comment>
                            <comment id="12320936" author="tsuresh" created="Sat, 3 Sep 2005 07:26:07 +0100"  >&lt;p&gt;One case I can think of  database disk is full and system is unable to create even a lock (db.lck) file also.  In derby , there is this logic that declares database is read only , when it is not able to create files. Idea is  to boot  database in jar files ..etc in read only mode . If   file creation IO error happens to occur , before it load the log factory is loaded , then it  boots the read only verion of the log factory implementation, thinking that databse is read only. &lt;/p&gt;

&lt;p&gt;you may want to look at the following code to see , if this is what is happening in u&apos;r case:&lt;br/&gt;
BaseDataFileFatory.java:&lt;/p&gt;

&lt;p&gt;1)&lt;br/&gt;
private void bootLogFactory(boolean create, Properties startParams) throws StandardException &lt;/p&gt;
{
if (isReadOnly())
startParams.put(LogFactory.RUNTIME_ATTRIBUTES, LogFactory.RT_READONLY);
logFactory = (LogFactory)	Monitor.bootServiceModule(create, this, 
					rawStoreFactory.getLogFactoryModule(), 
						startParams);
}


&lt;p&gt;2) boot()  method &lt;/p&gt;

&lt;p&gt;3) ,private void privGetJBMSLockOnDB() throws StandardException this method marks the database as readonly , if it is not able to create db.lck files. &lt;br/&gt;
&amp;#8211;&lt;/p&gt;

&lt;p&gt;Marking database on disk full case seems to be incorrect as u mentioned. Problem here is ,we want to automatically figure out the read only databases,  but java does not  seem have a  DiskFull exception!!  &lt;/p&gt;


&lt;p&gt;Thanks&lt;br/&gt;
-suresht&lt;/p&gt;


</comment>
                            <comment id="12320945" author="forsini" created="Sat, 3 Sep 2005 10:32:13 +0100"  >&lt;p&gt;There is no DiskFullException (working) exception in the current JVM - there are a couple of JSR&apos;s (i.e. JSR-203) related to this as well as getting access to some extra FS api but it is now planned for jdk 1.6 or possibly later (been requested for years)&lt;/p&gt;

&lt;p&gt;There is a potential DiskFullException exception workaronud posted below:&lt;br/&gt;
&lt;a href=&quot;http://weblog.janek.org/Archive/2004/12/20/ExceptionWhenWritingToAFu.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://weblog.janek.org/Archive/2004/12/20/ExceptionWhenWritingToAFu.html&lt;/a&gt;&lt;br/&gt;
(there is also an interesting behavior as far as file creation on a disk full - kinda skeptical about that but eh)&lt;/p&gt;

&lt;p&gt;There is also no API to return how space is left on a disk (device) - this is part of the related JSR&apos;s as well...&lt;/p&gt;

&lt;p&gt;--francois&lt;/p&gt;</comment>
                            <comment id="12322633" author="oysteing" created="Mon, 5 Sep 2005 17:42:06 +0100"  >&lt;p&gt;The log disk was not full. Neither was the disk where the derby.log file is written.&lt;/p&gt;</comment>
                            <comment id="12329831" author="oysteing" created="Mon, 19 Sep 2005 22:10:53 +0100"  >&lt;p&gt;Since it seems not to be possible to detect full disk in Java, my suggestion is to write a message to derby.log when a database is made read-only which states that reason may either be because it is lacking write access or because the disk is full.&lt;/p&gt;</comment>
                            <comment id="12330187" author="oysteing" created="Thu, 22 Sep 2005 21:26:25 +0100"  >&lt;p&gt;I have attached a patch that aims to resolve this issue as follows:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If database is set to read-only, print a message in derby.log about this.&lt;/li&gt;
	&lt;li&gt;If the database is read-only, do not worry about log path.  This avoids the null pointer exception.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The following files are changed:&lt;br/&gt;
M      java/engine/org/apache/derby/impl/store/raw/RawStore.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/reference/MessageId.java&lt;br/&gt;
M      java/engine/org/apache/derby/loc/messages_en.properties&lt;/p&gt;

&lt;p&gt;If this fix is applied, the database will boot in read-only mode if there is not free disk space in the database directory.  A message of this will then be printed to derby.log.  This is far from an ideal solution since an application that experience this will not get any warning/error when connecting.  However, if it laters tries to modify data, it will get exceptions like &quot;ERROR 25502: An SQL data change is not permitted for a read-only connection, user or database&quot;.  I think many Derby users will be confused by this message since I am not sure the aspects of read-only connections/users/databases are well known to most Derby   users.&lt;/p&gt;

&lt;p&gt;I guess the documentation should be updated to inform about this, but I am not quite sure where to put it.  Any suggestions?&lt;/p&gt;

&lt;p&gt;I have not made any tests for this.  Do people think it is necessary?  It is a bit difficult to make a standard test that fills disk devices.  I could experiment to see if I can get the same NPE problem with a read-only database.&lt;/p&gt;


</comment>
                            <comment id="12330529" author="tsuresh" created="Tue, 27 Sep 2005 10:00:38 +0100"  >&lt;p&gt;Hi &#216;ystein, &lt;/p&gt;

&lt;p&gt;Tested your patch ,  it looks good .    I have couple of minor questions,   related to the  new error message  :&lt;br/&gt;
Database located at C:\suresht\databases\wombat has been booted in READ ONLY mod&lt;br/&gt;
e. This will occur when the database is located in a jar file.  This may also ha&lt;br/&gt;
ppen when Derby is not able to write to the database directory; either because i&lt;br/&gt;
t does not have the required access rights or because the disk is full.&lt;/p&gt;

&lt;p&gt;1) New Message added will be displayed  on  every boot  from a read only media ,  Not sure if &lt;br/&gt;
this  will be  annoying to  the users who are booting  derby  from a read-only media ?  &lt;/p&gt;

&lt;p&gt;2) Above Message added will never be  displayed  when booted from a JAR file.   reference to jar in read-only mode (&quot;... This will occur when the database is located in a jar file ...) may not be needed. &lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;/p&gt;

&lt;p&gt;How about modifying the general boot message to indicate that  the database is booted in  read-only mode ? and  document the special case of disk full scenario some where ? &lt;/p&gt;

&lt;p&gt;I agree with you that  there is no simple way to write a disk full test cases that can be added to nightly runs.  But if you have a test case ,  I  think  it might be  good idea  to  create special  ad-hoc test   directory and put it there ,   so that some one interested can run them manually  at the time of a  release.&lt;/p&gt;

&lt;p&gt;On a quick scan through the docs,  found   a section  &quot;Booting databases&quot;  section in the Developers guide(&quot;http://db.apache.org/derby/docs/10.1/devguide/) ; may be we can mention the disk full read-only boot  special case there as a note. &lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
-suresht&lt;/p&gt;</comment>
                            <comment id="12331165" author="oysteing" created="Tue, 4 Oct 2005 00:19:12 +0100"  >&lt;p&gt;If I understand you correctly, you suggest that I add an extra parameter to the boot message that can be used to indicate that a database is booted in read only mode.  I can do that.  I am a bit afraid that it will be less visible to someone inspecting the log file for the cause of the problem, but I can write READ-ONLY in upper case &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I have now reproduce the same bug by setting the DB directory to read-only.  I will make a test based on that.  Unfortunately, this cannot be added to derbyall before we can use J2SE 6 since there is currently no way to turn write access back on again.  Hence, you will have to manually change the access rights in order to clean up the test directory after the test has been run.&lt;/p&gt;

&lt;p&gt;I will suggest a text to be added to the documentation.  Should I create a separate JIRA issue for this?&lt;/p&gt;</comment>
                            <comment id="12331265" author="oysteing" created="Tue, 4 Oct 2005 21:05:54 +0100"  >&lt;p&gt;Added a new patch that changes the message to derby.log and adds a test for this bug. &lt;/p&gt;

&lt;p&gt;With this patch, when a database is booted in read-only mode, the boot message in derby.log will contain information about that.&lt;/p&gt;

&lt;p&gt;I have also added a test, TurnsReadOnly.java, that without the fix, get the NPE.  This is not in a disk full scenario, but it also occurs with a read-only DB directory.   Since there is currently no way to turn write access back on from a Java program, the DB directory will be read-only after the test is run.  Hence, the test framework will not be able to clean up the test directory.  Therefore, this test is not added to the derbyall test suite.&lt;/p&gt;

&lt;p&gt;The following files are changed:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/store/raw/RawStore.java&lt;br/&gt;
      Do not check log location for read-only databases (avoids NPE)&lt;br/&gt;
M      java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java&lt;br/&gt;
      Add information to boot message in derby.log when database is booted in read-only mode.&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/reference/MessageId.java&lt;br/&gt;
      Added message id for the read-only part of the boot message&lt;br/&gt;
M      java/engine/org/apache/derby/loc/messages_en.properties&lt;br/&gt;
      Added text for the read-only part of the boot message&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/store/copyfiles.ant&lt;br/&gt;
      Added TurnsReadOnly_app.properties&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/store/TurnsReadOnly.java&lt;br/&gt;
      New test that boots a database with log in non-default location, shuts it down, sets DB directory to read-only, boots again and checks that DML is not allowed.&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/tests/store/TurnsReadOnly_app.properties&lt;br/&gt;
      Test properties&lt;br/&gt;
A      java/testing/org/apache/derbyTesting/functionTests/master/TurnsReadOnly.out&lt;br/&gt;
      Master file for new test.&lt;/p&gt;

&lt;p&gt;I am currently running derbyall and will update report when test is finished.&lt;/p&gt;</comment>
                            <comment id="12332572" author="oysteing" created="Thu, 20 Oct 2005 22:30:30 +0100"  >&lt;p&gt;Committed by revision 325896&lt;/p&gt;</comment>
                            <comment id="12332576" author="kmarsden" created="Thu, 20 Oct 2005 23:01:38 +0100"  >&lt;p&gt;I realize it is a bit late to ask this question now that the bug is closed, but is this fix appropriate to port to 10.1 for 10.1.2?&lt;br/&gt;
It seems like something that would be great to have fixed for the release.&lt;/p&gt;</comment>
                            <comment id="12678371" author="kmarsden" created="Tue, 3 Mar 2009 17:41:28 +0000"  >&lt;p&gt;reopening to backport to 10.1. I need the read only boot message there and it will be good to have this fixed in 10.1 anyway.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12549919">DERBY-5686</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12314706" name="derby-555a.diff" size="10091" author="oysteing" created="Tue, 4 Oct 2005 21:05:54 +0100"/>
                    </attachments>
                <subtasks>
                            <subtask id="12317580">DERBY-600</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 3 Sep 2005 06:26:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22012</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0acf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35494</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>