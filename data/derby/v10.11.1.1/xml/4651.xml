<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:08:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4651/DERBY-4651.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4651] Hidden assumptions in FromVTI.makeRestriction()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4651</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;FromVTI.makeRestriction() has this code to strip away Boolean constants from AND and OR expressions:&lt;/p&gt;

&lt;p&gt;            // strip off trailing vacuous constant if present&lt;br/&gt;
            if ( andOperator.getRightOperand() instanceof BooleanConstantNode )&lt;/p&gt;
            { return makeRestriction( andOperator.getLeftOperand(), columnNameMap ); }

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;            // strip off trailing vacuous constant if present&lt;br/&gt;
            if ( orOperator.getRightOperand() instanceof BooleanConstantNode )&lt;/p&gt;
            { return makeRestriction( orOperator.getLeftOperand(), columnNameMap ); }

&lt;p&gt;The code for AND will only work as expected if the right operand is TRUE. The code for OR only works correctly if the right operand is FALSE.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if this can ever result in user-visible bugs, since Boolean constants are usually removed before we get to this point in the code. The predicate has probably been transformed to conjunctive normal form, in which Boolean constants in the right operand of an AndNode or an OrNode in fact is always TRUE or FALSE, respectively.&lt;/p&gt;

&lt;p&gt;I think this code either should be changed to work regardless of the value of the constant in the right operand, or the assumption that the predicate is on conjunctive normal form should be documented in the comments (and perhaps also checked in an assert statement).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464232">DERBY-4651</key>
            <summary>Hidden assumptions in FromVTI.makeRestriction()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 May 2010 12:56:19 +0100</created>
                <updated>Mon, 29 Nov 2010 14:23:12 +0000</updated>
                            <resolved>Fri, 14 May 2010 10:47:32 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12866143" author="rhillegas" created="Tue, 11 May 2010 14:23:08 +0100"  >&lt;p&gt;Thanks for looking closely at the code, Knut. The improvement you suggest sounds like a good idea, if only because the code is puzzling. I believe that the vacuous trailing constants are added by the normalization logic and are always TRUE in the case of ANDs and FALSE in the case of ORs. In any event, I don&apos;t think any rows will be incorrectly qualified. That is because the qualification is redundantly enforced by Derby after the table function returns each row.&lt;/p&gt;</comment>
                            <comment id="12866194" author="knutanders" created="Tue, 11 May 2010 17:11:59 +0100"  >&lt;p&gt;In the OR case, I think the end result would actually end up being wrong. If the predicate is X &amp;lt; 5 OR TRUE, and only X &amp;lt; 5 is pushed into the table function, the rows where X &amp;gt;= 5 won&apos;t be returned from the table function and Derby has no way to recreate these outside the table function.&lt;/p&gt;

&lt;p&gt;But I agree, the predicates should have been normalized before we get there, so updating the comments would probably suffice.&lt;/p&gt;</comment>
                            <comment id="12866678" author="rhillegas" created="Wed, 12 May 2010 19:25:10 +0100"  >&lt;p&gt;Attaching derby-4651-01-aa-verificationTest.diff. This patch adds a test case to track the fact that the VTI&apos;s qualification logic isn&apos;t short-circuited by queries whose WHERE clauses end in constant expressions. Committed at subversion revision 943605 and ported to the 10.6 branch at revision 943616.&lt;/p&gt;

&lt;p&gt;I have not been able to figure out how to trigger the problem case raised by Knut. Right now Derby rejects the true and false literals. I have tried to replace them with simple expressions which are really constant, in the hope that the compiler would pre-compute the constant expressions and substitute them in the query tree. However, all I have succeeded in doing is forcing the compiler to not pass any restriction into the VTI.&lt;/p&gt;

&lt;p&gt;This problem case raised by Knut may very well arise once we re-enable the true and false literals. We should write some defensive code around this situation before we re-enable the literals.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/IntegerArrayVTI.java&lt;/p&gt;

&lt;p&gt;Beefs up the VTI with machinery to actually enforce the restriction that was pushed into the VTI and to report the number of rows which came out of the VTI.&lt;/p&gt;

&lt;p&gt;-------&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/tests/lang/RestrictedVTITest.java&lt;/p&gt;

&lt;p&gt;New test case to verify my simple attempts to create the problem situation reported by Knut.&lt;/p&gt;</comment>
                            <comment id="12866689" author="rhillegas" created="Wed, 12 May 2010 19:57:02 +0100"  >&lt;p&gt;Attaching derby-4651-02-aa-fixBug.diff. This patch adds some defensive logic so that boolean constants are short-circuited only when they have no effect on the result.&lt;/p&gt;

&lt;p&gt;Committed at subversion revision 943633. Ported to the 10.6 branch at subversion revision 943634.&lt;/p&gt;

&lt;p&gt;As a consequence of this patch, Knut&apos;s problem scenario will raise an exception rather than return wrong results. As I said, I have not been able to figure out how to create Knut&apos;s scenario but it may arise when we re-enable boolean literals. At that time, we may want to handle this situation more gracefully. For instance, we may want to add two new kinds of Restriction subclasses to model the boolean literals.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/FromVTI.java&lt;/p&gt;</comment>
                            <comment id="12867451" author="knutanders" created="Fri, 14 May 2010 10:20:45 +0100"  >&lt;p&gt;Thanks for fixing this, Rick. I&apos;m happy with this resolution.&lt;/p&gt;

&lt;p&gt;&amp;gt; As a consequence of this patch, Knut&apos;s problem scenario will raise&lt;br/&gt;
&amp;gt; an exception rather than return wrong results.&lt;/p&gt;

&lt;p&gt;It seems to me that what will happen if that scenario arises after the&lt;br/&gt;
latest changes, is that makeRestriction() will return null. This&lt;br/&gt;
prevents the restriction from being pushed (and ensures that the&lt;br/&gt;
correct results will be returned), but won&apos;t cause an exception. Did I&lt;br/&gt;
miss something?&lt;/p&gt;</comment>
                            <comment id="12867456" author="knutanders" created="Fri, 14 May 2010 10:43:16 +0100"  >&lt;p&gt;I&apos;m making one small simplification before I close the issue. isBooleanTrue() and isBooleanFalse() are defined in ValueNode, and return false if the object is not an instance of BooleanConstantNode, so there&apos;s no need to check the type of the right operand and cast it to BooleanConstantNode before calling one of those methods. Removing redundant check and cast in patch no_cast.diff.&lt;/p&gt;

&lt;p&gt;Committed revision 944174.&lt;/p&gt;</comment>
                            <comment id="12867492" author="rhillegas" created="Fri, 14 May 2010 13:55:42 +0100"  >&lt;p&gt;Thanks for polishing the patch, Knut.&lt;/p&gt;

&lt;p&gt;You are also right about null being returned rather than an exception being raised. At one point iAmConfused() raised an exception. But I see that at some point I changed that method to return null instead. So you see I was confused about iAmConfused().&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12459157">DERBY-4583</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12444328" name="derby-4651-01-aa-verificationTest.diff" size="9003" author="rhillegas" created="Wed, 12 May 2010 19:25:09 +0100"/>
                            <attachment id="12444332" name="derby-4651-02-aa-fixBug.diff" size="1737" author="rhillegas" created="Wed, 12 May 2010 19:57:02 +0100"/>
                            <attachment id="12444480" name="no_cast.diff" size="1560" author="knutanders" created="Fri, 14 May 2010 10:43:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 May 2010 13:23:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24391</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ohb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37784</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>