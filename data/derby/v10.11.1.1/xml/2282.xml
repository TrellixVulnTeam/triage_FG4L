<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:04 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2282/DERBY-2282.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2282] Incorrect &quot;transitive closure&quot; logic leads to inconsistent behavior for binary comparison predicates.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2282</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The logic that handles &quot;transive closure&quot; for search predicates is in the &quot;searchClauseTransitiveClosure()&quot; method of impl/sql/compile/PredicateList.java.  That method contains the following logic:&lt;/p&gt;

&lt;p&gt;            else if (operator instanceof BinaryComparisonOperatorNode)&lt;br/&gt;
            {&lt;br/&gt;
                BinaryComparisonOperatorNode bcon = (BinaryComparisonOperatorNode) operator;&lt;br/&gt;
                ValueNode left = bcon.getLeftOperand();&lt;br/&gt;
                ValueNode right = bcon.getRightOperand();&lt;/p&gt;

&lt;p&gt;                // RESOLVE: Consider using variant type of the expression, instead of&lt;br/&gt;
                // ConstantNode or ParameterNode in the future.&lt;br/&gt;
                if (left instanceof ColumnReference &amp;amp;&amp;amp; &lt;br/&gt;
                      (right instanceof ConstantNode || right instanceof ParameterNode))&lt;/p&gt;
                {
                    searchClauses.addElement(predicate);
                }
&lt;p&gt;                else if (right instanceof ConstantNode &amp;amp;&amp;amp; left instanceof ColumnReference)&lt;/p&gt;
                {
                    // put the ColumnReference on the left to simplify things
                    bcon.swapOperands();
                    searchClauses.addElement(predicate);
                }
&lt;p&gt;                continue;&lt;br/&gt;
            }&lt;/p&gt;

&lt;p&gt;Notice that the inner &quot;else-if&quot; condition is wrong.  It&apos;s supposed to be checking to see if the right node is a ColumnReference and the left node is a Constant, but that&apos;s not what it does-&lt;del&gt;instead, it does a check that is really a sub-condition of the &quot;if&quot; condition&lt;/del&gt;-i.e. whenever the &quot;else if&quot; condition is true the &quot;if&quot; condition will be true and thus we won&apos;t ever execute the &quot;else if&quot; branch.&lt;/p&gt;

&lt;p&gt;I confirmed this by looking at the code coverage results for 10.2:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://people.apache.org/~fuzzylogic/codecoverage/428586/_files/2f4.html#2d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~fuzzylogic/codecoverage/428586/_files/2f4.html#2d&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lines in question are never executed.&lt;/p&gt;

&lt;p&gt;What this means is that a query which specifies constants on the &lt;b&gt;left&lt;/b&gt; side of a comparison predicate will behave differently than a query which specifies constants on the &lt;b&gt;right&lt;/b&gt; side of the same comparison.  As an example:&lt;/p&gt;

&lt;p&gt;create table t1 (i int);&lt;br/&gt;
create table t2 (j int);&lt;/p&gt;

&lt;p&gt;insert into t1 values 1, 5, 7, 11, 13, 17, 19;&lt;br/&gt;
insert into t2 values 23, 29, 31, 37, 43, 47, 53;&lt;br/&gt;
insert into t1 select 23 * i from t1 where i &amp;lt; 19;&lt;br/&gt;
insert into t2 select 23 * j from t2 where j &amp;lt; 55;&lt;/p&gt;

&lt;p&gt;&amp;#8211; Following will show two qualifiers for T2 and three for T1&lt;br/&gt;
&amp;#8211; because transitive closure adds two new qualifiers, &quot;t2.j &amp;gt;= 23&quot;&lt;br/&gt;
&amp;#8211; and &quot;t1.i &amp;lt;= 30&quot; to the list.&lt;br/&gt;
select * from t1, t2 where t1.i = t2.j and t1.i &amp;gt;= 23 and t2.j &amp;lt;= 30;&lt;/p&gt;

&lt;p&gt;&amp;#8211; But if we put the constants on the left-hand side, we don&apos;t&lt;br/&gt;
&amp;#8211; detect the transitive closure and thus we have a single qualifier&lt;br/&gt;
&amp;#8211; for T2 and only two qualifiers for T1.&lt;br/&gt;
select * from t1, t2 where t1.i = t2.j and 23 &amp;lt;= t1.i and 30 &amp;gt;= t2.j;&lt;/p&gt;

&lt;p&gt;The above two queries should in theory show the same query plan--but if we execute the above statements while logging query plans, we&apos;ll see a difference (as explained in the sql comments above).&lt;/p&gt;

&lt;p&gt;I did a quick scan of the various branches and found that this incorrect logic appears in every branch back to 10.0 (hence the massive &quot;Affects Versions&quot; list).  That said, the result of this bug isn&apos;t an error nor is it wrong results, so I&apos;m just marking it &quot;Minor&quot;.&lt;/p&gt;

&lt;p&gt;The fix looks to be pretty straightforward....&lt;/p&gt;</description>
                <environment></environment>
        <key id="12361785">DERBY-2282</key>
            <summary>Incorrect &quot;transitive closure&quot; logic leads to inconsistent behavior for binary comparison predicates.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Feb 2007 18:45:54 +0000</created>
                <updated>Fri, 21 Jan 2011 17:49:41 +0000</updated>
                            <resolved>Mon, 14 Dec 2009 15:36:23 +0000</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.1.3.1</version>
                    <version>10.1.3.2</version>
                    <version>10.1.3.3</version>
                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.2.2.1</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12727759" author="rhillegas" created="Mon, 6 Jul 2009 21:18:15 +0100"  >&lt;p&gt;Triaged for 10.5.2: assigned normal urgency, noted that a repro is attached, flagged as wrong query result.&lt;/p&gt;</comment>
                            <comment id="12747643" author="knutanders" created="Tue, 25 Aug 2009 22:08:14 +0100"  >&lt;p&gt;Removed wrong query result flag since the bug doesn&apos;t cause wrong results, it only produces a suboptimal plan. Also flagged &quot;known fix&quot; since the bug description explains how to fix the broken logic.&lt;/p&gt;</comment>
                            <comment id="12747927" author="knutanders" created="Wed, 26 Aug 2009 14:10:42 +0100"  >&lt;p&gt;I&apos;m assuming that the straightforward fix mentioned in the bug description is to swap left and right in the broken else if branch. But if we do that the second query starts returning an empty result (it&apos;s supposed to return one row). I believe this is because BinaryOperatorNode.swapOperands() only swaps the operands and doesn&apos;t actually turn the operator around. This means 23 &amp;lt;= t1.i is rewritten to t1.i &amp;lt;= 23, which is not an equivalent expression.&lt;/p&gt;</comment>
                            <comment id="12747931" author="knutanders" created="Wed, 26 Aug 2009 14:15:55 +0100"  >&lt;p&gt;The attachement test.diff contains a JUnit test that I used to test it. Right now, it fails because the second query&apos;s plan doesn&apos;t have the expected operators. If left and right are swapped in the broken if clause, it fails because the query returns wrong results.&lt;/p&gt;</comment>
                            <comment id="12784802" author="knutanders" created="Wed, 2 Dec 2009 12:56:04 +0000"  >&lt;p&gt;Here&apos;s a patch that addresses the issue by changing the else-if condition as suggested, and by swapping the operands and changing the operator type if necessary.&lt;/p&gt;

&lt;p&gt;The method BinaryOperatorNode.swapOperands(), which only works if the operator is symmetric, is no longer used, and it is therefore removed. Instead, a new method called getSwappedEquivalent() (in the lack of a better name, other suggestions are welcome) was added to BinaryComparisonOperatorNode. This method is modelled after getNegation() and creates a new node with the left and right operands swapped, and it changes the operator type to preserve the meaning of the expression (&amp;lt; is changed to &amp;gt;, = is kept as it is, &amp;gt;= is changed to &amp;lt;=, etc).&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly.&lt;/p&gt;</comment>
                            <comment id="12784806" author="knutanders" created="Wed, 2 Dec 2009 13:03:59 +0000"  >&lt;p&gt;The check for constants on the right side of the operator check for both ConstantNode and ParameterNode, whereas the check for constants on the left side check for ConstantNode only. Should the else-if condition also check for ParameterNode for completeness?&lt;/p&gt;</comment>
                            <comment id="12784835" author="bryanpendleton" created="Wed, 2 Dec 2009 14:14:04 +0000"  >&lt;p&gt;   (&amp;lt; is changed to &amp;gt;, = is kept as it is, &amp;gt;= is changed to &amp;lt;=, etc)&lt;/p&gt;

&lt;p&gt;getInverseNode()?      getReverseNode()?  &lt;/p&gt;

&lt;p&gt;getEquivalentNodeWithSwappedOperands() seems far too long &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think that getSwappedEquivalent is a pretty good name, actually.&lt;/p&gt;</comment>
                            <comment id="12784895" author="knutanders" created="Wed, 2 Dec 2009 16:56:14 +0000"  >&lt;p&gt;Thanks for the suggestions, Bryan. getReverseNode() sounds like a good alternative. I&apos;m not sure about getInverseNode(), since &quot;invert&quot; is an overloaded term (it is sometimes even used as a synonym for &quot;negate&quot;, which is the opposite of what we&apos;re doing here). I think I&apos;ll stick to getSwappedEquivalent() for now, since it highlights both that we swap the operands and that the returned node should be equivalent to the node on which it is being called. But I&apos;m sure there must be a technical term for this transformation...&lt;/p&gt;</comment>
                            <comment id="12785693" author="bryanpendleton" created="Fri, 4 Dec 2009 01:06:30 +0000"  >&lt;p&gt;Is this a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-813&quot; title=&quot;Clean up coding error in searchClauseTransitiveClosure method in PredicateList.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-813&quot;&gt;&lt;del&gt;DERBY-813&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="12785825" author="knutanders" created="Fri, 4 Dec 2009 09:07:16 +0000"  >&lt;p&gt;Yes, I believe it is. Since &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-813&quot; title=&quot;Clean up coding error in searchClauseTransitiveClosure method in PredicateList.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-813&quot;&gt;&lt;del&gt;DERBY-813&lt;/del&gt;&lt;/a&gt; is a sub-task of a closed issue, it&apos;s probably best to close the sub-task and continue the work on this top-level issue.&lt;/p&gt;</comment>
                            <comment id="12785871" author="knutanders" created="Fri, 4 Dec 2009 11:04:32 +0000"  >&lt;p&gt;I committed the 1a patch to trunk with revision 887156.&lt;/p&gt;

&lt;p&gt;Regarding my previous comment about checking for ParameterNode as well, I see that it&apos;s also mentioned by Satheesh in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-813&quot; title=&quot;Clean up coding error in searchClauseTransitiveClosure method in PredicateList.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-813&quot;&gt;&lt;del&gt;DERBY-813&lt;/del&gt;&lt;/a&gt;. I will prepare a follow-up patch which handles ParameterNode and adds a test for that case.&lt;/p&gt;</comment>
                            <comment id="12785972" author="dagw" created="Fri, 4 Dec 2009 15:53:12 +0000"  >&lt;p&gt;+1, would be nice to handle the ParameterNode case as well &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Patch looks good.&lt;/p&gt;</comment>
                            <comment id="12789186" author="knutanders" created="Fri, 11 Dec 2009 09:18:39 +0000"  >&lt;p&gt;Unsetting &quot;Patch Available&quot; since the first patch was committed.&lt;/p&gt;</comment>
                            <comment id="12789192" author="knutanders" created="Fri, 11 Dec 2009 09:25:05 +0000"  >&lt;p&gt;Attaching a new patch (2a) which enables rewriting of predicates with parameters on the left-hand side. The patch also adds a test case to verify that the rewriting is actually done.&lt;/p&gt;

&lt;p&gt;I have only run PredicateTest on the patch, so I&apos;m not setting Patch Available yet.&lt;/p&gt;</comment>
                            <comment id="12789452" author="knutanders" created="Fri, 11 Dec 2009 18:51:23 +0000"  >&lt;p&gt;All the regression tests ran cleanly. Setting patch available.&lt;/p&gt;</comment>
                            <comment id="12790207" author="knutanders" created="Mon, 14 Dec 2009 15:36:23 +0000"  >&lt;p&gt;Committed revision 890370.&lt;br/&gt;
Resolving the issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12327633">DERBY-813</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12426664" name="d2282-1a.diff" size="12068" author="knutanders" created="Wed, 2 Dec 2009 12:56:04 +0000"/>
                            <attachment id="12426663" name="d2282-1a.stat" size="498" author="knutanders" created="Wed, 2 Dec 2009 12:56:04 +0000"/>
                            <attachment id="12427695" name="d2282-2a.diff" size="3858" author="knutanders" created="Fri, 11 Dec 2009 09:25:05 +0000"/>
                            <attachment id="12427694" name="d2282-2a.stat" size="162" author="knutanders" created="Fri, 11 Dec 2009 09:25:05 +0000"/>
                            <attachment id="12417731" name="test.diff" size="5063" author="knutanders" created="Wed, 26 Aug 2009 14:15:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Jul 2009 20:18:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10426"><![CDATA[Known fix]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>