<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:41:50 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2354/DERBY-2354.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2354] Unable to perform select query using DISTINCT on a read-only database</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2354</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;It is not possible to perform queries using DISTINCT on a read-only database packaged in a zip file. This generates the following error:&lt;/p&gt;

&lt;p&gt;ERROR 40XD1: Container was opened in read-only mode.   &lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseContainer.use(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseContainerHandle.useContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.openContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.openContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.addContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.addContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.Heap.create(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.createConglomerate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.createConglomerate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.DiskHashtable.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDisk(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.add_row_to_hash_table(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.put(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeScan.fetchSet(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.BackingStoreHashTableFromScan.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.createBackingStoreHashtableFromScan(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.HashScanResultSet.openCore(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(Unknown Source)&lt;br/&gt;
	at DerbyTest.main(DerbyTest.java:29)&lt;/p&gt;

&lt;p&gt;The problem can be reproduced using the attached java program and the following database file:&lt;br/&gt;
&lt;a href=&quot;http://ftp2.bigcat.unimaas.nl/~thomas.kelder/derbytest/testdb.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ftp2.bigcat.unimaas.nl/~thomas.kelder/derbytest/testdb.zip&lt;/a&gt;.&lt;br/&gt;
Both the &apos;derby.storage.tempDirectory&apos; and &apos;derby.stream.error.file&apos; properties are set to writable locations, as advised in the help file.&lt;/p&gt;

&lt;p&gt;Also see derby-user mailing list thread: &lt;a href=&quot;http://article.gmane.org/gmane.comp.apache.db.derby.user/6123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://article.gmane.org/gmane.comp.apache.db.derby.user/6123&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;This appears to be a bug, possibly a regression.  When I converted your&lt;br/&gt;
DB to10.0 everything worked fine even when I did NOT set the properties&lt;br/&gt;
for tempDirectory and error.file (hmmm..).  When I switched to using the&lt;br/&gt;
10.1  or 10.2 jars and accessed the very same database the 40XD1 ERROR&lt;br/&gt;
happened.&quot; (Stanley Bradbury)&lt;/p&gt;


</description>
                <environment>Reproduced in WinXP professional, Linux (Ubuntu 6.10) with Sun Java 5.0</environment>
        <key id="12363136">DERBY-2354</key>
            <summary>Unable to perform select query using DISTINCT on a read-only database</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="thomaskelder">Thomas Kelder</reporter>
                        <labels>
                            <label>derby_triage10_5_2</label>
                    </labels>
                <created>Mon, 19 Feb 2007 13:20:21 +0000</created>
                <updated>Wed, 26 Sep 2012 05:05:51 +0100</updated>
                            <resolved>Tue, 11 Sep 2012 22:50:52 +0100</resolved>
                                    <version>10.2.2.0</version>
                                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="12474159" author="thomaskelder" created="Mon, 19 Feb 2007 13:21:29 +0000"  >&lt;p&gt;Small java program that reproduces this problem. Use this database file:&lt;br/&gt;
&lt;a href=&quot;http://ftp2.bigcat.unimaas.nl/~thomas.kelder/derbytest/testdb.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ftp2.bigcat.unimaas.nl/~thomas.kelder/derbytest/testdb.zip&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12474167" author="oysteing" created="Mon, 19 Feb 2007 13:41:53 +0000"  >&lt;p&gt;The stack trace indicates that this happens when a BackingStoreHashtable gets too large and needs to be spilled to disk.  Since the DB is read-only, it is not permitted to create a container for this Hashtable. I guess the Hashtable is used to find the distinct records in the result set, and that Derby needs to allow such files to be created.&lt;/p&gt;</comment>
                            <comment id="12611322" author="kmarsden" created="Mon, 7 Jul 2008 21:25:32 +0100"  >&lt;p&gt;Do you have this problem if you set derby.storage.tempDirectory per&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/devguide/tdevdeploy26887.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/devguide/tdevdeploy26887.html&lt;/a&gt; ?&lt;/p&gt;
</comment>
                            <comment id="12613487" author="viyer" created="Tue, 15 Jul 2008 00:29:58 +0100"  >&lt;p&gt;Setting the derby.storage.tempDirectory does not get past this problem. &lt;/p&gt;</comment>
                            <comment id="12727741" author="rhillegas" created="Mon, 6 Jul 2009 21:03:05 +0100"  >&lt;p&gt;Triaged for 10.5.2: assigned normal urgency and noted that a repro is attached.&lt;/p&gt;</comment>
                            <comment id="13018238" author="knutanders" created="Mon, 11 Apr 2011 09:26:16 +0100"  >&lt;p&gt;It looks like the test db can no longer be downloaded, so I&apos;m uploading a new repro for the bug. Follow these steps to reproduce:&lt;/p&gt;

&lt;p&gt;1) Create a database by running the d2354-createdb.sql script in ij:&lt;/p&gt;

&lt;p&gt;java -jar derbyrun.jar ij d2354-createdb.sql&lt;/p&gt;

&lt;p&gt;2) Put the database in a zip file:&lt;/p&gt;

&lt;p&gt;zip -r testdb.zip db&lt;/p&gt;

&lt;p&gt;3) Run the d2354-repro.sql script in ij. Set maximum heap size to make sure the hash table will have to spill to disk:&lt;/p&gt;

&lt;p&gt;java -Xmx16M -jar derbyrun.jar ij d2354-repro.sql&lt;/p&gt;</comment>
                            <comment id="13018240" author="knutanders" created="Mon, 11 Apr 2011 09:36:25 +0100"  >&lt;p&gt;Note that the error message changed in Derby 10.3. In 10.2 the following error was raised (same as in the original report):&lt;/p&gt;

&lt;p&gt;ij version 10.2&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:jar:(testdb.zip)db&apos;;&lt;br/&gt;
ij&amp;gt; select distinct id from t;&lt;br/&gt;
ERROR 40XD1: Container was opened in read-only mode.&lt;/p&gt;

&lt;p&gt;Derby 10.3 and later instead fails like this:&lt;/p&gt;

&lt;p&gt;ij version 10.9&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:jar:(testdb.zip)db&apos;;&lt;br/&gt;
ij&amp;gt; select distinct id from t;&lt;br/&gt;
ERROR XSAI3: Feature not implemented.&lt;/p&gt;

&lt;p&gt;Stack trace from the latest development sources:&lt;/p&gt;

&lt;p&gt;ERROR XSAI3: Feature not implemented.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:276)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.ReadOnly.checkVersion(ReadOnly.java:458)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.checkVersion(RawStore.java:2255)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.checkVersion(RAMTransaction.java:2166)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.createConglomerate(HeapConglomerateFactory.java:175)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.createConglomerate(RAMTransaction.java:823)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.DiskHashtable.&amp;lt;init&amp;gt;(DiskHashtable.java:123)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.spillToDisk(BackingStoreHashtable.java:483)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.add_row_to_hash_table(BackingStoreHashtable.java:400)&lt;br/&gt;
	at org.apache.derby.iapi.store.access.BackingStoreHashtable.putRow(BackingStoreHashtable.java:728)&lt;br/&gt;
	at org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchRows(GenericScanController.java:803)&lt;br/&gt;
	at org.apache.derby.impl.store.access.conglomerate.GenericScanController.fetchSet(GenericScanController.java:1268)&lt;br/&gt;
	at org.apache.derby.impl.store.access.BackingStoreHashTableFromScan.&amp;lt;init&amp;gt;(BackingStoreHashTableFromScan.java:117)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.createBackingStoreHashtableFromScan(RAMTransaction.java:1355)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.HashScanResultSet.openCore(HashScanResultSet.java:262)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:255)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:630)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:229)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.tools.run.main(run.java:53)&lt;/p&gt;

&lt;p&gt;(The message changed after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2537&quot; title=&quot;implement pushing collation info to store, storing collation info in store metadata, and creating templates based on store metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2537&quot;&gt;&lt;del&gt;DERBY-2537&lt;/del&gt;&lt;/a&gt;.)&lt;/p&gt;</comment>
                            <comment id="13018425" author="knutanders" created="Mon, 11 Apr 2011 17:47:30 +0100"  >&lt;p&gt;Attaching a patch that may fix the problem (derby-2354-1a.diff). It makes the repro pass in my environment, but it&apos;s not tested in any other way yet.&lt;/p&gt;

&lt;p&gt;It makes the following changes:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/access/btree/index/B2IFactory.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/store/access/heap/HeapConglomerateFactory.java&lt;/p&gt;

&lt;p&gt;Short-circuit the checkVersion() calls if it&apos;s a read-only database trying to create a temporary conglomerate. This was needed in order to get rid of the &quot;feature not supported&quot; errors seen in 10.3 and later.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/raw/data/InputStreamContainer.java&lt;/p&gt;

&lt;p&gt;When reusing a container cache entry that contains an InputStreamContainer (a read-only container), replace it with a TempRAFContainer if the new conglomerate is a temporary conglomerate.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/raw/data/TempRAFContainer.java&lt;/p&gt;

&lt;p&gt;Use factory methods instead of creating RAFContainer objects directly when replacing a TempRAFContainer with a non-temporary container object. This allows switching back from TempRAFContainer to InputStreamContainer for read-only/zip databases. (The opposite of the situation handled by the change in InputStreamContainer.)&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/raw/data/FileContainer.java&lt;/p&gt;

&lt;p&gt;Remove implementations of setIdentity() and createIdentity() since they are now implemented by all of FileContainer&apos;s sub-classes. (It would probably make more sense to move the implementations in RAFContainer and InputStreamContainer back into FileContainer, since they&apos;re essentially identical now.)&lt;/p&gt;</comment>
                            <comment id="13018801" author="knutanders" created="Tue, 12 Apr 2011 13:15:24 +0100"  >&lt;p&gt;All the regression tests passed with the 1a patch.&lt;/p&gt;

&lt;p&gt;I&apos;m uploading a new patch (1b) with the following changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added a test case to DBInJarTest. The new test case performs a SELECT DISTINCT and a hash join in a read-only database contained in a jar file. It fails without the fix.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added some comments to the new code.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Moved setIdentity() and createIdentity() from RAFContainer to FileContainer so that they are inherited by InputStreamContainer.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed the changes in InputStreamContainer since the functionality is now provided by the base class (FileContainer).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve started a new test run with the updated patch.&lt;/p&gt;</comment>
                            <comment id="13018937" author="dagw" created="Tue, 12 Apr 2011 18:46:32 +0100"  >&lt;p&gt;As far as I remember, scrollable, updatable result sets may also spill to disk. This begs the question, is read-only database an issue for that feature, too? And if so, does this help patch help for that as well?&lt;/p&gt;</comment>
                            <comment id="13019328" author="knutanders" created="Wed, 13 Apr 2011 14:54:02 +0100"  >&lt;p&gt;Scrollable updatable result sets would run into problems on read-only database when trying to update the database. Scrollable read-only result sets are supposed to work, but as you suspected, they have the same problem with hash tables spilling to disk. In fact, there was a thread on derby-user about it a while ago: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-user/200812.mbox/%3C20957328.post@talk.nabble.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-user/200812.mbox/%3C20957328.post@talk.nabble.com%3E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The good news is that the patch seems to fix that problem too. I&apos;ve added a test for it and uploaded a new patch (1c).&lt;/p&gt;

&lt;p&gt;All the regression tests passed with the 1c patch.&lt;/p&gt;</comment>
                            <comment id="13019342" author="bryanpendleton" created="Wed, 13 Apr 2011 15:09:23 +0100"  >&lt;p&gt;Sorry Knut Anders, I haven&apos;t been paying attention: does your patch fix the problem by preventing &lt;br/&gt;
in-memory data structures from spilling to disk, returning an error in that case? Or does your&lt;br/&gt;
patch fix the problem by allowing in-memory data structure to spill to disk, arranging to use a&lt;br/&gt;
temporary writable disk location rather than the read-only location of the database itself?&lt;/p&gt;</comment>
                            <comment id="13019539" author="knutanders" created="Wed, 13 Apr 2011 21:43:42 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;The patch fixes the problem by spilling to disk on a writable location. It uses the derby.storage.tempDirectory if it&apos;s set. Otherwise, some system-defined location is used. On my system, the temporary files end up in directories under /var/tmp.&lt;/p&gt;

&lt;p&gt;One other thing that&apos;s fixed by the patch, is a regression after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2537&quot; title=&quot;implement pushing collation info to store, storing collation info in store metadata, and creating templates based on store metadata&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2537&quot;&gt;&lt;del&gt;DERBY-2537&lt;/del&gt;&lt;/a&gt;. Read-only databases that were not stored in a jar or a zip used to work even when the hash tables spilled to disk (with one caveat: you had to set derby.storage.tempDirectory or make the database&apos;s tmp directory writable, since it would not use the system temp dir automatically). In 10.3, it started raising this &quot;feature not implemented&quot; error because of the checkVersion() calls in B2IFactory and HeapConglomerateFactory. Since the patch makes read-only databases stop calling checkVersion() in those factories, these databases will get their pre-10.3 behaviour back.&lt;/p&gt;</comment>
                            <comment id="13019645" author="bryanpendleton" created="Thu, 14 Apr 2011 01:54:50 +0100"  >&lt;p&gt;Good, that sounds like a good approach.&lt;/p&gt;

&lt;p&gt;I looked through the patch and it looks fine to me. Thanks for adding the comments&lt;br/&gt;
near the checkVersion calls; they make sense and are clear.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13019742" author="knutanders" created="Thu, 14 Apr 2011 10:08:32 +0100"  >&lt;p&gt;Thanks, Bryan. Committed revision 1092067.&lt;/p&gt;</comment>
                            <comment id="13020259" author="knutanders" created="Fri, 15 Apr 2011 11:04:13 +0100"  >&lt;p&gt;Merged the fix to the 10.8 branch and committed revision 1092649.&lt;/p&gt;</comment>
                            <comment id="13453408" author="kmarsden" created="Tue, 11 Sep 2012 21:59:29 +0100"  >&lt;p&gt;Reopen to mark affects version 10.5 for possible backport.&lt;/p&gt;</comment>
                            <comment id="13460160" author="mamtas" created="Fri, 21 Sep 2012 04:21:27 +0100"  >&lt;p&gt;I will work on backporting this&lt;/p&gt;</comment>
                            <comment id="13462348" author="mamtas" created="Tue, 25 Sep 2012 02:42:49 +0100"  >&lt;p&gt;Backported into 10.7 with revision 1389677&lt;/p&gt;</comment>
                            <comment id="13462871" author="mamtas" created="Tue, 25 Sep 2012 16:30:51 +0100"  >&lt;p&gt;Backported into 10.6 with revision 1389924&lt;/p&gt;</comment>
                            <comment id="13463495" author="mamtas" created="Wed, 26 Sep 2012 04:45:02 +0100"  >&lt;p&gt;Backported into 10.5 with revision 1390271&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12351502" name="DerbyTest.java" size="991" author="thomaskelder" created="Mon, 19 Feb 2007 13:21:29 +0000"/>
                            <attachment id="12475986" name="d2354-createdb.sql" size="399" author="knutanders" created="Mon, 11 Apr 2011 09:26:16 +0100"/>
                            <attachment id="12475987" name="d2354-repro.sql" size="69" author="knutanders" created="Mon, 11 Apr 2011 09:26:16 +0100"/>
                            <attachment id="12476015" name="derby-2354-1a.diff" size="6765" author="knutanders" created="Mon, 11 Apr 2011 17:47:30 +0100"/>
                            <attachment id="12476113" name="derby-2354-1b.diff" size="13277" author="knutanders" created="Tue, 12 Apr 2011 13:15:24 +0100"/>
                            <attachment id="12476237" name="derby-2354-1c.diff" size="13785" author="knutanders" created="Wed, 13 Apr 2011 14:54:02 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Feb 2007 13:41:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23016</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy09jr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35365</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>