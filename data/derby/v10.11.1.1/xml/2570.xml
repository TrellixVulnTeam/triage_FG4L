<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2570/DERBY-2570.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2570] Create a utility which generates Release Notes</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2570</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This proposal summarizes an off-list conversation among Myrna van Lunteren, Bernt Johnsen, Andrew McIntyre, and myself.&lt;/p&gt;

&lt;p&gt;Currently, there is a template for release notes in the top level directory of the code tree. Actually filling in this template is a time-consuming, error-prone process. We would like to automate this process as much as possible. We believe it ought to be possible to generate the Release Notes given the following inputs:&lt;/p&gt;

&lt;p&gt;1) A high-level description of the release. The Release Manager would write this description, based on a template.&lt;/p&gt;

&lt;p&gt;2) An xml report produced by a JIRA filter. The filter would list all of the JIRAs addressed by the release.&lt;/p&gt;

&lt;p&gt;In order for this to work, we would need for the community to agree on conventions for the release notes which are attached to JIRAs, viz.,  the JIRAs whose &quot;Release Note Needed&quot; toggles are turned on. These JIRA-specific notes become items in the Issues section of the final Release Notes. Each of these items calls the reader&apos;s attention to a significant topic involving Derby&apos;s behavior, that behavior&apos;s compatibility with previous releases, and adjustments which the user may need to make to her applications.&lt;/p&gt;

&lt;p&gt;The following approach makes sense to us:&lt;/p&gt;

&lt;p&gt;A) The community will agree on an html template for these notes.&lt;/p&gt;

&lt;p&gt;B) The note-writer will fill in this template and attach it to the JIRA using a canonical file name, say &quot;releaseNote.html&quot;.&lt;/p&gt;

&lt;p&gt;C) Various iterations of the note may be needed.&lt;/p&gt;

&lt;p&gt;D) The utility for generating Release Notes will grab the latest rev of &quot;releaseNote.html&quot; attached to the JIRA.&lt;/p&gt;

&lt;p&gt;This effort involves at least two major steps:&lt;/p&gt;

&lt;p&gt;I) Getting the community to agree to these note-writing conventions.&lt;/p&gt;

&lt;p&gt;II) Writing the Release Note generator.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12367685">DERBY-2570</key>
            <summary>Create a utility which generates Release Notes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 20 Apr 2007 16:24:45 +0100</created>
                <updated>Fri, 6 Jul 2007 17:31:17 +0100</updated>
                            <resolved>Fri, 6 Jul 2007 17:31:17 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Build tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12490384" author="bryanpendleton" created="Fri, 20 Apr 2007 16:29:24 +0100"  >&lt;p&gt;If the release notes are stored in Jira (a sensible, place, I think), then why do they&lt;br/&gt;
also need to be stored in the code tree? Seems to violate the Don&apos;t Repeat Yourself principle...&lt;/p&gt;</comment>
                            <comment id="12490922" author="rhillegas" created="Mon, 23 Apr 2007 14:05:17 +0100"  >&lt;p&gt;Thanks for bringing this up, Bryan. As part of this work, I think that we should remove RELEASE_NOTES.html from source control. &lt;/p&gt;</comment>
                            <comment id="12490944" author="djd" created="Mon, 23 Apr 2007 15:34:42 +0100"  >&lt;p&gt;&amp;gt; I think that we should remove RELEASE_NOTES.html from source control.&lt;/p&gt;

&lt;p&gt;-1&lt;/p&gt;

&lt;p&gt;An Apache open &lt;b&gt;source&lt;/b&gt; release is a snapshot of the source at a specific revision, thus all artifacts of the release need to be in svn.&lt;/p&gt;</comment>
                            <comment id="12490969" author="rhillegas" created="Mon, 23 Apr 2007 16:30:42 +0100"  >&lt;p&gt;&amp;gt; An Apache open &lt;b&gt;source&lt;/b&gt; release is a snapshot of the source at a specific revision, thus all artifacts of the release need to be in svn.&lt;/p&gt;

&lt;p&gt;The release notes already appear under svn in the distribution zips and tars as well as on the release download page. This was true before RELEASE_NOTES.html was added to the code tree in 10.2. We would simply be going back to the 10.1 state of affairs. Were we violating Apache process back then?&lt;/p&gt;

&lt;p&gt;I think the issue may be: Are the release notes source or are they a build artifact? I&apos;m viewing them as a build artifact. The sources for this aftifact are:&lt;/p&gt;

&lt;p&gt;o The state of JIRA at some point in time.&lt;/p&gt;

&lt;p&gt;o A summary written by the release manager.&lt;/p&gt;

&lt;p&gt;Perhaps the summary could be placed under source control?&lt;/p&gt;</comment>
                            <comment id="12490990" author="fuzzylogic" created="Mon, 23 Apr 2007 18:02:02 +0100"  >&lt;p&gt;The release notes that are included in the release are neither what we currently have checked into the trunk as the current RELEASE_NOTES.html, nor are they in JIRA in an easily manipulable format. The release notes that are included in the release are going to be (in most cases) the work of the release manager, including a summary, the list of application impacts and long form release notes, and a list of bug fixes and new features and such. The goal of this JIRA is to eliminate the mechanical steps to compiling the actual release notes that will become part of the release. It should be, once completed, checked into svn. Just as with the last several releases, long form release notes should be put into JIRA, although we would now ask that contributors attach them to JIRA as attachments using a template, instead of free form in the comments.&lt;/p&gt;

&lt;p&gt;So:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the current RELEASE_NOTES.html in the trunk should be moved elsewhere, as it is a template for the final product and not an actual set of release notes.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a new template providing an outline of HTML markup for the long form release notes should be added in the same place (tools/release/templates? tools/templates?) along with instructions for filling it out and attaching it to JIRA.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;create a tool which compiles the long and short form release notes from JIRA, and incorporates a hand-written (or partially generated) summary provided by the release manager who will be running the tool. Previously this had been done by hand and the work described in this JIRA aims to alleviate this manual step for the release manager.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the compiled release notes would be put up for review and checked into svn before release artifacts are generated.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The only difference from previous releases is that we would ask contributors to provide long form release notes using the template described above and attach it to JIRA, so that the automated tool could scrape it out of JIRA and compile the release notes which much less manual effort. The tool could check that each JIRA with &apos;release note needed&apos; checked contained a long form release note, and if the contributor does not provide one, or is no longer interested in providing one, then it will still be up to the release manager to get the release note into the necessary format so that it is included in the release notes.&lt;/p&gt;

&lt;p&gt;To address Bryan&apos;s concern, a long form release note attached to JIRA may be part of one or several releases. A compiled set of release notes with description (including specific version number), summary, and some set of long form notes and short form bug fixes and features is meant to be distributed with one and only one release. To address Dan&apos;s concern, I do believe that this compiled set of release notes should be checked into svn before the release artifacts are generated so that the final product becomes a part of the source distribution and included in the subversion history.&lt;/p&gt;</comment>
                            <comment id="12491027" author="rhillegas" created="Mon, 23 Apr 2007 20:17:15 +0100"  >&lt;p&gt;Thanks to Bryan, Myrna, Dan, and Andrew for the discussion.&lt;/p&gt;

&lt;p&gt;I think this is an improvement on what I was imagining. I was hoping that we could eliminate another discrete, manual step in release generation. To that end, I was hoping that when you pushed the big GenerateRelease button, the release notes would be generated along with the user guides, zips, signatures, etc..&lt;/p&gt;

&lt;p&gt;However, based on today&apos;s discussion, I see now that something related to the release notes has to be checked into svn. Maybe the release notes themselves, maybe their sources. I agree with Andrew that it is probably simpler to check in the release notes themselves. For me the clincher argument is the need to review the release notes. Checking them into the codeline fits this process into our familiar review cycle.&lt;/p&gt;

&lt;p&gt;For the remainder of this comment, I want to split the overloaded term &quot;release notes&quot; into the following separate concepts:&lt;/p&gt;

&lt;p&gt;ItemNote - This is the JIRA-specific description of a significant issue and its resolution/workaround. This description is attached to the JIRA.&lt;/p&gt;

&lt;p&gt;Overview - This is the release-specific summary which the release manager writes.&lt;/p&gt;

&lt;p&gt;ReleasePamphlet - This is the full description of the release, including the overview, the list of fixed bugs, and the list of significant ItemNotes. This is what is currently checked into the branch as RELEASE_NOTES.html, shipped in our distributions, and included on the release download page.&lt;/p&gt;

&lt;p&gt;I can see the need to provide templates for the ItemNote and Overview. Between html comments and exlanatory sample text, I hope that these templates can be self-describing.&lt;/p&gt;

&lt;p&gt;I think that tools/release/templates is a fine place to park the 2 new templates. As far as I&apos;m concerned, the output of the pamphlet generator, RELEASE_NOTES.html, can continue to live where it does now. We can stub it out so that it is clear that you should not hand-edit the file.&lt;/p&gt;</comment>
                            <comment id="12491045" author="rhillegas" created="Mon, 23 Apr 2007 21:28:33 +0100"  >&lt;p&gt;Attaching a first rev of the ItemNote template: releaseNote.html. What do you think?&lt;/p&gt;</comment>
                            <comment id="12491046" author="rhillegas" created="Mon, 23 Apr 2007 21:31:20 +0100"  >&lt;p&gt;Note that if you just click on releaseNote.html, you won&apos;t see much: just the headings and stub text. Html comments explain how to fill in the sections.&lt;/p&gt;</comment>
                            <comment id="12491056" author="djd" created="Mon, 23 Apr 2007 21:54:06 +0100"  >&lt;p&gt;On the template:&lt;/p&gt;

&lt;p&gt;Looking at how these headings were used in the 10.2 release notes I think there needs to be some clarification of what they actually mean.&lt;br/&gt;
This would lead to consistency in the release notes, maybe the template could include the defintions.&lt;/p&gt;

&lt;p&gt;For example looking at the release notes for 10.2&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/releases/release-10.2.2.0.cgi&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/releases/release-10.2.2.0.cgi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1384&quot; title=&quot;Increase default BLOB/CLOB length to maximum supported (2G?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1384&quot;&gt;&lt;del&gt;DERBY-1384&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
 &quot;Problem - Maximum BLOB/CLOB length has increased to 2G-1&quot;&lt;/p&gt;

&lt;p&gt;That&apos;s not a problem, I think the problem is really &quot;Application may allow BLOB/CLOB values previously rejected&quot;.&lt;/p&gt;

&lt;p&gt;&quot;Symptoms&quot; sometimes describes to old behaviour (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1295&quot; title=&quot;Result sets of type TYPE_SCROLL_INSENSITIVE should not implicitly close due to positioning in autocommit mode&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1295&quot;&gt;&lt;del&gt;DERBY-1295&lt;/del&gt;&lt;/a&gt;), I would think it would describe symptoms the application will see when using the new software. &lt;/p&gt;

&lt;p&gt;&quot;Cause&quot; seems a confused section, I&apos;m not really sure what its intention is. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-822&quot; title=&quot;Client driver: Pre-fetch data on executeQuery()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-822&quot;&gt;&lt;del&gt;DERBY-822&lt;/del&gt;&lt;/a&gt; seems to have a clear cause of the issue, but then it overlaps with information given in the preceeding symptoms section. Sometimes it seems to just describe old behaviour which I&apos;m not sure is relevant here.&lt;/p&gt;

&lt;p&gt;&quot;Solution&quot; is sometimes used to describe the change made in Derby (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1652&quot; title=&quot;Update trigger updating the same rows as the original update does not  throw an exception ERROR 54038: &amp;quot;Maximum depth of nested triggers was exceeded&amp;quot; as it should&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1652&quot;&gt;&lt;del&gt;DERBY-1652&lt;/del&gt;&lt;/a&gt;) and sometimes the solution the application needs to make (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1867&quot; title=&quot;Document algorithm support required for using secmec 8(USRSSSBPWD) and limitation on ibm141 vm.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1867&quot;&gt;&lt;del&gt;DERBY-1867&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&quot;Workaround&quot; and &quot;Solution&quot; sometimes overlap&lt;/p&gt;</comment>
                            <comment id="12491067" author="djd" created="Mon, 23 Apr 2007 22:16:12 +0100"  >&lt;p&gt;One of the possible reasons for the inconsistency in the release notes may be the fact they are titled with the Jira issue number that lead to the change. This may be leading folks to document that issue, but really what needs to be documented is the change in behaviour &lt;b&gt;resulting&lt;/b&gt; from that issue.&lt;/p&gt;

&lt;p&gt;Also maybe even making the title of the section &quot;Issues&quot; is causing confusion. Many of the items listed are not &quot;issues&quot;, but improvements that might affect existing applications. This may be leading to inconsistencies in wording, especially for &quot;Solution&quot; and &quot;Workaround&quot;. Maybe a better name for &quot;Workaround&quot; would be something along the lines of &quot;Possible Application Changes Required&quot;&lt;/p&gt;

&lt;p&gt;A better name of the entire section could be something like &quot;Behaviour Changes from Previous Releases&quot;.&lt;/p&gt;

&lt;p&gt;Possible names for the individual item descriptions could be:&lt;/p&gt;

&lt;p&gt;Summary of Change&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;One line summary of change - e.g. Calls to rowUpdated(), rowDeleted(), and rowInserted() now forbidden on unpositioned, forward-only ResultSets.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Symptoms Seen by Applications Affected by Change&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;description of errors or change in behaviour the application might see.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Rationale for Change&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;why the change was made, e.g. to bring Derby in-line with the JDBC standard&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Possible Application Changes Required&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;describe re-coding require to either revert to the old behaviour or adjust to the new behaviour.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12491072" author="djd" created="Mon, 23 Apr 2007 22:25:58 +0100"  >&lt;p&gt;Ok - I now see the html comments in the template ... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think there is still confusion over what is being described:&lt;/p&gt;

&lt;p&gt;For &quot;Problems&quot;  &amp;amp; &quot;Symptoms&quot;  the text in upper-case is in the present tense, so I expect it to be about the current release, but the example given is in the past tense and about the previous release.&lt;/p&gt;

&lt;p&gt;I think moving away from &quot;Issue&quot; and towards &quot;Behaviour Change&quot; would help a great deal.&lt;/p&gt;



</comment>
                            <comment id="12491082" author="scotsmatrix" created="Mon, 23 Apr 2007 23:09:45 +0100"  >&lt;p&gt;What about a &quot;incompatibilities&quot; section for each issue (as appropriate) that addresses incompatibilities with previous versions of Derby?&lt;/p&gt;

&lt;p&gt;And although generated automatically, shouldn&apos;t there be an edit of the Release Notes after they are generated?  Something that a technical writer such as Kim or myself should do...&lt;/p&gt;</comment>
                            <comment id="12491309" author="rhillegas" created="Tue, 24 Apr 2007 15:50:33 +0100"  >&lt;p&gt;Thanks for the feedback, Dan and Laura. I have attached a new rev of releaseNote.html. This incorporates Dan&apos;s suggestions. It also includes an optional Incompatibilities section as Laura suggested.&lt;/p&gt;

&lt;p&gt;I like Dan&apos;s suggestion for renaming the Issues section.&lt;/p&gt;

&lt;p&gt;I think that it would be great if technical writers could get involved in improving RELEASE_NOTES.html. The problem, of course, is that hand-edits of that file may be clobbered the next time someone runs the pamphlet-generator. Perhaps we should also put the Overview under svn? If we did that, then other people could improve the following parts of the pamphlet:&lt;/p&gt;

&lt;p&gt;1) By editting a JIRA&apos;s one line summary, you affect the JIRA&apos;s summary as it appears in the pamphlet.&lt;/p&gt;

&lt;p&gt;2) By editting a JIRA&apos;s releaseNote.html, you affect what goes into the section on &quot;Behavior Changes from Previous Releases&quot;.&lt;/p&gt;

&lt;p&gt;3) By editting the Overview in svn, you affect what goes into the overall release description.&lt;/p&gt;

&lt;p&gt;Is that sufficient? Is there something else we should do to make it possible for technical writers to improve RELEASE_NOTES.html?&lt;/p&gt;</comment>
                            <comment id="12491345" author="djd" created="Tue, 24 Apr 2007 16:59:49 +0100"  >&lt;p&gt;&amp;gt; 1) By editting a JIRA&apos;s one line summary, you affect the JIRA&apos;s summary as it appears in the pamphlet.&lt;/p&gt;

&lt;p&gt;I think this is the wrong approach. For something that can affect existing applications it is the behaviour change resulting from the Jira entry not the entry itself.&lt;br/&gt;
For example,  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1384&quot; title=&quot;Increase default BLOB/CLOB length to maximum supported (2G?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1384&quot;&gt;&lt;del&gt;DERBY-1384&lt;/del&gt;&lt;/a&gt; in 10.2&lt;/p&gt;

&lt;p&gt;The summary  in Jira is:&lt;/p&gt;

&lt;p&gt;  Increase default BLOB/CLOB length to maximum supported (2G?)&lt;/p&gt;

&lt;p&gt;which was cleaned up (incorrectly) in the release notes as&lt;/p&gt;

&lt;p&gt;  Maximum BLOB/CLOB length has increased to 2G-1.&lt;/p&gt;

&lt;p&gt;But that&apos;s not what existing applications need to be aware of. They need to understand that due to this change columns that  are declared as BLOB/CLOB now will not reject values larger than 1M and if their application depended on that, they need to make changes.&lt;br/&gt;
Changing the summary for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1384&quot; title=&quot;Increase default BLOB/CLOB length to maximum supported (2G?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1384&quot;&gt;&lt;del&gt;DERBY-1384&lt;/del&gt;&lt;/a&gt; would be wrong, it&apos;s correct.&lt;br/&gt;
The summary for such a change in behaviour needs to highlight how it might affect/break applications so that an application developer is more likely to read it.&lt;/p&gt;

&lt;p&gt;Maybe separating the release notes from Jira and just have a single file release_notes.html file with the actual contents would work.&lt;/p&gt;</comment>
                            <comment id="12491353" author="rhillegas" created="Tue, 24 Apr 2007 17:27:01 +0100"  >&lt;p&gt;&amp;gt; 1) By editting a JIRA&apos;s one line summary, you affect the JIRA&apos;s summary as it appears in the pamphlet.&lt;/p&gt;

&lt;p&gt;I want to make sure that we&apos;re not talking past one another here. What the above comment refers to are the 1-line summaries which appear in RELEASE_NOTES.html in the section titled &quot;Bug Fixes&quot;.&lt;/p&gt;

&lt;p&gt;The particular example you cite (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1384&quot; title=&quot;Increase default BLOB/CLOB length to maximum supported (2G?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1384&quot;&gt;&lt;del&gt;DERBY-1384&lt;/del&gt;&lt;/a&gt;) is not a 1-line summary. Instead, it appears in 10.2&apos;s RELEASE_NOTES.html in the Issues section, with its own expanded ItemNote. Fine-tuning this ItemNote would be covered by:&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) By editting a JIRA&apos;s releaseNote.html, you affect what goes into the section on &quot;Behavior Changes from Previous Releases&quot;.&lt;/p&gt;

&lt;p&gt;For these issues, I&apos;m thinking that we wouldn&apos;t include the 1-line summary from the JIRA. Instead, the summary would be what appears in the ItemNote&apos;s &quot;Summary of Change&quot; section.&lt;/p&gt;

&lt;p&gt;Are you saying that we should not attach separate releaseNote.html files to affected JIRAs and should, instead, collect all the ItemNotes in a master file for the release? I can see some appeal in this--it certainly would simplify the process of generating the pamphlet. However, it would make it harder to track whether an ItemNote has actually been written for a JIRA which has been marked &quot;Release Note Needed&quot;.&lt;/p&gt;</comment>
                            <comment id="12494057" author="rhillegas" created="Mon, 7 May 2007 16:17:04 +0100"  >&lt;p&gt;Checked in releaseNotes.html at subversion revision 535894:&lt;/p&gt;

&lt;p&gt;A      tools/release/templates&lt;br/&gt;
A      tools/release/templates/releaseNote.html&lt;/p&gt;</comment>
                            <comment id="12495639" author="rhillegas" created="Mon, 14 May 2007 15:58:45 +0100"  >&lt;p&gt;Attaching a template file for the release summary. These are the facts which the Release Manager must supply to the pamphlet generator, including:&lt;/p&gt;

&lt;p&gt;1) Release IDs&lt;/p&gt;

&lt;p&gt;2) Details on the build environment&lt;/p&gt;

&lt;p&gt;3) Release overview&lt;/p&gt;

&lt;p&gt;4) Description of new features&lt;/p&gt;

&lt;p&gt;Hopefully, the comments in the template will give the Release Manager enough guidance.&lt;/p&gt;

&lt;p&gt;I like Laura&apos;s suggestion that the filled-in summary should be placed under source-control so that the community can word-smith the overview and the description of new features. I think it would be fine if the filled-in summary lived in trunk/releaseSummary.xml. Unless someone objects, that is where the build target will expect to find the summary.&lt;/p&gt;</comment>
                            <comment id="12496057" author="rhillegas" created="Tue, 15 May 2007 18:27:57 +0100"  >&lt;p&gt;Attaching derby-2570-v01.diff. This is a first version of the pamphlet generator. Please take it for a test-drive.&lt;/p&gt;

&lt;p&gt;A      releaseSummary.xml&lt;/p&gt;

&lt;p&gt;This is the release overview, which the Release Manager fills in. It is checked into the codeline so that other members of the community can help the Release Manager wordsmith the overview and description of new features.&lt;/p&gt;


&lt;p&gt;A      tools/release/templates/releaseSummaryTemplate.xml&lt;/p&gt;

&lt;p&gt;This is a template file for creating releaseSummary.xml. The template has &quot;???&quot; placeholders which the Release Manager should replace with real information.&lt;/p&gt;


&lt;p&gt;M      tools/release/build.xml&lt;/p&gt;

&lt;p&gt;This contains a new &quot;genrelnotes&quot; target for generating the pamphlet. This target assumes that you have defined the &quot;relnotes.src.reports&quot; variable in your ant.properties. This variable points at a directory which contains the following xml JIRA reports:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fixedBugsList.xml - This is the xml JIRA report of issues addressed by the release.&lt;/li&gt;
	&lt;li&gt;releaseNotesList.xml - This is the xml JIRA report of issues which have detailed release notes attached to them.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The &quot;genrelnotes&quot; target reads the above files, together with trunk/releaseSummary.xml and generates the pamphlet as trunk/RELEASE-NOTES.html.&lt;/p&gt;


&lt;p&gt;A      java/build/org/apache/derbyBuild/ReleaseNotesGenerator.java&lt;/p&gt;

&lt;p&gt;This is the ant task which generates the release notes from various inputs. You can run this as a standalone program, specifying the following arguments:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The name of the summary file describing the release (modelled on releaseSummary.xml).&lt;/li&gt;
	&lt;li&gt;The name of the xml JIRA report of issues fixed in this release.&lt;/li&gt;
	&lt;li&gt;The name of the xml JIRA report of issues which have detailed release notes attached to them.&lt;/li&gt;
	&lt;li&gt;The name of the html file which will hold the generated pamphlet.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;M      RELEASE-NOTES.html&lt;/p&gt;

&lt;p&gt;This is the pamphlet generated by running the tool. This shows you what the output looks like.&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------&lt;/p&gt;

&lt;p&gt;To run the tool, define &quot;relnotes.src.reports&quot; in your ant.properties and create the xml JIRA reports as described above in the comment on build.xml. Run the top level build script in order to build ReleaseNotesGenerator. Then cd to trunk/tools/release and type &quot;ant genrelnotes&quot;.&lt;/p&gt;

&lt;p&gt;The pamphlet generator attempts to connect to JIRA in order to grab the detailed release notes attached to significant issues. Before running the tool, it is worthwhile to try pinging issues.apache.org. If you can&apos;t ping issues.apache.org from a shell window, then the tool will exit. You may need to adjust your proxy and firewall settings.&lt;/p&gt;

&lt;p&gt;It would be nice if you didn&apos;t have to hand-generate the xml JIRA reports. Maybe the community could agree on some canonical JIRA filters which define these reports. Then the ReleaseNotesGenerator could prod JIRA to produce the reports. &lt;/p&gt;</comment>
                            <comment id="12496574" author="rhillegas" created="Thu, 17 May 2007 15:05:54 +0100"  >&lt;p&gt;Committed derby-2570-v01.diff at subversion revision 538929.&lt;/p&gt;</comment>
                            <comment id="12499255" author="myrna" created="Sat, 26 May 2007 00:15:53 +0100"  >&lt;p&gt;Attaching a patch that&lt;br/&gt;
1. hacks through Rick&apos;s elegant code to massage the issues accepted into the release notes bug fixing area to be only those that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;do not have fixversion listing the previous release&lt;/li&gt;
	&lt;li&gt;do not have fixversion listing 10.2.1.6 (this one is hardcoded)&lt;/li&gt;
	&lt;li&gt;only are of type bug, improvement, new feature, or sub-task&lt;/li&gt;
	&lt;li&gt;do not have component &apos;Test&apos;.&lt;br/&gt;
I already checked in a revision of the RELEASE-NOTES.html built using this...&lt;br/&gt;
But I did not want to check in my modifications without a review.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2. add a class, JiraConnector, that goes after JIRA&apos;s xml and pulls a report based on hardwired query.&lt;br/&gt;
   This query can be modified, or the file can be made to take a parameter...I tried the parameter approach and for some reason the resulting xml was quite different. So, I resorted to leaving this in hard-coded. Right now, also, the file name that the JiraConnector creates is not what is expected by the ReleaseNotesGenerator class. That too, can be modified later.&lt;/p&gt;

&lt;p&gt;This patch is ready for review.&lt;/p&gt;</comment>
                            <comment id="12499807" author="rhillegas" created="Tue, 29 May 2007 14:57:02 +0100"  >&lt;p&gt;Thanks for the patch, Myrna. I have a couple comments.&lt;/p&gt;

&lt;p&gt;It seems to me that this patch does 2 very useful things:&lt;/p&gt;

&lt;p&gt;1) It automatically generates one of the JIRA reports--that&apos;s what I think JiraConnector does.&lt;/p&gt;

&lt;p&gt;2) It filters that JIRA report, throwing away unwanted issues.&lt;/p&gt;

&lt;p&gt;A) It seems to me that JiraConnector could be folded into ReleaseNotesGenerator. That is, ReleaseNotesGenerator could just run this query itself and grab the resulting xml document off the web using the same machinery that is used to grab the individual release notes (see ReleaseNotesGenerator.getReleaseNote()). For the moment, the query could be hard-coded and later on we could sand down the parameter-substitution problem you saw. If you folded JiraConnector into ReleaseNotesGenerator, then we could get rid of one of the arguments to ReleaseNotesGenerator and eliminate yet another step in our build process.&lt;/p&gt;

&lt;p&gt;B) It seems to me that some of the filtering you are doing (e.g., looking for types bug, improvement, new feature, and subtask) could be folded into the Jira query and removed from the special checks in ReleseNotesGenerator. Maybe the exclusion of Test components has to be a post-Jira filter, but I wonder if that one could be folded into the query too. I&apos;m puzzled why there&apos;s a special check for 10.2.1.6--does this mean that those issues need to be adjusted so that they list 10.2.2.0 as one of their fixversions? In general, it would be nice to have a clear model of what filters are done in Jira and what &lt;br/&gt;
filters are done post-Jira.&lt;/p&gt;</comment>
                            <comment id="12499842" author="myrna" created="Tue, 29 May 2007 17:40:19 +0100"  >&lt;p&gt;re comment A. You&apos;re right, if we wrap JiraConnector into&lt;br/&gt;
ReleaseNotesGenerator, we&apos;d get rid of an extra step. I&apos;ll see if I&lt;br/&gt;
can do that later this week, but I&apos;m battling something else right&lt;br/&gt;
now...&lt;/p&gt;

&lt;p&gt;re comment B. The problem I had was that I couldn&apos;t figure out how to&lt;br/&gt;
do &apos;or&apos; in the queries. Probably something simple, but...So hence the&lt;br/&gt;
elaborate checking of types.&lt;/p&gt;

&lt;p&gt;I don&apos;t quite know what to do about 10.2.1.6. The current practice of&lt;br/&gt;
marking things fixed in a hypothetical next release is proving&lt;br/&gt;
troublesome, the result being that we now have things fixed in&lt;br/&gt;
10.2.1.6 and 10.3, but not 10.2.2.0., which is what we&apos;re checking for&lt;br/&gt;
as being the last previous release...&lt;br/&gt;
Maybe we should add some logic for optional multiple older releases to&lt;br/&gt;
ignore into the generator.&lt;/p&gt;

&lt;p&gt;Myrna&lt;/p&gt;</comment>
                            <comment id="12499893" author="rhillegas" created="Tue, 29 May 2007 20:14:43 +0100"  >&lt;p&gt;Hi, Myrna. Some more comments follow:&lt;/p&gt;

&lt;p&gt;B: I think that, by default, Jira does ORs on field values. It&apos;s NOTs and ANDs that I don&apos;t understand. It looks to me as though your filters need ORs and NOTs.&lt;/p&gt;

&lt;p&gt;It&apos;s possible that the only NOT you need is this: &quot;NOT fixed in the previous release.&quot;  I think you can do that post-Jira filtering in ReleaseNotesGenerator, relying only on the &amp;lt;releaseID&amp;gt; and &amp;lt;previousReleaseID&amp;gt; values from releaseSummary.xml. Or, at least, you could get pretty close and then just scrub the Jira entries a little. Here&apos;s how it looks to me:&lt;/p&gt;

&lt;p&gt;i) We assume that two releases are cut off the same branch if their release ids have the same major and minor numbers.&lt;/p&gt;

&lt;p&gt;ii) Once a bug has been marked as fixed in a given branch, it is assumed that it is fixed in all subsequent releases in that branch.&lt;/p&gt;

&lt;p&gt;iii) If &amp;lt;releaseID&amp;gt; and &amp;lt;previousReleaseID&amp;gt; are in the same branch, then we don&apos;t need to perform the post-Jira filtering. The fact that a bug is marked as fixed in &amp;lt;releaseID&amp;gt; means (because of ii) that the bug was not also fixed in &amp;lt;previousReleaseID&amp;gt;.&lt;/p&gt;

&lt;p&gt;iv) If, however, &amp;lt;releaseID&amp;gt; and &amp;lt;previousReleaseID&amp;gt; are in different branches, then we need to filter out all bugs which are marked as fixed in the &amp;lt;previousReleaseID&amp;gt; branch. That is, all bugs marked as fixed in a release whose major and minor ids agree with the major and minor ids of &amp;lt;previousReleaseID&amp;gt;.&lt;/p&gt;

&lt;p&gt;I think that will work.&lt;/p&gt;</comment>
                            <comment id="12505514" author="rhillegas" created="Sat, 16 Jun 2007 19:17:51 +0100"  >&lt;p&gt;Attaching derby-2570-v02.diff. This teaches the release note generator to report notes which have badly formatted summary lines. Committed at subversion revision 547957.&lt;/p&gt;</comment>
                            <comment id="12505522" author="rhillegas" created="Sat, 16 Jun 2007 19:44:58 +0100"  >&lt;p&gt;Merged previous patch from trunk to 10.3 branch at subversion revision 547961.&lt;/p&gt;</comment>
                            <comment id="12505527" author="myrna" created="Sat, 16 Jun 2007 20:19:47 +0100"  >&lt;p&gt;I added the JiraConnector with revision &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=547965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=547965&lt;/a&gt;.&lt;br/&gt;
It has a better query for the release notes list than the one in the patch, and is dedicated to create the two files the ReleaseNotesGenerator needs.&lt;br/&gt;
It can be combined with the ReleaseNotesGenerator later.&lt;/p&gt;</comment>
                            <comment id="12505528" author="rhillegas" created="Sat, 16 Jun 2007 20:37:06 +0100"  >&lt;p&gt;Attaching derby-2570-v03.diff. This teaches the pamphlet generator to buffer up errors rather than failing on the first bad release note. Committed at subversion revision 547969.&lt;/p&gt;</comment>
                            <comment id="12505529" author="rhillegas" created="Sat, 16 Jun 2007 20:40:46 +0100"  >&lt;p&gt;Ported previous patch from main to 10.3 branch at subversion revision 547970&lt;/p&gt;</comment>
                            <comment id="12505538" author="rhillegas" created="Sat, 16 Jun 2007 22:08:52 +0100"  >&lt;p&gt;Attach derby-2570-v01.diff. This creates a separate tool out of the logic in the pamphlet generator which looks for spefici information in the release note. This tool should be run standalone on a release note before attaching it to a JIRA. Touches the following files:&lt;/p&gt;

&lt;p&gt;A      java/build/org/apache/derbyBuild/ReleaseNoteReader.java&lt;/p&gt;

&lt;p&gt;Tool carved out of the pamphlet generator.&lt;/p&gt;

&lt;p&gt;M      java/build/org/apache/derbyBuild/ReleaseNotesGenerator.java&lt;/p&gt;

&lt;p&gt;Pamphlet generator modified to use the new tool.&lt;/p&gt;</comment>
                            <comment id="12505539" author="rhillegas" created="Sat, 16 Jun 2007 22:12:47 +0100"  >&lt;p&gt;Latest patch committed to trunk at subversion revision 547982 and ported to the 10.3 branch at revision 547983.&lt;/p&gt;</comment>
                            <comment id="12505911" author="rhillegas" created="Mon, 18 Jun 2007 19:23:31 +0100"  >&lt;p&gt;Attaching derby-2570-v05.diff. This teaches the pamphlet generator to substitute &amp;lt;releaseID/&amp;gt; and &amp;lt;previousReleaseID/&amp;gt; with the correct values wherever these variables occur in the overview section of the summary file. Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/build/org/apache/derbyBuild/ReleaseNotesGenerator.java&lt;/p&gt;

&lt;p&gt;Added the substitution logic.&lt;/p&gt;

&lt;p&gt;M      tools/release/templates/releaseSummaryTemplate.xml&lt;/p&gt;

&lt;p&gt;Added a comment to the &amp;lt;overview&amp;gt; section explaining that these empty tags are now variables.&lt;/p&gt;</comment>
                            <comment id="12505913" author="rhillegas" created="Mon, 18 Jun 2007 19:27:42 +0100"  >&lt;p&gt;Committed to trunk at subversion revision 548432 and ported to 10.3 branch at revision 548433.&lt;/p&gt;</comment>
                            <comment id="12506231" author="rhillegas" created="Tue, 19 Jun 2007 17:10:36 +0100"  >&lt;p&gt;Attaching derby-2570-v06.diff. This lets people put interesting formatting tags inside the summary paragraphs of release notes. Previously, in constructing the list of links to detailed notes, only the first text node from the summary was put into the link text. This truncated the summary line for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2264&quot; title=&quot;Restrict shutdown, upgrade, and encryption powers to the database owner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2264&quot;&gt;&lt;del&gt;DERBY-2264&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12506233" author="rhillegas" created="Tue, 19 Jun 2007 17:17:22 +0100"  >&lt;p&gt;Committed to trunk at subversion revision 548781. Merged to 10.3 branch at revision 548783.&lt;/p&gt;</comment>
                            <comment id="12510691" author="myrna" created="Fri, 6 Jul 2007 15:27:06 +0100"  >&lt;p&gt;should we close this &amp;amp; handle new improvements in a separate jira?&lt;/p&gt;</comment>
                            <comment id="12510693" author="rhillegas" created="Fri, 6 Jul 2007 15:30:13 +0100"  >&lt;p&gt;Closing. As Myrna recommends, we can track improvements in later JIRAs.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12358290" name="DERBY-2570_20070525.diff" size="10895" author="myrna" created="Sat, 26 May 2007 00:15:53 +0100"/>
                            <attachment id="12357404" name="derby-2570-v01.diff" size="113149" author="rhillegas" created="Tue, 15 May 2007 18:27:57 +0100"/>
                            <attachment id="12359941" name="derby-2570-v02.diff" size="1972" author="rhillegas" created="Sat, 16 Jun 2007 19:17:51 +0100"/>
                            <attachment id="12359942" name="derby-2570-v03.diff" size="6634" author="rhillegas" created="Sat, 16 Jun 2007 20:37:06 +0100"/>
                            <attachment id="12359943" name="derby-2570-v04.diff" size="13436" author="rhillegas" created="Sat, 16 Jun 2007 22:08:52 +0100"/>
                            <attachment id="12360056" name="derby-2570-v05.diff" size="3252" author="rhillegas" created="Mon, 18 Jun 2007 19:23:31 +0100"/>
                            <attachment id="12360123" name="derby-2570-v06.diff" size="6752" author="rhillegas" created="Tue, 19 Jun 2007 17:10:36 +0100"/>
                            <attachment id="12356156" name="releaseNote.html" size="2555" author="rhillegas" created="Tue, 24 Apr 2007 15:50:33 +0100"/>
                            <attachment id="12356089" name="releaseNote.html" size="1974" author="rhillegas" created="Mon, 23 Apr 2007 21:28:33 +0100"/>
                            <attachment id="12357276" name="releaseSummaryTemplate.xml" size="3437" author="rhillegas" created="Mon, 14 May 2007 15:58:45 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Apr 2007 15:29:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30520</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy11gv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39888</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>