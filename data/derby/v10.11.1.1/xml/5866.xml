<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:16:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5866/DERBY-5866.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5866]  testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5866</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I saw this failure in the IBM nightlies on 7/15. The subsequent night did not fail, so appears intermittent&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cloudsoft.usca.ibm.com/intranet/nightlies/derbywinvm/JarResults.2012-07-15/ibm16_suites.All/suites.All.out&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cloudsoft.usca.ibm.com/intranet/nightlies/derbywinvm/JarResults.2012-07-15/ibm16_suites.All/suites.All.out&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.assertFiringOrder(TriggerTest.java:560)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testFiringConstraintOrder(TriggerTest.java:500)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</description>
                <environment>Windows IBM 1.6 10.10.0.0 alpha - (1361856)</environment>
        <key id="12599463">DERBY-5866</key>
            <summary> testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Thu, 19 Jul 2012 14:41:39 +0100</created>
                <updated>Thu, 27 Nov 2014 01:05:06 +0000</updated>
                            <resolved>Mon, 10 Feb 2014 16:10:50 +0000</resolved>
                                    <version>10.10.1.1</version>
                    <version>10.10.2.0</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13467635" author="knutanders" created="Tue, 2 Oct 2012 13:05:03 +0100"  >&lt;p&gt;I saw the same stack trace with Oracle JDK 7u5 on Windows 7, running under VirtualBox on Solaris. Trunk revision 1392847.&lt;/p&gt;</comment>
                            <comment id="13475240" author="mamtas" created="Fri, 12 Oct 2012 19:52:52 +0100"  >&lt;p&gt;I saw the error on IBM test runs with IBM 1.5 jdk on Windows/VMWare machine on trunk revision 1394893&lt;/p&gt;</comment>
                            <comment id="13620468" author="mikem" created="Wed, 3 Apr 2013 02:02:49 +0100"  >&lt;p&gt;another occurence against 10.10 candidate branch&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1462380-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1462380-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:0,NO CASCADE BEFORE,UPDATE,STATEMENT&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.assertFiringOrder(TriggerTest.java:560)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testFiringConstraintOrder(TriggerTest.java:476)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 17166,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="13620506" author="mikem" created="Wed, 3 Apr 2013 02:53:21 +0100"  >&lt;p&gt;another occurenct in 10.10 candidate branch, ibm16, windows&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1460953-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1460953-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:2,NO CASCADE BEFORE,INSERT,ROW&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.assertFiringOrder(TriggerTest.java:560)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testFiringConstraintOrder(TriggerTest.java:473)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="13626831" author="mikem" created="Tue, 9 Apr 2013 18:12:23 +0100"  >&lt;p&gt;I tried and failed to reproduce this one in my environment.  I just tried running all the fixtures in TriggerTest 300 times, and it succeeded every time.&lt;br/&gt;
The environment I used was ibm16, windows 7, laptop, top of trunk, sane.  Here is jvm version I used, planning on updating soon:&lt;br/&gt;
s2_ibm16:12&amp;gt;java -version&lt;br/&gt;
java version &quot;1.6.0&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pwi3260sr10-20111208_01(SR10))&lt;br/&gt;
IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32 jvmwi3260sr10-20111207_96808 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20111207_096808&lt;br/&gt;
JIT  - r9_20111107_21307ifx1&lt;br/&gt;
GC   - 20110519_AA)&lt;br/&gt;
JCL  - 20111104_02&lt;br/&gt;
s2_ibm16:13&amp;gt;&lt;/p&gt;</comment>
                            <comment id="13628248" author="mamtas" created="Wed, 10 Apr 2013 22:06:27 +0100"  >&lt;p&gt;I have spent little time on trying to reproduce this test on trunk (by running TriggerTest) and have not been able to reproduce it after over 100 runs with IBM jdk 1.6 and 1.7 on Windows 7 laptop. The exact version of the jdks are &lt;br/&gt;
java version &quot;1.6.0&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pwi3260sr13fp1-20130325_01(SR13 FP1))&lt;br/&gt;
IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32 jvmwi3260sr13-20130114_134867 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - 20130114_134867&lt;br/&gt;
JIT  - r9_20130108_31100&lt;br/&gt;
GC   - 20121212_AA)&lt;br/&gt;
JCL  - 20130315_01&lt;/p&gt;

&lt;p&gt;and &lt;br/&gt;
java version &quot;1.7.0&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build pwi3270sr4fp1-20130325_01(SR4 FP1))&lt;br/&gt;
IBM J9 VM (build 2.6, JRE 1.7.0 Windows 7 x86-32 20130306_140761 (JIT enabled, AOT enabled)&lt;br/&gt;
J9VM - R26_Java726_SR4_FP1_20130306_1011_B140761&lt;br/&gt;
JIT  - r11.b03_20130131_32403ifx1&lt;br/&gt;
GC   - R26_Java726_SR4_FP1_20130306_1011_B140761&lt;br/&gt;
J9CL - 20130306_140761)&lt;br/&gt;
JCL - 20130315_01 based on Oracle 7u13-b08&lt;/p&gt;</comment>
                            <comment id="13628252" author="mamtas" created="Wed, 10 Apr 2013 22:08:23 +0100"  >&lt;p&gt;This jira was created in July 2012. I am not sure if the test didn&apos;t fail since then up until recently or the failures have just not been reported.&lt;/p&gt;</comment>
                            <comment id="13629044" author="mamtas" created="Thu, 11 Apr 2013 16:57:34 +0100"  >&lt;p&gt;I looked through few of the old test runs on trunk, 10.10 and 10.9 codelines and found that test has failed on following dates on these codelines&lt;/p&gt;

&lt;p&gt;trunk&lt;br/&gt;
2012-07-15 ibm16&lt;br/&gt;
2012-10-05 ibm15&lt;br/&gt;
2013-01-04 ibm16&lt;br/&gt;
2013-01-15 ibm15&lt;br/&gt;
2013-02-24 ibm16&lt;br/&gt;
2013-02-25 ibm16&lt;br/&gt;
2013-03-16 ibm16&lt;br/&gt;
2013-03-20 ibm16&lt;/p&gt;

&lt;p&gt;10_10&lt;br/&gt;
2013-03-28 ibm16&lt;br/&gt;
2013-04-02 ibm16&lt;br/&gt;
2013-04-08 ibm16_26&lt;/p&gt;

&lt;p&gt;10_9&lt;br/&gt;
2012-08-29 ibm16&lt;br/&gt;
2013-01-14 ibm15&lt;br/&gt;
2013-01-17 ibm17&lt;br/&gt;
2013-01-25 weme6.2&lt;br/&gt;
2013-03-09 ibm15&lt;br/&gt;
2013-03-19 ibm17&lt;/p&gt;</comment>
                            <comment id="13629252" author="mamtas" created="Thu, 11 Apr 2013 20:22:57 +0100"  >&lt;p&gt;Test failed on trunk (revision 1465316) with ibm 17. &lt;/p&gt;</comment>
                            <comment id="13629791" author="mamtas" created="Fri, 12 Apr 2013 05:51:33 +0100"  >&lt;p&gt;I have spent time figuring out the test fixture and following is my understanding of testFiringConstraintOrder.&lt;br/&gt;
Test creates table T with primary key, unique key, check constraint. It creates another table TCHILD which has a foreign key reference to table T. Next, the test creates a random number of triggers on T. Triggers are one of the 12 types with various combinations of BEFORE/AFTER, INSERT/UPDATE/DELETE, ROW/STATEMENT. The trigger definition has a string associated with it which has a unique number and description of the type of trigger eg it might be &apos;0,NO CASCADE BEFORE, DELETE, ROW&apos;, next might be &apos;1,NO CASCADE AFTER,INSERT,STATEMENT&apos; and so on and so forth. After the trigger creation, the test does various violations and wants to test if the eligible triggers are fired in the order they are created. For instance a DELTE sql should cause all BEFORE DELETE ROW triggers to fire in the order they were created. And if the order of firing is not the order of creation, then we will run into an assertion failure error like &quot;matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot;. What I find interesting though is that all the failures mentioned in this jira are for triggers created at the very begnning. For instance, jira description has the failure &quot;matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; which means trigger number 1 got fired before I am assuming trigger number 0(provided trigger 0 is a NO CASCADE BEFORE DELETE ROW&quot;. Another failure reported in this jira is for &quot;0,NO CASCADE BEFORE,UPDATE,STATEMENT&quot; but there couldn&apos;t have been another trigger before trigger 0 so I am not sure how we could be out of order in trigger firing in that case. &lt;br/&gt;
In case of a failure, it will be good if we can print out all the triggers that are getting created and the order in which they are getting fired so we know the sequence in which the triggers are getting fired to understand the mismatch.&lt;/p&gt;</comment>
                            <comment id="13630349" author="mamtas" created="Fri, 12 Apr 2013 18:12:05 +0100"  >&lt;p&gt;Committed a test change with revision 1467170 into trunk (10.11) and following comments&lt;br/&gt;
************************************&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt; (testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)&lt;/p&gt;

&lt;p&gt;In case of failure, this test only has information about the failing trigger. It will be good to also have a complete list of triggers in the order that they got fired. This will help figure out the intermittent test failure,&lt;/p&gt;

&lt;p&gt;Some background information on the test&lt;br/&gt;
The failing test creates table T with primary key, unique key, check constraint. It creates another table TCHILD which has a foreign key reference to table T. Next, the test creates a random number of triggers on T. Triggers are one of the 12 types with various combinations of BEFORE/AFTER, INSERT/UPDATE/DELETE, ROW/STATEMENT. The trigger definition has a string associated with it which has a unique number and description of the type of trigger eg it might be &apos;0,NO CASCADE BEFORE, DELETE, ROW&apos;, next might be &apos;1,NO CASCADE AFTER,INSERT,STATEMENT&apos; and so on and so forth. After the trigger creation, the test does various INSERTS/UPDATES/DELETES and for each case, it wants to test if the eligible triggers are fired in the order they were created. For instance a DELETE sql should cause all BEFORE DELETE ROW triggers to fire in the order they were created. And if the order of firing is not the order of creation, then we will run into an assertion failure error like &quot;matching trigge&lt;br/&gt;
 rs need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot;. What I find interesting though is that all the failures mentioned in this jira are for triggers created at the very begnning. For instance, jira description has the failure &quot;matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; which means trigger number 1 got fired before I am assuming trigger number 0(provided trigger 0 is a NO CASCADE BEFORE DELETE ROW&quot;.) Another failure reported in this jira is for &quot;0,NO CASCADE BEFORE,UPDATE,STATEMENT&quot; but there couldn&apos;t have been another trigger created before trigger 0.&lt;br/&gt;
************************************&lt;/p&gt;</comment>
                            <comment id="13632589" author="mamtas" created="Tue, 16 Apr 2013 06:26:56 +0100"  >&lt;p&gt;Backported changes to 10.10 with revision 1468305&lt;/p&gt;</comment>
                            <comment id="13632942" author="mamtas" created="Tue, 16 Apr 2013 16:57:48 +0100"  >&lt;p&gt;Backported changes to 10.9 with revision 1468479&lt;/p&gt;</comment>
                            <comment id="13638704" author="mamtas" created="Tue, 23 Apr 2013 02:48:28 +0100"  >&lt;p&gt;Backported changes to 10.8 with revision 1470776&lt;/p&gt;</comment>
                            <comment id="13640655" author="mamtas" created="Wed, 24 Apr 2013 18:03:01 +0100"  >&lt;p&gt;The test failed on 10.10 codeline &lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1471229-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1471229-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
I will look at the additional debugging info from the test to see if I understand the issue.&lt;/p&gt;</comment>
                            <comment id="13640939" author="mamtas" created="Wed, 24 Apr 2013 21:52:02 +0100"  >&lt;p&gt;The purpose of the failing test is to check that the triggers get fired in the order they were created. We have been seeing intermittent failures in this test. It failed in 10.10 codeline recently. &lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1471229-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm16/1471229-suites.All_diff.txt&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Last week, I had added some debugging info into the test to show the order in which the triggers got fired when the test finds that the triggers have fired in a order different than the order of creation. I have copied that information from the last failed run below(with some edits to make the message more readable)&lt;/p&gt;

&lt;p&gt;matching triggers need to be fired in order creation:&lt;br/&gt;
       11,NO CASCADE BEFORE,UPDATE,STATEMENT. &lt;/p&gt;

&lt;p&gt;Triggers got fired in this order:&lt;br/&gt;
 4,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
13,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
11,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
18,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
24,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
26,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
29,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
33,NO CASCADE BEFORE,UPDATE,ROW&lt;/p&gt;


&lt;p&gt;As per the list &quot;Triggers got fired in this order:&quot;, it appears that trigger 13 got fired before trigger 11 and that causes the test to fail. Notice that all of these trigger are for UPDATE and they are all BEFORE triggers but they are a mix of STATEMENT and ROW triggers. If my understanding if correct, then STATEMENT and ROW triggers should get fired in the order they were created ie I do not think all the STATEMENT triggers have to fire before the ROW triggers can fire. If that is correct, then I am not sure why trigger number 13 got fired before trigger number 11. I am thinking of putting another piece of debugging info in case of failure, which is to print the order in which the triggers got created. I do not believe that trigger 13 could have gotten created before trigger 13(as per TriggerTest.createRandomTriggers method) but it might be helpful to have that information too during the test failure. In the mean time, I will try to hand create a database with the BEFORE UPDATE  triggers listed above and see if I can somehow reproduce the problem. I will highly appreciate if anyone on the list has any ideas based on the information provided. Thanks&lt;/p&gt;</comment>
                            <comment id="13641029" author="mamtas" created="Wed, 24 Apr 2013 23:05:03 +0100"  >&lt;p&gt;Added more debugging info to trunk with revision 1471721.&lt;/p&gt;</comment>
                            <comment id="13641426" author="mamtas" created="Thu, 25 Apr 2013 05:59:19 +0100"  >&lt;p&gt;I had forgotten to remove the forced failure from the test(revision 1471721) which I had used for debugging on my machine. Fixing the forced failure part with revision 1475624.&lt;/p&gt;</comment>
                            <comment id="13643169" author="mamtas" created="Fri, 26 Apr 2013 20:38:27 +0100"  >&lt;p&gt;Backported the additional debugging info from trunk into 10.10 codeline with revision 1476355&lt;/p&gt;</comment>
                            <comment id="13643266" author="mamtas" created="Fri, 26 Apr 2013 22:42:19 +0100"  >&lt;p&gt;Backported the additional debugging info into 10.9 codeline with 1476410&lt;/p&gt;</comment>
                            <comment id="13643285" author="mamtas" created="Fri, 26 Apr 2013 23:06:17 +0100"  >&lt;p&gt;Backported the additional debugging info into 10.8 codeline with 1476415&lt;/p&gt;</comment>
                            <comment id="13655388" author="myrna" created="Sat, 11 May 2013 23:56:38 +0100"  >&lt;p&gt;This test failed again on the 10.10 testing machine on 5/10, with ibm 1.5, with the tree updated to revision 1481251.&lt;br/&gt;
I&apos;ll attache the error-stacktrace.out&lt;/p&gt;</comment>
                            <comment id="13695142" author="myrna" created="Thu, 27 Jun 2013 23:54:01 +0100"  >&lt;p&gt;Failed again, trunk, on a windows 2008R2/vmware machine:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;once with ibm 1.6:&lt;br/&gt;
 &lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm16/1492924-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm16/1492924-suites.All_diff.txt&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;once with ibm 1.7:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm17/1495265-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm17/1495265-suites.All_diff.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13762157" author="mamtas" created="Mon, 9 Sep 2013 20:00:22 +0100"  >&lt;p&gt;Failed on 10.10.1.3(1520721) &lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm17/1520721-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm17/1520721-suites.All_diff.txt&lt;/a&gt; with IBM jdlk1.7 &lt;/p&gt;</comment>
                            <comment id="13764842" author="mamtas" created="Wed, 11 Sep 2013 22:59:10 +0100"  >&lt;p&gt;I looked at the test failure &lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm17/1520721-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm17/1520721-suites.All_diff.txt&lt;/a&gt; &lt;br/&gt;
In this instance, the test is failing because trigger number 11 got fired before trigger number 10. &lt;/p&gt;

&lt;p&gt;The test creates various types of triggers(insert/update/delete+row/statement). They get created sequentially from trigger 0, trigger 1, trigger 2 and so on through some random value generated in the test. Next the test runs DML statements which will cause some of these triggers to fire. The relevant triggers for the DML statement are supposed to fire in the order they were created. But the intermittent failure times, the triggers are not getting fired in the order of creation. In this specific case, Trigger 11 fired before Trigger 10. The DML statement was INSERT. Following is part of the triggers that got fired&lt;/p&gt;

&lt;p&gt; 2,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
11,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
10,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
18,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
20,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
25,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
28,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
29,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
40,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
42,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
49,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
56,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
57,NO CASCADE BEFORE,INSERT,STATEMENT&lt;br/&gt;
so on and so forth&lt;/p&gt;

&lt;p&gt;Tiggers got created in this order:&lt;br/&gt;
CREATE TRIGGER TR0 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;0,AFTER,UPDATE,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR1 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;1,AFTER,UPDATE,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR2 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;2,NO CASCADE BEFORE,INSERT,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR3 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;3,AFTER,DELETE,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR4 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;4,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR5 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;5,AFTER,DELETE,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR6 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;6,AFTER,INSERT,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR7 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;7,AFTER,DELETE,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR8 NO CASCADE BEFORE UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;8,NO CASCADE BEFORE,UPDATE,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR9 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;9,AFTER,INSERT,ROW&apos;)&lt;br/&gt;
CREATE TRIGGER TR10 NO CASCADE BEFORE INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;10,NO CASCADE BEFORE,INSERT,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR11 NO CASCADE BEFORE INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;11,NO CASCADE BEFORE,INSERT,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR12 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;12,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR13 NO CASCADE BEFORE DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;13,NO CASCADE BEFORE,DELETE,STATEMENT&apos;)&lt;br/&gt;
CREATE TRIGGER TR14 AFTER UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;14,AFTER,UPDATE,STATEMENT&apos;)&lt;br/&gt;
so on and so forth&lt;/p&gt;

&lt;p&gt;As we can see above, Trigger 10 was created before Trigger 10 but during DML execution, Trigger 11 fired before Trigger 10.&lt;/p&gt;

&lt;p&gt;I have the database for the test failure but unfortunately the db is all empty because it got cleaned up by the tearDown() method. I will make changes to the test such that we do not get rid of schema and hence we will have an opportunity to debug the order of firing.&lt;/p&gt;</comment>
                            <comment id="13764888" author="mamtas" created="Wed, 11 Sep 2013 23:33:46 +0100"  >&lt;p&gt;Not sure if this is very helpful, but the last few intermittent failures had following order of trigger firing sequence&lt;br/&gt;
*****************************************&lt;br/&gt;
Failure 1&lt;br/&gt;
4,NO CASCADE BEFORE,UPDATE,STATEMENT,&lt;br/&gt;
13,NO CASCADE BEFORE,UPDATE,ROW,&lt;br/&gt;
--wrong&lt;br/&gt;
11,NO CASCADE BEFORE,UPDATE,STATEMENT,&lt;br/&gt;
18,NO CASCADE BEFORE,UPDATE,ROW,&lt;br/&gt;
24,NO CASCADE BEFORE,UPDATE,STATEMENT,&lt;br/&gt;
26,NO CASCADE BEFORE,UPDATE,STATEMENT,&lt;br/&gt;
29,NO CASCADE BEFORE,UPDATE,ROW,&lt;br/&gt;
33,NO CASCADE BEFORE,UPDATE,ROW&lt;br/&gt;
*****************************************&lt;br/&gt;
Failure 2&lt;br/&gt;
1,NO CASCADE BEFORE,DELETE,ROW, &lt;br/&gt;
3,NO CASCADE BEFORE,DELETE,ROW, &lt;br/&gt;
--wrong&lt;br/&gt;
0,NO CASCADE BEFORE,DELETE,STATEMENT, &lt;br/&gt;
19,NO CASCADE BEFORE,DELETE,ROW, &lt;br/&gt;
22,NO CASCADE BEFORE,DELETE,ROW, &lt;br/&gt;
26,NO CASCADE BEFORE,DELETE,ROW, &lt;br/&gt;
28,NO CASCADE BEFORE,DELETE,STATEMENT, &lt;br/&gt;
*****************************************&lt;br/&gt;
Failure 3&lt;br/&gt;
1,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
7,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
--wrong&lt;br/&gt;
14,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
13,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
21,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
25,NO CASCADE BEFORE,UPDATE,ROW, &lt;br/&gt;
29,NO CASCADE BEFORE,UPDATE,STATEMENT, &lt;br/&gt;
31,NO CASCADE BEFORE,UPDATE,STATEMENT,&lt;br/&gt;
*****************************************&lt;br/&gt;
Failure 4&lt;br/&gt;
2,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
11,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
--wrong&lt;br/&gt;
10,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
18,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
20,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
25,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
28,NO CASCADE BEFORE,INSERT,ROW, &lt;br/&gt;
29,NO CASCADE BEFORE,INSERT,STATEMENT, &lt;br/&gt;
40,NO CASCADE BEFORE,INSERT,STATEMENT,&lt;br/&gt;
*****************************************&lt;/p&gt;</comment>
                            <comment id="13765252" author="knutanders" created="Thu, 12 Sep 2013 08:55:45 +0100"  >&lt;p&gt;Maybe if two triggers are created short time after one another, they end up having the same creation timestamp. DataDictionaryImpl.getTriggerDescriptorsScan() builds the trigger descriptor list from SYSTRIGGERS using an index on (TABLEID, CREATIONTIMESTAMP). This index would usually return the triggers in the order of creation, but it may be ordered differently if there are duplicates in the CREATIONTIMESTAMP column.&lt;/p&gt;</comment>
                            <comment id="13765530" author="mikem" created="Thu, 12 Sep 2013 16:28:47 +0100"  >&lt;p&gt;definitely think knut&apos;s suggestion is worth looking into.  Add printout of the timestamp.  A lot of the nightly&apos;s that are failing&lt;br/&gt;
are run on fast vmware machines now.  And I believe timestamp is a known issue with this kind of situation, where it is hard to &lt;br/&gt;
get the hardware timestamp to be updated as quickly for apps running on vmware than you might expect from an app running directly&lt;br/&gt;
on the bare iron.  We have seen similar issues with some tests that use to fail where before and after timestamps for an operation&lt;br/&gt;
would return the same timestamp.&lt;/p&gt;

&lt;p&gt;If this turns out to be the problem, ...&lt;br/&gt;
If upgrade were not an issue seems like fix would be to make the index unique and handle a duplicate key error on insert, and retry&lt;br/&gt;
with timestamp+1.  Depending on what kind of locks the ddl had for creating the trigger, maybe you can first search for the timestamp&lt;br/&gt;
and then do insert if it does not exist in the non-unique index.  Just need enough locking to insure some other trigger create does&lt;br/&gt;
not sneak in.&lt;/p&gt;</comment>
                            <comment id="13767901" author="jira-bot" created="Sun, 15 Sep 2013 21:37:50 +0100"  >&lt;p&gt;Commit 1523501 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523501&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523501&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest) junit.framework.AssertionFailedError:matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW )&lt;/p&gt;

&lt;p&gt;Move the cleanup code from tearDown() to setup() so that if a test fixture fails, we will have the left over wombat database with the schema and data used by the failing fixture for further debugging.&lt;/p&gt;</comment>
                            <comment id="13768194" author="knutanders" created="Mon, 16 Sep 2013 10:24:22 +0100"  >&lt;p&gt;Clearing of TRIGGER_INFO should probably still happen in tearDown() instead of setUp(). Otherwise, the info from the last test case in TriggerTest won&apos;t be released until the JVM terminates. I don&apos;t expect it to take up a huge amount of memory, but with the big number of tests in suites.All unreleased data structures could accumulate and cause OOME.&lt;/p&gt;</comment>
                            <comment id="13768753" author="mamtas" created="Mon, 16 Sep 2013 22:01:56 +0100"  >&lt;p&gt;Knut, I will make the suggested change. Also, I will backport it to 10.10 through 10.8 codelines since it has failed intermittently there too.&lt;/p&gt;</comment>
                            <comment id="13768787" author="jira-bot" created="Mon, 16 Sep 2013 22:31:50 +0100"  >&lt;p&gt;Commit 1523821 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523821&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)&lt;/p&gt;

&lt;p&gt;As per Knut&apos;s recommendation, moving cleanup of TRIGGER_INFO back to tearDown(). Otherwise, the info from the last test case in TriggerTest won&apos;t be released until the JVM terminates. I don&apos;t expect it to take up a huge amount of memory, but with the big number of tests in suites.All unreleased data structures could accumulate and cause OOME.&lt;/p&gt;</comment>
                            <comment id="13768833" author="jira-bot" created="Mon, 16 Sep 2013 22:56:52 +0100"  >&lt;p&gt;Commit 1523823 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523823&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;(testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)&lt;/p&gt;

&lt;p&gt;Backporting more diagnostic info to 10.10 coeline from trunk&lt;/p&gt;</comment>
                            <comment id="13768873" author="jira-bot" created="Mon, 16 Sep 2013 23:24:57 +0100"  >&lt;p&gt;Commit 1523824 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.9&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523824&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523824&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;(testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)&lt;/p&gt;

&lt;p&gt;Backporting more diagnostic info to 10.9 coeline from trunk&lt;/p&gt;</comment>
                            <comment id="13768896" author="jira-bot" created="Mon, 16 Sep 2013 23:48:56 +0100"  >&lt;p&gt;Commit 1523829 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1523829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1523829&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;(testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)&lt;/p&gt;

&lt;p&gt;Backporting more diagnostic info to 10.8 coeline from trunk&lt;/p&gt;</comment>
                            <comment id="13802702" author="knutanders" created="Wed, 23 Oct 2013 09:22:18 +0100"  >&lt;p&gt;testFiringOrder failed in the nightly testing: &lt;a href=&quot;http://download.java.net/javadesktop/derby/request_5582907/javadb-task-3743116.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/request_5582907/javadb-task-3743116.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the contents of the fail directory (had to split it in two zip files in order to work around the 10MB upload limit).&lt;/p&gt;

&lt;p&gt;Stack trace:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:25,AFTER,DELETE,ROW. Triggers got fired in this order:[8,NO CASCADE BEFORE,DELETE,STATEMENT, 21,NO CASCADE BEFORE,DELETE,STATEMENT, 54,NO CASCADE BEFORE,DELETE,STATEMENT, 59,NO CASCADE BEFORE,DELETE,ROW, 64,NO CASCADE BEFORE,DELETE,STATEMENT, 1,AFTER,DELETE,STATEMENT, 10,AFTER,DELETE,STATEMENT, 13,AFTER,DELETE,ROW, 18,AFTER,DELETE,ROW, 26,AFTER,DELETE,ROW, 25,AFTER,DELETE,ROW, 27,AFTER,DELETE,ROW, 29,AFTER,DELETE,STATEMENT, 30,AFTER,DELETE,STATEMENT, 41,AFTER,DELETE,ROW, 47,AFTER,DELETE,ROW, 52,AFTER,DELETE,STATEMENT, 58,AFTER,DELETE,ROW, 62,AFTER,DELETE,ROW]. Tiggers got created in this order:CREATE TRIGGER TR0 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;0,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR1 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;1,AFTER,DELETE,STATEMENT&apos;)CREATE TRIGGER TR2 AFTER UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;2,AFTER,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR3 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;3,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR4 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;4,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR5 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;5,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR6 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;6,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR7 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;7,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR8 NO CASCADE BEFORE DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;8,NO CASCADE BEFORE,DELETE,STATEMENT&apos;)CREATE TRIGGER TR9 NO CASCADE BEFORE UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;9,NO CASCADE BEFORE,UPDATE,ROW&apos;)CREATE TRIGGER TR10 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;10,AFTER,DELETE,STATEMENT&apos;)CREATE TRIGGER TR11 NO CASCADE BEFORE INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;11,NO CASCADE BEFORE,INSERT,STATEMENT&apos;)CREATE TRIGGER TR12 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;12,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR13 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;13,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR14 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;14,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR15 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;15,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR16 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;16,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR17 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;17,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR18 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;18,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR19 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;19,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR20 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;20,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR21 NO CASCADE BEFORE DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;21,NO CASCADE BEFORE,DELETE,STATEMENT&apos;)CREATE TRIGGER TR22 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;22,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR23 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;23,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR24 NO CASCADE BEFORE INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;24,NO CASCADE BEFORE,INSERT,STATEMENT&apos;)CREATE TRIGGER TR25 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;25,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR26 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;26,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR27 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;27,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR28 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;28,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR29 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;29,AFTER,DELETE,STATEMENT&apos;)CREATE TRIGGER TR30 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;30,AFTER,DELETE,STATEMENT&apos;)CREATE TRIGGER TR31 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;31,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR32 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;32,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR33 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;33,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR34 NO CASCADE BEFORE UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;34,NO CASCADE BEFORE,UPDATE,ROW&apos;)CREATE TRIGGER TR35 NO CASCADE BEFORE UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;35,NO CASCADE BEFORE,UPDATE,ROW&apos;)CREATE TRIGGER TR36 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;36,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR37 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;37,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR38 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;38,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR39 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;39,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR40 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;40,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR41 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;41,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR42 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;42,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR43 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;43,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR44 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;44,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR45 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;45,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR46 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;46,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR47 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;47,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR48 AFTER UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;48,AFTER,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR49 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;49,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR50 AFTER UPDATE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;50,AFTER,UPDATE,ROW&apos;)CREATE TRIGGER TR51 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;51,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR52 AFTER DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;52,AFTER,DELETE,STATEMENT&apos;)CREATE TRIGGER TR53 AFTER INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;53,AFTER,INSERT,STATEMENT&apos;)CREATE TRIGGER TR54 NO CASCADE BEFORE DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;54,NO CASCADE BEFORE,DELETE,STATEMENT&apos;)CREATE TRIGGER TR55 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;55,NO CASCADE BEFORE,INSERT,ROW&apos;)CREATE TRIGGER TR56 NO CASCADE BEFORE INSERT ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;56,NO CASCADE BEFORE,INSERT,STATEMENT&apos;)CREATE TRIGGER TR57 AFTER INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;57,AFTER,INSERT,ROW&apos;)CREATE TRIGGER TR58 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;58,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR59 NO CASCADE BEFORE DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;59,NO CASCADE BEFORE,DELETE,ROW&apos;)CREATE TRIGGER TR60 NO CASCADE BEFORE UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;60,NO CASCADE BEFORE,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR61 AFTER UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;61,AFTER,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR62 AFTER DELETE ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;62,AFTER,DELETE,ROW&apos;)CREATE TRIGGER TR63 AFTER UPDATE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;63,AFTER,UPDATE,STATEMENT&apos;)CREATE TRIGGER TR64 NO CASCADE BEFORE DELETE ON T FOR EACH STATEMENT CALL TRIGGER_LOG_INFO(&apos;64,NO CASCADE BEFORE,DELETE,STATEMENT&apos;)CREATE TRIGGER TR65 NO CASCADE BEFORE INSERT ON T FOR EACH ROW CALL TRIGGER_LOG_INFO(&apos;65,NO CASCADE BEFORE,INSERT,ROW&apos;)
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.assertFiringOrder(TriggerTest.java:572)
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.assertFiringOrder(TriggerTest.java:527)
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testFiringOrder(TriggerTest.java:341)
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:439)
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:456)
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
	at junit.extensions.TestSetup.run(TestSetup.java:25)
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I query the SYS.SYSTRIGGERS table with an optimizer override to force it to use the same index as the trigger firing code (an index on (TABLEID, CREATIONTIMESTAMP)), I see the this result:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ij&amp;gt; select cast(triggername as char(4)), creationtimestamp from sys.systriggers --derby-properties index=SYSTRIGGERS_INDEX3
&amp;gt; ;
1   |CREATIONTIMESTAMP            
----------------------------------
TR0 |2013-10-16 22:11:44.457      
TR1 |2013-10-16 22:11:44.457      
TR2 |2013-10-16 22:11:44.457      
TR3 |2013-10-16 22:11:44.472      
TR4 |2013-10-16 22:11:44.472      
TR5 |2013-10-16 22:11:44.472      
TR6 |2013-10-16 22:11:44.472      
TR7 |2013-10-16 22:11:44.488      
TR8 |2013-10-16 22:11:44.488      
TR9 |2013-10-16 22:11:44.504      
TR10|2013-10-16 22:11:44.504      
TR11|2013-10-16 22:11:44.504      
TR12|2013-10-16 22:11:44.519      
TR13|2013-10-16 22:11:44.519      
TR14|2013-10-16 22:11:44.535      
TR15|2013-10-16 22:11:44.535      
TR16|2013-10-16 22:11:44.55       
TR17|2013-10-16 22:11:44.55       
TR18|2013-10-16 22:11:44.566      
TR19|2013-10-16 22:11:44.582      
TR20|2013-10-16 22:11:44.582      
TR21|2013-10-16 22:11:44.597      
TR22|2013-10-16 22:11:44.613      
TR23|2013-10-16 22:11:44.629      
TR24|2013-10-16 22:11:44.644      
TR26|2013-10-16 22:11:44.66       
TR25|2013-10-16 22:11:44.66       
TR27|2013-10-16 22:11:44.675      
TR28|2013-10-16 22:11:44.691      
TR29|2013-10-16 22:11:44.707      
TR30|2013-10-16 22:11:44.722      
TR31|2013-10-16 22:11:44.738      
TR32|2013-10-16 22:11:44.754      
TR33|2013-10-16 22:11:44.769      
TR34|2013-10-16 22:11:44.785      
TR35|2013-10-16 22:11:44.8        
TR36|2013-10-16 22:11:44.816      
TR37|2013-10-16 22:11:44.832      
TR38|2013-10-16 22:11:44.847      
TR39|2013-10-16 22:11:44.863      
TR40|2013-10-16 22:11:44.879      
TR41|2013-10-16 22:11:44.894      
TR42|2013-10-16 22:11:44.91       
TR43|2013-10-16 22:11:44.941      
TR44|2013-10-16 22:11:44.957      
TR45|2013-10-16 22:11:44.972      
TR46|2013-10-16 22:11:45.004      
TR47|2013-10-16 22:11:45.035      
TR48|2013-10-16 22:11:45.05       
TR49|2013-10-16 22:11:45.082      
TR50|2013-10-16 22:11:45.097      
TR51|2013-10-16 22:11:45.128      
TR52|2013-10-16 22:11:45.144      
TR53|2013-10-16 22:11:45.175      
TR54|2013-10-16 22:11:45.191      
TR55|2013-10-16 22:11:45.222      
TR56|2013-10-16 22:11:45.253      
TR57|2013-10-16 22:11:45.269      
TR58|2013-10-16 22:11:45.3        
TR59|2013-10-16 22:11:45.316      
TR60|2013-10-16 22:11:45.347      
TR61|2013-10-16 22:11:45.363      
TR62|2013-10-16 22:11:45.394      
TR63|2013-10-16 22:11:45.41       
TR64|2013-10-16 22:11:45.457      
TR65|2013-10-16 22:11:45.488      
TR2 |2013-10-16 22:11:37.177      

67 rows selected
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;many triggers have the same creation timestamp&lt;/li&gt;
	&lt;li&gt;TR25 and TR26 come out in reversed order (same timestamp, assertion text says TR25 was created first, index has TR26 first)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So it seems like creation timestamps being equal is indeed what&apos;s causing this instability.&lt;/p&gt;</comment>
                            <comment id="13840300" author="knutanders" created="Thu, 5 Dec 2013 17:16:00 +0000"  >&lt;p&gt;Hi Mamta, You&apos;re currently assigned to this issue. Were you planning to work on a fix? I could take a stab at it if you don&apos;t have any immediate plans to look into it. Thanks.&lt;/p&gt;</comment>
                            <comment id="13844716" author="mamtas" created="Tue, 10 Dec 2013 22:00:01 +0000"  >&lt;p&gt;Hi Knut, I just unassigned myself from this jira. This jira was on my list but probably can&apos;t get to it for a while so please go ahead and work on it. Thanks&lt;/p&gt;</comment>
                            <comment id="13846308" author="knutanders" created="Thu, 12 Dec 2013 13:45:17 +0000"  >&lt;p&gt;If we only care about the case where two timestamps are identical because the system clock is too coarse-grained, the fix should be rather simple. We could just make CreateTriggerConstantAction cache the latest creation timestamp (for example in a field in DataDictionaryImpl) and add 1 nanosecond if a collision is detected.&lt;/p&gt;

&lt;p&gt;But there are more cases to consider if we want to solve the general problem:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What if a database is copied from one computer to another, and their clocks are not synchronized?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What if a trigger is created during the last hour of daylight saving time? Since Derby doesn&apos;t store the time zone of a timestamp, a new trigger created within the next hour may appear to have been created before the first trigger.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Similar case: What if the time zone on the computer is changed so that the old timestamps appear to be newer than they actually are?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I suppose we could solve this by making the first CREATE TRIGGER statement after boot fetch the highest CREATIONTIMESTAMP from SYSTRIGGERS for comparison with new timestamps, and if the new timestamp is lower than the highest one in SYSTRIGGERS, create a new timestamp that points far enough into the future. It won&apos;t be pretty though, and we&apos;ll have to pay attention to corner cases, especially around DST switchover.&lt;/p&gt;

&lt;p&gt;I guess what we&apos;d really want, is SYSTRIGGERS to have an identity column so that we could have a monotonically increasing value independent of the system clock, but that requires format changes in hard upgrade. Still, it sounds much cleaner to implement a sequence number using an identity column, than faking it with a data type where you don&apos;t even know if incrementing a value by one will result in a smaller or bigger value than the original...&lt;/p&gt;</comment>
                            <comment id="13846311" author="knutanders" created="Thu, 12 Dec 2013 13:48:52 +0000"  >&lt;p&gt;Attaching time-zone-test.diff, which contains a test case that shows how triggers fire out of order if the time zone is changed between two CREATE TRIGGER statements.&lt;/p&gt;</comment>
                            <comment id="13850294" author="knutanders" created="Tue, 17 Dec 2013 09:38:49 +0000"  >&lt;p&gt;Attaching d5866-1a-adjust-timestamp.diff, which contains a fix for this issue.&lt;/p&gt;

&lt;p&gt;The fix makes CreateTriggerConstantAction compare the current timestamp to the creation timestamp of the most recently created trigger on the same table. If the current timestamp is not higher, it is adjusted so that the creation timestamp of the new trigger is 1 ms higher than the creation timestamp of the previous trigger on the same table.&lt;/p&gt;

&lt;p&gt;In order to test various edge cases, I added a hook so that the creation timestamps can be overridden with a system property in debug builds. The regression test uses this system property to test that the triggers are fired in the correct order in cases such as:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;system clock shows the same time for multiple triggers&lt;/li&gt;
	&lt;li&gt;system clock moves backwards&lt;/li&gt;
	&lt;li&gt;triggers are created around daylight saving time switchover&lt;/li&gt;
	&lt;li&gt;system clock shows pre-epoch time (before January 1 1970) when the triggers are created&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13853934" author="knutanders" created="Fri, 20 Dec 2013 12:51:51 +0000"  >&lt;p&gt;I&apos;m not quite happy with the approach in the patch, so I&apos;m removing the Patch Available flag until I&apos;ve explored some more options.&lt;/p&gt;

&lt;p&gt;In particular, the code that checks if the current timestamp is higher than the timestamp of the most recent trigger, may be unreliable. I haven&apos;t been able to construct a case where it breaks, but I think it relies on some unspecified behaviour in java.util.Calendar and is not guaranteed to give the correct result.&lt;/p&gt;

&lt;p&gt;For example: When the local timezone switches from DST to standard time, there is a two-hour period where a timestamp without timezone (which is how it is stored in a Derby TIMESTAMP column) is ambiguous. That is, if the switch happens at 03:00 DST -&amp;gt; 02:00 std, a TIMESTAMP stored as 02:30 in the database could represent either 02:30 DST or 02:30 std (an hour later).&lt;/p&gt;

&lt;p&gt;If, say, one trigger is created at 02:45 DST, and another one is created half an hour later, at 02:15 std, here&apos;s what the code in the patch does when the second trigger is created:&lt;/p&gt;

&lt;p&gt;1) Create a java.sql.Timestamp representing the current time (02:15 std), let&apos;s call it tsNew.&lt;/p&gt;

&lt;p&gt;2) Fetch the creation timestamp (as a java.sql.Timestamp) for the TriggerDescriptor of the first trigger. This timestamp is 02:45, but since the timezone is not stored in the database, it is unknown whether it&apos;s DST or std. Let&apos;s call it tsOld.&lt;/p&gt;

&lt;p&gt;3) Check if tsOld &amp;lt; tsNew&lt;br/&gt;
3a) If tsOld is DST, (tsOld &amp;lt; tsNew) is true, and we use tsNew as creation timestamp. It will be stored as 02:15 in the database.&lt;br/&gt;
3b) If tsOld is std, (tsOld &amp;lt; tsNew) is false, and we use tsOld + 1ms as creation timestamp. It will be stored as 02:45:00.001 in the database.&lt;/p&gt;

&lt;p&gt;Now, if 3a happens, we will end up with the first trigger having creation timestamp 02:45 and the second trigger having creation timestamp 02:15. That will lead to wrong execution order, so we don&apos;t want that to happen.&lt;/p&gt;

&lt;p&gt;What actually happens here, at least in all test cases I&apos;ve managed to construct, is 3b. That is, the first trigger has timestamp 02:45 and the second has 02:45:00.001. This gives the correct execution order. (However, the creation timestamp of the second trigger lies with half an hour to achieve this.)&lt;/p&gt;

&lt;p&gt;But 3b is only guaranteed if we know that getTimestamp() on an ambiguous timestamp will always return the highest alternative. That is, if we know that the returned java.sql.Timestamp value for the ambiguous column value 02:15 above will always be 02:15 std and not 02:15 DST, we&apos;re fine. I&apos;m not able to find anything in the API specification that guarantees this, though. I did find a comment buried in OpenJDK&apos;s implementation of java.util.GregorianCalendar that suggests standard time will be used in case of ambiguities, but nothing in the actual API reference. So it might be that the current approach works in all cases, but even so it seems like it depends on an internal implementation detail in the Java class libraries.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking that one possible fix that should make this code more reliable, is to store the trigger creation timestamp in UTC instead of the local timezone. Then we&apos;d avoid the DST problems, as well as the problems with the database being moved from one timezone to another. An additional benefit is that we wouldn&apos;t have to lie when creating the timestamp around the DST switch (such as adjusting the timestamp with half an hour in the 3b scenario described above).&lt;/p&gt;</comment>
                            <comment id="13853968" author="knutanders" created="Fri, 20 Dec 2013 13:56:28 +0000"  >&lt;p&gt;I&apos;m running tests on the attached d5866-2a-utc.diff patch, which should be applied on top of the 1a patch.&lt;/p&gt;

&lt;p&gt;The 2a patch makes SYSTRIGGERSRowFactory.makeRow() store the CREATIONTIMESTAMP in the UTC time zone, and SYSTRIGGERSRowFactory.buildDescriptor() read it as UTC. This seems to resolve the ambiguities around time zone changes, so that we don&apos;t have to lie in SYSTRIGGERS, and so that we don&apos;t have to rely on unspecified behaviour in the Java class libraries.&lt;/p&gt;</comment>
                            <comment id="13854124" author="bryanpendleton" created="Fri, 20 Dec 2013 16:28:48 +0000"  >&lt;p&gt;Those daylight savings time corner cases are always annoying; handling the time&lt;br/&gt;
uniformly in UTC seems like the preferred approach if at all possible.&lt;/p&gt;

&lt;p&gt;Does your proposal raise complications with the definitions of existing triggers?&lt;/p&gt;

&lt;p&gt;For example, would we need to upgrade existing data to &quot;correct&quot; their stored timestamps?&lt;/p&gt;</comment>
                            <comment id="13854398" author="knutanders" created="Fri, 20 Dec 2013 18:36:24 +0000"  >&lt;p&gt;I don&apos;t think there will be any need to update existing timestamps for correctness. If the change from local time zone to UTC makes the old timestamps appear to be in the future, the current logic will adjust the timestamp of the new trigger to point even further into the future.&lt;/p&gt;

&lt;p&gt;It is of course unfortunate that the timestamps of existing triggers won&apos;t represent the actual creation time anymore, but I have a hard time imagining that application logic would depend on these timestamps. it&apos;s probably worth mentioning in a release note, and also having a cautionary note in the SYSTRIGGERS topic in the reference manual.&lt;/p&gt;

&lt;p&gt;I&apos;m a little bit worried about downgrade, though. Switching back from UTC to local may give Derby the impression that time travel has happened, and old versions don&apos;t have the logic we&apos;ve added here to compensate for time travel. So maybe we should only switch to UTC if the database has been hard-upgraded.&lt;/p&gt;</comment>
                            <comment id="13854405" author="knutanders" created="Fri, 20 Dec 2013 18:42:24 +0000"  >&lt;p&gt;And, I forgot to add, I hope we&apos;ve learned our lesson and never again use a TIMESTAMP column for ordering when a simple INT would do... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13860230" author="knutanders" created="Thu, 2 Jan 2014 14:34:29 +0000"  >&lt;p&gt;Uploading d5866-2b-utc-after-upgrade.diff which replaces the 2a patch. The new patch only uses UTC for the creation timestamps if the database has been upgraded to 10.11. That is, soft-upgraded databases will still use the local time zone.&lt;/p&gt;

&lt;p&gt;It also adds a test case to the upgrade test suite which verifies that triggers created in different phases of the upgrade fire in the correct order. With the 2a patch, this test case failed because the trigger created in a soft-downgraded database would fire out of order (only if the local time zone in which the test ran had a negative offset from GMT, though, since then the switch from UTC back to local time zone would look like travel back in time). The 2b patch makes the test case pass by using UTC only after hard-upgrade, in which case the database cannot be soft-downgraded to a version that uses the local time zone.&lt;/p&gt;

&lt;p&gt;I considered whether there should be upgrade code that changed timestamps for existing triggers from local time zone to UTC, but chose not to add it because&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it&apos;s not needed for correct trigger execution order&lt;/li&gt;
	&lt;li&gt;one cannot determine at upgrade time what the local time zone was at the time the trigger was created (although the current local time zone would be a reasonable guess)&lt;/li&gt;
	&lt;li&gt;because of ambiguities around switch to or from DST, conversion to UTC could end up reordering the triggers, and we wouldn&apos;t want upgrade to alter the execution order of existing triggers&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think the 1a patch can be backported to older branches (which means the older branches would behave like trunk in soft-upgrade, and the tests instabilities should go away), whereas the 2b patch should only go to trunk because of its hard-upgrade impact.&lt;/p&gt;</comment>
                            <comment id="13862895" author="jira-bot" created="Mon, 6 Jan 2014 10:06:49 +0000"  >&lt;p&gt;Commit 1555702 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1555702&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1555702&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;: Triggers fire out of order&lt;/p&gt;

&lt;p&gt;Make sure the creation timestamp of a newly created trigger is higher&lt;br/&gt;
than the timestamps of the existing triggers on the same table. If it&lt;br/&gt;
is not higher, the triggers may fire in the wrong order. If the&lt;br/&gt;
current timestamp is not higher than the timestamp of the previous&lt;br/&gt;
trigger defined on the table, the new trigger now gets a creation&lt;br/&gt;
timestamp that is one millisecond higher than the creation timestamp&lt;br/&gt;
of the previous trigger.&lt;/p&gt;</comment>
                            <comment id="13862896" author="jira-bot" created="Mon, 6 Jan 2014 10:08:08 +0000"  >&lt;p&gt;Commit 1555703 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1555703&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1555703&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;: Triggers fire out of order&lt;/p&gt;

&lt;p&gt;In order to avoid ambiguities around switch from daylight saving time&lt;br/&gt;
to standard time, and other time zone changes, store the trigger&lt;br/&gt;
creation timestamps in Coordinated Universal Time (UTC) instead of the&lt;br/&gt;
local time zone.&lt;/p&gt;

&lt;p&gt;Only use UTC if the database has been upgraded to 10.11 format, so&lt;br/&gt;
that the change won&apos;t cause problems on downgrade.&lt;/p&gt;</comment>
                            <comment id="13879783" author="jira-bot" created="Thu, 23 Jan 2014 09:27:00 +0000"  >&lt;p&gt;Commit 1560616 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1560616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1560616&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;: Triggers fire out of order&lt;/p&gt;

&lt;p&gt;Merged revision 1555702 from trunk.&lt;/p&gt;</comment>
                            <comment id="13893354" author="jira-bot" created="Thu, 6 Feb 2014 13:30:14 +0000"  >&lt;p&gt;Commit 1565233 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.9&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1565233&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1565233&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;: Triggers fire out of order&lt;/p&gt;

&lt;p&gt;Merged revision 1560616 from 10.10.&lt;/p&gt;</comment>
                            <comment id="13893490" author="jira-bot" created="Thu, 6 Feb 2014 16:12:17 +0000"  >&lt;p&gt;Commit 1565320 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1565320&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1565320&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt;: Triggers fire out of order&lt;/p&gt;

&lt;p&gt;Merged revision 1565233 from 10.9.&lt;/p&gt;</comment>
                            <comment id="13896721" author="knutanders" created="Mon, 10 Feb 2014 16:09:22 +0000"  >&lt;p&gt;Attaching a proposed release note for this issue.&lt;/p&gt;</comment>
                            <comment id="13896722" author="knutanders" created="Mon, 10 Feb 2014 16:10:50 +0000"  >&lt;p&gt;A fix has been checked in on trunk, and parts of it have been backported all the way to 10.8. I&apos;m not planning to backport any further, so I&apos;m resolving the issue.&lt;/p&gt;</comment>
                            <comment id="14227080" author="jira-bot" created="Thu, 27 Nov 2014 01:05:06 +0000"  >&lt;p&gt;Commit 1641977 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=myrna&quot; class=&quot;user-hover&quot; rel=&quot;myrna&quot;&gt;Myrna van Lunteren&lt;/a&gt; in branch &apos;docs/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1641977&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1641977&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6475&quot; title=&quot;Update documentation for SYSTRIGGERS after DERBY-5866 changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6475&quot;&gt;&lt;del&gt;DERBY-6475&lt;/del&gt;&lt;/a&gt;; Update documentation for SYSTRIGGERS after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5866&quot; title=&quot; testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5866&quot;&gt;&lt;del&gt;DERBY-5866&lt;/del&gt;&lt;/a&gt; changes&lt;br/&gt;
   Adjusting the text for the SYS.SYSTRIGGERS.CREATIONTIMESTAMP column.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12687925">DERBY-6450</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12694288">DERBY-6475</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12654832">DERBY-6275</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12619069" name="d5866-1a-adjust-timestamp.diff" size="22302" author="knutanders" created="Tue, 17 Dec 2013 09:38:49 +0000"/>
                            <attachment id="12619818" name="d5866-2a-utc.diff" size="4193" author="knutanders" created="Fri, 20 Dec 2013 13:56:28 +0000"/>
                            <attachment id="12621079" name="d5866-2b-utc-after-upgrade.diff" size="7854" author="knutanders" created="Thu, 2 Jan 2014 14:34:29 +0000"/>
                            <attachment id="12582804" name="error-stacktrace.out" size="10581" author="myrna" created="Sat, 11 May 2013 23:57:26 +0100"/>
                            <attachment id="12609822" name="fail1.zip" size="8369220" author="knutanders" created="Wed, 23 Oct 2013 09:22:18 +0100"/>
                            <attachment id="12609823" name="fail2.zip" size="7319461" author="knutanders" created="Wed, 23 Oct 2013 09:22:18 +0100"/>
                            <attachment id="12627999" name="releaseNote.html" size="5819" author="knutanders" created="Mon, 10 Feb 2014 16:09:22 +0000"/>
                            <attachment id="12618406" name="time-zone-test.diff" size="5556" author="knutanders" created="Thu, 12 Dec 2013 13:48:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Oct 2012 12:05:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245757</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy08bj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35166</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>