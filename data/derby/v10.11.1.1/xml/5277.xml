<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5277/DERBY-5277.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5277] Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5277</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Seen many times in the JDK 7 tests lately, and also in the Tinderbox. First occurrence was here: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol32/1134678-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/Daily/jvm1.7/testing/testlog/sol32/1134678-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(There had been no commits in the last two days before this test run, so it&apos;s difficult to say if a recent change caused it.)&lt;/p&gt;

&lt;p&gt;The test case has a comment that says that it should never read the LOB into memory, but according to the stack trace, that&apos;s exactly what&apos;s happening:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLBinary.readFromStream(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLBinary.readExternal(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLBinary.getValue(Unknown Source)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLBinary.loadStream(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.objectifyStream(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.UpdateResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup.testTriggersWithLOBcolumns(BasicSetup.java:854)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12510419">DERBY-5277</key>
            <summary>Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                    </labels>
                <created>Wed, 15 Jun 2011 10:40:19 +0100</created>
                <updated>Thu, 2 May 2013 03:29:41 +0100</updated>
                            <resolved>Wed, 31 Aug 2011 19:48:44 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13051246" author="knutanders" created="Fri, 17 Jun 2011 19:48:46 +0100"  >&lt;p&gt;I added some tracing and it seems that the BLOB is materialized in databases upgraded from any version except 10.7.1.1. So if you upgrade a database from 10.8.1.2 to 10.9, the trigger will still materialize the BLOB.&lt;/p&gt;</comment>
                            <comment id="13051435" author="mamtas" created="Sat, 18 Jun 2011 02:42:23 +0100"  >&lt;p&gt;Hi Knut, I have been looking at this jira for sometime and found out the reason behind the problem.&lt;/p&gt;

&lt;p&gt;First of all, you are correct that if the upgrade is from 10.7.1.1 to trunk, we do not run into OOM with the LOB columns if those LOB columns are not needed by the triggering sql and firing triggers. This is because 10.7.1.1 collects information about column in trigger action and hence trunk can be smart about what columns should be read. As for all the other releases, none of them collect information about columns in trigger action and hence trigger firing sql decides to read all the columns including the LOBs even if they are not needed.&lt;/p&gt;

&lt;p&gt;At the time of upgrade, the trigger SPSes get marked invalid correctly.But they do not get recompiled until the time of actual trigger firing. UPDATE sql decides what columns it should read based on what it needs and what the firing triggers will need. When UPDATE sql is collecting all this informaiton about firing triggers, they are not get recompiled and hence UPDATE sql used incorrect information from the invalid triggers.I will work on this jira further to see how it can be resolved. One option would be to have UPDATE sql recognize the fact that the triggers are invalid and hence they should be recompiled first before UPDATE looks at them to determine what columns are needed by the triggers.&lt;/p&gt;

&lt;p&gt;As you noticed in the jira, this problem is intermittent because it all depends on how much memory upgrade suite has to run the tests. I guess I must have had enough memory to not run into OOM when I ran the upgrade suite few times on my machine. One of the things I had wondered about while adding the test in BasicSetup.testTriggersWithLOBcolumns if we could run upgrade suite with lower memory(something like lowmem suite). Better yet would be to just run testTriggersWithLOBcolumns test with lowmem. I will appreciate if anyone knows of a way of doing that in junit framework.&lt;/p&gt;
</comment>
                            <comment id="13052286" author="mamtas" created="Tue, 21 Jun 2011 01:19:38 +0100"  >&lt;p&gt;Trigger action SPSes get marked invalid at the time of upgrade. When such a trigger fires again, we regenerate the trigger action SPS. This regeneration looks at SYSTRIGGERS to find out what columns are being used through the REFERENCING CLAUSE and uses them to find the relative column positions of those columns in the regenerated trigger action. At the time of upgrade, this information will be available in SYSTRIGGER if the trigger was 	created in 10.7.1.1. But for all the other releases, SYSTRIGGERS does not have that 	information because that informaiton was never collected for the triggers in those releases. Because of this, the regenerated trigger action SPS will assume that all the columns will be read from the trigger table and hence it will use the absolute column 	positions of those columns in the trigger table in the regenerated trigger action SPS. 	This will cause such triggers to not be able to use the performance enhancement of selective column reading from the trigger table and hence even though not all the columns from the trigger table table are required by the triggering sql and firing triggers, we will read all the columns. One fix for this can be that when a trigger fires and it finds that it&apos;s trigger action SPS is invalid, then trigger should check if it uses REFERENCING clause and if the trigger action column information is missing from the SYSTRIGGERS, then it should drop and recreate the trigger with the trigger action column information collected and then regenerate the trigger action SPS based on it. Doing this will make Derby not read the columns not needed by the firing trigger and triggering sql. I will look into this to see what work is involved in collecting the trigger action column information for the triggers with that info missing. This should only happen for the triggers which are not created in 10.9 and higher because only releases prior to 10.9 (with the exception of 10.7.1.1) didn&apos;t collect the information about trigger action columns.&lt;/p&gt;</comment>
                            <comment id="13054612" author="mamtas" created="Fri, 24 Jun 2011 19:26:53 +0100"  >&lt;p&gt;Until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5294&quot; title=&quot;Enhance compress table to drop and recreate the triggers. This will enable pre-10.9 triggers (after hard upgrade to 10.9) to read only the required columns from the trigger table.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5294&quot;&gt;DERBY-5294&lt;/a&gt; (Triggers created prior to 10.9 release will continue to read all the columns from trigger table even after database has been upgraded to 10.9 and higher) is fixed, we risk running into OOM problems BasicSetup.testTriggersWithLOBcolumns(). Once &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5294&quot; title=&quot;Enhance compress table to drop and recreate the triggers. This will enable pre-10.9 triggers (after hard upgrade to 10.9) to read only the required columns from the trigger table.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5294&quot;&gt;DERBY-5294&lt;/a&gt; is fixed, we can enable BasicSetup.testTriggersWithLOBcolumns() again.&lt;/p&gt;</comment>
                            <comment id="13054657" author="mamtas" created="Fri, 24 Jun 2011 21:24:41 +0100"  >&lt;p&gt;I checked Sun&apos;s tinderbox runs and the last 3 runs have run fine with no OOM&lt;/p&gt;</comment>
                            <comment id="13094776" author="kmarsden" created="Wed, 31 Aug 2011 19:48:29 +0100"  >&lt;p&gt;reopen to add backport reject label as this only affects trunk&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12345511">DERBY-1482</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12511411">DERBY-5294</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 18 Jun 2011 01:42:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24752</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fcv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36306</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>