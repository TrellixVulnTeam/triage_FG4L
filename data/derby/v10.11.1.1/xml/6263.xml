<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:27:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6263/DERBY-6263.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6263] Make acceptChildren() overloads visit all clauses in QueryTreeNodes</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6263</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The acceptChildren() overloads don&apos;t visit all of the clauses in an AST node. This is probably a mistake. However, fixing it will require a systematic analysis of the AST nodes and probably some changes to the Visitors. Some queries rely on the fact that certain Visitors will not be called on some AST nodes even though the Visitors are called on sister nodes in the same parent AST node.&lt;/p&gt;

&lt;p&gt;An example of this defect is the CursorNode. If you call treePrint() on a CursorNode, you will see information on ORDER BY, FETCH, and OFFSET clauses. However, these clauses are not visited by CursorNode.acceptChildren(). This looks like an omission. This defect was brought to our attention by this email thread: &lt;a href=&quot;http://apache-database.10148.n7.nabble.com/Using-ASTParser-and-TreeWalker-for-parsing-SQL-query-td131219.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-database.10148.n7.nabble.com/Using-ASTParser-and-TreeWalker-for-parsing-SQL-query-td131219.html&lt;/a&gt;. You can see the difference in treePrint() and acceptChildren() behavior by running the following query through the ASTParser and TreePrinter tools attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3946&quot; title=&quot;Provide support for using the Derby parser to generate Abstract Syntax Trees&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3946&quot;&gt;&lt;del&gt;DERBY-3946&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;    select tablename from sys.systables where 1=2 order by tablename;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12652877">DERBY-6263</key>
            <summary>Make acceptChildren() overloads visit all clauses in QueryTreeNodes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                            <label>derby_triage10_11</label>
                    </labels>
                <created>Fri, 14 Jun 2013 14:27:14 +0100</created>
                <updated>Tue, 25 Jun 2013 16:13:51 +0100</updated>
                                            <version>10.11.1.1</version>
                                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13683352" author="rhillegas" created="Fri, 14 Jun 2013 14:45:38 +0100"  >&lt;p&gt;Attaching derby-6263-01-aa-visit-ignored-clauses.diff. This patch makes the Visitor logic inspect ORDER BY, FETCH, and OFFSET clauses. I am running tests now.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/CursorNode.java&lt;/p&gt;</comment>
                            <comment id="13683453" author="jira-bot" created="Fri, 14 Jun 2013 16:39:24 +0100"  >&lt;p&gt;Commit 1493123 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1493123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1493123&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;: Make the Visitor logic inspect ORDER BY, FETCH, and OFFSET CLAUSES. Tests passed cleanly for me on derby-6263-01-aa-visit-ignored-clauses.diff.&lt;/p&gt;</comment>
                            <comment id="13683458" author="jira-bot" created="Fri, 14 Jun 2013 16:44:16 +0100"  >&lt;p&gt;Commit 1493125 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1493125&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1493125&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;: Port 1493123 from trunk to 10.10 branch.&lt;/p&gt;</comment>
                            <comment id="13685517" author="rhillegas" created="Mon, 17 Jun 2013 14:05:19 +0100"  >&lt;p&gt;Attaching derby-6263-02-aa-ignored-clauses-in-SelectNode.diff. This patch adds some missing clauses to SelectNode.acceptChildren(). I am running tests now.&lt;/p&gt;

&lt;p&gt;15 test cases involving subqueries broke when I simply added the clauses. The tests work if I wrap the clauses in a conditional which excludes the HasCorrelatedCRsVisitor Visitor. A better solution might be to fix that Visitor. But I don&apos;t have much context for picking one solution over another. Hopefully we will get more insight if we systematically study the problem of missing clauses in the Visitor logic.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/SelectNode.java&lt;/p&gt;</comment>
                            <comment id="13685626" author="jira-bot" created="Mon, 17 Jun 2013 15:44:22 +0100"  >&lt;p&gt;Commit 1493789 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1493789&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1493789&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;: Add missing clauses to Visitor logic of SelectNode; tests passed cleanly on derby-6263-02-aa-ignored-clauses-in-SelectNode.diff.&lt;/p&gt;</comment>
                            <comment id="13685631" author="jira-bot" created="Mon, 17 Jun 2013 15:52:16 +0100"  >&lt;p&gt;Commit 1493796 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1493796&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1493796&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;: Port 1493789 from trunk to 10.10 branch.&lt;/p&gt;</comment>
                            <comment id="13686495" author="knutanders" created="Tue, 18 Jun 2013 09:22:09 +0100"  >&lt;p&gt;I agree that it sounds better to have the logic for skipping the nodes in the visitor. Having logic in the accept methods that makes them behave differently depending on which kind of visitor is used, sounds like a breach of the visitor pattern. The Visitor interface has a skipChildren(Visitable) method for this purpose.&lt;/p&gt;

&lt;p&gt;The code for traversing the orderByLists array seems to assume that (orderByLists&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == null) == (orderByLists&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; == null) for all i. I&apos;m not sure that&apos;s guaranteed, so it might be safer to go through all elements of the array and check each of them for being null.&lt;/p&gt;</comment>
                            <comment id="13686782" author="rhillegas" created="Tue, 18 Jun 2013 15:31:59 +0100"  >&lt;p&gt;Attaching derby-6263-03-aa-defensiveNullChecking-in-SelectNode.diff. This patch adds the defensive check for null cells in orderByLists[] as recommended by Knut. I am running tests now.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/SelectNode.java&lt;/p&gt;</comment>
                            <comment id="13686829" author="knutanders" created="Tue, 18 Jun 2013 16:31:16 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;The 03-aa patch fixes the case where orderByLists is &lt;/p&gt;
{ not-null, null }
&lt;p&gt;, but not the case where it&apos;s &lt;/p&gt;
{ null, not-null }. In the latter case, it will not visit the second OrderByList.&lt;br/&gt;
&lt;br/&gt;
I haven&apos;t verified that the array can ever be { null, not-null }
&lt;p&gt;, but there is logic in SelectNode.preprocess() to null out elements in orderByLists if they are redundant, so I believe it is possible that the first element is nulled out and the second isn&apos;t.&lt;/p&gt;</comment>
                            <comment id="13686844" author="rhillegas" created="Tue, 18 Jun 2013 16:47:06 +0100"  >&lt;p&gt;Thanks for noticing that Knut. Attaching derby-6263-03-ab-defensiveNullChecking-in-SelectNode.diff, which corrects the outer conditional. This patch also makes a similar correction to the block of code in SelectNode.printSubNodes() from which I cribbed the original not-null check. Running tests again...&lt;/p&gt;</comment>
                            <comment id="13686990" author="jira-bot" created="Tue, 18 Jun 2013 18:27:15 +0100"  >&lt;p&gt;Commit 1494220 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1494220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1494220&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6263&quot; title=&quot;Make acceptChildren() overloads visit all clauses in QueryTreeNodes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6263&quot;&gt;DERBY-6263&lt;/a&gt;: Add defensive code to Visitor support in SelectNode; tests passed cleanly on derby-6263-03-ab-defensiveNullChecking-in-SelectNode.diff.&lt;/p&gt;</comment>
                            <comment id="13687697" author="dagw" created="Wed, 19 Jun 2013 08:07:39 +0100"  >&lt;p&gt;Triaged for 10.11.&lt;/p&gt;</comment>
                            <comment id="13687699" author="dagw" created="Wed, 19 Jun 2013 08:11:10 +0100"  >&lt;p&gt;Rick, I don&apos;t think the visitors ever looked into all children; I suspect someone &quot;knew&quot; which node types were visited once, but that&apos;s obviously brittle and a breach of the pattern, so +1 to fixing this. But beware of more surprises; visitor returning nodes never returned before because visitors didn&apos;t expect certain nodes to be visited; it may be necessary to look at all visitor usages to ascertain the extended scope doesn&apos;t introduce corner case bugs....&lt;/p&gt;</comment>
                            <comment id="13687703" author="dagw" created="Wed, 19 Jun 2013 08:15:34 +0100"  >&lt;p&gt;Perhaps it would be more correct to label this &quot;Improvement&quot;, but it&apos;s a border line case.&lt;/p&gt;</comment>
                            <comment id="13687922" author="rhillegas" created="Wed, 19 Jun 2013 13:25:42 +0100"  >&lt;p&gt;Thanks for that feedback, Dag. I have reclassified this issue as an improvement.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12327185">DERBY-791</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12408365">DERBY-3946</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12587815" name="derby-6263-01-aa-visit-ignored-clauses.diff" size="1263" author="rhillegas" created="Fri, 14 Jun 2013 14:45:38 +0100"/>
                            <attachment id="12588134" name="derby-6263-02-aa-ignored-clauses-in-SelectNode.diff" size="1841" author="rhillegas" created="Mon, 17 Jun 2013 14:05:19 +0100"/>
                            <attachment id="12588369" name="derby-6263-03-aa-defensiveNullChecking-in-SelectNode.diff" size="977" author="rhillegas" created="Tue, 18 Jun 2013 15:31:59 +0100"/>
                            <attachment id="12588394" name="derby-6263-03-ab-defensiveNullChecking-in-SelectNode.diff" size="1676" author="rhillegas" created="Tue, 18 Jun 2013 16:47:06 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Jun 2013 15:39:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>333200</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzfbmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>333528</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>