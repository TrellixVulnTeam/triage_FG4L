<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6148/DERBY-6148.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6148] Wrong sort elimination when using permuted join order</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6148</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have a query that looks like this:&lt;/p&gt;

&lt;p&gt;  SELECT tests.id,tests.item,title FROM tests,item_usage&lt;br/&gt;
  WHERE username=? AND user_role&amp;gt;?&lt;br/&gt;
  AND item_usage.item=tests.item&lt;br/&gt;
  ORDER BY tests.item,title&lt;/p&gt;

&lt;p&gt;The result ordering is by item code followed by title, but the item codes are listed in the order in which they appear in the ITEMS table where they are the primary key rather than in ascending order as expected. If however I change the ORDER BY clause to sort by item_usage.item rather than tests.item, it works correctly, even though the two values are the same!&lt;/p&gt;

&lt;p&gt;The same thing happens in another unrelated query involving item_usage, and the same workaround cures it.&lt;/p&gt;

&lt;p&gt;The relevant tables are defined like so:&lt;/p&gt;

&lt;p&gt;  CREATE TABLE item_usage (&lt;br/&gt;
    username    VARCHAR(15)   NOT NULL,&lt;br/&gt;
    item        VARCHAR(15)   NOT NULL,&lt;br/&gt;
    value       SMALLINT      DEFAULT 0,&lt;br/&gt;
    CONSTRAINT item_usage_pk  PRIMARY KEY (username,item),&lt;br/&gt;
    CONSTRAINT item_usage_1   FOREIGN KEY (username)&lt;br/&gt;
                              REFERENCES users(username)&lt;br/&gt;
                              ON DELETE CASCADE,&lt;br/&gt;
    CONSTRAINT item_usage_2   FOREIGN KEY (item)&lt;br/&gt;
                              REFERENCES items(item)&lt;br/&gt;
                              ON DELETE CASCADE,&lt;br/&gt;
    CONSTRAINT item_usage_3   CHECK (value BETWEEN 0 AND 4)&lt;br/&gt;
  );&lt;/p&gt;

&lt;p&gt;  CREATE TABLE tests (&lt;br/&gt;
    id          INTEGER       GENERATED ALWAYS AS IDENTITY,&lt;br/&gt;
    item        VARCHAR(15)   NOT NULL,&lt;br/&gt;
    title       VARCHAR(255)  NOT NULL,&lt;br/&gt;
    disp        SMALLINT      NOT NULL DEFAULT 0,&lt;br/&gt;
    starttime   TIMESTAMP     DEFAULT NULL,&lt;br/&gt;
    endtime     TIMESTAMP     DEFAULT NULL,&lt;br/&gt;
    offsetx     INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    offsety     INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    rate        INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    duration    INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    calibrate   INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    deadline    TIMESTAMP     DEFAULT NULL,&lt;br/&gt;
    stepsize    INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    interval    INTEGER       NOT NULL DEFAULT 0,&lt;br/&gt;
    stand       CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    hidden      CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    repeated    CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    private     CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    sequential  CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    final       CHAR(1)       DEFAULT NULL,&lt;br/&gt;
    notes       CLOB          DEFAULT NULL,&lt;br/&gt;
    testxml     CLOB          NOT NULL,&lt;br/&gt;
    author      VARCHAR(15)   NOT NULL,&lt;br/&gt;
    time        TIMESTAMP     NOT NULL,&lt;br/&gt;
    CONSTRAINT tests_pk       PRIMARY KEY (id),&lt;br/&gt;
    CONSTRAINT tests_1        UNIQUE (item, title),&lt;br/&gt;
    CONSTRAINT tests_2        FOREIGN KEY (item)&lt;br/&gt;
                              REFERENCES items(item)&lt;br/&gt;
                              ON DELETE CASCADE,&lt;br/&gt;
    CONSTRAINT tests_3        CHECK (disp BETWEEN 0 AND 100),&lt;br/&gt;
    CONSTRAINT tests_4        CHECK (rate BETWEEN 0 AND 100),&lt;br/&gt;
    CONSTRAINT tests_5        CHECK (stepsize BETWEEN 0 AND 100)&lt;br/&gt;
  );&lt;/p&gt;

&lt;p&gt;If I run the query manually I get this, as expected:&lt;/p&gt;

&lt;p&gt;  ID  ITEM    TITLE&lt;br/&gt;
  37  60001   Test 1&lt;br/&gt;
  42  60001   Test 2&lt;br/&gt;
  51  60001   Test 3&lt;br/&gt;
  17  61303   Test 2a&lt;br/&gt;
  16  61303   Test 2b&lt;br/&gt;
  7   7205731 Test 2a&lt;br/&gt;
  8   7205731 Test 2b&lt;/p&gt;

&lt;p&gt;Now, this is actually part of a web app that should turn this into a list of options in a &amp;lt;select&amp;gt; item using the following code:&lt;/p&gt;

&lt;p&gt;  while (query.next()) &lt;/p&gt;
{
    println(&quot;&amp;lt;option value=&apos;&quot; + query.getInt(&quot;id&quot;) + &quot;&apos;&amp;gt;&quot;
            + encode(query.getString(&quot;item&quot;) + &quot;: &quot;
            + query.getString(&quot;title&quot;)) + &quot;&amp;lt;/option&amp;gt;&quot;);
  }

&lt;p&gt;What I actually get is this:&lt;/p&gt;

&lt;p&gt;  &amp;lt;option value=&quot;17&quot;&amp;gt;61303: Test 2a&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;16&quot;&amp;gt;61303: Test 2b&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;7&quot;&amp;gt;7205731: Test 2a&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;8&quot;&amp;gt;7205731: Test 2b&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;37&quot;&amp;gt;60001: Test 1&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;42&quot;&amp;gt;60001: Test 2&amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;option value=&quot;51&quot;&amp;gt;60001: Test 3&amp;lt;/option&amp;gt;&lt;/p&gt;

&lt;p&gt;The results are sorted by item then by title, but the item order is the order in which they were originally inserted into the items table (where the item and item description are stored, referenced by item_usage.item) rather than by item code. &lt;/p&gt;

&lt;p&gt;I&apos;ve tried to reproduce this behaviour in a simple example, but without success. I have logged the query plans for both versions; the log output is as follows, with the INCORRECT query (using ORDER BY tests.item) followed later by the CORRECT query (using ORDER BY item_usage.item):&lt;/p&gt;

&lt;p&gt;(moved queryplans to attachment; see attachment queryplans.txt -dagw)&lt;/p&gt;
</description>
                <environment>Windows 7 64-bit, Ubuntu 32-bit; JRE 1.7.0_11+</environment>
        <key id="12640488">DERBY-6148</key>
            <summary>Wrong sort elimination when using permuted join order</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="john_english">John English</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Apr 2013 11:54:27 +0100</created>
                <updated>Wed, 16 Apr 2014 03:41:25 +0100</updated>
                            <resolved>Tue, 28 May 2013 12:40:28 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                    <version>10.6.2.1</version>
                    <version>10.7.1.1</version>
                    <version>10.8.1.2</version>
                    <version>10.8.2.2</version>
                    <version>10.8.3.0</version>
                    <version>10.9.1.0</version>
                    <version>10.10.1.1</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13651741" author="dagw" created="Wed, 8 May 2013 10:28:20 +0100"  >&lt;p&gt;Do you have a stand-alone repro for this? I&apos;ll try to recreate the error but I need table data...&lt;/p&gt;</comment>
                            <comment id="13651757" author="dagw" created="Wed, 8 May 2013 11:00:50 +0100"  >&lt;p&gt;It seems some part of the schema is missing too, e.g. user_role (from table users?) and table items.&lt;/p&gt;</comment>
                            <comment id="13651772" author="john_english" created="Wed, 8 May 2013 11:41:14 +0100"  >
&lt;p&gt;I&apos;m sorry, but I&apos;ve tried to reproduce it without any success. It is always &lt;br/&gt;
reproducible when I use the full DB, but I don&apos;t want to send you that, and all &lt;br/&gt;
the attempts I&apos;ve made to strip it down to bare essentials have failed (i.e. it &lt;br/&gt;
always sorts correctly.&lt;/p&gt;

&lt;p&gt;I&apos;ll try again, exporting just the relevant tables from the DB, and if necessary &lt;br/&gt;
send you a schema and zipped copy of the DB I end up with.&lt;/p&gt;

&lt;p&gt;Thanks for looking at this,&lt;br/&gt;
&amp;#8211; &lt;br/&gt;
John English&lt;/p&gt;</comment>
                            <comment id="13651892" author="john_english" created="Wed, 8 May 2013 14:41:14 +0100"  >
&lt;p&gt;I&apos;ve finally managed to reproduce it; attached is a zipfile containing:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the table schemas (schema.sql)&lt;/li&gt;
	&lt;li&gt;a database using this schema taken from the live DB&lt;/li&gt;
	&lt;li&gt;a script that exhibits the fault with the attached DB (test.sql)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;During the course of my experiments, I&apos;ve discovered that it seems to happen &lt;br/&gt;
only when the users table contains users with names involving 16-bit characters. &lt;br/&gt;
If you connect to the attached DB and do this:&lt;/p&gt;

&lt;p&gt;   DELETE FROM users WHERE username LIKE &apos;3%&apos;;&lt;/p&gt;

&lt;p&gt;the two queries in &quot;test.sql&quot; will then both work correctly!&lt;br/&gt;
&amp;#8211; &lt;br/&gt;
John English&lt;/p&gt;</comment>
                            <comment id="13652826" author="john_english" created="Thu, 9 May 2013 10:15:13 +0100"  >&lt;p&gt;I&apos;ve taken out a lot of extraneous detail from the attached DB without changing &lt;br/&gt;
the behaviour. I&apos;ve played with renaming users and so on, and it seems that the &lt;br/&gt;
behaviour is no longer exhibited if you do either of these two things:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;ALTER TABLE item_usage DROP COLUMN value&lt;/li&gt;
	&lt;li&gt;DELETE FROM users WHERE username LIKE &apos;USER%&apos;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The new attachment contains the stripped-down DB.&lt;br/&gt;
&amp;#8211; &lt;br/&gt;
John English&lt;/p&gt;</comment>
                            <comment id="13653511" author="dagw" created="Fri, 10 May 2013 04:41:32 +0100"  >&lt;p&gt;Thanks, John! I am able to see the error in the Derby trunk code line &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13655190" author="dagw" created="Sat, 11 May 2013 08:38:10 +0100"  >&lt;p&gt;Both queries read the left table ITEM_USAGE) in the join the same way: index scan using the index for the ITEM_USAGE_1 constraint, i.e. visiting all the rows containing the user &apos;TAMMY&apos; and reading the base row for the value of ITEM.&lt;/p&gt;

&lt;p&gt;The correct query wraps the join in a sort; the wrong one does not, apparently believing sorting of the join isn&apos;t necessary.&lt;/p&gt;

&lt;p&gt;Now, the correct query accesses the other joinee, TESTS, using a table scan, so obviously sorting is used.&lt;/p&gt;

&lt;p&gt;The wrong query uses the index on the constraint TESTS_1 which covers the two columns on which we order, TESTS.ITEM and TESTS.TITLE, and also accesses the base row for TESTS.ID.  Now, this means that for each row in the left table (ITEM_USAGE), the rows read from the right table will be read in sorted order for TESTS.ITEM and TESTS.TITLE.&lt;/p&gt;

&lt;p&gt;But there is more than one row in the left table (5 rows), so the total set of joined rows will not be sorted, as seen.&lt;/p&gt;

&lt;p&gt;Now, why Derby reaches the conclusion it can skip the sort, remains to be seen. I&apos;ll try to trace the logic that short circuits the sorting.&lt;/p&gt;</comment>
                            <comment id="13655196" author="dagw" created="Sat, 11 May 2013 09:20:40 +0100"  >&lt;p&gt;Uploading two optimizer traces: q1.txt is the wrong query, q2.txt is the one that works correctly (has sorting). We can see that q1 chooses a sort avoidance access path.&lt;/p&gt;</comment>
                            <comment id="13655700" author="dagw" created="Mon, 13 May 2013 01:42:32 +0100"  >&lt;p&gt;I looked at the query tree after the preprocessing phase for the wrong query, and the sort requirement is still present, so I believe the optimizer somehow has reached the conclusion that the sortt is unnecessary due to the access path chosen. (cf. uploaded preprocessed1.txt and preprocessed2.txt).&lt;/p&gt;</comment>
                            <comment id="13655752" author="dagw" created="Mon, 13 May 2013 05:42:32 +0100"  >&lt;p&gt;It turns out that the optimizer switches the order of the tables in the join from &lt;/p&gt;

&lt;p&gt;   &lt;span class=&quot;error&quot;&gt;&amp;#91;TESTS, ITEM_USAGE&amp;#93;&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;ITEM_USAGE, TESTS&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;using the ITEM_USAGE_1 index for the best plan. Interestingly, if I change the join order myself (so it would be the first permutation the optimizer tries), the results are correct, i.e. into &lt;/p&gt;

&lt;p&gt;SELECT tests.id,tests.item,title FROM item_usage, tests       /* changed to order chosen by optimizer */&lt;br/&gt;
  WHERE username=&apos;TAMMY&apos; AND item_usage.item=tests.item&lt;br/&gt;
  ORDER BY tests.item,title;&lt;/p&gt;

&lt;p&gt;Now, if the order had been the one first considered in the original query, e.g. &lt;span class=&quot;error&quot;&gt;&amp;#91;TESTS, ITEM_USAGE&amp;#93;&lt;/span&gt; and still using the index TESTS_1 corresponding to the constraint UNIQUE (item, title),&lt;br/&gt;
then all the rows of the outer table would be sorted on the desired columns TESTS.ITEM, TESTS.TITLE. A theory may be that when the optimizer rejects that plan based on cost, if neglects to &quot;reset&quot; (or forget) the fact that sorting isn&apos;t needed when it turns to the other ordering, for which it &lt;b&gt;is&lt;/b&gt; needed.&lt;/p&gt;

</comment>
                            <comment id="13659298" author="dagw" created="Thu, 16 May 2013 07:45:31 +0100"  >&lt;p&gt;Uploading a patch which makes the failing query work and regressions passed. It is not for commit; I need add new regression tests at the minimum.&lt;/p&gt;

&lt;p&gt;The previous hypothesis about lacking reset/forgetting info from the first (discarded) join permutation proved to not be the reason for the error.  I believe the root cause is an incorrect assumption in OrderByList#sortRequired(RowOrdering, JBitSet, OptimizableList). &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3926&quot; title=&quot;Incorrect ORDER BY caused by index&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3926&quot;&gt;&lt;del&gt;DERBY-3926&lt;/del&gt;&lt;/a&gt; added the OptimizableList argument to this method. &lt;/p&gt;

&lt;p&gt;In the logic, that argument is treated as the join ordering under consideration, cf. the Javadoc of RequiredRowOrdering#sortRequired; the interface OrderByList&apos;s method implements (quote):&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&quot;@param optimizableList	The current join order being considered by&lt;/li&gt;
	&lt;li&gt;the optimizer. We need to look into this to determine if the outer&lt;/li&gt;
	&lt;li&gt;optimizables are single row resultset if the order by column is&lt;/li&gt;
	&lt;li&gt;on an inner optimizable and that inner optimizable is not a one&lt;/li&gt;
	&lt;li&gt;row resultset. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3926&quot; title=&quot;Incorrect ORDER BY caused by index&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3926&quot;&gt;&lt;del&gt;DERBY-3926&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However, debugging, I see that the argument passed in from OptimizerImpl is always OptimizerImpl#optimizableList which is not permuted when join orders are considered. The permutation is described by OptimizerImpl#proposedJoinOrder, which is a map into OptimizerImpl#optimizableList.  See for example usage ca line 556:&lt;/p&gt;

&lt;p&gt;....optimizableList.getOptimizable(proposedJoinOrder&lt;span class=&quot;error&quot;&gt;&amp;#91;joinPosition&amp;#93;&lt;/span&gt;).getBestAccessPath()....&lt;/p&gt;

&lt;p&gt;Now in OrderByList#sortRequired, there is this piece of code:&lt;/p&gt;

&lt;p&gt;    // If we have come across the optimizable for the order&lt;br/&gt;
    // by column in the join order, then we do not need to&lt;br/&gt;
    // look at the inner optimizables in the join order. As&lt;br/&gt;
    // long as the outer optimizables are one row&lt;br/&gt;
    // resultset, or is ordered on the order by column (see&lt;br/&gt;
    // below check), we are fine to consider sort&lt;br/&gt;
    // avoidance.&lt;br/&gt;
    if (considerOptimizable.getTableNumber() == &lt;br/&gt;
        cr.getTableNumber())&lt;br/&gt;
        break;&lt;/p&gt;

&lt;p&gt;This test is meant to determine that the column reference cr (the current order by column under consideration) references the current (outer) optimizable. It will only get this this test for inner tables if the outer has only one row. And in the query that works as intended so when I textually reordered the FROM tables to match the chosen join order, that&apos;s exactly what happens: ITEMS_USAGE is the outer table and the cr&apos;s table number doesn&apos;t match it (both colums reference TESTS), so the break is not performed.&lt;/p&gt;

&lt;p&gt;However, in the failing case, this test actually checks against the &lt;b&gt;inner&lt;/b&gt; table (TESTS), since the proposedJoinOrder map isn&apos;t used, so the break is executed. Then later in the same method, ca line 622, we check whether the order by columns are ordered against the rowOrdering of the current access path (the index on the unique constraint TESTS_1 which does contain both the order by columns), so sort avoidance is accepted.&lt;/p&gt;

&lt;p&gt;After I introduce the indirection map into the method, the check shown above will always fail for outer ITEMS_USAGE (no matter its textual order in the join): execution proceeds to the check for single row in the outer optimizable (ca. line 605), which fails, since the outer table (ITEMS_USAGE) may have more than one row with even with equality predicate on user (&apos;TAMMY&apos;), so sort avoidance is not accepted.&lt;/p&gt;</comment>
                            <comment id="13659313" author="dagw" created="Thu, 16 May 2013 08:01:04 +0100"  >&lt;p&gt;Btw, I also added a few code comment lines to OptimizerImpl to explain what &quot;pulling&quot; means (thanks to Bryan for the example).&lt;/p&gt;</comment>
                            <comment id="13661316" author="dagw" created="Sat, 18 May 2013 08:10:40 +0100"  >&lt;p&gt;Uploading version 2 of this patch, which now includes a new regression test fixture which fails without the patch. I made the new test using the data in the uploaded repro database. &lt;/p&gt;

&lt;p&gt;Btw, John, is that OK, or should I obfuscate the user data in it? (there are user names...).&lt;/p&gt;

&lt;p&gt;I had to use optimizer directive to get it to choose the access paths and join method (nested loop) that failed; presumably the statistics in the original database are different and out of the date; in any case when I loaded a new database and created indexes, the optimizer chose to use a hash join instead of the failing plan if I didn&apos;t add the overrides.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;</comment>
                            <comment id="13661324" author="dagw" created="Sat, 18 May 2013 10:16:13 +0100"  >&lt;p&gt;Linking to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4331&quot; title=&quot;Join returns results in wrong order&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4331&quot;&gt;&lt;del&gt;DERBY-4331&lt;/del&gt;&lt;/a&gt; too.&lt;/p&gt;</comment>
                            <comment id="13661485" author="dagw" created="Sun, 19 May 2013 04:56:52 +0100"  >&lt;p&gt;Regressions passed for version #2 of the patch.&lt;/p&gt;</comment>
                            <comment id="13662477" author="mamtas" created="Tue, 21 May 2013 00:59:31 +0100"  >&lt;p&gt;Hi Dag, thanks for working on this jira and finding the solution of using proposedJoinOrder vs optimizableList in sortRequired method since proposedJoinOrder will have the order of the tables in the join order being considered by the optimizer. I am wondering with this change, if we should stop passing optimizableList since I don&apos;t see it being used anymore in OrderByList.sortRequired() method anymore. Thanks&lt;/p&gt;</comment>
                            <comment id="13662661" author="dagw" created="Tue, 21 May 2013 05:13:14 +0100"  >&lt;p&gt;Thanks, Mamta. optimizableList is still being used; proposedJoinOrder is just a map &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; into it, cf. these lines in sortRequired (with the patch applied):&lt;/p&gt;

&lt;p&gt;    :&lt;br/&gt;
    // Get one outer optimizable at a time from the join&lt;br/&gt;
    // order&lt;br/&gt;
    Optimizable considerOptimizable = optimizableList.&lt;br/&gt;
        getOptimizable(proposedJoinOrder&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;br/&gt;
    :&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; it maps join order index into fixed list index in optimizableList &lt;/p&gt;</comment>
                            <comment id="13662676" author="dagw" created="Tue, 21 May 2013 05:47:33 +0100"  >&lt;p&gt;Attaching revision 3 with synthentic names in the new regression test. Deleting original repro db attachment and revision #2 patch for privacy reasons.&lt;/p&gt;</comment>
                            <comment id="13662944" author="knutanders" created="Tue, 21 May 2013 13:45:22 +0100"  >&lt;p&gt;Thanks for the clear explanation, Dag. The patch looks correct to me.&lt;/p&gt;

&lt;p&gt;I just have one question about this loop in OrderByList:&lt;/p&gt;

&lt;p&gt;+                   for (int i=0;&lt;br/&gt;
+                        i &amp;lt; proposedJoinOrder.length &amp;amp;&amp;amp;&lt;br/&gt;
+                            proposedJoinOrder&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; != -1; // -1: partial order&lt;br/&gt;
+                        i++)&lt;/p&gt;

&lt;p&gt;I haven&apos;t verified, but I&apos;m assuming that -1&apos;s are always last in the array, so that it&apos;s fine to break out immediately when one is found. The original code didn&apos;t skip any optimizables here, as far as I can see. Does that mean the original code never really tried to do sort avoidance when only partial order was required?&lt;/p&gt;</comment>
                            <comment id="13663739" author="dagw" created="Wed, 22 May 2013 04:53:35 +0100"  >&lt;p&gt;Thanks, Knut. You are right, the original code didn&apos;t skip any optimizables. Of course, it accessed them directly, not via the map (which can contain -1s), so the access itself would work even though it would be meaningless/wrong. But if used, it would only serve to re-introduce&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; a sorting requirement; it would not in itself make us avoid more sorting than the original (wrong) code already did.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; by checking if a table not included in the partial ordering is &quot;alwaysOrdered&quot; on the column in question&lt;/p&gt;</comment>
                            <comment id="13666021" author="dagw" created="Fri, 24 May 2013 07:04:04 +0100"  >&lt;p&gt;Committed at svn 1485938, resolving.&lt;/p&gt;</comment>
                            <comment id="13666022" author="dagw" created="Fri, 24 May 2013 07:05:13 +0100"  >&lt;p&gt;Candidate for back-port.&lt;/p&gt;</comment>
                            <comment id="13666095" author="dagw" created="Fri, 24 May 2013 09:09:41 +0100"  >&lt;p&gt;Backported to 10.10 as svn 1485958.&lt;/p&gt;</comment>
                            <comment id="13666110" author="dagw" created="Fri, 24 May 2013 09:35:26 +0100"  >&lt;p&gt;Backported to 10.9 as svn 1485973.&lt;/p&gt;</comment>
                            <comment id="13666124" author="dagw" created="Fri, 24 May 2013 09:51:45 +0100"  >&lt;p&gt;Backported to 10.8 as svn 1485977.&lt;/p&gt;</comment>
                            <comment id="13666126" author="dagw" created="Fri, 24 May 2013 09:53:02 +0100"  >&lt;p&gt;John, if you are ok with the fix, please close this issue now. Thanks for reporting this!&lt;/p&gt;</comment>
                            <comment id="13666350" author="knutanders" created="Fri, 24 May 2013 15:21:50 +0100"  >&lt;p&gt;The back-port to 10.8 seems to have caused a build failure:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/Derby-branch-10.8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Derby-branch-10.8/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;compile_types:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 1 source file to /x1/jenkins/jenkins-slave/workspace/Derby-branch-10.8/10.8-head/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /x1/jenkins/jenkins-slave/workspace/Derby-branch-10.8/10.8-head/java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java:460: toString() in java.lang.Object cannot be applied to (int[])&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                     Arrays.toString(referencedColumns) + &quot;\n&quot; +&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                           ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 1 error&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;/p&gt;

&lt;p&gt;Probably because the Arrays.toString(int[]) method is not available on Java 1.4.&lt;/p&gt;</comment>
                            <comment id="13667293" author="john_english" created="Sun, 26 May 2013 13:00:22 +0100"  >
&lt;p&gt;OK... errrm... how do I...?&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;br/&gt;
John English&lt;/p&gt;</comment>
                            <comment id="13668241" author="dagw" created="Tue, 28 May 2013 12:17:25 +0100"  >&lt;p&gt;Thanks, Knut. Backed out that offending line at svn 1486867, 1486879 and 1486880 for 10.8, 10.9 and 10.10 respectively.&lt;/p&gt;

&lt;p&gt;John, maybe only devs can do that, so I&apos;ll close it then.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12407399">DERBY-3926</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12431975">DERBY-4331</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12583441" name="derby-6148-1.diff" size="14307" author="dagw" created="Thu, 16 May 2013 07:45:31 +0100"/>
                            <attachment id="12583442" name="derby-6148-1.status" size="526" author="dagw" created="Thu, 16 May 2013 07:45:31 +0100"/>
                            <attachment id="12583957" name="derby-6148-3.diff" size="26263" author="dagw" created="Tue, 21 May 2013 05:47:33 +0100"/>
                            <attachment id="12583958" name="derby-6148-3.status" size="631" author="dagw" created="Tue, 21 May 2013 05:47:33 +0100"/>
                            <attachment id="12582876" name="preprocessed1.txt" size="22911" author="dagw" created="Mon, 13 May 2013 01:43:11 +0100"/>
                            <attachment id="12582877" name="preprocessed2.txt" size="26226" author="dagw" created="Mon, 13 May 2013 01:43:11 +0100"/>
                            <attachment id="12582777" name="q1.txt" size="56449" author="dagw" created="Sat, 11 May 2013 09:21:30 +0100"/>
                            <attachment id="12582778" name="q2.txt" size="52318" author="dagw" created="Sat, 11 May 2013 09:21:30 +0100"/>
                            <attachment id="12583445" name="queryplans.txt" size="110036" author="dagw" created="Thu, 16 May 2013 07:57:08 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 May 2013 09:28:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzd85z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321289</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>