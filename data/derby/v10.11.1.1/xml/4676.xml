<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4676/DERBY-4676.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4676] NullPointerException on SELECT on INNER JOIN</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4676</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Running into a NullPointerException error in the Apache Derby database over multiple versions of the derby jars.  From testing, this issue intermittently occurs during moderate load test scenarios, but has never occurred in production.   This is using Derby as embedded and always occurs on the same statement as shown below and in the attachment.   Following the error, hibernate throws an exception which results in the code attempting to rollback the transaction.  The rollback fails as the NullPointerException appears to kill the connection.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;derby.log&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;2010-04-27 16:05:22.429 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;SNMPDelayedStoreRunnable2Thread,5,main&amp;#93;&lt;/span&gt; (XID = 244546), (SESSIONID = 17), (DATABASE = db), (DRDAID = null), Cleanup action starting&lt;br/&gt;
2010-04-27 16:05:22.429 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;SNMPDelayedStoreRunnable2Thread,5,main&amp;#93;&lt;/span&gt; (XID = 244546), (SESSIONID = 17), (DATABASE = db), (DRDAID = null), Failed Statement is: select nonprimary0_.componentid as componen1_1_, nonprimary0_.deviceid as deviceid1_, device1_.deviceid as deviceid0_, device1_.name as name3_0_, device1_.description as descript3_3_0_, device1_.device_type as device4_3_0_, device1_.managed_address as managed5_3_0_, device1_.csid as csid3_0_, device1_.url as url3_0_, device1_.date_written_to_db as date8_3_0_, device1_.valid as valid3_0_, device1_.invalid_reason as invalid10_3_0_, device1_.version as version3_0_ from subsystem_callserver_map nonprimary0_ inner join device_data device1_ on nonprimary0_.deviceid=device1_.deviceid where nonprimary0_.componentid=? with 1 parameters begin parameter #1: 86b5b069-ca5c-4c38-9643-d9308c246100 :end parameter &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.fetch(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet.getNextRowCore(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)&lt;br/&gt;
	at com.mchange.v2.c3p0.impl.NewProxyResultSet.next(NewProxyResultSet.java:2859)&lt;br/&gt;
	at org.hibernate.loader.Loader.doQuery(Loader.java:408)&lt;br/&gt;
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:218)&lt;br/&gt;
	at org.hibernate.loader.Loader.loadCollection(Loader.java:1434)&lt;br/&gt;
	at org.hibernate.loader.collection.CollectionLoader.initialize(CollectionLoader.java:99)&lt;br/&gt;
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:488)&lt;br/&gt;
	at org.hibernate.event.def.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:60)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.initializeCollection(SessionImpl.java:1430)&lt;br/&gt;
	at org.hibernate.collection.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:280)&lt;br/&gt;
	at org.hibernate.engine.PersistenceContext.initializeNonLazyCollections(PersistenceContext.java:796)&lt;br/&gt;
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:223)&lt;br/&gt;
	at org.hibernate.loader.Loader.doList(Loader.java:1593)&lt;br/&gt;
	at org.hibernate.loader.Loader.list(Loader.java:1577)&lt;br/&gt;
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:395)&lt;br/&gt;
	at org.hibernate.hql.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:271)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.list(SessionImpl.java:844)&lt;br/&gt;
	at org.hibernate.impl.QueryImpl.list(QueryImpl.java:74)&lt;br/&gt;
	at ooad.p.ga(p.java:288)&lt;br/&gt;
	at ooad.p.ga(p.java:117)&lt;br/&gt;
	at oo.c.gdc(c.java:119)&lt;br/&gt;
	at oo.d.c(d.java:805)&lt;br/&gt;
	at oo.d.c(d.java:785)&lt;br/&gt;
	at oo.d.c(d.java:766)&lt;br/&gt;
	at oodb.s.run(s.java:82)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;application log&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Apr 27 2010 12:05:22.476 -0400: %_JDBCExceptionReporter-3-org.hibernate.util.JDBCExceptionReporter:  Java exception: &apos;: java.lang.NullPointerException&apos;.  &lt;br/&gt;
Apr 27 2010 12:05:22.492 -0400: %_JDBCTransaction-3-org.hibernate.transaction.JDBCTransaction:  JDBC rollback failed  &lt;br/&gt;
java.sql.SQLException: No current connection.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)&lt;br/&gt;
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:755)&lt;br/&gt;
	at org.hibernate.transaction.JDBCTransaction.rollbackAndResetAutoCommit(JDBCTransaction.java:163)&lt;br/&gt;
	at org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:142)&lt;br/&gt;
	at ooad.p.r(p.java:888)&lt;br/&gt;
	at ooad.p.ga(p.java:310)&lt;br/&gt;
	at ooad.p.ga(p.java:117)&lt;br/&gt;
	at oa.c.gdc(c.java:119)&lt;br/&gt;
	at oa.d.c(d.java:805)&lt;br/&gt;
	at oa.d.c(d.java:785)&lt;br/&gt;
	at oa.d.c(d.java:766)&lt;br/&gt;
	at ooad.s.run(s.java:82)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;</description>
                <environment>Windows XP, same problem occurred using Apache Derby 10.5.3.0 and still with the newly release 10.6.1.0 version.   &lt;br/&gt;
&lt;br/&gt;
For completeness, also noting using c3p0 0.9.1-pre10 and hibernate 3.0.5.   Attempted trying later versions of both (c3p0 and hibernate) to see if this resulted in a workaround, but had no success.</environment>
        <key id="12465288">DERBY-4676</key>
            <summary>NullPointerException on SELECT on INNER JOIN</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="skatzman">Seth Katzman</reporter>
                        <labels>
                            <label>nullpointerexception</label>
                    </labels>
                <created>Mon, 24 May 2010 18:27:16 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:26 +0100</updated>
                            <resolved>Fri, 9 Jul 2010 18:39:57 +0100</resolved>
                                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.2.1</fixVersion>
                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12870726" author="skatzman" created="Mon, 24 May 2010 18:31:42 +0100"  >&lt;p&gt;Apache Derby log stacktrace and application error stacktrace.&lt;/p&gt;</comment>
                            <comment id="12870874" author="knutanders" created="Mon, 24 May 2010 23:11:59 +0100"  >&lt;p&gt;Hi Seth,&lt;/p&gt;

&lt;p&gt;If you have the chance, it would be great if you could try to run with a debug version of Derby (available from the download page, look for the lib-debug tarball) so that we get line numbers in the stack trace and perhaps an assert failure with more information.&lt;/p&gt;

&lt;p&gt;Another thing that came to mind: What&apos;s the transaction isolation level for the connection? I was wondering if this could be caused by another thread deleting a row right after it was found in the index and before it was read from the heap, which I think may happen if the isolation level is read uncommitted.&lt;/p&gt;</comment>
                            <comment id="12871136" author="skatzman" created="Tue, 25 May 2010 14:21:46 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the quick reply.  I&apos;ll grab the debug jars and attempt to recreate the exception condition.  I&apos;ll add further comments/enclosures as I find out more (connection transaction isolation and debug logs).&lt;/p&gt;</comment>
                            <comment id="12871166" author="skatzman" created="Tue, 25 May 2010 15:34:08 +0100"  >&lt;p&gt;derby.log and application error log attachment using Derby 10.6.1.0 debug jars.&lt;/p&gt;</comment>
                            <comment id="12871169" author="skatzman" created="Tue, 25 May 2010 15:37:13 +0100"  >&lt;p&gt;I have attached the new logs (derby and application) using the 10.6.1.0 debug jars.  The derby log file shows the initial NullPointerException with source line numbers.  The application log file shows the debug dump of thread states with an assert failure.&lt;/p&gt;

&lt;p&gt;I also double checked the transaction isolation level of the connection being used.   The transaction isolation level is always returning 2 which looks to be TRANSACTION_READ_COMMITTED.&lt;/p&gt;</comment>
                            <comment id="12871264" author="knutanders" created="Tue, 25 May 2010 18:44:05 +0100"  >&lt;p&gt;Thanks, Seth.&lt;/p&gt;

&lt;p&gt;I am able to reproduce the bug with the attached java class. The repro has two threads running. One of them repeatedly inserts and deletes a record in a table. The other thread repeatedly reads rows from the same table, using an index on one of the columns.&lt;/p&gt;

&lt;p&gt;Here&apos;s the exception I see on trunk:&lt;/p&gt;

&lt;p&gt;$ java D4676&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2269)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4321)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:469)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:373)&lt;br/&gt;
	at D4676$Reader.run(D4676.java:53)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)&lt;br/&gt;
	... 10 more&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.fetch(GenericConglomerateController.java:291)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(IndexRowToBaseRowResultSet.java:389)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:477)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:429)&lt;br/&gt;
	... 2 more&lt;/p&gt;</comment>
                            <comment id="12871740" author="knutanders" created="Wed, 26 May 2010 14:28:14 +0100"  >&lt;p&gt;I looked at this in a debugger, and it seems like it&apos;s pos.current_page that&apos;s null in this code in GenericConglomerateController.fetch():&lt;/p&gt;

&lt;p&gt;        boolean ret_val = &lt;br/&gt;
            (pos.current_page.fetchFromSlot(&lt;br/&gt;
                pos.current_rh, pos.current_slot, &lt;br/&gt;
                row, &lt;br/&gt;
                new FetchDescriptor(&lt;br/&gt;
                    row.length, validColumns, (Qualifier[][]) null), &lt;br/&gt;
                false) != null);&lt;/p&gt;

&lt;p&gt;It is set to null by OpenConglomerate.latchPage() (called from fetch() via OpenConglomerate.lockPositionForRead()) when it discovers that the record was deleted by another transaction before the row was locked.&lt;/p&gt;

&lt;p&gt;One thing to note is that lockPositionForRead()&apos;s javadoc says:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;@param moveForwardIfRowDisappears&lt;/li&gt;
	&lt;li&gt;If true, then this routine must handle the case where&lt;/li&gt;
	&lt;li&gt;the row id we are waiting on disappears when the latch&lt;/li&gt;
	&lt;li&gt;is released.  If false an exception will be thrown if&lt;/li&gt;
	&lt;li&gt;the row disappears.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However, there is no exception thrown by this method when the row has disappeared, even though fetch() calls it with moveForwardIfRowDisappears=false.&lt;/p&gt;

&lt;p&gt;I think one possible fix is to make lockPositionForRead() raise an exception in this situation (can be detected by checking the return value from latchPage(), which is currently not checked). The javadoc for fetch() says that it should return false if the row has disappeared, so it could catch that exception and return false.&lt;/p&gt;

&lt;p&gt;fetch() is the only method that calls lockPositionForRead() with moveForwardIfRowDisappears=false, so such a change should only affect the case where we currently see a NullPointerException.&lt;/p&gt;</comment>
                            <comment id="12872042" author="bryanpendleton" created="Thu, 27 May 2010 01:50:04 +0100"  >&lt;p&gt;Doesn&apos;t GenericConglomerateController.fetch latch the page just before&lt;br/&gt;
it calls lockPositionForRead? Is the patch latch being given up inside the&lt;br/&gt;
lock call, and then re-acquired? Is that why this only shows up under very&lt;br/&gt;
high concurrency and lock contention scenarios?&lt;/p&gt;</comment>
                            <comment id="12872208" author="knutanders" created="Thu, 27 May 2010 14:02:59 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;&apos;Yes&apos; is the answer to all you questions above.&lt;/p&gt;

&lt;p&gt;fetch() first latches the heap page on which the indexed row is supposed to be found. Then it attempts to lock the row.&lt;/p&gt;

&lt;p&gt;If the row cannot be locked immediately, the latch is released before the thread is suspended while it waits for the lock to be obtained. Once it wakes up again, it will re-obtain the latch on the heap page. OpenConglomerate.latchPage() additionally checks if the row is still present on the page, and if it isn&apos;t, it will release the latch again and return false. OpenConglomerate.lockPositionForRead/Write however doesn&apos;t check the return value from latchPage() and doesn&apos;t distinguish between the case where the latch was successfully re-obtained and the case where it was not.&lt;/p&gt;

&lt;p&gt;Another simpler fix than what I suggested above, would be to check if pos.current_page is null after the attempt to lock the row, and assume that this means the row (or the entire page) is gone. In that case we should update the javadoc comment for lockPositionForRead() to state that this is how it behaves, and remove the sentence that incorrectly states that it raises an exception.&lt;/p&gt;</comment>
                            <comment id="12872752" author="bryanpendleton" created="Fri, 28 May 2010 02:24:52 +0100"  >&lt;p&gt;Given a choice between changing the code, or changing the comments,&lt;br/&gt;
I usually choose to change the comments.&lt;/p&gt;

&lt;p&gt;I think you have isolated and explained the problem clearly; either of&lt;br/&gt;
your proposed fixes seems reasonable to me.&lt;/p&gt;</comment>
                            <comment id="12872887" author="knutanders" created="Fri, 28 May 2010 08:35:29 +0100"  >&lt;p&gt;Thanks Bryan. I&apos;ll go ahead with adding the null check and updating the comment, as well as adding a store test that exposes the problem. I&apos;ll wait for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4678&quot; title=&quot;Avoid code duplication in GenericConglomerateController.fetch()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4678&quot;&gt;&lt;del&gt;DERBY-4678&lt;/del&gt;&lt;/a&gt; to go in first, so that we only have one fetch() method to fix in GenericConglomerateController.&lt;/p&gt;</comment>
                            <comment id="12873953" author="knutanders" created="Tue, 1 Jun 2010 12:19:35 +0100"  >&lt;p&gt;I&apos;m attaching a JUnit regression test case for the bug. It doesn&apos;t always fail, since the bug is highly dependent on the timing, but it triggers the NPE in about every other run in my environment.&lt;/p&gt;</comment>
                            <comment id="12874501" author="knutanders" created="Wed, 2 Jun 2010 09:38:52 +0100"  >&lt;p&gt;Uploading a patch for this issue (derby-4676-1a.diff) with the following changes:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/access/conglomerate/OpenConglomerate.java&lt;/p&gt;

&lt;p&gt;Updated javadoc for latchPage(), lockPositionForRead() and lockPositionForWrite() with info about the expected state upon return if the row has been removed.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/store/access/conglomerate/GenericConglomerateController.java&lt;/p&gt;

&lt;p&gt;Added a check to see if the row had been removed after calling lockPositionForRead/Write. If so, return false from fetch(), as specified by the ConglomerateController#fetch javadoc.&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/store/_Suite.java&lt;br/&gt;
A       java/testing/org/apache/derbyTesting/functionTests/tests/store/Derby4676Test.java&lt;/p&gt;

&lt;p&gt;Added a regression test that fails (intermittently) if the bug is present.&lt;/p&gt;

&lt;p&gt;Derbyall and suites.All ran cleanly with the patch. I&apos;ve also run the new regression test 500 times without seeing any errors.&lt;/p&gt;</comment>
                            <comment id="12876166" author="knutanders" created="Mon, 7 Jun 2010 09:23:08 +0100"  >&lt;p&gt;Committed revision 952138.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into back-porting the fix to 10.6 before I resolve the issue.&lt;/p&gt;</comment>
                            <comment id="12876615" author="knutanders" created="Tue, 8 Jun 2010 10:39:00 +0100"  >&lt;p&gt;Merged fix to 10.6 and committed revision 952585.&lt;br/&gt;
Marking the issue as resolved.&lt;/p&gt;

&lt;p&gt;Seth, if you want to verify the fix in your environment, you can either check out the 10.6 branch and build your own jars, or you can wait until the fix has been picked up by the nightly build of the 10.6 branch at &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/bits/10.6/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/bits/10.6/&lt;/a&gt; (download one with SVN revision number at or above 952585 when available). Please let us know how the testing goes.&lt;/p&gt;</comment>
                            <comment id="12876671" author="skatzman" created="Tue, 8 Jun 2010 14:17:56 +0100"  >&lt;p&gt;Hi Knut,&lt;/p&gt;

&lt;p&gt;I&apos;ll test the revised jar and get back to you with the results this coming week.   Thanks again.&lt;/p&gt;</comment>
                            <comment id="12877114" author="skatzman" created="Wed, 9 Jun 2010 16:59:41 +0100"  >&lt;p&gt;I ran several hours of load against the 952726 nightly build jars with no errors.  Previously, I was hitting this issue within 5-10 minutes on every run, so this appears to be a good fix.  Looks good.  Thanks.&lt;/p&gt;</comment>
                            <comment id="12877213" author="knutanders" created="Wed, 9 Jun 2010 22:19:19 +0100"  >&lt;p&gt;Thanks for testing the fix, Seth! I&apos;m closing the issue based on your feedback.&lt;/p&gt;</comment>
                            <comment id="12884439" author="kmarsden" created="Thu, 1 Jul 2010 22:51:51 +0100"  >&lt;p&gt;reopen for 10.5 back port&lt;/p&gt;</comment>
                            <comment id="12885685" author="mamtas" created="Tue, 6 Jul 2010 22:07:12 +0100"  >&lt;p&gt;I will backport this to 10.5&lt;/p&gt;</comment>
                            <comment id="12885759" author="mamtas" created="Wed, 7 Jul 2010 01:42:32 +0100"  >&lt;p&gt;When I ran derbyall after the merge on 10.5 codeline, I saw a NPE for&lt;br/&gt;
derbyall/derbynetclientmats/derbynetmats.fail:derbynet/dblook_test_net.java&lt;/p&gt;

&lt;p&gt;Not sure if it is indeed that test ran into NPE because I don&apos;t see one under that actual test directory. The derbyall.sum file has following&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;End:   dblook_test_net jdk1.6.0 DerbyNetClient derbynetmats:derbynetmats 2010-07-06 16:34:52 ***&lt;br/&gt;
Server Process did not complete in time. Destroying...&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.harness.RunTest.execTestProcess(RunTest.java:2609)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.harness.RunTest.testRun(RunTest.java:504)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.harness.RunTest.main(RunTest.java:372)&lt;br/&gt;
derby.infolog.append=true&lt;br/&gt;
derby.database.sqlAuthorization=true&lt;br/&gt;
derby.connection.requireAuthentication=true&lt;br/&gt;
derby.user.app=apppw&lt;/li&gt;
			&lt;li&gt;Start: dblook_test_net_territory jdk1.6.0 DerbyNetClient derbynetmats:derbynetmats 2010-07-06 16:34:53 ***&lt;br/&gt;
Initialize for framework: DerbyNetClient&lt;br/&gt;
java -Duser.language=en -Duser.country=US -Dderby.system.home=C:\p4clients\svn10.5\client1\10.5\systest\out142\derbyall\derbynetclientmats\DerbyNetClient\derbynetmats\derbynetmats\dblook_test_net_territory -Djava.security.manager -Djava.security.policy=C:\p4clients\svn10.5\client1\10.5\systest\out142\derby_tests.policy -DderbyTesting.codeclasses=&lt;a href=&quot;file:/C:/p4clients/svn10.5/client1/10.5/classes/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/C:/p4clients/svn10.5/client1/10.5/classes/&lt;/a&gt; -DderbyTesting.junit=&lt;a href=&quot;file:/C:/p4clients/svn10.5/client1/10.5/tools/java/junit.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/C:/p4clients/svn10.5/client1/10.5/tools/java/junit.jar&lt;/a&gt; -DderbyTesting.codedir=C:\p4clients\svn10.5\client1\10.5\classes -DderbyTesting.serverhost=localhost -DderbyTesting.clienthost=localhost org.apache.derby.drda.NetworkServerControl start &lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;SecurityManager not installed &amp;#8211;&lt;br/&gt;
Attempt to shutdown framework: DerbyNetClient
		&lt;ul&gt;
			&lt;li&gt;End:   dblook_test_net_territory jdk1.6.0 DerbyNetClient derbynetmats:derbynetmats 2010-07-06 16:35:55 ***&lt;br/&gt;
Warning: Cleanup failed on baseDir: C:\p4clients\svn10.5\client1\10.5\systest\out142\derbyall\derbynetclientmats\DerbyNetClient\derbynetmats\derbynetmats\dblook_test_net_territory&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;When I look directly under C:\p4clients\svn10.5\client1\10.5\systest\out142\derbyall\derbynetclientmats\DerbyNetClient\derbynetmats\derbynetmats, I don&apos;t see NPE in the files created for dblook_test_net&lt;/p&gt;

&lt;p&gt;I have attached the top level derbyall suite report files for reference.&lt;/p&gt;</comment>
                            <comment id="12885823" author="mamtas" created="Wed, 7 Jul 2010 05:30:43 +0100"  >&lt;p&gt;A rerun of derbyall didn&apos;t show any NPE. Running the junit suite now&lt;/p&gt;</comment>
                            <comment id="12885966" author="mamtas" created="Wed, 7 Jul 2010 16:53:32 +0100"  >&lt;p&gt;junit suite ran fine too on 10.5 after the merge. Will go ahead and checkin the changes into 10.5 this morning&lt;/p&gt;</comment>
                            <comment id="12886787" author="mamtas" created="Fri, 9 Jul 2010 18:39:57 +0100"  >&lt;p&gt;Backport to 10.5 done&lt;/p&gt;</comment>
                            <comment id="13685240" author="knutanders" created="Mon, 17 Jun 2013 10:19:26 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12465446">DERBY-4678</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12468384">DERBY-4728</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12445459" name="2010-05-25-applicationerror.log" size="37114" author="skatzman" created="Tue, 25 May 2010 15:34:08 +0100"/>
                            <attachment id="12445458" name="2010-05-25-derbyerror.log" size="17359" author="skatzman" created="Tue, 25 May 2010 15:34:08 +0100"/>
                            <attachment id="12445477" name="D4676.java" size="1946" author="knutanders" created="Tue, 25 May 2010 18:44:05 +0100"/>
                            <attachment id="12446129" name="derby-4676-1a.diff" size="12780" author="knutanders" created="Wed, 2 Jun 2010 09:38:52 +0100"/>
                            <attachment id="12448839" name="derbyall.sum" size="95776" author="mamtas" created="Wed, 7 Jul 2010 01:42:32 +0100"/>
                            <attachment id="12448838" name="derbyall_diff.txt" size="27077" author="mamtas" created="Wed, 7 Jul 2010 01:42:32 +0100"/>
                            <attachment id="12448840" name="derbyall_fail.txt" size="138" author="mamtas" created="Wed, 7 Jul 2010 01:42:32 +0100"/>
                            <attachment id="12445353" name="derbyerror.log" size="3245" author="skatzman" created="Mon, 24 May 2010 18:31:42 +0100"/>
                            <attachment id="12445354" name="error.log" size="1378" author="skatzman" created="Mon, 24 May 2010 18:31:42 +0100"/>
                            <attachment id="12446015" name="junit.diff" size="6025" author="knutanders" created="Tue, 1 Jun 2010 12:19:35 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 May 2010 22:11:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24404</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ntj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37677</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>