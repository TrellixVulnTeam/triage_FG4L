<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:44:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-31/DERBY-31.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-31] Statement.setQueryTimeout() support.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-31</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Calling Statement.setQueryTimeout() throws exception saying that function is not supported. This is an important JDBC feature and is limiting our options to use Derby with our JDBC code. Implementing this JDBC function would make Derby much easier to adopt.&lt;/p&gt;</description>
                <environment>ALL</environment>
        <key id="27621">DERBY-31</key>
            <summary>Statement.setQueryTimeout() support.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bakksjo">Oyvind Bakksjo</assignee>
                                    <reporter username="demir4">Ali Demir</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Oct 2004 19:54:43 +0100</created>
                <updated>Wed, 1 Jul 2009 01:34:40 +0100</updated>
                            <resolved>Fri, 28 Jul 2006 23:14:44 +0100</resolved>
                                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="53913" author="djd" created="Mon, 11 Oct 2004 18:35:48 +0100"  >&lt;p&gt;Change to new feature and JDBC component&lt;/p&gt;</comment>
                            <comment id="56812" author="maverick" created="Fri, 17 Dec 2004 09:39:36 +0000"  >&lt;p&gt;One solution can be to check for time(set a flag) when setQueryTimeout() is set.&lt;br/&gt;
Every time any executeXXX() method is called, check whether query timed out&lt;br/&gt;
with differrence from the present time and the flag set earlier.&lt;br/&gt;
If time out throw SQLException else do nothing &lt;/p&gt;</comment>
                            <comment id="56813" author="maverick" created="Fri, 17 Dec 2004 10:18:21 +0000"  >&lt;p&gt;Just to correct what I have commenetd earlier,&lt;br/&gt;
The solution can be from the time a query is executeXXX is called till the time&lt;br/&gt;
executeXXX fetches a ResultSet handle. If this time is greater than the time set,&lt;br/&gt;
throw SQLException&lt;/p&gt;</comment>
                            <comment id="56831" author="demir4" created="Fri, 17 Dec 2004 17:31:33 +0000"  >&lt;p&gt;When a time out is set to n millis, and if the query takes n+m millis, then caller would expect that time out occurs around n millis and not wait until n+m. Also, when the timeout occurs, the processing of the query should have been stopped and there should not be any locks held after timeout. Therefore, a simple solution that simply checks how long the query processing is taking is not enough. The internals of the system need to know that it should stop the query and release any locks held by it when the timeout occurs.&lt;/p&gt;</comment>
                            <comment id="59689" author="shreyas" created="Thu, 24 Feb 2005 14:24:48 +0000"  >&lt;p&gt;This is the patch for implementing setQueryTimeout() in  EmbedStatement.java . I clsoe the activation for the statement when the query times out so that the query stops executing. I tested this by inserting data into a table continuosly for about 12 hours and then doing a select * on it by setting the time out to 1 sec. It worked fine by cancelling the statement execution when the timeout happened.&lt;/p&gt;</comment>
                            <comment id="59690" author="shreyas" created="Thu, 24 Feb 2005 14:25:55 +0000"  >&lt;p&gt;This is the implementation of the Query Timer that triggers the statement cancelling on time out.&lt;/p&gt;</comment>
                            <comment id="12313255" author="bakksjo" created="Fri, 10 Jun 2005 21:02:09 +0100"  >&lt;p&gt;Output of the &apos;svn status&apos; command.&lt;/p&gt;</comment>
                            <comment id="12313256" author="bakksjo" created="Fri, 10 Jun 2005 21:03:54 +0100"  >&lt;p&gt;Output of the &apos;svn diff&apos; command.&lt;/p&gt;</comment>
                            <comment id="12313258" author="bakksjo" created="Fri, 10 Jun 2005 21:19:05 +0100"  >&lt;p&gt;Here is an implementation of Statement.setQueryTimeout.&lt;/p&gt;

&lt;p&gt;The patch includes a new functional test in the jdbcapi testsuite.&lt;/p&gt;

&lt;p&gt;It is my first Derby patch, so I ask any reviewer; please, use your magnifying glass and be critical. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;May I suggest that Dan looks at it, since he has given me the most feedback on this issue? (I don&apos;t write this to exclude other volunteers, I just think that Mr. &quot;Someone&quot; already has enough on his todo list, given all the requests of the kind &quot;Can someone review this patch?&quot;. ;o)&lt;/p&gt;

&lt;p&gt;Notes/thoughts/issues:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Perhaps other ResultSet classes than &lt;span class=&quot;error&quot;&gt;&amp;#91;Bulk&amp;#93;&lt;/span&gt;TableScanResultSet should check for cancellation, but I think these are the most important ones to begin with. I will look into this later.&lt;/li&gt;
	&lt;li&gt;Currently, no kind of substatement execution has any timeout value set. This includes update operations on updatable resultsets, triggers, alter table operations etc.&lt;/li&gt;
	&lt;li&gt;To a certain extent, I have cleaned up javadoc warnings in the files touched by me, since they made it difficult for me to see whether I had introduced any new javadoc warnings myself.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m running derbyall and will attach the results once it&apos;s finished.&lt;/p&gt;</comment>
                            <comment id="12313375" author="djd" created="Sun, 12 Jun 2005 04:41:26 +0100"  >&lt;p&gt;Some general comments on the patch&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;giving the patch file a specific name (rather than svn-diff) helps out the committers (and anyone else) when the patch is downloaded&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;try to resist the temptation to clean up the code (e.g. your javadoc fixes), it makes it much hard to review the patch and see the real changes.  If you want to do such cleanup that&apos;s great, by a separate patch is much better.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Specific comments&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the patch needs to be re-submitted, it doesn&apos;t apply for me on messages_en.properties and SQLState,&lt;br/&gt;
just update your codeline and see if a merge is needed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In general I believe the functionality is correct and clearly implemented but I have a few minor concerns and one major one.&lt;/p&gt;

&lt;p&gt;The major one is the performance impact of this fix . Every time StatementContext.setInUse() is called  a new CancelQueryTask object will be created, that will be very expensive for queries, imagine a ResultSet of one milllion rows, that&apos;s at least one million short lived objects being created and going through gc. Derby tries to limit object creation during execution to be not  be a function of the number of rows, except where (indirectly) mandated by the JDBC spec. The impact of the checkCancellationFlag() calls is also of concern.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I wonder if  a module is really needed for the time task, a simpler approach would be just to have the Monitor return the TimerTask directly. The  TimerFactory interface doesn&apos;t add any value over TimerTask itself, and its one method ie badly named. I don&apos;t see any reason this timer should be limited to cancellation events.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The code seems to vary a bit about choosing to use milli-seconds or seconds, it has to be seconds at the JDBC level, but then internally you use milli-seconds and then back to seconds in the langauage PreparedStatement interface. I would stick to seconds since that is the granuality at the api level and only convert to ms at the TimerTask level. You might consider using the constant 0L if you are passing zero into a long method argument, means the method resolution remains the same if ever the method is overloaded with an int argument.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;For the JDBC Statement.setQueryTimeout() Derby traditionally checks that the input value is valid, thus I think an exception should be thrown for a negative timeout. (and that&apos;s the specified JDBC behaviour)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;In spite of those comments (I&apos;m very picky) I believe this is a good patch, especially for your first. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; In the open source world it&apos;s probably a 50-50 call as to if the patch could be committed as-is and these items subsequently addressed or they need to be addressed first. Some folks on the list may be concerned about the performance impact of this. I would like to see the functionality committed but the performance addressed before  this becomes part of any release.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;but the patch can only be committed there was a newer version that applied cleanly&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s actually great to have a concrete implementation because the issues with it give me some ideas on how it  possibly could be done without  such a performance impact, but that will have to be a later e-mail. I need to run &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12313431" author="bakksjo" created="Mon, 13 Jun 2005 19:24:08 +0100"  >&lt;p&gt;Hi Dan, thanks for reviewing this patch so quickly.&lt;/p&gt;

&lt;p&gt;I am fully aware of and share you concern for the performance impact of creating all the TimerTask objects. It is far from ideal. The problem is that the Timer class &lt;em&gt;forces&lt;/em&gt; recreation of TimerTask objects, since these can&apos;t be reused; when a TimerTask has run or been cancelled, it is pure waste. Trying to schedule the same task again will cause an exception. If it wasn&apos;t for this, we could associate a TimerTask with each StatementContext object.&lt;/p&gt;

&lt;p&gt;This performance impact will, however, only affect queries with a timeout value set. As such, it is a tradeoff - you can get timeouts, but that will slow down your execution.&lt;/p&gt;

&lt;p&gt;If it turns out that the calls to checkCancellationFlag() seriously affect performance, these calls could be decimated by doing the call only for each n-th row. (It sure will be nice to get that performance regression test, so we&apos;ll see the actual impact.) For the time being, I can do some rudimentary testing of this myself.&lt;/p&gt;

&lt;p&gt;I agree a separate module for the timer might be overkill. As for the interface, my idea was that more methods than getCancellationTimer() could be added as needs arose for Timers for other purposes. It would be up to the implementing class whether to actually return the same Timer object. I guess it would depend on the duration of the TimerTasks and the responsiveness requirements whether to use multiple Timers or just a single one.&lt;/p&gt;

&lt;p&gt;I meant to support milliseconds use internally and seconds at the JDBC API level. I guess it would be more consistent if I used milliseconds in the language PreparedStatement interface as well. And yes, I&apos;ll fix throwing an exception on negative timeout values.&lt;/p&gt;</comment>
                            <comment id="12313688" author="bakksjo" created="Wed, 15 Jun 2005 18:31:59 +0100"  >&lt;p&gt;Attached patch addresses the following issues:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Throw exception on negative input to setQueryTimeout()&lt;/li&gt;
	&lt;li&gt;Test case for the above&lt;/li&gt;
	&lt;li&gt;Use milliseconds instead of seconds in the PreparedStatement interface and GenericPreparedStatement class&lt;/li&gt;
	&lt;li&gt;Exclude SetQueryTimeoutTest from DerbyNet and DerbyNetClient, since these environments don&apos;t yet support the new functionality (will create a fix for the DerbyClient driver later&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Derbyall has been run with two failures, report attached.&lt;br/&gt;
StmtCloseFunTest - hard to tell if it&apos;s related to my changes, very little output from the test about what exactly failed.&lt;br/&gt;
miscerrors - doesn&apos;t seem related&lt;/p&gt;</comment>
                            <comment id="12314795" author="djd" created="Fri, 1 Jul 2005 03:39:02 +0100"  >&lt;p&gt;&#216;yvind&apos;s patch committed revision 208650. (into trunk)&lt;/p&gt;</comment>
                            <comment id="12357683" author="bakksjo" created="Tue, 15 Nov 2005 19:36:08 +0000"  >&lt;p&gt;Updated documentation which stated setQueryTimeout was not implemented.&lt;/p&gt;

&lt;p&gt;Sending        src/ref/rrefjdbc40794.dita&lt;br/&gt;
Transmitting file data .&lt;br/&gt;
Committed revision 344345.&lt;/p&gt;</comment>
                            <comment id="12363737" author="bandaram" created="Tue, 24 Jan 2006 05:23:58 +0000"  >&lt;p&gt;Is this issue ready to be RESOLVED and/or CLOSED? Oyvind seems to have done pretty much all activities that need to be done for this issue.&lt;/p&gt;</comment>
                            <comment id="12424193" author="rhillegas" created="Fri, 28 Jul 2006 23:14:44 +0100"  >&lt;p&gt;Appears to be implemented now in embedded and network drivers.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="32841">DERBY-310</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12317131">DERBY-579</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12313356">DERBY-506</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12325635">DERBY-705</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12310760" name="DERBY-31.svn.diff" size="83048" author="bakksjo" created="Wed, 15 Jun 2005 18:31:59 +0100"/>
                            <attachment id="12310759" name="DERBY-31.svn.status" size="2334" author="bakksjo" created="Wed, 15 Jun 2005 18:31:59 +0100"/>
                            <attachment id="12310761" name="derbyall_report.txt" size="14604" author="bakksjo" created="Wed, 15 Jun 2005 18:31:59 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Oct 2004 17:35:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29365</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0stj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38487</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>