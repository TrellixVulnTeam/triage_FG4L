<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2151/DERBY-2151.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2151] &quot;Fixer-upper&quot; utility to help convert ij canon-based tests to JUnit.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2151</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;As part of my work to get the XML tests running in JUnit (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1758&quot; title=&quot;Enable xmlSuite to run as part of derbyall in environments that have the required external jars.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1758&quot;&gt;&lt;del&gt;DERBY-1758&lt;/del&gt;&lt;/a&gt;) I had to convert the old ij test lang/xml_general.sql into a JUnit equivalent.  After hand-converting about twenty or so lines of ij &quot;master&quot; output to the corresponding JUnit commands, I became bored with the melancholy of such a task.  So I hastily threw together a small utility to help automate as much of the process as possible.&lt;/p&gt;

&lt;p&gt;To be perfectly frank, the utility is a shameful piece of code.  It&apos;s poorly-written, non-intuitive, overly complex and not at all well thought-out.  It&apos;s also completely UN-commented. I wish I could follow-up with a half-hearted claim that &quot;at least it works&quot;, but I&apos;m not even sure &lt;b&gt;that&lt;/b&gt;&apos;s always true...&lt;/p&gt;

&lt;p&gt;My first (and still lingering) inclination is to just bury the utility and never look at it again.  However, I have to admit that, while the code is a nightmare to understand, it did a) prompt me to add some general-purpose JUnit utility methods that can be useful (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1976&quot; title=&quot;Add new utility methods to BaseJDBCTestCase to make conversion of ij tests to JUnit easier.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1976&quot;&gt;&lt;del&gt;DERBY-1976&lt;/del&gt;&lt;/a&gt;), and b) save me a lot of time by providing a rough translation of the ij test to JUnit.  Then instead of piddling away at line-by-conversions of the test I was able to spend my time re-organizing the JUnit version to make it adhere to the JUnit suggestions on the second page of:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://www.javaworld.com/jw-12-2000/jw-1221-junit.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.javaworld.com/jw-12-2000/jw-1221-junit.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the utility &lt;b&gt;did&lt;/b&gt; save me time.  And for that reason I&apos;ve decided to choke down my embarassment and post it to a Jira issue for other developers who may find it useful (or perhaps entertaining as an example of bad programming)...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12357803">DERBY-2151</key>
            <summary>&quot;Fixer-upper&quot; utility to help convert ij canon-based tests to JUnit.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Dec 2006 17:45:13 +0000</created>
                <updated>Fri, 21 Jan 2011 17:49:32 +0000</updated>
                            <resolved>Wed, 18 Apr 2007 23:11:55 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12455706" author="army" created="Tue, 5 Dec 2006 17:47:21 +0000"  >&lt;p&gt;Attaching the java file.  The program, called &quot;ijToJUnit&quot;, takes as input the embedded master file corresponding to a .sql test and does a line-by-line mapping of that output file to corresponding JUnit calls.  Note that the master file should be the &lt;b&gt;embedded&lt;/b&gt; master (.out) file; the tool will not work with output files generated by Derby Client or JCC tests.  That said, though, the JUnit commands generated by the tool are intended to behave the same regardless of the framework in use.&lt;/p&gt;

&lt;p&gt;  Usage:  java ijToJUnit &amp;lt;embedded_sql_out_file&amp;gt;&lt;/p&gt;

&lt;p&gt;While processing a master file, the tool may ignore lines that it thinks are irrelevant to the test.  In that case the lines will be written to the output file with the tag &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;**:: IGNORED ::**&amp;#93;&lt;/span&gt;&quot; in front of them.  If the tool encounters any lines in the .out file that it does not know how to convert, it will write the lines to the output file with the tag &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;**:: UNCONVERTED ::**&amp;#93;&lt;/span&gt;&quot;.&lt;/p&gt;

&lt;p&gt;Upon completion the tool prints out the number of lines it ignored, the number of lines it left unconverted, and the name of the output file that it generated.  Theoretically, if the total number of lines ignored and unconverted is zero, the result file should be compilable as a JUnit test in Derby.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Ex:&lt;/p&gt;

&lt;p&gt;&amp;gt; java ijToJUnit altertable.out&lt;/p&gt;

&lt;p&gt;  ==&amp;gt; Ignored 0 lines and left 22 lines unconverted.&lt;br/&gt;
  ==&amp;gt; Output is in &apos;altertable.junit&apos;.&lt;/p&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In this case no lines were ignored but the tool left all of the &quot;show&quot; and &quot;describe&quot; commands (and corresponding output) unconverted because those are ij-specific commands and thus the mapping to JUnit is not straightforward.  It is then up to the user of the tool to examine the output file and figure out what to do with the ignored/unconverted output.&lt;/p&gt;

&lt;p&gt;I ran the tool against a couple of the .out files in lang/ and in all cases the output had to be manually corrected in at least a couple of places before the test ran without error.  So this is &lt;b&gt;not&lt;/b&gt; a one-shot JUnit test creation tool.  Once created the output will almost certainly need manual correction for formatting, long lines, or functional mis-conversions.  And once that&apos;s done, the user will probably have to do a reorganization of the generated JUnit code so that it adheres to the recommended JUnit programming practices:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://www.javaworld.com/jw-12-2000/jw-1221-junit.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.javaworld.com/jw-12-2000/jw-1221-junit.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In particular, that link recommends small, independent test cases--but the ijToJUnit tool creates a single, large test method that encapsulates the entire .sql test.  So even when the generated output has been manually fixed up to run without error, it may still need additional &quot;good practice&quot; changes.&lt;/p&gt;

&lt;p&gt;The hope is that this ijToJUnit tool can help speed up the process of converting .sql tests to JUnit tests.  It is &lt;b&gt;not&lt;/b&gt;, however, meant to be a complete solution, nor is it by any means an intelligent one.  It&apos;s just the (perhaps shameful) result of a hastily written &quot;helper&quot; utility that began one Friday afternoon.&lt;/p&gt;

&lt;p&gt;Anyone interested should feel free pick it up and make it better.  Or perhaps s/he will be inspired by the concept but will start from scratch and do a better job, which might be easier... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="12489579" author="fuzzylogic" created="Wed, 18 Apr 2007 02:07:24 +0100"  >&lt;p&gt;I figured I could use this to convert grantRevokeDDL/grantRevokeDDL2, so I took Army&apos;s original utility (thanks, Army!) and made a few alterations to account for multiple user connections among other things. I wasn&apos;t aiming for anything close to perfection, so I stopped when I got it to convert &amp;gt; 99% of the SQL in grantRevokeDDL and grantRevokeDDL2. I also put it into the functiontests.util package, so that it would compile easily with the current build setup. Attaching the updated utility, also renamed to SQLToJunit, as a diff.&lt;/p&gt;

&lt;p&gt;The newer version actually converts simpler tests more poorly than the original version, mostly because ij sometimes doesn&apos;t print a row count out for queries. It seems like it would be easy to hold on to a line in the rewritten getNextIjCommand() and simply push that into the buffer on the next call if the we read one too many lines and get a comment or command.&lt;/p&gt;

&lt;p&gt;If I have some time I&apos;ll look into fixing it up a bit more to handle a broader range of cases. It seems like in the future it might be useful for easily  converting SQL provided by users into reusable JUnit testcases.&lt;/p&gt;</comment>
                            <comment id="12489861" author="fuzzylogic" created="Wed, 18 Apr 2007 20:41:04 +0100"  >&lt;p&gt;Attaching an updated version of the last patch which includes statement push back, and detects ij&apos;s show and describe statements and marks them as unconverted. I tried this on a handful of sql and it does at least a good of a job converting them as the original patch.&lt;/p&gt;

&lt;p&gt;I do think this could be useful in the future as well as for the current test converrsion project, so if no one objects, I&apos;ll check this in shortly.&lt;/p&gt;</comment>
                            <comment id="12489898" author="fuzzylogic" created="Wed, 18 Apr 2007 23:11:55 +0100"  >&lt;p&gt;Committed -v2 patch with some additional comments with revision 530182&lt;/p&gt;</comment>
                            <comment id="12489901" author="army" created="Wed, 18 Apr 2007 23:33:03 +0100"  >&lt;p&gt;Thanks for taking the time to improve the utility, Andrew.  I know it wasn&apos;t fun trying to work with the original code (sorry), but I&apos;m glad you&apos;ve found it to be at least remotely useful...&lt;/p&gt;</comment>
                            <comment id="12524419" author="bryanpendleton" created="Mon, 3 Sep 2007 03:16:06 +0100"  >&lt;p&gt;Attached is skipBlankLines.diff.&lt;/p&gt;

&lt;p&gt;I was investigating using SQLToJUnit for conversion of groupBy.sql, but the master file groupBy.out contains some entirely blank lines, which was causing the command parser in SQLToJUnit to throw a NullPointerException.&lt;/p&gt;

&lt;p&gt;With this patch SQLToJUnit successfully processed all of groupBy.sql.&lt;/p&gt;</comment>
                            <comment id="12525581" author="bryanpendleton" created="Fri, 7 Sep 2007 04:02:01 +0100"  >&lt;p&gt;Committed skipBlankLines.diff to subversion as revision 573432.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12355724" name="derby-2151-andrew-v1.diff" size="38499" author="fuzzylogic" created="Wed, 18 Apr 2007 02:07:24 +0100"/>
                            <attachment id="12355782" name="derby-2151-andrew-v2.diff" size="41529" author="fuzzylogic" created="Wed, 18 Apr 2007 20:41:04 +0100"/>
                            <attachment id="12346464" name="ijToJUnit.java" size="37001" author="army" created="Tue, 5 Dec 2006 17:47:21 +0000"/>
                            <attachment id="12364982" name="skipBlankLines.diff" size="1038" author="bryanpendleton" created="Mon, 3 Sep 2007 03:16:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Apr 2007 01:07:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30299</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0mtj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37515</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>