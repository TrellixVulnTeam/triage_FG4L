<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:37 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2002/DERBY-2002.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2002] Case expression allows NULL in all parts of &lt;result&gt;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2002</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;According to the SQL:2003 spec, section 6.11 &amp;lt;case expression&amp;gt; Syntax Rule 3.  At least one &amp;lt;result&amp;gt; in a &lt;br/&gt;
&amp;lt;case specification&amp;gt; shall specify a &amp;lt;result expression&amp;gt;.  Derby currently is violating this rule.  e.g.:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values case when 1=2 then NULL when 1=3 then NULL else NULL end;&lt;br/&gt;
1&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;NULL&lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;6.11 &amp;lt;case expression&amp;gt; Format section defines &amp;lt;result&amp;gt; as the following:&lt;/p&gt;

&lt;p&gt;&amp;lt;result&amp;gt; ::= &lt;br/&gt;
    &amp;lt;result expression&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;The above statement should have thrown a SQLException instead of returning a result.&lt;/p&gt;

&lt;p&gt;sysinfo:&lt;/p&gt;

&lt;p&gt;------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.4.2_12&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\jdk142\jre&lt;br/&gt;
Java classpath:  classes;.&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1&lt;br/&gt;
Java user name:  yip&lt;br/&gt;
Java user home:  C:\Documents and Settings\Administrator&lt;br/&gt;
Java user dir:   C:\derby\trunk&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.4&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;C:\derby\trunk\classes&amp;#93;&lt;/span&gt; 10.3.0.0 alpha - (1)&lt;br/&gt;
------------------------------------------------------&lt;br/&gt;
----------------- Locale Information -----------------&lt;br/&gt;
Current Locale :  [English/United States &lt;span class=&quot;error&quot;&gt;&amp;#91;en_US&amp;#93;&lt;/span&gt;]&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;de_DE&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;es&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;fr&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;it&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ja_JP&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;ko_KR&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;pt_BR&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_CN&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
Found support for locale: &lt;span class=&quot;error&quot;&gt;&amp;#91;zh_TW&amp;#93;&lt;/span&gt;&lt;br/&gt;
         version: 10.3.0.0 alpha - (1)&lt;br/&gt;
------------------------------------------------------&lt;/p&gt;</description>
                <environment>Any</environment>
        <key id="12353986">DERBY-2002</key>
            <summary>Case expression allows NULL in all parts of &lt;result&gt;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="yipng">Yip Ng</reporter>
                        <labels>
                            <label>derby_backport_reject_10_10</label>
                            <label>derby_triage10_5_2</label>
                    </labels>
                <created>Wed, 25 Oct 2006 23:14:08 +0100</created>
                <updated>Thu, 25 Sep 2014 12:55:53 +0100</updated>
                            <resolved>Mon, 2 Jun 2014 10:46:26 +0100</resolved>
                                    <version>10.2.1.6</version>
                    <version>10.3.1.4</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12445412" author="chdh@inventec.ch" created="Sat, 28 Oct 2006 23:06:39 +0100"  >&lt;p&gt;ISO/IEC 9075-1 6.3.3.2 states:&lt;br/&gt;
&quot;In the Syntax Rules, the term shall defines conditions that are required to be true of syntactically conforming&lt;br/&gt;
SQL language. ... The treatment of language that does not conform to the SQL Formats and Syntax Rules is implementation-dependent. ...&quot;&lt;/p&gt;

&lt;p&gt;As I understand that, an implementation is free to accept non-conforming SQL syntax. So there is no need to generate an SQLException when that syntax rule is violated because all &amp;lt;result&amp;gt;s are NULL.in the CASE expression.&lt;/p&gt;</comment>
                            <comment id="12445417" author="yipng" created="Sun, 29 Oct 2006 00:53:15 +0100"  >&lt;p&gt;Right, an implementation is free to have their own proprietary syntax.  However, in 6.3.3.2 of ISO/IEC 9075-1 6.3.3.2, it also states that:&lt;/p&gt;

&lt;p&gt;&quot;If any condition required by Syntax Rules is not satisfied when the evaluation of Access or General Rules is attempted and the implementation is neither processing non-conforming SQL language nor processing conforming SQL language in a nonconforming manner, then an exception condition is raised: syntax error or access rule violation.&quot;&lt;/p&gt;

&lt;p&gt;So to be conformant, an exception should be raised.&lt;/p&gt;
</comment>
                            <comment id="12445441" author="chdh@inventec.ch" created="Sun, 29 Oct 2006 12:41:50 +0000"  >&lt;p&gt;&amp;gt; So to be conformant, an exception should be raised.&lt;/p&gt;

&lt;p&gt;No,, it says &quot;... and the implementation is neither processing non-conforming SQL language ...&quot;.&lt;br/&gt;
When an implementation is &quot;processing non-conforming SQL language&quot;, which is the case when Derby processes a CASE statement with all NULLs, it does not have to raise an exception.&lt;/p&gt;

&lt;p&gt;If it was otherwise, every proprietary syntax would be forbidden.&lt;/p&gt;</comment>
                            <comment id="12445447" author="yipng" created="Sun, 29 Oct 2006 17:15:49 +0000"  >&lt;p&gt;I do not see anything proprietary about CASE expression or there are any proprietary extensions to that expression in Derby.  The CASE expression is a conforming SQL language described in the SQL:2003 spec.  So the implementation is trying to process a conforming SQL language in a nonconforming manner, so it should raise a syntax exception.&lt;/p&gt;

&lt;p&gt;Moreover, if all parts of the &amp;lt;result&amp;gt; are defined as NULL, what is the resultant datatype?&lt;/p&gt;

&lt;p&gt;RDBMSs that conform to the SQL spec will not allow this.&lt;/p&gt;</comment>
                            <comment id="12445448" author="yipng" created="Sun, 29 Oct 2006 17:51:22 +0000"  >&lt;p&gt;I think the conflict here is that you see this as a proprietary case expression behavior in Derby where as I see this a bug since the current implementation of case expression does not conform to the SQL:2003 spec.  &lt;/p&gt;</comment>
                            <comment id="12445451" author="chdh@inventec.ch" created="Sun, 29 Oct 2006 19:37:55 +0000"  >&lt;p&gt;&amp;gt; So the implementation is trying to process a conforming SQL language in a nonconforming&lt;br/&gt;
&amp;gt; manner, so it should raise a syntax exception.&lt;/p&gt;

&lt;p&gt;No, the contrary is true. The standard says &quot;... and the implementation is neither ... nor processing conforming SQL language in a nonconforming manner, then an exception condition is raised&quot; (note the &quot;nor&quot; in the sentence), This means that if the &quot;implementation is trying to process a conforming SQL language in a nonconforming manner&quot; (as you have written), it does not have to raise an exception.&lt;/p&gt;

&lt;p&gt;The purpose of the conformance rules of the SQL standard is to define a common subset of SQL that is portable among the DBMS. Non-conforming SQL may be detected by an SQL flagger (see ISO 9075-1 8.5), but it&apos;s not forbidden for a conforming implementation. The standard only demands that conforming SQL behaves in the predicted way. All DBMS have non-conforming SQL syntax.&lt;/p&gt;

&lt;p&gt;&amp;gt; think the conflict here is that you see this as a proprietary case expression behavior&lt;br/&gt;
&amp;gt; in Derby where as I see this a bug since the current implementation of case expression&lt;br/&gt;
&amp;gt; does not conform to the SQL:2003 spec.&lt;/p&gt;

&lt;p&gt;I agree that a CASE statement with all NULLs does not conform to the syntax rule of the SQL standard and therefore it&apos;s not conforming SQL. But a conforming implementation is allowed to process non-conforming SQL without raising an exception.&lt;/p&gt;

&lt;p&gt;ISO 9075-1 8.6.2 (Requirements for SQL-implementations) states:&lt;br/&gt;
&quot;A conforming SQL-implementation shall process conforming SQL language according to the associated General Rules, Definitions, and Descriptions.&quot;&lt;br/&gt;
This means that for conforming SQL (the common subset of the DBMS), the implementation must obey the rules. But for non-conforming SQL, the implementation is free to do what it likes.&lt;/p&gt;</comment>
                            <comment id="12445453" author="chdh@inventec.ch" created="Sun, 29 Oct 2006 19:56:13 +0000"  >&lt;p&gt;&amp;gt; The CASE expression is a conforming SQL language described in the SQL:2003 spec.&lt;br/&gt;
&amp;gt; So the implementation is trying to process a conforming SQL language in a nonconforming&lt;br/&gt;
&amp;gt; manner, ...&lt;/p&gt;

&lt;p&gt;I even don&apos;t agree with that.&lt;br/&gt;
A CASE statement with all NULL values violates syntax rule 3.&lt;br/&gt;
Therefore the expression&lt;br/&gt;
    case when 1=2 then NULL when 1=3 then NULL else NULL end;&lt;br/&gt;
is syntactically not conforming, because it breaks a syntax rule.&lt;br/&gt;
Therefore this CASE expression is non-conforming SQL.&lt;/p&gt;</comment>
                            <comment id="12445460" author="yipng" created="Sun, 29 Oct 2006 20:55:07 +0000"  >&lt;p&gt;&amp;gt;I agree that a CASE statement with all NULLs does not conform to the syntax rule of the SQL standard and &amp;gt;therefore it&apos;s not conforming SQL. But a conforming implementation is allowed to process non-conforming SQL &amp;gt;without raising an exception. &lt;/p&gt;

&lt;p&gt;Right, I am not disagreeing with you here.  Of course, the implementation is free from choosing how to handle non-conforming SQL.    We both agree that  the CASE expression with all NULLs violates syntax rule 3, making it non-conforming SQL which it is the reason why I filed this jira in the first place - to make it &lt;b&gt;conforming SQL&lt;/b&gt;.  So from a conforming perspective, then it should raise the syntax exception which is what I tried to say in my previous comment.&lt;/p&gt;

&lt;p&gt;But I have to admit that the current behavior is somewhat awkward since the implementation has no way of deducing the resultant data type returned by such an expresson which will force the implementation to default to some default datatype.  Not very portable for sure.   =)&lt;/p&gt;

&lt;p&gt;If it is not handled in the conforming manner, then it should be documented in the reference manual so that there are no surprises.&lt;/p&gt;</comment>
                            <comment id="12445467" author="chdh@inventec.ch" created="Sun, 29 Oct 2006 22:25:04 +0000"  >&lt;p&gt;&amp;gt; the implementation has no way of deducing the resultant data&lt;br/&gt;
&amp;gt; type returned by such an expression&lt;/p&gt;

&lt;p&gt;Such a CASE expression could be replaced by an untyped NULL constant, while the expression is parsed and optimized.&lt;/p&gt;

&lt;p&gt;&amp;gt; If it is not handled in the conforming manner, then it should be documented&lt;br/&gt;
&amp;gt; in the reference manual so that there are no surprises.&lt;/p&gt;

&lt;p&gt;I think the main problem is the lack of an SQL flagger (see ISO 9075-1 8.5) in Derby.&lt;/p&gt;</comment>
                            <comment id="12445475" author="yipng" created="Sun, 29 Oct 2006 23:57:36 +0000"  >&lt;p&gt;&amp;gt;Such a CASE expression could be replaced by an untyped NULL constant, while the expression is parsed &lt;br/&gt;
&amp;gt;and optimized. &lt;/p&gt;

&lt;p&gt;If the untyped NULL is returned, then the following CREATE VIEW should fail and force the users to do a CAST but currently this executes successfully in Derby.  &lt;/p&gt;

&lt;p&gt;IMHO, I really think that the system should avoid these cases by following the conforming way and not allow all parts of &amp;lt;result&amp;gt; to be NULL in the CASE expression.  But I&apos;ll let the community decide if this jira should be pursue.   &lt;/p&gt;

&lt;p&gt;ij&amp;gt; create view v1(c1) as values case when 1=2 then null else null end;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from v1;&lt;br/&gt;
C1&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;NULL&lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; describe v1;&lt;br/&gt;
COLUMN_NAME         |TYPE_NAME|DEC&amp;amp;|NUM&amp;amp;|COLUM&amp;amp;|COLUMN_DEF|CHAR_OCTE&amp;amp;|IS_NULL&amp;amp;&lt;br/&gt;
------------------------------------------------------------------------------&lt;br/&gt;
C1                  |CHAR     |NULL|NULL|1     |NULL      |2         |YES&lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</comment>
                            <comment id="12445480" author="chdh@inventec.ch" created="Mon, 30 Oct 2006 01:19:15 +0000"  >&lt;p&gt;The statement&lt;br/&gt;
  CREATE VIEW v1(c1) AS VALUES NULL;&lt;br/&gt;
produces a NullPointerException...&lt;/p&gt;</comment>
                            <comment id="12445501" author="yipng" created="Mon, 30 Oct 2006 06:33:18 +0000"  >&lt;p&gt;Christian wrote:&lt;br/&gt;
&amp;gt;The statement&lt;br/&gt;
&amp;gt;  CREATE VIEW v1(c1) AS VALUES NULL;&lt;br/&gt;
&amp;gt;produces a NullPointerException...&lt;/p&gt;

&lt;p&gt;I don&apos;t see any existing jira entry for this, so looks like you find a new bug.  =)&lt;/p&gt;

&lt;p&gt;Yip wrote:&lt;br/&gt;
&amp;gt;So the implementation is trying to process a conforming SQL language in a nonconforming manner, &lt;br/&gt;
&amp;gt;so it should raise a syntax exception.&lt;/p&gt;

&lt;p&gt;Sorry for the confusion/contradiction here, I wrote this in a haste.  What I was trying to convey is:&lt;/p&gt;

&lt;p&gt;The original intent of this jira is to not allow NULLs in &lt;b&gt;ALL&lt;/b&gt; parts of &amp;lt;result&amp;gt; in the case expression so that &lt;br/&gt;
it conforms to the SQL:2003 spec, section 6.11 &amp;lt;case expression&amp;gt; Syntax rule 3.   And by processing this in &lt;br/&gt;
a &lt;b&gt;conforming&lt;/b&gt; manner, a syntax exception should be raised.&lt;/p&gt;
</comment>
                            <comment id="14013416" author="knutanders" created="Fri, 30 May 2014 09:26:56 +0100"  >&lt;p&gt;Currently, if the type of an untyped NULL in a case expression cannot be inferred, it defaults to CHAR(1). Derby also allows untyped parameters in the case result clauses, but the type inference is different for them. This leads to some confusing behaviour:&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;p&gt;1) CASE WHEN x THEN NULL ELSE NULL END evaluates to a value of type CHAR(1)&lt;/p&gt;

&lt;p&gt;2) CASE WHEN x THEN ? ELSE ? END produces an error:&lt;/p&gt;

&lt;p&gt;ERROR 42X87: At least one result expression (THEN or ELSE) of the &apos;conditional&apos; expression must not be a &apos;?&apos;.&lt;/p&gt;

&lt;p&gt;3) CASE WHEN x THEN ? END evaluates to a value of type CHAR(1). It gets the type from the implicit ELSE NULL clause. However, even though the metadata says the type is CHAR(1), the parameter accepts longer values, and the returned value will in that case be longer than the metadata says it can be.&lt;/p&gt;

&lt;p&gt;4) CASE WHEN x THEN CAST(? AS CHAR(1)) END evaluates to a value of type CHAR(1). However, unlike (3), when the parameter is given a longer value, that value will be truncated to length 1, and a data truncation warning will be added to the ResultSet.&lt;/p&gt;

&lt;p&gt;I think it would be reasonable to expect cases 1, 2 and 3 to have the same behaviour. Implying the type CHAR(1) when no type is specified feels somewhat arbitrary, so I&apos;m leaning towards raising an error and let the users disambiguate their queries.&lt;/p&gt;

&lt;p&gt;If, however, making 1, 2 and 3 all use type CHAR(1) ends up being the preferred solution, I think the behaviour of 4 (truncate longer values and produce a warning) is less wrong than returning a value that is longer than its metadata permits.&lt;/p&gt;</comment>
                            <comment id="14013577" author="knutanders" created="Fri, 30 May 2014 12:41:47 +0100"  >&lt;p&gt;The attached patch &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12647584/12647584_d2002-1a.diff&quot; title=&quot;d2002-1a.diff attached to DERBY-2002&quot;&gt;d2002-1a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; shows how we can forbid CASE expressions with unknown return type. It removes the code that makes these expressions get type CHAR(1) and instead raises the same error condition as is currently raised if all THEN/ELSE expressions are untyped parameters. The error message is changed from&lt;/p&gt;

&lt;p&gt;ERROR 42X87: At least one result expression (THEN or ELSE) of the &apos;conditional&apos; expression must not be a &apos;?&apos;.&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;ERROR 42X87: At least one result expression (THEN or ELSE) of the CASE expression must have a known type.&lt;/p&gt;

&lt;p&gt;The patch also adds test cases to CaseExpressionTest that verify the fix.&lt;/p&gt;

&lt;p&gt;All regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="14015286" author="knutanders" created="Mon, 2 Jun 2014 10:44:05 +0100"  >&lt;p&gt;Attached is a first stab at a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="14015287" author="jira-bot" created="Mon, 2 Jun 2014 10:45:46 +0100"  >&lt;p&gt;Commit 1599142 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1599142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1599142&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2002&quot; title=&quot;Case expression allows NULL in all parts of &amp;lt;result&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2002&quot;&gt;&lt;del&gt;DERBY-2002&lt;/del&gt;&lt;/a&gt;: Case expression allows NULL in all parts of &amp;lt;result&amp;gt;&lt;/p&gt;

&lt;p&gt;Require at least one expression with a known type (that is, not NULL or&lt;br/&gt;
a ? parameter) in the THEN and ELSE clauses of a CASE expression.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12647584" name="d2002-1a.diff" size="9540" author="knutanders" created="Fri, 30 May 2014 12:41:47 +0100"/>
                            <attachment id="12647879" name="releaseNote.html" size="5169" author="knutanders" created="Mon, 2 Jun 2014 10:44:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 28 Oct 2006 22:06:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22831</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ia7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36780</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>