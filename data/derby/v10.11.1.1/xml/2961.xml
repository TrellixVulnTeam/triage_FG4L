<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:39:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2961/DERBY-2961.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2961] TriggerTest.testTypesINActionStatement fails with &apos;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2961</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have not yet been able to create a stand-alone repro but the test TriggerTest.testTypesINActionStatement fails with &apos;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)&lt;/p&gt;

&lt;p&gt;Failed statement is:&lt;/p&gt;

&lt;p&gt;            sqlMain = &quot;SELECT ID, XMLSERIALIZE(V AS CLOB), &quot; +&lt;br/&gt;
                    &quot;XMLSERIALIZE(V AS CLOB) FROM T_MAIN ORDER BY 1&quot;;&lt;/p&gt;

&lt;p&gt;2) testTypesInActionStatement(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)java.sql.SQLException: Java exception: &apos;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob): org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1293)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:596)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(EmbedStatement.java:153)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypesCompareMainToAction(TriggerTest.java:769)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypesInsertTest(TriggerTest.java:546)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.actionTypeTest(TriggerTest.java:445)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.TriggerTest.testTypesInActionStatement(TriggerTest.java:427)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:467)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:98)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.loadSorter(SortResultSet.java:317)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:258)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	... 45 more&lt;/p&gt;</description>
                <environment></environment>
        <key id="12374206">DERBY-2961</key>
            <summary>TriggerTest.testTypesINActionStatement fails with &apos;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Jul 2007 21:52:04 +0100</created>
                <updated>Wed, 14 Nov 2007 22:42:57 +0000</updated>
                            <resolved>Mon, 20 Aug 2007 17:25:00 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12513992" author="kmarsden" created="Thu, 19 Jul 2007 21:52:54 +0100"  >&lt;p&gt;Found during collation testing&lt;/p&gt;</comment>
                            <comment id="12514283" author="kmarsden" created="Fri, 20 Jul 2007 20:00:51 +0100"  >&lt;p&gt;Here is a standalone repro for this issue.&lt;/p&gt;
</comment>
                            <comment id="12520278" author="mamtas" created="Thu, 16 Aug 2007 16:50:28 +0100"  >&lt;p&gt;I spent some time on this jira entry and the reproducible sql is as follows&lt;br/&gt;
CREATE TABLE T_MAIN (ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY, V XML);&lt;br/&gt;
INSERT INTO T_MAIN(V) VALUES NULL;&lt;br/&gt;
SELECT ID, XMLSERIALIZE(V AS CLOB), XMLSERIALIZE(V AS CLOB) FROM T_MAIN ORDER BY 1&lt;/p&gt;

&lt;p&gt;The exception is thrown for the last sql statement.&lt;/p&gt;

&lt;p&gt;The problem arises from (V AS CLOB). At runtime, this always ends up creating a SQLClob object (org.apache.derby.iapi.types.XML:XMLSerialize:line 685) without regards to the collation type of the database. As per Rule 3 (copied below for reference) under section Collation Determination from wiki page &lt;a href=&quot;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478&lt;/a&gt;&lt;br/&gt;
**********&lt;br/&gt;
3)&amp;lt;character string type&amp;gt; (SQL spec section 6.1 &amp;lt;data type&amp;gt; Syntax Rule 3b and 16) - Rule 3b says that collation type of character string type is the character set&apos;s collation AND rule 16 says that if &amp;lt;character string type&amp;gt; is not contained in a &amp;lt;column definition&amp;gt;, then an implementation-defined character set is associated with the &amp;lt;character string type&amp;gt;. We define Derby&apos;s implementation-defined character set for such &amp;lt;character string type&amp;gt; to be current schema&apos;s character set. The collation derivation will be implicit. &lt;br/&gt;
**********&lt;/p&gt;

&lt;p&gt;I think there is a typo in the rule above, ie, rather than the current schema&apos;s character set, it should say current compilation schema&apos;s character set. Based on this rule, the resultant string type from V AS CLOB/CHAR etc should use the collation of the current compilation schema.&lt;/p&gt;

&lt;p&gt;I will work on implementing this change. Any feedback on the approach, please let me know.&lt;/p&gt;</comment>
                            <comment id="12521127" author="mamtas" created="Mon, 20 Aug 2007 17:08:52 +0100"  >&lt;p&gt;With revision 567735, fixed the problem in main. The commit comments are as follows (will merge the change into 10.3 codeline soon)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2961&quot; title=&quot;TriggerTest.testTypesINActionStatement fails with &amp;#39;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2961&quot;&gt;&lt;del&gt;DERBY-2961&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
This commit fixes the ASSERT failure thrown by the SELECT statement in following query&lt;br/&gt;
CREATE TABLE T_MAIN1 (ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY, V XML);&lt;br/&gt;
INSERT INTO T_MAIN1(V) VALUES NULL;&lt;br/&gt;
SELECT ID, XMLSERIALIZE(V AS CLOB), XMLSERIALIZE(V AS CLOB) FROM T_MAIN1 ORDER BY 1;&lt;br/&gt;
The SELECT statement was resulting in Assert Failure because the StringDataValue generated for V AS CLOB was not taking collation type into consideration ie it was always generating collation insensitive StringDataValue. I have fixed that problem by passing the current compilation schema&apos;s collation type to SqlXmlExecutor which then will get used in determining whether for instance we should generate SQLChar vs CollatorSQLChar. This collation information is required only for character string types.&lt;/p&gt;</comment>
                            <comment id="12521139" author="mamtas" created="Mon, 20 Aug 2007 17:24:24 +0100"  >&lt;p&gt;Merged revision 567735 from main into 10.3 codeline (revision 567741). The commit comments in main were as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2961&quot; title=&quot;TriggerTest.testTypesINActionStatement fails with &amp;#39;ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLClob) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLClob)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2961&quot;&gt;&lt;del&gt;DERBY-2961&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
This commit fixes the ASSERT failure thrown by the SELECT statement in following query&lt;br/&gt;
CREATE TABLE T_MAIN1 (ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY, V XML);&lt;br/&gt;
INSERT INTO T_MAIN1(V) VALUES NULL;&lt;br/&gt;
SELECT ID, XMLSERIALIZE(V AS CLOB), XMLSERIALIZE(V AS CLOB) FROM T_MAIN1 ORDER BY 1;&lt;br/&gt;
The SELECT statement was resulting in Assert Failure because the StringDataValue generated for V AS CLOB was not taking collation type into consideration ie it was always generating collation insensitive StringDataValue. I have fixed that problem by passing the current compilation schema&apos;s collation type to SqlXmlExecutor which then will get used in determining whether for instance we should generate SQLChar vs CollatorSQLChar. This collation information is required only for character string types.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12362246" name="TypesInActionStatement.java" size="5582" author="kmarsden" created="Fri, 20 Jul 2007 20:00:51 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Aug 2007 15:50:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10qn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39770</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>