<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:30:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6092/DERBY-6092.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6092] testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &apos;The handle is invalid.: java.io.IOException&apos;.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6092</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;There was 1 error:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1449432-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1449432-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.commit(BaseJDBCTestCase.java:393)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testPositionAgressive(BlobClob4BlobTest.java:1070)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EncryptedLOBFile.close(Unknown Source)&lt;br/&gt;
	... 53 more&lt;/p&gt;</description>
                <environment>IBM 1,5 &lt;br/&gt;
java.specification.version: 1.5&lt;br/&gt;
java.runtime.version: pwi32dev-20121015 (SR15 )&lt;br/&gt;
java.fullversion: J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-20121012 (JIT enabled)&lt;br/&gt;
J9VM - 20121010_124616_lHdSMr&lt;br/&gt;
JIT  - 20120914_26053ifx1_r8&lt;br/&gt;
GC   - 20120911_AA&lt;br/&gt;
</environment>
        <key id="12634031">DERBY-6092</key>
            <summary>testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &apos;The handle is invalid.: java.io.IOException&apos;.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Feb 2013 00:48:14 +0000</created>
                <updated>Wed, 21 Jan 2015 00:23:18 +0000</updated>
                            <resolved>Wed, 10 Apr 2013 09:29:25 +0100</resolved>
                                    <version>10.10.1.1</version>
                    <version>10.11.1.1</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13586936" author="knutanders" created="Tue, 26 Feb 2013 08:37:06 +0000"  >&lt;p&gt;Not sure if it&apos;s what causing the exception, but LOBStreamControl has a finalize() method that ends up calling LOBFile.close(), so it is possible that the gc thread is trying to close the same RAF instance at the same time this happens. It should be safe, and I see that at least OpenJDK has a synchronized region in RAF.close() to prevent trouble with concurrent callers. But since the failure was seen on an old JVM version, there might be a JVM bug that causes such problems when two threads try to close a RAF at the same time.&lt;/p&gt;

&lt;p&gt;A quick search for the exception message text pointed me to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-669&quot; title=&quot;finalize()-methods of FSDirectory.FSIndexInput and FSDirectory.FSIndexOutput try to close already closed file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LUCENE-669&quot;&gt;&lt;del&gt;LUCENE-669&lt;/del&gt;&lt;/a&gt;, where it was reported that IBM 1.5 on Windows had problems with double close. That&apos;s the same platform, so at least it&apos;s a theory.&lt;/p&gt;</comment>
                            <comment id="13620463" author="mikem" created="Wed, 3 Apr 2013 01:53:10 +0100"  >&lt;p&gt;this test failed again in nightly regression run: 10.10 candidate branch, windows, ibm15&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1463077-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1463077-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
1) testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.commit(BaseJDBCTestCase.java:393)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testPositionAgressive(BlobClob4BlobTest.java:1010)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EncryptedLOBFile.close(Unknown Source)&lt;br/&gt;
	... 53 more&lt;/p&gt;</comment>
                            <comment id="13620466" author="mikem" created="Wed, 3 Apr 2013 02:00:20 +0100"  >&lt;p&gt;another occurence, 10.10 candidate, ibm15, windows&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1462686-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1462686-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
There was 1 error:&lt;br/&gt;
1) testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.commit(BaseJDBCTestCase.java:393)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testPositionAgressive(BlobClob4BlobTest.java:1063)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EncryptedLOBFile.close(Unknown Source)&lt;br/&gt;
	... 53 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;/p&gt;</comment>
                            <comment id="13620472" author="mikem" created="Wed, 3 Apr 2013 02:06:37 +0100"  >&lt;p&gt;another failure 10.10 candidate branch&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1461932-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/v10_10/windows/testlog/ibm15/1461932-suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
There were 3 errors:&lt;br/&gt;
1) testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.commit(BaseJDBCTestCase.java:393)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testPositionAgressive(BlobClob4BlobTest.java:1019)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	... 40 more&lt;br/&gt;
2) cs_FailedStreamInsertCharBufferBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.Derby2017LayerATest)java.sql.SQLException: A communications error has been detected: Connection reset by peer: socket write error.&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.next(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.Derby2017LayerATest.doInsertTest(Derby2017LayerATest.java:563)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.Derby2017LayerATest.cs_FailedStreamInsertCharBufferBoundaries(Derby2017LayerATest.java:166)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: org.apache.derby.client.am.DisconnectException: A communications error has been detected: Connection reset by peer: socket write error.&lt;br/&gt;
	at org.apache.derby.client.net.NetAgent.throwCommunicationsFailure(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetAgent.sendRequest(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetAgent.flush_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Agent.flow(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.flowFetch(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetCursor.getMoreData_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Cursor.stepNext(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Cursor.next(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.ResultSet.nextX(Unknown Source)&lt;br/&gt;
	... 38 more&lt;br/&gt;
Caused by: java.net.SocketException: Connection reset by peer: socket write error&lt;br/&gt;
	at java.net.SocketOutputStream.socketWrite0(Native Method)&lt;br/&gt;
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:105)&lt;br/&gt;
	at java.net.SocketOutputStream.write(SocketOutputStream.java:149)&lt;br/&gt;
	at org.apache.derby.client.net.Request.sendBytes(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.Request.flush(Unknown Source)&lt;br/&gt;
	... 46 more&lt;br/&gt;
3) testCorrectClobDataWithMultiCall(org.apache.derbyTesting.functionTests.tests.jdbcapi.LobRsGetterTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.rollback(BaseJDBCTestCase.java:403)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.LobRsGetterTest.testCorrectClobDataWithMultiCall(LobRsGetterTest.java:451)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:424)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:441)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	... 35 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 15044,  Failures: 0,  Errors: 3&lt;/p&gt;</comment>
                            <comment id="13623840" author="mikem" created="Fri, 5 Apr 2013 18:45:02 +0100"  >&lt;p&gt;ran just the BlobClob4BlobTest 100 times against trunk, ibm15, sane classes and it failed in 43 of the runs.&lt;br/&gt;
It failed 41 times in testPositionAgressive and 5 times in testTriggerWithBlobColumn.&lt;br/&gt;
It failed 2 times in network server testing, the rest were in embedded mode.&lt;/p&gt;

&lt;p&gt;There is nothing from this error in derby.log, I assume because it is a jdbc side error.  Any suggestions on&lt;br/&gt;
easy way to get full stack of this.  I am running sane mode with debug=true build.&lt;/p&gt;</comment>
                            <comment id="13623842" author="mikem" created="Fri, 5 Apr 2013 18:46:25 +0100"  >&lt;p&gt;I ran BlobClob4BlobTest 100 times against trunk, jdk16, sane classes, windows and it did not fail ever.&lt;/p&gt;</comment>
                            <comment id="13623850" author="mikem" created="Fri, 5 Apr 2013 18:50:53 +0100"  >&lt;p&gt;ran just the BlobClob4BlobTest 66 times against trunk, jdk15, windows, sane classes and it failed in 9 of the runs.&lt;br/&gt;
All of the failures were in testPositionAgressive.&lt;/p&gt;

&lt;p&gt;java version:&lt;br/&gt;
s1_jdk15:8&amp;gt;java -version&lt;br/&gt;
java version &quot;1.5.0_13&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_13-b05)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.5.0_13-b05, mixed mode)&lt;/p&gt;</comment>
                            <comment id="13623953" author="mikem" created="Fri, 5 Apr 2013 20:03:46 +0100"  >&lt;p&gt;marking it a regression for now.  I am actively working on this.  &lt;br/&gt;
So far 25 runs against ibm15, windows, sane vs derby 10.9 has not shown a failure.  Have so far only&lt;br/&gt;
been able to make this happen in 10.10 and trunk.&lt;/p&gt;</comment>
                            <comment id="13624125" author="mikem" created="Fri, 5 Apr 2013 23:16:34 +0100"  >&lt;p&gt;I ran BlobClob4BlobTest 100 times against 10.9, jdk15, sane classes, windows and it did not fail ever. &lt;br/&gt;
Looks like some change after 10.9 has caused a regression caught by this test.  The problem may be&lt;br/&gt;
a jvm bug as Knut suggests, but it looks like something went into 10.10 that causes this to happen&lt;br/&gt;
now, where it did not before (at least probably as you never know with intermittent bugs - but 43/100 vs&lt;br/&gt;
0/100 seems a likely trend).&lt;/p&gt;

&lt;p&gt;Any suggestions on changes to look at appreciated.  I&apos;ll run some binary searches on trunk otherwise.&lt;/p&gt;</comment>
                            <comment id="13624128" author="mikem" created="Fri, 5 Apr 2013 23:21:17 +0100"  >&lt;p&gt;raising this to blocker as it seems a regression in 10.10, causes nightly regression tests to fail, &lt;br/&gt;
and unclear what other user level errors may result.  It has reproduced in both ibm15 and jdk15 on&lt;br/&gt;
windows.  So far have stress tested (run the test 100 times) on 10.9 ibm15 windows and not seen&lt;br/&gt;
the problem.  Also did not repro in trunk jdk16.  &lt;/p&gt;

&lt;p&gt;If it is a jvm bug would like to understand what derby change is stressing it, and see if at the very least&lt;br/&gt;
we can work around the bug in the 1.5 jvms.&lt;/p&gt;</comment>
                            <comment id="13624371" author="dagw" created="Sat, 6 Apr 2013 08:53:14 +0100"  >&lt;p&gt;Data point: I did not see this error in 50 runs on my Windows 7 box (on sane build trunk), with jdk 1.5.0_39-b04.&lt;/p&gt;</comment>
                            <comment id="13624448" author="mikem" created="Sat, 6 Apr 2013 16:48:04 +0100"  >&lt;p&gt;thanks Dag for the data point, looks like my jdk15 is old.  will look to update it.&lt;/p&gt;</comment>
                            <comment id="13624449" author="mikem" created="Sat, 6 Apr 2013 16:50:20 +0100"  >&lt;p&gt;I think I have identified the change that has caused the errors.  I verified at least against by windows7, ibm15, sane build&lt;br/&gt;
the bug repro&apos;s with the following change, and when I ran 100 times with codeline at just before this change I got no &lt;br/&gt;
errors.&lt;/p&gt;

&lt;p&gt;The change I think is responsible is:&lt;br/&gt;
------------------------------------------------------------------------&lt;br/&gt;
r1447722 | kahatlen | 2013-02-19 05:56:54 -0800 (Tue, 19 Feb 2013) | 3 lines&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5752&quot; title=&quot;LOBStreamControl should materialize less aggressively&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5752&quot;&gt;&lt;del&gt;DERBY-5752&lt;/del&gt;&lt;/a&gt;: LOBStreamControl should materialize less aggressively&lt;/p&gt;

&lt;p&gt;Only materialize LOBs that are smaller than 32 KB in memory.&lt;/p&gt;</comment>
                            <comment id="13624883" author="knutanders" created="Sun, 7 Apr 2013 12:44:19 +0100"  >&lt;p&gt;I don&apos;t have access to a test environment where I can reproduce this problem, unfortunately.&lt;/p&gt;

&lt;p&gt;The revision that Mike identified, made some queries that previously stored the entire LOB in memory, use temporary files instead. It sounds reasonable that the IOException goes away when the change is backed out, as it previously didn&apos;t have to do any I/O. That revision did however not change how the temporary files were handled, so I&apos;d expect the exception to be reproducible also with earlier revisions.&lt;/p&gt;

&lt;p&gt;Here&apos;s what I would have done to check that, if I could reproduce the failure:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;move to a revision before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5752&quot; title=&quot;LOBStreamControl should materialize less aggressively&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5752&quot;&gt;&lt;del&gt;DERBY-5752&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;remove all ORDER BY clauses from BlobClob4BlobTest (there are five of them, and the test seems to pass without them, at least in my environment)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;run BlobClob4BlobTest repeatedly to see if it reproduces the problem&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;By removing the ORDER BY clauses, the test should skip materialization even before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5752&quot; title=&quot;LOBStreamControl should materialize less aggressively&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5752&quot;&gt;&lt;del&gt;DERBY-5752&lt;/del&gt;&lt;/a&gt;, and it should exercise the same code path as the unmodified test does after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5752&quot; title=&quot;LOBStreamControl should materialize less aggressively&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5752&quot;&gt;&lt;del&gt;DERBY-5752&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13625036" author="mikem" created="Sun, 7 Apr 2013 23:35:41 +0100"  >&lt;p&gt;thanks knut, if no one else tries this I will give it a go on monday against 10.9.  I am also working on getting a more up to date jdk15 to see if the later jvm there fixed it or if&lt;br/&gt;
it is just my environment that makes it happen.&lt;/p&gt;</comment>
                            <comment id="13625366" author="bryanpendleton" created="Mon, 8 Apr 2013 14:41:54 +0100"  >&lt;p&gt;Including the queries both with and without ORDER BY sounds like a valuable improvement&lt;br/&gt;
to the test suite, even if it doesn&apos;t reproduce this problem trivially.&lt;/p&gt;</comment>
                            <comment id="13625536" author="mikem" created="Mon, 8 Apr 2013 17:59:53 +0100"  >&lt;p&gt;we are working to get a later version of the ibm jvm to see if that fixes the issue, in addition to a later jdk15 to also see if in my env it reproduces or not.&lt;/p&gt;</comment>
                            <comment id="13625544" author="mikem" created="Mon, 8 Apr 2013 18:05:29 +0100"  >&lt;p&gt;patch is not meant to be checked in.  I am running tests as knut suggested against 10.9.  So far no errors in 25 runs against ibm15:&lt;br/&gt;
s10_9_ibm15:2&amp;gt;java -version&lt;br/&gt;
java version &quot;1.5.0&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build pwi32dev-20121015 (SR15 ))&lt;br/&gt;
IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows 7 x86-32 j9vmwi3223-20121012 (JIT enabled)&lt;br/&gt;
J9VM - 20121010_124616_lHdSMr&lt;br/&gt;
JIT  - 20120914_26053ifx1_r8&lt;br/&gt;
GC   - 20120911_AA)&lt;br/&gt;
JCL  - 20121015&lt;/p&gt;</comment>
                            <comment id="13625639" author="mikem" created="Mon, 8 Apr 2013 19:27:04 +0100"  >&lt;p&gt;running in 10.9 without the order by&apos;s did not repro the problem.  ran 64 times against ibm15 SR15 and did not see it repro once.&lt;br/&gt;
I am happy to run any other suggested tests to show that this issue is not a code problem.  I agree with knut&apos;s analysis but would&lt;br/&gt;
feel better if I could cause the IO exception without the 10.10 code change.&lt;/p&gt;</comment>
                            <comment id="13625703" author="mikem" created="Mon, 8 Apr 2013 20:26:41 +0100"  >&lt;p&gt;upgraded my ibm15 to latest available:&lt;br/&gt;
s1_ibm15:2&amp;gt;java -version&lt;br/&gt;
java version &quot;1.5.0&quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build pwi32devifx-20130304b (SR16 +IV37422))&lt;br/&gt;
IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows 7 x86-32 j9vmwi3223-20130203 (JIT enabled)&lt;br/&gt;
J9VM - 20130112_134700_lHdSMr&lt;br/&gt;
JIT  - 20121221_30553_r8&lt;br/&gt;
GC   - 20120911_AA)&lt;br/&gt;
JCL  - 20130304a&lt;/p&gt;

&lt;p&gt;Same failure encountered, stopped after 12 tries.  Got 3 errors in testPositionAgressive and 1 error in &lt;br/&gt;
testTriggerWithBlobColumn.&lt;/p&gt;

&lt;p&gt;All future runs I do against ibm15 will be against this version.&lt;/p&gt;

&lt;p&gt;The problem still reproduces on my laptop, windows 7, ibm15 SR16, &lt;/p&gt;</comment>
                            <comment id="13625715" author="mikem" created="Mon, 8 Apr 2013 20:40:31 +0100"  >&lt;p&gt;trunk saw this error also.  On friday all the IBM ibm15 test runs across all releases were updated to use the following version, taken &lt;br/&gt;
from the following link reporting the derbyall output.  some of the reporting headers are out of date, but this info is live:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-derbyall_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-derbyall_diff.txt&lt;/a&gt;&lt;br/&gt;
derbyall failures *************************************************************&lt;/p&gt;

&lt;p&gt;derbyall full report -------------------------------------------------------------&lt;br/&gt;
                     -------------------------------------------------------------&lt;br/&gt;
Generating report for RunSuite derbyall  null null null true &lt;br/&gt;
------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.5.0&lt;br/&gt;
Java Vendor:     IBM Corporation&lt;br/&gt;
Java home:       C:\jartest\ibm15\jre&lt;br/&gt;
Java classpath:  C:/jartest/jars/derbyrun.jar;C:/jartest/jars/derbyTesting.jar;c:/jartest/tools/java/jakarta-oro-2.0.8.jar;c:/jartest/junit/junit.jar;&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1 build 2600 Service Pack 3&lt;br/&gt;
Java user name:  cloudtest&lt;br/&gt;
Java user home:  C:\Documents and Settings\cloudtest&lt;br/&gt;
Java user dir:   C:\jartest\JarResults.2013-04-07\ibm15_derbyall&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.5&lt;br/&gt;
java.runtime.version: pwi32devifx-20130304b (SR16 +IV37422)&lt;br/&gt;
java.fullversion: J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-20130203 (JIT enabled)&lt;br/&gt;
J9VM - 20130112_134700_lHdSMr&lt;br/&gt;
JIT  - 20121221_30553_r8&lt;br/&gt;
GC   - 20120911_AA&lt;/p&gt;


&lt;p&gt;Here is the link for the error in trunk:&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was 1 error:&lt;br/&gt;
1) testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;The handle is invalid.: java.io.IOException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.commit(BaseJDBCTestCase.java:411)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testPositionAgressive(BlobClob4BlobTest.java:1063)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:117)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBareOverridable(BaseJDBCTestCase.java:442)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.runBare(BaseJDBCTestCase.java:459)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: java.io.IOException: The handle is invalid.&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:573)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.LOBFile.close(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EncryptedLOBFile.close(Unknown Source)&lt;br/&gt;
	... 53 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 15056,  Failures: 0,  Errors: 1&lt;/p&gt;</comment>
                            <comment id="13625716" author="mikem" created="Mon, 8 Apr 2013 20:41:24 +0100"  >&lt;p&gt;saw it in trunk so marking affects 10.11&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13625748" author="myrna" created="Mon, 8 Apr 2013 21:09:27 +0100"  >&lt;p&gt;I tried the same experiment as Mike, and the test failed 26 out of 60 times on a similar machine as Mike&apos;s with IBM SR15.&lt;br/&gt;
I&apos;ll repeat the experiment with IBM SR16, but I expect I&apos;ll see same thing Mike did.&lt;br/&gt;
25 of the failures were with testPositionAgressive, 1 (run47 of the test) was with testTriggerWithBlobColumn.&lt;/p&gt;</comment>
                            <comment id="13625797" author="knutanders" created="Mon, 8 Apr 2013 21:53:37 +0100"  >&lt;p&gt;To test whether it is a JVM bug with double and/or concurrent close, I wrote the attached program CloseRAF.java. It first attempts to close a RandomAccessFile 1000 times in sequence. If that doesn&apos;t fail it continues trying (repeatedly) to close a RandomAccessFile from two concurrent threads.&lt;/p&gt;

&lt;p&gt;I tested it on a Linux machine with Oracle Java 1.5.0_36, and it fails consistently (though it varies how long it takes before failure) with:&lt;/p&gt;

&lt;p&gt;java.io.IOException: Bad file descriptor&lt;br/&gt;
	at java.io.RandomAccessFile.close0(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.close(RandomAccessFile.java:532)&lt;br/&gt;
	at CloseRAF$1.run(CloseRAF.java:24)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:637)&lt;/p&gt;

&lt;p&gt;I haven&apos;t seen it fail yet with Java 6 or Java 7 on the same machine.&lt;/p&gt;

&lt;p&gt;If this can also be observed with IBM&apos;s JVM, it supports the theory that the test failure is caused by a JVM bug with concurrent close. It would happen if LOBStreamControl&apos;s finalize() method and the normal transaction commit logic ended up closing the same RAF at the same time.&lt;/p&gt;

&lt;p&gt;Since a finalizer is involved, reproducing it depends on garbage collection happening at the right moment. I guess the trick with removing ORDER BY clauses in the test may have changed the amount of garbage produced, so that garbage collection happened at a different time.&lt;/p&gt;</comment>
                            <comment id="13625836" author="mikem" created="Mon, 8 Apr 2013 22:21:49 +0100"  >&lt;p&gt;i&apos;ll try it out on ibm15.  Is there anything we can do to work around the jvm bug, maybe put in some synchonization ourselves in LOBStreamControl?  I know we&lt;br/&gt;
have gotten in trouble in past which synchronization deadlocking with GC, so need to be careful here.&lt;/p&gt;</comment>
                            <comment id="13625850" author="knutanders" created="Mon, 8 Apr 2013 22:30:22 +0100"  >&lt;p&gt;This is the bug in Oracle&apos;s JVM: &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6322678&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6322678&lt;/a&gt;&lt;br/&gt;
Fixed in Java 7, and in Java 6 from update 25.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;https://www.ibm.com/developerworks/java/jdk/aix/j664/Java6_64.fixes.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.ibm.com/developerworks/java/jdk/aix/j664/Java6_64.fixes.html&lt;/a&gt;, the corresponding bug in IBM&apos;s JVM was fixed in 6.0 SR12. (Search for the Oracle bug number to find it in the list.)&lt;/p&gt;</comment>
                            <comment id="13625884" author="knutanders" created="Mon, 8 Apr 2013 22:54:21 +0100"  >&lt;p&gt;Rick saw a very similar stack trace in another test back in 2008, which suggests that this problem existed before 10.10:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-481?focusedCommentId=12645891&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12645891&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-481?focusedCommentId=12645891&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12645891&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13626430" author="knutanders" created="Tue, 9 Apr 2013 10:52:25 +0100"  >&lt;p&gt;I think this problem could be avoided without introducing more synchronization by reordering how the finalizer performs the cleanup. See the attached patch d6092-1a-reorder-cleanup.diff.&lt;/p&gt;

&lt;p&gt;The patch makes the finalizer&apos;s cleanup code remove the LOBFile from the list of open files before attempting to close it. This way, when commit or rollback calls clearLOBMapping(), it won&apos;t find the file in the list if the finalizer is about to close it, and it won&apos;t attempt to close it a second time.&lt;/p&gt;

&lt;p&gt;Conversely, if clearLOBMapping() is about to close the file when the finalizer is run, the finalizer will have to wait until it&apos;s done before it can proceed with removing the file from the list (because clearLOBMapping() synchronizes on the list while it iterates over it). Since the patch makes the finalizer wait with closing the file until it&apos;s removed from the list, it won&apos;t try to close it until after clearLOBMapping() is done closing it. In this case, the file will still be closed twice, but it won&apos;t be closed twice concurrently, and the bug is avoided.&lt;/p&gt;

&lt;p&gt;On Java 6 and newer the patch shouldn&apos;t be necessary for correctness. However, it makes it slightly less likely that unnecessary work (that is, double closing) is done, and it doesn&apos;t increase code complexity, so I think it&apos;s an improvement regardless of the JVM bug it attempts to work around.&lt;/p&gt;

&lt;p&gt;I&apos;m running the full regression test suite on the patch now.&lt;/p&gt;

&lt;p&gt;It would be good if someone who is able to reproduce the problem could check if the patch helps.&lt;/p&gt;</comment>
                            <comment id="13626485" author="knutanders" created="Tue, 9 Apr 2013 12:12:51 +0100"  >&lt;p&gt;All the regression tests ran cleanly with OpenJDK version 1.7.0_09-icedtea on Oracle Linux 6.4.&lt;/p&gt;</comment>
                            <comment id="13626759" author="myrna" created="Tue, 9 Apr 2013 17:16:39 +0100"  >&lt;p&gt;I&apos;m running the BlobClob4BlobTest 50x with the patch applied to trunk, running IBM 1.5 SR16 +IV37422.&lt;br/&gt;
I did a quick run without the patch and it ran 5 times and failed 3 times and then I killed that.&lt;br/&gt;
So far, with the patch, it has run 5 and no failures.&lt;br/&gt;
I&apos;ll let it run some more tests, but this looks promising.&lt;/p&gt;</comment>
                            <comment id="13626891" author="mikem" created="Tue, 9 Apr 2013 19:05:26 +0100"  >&lt;p&gt;+1 to the change.  I agree that this is a good change whether jvm has the bug or not.  It might be worth adding a comment to the code saying why &lt;br/&gt;
the order is the way it is, to make sure someone does not change it back.  &lt;/p&gt;</comment>
                            <comment id="13626960" author="myrna" created="Tue, 9 Apr 2013 20:05:23 +0100"  >&lt;p&gt;No failures in 50 runs. +1 to this change, and backport to 10.10. I think also this issue&apos;s priority can be lowered. The workaround would be to move to a higher jvm release.&lt;/p&gt;</comment>
                            <comment id="13627593" author="knutanders" created="Wed, 10 Apr 2013 09:10:25 +0100"  >&lt;p&gt;Thanks for testing the patch, Myrna and Mike!&lt;/p&gt;

&lt;p&gt;I added a comment to the changed method and committed revision 1466362.&lt;/p&gt;

&lt;p&gt;Reduced priority to &quot;Major&quot; and marked with &quot;Workaround attached&quot; (that is, upgrade to newer JVM).&lt;/p&gt;</comment>
                            <comment id="13627603" author="knutanders" created="Wed, 10 Apr 2013 09:29:25 +0100"  >&lt;p&gt;Merged to 10.10 and committed revision 1466378.&lt;/p&gt;

&lt;p&gt;Marking the issue as resolved.&lt;/p&gt;</comment>
                            <comment id="13629259" author="mamtas" created="Thu, 11 Apr 2013 20:31:37 +0100"  >&lt;p&gt;saw it in trunk with revision 1465525 but probably is resolved with recent changes to this jira&lt;br/&gt;
&lt;a href=&quot;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1465525-suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13726934" author="kmarsden" created="Thu, 1 Aug 2013 22:39:42 +0100"  >&lt;p&gt;Assign to myself temporarily for backport.&lt;/p&gt;</comment>
                            <comment id="13727664" author="jira-bot" created="Fri, 2 Aug 2013 14:19:12 +0100"  >&lt;p&gt;Commit 1509687 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kmarsden&quot; class=&quot;user-hover&quot; rel=&quot;kmarsden&quot;&gt;Kathey Marsden&lt;/a&gt; in branch &apos;code/branches/10.9&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1509687&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1509687&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6092&quot; title=&quot;testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &amp;#39;The handle is invalid.: java.io.IOException&amp;#39;.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6092&quot;&gt;&lt;del&gt;DERBY-6092&lt;/del&gt;&lt;/a&gt; testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &apos;The handle is invalid.: java.io.IOException&apos;&lt;/p&gt;

&lt;p&gt;Merged from 10.10 revision 1466378&lt;br/&gt;
Contributed by Knut Anders Hatlen&lt;/p&gt;</comment>
                            <comment id="13727758" author="jira-bot" created="Fri, 2 Aug 2013 17:06:15 +0100"  >&lt;p&gt;Commit 1509754 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kmarsden&quot; class=&quot;user-hover&quot; rel=&quot;kmarsden&quot;&gt;Kathey Marsden&lt;/a&gt; in branch &apos;code/branches/10.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1509754&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1509754&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6092&quot; title=&quot;testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &amp;#39;The handle is invalid.: java.io.IOException&amp;#39;.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6092&quot;&gt;&lt;del&gt;DERBY-6092&lt;/del&gt;&lt;/a&gt; testPositionAgressive(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)j fails with : &apos;The handle is invalid.: java.io.IOException&apos;&lt;/p&gt;

&lt;p&gt;Merged from 10.10 revision 1466378&lt;br/&gt;
Contributed by Knut Anders Hatlen&lt;/p&gt;</comment>
                            <comment id="13727762" author="kmarsden" created="Fri, 2 Aug 2013 17:10:05 +0100"  >&lt;p&gt;backported to 10.9 and 10.8.&lt;/p&gt;</comment>
                            <comment id="14284778" author="myrna" created="Wed, 21 Jan 2015 00:23:18 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12640413">DERBY-6142</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12656863">DERBY-6289</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12641406">DERBY-6154</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12554488">DERBY-5752</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12577618" name="CloseRAF.java" size="1146" author="knutanders" created="Mon, 8 Apr 2013 21:53:37 +0100"/>
                            <attachment id="12577765" name="d6092-1a-reorder-cleanup.diff" size="1243" author="knutanders" created="Tue, 9 Apr 2013 10:52:25 +0100"/>
                            <attachment id="12577562" name="derby-6092_noorderby.diff" size="1623" author="mikem" created="Mon, 8 Apr 2013 18:05:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 Feb 2013 08:37:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314524</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10427"><![CDATA[Workaround attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzc4jj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314868</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>