<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:32:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-742/DERBY-742.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-742] Use a single result BooleanDataValue for a boolean expression in class generation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-742</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;BinaryLogicalOperatorNode.generateExpression() creates a BooleanDataValue for the result of the expression, this is to avoid object generation during runtime.&lt;/p&gt;

&lt;p&gt;The code is logically like (ignoring the short circuit logic) for the SQL &amp;lt;left&amp;gt; AND &amp;lt;right&amp;gt;&lt;/p&gt;

&lt;p&gt;BooleanDataValue   e34; // instance field for the result&lt;/p&gt;

&lt;p&gt; e34 = &amp;lt;left&amp;gt;.and( &amp;lt;right&amp;gt;,  e34);&lt;/p&gt;

&lt;p&gt;The and method on BooleanDataValue will create a new BooleanDataValue if the passed in e34 is null, otherwise re-use it.&lt;br/&gt;
On the first execution e34 will be null, and thus the &apos;and&apos; method will create an object and it will get stored in e34.&lt;br/&gt;
[ Ignore for the moment the inefficiency of setting e34 everytime to the same value on every subsequent execution. ]&lt;br/&gt;
[ This approach is standard practice in the generated code and elsewhere and ensures that  object allocation within a Derby ]&lt;br/&gt;
[ statement execution is a fixed cost, and not linear with the number of rows scanned. ]&lt;/p&gt;

&lt;p&gt;This issue is about what happens when multiple boolean expressions get combined, as in the query in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-732&quot; title=&quot;ERROR XBCM1: Java linkage error thrown during load of generated class  for  query with large number of logical operators and substitution parameters.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-732&quot;&gt;&lt;del&gt;DERBY-732&lt;/del&gt;&lt;/a&gt;. For each AND/OR&lt;br/&gt;
a new BooleanDataValue field is created to hold the result of the intrermediate step, e.g. for the SQL ( &amp;lt;A&amp;gt; AND &amp;lt;B&amp;gt; ) AND &amp;lt;C&amp;gt;&lt;/p&gt;


&lt;p&gt;BooleanDataValue   e34; // instance field for the result of A and B&lt;br/&gt;
BooleanDataValue   e35; // instance field for the final result&lt;/p&gt;

&lt;p&gt; e34 = &amp;lt;A&amp;gt;.and( &amp;lt;B&amp;gt;,  e34);&lt;br/&gt;
 e35 = &amp;lt;e34&amp;gt;.and(&amp;lt;C&amp;gt;, e35);&lt;/p&gt;

&lt;p&gt;But since this is a single expression, of the same type up and down the tree, why not  have a single BooleanDataValue for the result&lt;/p&gt;

&lt;p&gt;BooleanDataValue   e36; // instance field for the final result&lt;/p&gt;

&lt;p&gt; e36 = &amp;lt;A&amp;gt;.and( &amp;lt;B&amp;gt;,  e36);&lt;br/&gt;
 e36 = &amp;lt;e36&amp;gt;.and(&amp;lt;C&amp;gt;, e36);&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;e36 = new BooleanDataValue(); // through data value factory&lt;br/&gt;
&amp;lt;A&amp;gt;.and( &amp;lt;B&amp;gt;,  e36);&lt;br/&gt;
&amp;lt;e36&amp;gt;.and(&amp;lt;C&amp;gt;, e36);&lt;/p&gt;

&lt;p&gt;The query for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-732&quot; title=&quot;ERROR XBCM1: Java linkage error thrown during load of generated class  for  query with large number of logical operators and substitution parameters.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-732&quot;&gt;&lt;del&gt;DERBY-732&lt;/del&gt;&lt;/a&gt; has over 500 BooleanDataValue   fields, which I think are all intermediate result holders.&lt;/p&gt;

&lt;p&gt;Would need to document that the and and or methods return the result passed in if it is not null, which I think is the case for&lt;br/&gt;
all DataValueDescriptor methods that take a result parameter.&lt;/p&gt;







&lt;p&gt;[ [ &lt;/p&gt;</description>
                <environment></environment>
        <key id="12326263">DERBY-742</key>
            <summary>Use a single result BooleanDataValue for a boolean expression in class generation</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12326197">DERBY-732</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djd">Daniel John Debrunner</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Dec 2005 10:30:56 +0000</created>
                <updated>Mon, 29 Oct 2007 17:22:19 +0000</updated>
                            <resolved>Mon, 29 Oct 2007 17:22:20 +0000</resolved>
                                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12359342" author="djd" created="Tue, 6 Dec 2005 05:36:48 +0000"  >&lt;p&gt;After looking at this in more detail, it&apos;s actually the short circuit logic that is causing all the BooleanDataValue fields. The generated code for A AND B is roughly&lt;/p&gt;

&lt;p&gt;BooleanDataValue e67; // a generated field in the class&lt;/p&gt;

&lt;p&gt;if (A.equals(false)) // false here and in the getBoolean is the &apos;short circuit constant&apos;&lt;/p&gt;
{
    result = e67 = getDataValueFactory().getBoolean(false, e67);
}
&lt;p&gt;else&lt;/p&gt;
{
    result = A.and(B);
}

&lt;p&gt;No result holder is used for the method BooleanDataValue.and or BooleanDataValue.or because they return an immutable BooleanDataValue.&lt;/p&gt;

&lt;p&gt;The same code is used to execute OR, in that case the short circuit constant is &apos;true&apos; rather than &apos;false&apos; in this case.&lt;/p&gt;

&lt;p&gt;Replacing the use of a holder in the short circuit code with an immuntable BooleanDataValue would reduce the amount of code generated for this query.&lt;/p&gt;
</comment>
                            <comment id="12359449" author="djd" created="Wed, 7 Dec 2005 03:52:06 +0000"  >&lt;p&gt;svn revision 354496&lt;/p&gt;</comment>
                            <comment id="12538141" author="kmarsden" created="Sat, 27 Oct 2007 00:42:59 +0100"  >&lt;p&gt;reopen to backport to 10.1&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 26 Oct 2007 23:42:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29684</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10vr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39793</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>