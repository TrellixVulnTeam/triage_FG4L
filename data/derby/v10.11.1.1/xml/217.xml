<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-217/DERBY-217.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-217] issue with BLOBs and batch updates in 10.1.0.0</title>
                <link>https://issues.apache.org/jira/browse/DERBY-217</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;A batch update statement containing an insert statement with a BLOB value inserts a null BLOB. Here ist the output of sysinfo: &lt;/p&gt;

&lt;p&gt;------------------ Java Information ------------------&lt;br/&gt;
Java Version:    1.4.2_04&lt;br/&gt;
Java Vendor:     Sun Microsystems Inc.&lt;br/&gt;
Java home:       C:\Programme\Java\j2re1.4.2_04&lt;br/&gt;
Java classpath:  U:\derby\trunk\jars\sane\derby.jar&lt;br/&gt;
OS name:         Windows XP&lt;br/&gt;
OS architecture: x86&lt;br/&gt;
OS version:      5.1&lt;br/&gt;
Java user name:  gk&lt;br/&gt;
Java user home:  C:\Dokumente und Einstellungen\gk&lt;br/&gt;
Java user dir:   C:\&lt;br/&gt;
java.specification.name: Java Platform API Specification&lt;br/&gt;
java.specification.version: 1.4&lt;br/&gt;
--------- Derby Information --------&lt;br/&gt;
JRE - JDBC: J2SE 1.4.2 - JDBC 3.0&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;U:\derby\trunk\jars\sane\derby.jar&amp;#93;&lt;/span&gt; 10.1.0.0 alpha - (160290)&lt;/p&gt;

&lt;p&gt;And here is a test program to reproduce the isssue:&lt;/p&gt;

&lt;p&gt;import java.sql.Connection;&lt;br/&gt;
import java.sql.DriverManager;&lt;br/&gt;
import java.sql.PreparedStatement;&lt;br/&gt;
import java.sql.ResultSet;&lt;br/&gt;
import java.sql.SQLException;&lt;/p&gt;

&lt;p&gt;public class DerbyBlobIssueRepro {&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) {&lt;br/&gt;
        System.setProperty(&quot;derby.system.home&quot;, &quot;C:\\temp&lt;br class=&quot;atl-forced-newline&quot; /&gt;&quot;);&lt;/p&gt;

&lt;p&gt;        try &lt;/p&gt;
{
            Class.forName(&quot;org.apache.derby.jdbc.EmbeddedDriver&quot;);
        }
&lt;p&gt;        catch(ClassNotFoundException e) &lt;/p&gt;
{
            e.printStackTrace();
            System.exit(1);
        }&lt;br/&gt;
&lt;br/&gt;
        PreparedStatement stmtBatchInsert = null; &lt;br/&gt;
            &lt;br/&gt;
        try {
            final Connection conn = getConnection();
            
            createOrRecreateTable(conn);
            
            stmtBatchInsert = getPreparedInsertRowWithBlobStmt(conn);
            
            insertRowWithBlob(stmtBatchInsert, 100);
//            insertRowWithBlob(stmtBatchInsert, 200);
            
            stmtBatchInsert.executeBatch();

            conn.commit();
            
            checkBlobLen(conn);
            
            conn.commit();
            
            conn.close();
        }&lt;br/&gt;
        catch(SQLException e) {            e.printStackTrace();            System.exit(1);        }
&lt;p&gt;        finally {&lt;br/&gt;
            if (stmtBatchInsert != null) { try &lt;/p&gt;
{ stmtBatchInsert.close(); }
&lt;p&gt; catch (SQLException e) {} }&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        System.exit(0);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    private static void createOrRecreateTable(Connection p_conn) throws SQLException {&lt;br/&gt;
        try &lt;/p&gt;
{
            dropTable(p_conn);
        }
&lt;p&gt;        catch(SQLException e) {&lt;br/&gt;
            if (!e.getSQLState().equals(&quot;42Y07&quot;)) &lt;/p&gt;
{
                e.printStackTrace();
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        createTable(p_conn);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    private static void dropTable(Connection p_conn) throws SQLException {&lt;br/&gt;
        PreparedStatement stmt = null;&lt;br/&gt;
        try &lt;/p&gt;
{
            stmt = p_conn.prepareStatement(&quot;DROP TABLE test.blobtest&quot;);

            stmt.executeUpdate();
        }
&lt;p&gt;        finally {&lt;br/&gt;
            if (stmt != null) { try &lt;/p&gt;
{ stmt.close(); } catch (SQLException e) {} }&lt;br/&gt;
        }&lt;br/&gt;
    }&lt;br/&gt;
    &lt;br/&gt;
    private static void createTable(Connection p_conn) throws SQLException {&lt;br/&gt;
        PreparedStatement stmt = null;&lt;br/&gt;
        try {
            stmt = p_conn.prepareStatement(&quot;CREATE TABLE test.blobtest(len INTEGER, bval BLOB(10M))&quot;);

            stmt.executeUpdate();
        }&lt;br/&gt;
        finally {&lt;br/&gt;
            if (stmt != null) { try { stmt.close(); }
&lt;p&gt; catch (SQLException e) {} }&lt;br/&gt;
        }&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt;    private static void insertRowWithBlob(PreparedStatement p_stmtInsert, int p_nLen) throws SQLException &lt;/p&gt;
{
        p_stmtInsert.setInt(1, p_nLen);
        p_stmtInsert.setBytes(2, new byte[p_nLen]);

        p_stmtInsert.addBatch();
    }

&lt;p&gt;    private static PreparedStatement getPreparedInsertRowWithBlobStmt(Connection p_conn) throws SQLException &lt;/p&gt;
{
        return p_conn.prepareStatement(&quot;INSERT INTO test.blobtest(len,bval) VALUES (?,?)&quot;);
    }


&lt;p&gt;    private static void checkBlobLen(Connection p_conn) throws SQLException {&lt;br/&gt;
        PreparedStatement stmtQuery = null;&lt;br/&gt;
        ResultSet rs = null;&lt;br/&gt;
        try {&lt;br/&gt;
            // try ter update the row, may be there is no row to update&lt;br/&gt;
            stmtQuery = p_conn.prepareStatement(&quot;SELECT len, bval from test.blobtest&quot;);&lt;/p&gt;

&lt;p&gt;            rs = stmtQuery.executeQuery();&lt;/p&gt;

&lt;p&gt;            while(rs.next()) {&lt;br/&gt;
                final int nLen = rs.getInt(1);&lt;br/&gt;
                final byte[] arBytes = rs.getBytes(2);&lt;/p&gt;

&lt;p&gt;                if (rs.wasNull()) &lt;/p&gt;
{
                    System.out.println(&quot;unexpected null blob&quot;);
                }
&lt;p&gt;                else if (nLen != arBytes.length) &lt;/p&gt;
{
                    System.out.println(&quot;unexpected number of bytes, expected: &quot; + nLen + &quot;, was: &quot; + arBytes.length);
                }
&lt;p&gt;            }&lt;br/&gt;
        }&lt;br/&gt;
        finally {&lt;br/&gt;
            if (rs != null) { try &lt;/p&gt;
{ rs.close(); }
&lt;p&gt; catch (SQLException e) {} }&lt;br/&gt;
            if (stmtQuery != null) { try &lt;/p&gt;
{ stmtQuery.close(); }
&lt;p&gt; catch (SQLException e) {} }&lt;br/&gt;
        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    private static Connection getConnection() throws SQLException &lt;/p&gt;
{
        final Connection conn = DriverManager.getConnection(&quot;jdbc:derby:derbyblobdb;create=true&quot;, &quot;test&quot;, &quot;test&quot;);
        conn.setAutoCommit(false);
        return conn;
    }

&lt;p&gt;}&lt;/p&gt;
</description>
                <environment>Win XP SP2</environment>
        <key id="31620">DERBY-217</key>
            <summary>issue with BLOBs and batch updates in 10.1.0.0</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bandaram">Satheesh Bandaram</assignee>
                                    <reporter username="gekhin">Gerald Khin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Apr 2005 01:30:12 +0100</created>
                <updated>Sat, 23 Jul 2005 06:54:02 +0100</updated>
                            <resolved>Wed, 15 Jun 2005 04:39:53 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="66286" author="djd" created="Thu, 26 May 2005 03:05:23 +0100"  >&lt;p&gt;Possibly fixed by changes to Derby-203 but I think if a streaming value is passed into a BLOB or other binary value and batching is used, then the fix to 203 will always cause the stream to be converted to a byte array. Where possible the stream should remain as a stream at the JDBC level, e.g. if the SQLBinary value is a stream then use setBinaryStream in setInto. &lt;/p&gt;</comment>
                            <comment id="66544" author="gekhin" created="Tue, 31 May 2005 01:06:15 +0100"  >&lt;p&gt;I tried the version 10.1.0.0 alpha - (179046), but there is still the same behavior.&lt;/p&gt;</comment>
                            <comment id="12312483" author="djd" created="Sat, 4 Jun 2005 01:45:42 +0100"  >&lt;p&gt;Inserting a wrong value seems like a blocker to me&lt;/p&gt;</comment>
                            <comment id="12312921" author="bandaram" created="Wed, 8 Jun 2005 04:18:52 +0100"  >&lt;p&gt;I think this bug is a regression caused by the fix for:&lt;/p&gt;

&lt;p&gt;Derby-174 &amp;amp; Derby-175: Make setNull work with Timestamp and Blob datatypes.&lt;/p&gt;

&lt;p&gt;Submitted by Shreyas Kaushik (Shreyas.Kaushik@Sun.COM)&lt;/p&gt;

&lt;p&gt;If I rollback the fix in my setup, the passes as expected. I believe the setInto() methods added for SQLBlob and SQLTimestamp are incorrect.&lt;/p&gt;

&lt;p&gt;Satheesh&lt;/p&gt;</comment>
                            <comment id="12312980" author="djd" created="Wed, 8 Jun 2005 12:50:11 +0100"  >&lt;p&gt;The patch will work but suffers the same issue with streamed columns as my comment about Derby-203 above. Could be fixed in a separate patch.&lt;/p&gt;</comment>
                            <comment id="12313043" author="bandaram" created="Thu, 9 Jun 2005 00:00:17 +0100"  >&lt;p&gt;I can file a bug about streamed columns, if needed. With this bug, I am restoring the behavior to pre-regression, which uses setBytes(). I will also add a comment to the patch.&lt;/p&gt;</comment>
                            <comment id="12313622" author="bandaram" created="Wed, 15 Jun 2005 04:39:52 +0100"  >&lt;p&gt;A fix has been checked into trunk and seems to be present in 10.1. I will keep this bug OPEN till a test case is added.&lt;/p&gt;</comment>
                            <comment id="12315369" author="bandaram" created="Sat, 9 Jul 2005 11:20:15 +0100"  >&lt;p&gt;Dan, this BLOCKER defect has been RESOLVED for sometime, but I kept it open pending a test case addition. You had mentioned you would be adding a test case. Let me know when that is done and that it works as expected, so I can close this bug.&lt;/p&gt;</comment>
                            <comment id="12316090" author="djd" created="Tue, 19 Jul 2005 23:22:57 +0100"  >&lt;p&gt;Added final test cases for setXXX methods and batching to jdbcapi/parameterMapping.java&lt;br/&gt;
Committed revision 219679 (trunk(&lt;/p&gt;</comment>
                            <comment id="12316518" author="bandaram" created="Sat, 23 Jul 2005 06:54:02 +0100"  >&lt;p&gt;Since Dan committed test cases and since fix has been present in trunk and 10.1 codeline, I am closing this issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12310587" name="Derby-217.txt" size="621" author="bandaram" created="Wed, 8 Jun 2005 10:30:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 26 May 2005 02:05:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21841</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17un:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>