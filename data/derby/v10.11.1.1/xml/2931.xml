<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:18 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2931/DERBY-2931.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2931] jdbcapi/ConcurrencyTest not able to drop table in soft upgrade mode</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2931</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;1. Created at database system/wombat with ij version 10.2&lt;br/&gt;
2. Ran jdbcapi/ConcurrencyTest with same current directory. All test cases but the first test fail with:&lt;/p&gt;

&lt;p&gt;30) testTruncateDuringScan(org.apache.derbyTesting.functionTests.tests.jdbcapi.ConcurrencyTest)junit.framework.ComparisonFailure: &apos;drop table t1&apos; failed with unexpected SQL State expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;42Y55&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;XSDA7&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.SURDataModelSetup.createDataModel(SURDataModelSetup.java:70)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.SURDataModelSetup.createDataModel(SURDataModelSetup.java:125)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.jdbcapi.ConcurrencyTest.setUp(ConcurrencyTest.java:54)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:88)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;
</description>
                <environment>Soft upgrade </environment>
        <key id="12373626">DERBY-2931</key>
            <summary>jdbcapi/ConcurrencyTest not able to drop table in soft upgrade mode</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="oysteing">&#216;ystein Gr&#248;vlen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Jul 2007 14:00:48 +0100</created>
                <updated>Fri, 25 Jul 2008 18:19:13 +0100</updated>
                            <resolved>Fri, 13 Jul 2007 15:42:54 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12512099" author="oysteing" created="Thu, 12 Jul 2007 15:00:23 +0100"  >&lt;p&gt;If I boot the database in ij after running the ConcurrencyTest and try to drop the table, I get:&lt;br/&gt;
ij version 10.3&lt;br/&gt;
ij&amp;gt; connect  &apos;jdbc:derby:system/wombat&apos;;&lt;br/&gt;
ij&amp;gt; drop table t1;&lt;br/&gt;
ERROR XSDA7: Restore of a serializable or SQLData object of class , attempted to read more data than was originally stored&lt;br/&gt;
java.sql.SQLException: Restore of a serializable or SQLData object of class , attempted to read more data than was originally stored&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)        at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main14.main(Unknown Source)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(Unknown Source)&lt;br/&gt;
Caused by: java.sql.SQLException: Restore of a serializable or SQLData object of class , attempted to read more data than was originally stored&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 18 more&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.io.EOFException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        ... 15 more&lt;br/&gt;
Caused by: java.io.EOFException&lt;br/&gt;
        at org.apache.derby.iapi.services.io.ArrayInputStream.readUnsignedByte(Unknown Source)&lt;br/&gt;
        at org.apache.derby.iapi.services.io.CompressedNumber.readInt(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.readCollationIdArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.localReadExternal(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.readExternalFromArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFromSlot(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlot(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.openConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DDLConstantAction.lockTableForDDL(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
        ... 11 more&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.io.EOFException&apos;.&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;: java.io.EOFException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(Unknown Source)        at org.apache.derby.impl.tools.ij.utilMain.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main14.main(Unknown Source)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(Unknown Source)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.io.EOFException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 19 more&lt;br/&gt;
Caused by: java.io.EOFException&lt;br/&gt;
        at org.apache.derby.iapi.services.io.ArrayInputStream.readUnsignedByte(Unknown Source)&lt;br/&gt;
        at org.apache.derby.iapi.services.io.CompressedNumber.readInt(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.readCollationIdArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.localReadExternal(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.Heap.readExternalFromArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.readRecordFromArray(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.StoredPage.restoreRecordFromSlot(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.data.BasePage.fetchFromSlot(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapConglomerateFactory.readConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMAccessManager.conglomCacheFind(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.findExistingConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.openConglomerate(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DDLConstantAction.lockTableForDDL(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
        ... 11 more&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12512121" author="knutanders" created="Thu, 12 Jul 2007 15:49:58 +0100"  >&lt;p&gt;I found that the bug can be reproduced with these three steps:&lt;/p&gt;

&lt;p&gt;1. Create a database with 10.2:&lt;/p&gt;

&lt;p&gt;ij version 10.2&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;2. Connect to the same database with 10.3 in soft upgrade mode and create a table, then exit ij:&lt;/p&gt;

&lt;p&gt;ij version 10.3&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db&apos;;&lt;br/&gt;
ij&amp;gt; create table t (x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;3. Connect with 10.3 again and try to fetch the contents of the table:&lt;/p&gt;

&lt;p&gt;ij version 10.3&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db&apos;;&lt;br/&gt;
ij&amp;gt; select * from t;&lt;br/&gt;
ERROR XSDA7: Restore of a serializable or SQLData object of class , attempted to read more data than was originally stored&lt;br/&gt;
ERROR XJ001: Java exception: &apos;: java.io.EOFException&apos;.&lt;/p&gt;</comment>
                            <comment id="12512123" author="knutanders" created="Thu, 12 Jul 2007 15:51:18 +0100"  >&lt;p&gt;I see the same error when soft upgrading from 10.1.3.1 to 10.3.1.1, but not from 10.1.3.1 to 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12512134" author="knutanders" created="Thu, 12 Jul 2007 16:08:08 +0100"  >&lt;p&gt;Increasing priority to &apos;Blocker&apos; since this seems like a serious error that users are likely to hit, and it might potentially corrupt existing databases.&lt;/p&gt;</comment>
                            <comment id="12512179" author="mikem" created="Thu, 12 Jul 2007 18:10:44 +0100"  >&lt;p&gt;I&apos;m looking at it now.  The stack indicates readExternal is looking for collation information, but in a soft upgraded table there should not be any.&lt;/p&gt;</comment>
                            <comment id="12512204" author="mikem" created="Thu, 12 Jul 2007 19:36:34 +0100"  >&lt;p&gt;derby2931.diff is proposed fix for derby2931 for the trunk.  Mostly comment changes and fixes the format id version used for accessing old format Heap&apos;s,&lt;br/&gt;
it was incorrectly using the new one.  To reproduce you need to create pre-10.3 base table, and then in 10.3 somehow access that table not from cache.  &lt;br/&gt;
Easiest is to shut down and startup again in a soft upgrade db, but bug would also happen if you managed to access enough tables to age out the created table from the container cache.  &lt;/p&gt;

&lt;p&gt;So far I have run upgrade tests against fix applied to 10.3 branch and hand tested the change against the repro case that Knut describes in this JIRA entry.&lt;/p&gt;</comment>
                            <comment id="12512250" author="kmarsden" created="Thu, 12 Jul 2007 21:35:20 +0100"  >&lt;p&gt;This is a test case for this issue. I accidentally posted to the wrong issue.&lt;/p&gt;</comment>
                            <comment id="12512273" author="knutanders" created="Thu, 12 Jul 2007 22:57:41 +0100"  >&lt;p&gt;Thanks for writing the test case, Kathey. It looks good, but I was wondering whether it would be better to put it in BasicSetup rather than in Changes10_3. When it is in Changes10_3, it is only tested for upgrades from Derby&amp;lt;10.3, so if something similar sneaks in in future releases, we might miss it.&lt;/p&gt;</comment>
                            <comment id="12512300" author="mikem" created="Fri, 13 Jul 2007 00:04:07 +0100"  >&lt;p&gt;I&apos;ve checked in fixes and updates to the upgrade test for both trunk and branch.  I not going to mark it fixed until Oystein has a chance to check it out in his test.  The changes to the upgrade test definitely showed the bug and were fixed by the checkin.  I included Kathy&apos;s test case in the upgrade changes as well as a slightly different test I had written.  &lt;/p&gt;

&lt;p&gt;I think the comments about putting the test in the basic class rather than 10.3 also apply to my test case but I won&apos;t have a chance to get to that for a bit. &lt;/p&gt;</comment>
                            <comment id="12512366" author="oysteing" created="Fri, 13 Jul 2007 06:47:49 +0100"  >&lt;p&gt;I applied Mike&apos;s patch, and the jdbcapi/ConcurrencyTest now runs without errors.  Thanks, for fixing this in such a short time!  (This fix also seems to have got rid of the serialization errors I saw in the BlobClob4BlobTest).&lt;/p&gt;</comment>
                            <comment id="12512503" author="myrna" created="Fri, 13 Jul 2007 15:42:54 +0100"  >&lt;p&gt;marking fixed&lt;/p&gt;</comment>
                            <comment id="12512505" author="myrna" created="Fri, 13 Jul 2007 15:44:27 +0100"  >&lt;p&gt;3rd time setting fixin.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12361713" name="DERBY-2931_test_case_diff.txt" size="2630" author="kmarsden" created="Thu, 12 Jul 2007 21:35:19 +0100"/>
                            <attachment id="12361704" name="derby2931.diff" size="4456" author="mikem" created="Thu, 12 Jul 2007 19:36:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Jul 2007 14:49:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23324</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0yp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39439</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>