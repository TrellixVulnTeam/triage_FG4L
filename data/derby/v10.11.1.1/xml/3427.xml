<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:42:34 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3427/DERBY-3427.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3427] setting transaction isolation level to read committed raise ERROR X0X03: Invalid transaction state - held cursor requires same isolation level</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3427</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;setting transaction isolation level to read committed after reading a BLOG record raise ERROR X0X03: Invalid transaction state - held cursor requires same isolation level .&lt;/p&gt;

&lt;p&gt;  Using Derby client 10.2  either with Derby  server 10.3  or  10.2   works fine .&lt;/p&gt;

&lt;p&gt;  Using Derby Client 10.3  with Derby Server 10.2  also work fine.  &lt;/p&gt;</description>
                <environment>windows XP Java version 1.6.0_03</environment>
        <key id="12388885">DERBY-3427</key>
            <summary>setting transaction isolation level to read committed raise ERROR X0X03: Invalid transaction state - held cursor requires same isolation level</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="sqldeskt">Rene Levantinh</reporter>
                        <labels>
                    </labels>
                <created>Sun, 17 Feb 2008 18:24:44 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:29 +0000</updated>
                            <resolved>Mon, 17 Mar 2008 06:52:36 +0000</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12569737" author="sqldeskt" created="Sun, 17 Feb 2008 18:28:51 +0000"  >&lt;p&gt;The server part is the demo found in the distribution file.&lt;/p&gt;

&lt;p&gt;  The client part is a modified version found in the distribution file to reproduce the bug.&lt;/p&gt;</comment>
                            <comment id="12569855" author="dyret" created="Mon, 18 Feb 2008 11:16:43 +0000"  >&lt;p&gt;I assume that you mean BLOB (not BLOG)? &lt;br/&gt;
Are you saying that this is a regression from 10.2 to 10.3?&lt;/p&gt;

&lt;p&gt;Your example contains quite a bit of code. Can you pinpoint where you&apos;re getting the error?&lt;br/&gt;
Did you try the same query with other data types (not BLOB/CLOB)?&lt;/p&gt;
</comment>
                            <comment id="12569877" author="knutanders" created="Mon, 18 Feb 2008 12:31:10 +0000"  >&lt;p&gt;Dyre, I managed to reproduce it with this ij script:&lt;/p&gt;

&lt;p&gt;connect &apos;jdbc:derby://localhost/d3427db;create=true&apos;;&lt;br/&gt;
create table t (b blob);&lt;br/&gt;
insert into t values cast (x&apos;ffff&apos; as blob);&lt;br/&gt;
select * from t;&lt;br/&gt;
set isolation rr;&lt;/p&gt;

&lt;p&gt;It works on 10.2.2.0 and fails with X0X03 on 10.3.1.4, so it seems like it is a regression.&lt;/p&gt;</comment>
                            <comment id="12569891" author="knutanders" created="Mon, 18 Feb 2008 13:01:03 +0000"  >&lt;p&gt;The following commit introduced the problem:&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------------------&lt;br/&gt;
r542011 | kahatlen | 2007-05-27 19:56:32 +0200 (Sun, 27 May 2007) | 16 lines&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2496&quot; title=&quot;Implement Blob support for Locators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2496&quot;&gt;&lt;del&gt;DERBY-2496&lt;/del&gt;&lt;/a&gt;: Implement Blob support for Locators&lt;/p&gt;

&lt;p&gt;The attached patch, enableblobloc.diff, contains the the necessary&lt;br/&gt;
changes to enable the use of locators for Blob. The patch addresses&lt;br/&gt;
the following issues:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Enable the use of locators.&lt;/li&gt;
	&lt;li&gt;Modification of tests that experience changed behavior with locators&lt;/li&gt;
	&lt;li&gt;If stored procedures reports that the given locator can not be&lt;br/&gt;
     found, it is assumed that this is because transaction has been&lt;br/&gt;
     terminated and an &quot;Blob accessed after commit&quot; error is&lt;br/&gt;
     reported. This makes the client driver and the embedded driver&lt;br/&gt;
     report the same error for this case.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Contributed by &#216;ystein Gr&#248;vlen.&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12574998" author="dyret" created="Tue, 4 Mar 2008 14:22:17 +0000"  >&lt;p&gt;A couple of observations about this.&lt;br/&gt;
1) The setting of the isolation level fails because the connection has an activation with an open holdable resultset. The statement which created the resultset is &apos;? = CALL SYSIBM.BLOBGETBYTES(?, ?, ?)&apos;&lt;/p&gt;

&lt;p&gt;2) There appears to be something wrong with the transmission of holdability for CallableStatements in the ClientDriver, because &lt;br/&gt;
&apos;? = CALL SYSIBM.BLOBGETBYTES(?, ?, ?)&apos; is clearly prepared with ResultSet.CLOSE_CURSORS_AT_COMMIT:&lt;br/&gt;
            blobGetBytesCall = connection.prepareCallX&lt;br/&gt;
                (&quot;? = CALL SYSIBM.BLOBGETBYTES(?, ?, ?)&quot;,&lt;br/&gt;
                 java.sql.ResultSet.TYPE_FORWARD_ONLY, &lt;br/&gt;
                 java.sql.ResultSet.CONCUR_READ_ONLY, &lt;br/&gt;
                 java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT);&lt;/p&gt;

&lt;p&gt;but when I instrument EmbedCallableStatement I see that on the server the holdability is different:&lt;br/&gt;
			/* KLUDGE - ? = CALL ... returns a ResultSet().  We&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;need executeUpdate to be false in that case.&lt;br/&gt;
			 */&lt;br/&gt;
			org.apache.derby.iapi.services.monitor.Monitor.logMessage(&quot;EmbedCallableStatement=&quot;+getSQLText()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;ins&gt;&quot;, closeAtCommit:&quot;&lt;/ins&gt;(getResultSetHoldability()==java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT));&lt;/p&gt;

&lt;p&gt;prints the following to derby.log:&lt;br/&gt;
EmbedCallableStatement=? = CALL SYSIBM.BLOBGETLENGTH&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, closeAtCommit:false&lt;/p&gt;

&lt;p&gt;and even&lt;br/&gt;
EmbedCallableStatement=call SYSIBM.SQLCAMESSAGE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)&lt;br/&gt;
, closeAtCommit:false&lt;/p&gt;

&lt;p&gt;Seems a bit strange that sSQLCAMESSAGE should need to use a holdable cursor.&lt;/p&gt;


&lt;p&gt;3) The repro runs fine if I modify EmbedCallableStatement.executeStatement(...) so that it closes the resultset it uses to get the value of the out-parameter, rather than simply setting the variable to null:&lt;/p&gt;

&lt;p&gt;  				try&lt;br/&gt;
				&lt;/p&gt;
{
					DataValueDescriptor returnValue = pvs.getReturnValueForSet();
					returnValue.setValueFromResultSet(results, 1, true);
				}
&lt;p&gt; catch (StandardException e)&lt;/p&gt;
				{
					throw EmbedResultSet.noStateChangeException(e);
				}
&lt;p&gt;				finally &lt;/p&gt;
{
					org.apache.derby.iapi.services.monitor.Monitor.
						logMessage(&quot;result:&quot;+results);
					results.close();  // &amp;lt;--- ADDED THIS LINE
					results = null;
				}

&lt;p&gt;				// This is a form of ? = CALL which current is not a procedure call.&lt;br/&gt;
				// Thus there cannot be any user result sets, so return false. execResult&lt;br/&gt;
				// is set to true since a result set was returned, for the return parameter.&lt;br/&gt;
				execResult = false;&lt;/p&gt;

&lt;p&gt;I have not run any other tests with this change, so I don&apos;t know if it has any negative side-effects.&lt;/p&gt;</comment>
                            <comment id="12575041" author="knutanders" created="Tue, 4 Mar 2008 16:18:16 +0000"  >&lt;p&gt;Here&apos;s an alternative (and untested) approach. I changed the network server so that it used the specified holdability instead of the default holdability when preparing calls. It seems to fix the repro.&lt;/p&gt;</comment>
                            <comment id="12575276" author="knutanders" created="Wed, 5 Mar 2008 09:12:37 +0000"  >&lt;p&gt;suites.All ran cleanly with use-holdability.diff. Derbyall had two failures, predicatePushdown and TransactionTable, which are also seen in the nightly testing. I&apos;ll clean up the patch and add a test case.&lt;/p&gt;</comment>
                            <comment id="12575277" author="knutanders" created="Wed, 5 Mar 2008 09:21:19 +0000"  >&lt;p&gt;By the way, I think the missing close() mentioned by Dyre may also be a bug, but it&apos;s probably a separate issue. (If it is a bug, it should be possible to expose it in embedded mode.)&lt;/p&gt;</comment>
                            <comment id="12575324" author="knutanders" created="Wed, 5 Mar 2008 12:27:13 +0000"  >&lt;p&gt;I managed to expose the missing close() in embedded mode. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3496&quot; title=&quot;CallableStatement with output parameter leaves cursor open after execution&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3496&quot;&gt;&lt;del&gt;DERBY-3496&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12575353" author="knutanders" created="Wed, 5 Mar 2008 14:15:36 +0000"  >&lt;p&gt;Attached is a patch (d3427.diff) which fixes the bug by using the prepareCall() method with a holdability parameter in DRDAStatement. The patch also removes DRDAStatement.prepareStatementJDBC3() since we can now use Connection.prepareStatement(String,int,int,int) directly. (prepareStatementJDBC3() additionally contains some logic to handle the case where the holdability is uninitialized, but at this point in the code we know that the holdability is initialized because of the call to parsePkgidToFindHoldability().)&lt;/p&gt;

&lt;p&gt;A test case has been added to BlobClob4BlobTest. It fails without the fix in DRDAStatement and succeeds with the fix.&lt;/p&gt;

&lt;p&gt;I saw these errors when running the regression tests:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;predicatePushdown (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3479&quot; title=&quot;Changed/unexpected query plan when running test &amp;#39;lang/predicatePushdown.sql&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3479&quot;&gt;&lt;del&gt;DERBY-3479&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;st_reclaim_longcol (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1913&quot; title=&quot;storetests/st_reclaim_longcol.java fails intermittently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1913&quot;&gt;&lt;del&gt;DERBY-1913&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;TransactionTable (also seen in the nightly tests)&lt;/li&gt;
	&lt;li&gt;ManagementMBeanTest (also seen in the nightly tests)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12575632" author="dyret" created="Thu, 6 Mar 2008 09:43:21 +0000"  >&lt;p&gt;The patch fixes a regression (always good), and will most likely reduce the number of holdable cursors used by the NetworkServer which in turn should reduce resource consumption. +1&lt;/p&gt;</comment>
                            <comment id="12575637" author="knutanders" created="Thu, 6 Mar 2008 10:00:31 +0000"  >&lt;p&gt;Thanks for reviewing the patch, Dyre. Committed revision 634206.&lt;/p&gt;</comment>
                            <comment id="12575640" author="knutanders" created="Thu, 6 Mar 2008 10:06:33 +0000"  >&lt;p&gt;&amp;gt; which in turn should reduce resource consumption&lt;/p&gt;

&lt;p&gt;The committed patch does however make all callable statements have a cursor name (before the patch, only prepared statements and statements had cursor names), which could increase the resource consumption. Is there any scenario where a CALL statement can make use of the cursor name, or should I create a follow-up patch which reverts to the old behaviour and skips setting the cursor name for CALLs?&lt;/p&gt;</comment>
                            <comment id="12575710" author="dyret" created="Thu, 6 Mar 2008 13:56:53 +0000"  >&lt;p&gt;Knut&amp;gt; should I create a follow-up patch which reverts to the old behaviour and skips setting the cursor name for CALLs?&lt;/p&gt;

&lt;p&gt;Your CALL (pun intended). I have a hard time seeing that it would make a huge difference, but without testing it you never know, I guess...&lt;/p&gt;

&lt;p&gt;Should we set &apos;Existing application impact&apos; on this issue? Theoretically, someone could have come to expect that cursors are always holdable for CallableStatement when using the ClientDriver.&lt;/p&gt;</comment>
                            <comment id="12576133" author="dyret" created="Fri, 7 Mar 2008 10:57:03 +0000"  >&lt;p&gt;I&apos;m adding 10.3.2.2 to the list of fix versions as I think this is a good candidate for merging to 10.3&lt;/p&gt;</comment>
                            <comment id="12578186" author="knutanders" created="Thu, 13 Mar 2008 08:38:50 +0000"  >&lt;p&gt;I guess that if we find out that the cursor name does make any difference, it&apos;s a better solution to make sure the network server doesn&apos;t set a cursor name unless the client has done so, rather than reintroducing the asymmetry between CallableStatement and PreparedStatement. (Of course, the best solution is to fix the overhead of named cursors in the embedded driver, if such an overhead exists.)&lt;/p&gt;

&lt;p&gt;As to the question about setting &apos;existing application impact&apos; flag, I&apos;m leaning towards not setting it. Holdable cursors is the default, so the users must have made a deliberate choice that they want non-holdable cursors, and then they shouldn&apos;t expect the cursors to be holdable.&lt;/p&gt;</comment>
                            <comment id="12579331" author="knutanders" created="Mon, 17 Mar 2008 06:52:36 +0000"  >&lt;p&gt;Committed to 10.3 (revision 637744).&lt;/p&gt;

&lt;p&gt;Derbyall ran cleanly, but suites.All had two failures. Since these failures (XATransactionTest.testXATransactionTimeout and NSSecurityMechanismTest.testNetworkServerSecurityMechanism) seem to happen intermittently in the nightly testing of the branch, I don&apos;t think they were caused by the patch.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12390245">DERBY-3496</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12375799" name="SimpleNetworkClientSample1.java" size="17206" author="sqldeskt" created="Sun, 17 Feb 2008 18:28:51 +0000"/>
                            <attachment id="12375800" name="SimpleNetworkServerSample.java" size="10150" author="sqldeskt" created="Sun, 17 Feb 2008 18:28:51 +0000"/>
                            <attachment id="12377171" name="d3427.diff" size="3704" author="knutanders" created="Wed, 5 Mar 2008 14:15:36 +0000"/>
                            <attachment id="12377092" name="use-holdability.diff" size="934" author="knutanders" created="Tue, 4 Mar 2008 16:18:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 18 Feb 2008 11:16:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23638</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37331</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>