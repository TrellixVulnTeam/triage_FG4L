<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:38:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-965/DERBY-965.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-965] DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client</title>
                <link>https://issues.apache.org/jira/browse/DERBY-965</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The DatabaseMetaData method supportsResultSetConcurrency erroneously&lt;br/&gt;
returns false on the network client for all arguments combination, cf&lt;br/&gt;
the attached repro program. The embedded client returns correct&lt;br/&gt;
results, viz the output:&lt;/p&gt;


&lt;p&gt;org.apache.derby.jdbc.ClientDriver:&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_UPDATABLE: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_UPDATABLE: false&lt;br/&gt;
org.apache.derby.jdbc.EmbeddedDriver:&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_READ_ONLY: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_UPDATABLE: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_UPDATABLE: false&lt;/p&gt;

&lt;p&gt;Presumably, this is wrong in released versions as well.&lt;/p&gt;</description>
                <environment>Solaris 10, x86, Sun JDK 1.4.2</environment>
        <key id="12328898">DERBY-965</key>
            <summary>DatabaseMetadata method supportsResultSetConcurrency returns wrong result on network client</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Feb 2006 23:42:15 +0000</created>
                <updated>Tue, 8 Aug 2006 15:20:44 +0100</updated>
                            <resolved>Fri, 3 Mar 2006 20:16:15 +0000</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12366197" author="dagw" created="Mon, 13 Feb 2006 23:44:31 +0000"  >&lt;p&gt;Repro program (self contained).&lt;/p&gt;</comment>
                            <comment id="12366215" author="dagw" created="Tue, 14 Feb 2006 02:09:04 +0000"  >&lt;p&gt;The client gets metadata information form the server via a call to a&lt;br/&gt;
stored procedure, SYSIBM.METADATA. In this case, column no 97 contains&lt;br/&gt;
the information (for upportsResultSetConcurrency). This information is&lt;br/&gt;
initialized in the dictionary from the file metadata_net.properties,&lt;br/&gt;
which contains the following string value for column 97:&lt;/p&gt;

&lt;p&gt;        &apos;1003,1008;1004,1008;1005,1007,1008&apos;&lt;/p&gt;

&lt;p&gt;which is an encoding of the allowable combinations of result set type&lt;br/&gt;
and concurrency. &lt;/p&gt;

&lt;p&gt;There seems to be two problems here:&lt;/p&gt;

&lt;p&gt;1. The following comment block in the client explains&lt;br/&gt;
   its view of this encoding syntax:&lt;/p&gt;

&lt;p&gt;   // The stored procured will return a String containg a list of&lt;br/&gt;
   // concurrency and list of resultSet types which support a perticular&lt;br/&gt;
   // concurrency For eg. if the database supports concurrency&lt;br/&gt;
   // CONCUR_READ_ONLY(1007) in ResultSet type TYPE_FORWARD_ONLY(1003),&lt;br/&gt;
   // TYPE_SCROLL_INSENSITIVE(1004), TYPE_SCROLL_SENSITIVE(1005) and&lt;br/&gt;
   // supports concurrency CONCUR_UPDATBLE(1008) in resultSet&lt;br/&gt;
   // TYPE_SCROLL_SENSITIVE(1005) then stored procedure will return a&lt;br/&gt;
   // string &quot;1007,1003,1004,1005;1008,1005&quot; see how concurrency and&lt;br/&gt;
   // supported result set types are seperated by &quot;;&quot;&lt;/p&gt;

&lt;p&gt;   Unfortunately, the actual data seems to be the other way around,&lt;br/&gt;
   that is, for a given type, it lists the allowed concurrencies:&lt;/p&gt;

&lt;p&gt;      &apos;1003,1008;1004,1008;1005,1007,1008&apos;&lt;/p&gt;

&lt;p&gt;   which, when decoded becomes:&lt;/p&gt;

&lt;p&gt;       TYPE_FORWARD_ONLY,CONCUR_UPDATABLE;\&lt;br/&gt;
       TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE;\&lt;br/&gt;
       TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY,CONCUR_UPDATABLE&lt;/p&gt;

&lt;p&gt;   In addition to being encoded differently, this is also wrong, in&lt;br/&gt;
   that Derby does not support scroll sensitive at all, whereas we&lt;br/&gt;
   &lt;b&gt;do&lt;/b&gt; support CONCUR_READ_ONLY for the two other types (not given).&lt;/p&gt;

&lt;p&gt;   Since the client checks for concurrency type against the first&lt;br/&gt;
   token of each substring, it will not get a match and always return&lt;br/&gt;
   false.&lt;/p&gt;

&lt;p&gt;2. The client code (even if given the expected syntax) has a coding&lt;br/&gt;
   bug:&lt;/p&gt;

&lt;p&gt;      java.util.StringTokenizer st = new java.util.StringTokenizer(returnedFromSP, &quot;;&quot;);&lt;br/&gt;
      while (st.hasMoreTokens()) {&lt;br/&gt;
          java.util.StringTokenizer stForType = new java.util.StringTokenizer(st.nextToken(), &quot;,&quot;);&lt;br/&gt;
          if ((new Integer(stForType.nextToken())).intValue() == concurrency) {&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;while (st.hasMoreTokens()) {&lt;/li&gt;
		&lt;li&gt;if ((new Integer(st.nextToken())).intValue() == type) 
{
                      return true;
                  }
&lt;p&gt;              }&lt;br/&gt;
              return false;&lt;br/&gt;
          }&lt;br/&gt;
      }&lt;br/&gt;
      return false;&lt;/p&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   The inner loop uses the wrong tokenizer (st in stead of stForType)&lt;br/&gt;
   and will fail.&lt;/p&gt;


&lt;p&gt;So, we need to decide which encoding syntax is the correct one,&lt;br/&gt;
correct the server&apos;s data and also fix the client bug. Note that this&lt;br/&gt;
raises an upgrade issue, in that the existing client would crash if&lt;br/&gt;
the server&apos;s data were corrected to the encoding syntax the client&lt;br/&gt;
expects (due to the coding bug).&lt;/p&gt;</comment>
                            <comment id="12367515" author="dagw" created="Fri, 24 Feb 2006 00:33:55 +0000"  >&lt;ul&gt;
	&lt;li&gt;The patch, derby965-v1.
{stat,diff}
&lt;p&gt;, corrects the server data to the correct values,&lt;br/&gt;
retaining the encoding used on the server side. The new values&lt;br/&gt;
(metadata_net.properties) now reflect the capabilities of the&lt;br/&gt;
server+network client driver::&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        &apos;1003,1007,1008;1004,1007;1005&apos;&lt;br/&gt;
i.e. decoded:&lt;/p&gt;

&lt;p&gt;        TYPE_FORWARD_ONLY,CONCUR_READ_ONLY,CONCUR_UPDATABLE;&lt;br/&gt;
        TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY&lt;br/&gt;
        TYPE_SCROLL_SENSITIVE&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-775&quot; title=&quot;Network client: Add support for scrollable, updatable, insensitive result sets&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-775&quot;&gt;&lt;del&gt;DERBY-775&lt;/del&gt;&lt;/a&gt; (client SUR) will be adding CONCUR_UPDATABLE to the second&lt;br/&gt;
line later.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The client&apos;s parsing and decoding has been changed to comply with&lt;br/&gt;
this encoding style and now gives the correct result&lt;br/&gt;
(changes in getMetaDataInfoInt_SupportsResultSetConcurrency).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;This patch should not give upgrade problems, in that an older client&lt;br/&gt;
against a new server will give the same (wrong) results as before when&lt;br/&gt;
trying to interpret type as concurrency. A new client against and old&lt;br/&gt;
server will work, but give wrong results, although wrong in a&lt;br/&gt;
different way from before. cf. the analysis of feb-13&lt;br/&gt;
above. Presumably, apps relying on this method would have failed&lt;br/&gt;
always, so the changed result should not be too serious.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Tests of this method has been added to metadata_test.java and&lt;br/&gt;
embedded and derby network client canons have been&lt;br/&gt;
updated.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;NOTE: Unfortunately, derbynetmats running the JCC client seems to&lt;br/&gt;
have the same problem (it returns false for all type, concurrency&lt;br/&gt;
combinations), so I had to make derbynetmats skip these new tests for&lt;br/&gt;
that driver.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;derbyall has been run successfully on Sun&apos;s 1.4.2 VM (modulo errors&lt;br/&gt;
seen in regression test).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For the other canons (non-1.4.2 VMs), I have inserted the expected&lt;br/&gt;
results, but not verified them.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I noticed the canon of phaseTester also contain metadata_test&lt;br/&gt;
output, but I did not update this test&apos;s canon, as I am not familiar&lt;br/&gt;
with how it should be updated. I&apos;d appreciate advice on that.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12367775" author="bryanpendleton" created="Sun, 26 Feb 2006 04:34:07 +0000"  >&lt;p&gt;I read through your changes and they seem good to me.&lt;/p&gt;

&lt;p&gt;It would be nice to have comments in metadata_net.properties explaining the encoding, and in DatabaseMetaData.java explaining what&apos;s going on with the string tokenizers and pointing to the metadata_net.properties since the two files are sort of linked at the hip.&lt;/p&gt;

&lt;p&gt;It&apos;s a bummer about the mixed-version incompatibilities, but I couldn&apos;t think of any easy way to make them better.&lt;/p&gt;</comment>
                            <comment id="12367798" author="kmarsden" created="Sun, 26 Feb 2006 09:05:15 +0000"  >&lt;p&gt;I haven&apos;t been able to look at this closely to understand the issues, but  I have some questions&lt;/p&gt;

&lt;p&gt;Your earlier comment said:&lt;br/&gt;
Note that this&lt;br/&gt;
raises an upgrade issue, in that the existing client would crash if&lt;br/&gt;
the server&apos;s data were corrected to the encoding syntax the client&lt;br/&gt;
expects (due to the coding bug) but the patch comments made it sound  less severe.&lt;/p&gt;

&lt;p&gt;Is there a scenario with this patch where we will get a crash where we did not before?&lt;/p&gt;

&lt;p&gt;I  know there was a lot of discussion at one time about changes to metadata.properties and metadata_net.properties for upgrade, soft upgrade and downgrade.  I wonder if someone could point me to the final resolution or explain it if it is brief.  I had always been a fan of drop and recreate on any version change to allow for bug fixing and  prevent intractible upgrade situations.&lt;/p&gt;

&lt;p&gt;Also I wanted to mention if you need client to behave differently with different versions you can add something to &lt;br/&gt;
NetDatabaseMetaData.computeFeatureSet&lt;/p&gt;

&lt;p&gt;Similarly on the server side AppRequester.java has a mechanism for client version specific behaviour.&lt;/p&gt;
</comment>
                            <comment id="12367962" author="dagw" created="Mon, 27 Feb 2006 23:56:31 +0000"  >&lt;p&gt;Thanks for looking at this Bryan.&lt;/p&gt;

&lt;p&gt;Bryan wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; It would be nice to have comments in metadata_net.properties&lt;br/&gt;
&amp;gt; explaining the encoding, and in DatabaseMetaData.java explaining&lt;br/&gt;
&amp;gt; what&apos;s going on with the string tokenizers and pointing to the&lt;br/&gt;
&amp;gt; metadata_net.properties since the two files are sort of linked at the&lt;br/&gt;
&amp;gt; hip.&lt;/p&gt;

&lt;p&gt;I&apos;ll do that and upload a new patch. &lt;/p&gt;

&lt;p&gt;&amp;gt; It&apos;s a bummer about the mixed-version incompatibilities, but I&lt;br/&gt;
&amp;gt; couldn&apos;t think of any easy way to make them better.&lt;/p&gt;

&lt;p&gt;By changing the client&apos;s code the way I did (not changing the encoding&lt;br/&gt;
in the server, only correcting it&apos;s value), we should be OK (cf my&lt;br/&gt;
comments above):&lt;/p&gt;

&lt;p&gt;Old clients - new server will still give false for all combinations,&lt;br/&gt;
since the value sets for CONCURRENCY and TYPE are disjoint, and the&lt;br/&gt;
old client basically tries to match concurrency against type. So old&lt;br/&gt;
clients will not crash. This should remove Kathey&apos;s concern, I hope &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;A new client against and old server will work, but give wrong results,&lt;br/&gt;
although wrong in a different way from before. It would now return&lt;br/&gt;
true in some cases, where it previosuly always returned false. Those&lt;br/&gt;
&quot;true&quot; value though, would mostly be wrong, cf. old server&apos;s values:&lt;/p&gt;

&lt;p&gt;       TYPE_FORWARD_ONLY,CONCUR_UPDATABLE;\&lt;br/&gt;
       TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE;\&lt;br/&gt;
       TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY,CONCUR_UPDATABLE &lt;/p&gt;

&lt;p&gt;So it would give wrong values, but the old behavior (Always false) was&lt;br/&gt;
wrong too.. I think this is acceptable.&lt;/p&gt;</comment>
                            <comment id="12367964" author="dagw" created="Tue, 28 Feb 2006 00:04:55 +0000"  >&lt;p&gt;Kathey wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; Your earlier comment said: Note that this raises an upgrade issue, in&lt;br/&gt;
&amp;gt; that the existing client would crash if the server&apos;s data were&lt;br/&gt;
&amp;gt; corrected to the encoding syntax the client expects (due to the coding&lt;br/&gt;
&amp;gt; bug) but the patch comments made it sound less severe.&lt;/p&gt;

&lt;p&gt;Yes, I believe I chose the change which made the upgrade issue less&lt;br/&gt;
severe: By retaining the server&apos;s encoding, old clients will not&lt;br/&gt;
crash, cf. my answer to Bryan.&lt;/p&gt;

&lt;p&gt;&amp;gt; Is there a scenario with this patch where we will get a crash where we&lt;br/&gt;
&amp;gt; did not before?&lt;/p&gt;

&lt;p&gt;I do not think there is with this patch. I will test 10.1 against&lt;br/&gt;
trunk for both skewed version combination (client, server) to make&lt;br/&gt;
sure.&lt;/p&gt;

&lt;p&gt;&amp;gt; Also I wanted to mention if you need client to behave differently with&lt;br/&gt;
&amp;gt; different versions you can add something to&lt;br/&gt;
&amp;gt; NetDatabaseMetaData.computeFeatureSet&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Similarly on the server side AppRequester.java has a mechanism for&lt;br/&gt;
&amp;gt; client version specific behaviour.&lt;/p&gt;

&lt;p&gt;Thanks, I&apos;ll look at those. I don&apos;t think they are needed in this&lt;br/&gt;
case, though.&lt;/p&gt;</comment>
                            <comment id="12368073" author="dagw" created="Tue, 28 Feb 2006 13:41:03 +0000"  >&lt;p&gt;A new patch which replaces v1.&lt;/p&gt;

&lt;p&gt;Description:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;skips added test lines for supportsResultSetConcurrency&lt;br/&gt;
   in metadata_test.java for jcc client&lt;/li&gt;
	&lt;li&gt;contains added comments as suggested by Bryan&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Tests:&lt;/p&gt;

&lt;p&gt;Derbyall runs correctly on Sun Solaris 10/x86, JVM 1.4.2.&lt;/p&gt;

&lt;p&gt;I also ran the repro with mixed client server versions [10.1.2.1 - (330608), trunk at &lt;br/&gt;
10.2.0.0 alpha - (380154M)] and got the expected result:&lt;/p&gt;

&lt;p&gt;Running with a new client against an old server the repro: No longer only false; values are wrong&lt;br/&gt;
of course, but now correctly reflect (old) server&apos;s values.&lt;/p&gt;

&lt;p&gt;Server is ready to accept connections on port 1500.&lt;br/&gt;
Connection number: 1.&lt;br/&gt;
Connection number: 2.&lt;br/&gt;
org.apache.derby.jdbc.ClientDriver:&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_UPDATABLE: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY: true&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_UPDATABLE: true&lt;/p&gt;

&lt;p&gt;Running with old client and new server: Client can&apos;t make sense of the encoding (as before) and &lt;br/&gt;
returns only false.&lt;/p&gt;

&lt;p&gt;Apache Derby Network Server - 10.2.0.0 alpha started and ready to accept connections on port 1500 at 2006-02-28 04:11:13.961 GMT &lt;/p&gt;

&lt;p&gt;org.apache.derby.jdbc.ClientDriver:&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_UPDATABLE: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY: false&lt;br/&gt;
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_UPDATABLE: false&lt;/p&gt;</comment>
                            <comment id="12368307" author="knutanders" created="Thu, 2 Mar 2006 00:54:22 +0000"  >&lt;p&gt;It seems like Dag has addressed the concerns of the reviewers. I&apos;m&lt;br/&gt;
planning to commit this patch tomorrow, so please scream out if you&lt;br/&gt;
still have issues with it.&lt;/p&gt;</comment>
                            <comment id="12368416" author="dagw" created="Thu, 2 Mar 2006 10:03:34 +0000"  >&lt;p&gt;Note: I did not get any answer to my question on the phaseTester canon, &lt;br/&gt;
as far as I can see. &lt;/p&gt;</comment>
                            <comment id="12368461" author="knutanders" created="Thu, 2 Mar 2006 17:40:02 +0000"  >&lt;p&gt;Committed revision 382319.&lt;/p&gt;

&lt;p&gt;I didn&apos;t mark the issue as resolved because of the unanswered question&lt;br/&gt;
about the phaseTester canon.&lt;/p&gt;</comment>
                            <comment id="12368537" author="deepa" created="Fri, 3 Mar 2006 01:38:07 +0000"  >&lt;p&gt;I just started to look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-514&quot; title=&quot;Integrate upgrade tests into test suite&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-514&quot;&gt;&lt;del&gt;DERBY-514&lt;/del&gt;&lt;/a&gt; for upgrade tests and was trying to see how the phaseTester test currently works. For the following question from Dag:&lt;/p&gt;

&lt;p&gt;&quot;I noticed the canon of phaseTester also contain metadata_test output, but I did not update this test&apos;s canon, as I am not familiar with how it should be updated. I&apos;d appreciate advice on that.&quot;&lt;/p&gt;

&lt;p&gt;please see if  this comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-573&quot; title=&quot;Provide support for optimizer overrides in Derby.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-573&quot;&gt;&lt;del&gt;DERBY-573&lt;/del&gt;&lt;/a&gt; helps: &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-573#action_12360193&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-573#action_12360193&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12368631" author="dagw" created="Fri, 3 Mar 2006 10:44:22 +0000"  >&lt;p&gt;This patch (derby965b-v1) updates the master for phaseTester.java.&lt;br/&gt;
This test is not part of derbyall and the master must be manually&lt;br/&gt;
compared with the output of the phase tests, cf description in&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-573&quot; title=&quot;Provide support for optimizer overrides in Derby.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-573&quot;&gt;&lt;del&gt;DERBY-573&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;phaseTester runs metadata_test.java as part of its work, so the master&lt;br/&gt;
needs to be updated whenever metadata_test.java changes (as this issue&lt;br/&gt;
does).&lt;/p&gt;

&lt;p&gt;Note: Even with this patch, phaseTester when run as described,&lt;br/&gt;
failed. I noticed the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the shell script driving it is WIndows specific (&quot;;&quot; as classpath&lt;br/&gt;
  delimiter)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;in the soft upgrade phase, the metadata test fails (table not&lt;br/&gt;
  found), when performing a stored procedure: &apos;CALL&lt;br/&gt;
  SYSIBM.SQLCOLPRIVILEGES&apos; (in odbc_metadata#getMetadataRS).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch lessens the diff between the master and the &quot;current&quot;&lt;br/&gt;
output, though, so i think it should be committed.&lt;/p&gt;</comment>
                            <comment id="12368698" author="knutanders" created="Fri, 3 Mar 2006 20:16:15 +0000"  >&lt;p&gt;Verified that the phaseTester diff was reduced by the patch.&lt;/p&gt;

&lt;p&gt;Committed revision 382759.&lt;/p&gt;</comment>
                            <comment id="12369453" author="dagw" created="Wed, 8 Mar 2006 22:24:31 +0000"  >&lt;p&gt;verified on trunk&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="32841">DERBY-310</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12332699">DERBY-1252</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12322923" name="Main.java" size="3164" author="dagw" created="Mon, 13 Feb 2006 23:44:31 +0000"/>
                            <attachment id="12323324" name="derby965-v1.diff" size="13872" author="dagw" created="Fri, 24 Feb 2006 01:00:07 +0000"/>
                            <attachment id="12323321" name="derby965-v1.stat" size="866" author="dagw" created="Fri, 24 Feb 2006 00:33:55 +0000"/>
                            <attachment id="12323483" name="derby965-v2.diff" size="14350" author="dagw" created="Tue, 28 Feb 2006 13:41:03 +0000"/>
                            <attachment id="12323482" name="derby965-v2.stat" size="687" author="dagw" created="Tue, 28 Feb 2006 13:41:03 +0000"/>
                            <attachment id="12323651" name="derby965b-v1.diff" size="1368" author="dagw" created="Fri, 3 Mar 2006 10:44:22 +0000"/>
                            <attachment id="12323650" name="derby965b-v1.stat" size="81" author="dagw" created="Fri, 3 Mar 2006 10:44:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Feb 2006 04:34:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22223</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy14yv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>