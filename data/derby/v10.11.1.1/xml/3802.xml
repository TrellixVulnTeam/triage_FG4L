<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:25 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3802/DERBY-3802.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3802] Convert &quot;org.apache.derbyTesting.functionTests.tests.lang.optimizerOverrides.sql&quot; to junit. </title>
                <link>https://issues.apache.org/jira/browse/DERBY-3802</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12401146">DERBY-3802</key>
            <summary>Convert &quot;org.apache.derbyTesting.functionTests.tests.lang.optimizerOverrides.sql&quot; to junit. </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thinkallday">Junjie Peng</assignee>
                                    <reporter username="thinkallday">Junjie Peng</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Jul 2008 10:12:17 +0100</created>
                <updated>Wed, 1 Jul 2009 00:40:23 +0100</updated>
                            <resolved>Wed, 13 Aug 2008 02:18:03 +0100</resolved>
                                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12619326" author="thinkallday" created="Sun, 3 Aug 2008 14:59:36 +0100"  >&lt;p&gt;As for derby-3802-1.patch, something important and ask for help:&lt;br/&gt;
1. testFragmentsAsComments() has failed. Exception statck is:&lt;br/&gt;
1) testFragmentsAsComments(org.apache.derbyTesting.functionTests.tests.lang.Opti&lt;br/&gt;
mizerOverridingTest)java.sql.SQLException: Lexical error at line 1, column 17.&lt;br/&gt;
Encountered: &amp;lt;EOF&amp;gt; after : &quot;&quot;&#12290;&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknow&lt;br/&gt;
n Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source&lt;br/&gt;
)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException&lt;br/&gt;
(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Un&lt;br/&gt;
known Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown So&lt;br/&gt;
urce)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown So&lt;br/&gt;
urce)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeQuery(Unknown Source&lt;br/&gt;
)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.OptimizerOverridingT&lt;br/&gt;
est.testFragmentsAsComments(OptimizerOverridingTest.java:221)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.&lt;br/&gt;
java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces&lt;br/&gt;
sorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
104)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
Caused by: ERROR 42X02: Lexical error at line 1, column 17.  Encountered: &amp;lt;EOF&amp;gt;&lt;br/&gt;
after : &quot;&quot;&#12290;&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(Unknown So&lt;br/&gt;
urce)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown S&lt;br/&gt;
ource)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepa&lt;br/&gt;
reInternalStatement(Unknown Source)&lt;br/&gt;
        ... 26 more&lt;/p&gt;

&lt;p&gt;How to code to &quot;Make sure following fragments get treated as comments&quot;?&lt;/p&gt;

&lt;p&gt;2. testPropertyForUpdate() is for Line 109-Line 145 in OptimizerOverriding.sql.  But, some  test cases including &quot;for update of c2, c1&quot; is ignored as I don&apos;t know how to realize them in the form of statement sentences.&lt;/p&gt;

&lt;p&gt;3. In method testSpell(), two test cases are added to test more widely. They are (Line 365- Line 369):&lt;br/&gt;
 //A test is added. It shows,&lt;br/&gt;
        //&quot;--DeRbY-pRoPeRtIeSAAAA index = t1_c1&quot; is &lt;br/&gt;
        //treated as &quot;--DeRbY-pRoPeRtIeS AAAA index = t1_c1&quot;&lt;br/&gt;
        assertStatementError(&quot;42Y44&quot;, st, &quot;select * from t1 &quot; +&lt;br/&gt;
        	&quot; --DeRbY-pRoPeRtIeSAAAA index = t1_c1&quot;);&lt;br/&gt;
and (Line 377 - Line 380)&lt;br/&gt;
        //A test is added. If the property spelled wrong gets treated &lt;br/&gt;
        //as an optimizer override, the following test will fail.&lt;br/&gt;
        assertStatementError(&quot;42Y46&quot;, st, &quot;select * from t1 &quot; +&lt;br/&gt;
               	&quot; --DeRbY-pRoPeRtIeS index = t1_notexisting&quot;);&lt;br/&gt;
Please check them!&lt;/p&gt;

&lt;p&gt;Thank you!&lt;br/&gt;
Junjie&lt;/p&gt;</comment>
                            <comment id="12620535" author="myrna" created="Thu, 7 Aug 2008 08:29:18 +0100"  >&lt;p&gt;Hi Junjie,&lt;/p&gt;

&lt;p&gt;Great work, and apologies for not getting to this earlier.&lt;/p&gt;

&lt;p&gt;First, I&apos;ll reply to your questions, then I have some general comments&lt;br/&gt;
1. well, checking for that SQLException - mentioning an EOF - that is, there is no useful statement to be executed - would be one way. This section is a little strange in a java program, of course, because the comments (starting with --) are fairly useless when executing a single SQL statement from a java program; instead, you&apos;d use java comments... But they&apos;re very useful when you&apos;ve got a biggish SQL script.&lt;br/&gt;
I think it would be ok if you make statements just like in the original .sql, i.e. starting with the &amp;#8211; string, then followed by a \n, and &lt;b&gt;then&lt;/b&gt; add some valid SQL on which you can execute a assertFullResultSet check.&lt;br/&gt;
e.g., something like: &lt;br/&gt;
           rs.st.executeQuery(&quot;--derby\n select * from t1&quot;);&lt;br/&gt;
           JDBC.assertFullResultSet(rs, FULL_TABLE);&lt;/p&gt;

&lt;p&gt;2. I don&apos;t know what your trouble with the for update statements is... Check the manual (Reference Guide: &lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefsqlj31783.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefsqlj31783.html&lt;/a&gt;) for the syntax, or look at e.g. the test lang.ForUpdateTest for examples.&lt;/p&gt;

&lt;p&gt;3. those are good additions, thank you! I&apos;d not add the sentence &apos;A test was added&apos;, though - all the tests were added at some point. &lt;/p&gt;

&lt;p&gt;general comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;setup()/teardown() - Instead of creating the tables once per fixture, you can do it once using CleanDatabaseSetup and decorateSQL and then the cleanup will be automatic.  See BatchUpdateTest for an example.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;instead of getConnection().setAutoCommit(true|false), use setAutoCommit(true|false). All appropriate processing will then be done for you and it gets the default connection using appropriate calls.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;why did you not check the value of the runtimestatistics? That&apos;s quite important for this test. To see how this is done in a junit test, using the org.apache.derbyTesting.junit.SQLUtilities.getRuntimeStatisticsParser, take a look at the test lang.PredicatePushDownTest.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;and a nit: why change the name to OptimizerOverriding? The functionality is known as &apos;Optimizer Overrides&apos;, see the tuning guide...(&lt;a href=&quot;http://db.apache.org/derby/docs/dev/tuning/ctundepthoptover.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/tuning/ctundepthoptover.html&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;hth&lt;/p&gt;</comment>
                            <comment id="12621126" author="thinkallday" created="Sat, 9 Aug 2008 09:48:16 +0100"  >&lt;p&gt;Myrna, thanks for your verbose advices.&lt;br/&gt;
1. -comments. I have got correct results.&lt;br/&gt;
2. -update. I have read the reference, and I think, the test case &quot;select * from t1 --derby-properties index = t1_c1 &lt;br/&gt;
for update of c2, c1;&quot; is just the same as &quot;select * from t1 --derby-properties index = t1_c1 &lt;br/&gt;
for update;&quot; in jdbc statement. So, Line 118 - Line 124 and Line 139 - Line 145 in  optimizerOverrides.sql can be ignored. Am I right?&lt;br/&gt;
3. -setup()/teardown(). I have tried to use CleanDatabaseSetup. It&apos;s really better.&lt;br/&gt;
4. -runtimestatistics. I have imported the tool RuntimeStatisticsParser. However, I don&apos;t know what to do with it, its methods, such as usedDistinctScan(), usedHashJoin(), usedIndexRowToBaseRow(), usedIndexScan(), usedIndexScan() and usedTableScan() all returned false. Then whether  is it useless to use the tool?&lt;/p&gt;

&lt;p&gt;Regards&lt;br/&gt;
Junjie&lt;/p&gt;</comment>
                            <comment id="12621370" author="mamtas" created="Mon, 11 Aug 2008 08:21:08 +0100"  >&lt;p&gt;Junjie, I recently added(revision 681085) a new method to RuntimeStatisticsParser called usedSpecificIndexForIndexScan. You might find that method useful to see if the expected index was picked up for a given table or not. For instance, I noticed following 2 test cases in optimizerOverrides.sql file&lt;br/&gt;
1)select * from t1 --DeRbY-pRoPeRtIeS index = t1_c1&lt;br/&gt;
This directs the optimizer to use index = t1_c1 for table t1. You can verify this by writing following&lt;br/&gt;
              RuntimeStatisticsParser rtsp = SQLUtilities.getRuntimeStatisticsParser(s);&lt;br/&gt;
              assertTrue(rtsp.usedSpecificIndexForIndexScan(&quot;T1&quot;,&quot;T1_C1&quot;));&lt;br/&gt;
2)select * from t1 --DeRbY-pRoPeRtIeAAA index = t1_c1&lt;br/&gt;
This has misspelled the derby override comment and hence Derby engine is going to pick what it thinks is best for the query which in the test appears to be T1_C1C2C3. So you can use the new method to make sure that for T1, we are using T1_C1C2C3 &lt;br/&gt;
              assertTrue(rtsp.usedSpecificIndexForIndexScan(&quot;T1&quot;,&quot;T1_C1C2C3 &quot;));&lt;/p&gt;</comment>
                            <comment id="12621378" author="thinkallday" created="Mon, 11 Aug 2008 09:19:28 +0100"  >&lt;p&gt;Mamta, Good suggestion. I will try it!&lt;/p&gt;</comment>
                            <comment id="12621640" author="myrna" created="Mon, 11 Aug 2008 23:59:41 +0100"  >&lt;p&gt;Junjie, I think mamta&apos;s response addressed your point 4...&lt;br/&gt;
Re your point 2, update for...&lt;br/&gt;
I think you&apos;re right that the two cases are equivalent, however, this is a language test, and we need to test all the possible ways of doing the same thing...So, no, I don&apos;t think those test cases can be ignored - we need to testthat the --derby-properties works the same(or at least correctly) whether we&apos;ve got a for update, or for update of &amp;lt;columns&amp;gt; statement.&lt;br/&gt;
Did you try this and there was a problem?&lt;/p&gt;</comment>
                            <comment id="12621729" author="thinkallday" created="Tue, 12 Aug 2008 09:27:02 +0100"  >&lt;p&gt;Hello, Myrna. &lt;/p&gt;

&lt;p&gt;I have add supports for update of &amp;lt;columns&amp;gt; statement and RuntimeStatisticsParser.&lt;br/&gt;
Please check it!&lt;/p&gt;</comment>
                            <comment id="12621731" author="thinkallday" created="Tue, 12 Aug 2008 09:31:05 +0100"  >&lt;p&gt;Hello, Myrna. &lt;/p&gt;

&lt;p&gt;I have add supports for update of &amp;lt;columns&amp;gt; statement and RuntimeStatisticsParser. All test cases run well. Please check it!&lt;/p&gt;</comment>
                            <comment id="12622060" author="myrna" created="Wed, 13 Aug 2008 02:18:03 +0100"  >&lt;p&gt;The patch looked good on the whole, so I committed patch derby-3802-3.patch with revision 685408 with a few changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;_Suite.java had differences I could not explain; I undid the change and only added OptimizerOverridesTest.suite.&lt;/li&gt;
	&lt;li&gt;the fragment test had the code that cycles through the fragments commented out, every cycle in the for loop did the same thing, so I modified it.&lt;/li&gt;
	&lt;li&gt;I deleted the .out files.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thx for your work on this!&lt;/p&gt;</comment>
                            <comment id="12622071" author="thinkallday" created="Wed, 13 Aug 2008 03:21:41 +0100"  >&lt;p&gt;You are right, Myrna. It seems, I have been a little careless about it. Thank you for your correction and committing it.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12387420" name="derby-3802-1.patch" size="17809" author="thinkallday" created="Sun, 3 Aug 2008 14:59:36 +0100"/>
                            <attachment id="12387867" name="derby-3802-2.patch" size="43334" author="thinkallday" created="Sat, 9 Aug 2008 09:48:16 +0100"/>
                            <attachment id="12387868" name="derby-3802-2.stat" size="644" author="thinkallday" created="Sat, 9 Aug 2008 09:48:16 +0100"/>
                            <attachment id="12388029" name="derby-3802-3.patch" size="46623" author="thinkallday" created="Tue, 12 Aug 2008 09:31:05 +0100"/>
                            <attachment id="12388030" name="derby-3802-3.stat" size="644" author="thinkallday" created="Tue, 12 Aug 2008 09:31:05 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 7 Aug 2008 07:29:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31008</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0u13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38683</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>