<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5217/DERBY-5217.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5217] make ImportExportIJTest pass in non-English locale</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5217</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;ImportExportIJTest fails in Chinese locale, just like below:&lt;/p&gt;

&lt;p&gt;D:\derby\test&amp;gt;java junit.textui.TestRunner org.apache.derbyTesting.functionTests&lt;br/&gt;
.tests.tools.ImportExportIJTest&lt;br/&gt;
.F&lt;br/&gt;
Time: 7.937&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) importExportIJ(org.apache.derbyTesting.functionTests.tests.tools.ImportExport&lt;br/&gt;
IJTest)junit.framework.ComparisonFailure: Output at line 22 expected:&amp;lt;ERROR 42Y5&lt;br/&gt;
5: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;DROP TABLE&amp;#39; cannot be performed on &amp;#39;T1&amp;#39; because it does not exist.&amp;#93;&lt;/span&gt;&amp;gt; but wa&lt;br/&gt;
s:&amp;lt;ERROR 42Y55: &lt;span class=&quot;error&quot;&gt;&amp;#91;?DROP TABLE?????T1????????????&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon&lt;br/&gt;
(CanonTestCase.java:109)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(Scr&lt;br/&gt;
iptTestCase.java:201)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1,  Failures: 1,  Errors: 0&lt;/p&gt;</description>
                <environment></environment>
        <key id="12506291">DERBY-5217</key>
            <summary>make ImportExportIJTest pass in non-English locale</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12502490">DERBY-5155</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="houxzhang">Houx Zhang</assignee>
                                    <reporter username="houxzhang">Houx Zhang</reporter>
                        <labels>
                            <label>gsoc2011</label>
                    </labels>
                <created>Thu, 5 May 2011 15:57:19 +0100</created>
                <updated>Tue, 25 Oct 2011 18:09:34 +0100</updated>
                            <resolved>Mon, 22 Aug 2011 22:12:37 +0100</resolved>
                                                    <fixVersion>10.8.2.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13029360" author="houxzhang" created="Thu, 5 May 2011 16:09:18 +0100"  >&lt;p&gt;When I removed the derbyLocale_zh_CN.jar (I&apos;m in Chinese locale), ImportExportIJTest passed. So, the failure should be related to the non-English locale. &lt;/p&gt;

&lt;p&gt;However, ImportExportIJTest still failed when I set a LocaleTestSetup or a SystemPropertyTestSetup, just like in the two patches.&lt;/p&gt;

&lt;p&gt;What should I do, please?&lt;/p&gt;</comment>
                            <comment id="13029936" author="bryanpendleton" created="Fri, 6 May 2011 14:55:04 +0100"  >&lt;p&gt;It looks like ScriptTestCase has its own setUp/tearDown code that is trying to manipulate the Locale.&lt;/p&gt;

&lt;p&gt;Can you make a change to CanonTestCase.compareCanon() so that when it gets a failure, it&lt;br/&gt;
also includes the value of the current Locale as part of the failure exception, so that we can&lt;br/&gt;
tell what Locale is actually being used when you run your test?&lt;/p&gt;</comment>
                            <comment id="13030475" author="houxzhang" created="Sun, 8 May 2011 12:18:35 +0100"  >&lt;p&gt;Hi, Bryan, Please see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;-log-locale.patch, I have logged the locale. It&apos;s strange, the locale is always en_US, no matter in the original test code or setting a new locale. &lt;/p&gt;

&lt;p&gt;D:\derby\test&amp;gt;java junit.textui.TestRunner org.apache.derbyTesting.functionTests&lt;br/&gt;
.tests.tools.ImportExportIJTest&lt;br/&gt;
.scr LOCALE:en_US&lt;br/&gt;
ij LOCALE:en_US&lt;br/&gt;
can LOCALE:en_US&lt;br/&gt;
F&lt;br/&gt;
Time: 5.421&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) importExportIJ(org.apache.derbyTesting.functionTests.tests.tools.ImportExport&lt;br/&gt;
IJTest)junit.framework.ComparisonFailure: Output at line 22 expected:&amp;lt;ERROR 42Y5&lt;br/&gt;
5: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;DROP TABLE&amp;#39; cannot be performed on &amp;#39;T1&amp;#39; because it does not exist.&amp;#93;&lt;/span&gt;&amp;gt; but wa&lt;br/&gt;
s:&amp;lt;ERROR 42Y55: &lt;span class=&quot;error&quot;&gt;&amp;#91;?DROP TABLE?????T1????????????&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon&lt;br/&gt;
(CanonTestCase.java:110)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(Scr&lt;br/&gt;
iptTestCase.java:201)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="13030534" author="bryanpendleton" created="Sun, 8 May 2011 20:41:24 +0100"  >&lt;p&gt;Hello Houx,&lt;/p&gt;

&lt;p&gt;I&apos;m not terribly familiar with how the ij tool performs its localization, so we will have&lt;br/&gt;
to do some exploring of the code together.&lt;/p&gt;

&lt;p&gt;It looks like org/apache/derby/iapi/tools/i18n/LocalizedResource.java is a very&lt;br/&gt;
important class for the ij localization support.&lt;/p&gt;

&lt;p&gt;I think that the LocalizedResource gets set up in ij at about line 91 of utilMain.java,&lt;br/&gt;
by this code:&lt;/p&gt;

&lt;p&gt;        LocalizedResource langUtil = LocalizedResource.getInstance();&lt;/p&gt;

&lt;p&gt;Also, I see this interesting comment in LocalizedResource.java:&lt;/p&gt;

&lt;p&gt;    // Resets the &apos;local&apos; field to null. This is not needed for normal&lt;br/&gt;
    // operations, however, when executing sql files in our junit tests, we use&lt;br/&gt;
    // the same jvm and thus the locale will get loaded only once, resulting&lt;br/&gt;
    // in trouble when testing the localization for ij.&lt;br/&gt;
    public static void resetLocalizedResourceCache()&lt;/p&gt;
    {
        local=null;
    }

&lt;p&gt;Perhaps ImportExportIJTest is not calling resetLocalizedResourceCache &lt;br/&gt;
when it should?&lt;/p&gt;

&lt;p&gt;It looks like LocalizedResource has a useful toString() method that&lt;br/&gt;
will print out lots of information about the localization configuration.&lt;/p&gt;

&lt;p&gt;Can you add some code to utilMain.java to do something like:&lt;/p&gt;

&lt;p&gt;    System.out.println(&quot;ij localization = &quot; + langUtil.toString());&lt;/p&gt;

&lt;p&gt;so we can see what localization the ij tool is using during the test?&lt;/p&gt;

&lt;p&gt;thanks,&lt;/p&gt;

&lt;p&gt;bryan&lt;/p&gt;</comment>
                            <comment id="13031193" author="houxzhang" created="Tue, 10 May 2011 14:52:01 +0100"  >&lt;p&gt;Hi, Bryan. Thanks for your advice, I have logged on LocalizedResource, and got the  log below.&lt;/p&gt;

&lt;p&gt; ImportExportIJTest.setUp() locale=zh_CN&lt;br/&gt;
ScriptTestCase.runTest() locale=toString()&lt;/p&gt;
{
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}&lt;br/&gt;
ij.runScript()---&lt;del&gt;0&lt;/del&gt;-- locale=toString(){
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}
&lt;p&gt;ij.runScript()---&lt;del&gt;1&lt;/del&gt;-- locale=toString()&lt;/p&gt;
{
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}&lt;br/&gt;
ij.runScript()---&lt;del&gt;2&lt;/del&gt;-- locale=toString(){
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}
&lt;p&gt;ij.runScript()---&lt;del&gt;3&lt;/del&gt;-- locale=toString()&lt;/p&gt;
{
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}&lt;br/&gt;
utilMain.goScript()   locale=toString(){
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}
&lt;p&gt;utilMain.runScriptGuts()   locale=toString()&lt;/p&gt;
{
locale=en
encode=null
messageFile=org.apache.derby.loc.toolsmessages
resourceKey=derby.ui.locale
enableLocalized=false 
dateSize=28
timeSize=18
timestampSize=23
}
&lt;p&gt;ImportExportIJTest.tearDown() locale=en&lt;/p&gt;

&lt;p&gt;We can see, the original locale is zh_CN, but in the ScriptTestCase.runTest(), the locale has changed into en, &lt;/p&gt;

&lt;p&gt;and all the work in ij was in en Locale. &lt;/p&gt;

&lt;p&gt;Besise, from the setUp() and tearDown() in ScriptTestCase, the en Locale has been set, that&apos;s why all work in &lt;/p&gt;

&lt;p&gt;ScriptTestCase.runTest() is English locale.&lt;/p&gt;

&lt;p&gt; /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Set up the new locale for the test&lt;br/&gt;
     */&lt;br/&gt;
    protected void setUp() {&lt;br/&gt;
        oldLocale = Locale.getDefault();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        AccessController.doPrivileged(new java.security.PrivilegedAction() {&lt;br/&gt;
            public Object run() &lt;/p&gt;
{
                Locale.setDefault(Locale.ENGLISH);
                return null;
            }
&lt;p&gt;        });&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Revert the locale back to the old one&lt;br/&gt;
     */&lt;br/&gt;
    protected void tearDown() throws Exception {&lt;br/&gt;
        super.tearDown();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        AccessController.doPrivileged(new java.security.PrivilegedAction() {&lt;br/&gt;
            public Object run() &lt;/p&gt;
{
                Locale.setDefault(oldLocale);
                return null;
            }
&lt;p&gt;        });&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Considering my first comment on this issue, I think there is some thing wrong in the derbyLocale_zh_CN.jar.&lt;/p&gt;

&lt;p&gt;Besides, another interesting is when run ij based on the distribution of db-derby-10.7.1.1-bin, I got the &lt;/p&gt;

&lt;p&gt;error message on &quot;drop table T1&quot; is &quot;&#38169;&#35823; 42Y55&#65306;&#8220;DROP TABLE&#8221;&#26080;&#27861;&#22312;&#8220;T1&#8221;&#19978;&#25191;&#34892;&#65292;&#22240;&#20026;&#23427;&#19981;&#23384;&#22312;&#12290;&quot;, which is &lt;/p&gt;

&lt;p&gt;the exact Chinese error meesage according to &quot;&apos;DROP TABLE&apos; cannot be performed on &apos;T1&apos; because it does not &lt;/p&gt;

&lt;p&gt;exist.&quot;&lt;/p&gt;

&lt;p&gt;ij&amp;gt; drop table T1;&lt;br/&gt;
&#38169;&#35823; 42Y55&#65306;&#8220;DROP TABLE&#8221;&#26080;&#27861;&#22312;&#8220;T1&#8221;&#19978;&#25191;&#34892;&#65292;&#22240;&#20026;&#23427;&#19981;&#23384;&#22312;&#12290;&lt;/p&gt;

</comment>
                            <comment id="13031209" author="bryanpendleton" created="Tue, 10 May 2011 15:34:16 +0100"  >&lt;p&gt;Hello Houx,&lt;/p&gt;

&lt;p&gt;I believe that the ij code to format and display the exception is around line 600 of utilMain.java:&lt;/p&gt;

&lt;p&gt;                        String st1 = JDBCDisplayUtil.mapNull(e.getSQLState(),langUtil.getTextMessage(&quot;IJ_NoSqls&quot;));&lt;br/&gt;
                        String st2 = JDBCDisplayUtil.mapNull(e.getMessage(),langUtil.getTextMessage(&quot;IJ_NoMess&quot;));&lt;br/&gt;
                        out.println(langUtil.getTextMessage(&quot;IJ_Erro012&quot;,  st1, st2, errorCode));&lt;/p&gt;

&lt;p&gt;And I think that since your test results say ERROR 42Y55: &lt;span class=&quot;error&quot;&gt;&amp;#91;?DROP TABLE?????T1????????????&amp;#93;&lt;/span&gt;,&lt;br/&gt;
this means that the IJ exceptions are being formatted in the English locale, since that&apos;s where the&lt;br/&gt;
word &quot;ERROR&quot; at the start of that output is coming from (UT_Error012=ERROR &lt;/p&gt;
{0}
&lt;p&gt;: &lt;/p&gt;
{1}
{2}
&lt;p&gt;)&lt;/p&gt;

&lt;p&gt;I see that this ij code calls &quot;e.getMessage()&quot;.&lt;/p&gt;

&lt;p&gt;Perhaps we should turn our attention to the code which is constructing and throwing the exception,&lt;br/&gt;
it may be building the exception with the wrong data in the first place.&lt;/p&gt;

&lt;p&gt;I think this happens in DDLStatementNode.java, with the code:&lt;/p&gt;

&lt;p&gt;        private TableDescriptor justGetDescriptor(TableName tableName)&lt;br/&gt;
        throws StandardException&lt;br/&gt;
        {&lt;br/&gt;
                String schemaName = tableName.getSchemaName();&lt;br/&gt;
                SchemaDescriptor sd = getSchemaDescriptor(schemaName);&lt;/p&gt;

&lt;p&gt;                TableDescriptor td = getTableDescriptor(tableName.getTableName(), sd);&lt;/p&gt;

&lt;p&gt;                if (td == null)&lt;/p&gt;
                {       
                        throw StandardException.newException(SQLState.LANG_OBJECT_DOES_NOT_EXIST,
                                                statementToString(), tableName);
                }               
&lt;p&gt;                return td;&lt;br/&gt;
        }               &lt;/p&gt;

&lt;p&gt;Perhaps you might instrument this code path and see if you can see how StandardException.java&lt;br/&gt;
is deciding which locale to use when it constructs the original exception?&lt;/p&gt;</comment>
                            <comment id="13035356" author="houxzhang" created="Wed, 18 May 2011 14:06:03 +0100"  >&lt;p&gt;Hi, Bryan. I agree with StandardException.java is the key to this question. I have added &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;-StandardException.patch. In this patch, Locale is logged in StandardException, however, the locale is also Locale.en_US, but the printStackTrace() has given &quot;ERROR 42Y55: &#8220;&lt;/p&gt;
{0}
&lt;p&gt;&#8221;&#26080;&#27861;&#22312;&#8220;&lt;/p&gt;
{1}
&lt;p&gt;&#8221;&#19978;&#25191;&#34892;&#65292;&#22240;&#20026;&#23427;&#19981;&#23384;&#22312;&#12290;&quot;, So, I think maybe Chinese resource for Exceptions has been loaded, then Maybe the next step is to find out when and how the resource for Exceptions has been loaded.&lt;/p&gt;</comment>
                            <comment id="13035394" author="bryanpendleton" created="Wed, 18 May 2011 15:03:41 +0100"  >&lt;p&gt;Are you running your tests using JDK 1.6? Can you try running them with JDK 1.4 or JDK 1.5?&lt;/p&gt;

&lt;p&gt;Also, you noted earlier that you can control this behavior by including/excluding the &lt;br/&gt;
derbyLocale_zh_CN.jar in your CLASSPATH. Perhaps there is some way to build&lt;br/&gt;
a custom version of the classes in that jar, such that they dump a stack trace when&lt;br/&gt;
they are accessed? That way, we could see what code is accessing those methods&lt;br/&gt;
and figure out who is calling it.&lt;/p&gt;</comment>
                            <comment id="13035410" author="houxzhang" created="Wed, 18 May 2011 15:42:21 +0100"  >&lt;p&gt;I have running it just in JDK1.6, but got the same result  with the compiler levels of 1.5 and 1.4.&lt;/p&gt;

&lt;p&gt;Where to locate int18l resource, please? I have search the printed message &apos;&#22240;&#20026;&#23427;&#19981;&#23384;&#22312;&apos; in the derby project, but have found nothing.&lt;/p&gt;</comment>
                            <comment id="13035944" author="bryanpendleton" created="Thu, 19 May 2011 03:12:59 +0100"  >&lt;p&gt;From: dag.wanvik@oracle.com (Dag H. Wanvik), via derby-dev:&lt;/p&gt;

&lt;p&gt;Should be in java/engine/org/apache/derby/loc/messages_zh_CN.properties&lt;br/&gt;
I guess, but in there the strings are quoted in ASCII, i.e.&lt;/p&gt;

&lt;p&gt;42Y55=\u201C&lt;/p&gt;
{0}
&lt;p&gt;\u201D\u65E0\u6CD5\u5728\u201C&lt;/p&gt;
{1}
&lt;p&gt;\u201D\u4E0A\u6267\u884C\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u5B58\u5728\u3002&lt;/p&gt;

&lt;p&gt;e.g. &#26080; is encoded as \u65E0 above.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://unicode.org/cgi-bin/GetUnihanData.pl?codepoint=65E0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://unicode.org/cgi-bin/GetUnihanData.pl?codepoint=65E0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Dag&lt;/p&gt;</comment>
                            <comment id="13039700" author="bryanpendleton" created="Thu, 26 May 2011 14:30:43 +0100"  >&lt;p&gt;Hello Houx, have you had a chance to study this problem some more? &lt;/p&gt;</comment>
                            <comment id="13040768" author="houxzhang" created="Sun, 29 May 2011 10:18:07 +0100"  >&lt;p&gt;Yes, Bryan. I have studied on this issue, but make little progress.&lt;/p&gt;

&lt;p&gt;I guess this issue has exposed a hidden bug in i18l, but I can not catch it smartly. I need more help on it, and hope to push it forwards.&lt;/p&gt;

&lt;p&gt;Where is the entry function to load the i18l, and what&apos;s function to change the resource, please?&lt;/p&gt;

&lt;p&gt;Thanks very much!&lt;/p&gt;</comment>
                            <comment id="13040871" author="bryanpendleton" created="Sun, 29 May 2011 21:35:50 +0100"  >&lt;p&gt;Houx, can you please try downloading and applying the attached &apos;morePrints.txt&apos; patch, and then running &lt;/p&gt;

&lt;p&gt;java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest &amp;gt;/tmp/t 2&amp;gt;&amp;amp;1&lt;/p&gt;

&lt;p&gt;in your environment, and then post the output that gets written to the &apos;/tmp/t&apos; file?&lt;/p&gt;

&lt;p&gt;I tried adding some additional print statements to MessageService.java, and to BaseMonitor.getBundle(), to see if we could better understand how the locale is being chosen. Thanks!&lt;/p&gt;</comment>
                            <comment id="13041130" author="houxzhang" created="Mon, 30 May 2011 14:39:40 +0100"  >&lt;p&gt;Thanks for your supports, Bryan.&lt;/p&gt;

&lt;p&gt;I have applied morePrints.txt, and run the command in DOS, and got the output file in out-for-more-prints.txt. It&apos;s a big file &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, and hope it&apos;s helpful.&lt;/p&gt;</comment>
                            <comment id="13041175" author="bryanpendleton" created="Mon, 30 May 2011 16:51:57 +0100"  >&lt;p&gt;Yes, the traces are very interesting! The most important part appears to be around line 1975 in the trace output, where we see:&lt;/p&gt;

&lt;p&gt;.-----&lt;del&gt;000&lt;/del&gt;-----loc of StandardException:en_US&lt;br/&gt;
------------loc of StandardException:en_US&lt;br/&gt;
------------StandardException.getMessage() locale is:en_US&lt;br/&gt;
------------StandardException.getMessage() calling MessageService&lt;br/&gt;
MessageService.getCompleteMessage(42Y55, arguments)&lt;br/&gt;
BaseMonitor.getBundle(messageId=42Y55, messageLocale=zh_CN&lt;br/&gt;
MessageService.formatMessage(java.util.PropertyResourceBundle@229ed4,42Y55, arguments, true)&lt;br/&gt;
                            : bundle locale is zh_CN&lt;br/&gt;
------------StandardException.getMessage() returning: &#161;&#176;&lt;/p&gt;
{0}&#161;&#177;&#206;&#222;&#183;&#168;&#212;&#218;&#161;&#176;{1}&#161;&#177;&#201;&#207;&#214;&#180;&#208;&#208;&#163;&#172;&#210;&#242;&#206;&#170;&#203;&#252;&#178;&#187;&#180;&#230;&#212;&#218;&#161;&#163;&lt;br/&gt;
ERROR null: &#161;&#176;{0}
&lt;p&gt;&#161;&#177;&#206;&#222;&#183;&#168;&#212;&#218;&#161;&#176;&lt;/p&gt;
{1}
&lt;p&gt;&#161;&#177;&#201;&#207;&#214;&#180;&#208;&#208;&#163;&#172;&#210;&#242;&#206;&#170;&#203;&#252;&#178;&#187;&#180;&#230;&#212;&#218;&#161;&#163;&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:308)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DDLStatementNode.justGetDescriptor(DDLStatementNode.java:367)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DDLStatementNode.getTableDescriptor(DDLStatementNode.java:337)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DDLStatementNode.getTableDescriptor(DDLStatementNode.java:289)&lt;br/&gt;
        at org.apache.derby.impl.sql.compile.DropTableNode.bindStatement(DropTableNode.java:97)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:327)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:93)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConnectionContext.java:1103)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:610)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:559)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:367)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.goScript(utilMain.java:279)&lt;br/&gt;
        at org.apache.derby.tools.ij.runScript(ij.java:124)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(ScriptTestCase.java:188)&lt;br/&gt;
        at junit.framework.TestCase.runBare(TestCase.java:134)&lt;/p&gt;

&lt;p&gt;It looks like BaseMonitor.getBundle() is returning the &lt;b&gt;Chinese&lt;/b&gt; bundle, even though the system locale has been set to en_us.&lt;/p&gt;

&lt;p&gt;This appears to happen because the ContextManager class has remembered the message locale&lt;br/&gt;
in its &apos;messageLocale&apos; variable, which was set very early in the test to the default initial locale (Chinese)&lt;br/&gt;
when the auto-loaded driver needed to lookup messages during initial bootup.&lt;/p&gt;

&lt;p&gt;I see that the ContextManager class has a method &quot;setMessageLocale()&quot; that appears to be&lt;br/&gt;
designed to allow higher levels of the system to reset the message locale.&lt;/p&gt;

&lt;p&gt;But I searched the code tree and I can&apos;t find any code that calls this method.&lt;/p&gt;

&lt;p&gt;I am wondering if we need to change LocaleTestSetup.setUp() so that it calls ContextManager.setMessageLocale(),&lt;br/&gt;
and whether that would help the test.&lt;/p&gt;

&lt;p&gt;Can you try going to about line 49 of LocaleTestSetup.java, right after the line&lt;/p&gt;

&lt;p&gt;      Locale.setDefault(newLocale);&lt;/p&gt;

&lt;p&gt;and add something like:&lt;/p&gt;

&lt;p&gt;       ContextService.getFactory().getCurrentContextManager().setMessageLocale(newLocale.toString());&lt;/p&gt;

&lt;p&gt;Hopefully that code will force the ContextManager class to start using the English locale for message&lt;br/&gt;
lookup for subsequent messages.&lt;/p&gt;</comment>
                            <comment id="13042225" author="houxzhang" created="Wed, 1 Jun 2011 16:20:55 +0100"  >
&lt;p&gt;Hi, Bryan. I have added the code line :&lt;br/&gt;
      ContextService.getFactory().getCurrentContextManager().setMessageLocale(newLocale.toString());&lt;br/&gt;
in ScriptTestCase in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;-log-setMessageLocale.patch, which is subclass of ImportExportIJTest.java.&lt;/p&gt;

&lt;p&gt;And It&apos;s very strange. The test passed in my Eclipse in Windows, but still failed in DOS, and giving the identical output (in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;-log-setMessageLocale.txt) in the two environment.&lt;/p&gt;

&lt;p&gt;ps: I have restarted my computer to run test in DOS to avoid affection of the same jvm, and get the identical result.&lt;/p&gt;</comment>
                            <comment id="13044299" author="bryanpendleton" created="Sat, 4 Jun 2011 15:33:17 +0100"  >&lt;p&gt;Perhaps we could change LocaleTestSetup as follows:&lt;/p&gt;

&lt;p&gt;Index: java/testing/org/apache/derbyTesting/junit/LocaleTestSetup.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/testing/org/apache/derbyTesting/junit/LocaleTestSetup.java	(revision 1131297)&lt;br/&gt;
+++ java/testing/org/apache/derbyTesting/junit/LocaleTestSetup.java	(working copy)&lt;br/&gt;
@@ -47,6 +47,9 @@&lt;br/&gt;
         (new java.security.PrivilegedAction() {&lt;br/&gt;
             public Object run() &lt;/p&gt;
{
             	Locale.setDefault(newLocale);
+                System.getProperties().setProperty(
+                        &quot;derby.ui.locale&quot;,
+                        newLocale.getLanguage());
                 return null;
             }
&lt;p&gt;         }&lt;/p&gt;

&lt;p&gt;The idea is that, whenever LocaleTestSetup sets the JDK Locale in a certain way,&lt;br/&gt;
it should also set the derby.ui.locale to the same setting.&lt;/p&gt;

&lt;p&gt;Perhaps the differing results that you are seeing in different configurations has&lt;br/&gt;
to do with whether derby.ui.locale is set in the test or not? I think that the software&lt;br/&gt;
checks both the system locale and the derby.ui.locale variable, so if we set&lt;br/&gt;
one, we should set both.&lt;/p&gt;</comment>
                            <comment id="13044300" author="bryanpendleton" created="Sat, 4 Jun 2011 15:35:19 +0100"  >&lt;p&gt;Here&apos;s a revised version of the original patch, with the proposed change to LocaleTestSetup included.&lt;/p&gt;</comment>
                            <comment id="13045969" author="houxzhang" created="Wed, 8 Jun 2011 15:18:36 +0100"  >&lt;p&gt;Hi, Bryan. I have applied the patch, but it doesn&apos;t help. We still got the same wrong message.&lt;/p&gt;

&lt;p&gt;This issue is too troublesome.&lt;/p&gt;</comment>
                            <comment id="13045985" author="bryanpendleton" created="Wed, 8 Jun 2011 15:41:38 +0100"  >&lt;p&gt;What is the exact syntax of the command that I can run to see the failure on my machine?&lt;/p&gt;</comment>
                            <comment id="13046576" author="houxzhang" created="Thu, 9 Jun 2011 15:33:44 +0100"  >&lt;p&gt;Hi Bryan, I just ran &apos;java junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest&apos; in my environment, which is Chinese.&lt;/p&gt;

&lt;p&gt;I think you can ran &apos;java -Dderby.ui.locale=zh_CN junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest&apos; to get a Chinese Locale.&lt;/p&gt;</comment>
                            <comment id="13046577" author="houxzhang" created="Thu, 9 Jun 2011 15:35:18 +0100"  >&lt;p&gt;A new hint, even I ran &apos;java -Dderby.ui.locale=en_US junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest&apos; in my environment, I still get the same error:&lt;/p&gt;

&lt;p&gt;D:\derby\test&amp;gt;java -Dderby.ui.locale=en_US junit.textui.TestRunner org.apache.de&lt;br/&gt;
rbyTesting.functionTests.tests.tools.ImportExportIJTest&lt;br/&gt;
.F&lt;br/&gt;
Time: 10.062&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) importExportIJ(org.apache.derbyTesting.functionTests.tests.tools.ImportExport&lt;br/&gt;
IJTest)junit.framework.ComparisonFailure: Output at line 22 expected:&amp;lt;ERROR 42Y5&lt;br/&gt;
5: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;DROP TABLE&amp;#39; cannot be performed on &amp;#39;T1&amp;#39; because it does not exist.&amp;#93;&lt;/span&gt;&amp;gt; but wa&lt;br/&gt;
s:&amp;lt;ERROR 42Y55: &lt;span class=&quot;error&quot;&gt;&amp;#91;?DROP TABLE?????T1????????????&amp;#93;&lt;/span&gt;&amp;gt;&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon&lt;br/&gt;
(CanonTestCase.java:109)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(Scr&lt;br/&gt;
iptTestCase.java:201)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:&lt;br/&gt;
112)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57&lt;br/&gt;
)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="13047225" author="rhillegas" created="Fri, 10 Jun 2011 15:45:53 +0100"  >&lt;p&gt;Sorry to join the conversation so late. I&apos;m confused about what the goal here is. The importExportIJ test was converted to JUnit via the trick of just wrapping the old canon-based test in some extra framework. At the end of the day, it is still a canon-based test rather than an assertion-based test. It&apos;s just running under JUnit now. To make a canon-based test run in a non-English locale, you have to supply a non-English canon alongside the English canon. Have we even built machinery to support multiple, language-specific canons for our tests? Do we really want to supply 13 canons for this test, one for each of the localizations Derby provides?&lt;/p&gt;

&lt;p&gt;It seems to me that a better way to &quot;make ImportExportIJTest pass in non-English locale&quot; is to rewrite the test so that it is assertion-based, not canon-based, and to check for SQLStates rather than message strings, as we do in our genuine assertion-based JUnit tests.&lt;/p&gt;

&lt;p&gt;Sorry if I am off-base, but I am very confused about what is being attempted here. Thanks.&lt;/p&gt;</comment>
                            <comment id="13047806" author="bryanpendleton" created="Sat, 11 Jun 2011 01:36:52 +0100"  >&lt;p&gt;Hi Rick, thanks for the ideas.&lt;/p&gt;

&lt;p&gt;I believe what we were attempting was to go the other direction, to &quot;force&quot; the test to run&lt;br/&gt;
in a mode where ij emits output in English, so that it matches the canon, even if the&lt;br/&gt;
tester&apos;s external environment (and other tests being run in the same suite(s)) is configured&lt;br/&gt;
to run in a non-English locale.&lt;/p&gt;

&lt;p&gt;I agree with you that performing a full conversion to a assertion-based style would be&lt;br/&gt;
wonderful; we thought we were doing something simpler, but it has proved hard to&lt;br/&gt;
understand how to control ij&apos;s notion of the current locale in order to force it to run in&lt;br/&gt;
English, rather than Chinese, locale.&lt;/p&gt;</comment>
                            <comment id="13049777" author="bryanpendleton" created="Wed, 15 Jun 2011 15:03:18 +0100"  >&lt;p&gt;Can you change the test so that, if the locale is not English, we skip the test?&lt;/p&gt;

&lt;p&gt;That would not be ideal, but at least it would allow us to confirm that all of the&lt;br/&gt;
other tests in the overall test suite now pass correctly when run in your environment.&lt;/p&gt;

&lt;p&gt;Perhaps the cleanest way to do this would be to change org.apache.derbyTesting.functionTests.tools._Suite&lt;br/&gt;
so that it skips the suite.addTest() call if the locale is not English.&lt;/p&gt;</comment>
                            <comment id="13050411" author="houxzhang" created="Thu, 16 Jun 2011 14:33:52 +0100"  >&lt;p&gt;Hi, Bryan. I have adding locale checking in tools.__Suite.java in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;-1.patch, please  check it.&lt;/p&gt;</comment>
                            <comment id="13050440" author="bryanpendleton" created="Thu, 16 Jun 2011 15:18:43 +0100"  >&lt;p&gt;I think we have to say indexOf(&quot;en&quot;) &amp;gt;= 0 instead of contains(&quot;en&quot;) in order to build on JDK 1.4 environments.&lt;/p&gt;

&lt;p&gt;With the patch applied, does the tools suite now pass for you in the Chinese environment?&lt;/p&gt;</comment>
                            <comment id="13050447" author="bryanpendleton" created="Thu, 16 Jun 2011 15:30:00 +0100"  >&lt;p&gt;In my environment, both with and without the patch applied, all 106 tests in the tests.tools._Suite suite pass.&lt;/p&gt;

&lt;p&gt;I expect that in the Chinese environment, there should be 105 tests that pass, and no failures. Houx, can&lt;br/&gt;
you confirm that result? If so, I think this may be the best resolution for this problem for now.&lt;/p&gt;

&lt;p&gt;Lastly, I think that we should expand on the comment in the test indicating why we are excluding this&lt;br/&gt;
test, something like:&lt;/p&gt;

&lt;p&gt;        // ImportExportIJTest invokves the IJ tool in a manner that makes it hard to control the&lt;br/&gt;
        // locale used by the engine for formatting error messages, and the error text comes out&lt;br/&gt;
        // in non-English language which causes test failures in non-English locales - see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217&quot; title=&quot;make ImportExportIJTest pass in non-English locale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5217&quot;&gt;&lt;del&gt;DERBY-5217&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13050971" author="knutanders" created="Fri, 17 Jun 2011 11:59:14 +0100"  >&lt;p&gt;I see that Bryan suggested using LocalizedResource.resetLocalizedResourceCache() to get IJ to pick up the changes in the locale. I&apos;m not sure if you&apos;ve tried that already, but it looks like it&apos;s doing the right thing.&lt;/p&gt;

&lt;p&gt;I made an attempt with calling that method in ScriptTestCase&apos;s setUp() and tearDown() methods. This seemed to take care of changing the language of IJ&apos;s messages. The error messages from the Derby engine still used the wrong language, since the language of those messages seems to be determined when the database is created, which could happen before ImportExportIJTest runs. To address that, I wrapped ImportExportIJTest in a LocaleTestSetup and made the test create a fresh database instead of using the default test database. With these changes (see the attached patch d5217-resetLocalizedResourceCache.diff), the full tools suite ran without failures in my environment with the locale set to zh_CN.UTF-8.&lt;/p&gt;</comment>
                            <comment id="13051084" author="bryanpendleton" created="Fri, 17 Jun 2011 15:09:48 +0100"  >&lt;p&gt;&amp;gt; since the language of those messages seems to be determined when the database is created, &lt;br/&gt;
&amp;gt; which could happen before ImportExportIJTest runs&lt;/p&gt;

&lt;p&gt;Of course! That was the insight we were missing.&lt;/p&gt;

&lt;p&gt;It also explains some of the behaviors such as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5217?focusedCommentId=13042225&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13042225&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-5217?focusedCommentId=13042225&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13042225&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks much!&lt;/p&gt;</comment>
                            <comment id="13051556" author="knutanders" created="Sat, 18 Jun 2011 18:01:25 +0100"  >&lt;p&gt;Committed revision 1137213.&lt;/p&gt;

&lt;p&gt;LocalizedAttributeScriptTest and LocalizedDisplayScriptTest call LocalizedResource.resetLocalizedResourceCache() in setUp() and tearDown(). Since they are subclasses of ScriptTestCase, and ScriptTestCase also calls that method now, we can probably remove the calls from those tests.&lt;/p&gt;</comment>
                            <comment id="13051689" author="houxzhang" created="Sun, 19 Jun 2011 15:32:20 +0100"  >&lt;p&gt;Wonderful work! The new revision works well in my Chinese environment. Thanks for your help, Bryan and Knut.&lt;/p&gt;</comment>
                            <comment id="13086535" author="kmarsden" created="Wed, 17 Aug 2011 20:35:44 +0100"  >&lt;p&gt;reopen to add fix version&lt;/p&gt;</comment>
                            <comment id="13088953" author="myrna" created="Mon, 22 Aug 2011 20:33:03 +0100"  >&lt;p&gt;reopen to backport to 10.8 branch&lt;/p&gt;</comment>
                            <comment id="13089013" author="myrna" created="Mon, 22 Aug 2011 22:12:37 +0100"  >&lt;p&gt;backported revision 1137213 together with revision 11405057  for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5314&quot; title=&quot;Enable i18n tests in non-English locales&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5314&quot;&gt;&lt;del&gt;DERBY-5314&lt;/del&gt;&lt;/a&gt; to 10.8 with revision 1160433.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12508649">DERBY-5252</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12512958">DERBY-5314</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12482795" name="DERBY-5217-1.patch" size="1504" author="houxzhang" created="Thu, 16 Jun 2011 14:33:52 +0100"/>
                            <attachment id="12478280" name="DERBY-5217-LocaleTestSetup.patch" size="1398" author="houxzhang" created="Thu, 5 May 2011 16:09:17 +0100"/>
                            <attachment id="12479580" name="DERBY-5217-StandardException.patch" size="2025" author="houxzhang" created="Wed, 18 May 2011 14:06:03 +0100"/>
                            <attachment id="12478281" name="DERBY-5217-SystemPropertyTestSetup.patch" size="1996" author="houxzhang" created="Thu, 5 May 2011 16:09:17 +0100"/>
                            <attachment id="12478701" name="DERBY-5217-log-LocalizedResource.patch" size="6025" author="houxzhang" created="Tue, 10 May 2011 14:52:01 +0100"/>
                            <attachment id="12478532" name="DERBY-5217-log-locale.patch" size="3634" author="houxzhang" created="Sun, 8 May 2011 12:18:35 +0100"/>
                            <attachment id="12481097" name="DERBY-5217-log-setMessageLocale-DOS.txt" size="9211" author="houxzhang" created="Wed, 1 Jun 2011 16:20:55 +0100"/>
                            <attachment id="12481098" name="DERBY-5217-log-setMessageLocale-eclipse.txt" size="7887" author="houxzhang" created="Wed, 1 Jun 2011 16:20:55 +0100"/>
                            <attachment id="12481096" name="DERBY-5217-log-setMessageLocale.patch" size="3935" author="houxzhang" created="Wed, 1 Jun 2011 16:20:55 +0100"/>
                            <attachment id="12482920" name="d5217-resetLocalizedResourceCache.diff" size="2708" author="knutanders" created="Fri, 17 Jun 2011 11:59:14 +0100"/>
                            <attachment id="12480798" name="morePrints.txt" size="5332" author="bryanpendleton" created="Sun, 29 May 2011 21:35:50 +0100"/>
                            <attachment id="12480845" name="output-for-more-prints.txt" size="899850" author="houxzhang" created="Mon, 30 May 2011 14:39:40 +0100"/>
                            <attachment id="12481452" name="setDerbyUILocale.patch" size="2051" author="bryanpendleton" created="Sat, 4 Jun 2011 15:35:19 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 May 2011 13:55:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31555</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0eyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36241</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>