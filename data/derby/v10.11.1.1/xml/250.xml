<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:13:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-250/DERBY-250.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-250] With client setObject( parameterIndex, x, java.sql.DOUBLE) throws conversion exception if the object passed is a BigDecimal with more than 31 digits</title>
                <link>https://issues.apache.org/jira/browse/DERBY-250</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Trying to insert a  BigDecimal value with unscaled value longer than 31 digits using &lt;br/&gt;
public void setObject(int parameterIndex,&lt;br/&gt;
                      Object x,&lt;br/&gt;
                      int targetSqlType)&lt;br/&gt;
               throws SQLException&lt;br/&gt;
or &lt;br/&gt;
public void setObject(int parameterIndex,&lt;br/&gt;
                      Object x,&lt;br/&gt;
                      int targetSqlType,&lt;br/&gt;
                      int scale)&lt;br/&gt;
               throws SQLException&lt;/p&gt;

&lt;p&gt;fails with Network client.&lt;/p&gt;

&lt;p&gt;ps.setObject(1,1000000000000000000000000000000000000000000000000&lt;br/&gt;
0000000000000000000000000000000000000000000000000000000000000000&lt;br/&gt;
0000000000000,java.sql.Types.DOUBLE)&lt;br/&gt;
org.apache.derby.client.am.ConversionException: &lt;span class=&quot;error&quot;&gt;&amp;#91;converters&amp;#93;&lt;/span&gt; &lt;br/&gt;
The numeric literal &lt;br/&gt;
&quot;100000000000000000000000000000000000000000000000000000000000000&lt;br/&gt;
0000000000000000000000000000000000000000000000000000000&lt;br/&gt;
00000000&quot; is not valid because its value is out of range.&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.am.Decimal.bigDecimalToPackedDecimalByte&lt;br/&gt;
s(Decimal.java:391)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.net.Request.writeBigDecimal(Request.java&lt;br/&gt;
:1632)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.net.NetStatementRequest.buildFDODTA(NetS&lt;br/&gt;
tatementRequest.java:692)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.net.NetStatementRequest.buildSQLDTAcomma&lt;br/&gt;
ndData(NetStatementRequest.java:514)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.net.NetStatementRequest.writeExecute(Net&lt;br/&gt;
StatementRequest.java:137)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.net.NetPreparedStatement.writeExecute_(N&lt;br/&gt;
etPreparedStatement.java:124)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.am.PreparedStatement.writeExecute(Prepar&lt;br/&gt;
edStatement.java:956)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.am.PreparedStatement.flowExecute(Prepare&lt;br/&gt;
dStatement.java:1173)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.am.PreparedStatement.executeUpdateX(Prep&lt;br/&gt;
aredStatement.java:324)&lt;br/&gt;
        at &lt;br/&gt;
org.apache.derby.client.am.PreparedStatement.executeUpdate(Prepa&lt;br/&gt;
redStatement.java:315)&lt;/p&gt;

&lt;p&gt;See attached patch with modified prepStmt.java test for reproduction.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="32131">DERBY-250</key>
            <summary>With client setObject( parameterIndex, x, java.sql.DOUBLE) throws conversion exception if the object passed is a BigDecimal with more than 31 digits</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 29 Apr 2005 22:22:00 +0100</created>
                <updated>Sat, 4 Jun 2005 16:39:44 +0100</updated>
                            <resolved>Sat, 14 May 2005 09:41:18 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="64053" author="kmarsden" created="Fri, 29 Apr 2005 22:42:42 +0100"  >&lt;p&gt;For these calls the API doc says:&lt;/p&gt;

&lt;p&gt;The given Java object will be converted to the given targetSqlType before being sent to the database&lt;/p&gt;

&lt;p&gt;Converting the values on the client prior to sending them to the server eliminates the error.  I will post a patch with this change.&lt;/p&gt;</comment>
                            <comment id="64340" author="jboynes" created="Tue, 3 May 2005 15:41:05 +0100"  >&lt;p&gt;Applied Kathey&apos;s patch&lt;/p&gt;

&lt;p&gt;Sending        java\client\org\apache\derby\client\am\CrossConverters.java&lt;br/&gt;
Sending        java\client\org\apache\derby\client\am\PreparedStatement.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\DerbyNet\jdk15\prepStmt.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\DerbyNetClient\jdk15\prepStmt.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\prepStmt.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\derbynet\prepStmt.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\testRelative.java&lt;br/&gt;
Transmitting file data .......&lt;br/&gt;
Committed revision 167863.&lt;/p&gt;</comment>
                            <comment id="65378" author="kmarsden" created="Sat, 14 May 2005 09:41:18 +0100"  >&lt;p&gt;This issue was fixed with svn r167863&lt;/p&gt;

&lt;p&gt;Below are the patch comments.&lt;/p&gt;

&lt;p&gt;This is a patch for Derby-250 to eliminate the conversion error when a&lt;br/&gt;
BigDecimal with more than 31 digits is  passed to setObject  with a targetSqlType.&lt;br/&gt;
public void setObject(int parameterIndex,&lt;br/&gt;
                      Object x,&lt;br/&gt;
                      int targetSqlType)&lt;br/&gt;
               throws SQLException&lt;br/&gt;
or&lt;br/&gt;
public void setObject(int parameterIndex,&lt;br/&gt;
                      Object x,&lt;br/&gt;
                      int targetSqlType,&lt;br/&gt;
                      int scale)&lt;br/&gt;
               throws SQLException&lt;/p&gt;

&lt;p&gt;The approach of the patch is to have setObject calls with a targetSqlType  to always convert before sending to the value to the server for all types.&lt;/p&gt;

&lt;p&gt;Taking this approach exposed other issues with  the client&apos;s conversion mechanism for Date, Time and Timestamp, which were customized valueOf  methods to support ISO format.   Since the extended format is not needed for Derby, I replaced these with the&lt;br/&gt;
standard &amp;lt;Date|Time|TimeStamp&amp;gt;.valueOf calls.&lt;/p&gt;

&lt;p&gt;The patch also fixes issues with scale getting set properly when specified for these calls.&lt;/p&gt;</comment>
                            <comment id="12312628" author="kmarsden" created="Sat, 4 Jun 2005 16:39:44 +0100"  >&lt;p&gt;Fixed&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 May 2005 14:41:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21861</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy18af:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40993</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>