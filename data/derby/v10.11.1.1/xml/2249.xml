<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:49:16 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2249/DERBY-2249.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2249] Place holder to attach the long running test which will test Derby&apos;s improved optimizer</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2249</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Will be adding a test for the improved optimizer particularly to test the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-805&quot; title=&quot;Push join predicates into union and other set operations. DERBY-649 implemented scalar (single table) predicate pushdown. Adding join predicate push down could improve performance significantly.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-805&quot;&gt;&lt;del&gt;DERBY-805&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1205&quot; title=&quot;Unexpectedly very slow performance compared to DB2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1205&quot;&gt;&lt;del&gt;DERBY-1205&lt;/del&gt;&lt;/a&gt;. Once the files are committed will provide a link to both of those issues.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12360687">DERBY-2249</key>
            <summary>Place holder to attach the long running test which will test Derby&apos;s improved optimizer</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mkutty">Manjula Kutty</assignee>
                                    <reporter username="mkutty">Manjula Kutty</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Jan 2007 18:59:34 +0000</created>
                <updated>Wed, 1 Jul 2009 01:04:54 +0100</updated>
                            <resolved>Fri, 2 Mar 2007 01:18:41 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                            <comments>
                            <comment id="12467593" author="fuzzylogic" created="Thu, 25 Jan 2007 20:38:22 +0000"  >&lt;p&gt;Unsetting Fix Version on unassigned issues.&lt;/p&gt;</comment>
                            <comment id="12469558" author="mkutty" created="Thu, 1 Feb 2007 19:41:27 +0000"  >&lt;p&gt;Attaching the zip file for the Test. The test is called LangTest which is used to test Derby&apos;s optimizer improvements. A Readme file , which explains the test itself and also  explains the steps to run the test.&lt;/p&gt;</comment>
                            <comment id="12473214" author="army" created="Wed, 14 Feb 2007 21:49:36 +0000"  >&lt;p&gt;I unzipped the zip file into my svn codeline and ran &quot;ant all&quot;, but the new files did not build.  Thus I am unable to run the test.   Is there a &quot;build.xml&quot; file missing from the zip file?  Or is there something else that I have to do in order get the new test files to build? (sorry if I&apos;m missing something obvious).&lt;/p&gt;

&lt;p&gt;Since I couldn&apos;t build the files I haven&apos;t tried running the test yet.  I also haven&apos;t started reviewing the code.  But after reading the README file I do have the following question...&lt;/p&gt;

&lt;p&gt;If I&apos;m understanding correctly this new test is, at core, a performance test.  I.e. instead of checking for correct system functionality over a  long period of time, this test is attempting to measure performance of Derby for certain queries that may take a long time to complete.  If that&apos;s true then I think a better location for the new files would be the &quot;perf&quot; package, ex: derbyTesting/perf/basic/lang/, instead of the &quot;system&quot; package.&lt;/p&gt;

&lt;p&gt;If the reason you chose &quot;system&quot; is because it&apos;s a long-running test, and if you would like to keep it there, then I wonder if the new test name could perhaps be more specific:  &quot;RunLangTest&quot; seems a bit vague.  Is the intent that other test cases will be added to this file in the future?  If so, do we know what kinds of tests will those be?  Can we say anything more about them than just that they are language tests?  If we do not expect to have other test scenarios added to &quot;RunLangTest&quot; then is it possible to rename that file to more accurately describe what it is testing (i.e. something to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-805&quot; title=&quot;Push join predicates into union and other set operations. DERBY-649 implemented scalar (single table) predicate pushdown. Adding join predicate push down could improve performance significantly.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-805&quot;&gt;&lt;del&gt;DERBY-805&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1205&quot; title=&quot;Unexpectedly very slow performance compared to DB2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1205&quot;&gt;&lt;del&gt;DERBY-1205&lt;/del&gt;&lt;/a&gt;)?&lt;/p&gt;

&lt;p&gt;As for the package name &quot;langtest&quot;, would it make sense to shorten this to &quot;lang&quot; instead of &quot;langtest&quot;, to coincide with the existing test harness package names?&lt;/p&gt;

&lt;p&gt;If there was already a discussion regarding the package and test names, then sorry for the noise and please feel free to point me to the relevant thread(s)...&lt;/p&gt;

&lt;p&gt;Oh, and thank you for contributing this test!  I think it&apos;s safe to say that the more optimizer testing we can do, the better...&lt;/p&gt;</comment>
                            <comment id="12473235" author="mkutty" created="Wed, 14 Feb 2007 22:46:03 +0000"  >&lt;p&gt;Army, thanks for the review. I would appreciate other people&apos;s openion about the test name and location before deciding on a particular one. Mean while i have added the build.xml and  included that in the java/testing/build.xml file. please find the attached patch and the new build.xml. &lt;/p&gt;</comment>
                            <comment id="12473299" author="bryanpendleton" created="Thu, 15 Feb 2007 03:28:12 +0000"  >&lt;p&gt;I&apos;m a bit confused about the goal of this test. Is the idea:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;run a lot of optimizations to look for memory leaks, etc. in the optimizer&lt;/li&gt;
	&lt;li&gt;run queries that take a long time to optimize, to try to understand why&lt;/li&gt;
	&lt;li&gt;run queries that are quite complex, to determine whether we select the &quot;best&quot; query plan&lt;/li&gt;
	&lt;li&gt;run queries that take a long time to execute&lt;br/&gt;
(or maybe none of the above)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Manjula, can you clarify what you see as the goal of these tests? Thanks!&lt;/p&gt;</comment>
                            <comment id="12473473" author="mkutty" created="Thu, 15 Feb 2007 18:53:13 +0000"  >&lt;p&gt;Thanks for taking a look at this test. This test can be used for all of the above said scenarios.  Alos we can add&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;run queries on different versions to see the performance gain/loss&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12473510" author="kartha" created="Thu, 15 Feb 2007 20:49:02 +0000"  >&lt;p&gt;The test is not a typical system test and tries is intended only to test the optimizer changes, so I agree with Army&apos;s comments that a better&lt;br/&gt;
place seem to be the derbyTesting/perf/basic/lang  package. The important thing to be mentioned is that the test is not meant to be run in nightlies because of the amount of time needed to complete.&lt;/p&gt;

&lt;p&gt;Since the test runs the queries under both PreparedStatement and Statement, it could provide info about the query preparation/execution times involved.&lt;/p&gt;

&lt;p&gt;I do feel as more enhancements are made to the optimizer more and more complex queries can be added to this test, hence would be a &lt;br/&gt;
great addition.&lt;/p&gt;</comment>
                            <comment id="12473517" author="djd" created="Thu, 15 Feb 2007 21:17:52 +0000"  >&lt;p&gt;Not sure it falls into the category of a &quot;basic&quot; performance test, those seem to be ones that test a specific action, not a broad range of optimizer issues like this test.&lt;/p&gt;

&lt;p&gt;Maybe the split between &quot;perf&quot; and &quot;system&quot; is arbitrary. I&apos;ve been thinking of tests like oe (system/oe) as toolkits. They provide building blocks that can be used a number of ways, as a performance test, as a stress test, as a system test, etc. Maybe this test is the same. It could be used to compare the performance of queries against releases, or it could be used to stress the optimizer by running for several weeks.&lt;br/&gt;
Trying to pre-assign specific tests for the code I think is a mistake,implement one use but allow others.&lt;/p&gt;</comment>
                            <comment id="12473760" author="army" created="Fri, 16 Feb 2007 17:26:21 +0000"  >&lt;p&gt;I don&apos;t how (or if?) the discussion of where to put the new test and of what to call it ended, but in any event I was able to build it with the build.xml file (after removing the references to &quot;mailjdbc&quot; and &quot;sttest&quot; from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2249&quot; title=&quot;Place holder to attach the long running test which will test Derby&amp;#39;s improved optimizer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2249&quot;&gt;&lt;del&gt;DERBY-2249&lt;/del&gt;&lt;/a&gt;_diff.txt) so thank you for providing it.  I then started playing around with the test and my initial comments are below.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;1) In an attempt to get the test to run quickly just so I could see what it does, I changed the values in StaticValues.java to the following:&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    public static int NUM_OF_ROWS=100; //Total number of rows expected in each table&lt;br/&gt;
    public static int NUM_OF_TABLES=8; //Total number of tables to be created&lt;br/&gt;
    public static int ITER=3;          //Number of iterations of each query&lt;/p&gt;

&lt;p&gt;When I then tried to run the test, I saw several failures (see below).  Are there any restrictions on what these values can or should be?  When I specified them as shown above I saw the following errors:&lt;/p&gt;

&lt;p&gt;  1) While creating views:&lt;/p&gt;

&lt;p&gt;   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE16&apos; does not exist. (x2)&lt;br/&gt;
   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE32&apos; does not exist. (x4)&lt;br/&gt;
   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE9&apos; does not exist.&lt;br/&gt;
   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE11&apos; does not exist.&lt;br/&gt;
   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE13&apos; does not exist.&lt;br/&gt;
   SQLState = 42X05, java.sql.SQLException: Table/View &apos;MYTABLE15&apos; does not exist.&lt;/p&gt;

&lt;p&gt;  2) While running query &quot;Select from single view&quot;:&lt;/p&gt;

&lt;p&gt;   SQLState= 42X05&lt;br/&gt;
   ErrorCode= 30000&lt;br/&gt;
   Message= Table/View &apos;V16&apos; does not exist.&lt;/p&gt;

&lt;p&gt;  3) While printing results:&lt;/p&gt;

&lt;p&gt;   QueryName       Using PreparedStatment  Using Statement Rows Expected&lt;br/&gt;
   ------------------------------------------------------------------------------&lt;br/&gt;
   Exception in thread &quot;main&quot; java.lang.IndexOutOfBoundsException: Index: 0, Size: 0&lt;br/&gt;
        at java.util.ArrayList.RangeCheck(ArrayList.java(Inlined Compiled Code))&lt;br/&gt;
        at java.util.ArrayList.get(ArrayList.java(Compiled Code))&lt;br/&gt;
        at org.apache.derbyTesting.system.langtest.RunLangTest.printResults(RunLangTest.java:141)&lt;br/&gt;
        at org.apache.derbyTesting.system.langtest.RunLangTest.main(RunLangTest.java:121)&lt;/p&gt;

&lt;p&gt;I tried increasing the number of tables to 32 but I still saw the same errors (just with different table/view names).  I then put it back to 64 (the default) and the test ran to completion.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;2) The &quot;R E S U L T S&quot; output at the end of the test is very nice.  While the test is running, though, a lot of info is printed to the screen, including the queries themselves.  All of that info (esp. the queries themselves) is a bit overwhelming (to me, at least &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I wonder if it might be better to just use query numbers like we do in the results? Or else completely disable the in-progress output and just print the results at the end, since that has all of the relevant information? Perhaps we could add a test parameter that allows for echoing of the query text if the user chooses (&quot;verbose&quot;)?  Certainly not a requirement, though; just a &quot;wish&quot; item.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;3) It was not clear to me from the README that specification of &quot;-qlist&quot; means that the test will search for a file named &apos;query.list&apos; in the &lt;b&gt;current&lt;/b&gt; directory (I thought I was supposed to pass the path to query.list in as an argument).  It also was not clear to me that if I did &lt;b&gt;not&lt;/b&gt; specify &quot;-qlist&quot; the test would &lt;em&gt;still&lt;/em&gt; search for a file named &apos;query.list&apos; in the current directory, with the apparent intent of running the default queries AND the queries in &apos;query.list&apos;.  Is that correct?&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;4) Is there more info available about what is expected in the &quot;query.list&quot; file if one is specified?  I tried creating a query.list file that had a couple of queries pulled from &quot;Query2.java&quot; but the result was a failure with a syntax error (it looks like maybe the &quot;select&quot; keyword is being stripped?).  I tried putting quotes around the query but that didn&apos;t help.  Also, if we want to specify more than one query in &apos;query.list&apos;, what&apos;s the delimiter? Is that even possible? I think it would be good if all of the relevant information about &apos;query.list&apos; could be included in the README file.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;5) I think it would be great if more comments could be added to the various queries in the QueryX.java files.  For example, I opened up Query2.java and thought all of the queries were the same.  Only after staring at them for a while did I realize that there were identical &lt;b&gt;except&lt;/b&gt; for the views that they use (v8 vs v16 vs v32, etc).  A comment to that effect might save people who look at the queries some time.  Similarly for utils/TestViews.java (ex. what&apos;s the difference between &quot;v8&quot; and &quot;v8_2&quot;?)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note that since this new test is not going to run as part of derbyall nor as part of suites.All, it seems reasonable to commit the new files (once we decide where to put them) as they are and then to address the issues described below as follow-up patches.  After all, &quot;progress not perfection&quot; is the goal here, with the underlying assumption that we don&apos;t break anything in the process &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  So once the decision has been made about where to put the new files, I&apos;d be willing to commit them, assuming that no one objects.  Once committed you (or anyone else who is so inclined) could post follow-up patches to address the above comments.&lt;/p&gt;</comment>
                            <comment id="12473772" author="skambha" created="Fri, 16 Feb 2007 17:51:45 +0000"  >&lt;p&gt;I dont think this test falls under the basic directory ( derbyTesting/perf/basic)  as it is for simple tests that test a particular issue.  &lt;/p&gt;

&lt;p&gt;As mentioned in an earlier comment by Dan,  maybe a better place is to be at the same level as the OE test..&lt;br/&gt;
derbyTesting/system/optimizer ?&lt;/p&gt;


</comment>
                            <comment id="12476753" author="mkutty" created="Wed, 28 Feb 2007 23:00:56 +0000"  >&lt;p&gt;Thanks Army for your valuable comments.  &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;1)Correction needed in the readme file. You can not change the number of tables since the views are dependent on the 64 tables created&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;2) I will add this as an improvement and do it as a post commit task&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;3)  Will add more info about the -qlist option in the README file&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;4) Will provide more info about Query.list in the README file. Also I will provide a sample Query.list.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;5) Can be done as a post commit task&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12476762" author="army" created="Wed, 28 Feb 2007 23:28:44 +0000"  >&lt;p&gt;Okay, thanks Manjula.  So was there a conensus as to where these new tests belong?  Was the decision to put them in derbyTesting/system/optimizer?  If so, can you post a new patch to reflect that change (build file and directory structure)?&lt;/p&gt;</comment>
                            <comment id="12476777" author="mkutty" created="Thu, 1 Mar 2007 00:08:36 +0000"  >&lt;p&gt;I think the final decision is to put under derbyTesting/system/optimizer. I will post  a new patch with the build.xml soon&lt;/p&gt;</comment>
                            <comment id="12477107" author="mkutty" created="Thu, 1 Mar 2007 22:25:15 +0000"  >&lt;p&gt;Attaching the new patch with the location change as org/apache/derbyTesting/system/optimizer. Also the zip file has the build.xml . A seperate patch for the build.xml under testing directory. Will be adding the updated README.txt later.&lt;/p&gt;

&lt;p&gt;Please review and commit&lt;/p&gt;
</comment>
                            <comment id="12477137" author="mkutty" created="Thu, 1 Mar 2007 23:44:02 +0000"  >&lt;p&gt;Attaching build.xml and the patch for changes in the build.xml under java/testing directory. Please review and commit&lt;/p&gt;</comment>
                            <comment id="12477150" author="army" created="Fri, 2 Mar 2007 00:51:49 +0000"  >&lt;p&gt;I committed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2248&quot; title=&quot;Place holder for the NetworkServer system test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2248&quot;&gt;&lt;del&gt;DERBY-2248&lt;/del&gt;&lt;/a&gt;_diff2.txt, along with the files in optimizer.zip, with svn revision 513562:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=513562&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;rev=513562&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For future reference, you do not have to jar up new files separately from the svn patch.  Instead you can just use the &quot;svn add&quot; command for the files, then they will show up in the patch just like other diffs.&lt;/p&gt;

&lt;p&gt;So in this case you could have done:&lt;/p&gt;

&lt;p&gt;  svn add java/testing/org/apache/derbyTesting/system/optimizer&lt;/p&gt;

&lt;p&gt;which would have added all files in the &quot;optimizer&quot; directory to the svn client.  Then when you did &quot;svn diff&quot; the new files would have been included in the patch, thus no need to attach them separately as a jar.&lt;/p&gt;

&lt;p&gt;I did exactly that to create d2249_v3.patch, which I&apos;m attaching to this issue since that is the actual patch that I committed.  Please look it over to make sure everything is correct.&lt;/p&gt;

&lt;p&gt;One other thing: I noticed that even though the directory is now system/optimizer the test name is still &quot;RunLangTest&quot;.  Is that intentional?  Or should that be renamed to something more in line with the new location?&lt;/p&gt;

&lt;p&gt;Thanks for the contribution!&lt;/p&gt;</comment>
                            <comment id="12477153" author="mkutty" created="Fri, 2 Mar 2007 01:18:41 +0000"  >&lt;p&gt;Thanks Army for the commit. I will address the post commit tasks in the sub-tasks created from this Issue&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12351187" name="DERBY-2249_diff.txt" size="769" author="mkutty" created="Wed, 14 Feb 2007 22:46:03 +0000"/>
                            <attachment id="12352368" name="DERBY-2249_diff2.txt" size="601" author="mkutty" created="Thu, 1 Mar 2007 22:25:15 +0000"/>
                            <attachment id="12350167" name="LangTest.zip" size="22900" author="mkutty" created="Thu, 1 Feb 2007 19:41:27 +0000"/>
                            <attachment id="12352377" name="build.xml" size="3247" author="mkutty" created="Thu, 1 Mar 2007 23:44:02 +0000"/>
                            <attachment id="12351188" name="build.xml" size="3248" author="mkutty" created="Wed, 14 Feb 2007 22:46:03 +0000"/>
                            <attachment id="12352380" name="d2249_v3.patch" size="96316" author="army" created="Fri, 2 Mar 2007 00:50:58 +0000"/>
                            <attachment id="12352381" name="d2249_v3.stat" size="1426" author="army" created="Fri, 2 Mar 2007 00:50:58 +0000"/>
                            <attachment id="12352367" name="optimizer.zip" size="20653" author="mkutty" created="Thu, 1 Mar 2007 22:25:15 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12363930">DERBY-2392</subtask>
                            <subtask id="12363938">DERBY-2393</subtask>
                            <subtask id="12363939">DERBY-2394</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Jan 2007 20:38:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30341</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>