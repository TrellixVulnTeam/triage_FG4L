<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:21:51 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4318/DERBY-4318.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4318] convert inbetween.sql to JUNIT</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4318</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;conversion of inbetween.sql to JUNIT&lt;/p&gt;</description>
                <environment></environment>
        <key id="12430944">DERBY-4318</key>
            <summary>convert inbetween.sql to JUNIT</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eranda">Eranda Sooriyabandara</assignee>
                                    <reporter username="eranda">Eranda Sooriyabandara</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Jul 2009 17:35:43 +0100</created>
                <updated>Tue, 18 Aug 2009 07:50:33 +0100</updated>
                            <resolved>Tue, 18 Aug 2009 05:40:28 +0100</resolved>
                                                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12733997" author="eranda" created="Wed, 22 Jul 2009 07:00:17 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
In the code I face with a problem with the code,&lt;/p&gt;

&lt;p&gt;st.executeUpdate(&lt;br/&gt;
            &quot; insert into t values (0, 100, &apos;hello&apos;, &apos;everyone &quot;&lt;br/&gt;
            + &quot;is here&apos;, 200.0e0,&quot;&lt;br/&gt;
            + &quot; 300.0e0, &apos;1992-01-01&apos;, &apos;12:30:30&apos;, &quot;&lt;br/&gt;
            + &quot;&apos;xxxxxxFILTERED-TIMESTAMPxxxxx&apos;)&quot;);&lt;/p&gt;

&lt;p&gt;and I replace with the code,&lt;/p&gt;

&lt;p&gt;st.executeUpdate(&lt;br/&gt;
            &quot; insert into t values (0, 100, &apos;hello&apos;, &apos;everyone &quot;&lt;br/&gt;
            + &quot;is here&apos;, 200.0e0,&quot;&lt;br/&gt;
            + &quot; 300.0e0, &apos;1992-01-01&apos;,&apos;12:30:30&apos;,&quot;+&lt;br/&gt;
            &quot;&apos;&quot;&lt;ins&gt;Timestamp.valueOf(&quot;1992-01-01 12:30:30&quot;)&lt;/ins&gt;&quot;&apos;)&quot;);&lt;/p&gt;

&lt;p&gt;And I got the results fine.&lt;/p&gt;</comment>
                            <comment id="12734123" author="bryanpendleton" created="Wed, 22 Jul 2009 15:14:07 +0100"  >&lt;p&gt;That looks like exactly the right fix.&lt;/p&gt;</comment>
                            <comment id="12734239" author="eranda" created="Wed, 22 Jul 2009 19:32:15 +0100"  >&lt;p&gt;Hi Bryan,Here I send the JUNIT file I got with this. There is a big&lt;br/&gt;
unconverted code and I have to work harder on that.&lt;br/&gt;
It&apos;ll take bit more time than what I expect for the next patch.&lt;/p&gt;</comment>
                            <comment id="12734678" author="eranda" created="Thu, 23 Jul 2009 19:16:17 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I found a big problem with the unconverted codings(about 400 unconverted&lt;br/&gt;
lines). I did some of them successfully but in the case of, ij&amp;gt; &amp;#8211; check&lt;br/&gt;
consistency of scans, etc. values ConsistencyChecker(); 1&lt;br/&gt;
--------------------------- No open scans, etc. 2 dependencies found&lt;/p&gt;

&lt;p&gt;I use the code as,&lt;/p&gt;

&lt;p&gt;rs = st.executeQuery(&lt;br/&gt;
            &quot;values ConsistencyChecker()&quot;);&lt;/p&gt;


&lt;p&gt;        expRS = new String [][]&lt;br/&gt;
        {&lt;/p&gt;
            {&quot;No open scans, etc. 2 dependencies found&quot;}
&lt;p&gt;        };&lt;/p&gt;

&lt;p&gt;        JDBC.assertFullResultSet(rs, expRS, true);&lt;/p&gt;

&lt;p&gt;the result failure was&lt;/p&gt;

&lt;p&gt;test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError:&lt;br/&gt;
C&lt;/p&gt;

&lt;p&gt;olumn value mismatch @ column &apos;1&apos;, row 1:&lt;/p&gt;

&lt;p&gt;    Expected: &amp;gt;No open scans, etc. 2 dependencies found&amp;lt;&lt;/p&gt;

&lt;p&gt;    Found:    &amp;gt;No open scans, etc.&lt;/p&gt;

&lt;p&gt;46 dependencies found&amp;lt;&lt;/p&gt;

&lt;p&gt;What can I do for the make  that test success.&lt;/p&gt;</comment>
                            <comment id="12735464" author="kmarsden" created="Mon, 27 Jul 2009 06:16:55 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;Can you post your current patch and just indicate that it is not for commit and I will try to help you debug this issue.&lt;/p&gt;</comment>
                            <comment id="12735473" author="eranda" created="Mon, 27 Jul 2009 06:44:15 +0100"  >&lt;p&gt;Hi Kathey,Thanks for help me with this issue.&lt;br/&gt;
I send the patch file(not for commit) with this.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12735546" author="eranda" created="Mon, 27 Jul 2009 11:00:16 +0100"  >&lt;p&gt;Hi Kathey,&lt;br/&gt;
I passed the test with the code,&lt;/p&gt;

&lt;p&gt;rs = st.executeQuery(&lt;br/&gt;
            &quot;values ConsistencyChecker()&quot;);&lt;/p&gt;

&lt;p&gt;        expColNames = new String [] &lt;/p&gt;
{&quot;1&quot;}
&lt;p&gt;;&lt;br/&gt;
        JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;        expRS = new String [][]&lt;br/&gt;
            {&lt;/p&gt;
            {&quot;No open scans, etc.\n30 dependencies found&quot;}
&lt;p&gt;            };&lt;/p&gt;

&lt;p&gt;        JDBC.assertFullResultSet(rs, expRS, true);&lt;/p&gt;

&lt;p&gt;But it is differ from what we expect as the result.&lt;/p&gt;</comment>
                            <comment id="12736749" author="kmarsden" created="Wed, 29 Jul 2009 19:51:13 +0100"  >&lt;p&gt;Hi Eranda,&lt;/p&gt;

&lt;p&gt;I don&apos;t see the new test in the patch. Perhaps did you forget to svn add the file InbetweenTest.java?&lt;/p&gt;</comment>
                            <comment id="12736773" author="eranda" created="Wed, 29 Jul 2009 20:37:17 +0100"  >&lt;p&gt;Hi Kathey,I am really sorry about that, I missed out when I create the&lt;br/&gt;
patch.&lt;br/&gt;
I send it right away.&lt;br/&gt;
Thanks&lt;br/&gt;
Eranda&lt;/p&gt;</comment>
                            <comment id="12737235" author="kmarsden" created="Thu, 30 Jul 2009 20:04:52 +0100"  >&lt;p&gt;Hi Eranda, when I tried to run the test I saw a different failure:&lt;/p&gt;

&lt;p&gt;test_inbetween used 1968 ms F.&lt;br/&gt;
test_inbetween used 5156 ms F&lt;br/&gt;
Time: 11.828&lt;br/&gt;
There were 2 failures:&lt;br/&gt;
1) test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError: C&lt;br/&gt;
olumn value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;Statement Name:&lt;br/&gt;
null&lt;br/&gt;
Statement Text:&lt;br/&gt;
call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
null&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;Statement Name:&lt;br/&gt;
        null&lt;br/&gt;
Statement Text:&lt;br/&gt;
         call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1)&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
null&amp;lt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1092)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1004)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:892)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:830)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:1608)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
2) test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError: C&lt;br/&gt;
olumn value mismatch @ column &apos;1&apos;, row 1:&lt;br/&gt;
    Expected: &amp;gt;Statement Name:&amp;lt;&lt;br/&gt;
    Found:    &amp;gt;Statement Name:&lt;br/&gt;
        SQL_CURLH000C15&lt;br/&gt;
Statement Text:&lt;br/&gt;
        select c1 from t2 where c1 in (select c1 from t1 where c1 in (5, t2.c2))&lt;br/&gt;
Parse Time: 0&lt;br/&gt;
Bind Time: 0&lt;br/&gt;
Optimize Time: 0&lt;br/&gt;
Generate Time: 0&lt;br/&gt;
Compile Time: 0&lt;br/&gt;
Execute Time: 0&lt;br/&gt;
Begin Compilation Timestamp : null&lt;br/&gt;
End Compilation Timestamp : null&lt;br/&gt;
Begin Execution Timestamp : null&lt;br/&gt;
End Execution Timestamp : null&lt;br/&gt;
Statement Execution Plan Text:&lt;br/&gt;
Project-Restrict ResultSet (5):&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 2&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
restriction = false&lt;br/&gt;
projection = true&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        restriction time (milliseconds) = 0&lt;br/&gt;
        projection time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            1.00&lt;br/&gt;
        optimizer estimated cost:           60.02&lt;/p&gt;

&lt;p&gt;Source result set:&lt;br/&gt;
        Hash Exists Join ResultSet:&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen from the left = 4&lt;br/&gt;
        Rows seen from the right = 2&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        Rows returned = 2&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            1.00&lt;br/&gt;
                optimizer estimated cost:           60.02&lt;/p&gt;

&lt;p&gt;        Left result set:&lt;br/&gt;
                Table Scan ResultSet for T2 at serializable isolation level using share table locking chosen by the opti&lt;br/&gt;
mizer&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen = 4&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Fetch Size = 16&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                scan information:&lt;br/&gt;
                        Bit set of columns fetched=All&lt;br/&gt;
                        Number of columns fetched=2&lt;br/&gt;
                        Number of pages visited=1&lt;br/&gt;
                        Number of rows qualified=4&lt;br/&gt;
                        Number of rows visited=4&lt;br/&gt;
                        Scan type=heap&lt;br/&gt;
                        start position:&lt;br/&gt;
null                    stop position:&lt;br/&gt;
null                    qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                        optimizer estimated row count:            9.00&lt;br/&gt;
                        optimizer estimated cost:           39.32&lt;/p&gt;

&lt;p&gt;        Right result set:&lt;br/&gt;
                Project-Restrict ResultSet (4):&lt;br/&gt;
                Number of opens = 4&lt;br/&gt;
                Rows seen = 2&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                restriction = true&lt;br/&gt;
                projection = false&lt;br/&gt;
                        constructor time (milliseconds) = 0&lt;br/&gt;
                        open time (milliseconds) = 0&lt;br/&gt;
                        next time (milliseconds) = 0&lt;br/&gt;
                        close time (milliseconds) = 0&lt;br/&gt;
                        restriction time (milliseconds) = 0&lt;br/&gt;
                        projection time (milliseconds) = 0&lt;br/&gt;
                        optimizer estimated row count:            1.00&lt;br/&gt;
                        optimizer estimated cost:           20.69&lt;/p&gt;

&lt;p&gt;                Source result set:&lt;br/&gt;
                        Hash Scan ResultSet for T1 using index I11 at serializable isolation level using share table loc&lt;br/&gt;
king:&lt;br/&gt;
                        Number of opens = 4&lt;br/&gt;
                        Hash table size = 5&lt;br/&gt;
                        Hash key is column number 0&lt;br/&gt;
                        Rows seen = 2&lt;br/&gt;
                        Rows filtered = 0&lt;br/&gt;
                                constructor time (milliseconds) = 0&lt;br/&gt;
                                open time (milliseconds) = 0&lt;br/&gt;
                                next time (milliseconds) = 0&lt;br/&gt;
                                close time (milliseconds) = 0&lt;br/&gt;
                                next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                        scan information:&lt;br/&gt;
                                Bit set of columns fetched=&lt;/p&gt;
{0}
&lt;p&gt;                                Number of columns fetched=1&lt;br/&gt;
                                Number of deleted rows visited=0&lt;br/&gt;
                                Number of pages visited=1&lt;br/&gt;
                                Number of rows qualified=5&lt;br/&gt;
                                Number of rows visited=5&lt;br/&gt;
                                Scan type=btree&lt;br/&gt;
                                Tree height=1&lt;br/&gt;
                                start position:&lt;br/&gt;
        None&lt;br/&gt;
                                stop position:&lt;br/&gt;
        None&lt;br/&gt;
                                scan qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                                next qualifiers:&lt;br/&gt;
Column&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; Id: 0&lt;br/&gt;
Operator: =&lt;br/&gt;
Ordered nulls: false&lt;br/&gt;
Unknown return value: false&lt;br/&gt;
Negate comparison result: false&lt;/p&gt;

&lt;p&gt;                                optimizer estimated row count:            1.00&lt;br/&gt;
                                optimizer estimated cost:           20.69&amp;lt;&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1092)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1004)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:892)&lt;br/&gt;
        at org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:830)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:3828)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 2,  Failures: 2,  Errors: 0&lt;/p&gt;


&lt;p&gt;I think typically instead of checking the full RuntimeStatistics output, tests use RuntimeStatisticsParser to verify relevant output.&lt;/p&gt;

&lt;p&gt;I also noticed the test name was wrong in the license header and think it might be good to split this test up into multiple fixtures if that is practical.&lt;/p&gt;

&lt;p&gt;But back to the question you asked, to see the dependency issue should I uncomment the code around line 1860?  Was the patch Rick provided helpful in isolating the issue?&lt;/p&gt;
</comment>
                            <comment id="12737673" author="eranda" created="Fri, 31 Jul 2009 20:21:17 +0100"  >&lt;p&gt;Hi Kathey,I am sorry,I didn&apos;t get your idea you trying to say me.&lt;br/&gt;
RuntimeStatisticsParser to verify relevant output.&lt;br/&gt;
How can I use RuntimeStatisticsParser to verify relevant output?&lt;/p&gt;

&lt;p&gt;I am sorry I didn&apos;t have the patch which Rick provided. Where can I find it?&lt;/p&gt;

&lt;p&gt;On Fri, Jul 31, 2009 at 12:36 AM, Kathey Marsden (JIRA) &amp;lt;jira@apache.org&amp;gt;wrote:&lt;/p&gt;
</comment>
                            <comment id="12737705" author="bryanpendleton" created="Fri, 31 Jul 2009 22:05:32 +0100"  >&lt;p&gt;Hi Eranda, Rick provided his patch in a message to the derby-dev list. Here is his message:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200907.mbox/%3C4A6DC058.7050302@sun.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200907.mbox/%3C4A6DC058.7050302@sun.com%3E&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;And here is the diff that was attached to the message, to help with diagnosis:&lt;br/&gt;
Index: java/testing/org/apache/derbyTesting/functionTests/tests/lang/inbetween.sql&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/testing/org/apache/derbyTesting/functionTests/tests/lang/inbetween.sql	(revision 798152)&lt;br/&gt;
+++ java/testing/org/apache/derbyTesting/functionTests/tests/lang/inbetween.sql	(working copy)&lt;br/&gt;
@@ -23,7 +23,7 @@&lt;br/&gt;
 &amp;#8211; compatibility with dynamic parameters &lt;br/&gt;
 set isolation to rr;&lt;/p&gt;

&lt;p&gt;-CREATE FUNCTION ConsistencyChecker() RETURNS VARCHAR(128)&lt;br/&gt;
+CREATE FUNCTION ConsistencyChecker() RETURNS VARCHAR(20000)&lt;br/&gt;
 EXTERNAL NAME &apos;org.apache.derbyTesting.functionTests.util.T_ConsistencyChecker.runConsistencyChecker&apos;&lt;br/&gt;
 LANGUAGE JAVA PARAMETER STYLE JAVA;&lt;br/&gt;
 autocommit off;&lt;br/&gt;
@@ -147,6 +147,7 @@&lt;br/&gt;
 delete from s where i between 3 and 5;&lt;br/&gt;
 select * from s;&lt;/p&gt;

&lt;p&gt;+MAXIMUMDISPLAYWIDTH 2000;&lt;br/&gt;
 &amp;#8211; check consistency of scans, etc.&lt;br/&gt;
 values ConsistencyChecker();&lt;/p&gt;

&lt;p&gt;Index: java/testing/org/apache/derbyTesting/functionTests/util/T_ConsistencyChecker.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; java/testing/org/apache/derbyTesting/functionTests/util/T_ConsistencyChecker.java	(revision 798152)&lt;br/&gt;
+++ java/testing/org/apache/derbyTesting/functionTests/util/T_ConsistencyChecker.java	(working copy)&lt;br/&gt;
@@ -504,6 +504,8 @@&lt;/p&gt;
         {
             debugBuf.append(&quot;No outstanding dependencies.\n&quot;);
         }
&lt;p&gt;+        &lt;br/&gt;
+        debugBuf.append( &quot; &quot; + dm.dumpDependencies() );&lt;/p&gt;

&lt;p&gt;         return debugBuf.toString();&lt;br/&gt;
     }&lt;/p&gt;</comment>
                            <comment id="12737706" author="bryanpendleton" created="Fri, 31 Jul 2009 22:07:46 +0100"  >&lt;p&gt;Hi Eranda, For an example of how to use RuntimeStatisticsParser in a Derby JUnit test, have a look at:&lt;br/&gt;
trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/DistinctTest.java&lt;/p&gt;

&lt;p&gt;For example, look around line 588 in that file.&lt;/p&gt;</comment>
                            <comment id="12737856" author="eranda" created="Sat, 1 Aug 2009 11:01:16 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I change the code as in the DistinctTest.java, but not on a totally&lt;br/&gt;
understanding. I got the results as below, and need more help to understand&lt;br/&gt;
the dependencies. Here I am attaching the code which I made changes.&lt;br/&gt;
Also same situation in the row 696.&lt;/p&gt;


&lt;p&gt;        rs = st.executeQuery(&quot; values&lt;br/&gt;
SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()&quot;);&lt;/p&gt;

&lt;p&gt;        expColNames = new String [] &lt;/p&gt;
{&quot;1&quot;}
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;        JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;        RuntimeStatisticsParser rtsp =&lt;br/&gt;
SQLUtilities.getRuntimeStatisticsParser(st);&lt;/p&gt;

&lt;p&gt;        assertTrue(rtsp.usedTableScan());&lt;/p&gt;

&lt;p&gt;assertFalse(rtsp.usedDistinctScan());&lt;/p&gt;

&lt;p&gt;.F.F&lt;/p&gt;

&lt;p&gt;Time: 6.763&lt;/p&gt;

&lt;p&gt;There were 2 failures:&lt;/p&gt;

&lt;p&gt;1)&lt;br/&gt;
test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError:&lt;br/&gt;
n&lt;/p&gt;

&lt;p&gt;ull&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:1590)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;2)&lt;br/&gt;
test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError:&lt;br/&gt;
n&lt;/p&gt;

&lt;p&gt;ull&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:1590)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;



&lt;p&gt;FAILURES!!!&lt;/p&gt;

&lt;p&gt;Tests run: 2,  Failures: 2,  Errors: 0&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12737893" author="bryanpendleton" created="Sat, 1 Aug 2009 16:30:35 +0100"  >&lt;p&gt;Hi Eranda, Actually, as I look at the test more closely, I think it&lt;br/&gt;
would be easier to use the XPLAIN tables feature instead of the&lt;br/&gt;
RuntimeStatisticsParser to do these sections of the test.&lt;/p&gt;

&lt;p&gt;But first, let&apos;s figure out the problem with the consistency checker&lt;br/&gt;
and the wrong number of dependencies; then we can go back and work on&lt;br/&gt;
changing the query plan verification in the test to use XPLAIN table checking.&lt;/p&gt;

&lt;p&gt;I&apos;m wondering if the dependencies problem has to do with this comment in inbetween_derby.properties:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;
	&lt;ol&gt;
		&lt;li&gt;wants to do consistency checking, so needs&lt;/li&gt;
		&lt;li&gt;the statement cache off to ensure no trailing dependencies exist&lt;br/&gt;
-derby.language.statementCacheSize=0&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think we should be able to use DatabasePropertyTestSetup here.&lt;/p&gt;

&lt;p&gt;Can you try changing&lt;/p&gt;

&lt;p&gt;suite.addTest(TestConfiguration.defaultSuite(InbetweenTest.class));&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;suite.addTest(DatabasePropertyTestSetup.singleProperty(&lt;br/&gt;
TestConfiguration.defaultSuite(InbetweenTest.class)&lt;br/&gt;
&quot;derby.language.statementCacheSize&quot;, &quot;0&quot;));&lt;/p&gt;

&lt;p&gt;to see if this has any effect on the dependencies that the ConsistencyChecker finds?&lt;/p&gt;</comment>
                            <comment id="12737942" author="eranda" created="Sat, 1 Aug 2009 20:37:14 +0100"  >&lt;p&gt;Hi Bryan,I found some changes with the change of the code.&lt;/p&gt;

&lt;p&gt;This is the output when using,&lt;br/&gt;
suite.addTest(DatabasePropertyTestSetup.singleProperty(&lt;br/&gt;
TestConfiguration.defaultSuite(InbetweenTest.class)&lt;br/&gt;
&quot;derby.language.statementCacheSize&quot;, &quot;0&quot;));&lt;/p&gt;

&lt;p&gt;test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError:&lt;br/&gt;
C&lt;/p&gt;

&lt;p&gt;olumn value mismatch @ column &apos;1&apos;, row 1:&lt;/p&gt;

&lt;p&gt;    Expected: &amp;gt;No open scans, etc&amp;lt;&lt;/p&gt;

&lt;p&gt;    Found:    &amp;gt;No open scans, etc.&lt;/p&gt;

&lt;p&gt;34 dependencies found In Memory Dependencies:&lt;/p&gt;

&lt;p&gt;08264012-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_SET_DATABASE_PROPERTY, type Alias&lt;/p&gt;

&lt;p&gt;286cc01e-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on getSchemas, type StoredPreparedStatement&lt;/p&gt;

&lt;p&gt;560c80d5-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on CONSISTENCYCHECKER, type Alias&lt;/p&gt;

&lt;p&gt;582f8014-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_SET_DATABASE_PROPERTY, type Alias&lt;/p&gt;

&lt;p&gt;601a400f-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_GET_DATABASE_PROPERTY, type Alias&lt;/p&gt;

&lt;p&gt;61e8403f-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on getTables, type StoredPreparedStatement&lt;/p&gt;

&lt;p&gt;8a184042-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_INPLACE_COMPRESS_TABLE, type Alias&lt;/p&gt;

&lt;p&gt;da398044-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSDEPENDS, type Table&lt;/p&gt;

&lt;p&gt;ea5bc046-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSROLES(ROLEID, ISDEF), type Table&lt;/p&gt;

&lt;p&gt;ea5bc046-0122-d75c-d491-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSROLES_INDEX2, type Index&lt;/p&gt;

&lt;p&gt;aliasID: 23ffc05b-0122-9ac2-fefa-00000dd510ec&lt;/p&gt;

&lt;p&gt;aliasName: SYSCS_SET_DATABASE_PROPERTY&lt;/p&gt;

&lt;p&gt;schemaID: c013800d-00fb-2649-07ec-000000134f30&lt;/p&gt;

&lt;p&gt;javaClassName: org.apache.derby.catalog.SystemProcedures&lt;/p&gt;

&lt;p&gt;aliasType: P&lt;/p&gt;

&lt;p&gt;nameSpace: P&lt;/p&gt;

&lt;p&gt;systemAlias: false&lt;/p&gt;

&lt;p&gt;aliasInfo: SYSCS_SET_DATABASE_PROPERTY(IN KEY VARCHAR(128),IN VALUE&lt;br/&gt;
VARCHAR(32672)) LANGUAGE JAVA PARAMETER STYLE JAVA M&lt;/p&gt;

&lt;p&gt;ODIFIES SQL DATA&lt;/p&gt;

&lt;p&gt;, type Alias, provides for 08264012-0122-d75c-d491-00000dd510ec, type&lt;br/&gt;
PreparedStatement&lt;/p&gt;

&lt;p&gt;aliasID: 23ffc05b-0122-9ac2-fefa-00000dd510ec&lt;/p&gt;

&lt;p&gt;aliasName: SYSCS_SET_DATABASE_PROPERTY&lt;/p&gt;

&lt;p&gt;schemaID: c013800d-00fb-2649-07ec-000000134f30&lt;/p&gt;

&lt;p&gt;javaClassName: org.apache.derby.catalog.SystemProcedures&lt;/p&gt;

&lt;p&gt;aliasType: P&lt;/p&gt;

&lt;p&gt;nameSpace: P&lt;/p&gt;

&lt;p&gt;systemAlias: false&lt;/p&gt;

&lt;p&gt;aliasInfo: SYSCS_SET_DATABASE_PROPERTY(IN KEY VARCHAR(128),IN VALUE&lt;br/&gt;
VARCHAR(32672)) LANGUAG&amp;lt;&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1095)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1007)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:895)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:833)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:700)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;


&lt;p&gt;Output when using the code,&lt;/p&gt;

&lt;p&gt;suite.addTest(TestConfiguration.defaultSuite(InbetweenTest.class));&lt;/p&gt;


&lt;p&gt;1)&lt;br/&gt;
test_inbetween(org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest)junit.framework.AssertionFailedError:&lt;br/&gt;
C&lt;/p&gt;

&lt;p&gt;olumn value mismatch @ column &apos;1&apos;, row 1:&lt;/p&gt;

&lt;p&gt;    Expected: &amp;gt;No open scans, etc&amp;lt;&lt;/p&gt;

&lt;p&gt;    Found:    &amp;gt;No open scans, etc.&lt;/p&gt;

&lt;p&gt;30 dependencies found In Memory Dependencies:&lt;/p&gt;

&lt;p&gt;004b0019-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on getSchemas, type StoredPreparedStatement&lt;/p&gt;

&lt;p&gt;0d0600d0-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on CONSISTENCYCHECKER, type Alias&lt;/p&gt;

&lt;p&gt;601a400f-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_SET_DATABASE_PROPERTY, type Alias&lt;/p&gt;

&lt;p&gt;61e8403f-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSDEPENDS, type Table&lt;/p&gt;

&lt;p&gt;82080041-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSROLES(ROLEID, ISDEF), type Table&lt;/p&gt;

&lt;p&gt;82080041-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSROLES_INDEX2, type Index&lt;/p&gt;

&lt;p&gt;c1c9803d-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on SYSCS_INPLACE_COMPRESS_TABLE, type Alias&lt;/p&gt;

&lt;p&gt;c99d403a-0122-d761-1a5b-00000dd510ec, type PreparedStatement,  is dependent&lt;br/&gt;
on getTables, type StoredPreparedStatement&lt;/p&gt;

&lt;p&gt;aliasID: 23ffc05b-0122-9ac2-fefa-00000dd510ec&lt;/p&gt;

&lt;p&gt;aliasName: SYSCS_SET_DATABASE_PROPERTY&lt;/p&gt;

&lt;p&gt;schemaID: c013800d-00fb-2649-07ec-000000134f30&lt;/p&gt;

&lt;p&gt;javaClassName: org.apache.derby.catalog.SystemProcedures&lt;/p&gt;

&lt;p&gt;aliasType: P&lt;/p&gt;

&lt;p&gt;nameSpace: P&lt;/p&gt;

&lt;p&gt;systemAlias: false&lt;/p&gt;

&lt;p&gt;aliasInfo: SYSCS_SET_DATABASE_PROPERTY(IN KEY VARCHAR(128),IN VALUE&lt;br/&gt;
VARCHAR(32672)) LANGUAGE JAVA PARAMETER STYLE JAVA M&lt;/p&gt;

&lt;p&gt;ODIFIES SQL DATA&lt;/p&gt;

&lt;p&gt;, type Alias, provides for 601a400f-0122-d761-1a5b-00000dd510ec, type&lt;br/&gt;
PreparedStatement&lt;/p&gt;

&lt;p&gt;aliasID: 3a7f0048-0122-d761-1a5b-00000dd510ec&lt;/p&gt;

&lt;p&gt;aliasName: CONSISTENCYCHECKER&lt;/p&gt;

&lt;p&gt;schemaID: 80000000-00d2-b38f-4cda-000a0a412c00&lt;/p&gt;

&lt;p&gt;javaClassName:&lt;br/&gt;
org.apache.derbyTesting.functionTests.util.T_ConsistencyChecker&lt;/p&gt;

&lt;p&gt;aliasType: F&lt;/p&gt;

&lt;p&gt;nameSpace: F&lt;/p&gt;

&lt;p&gt;systemAlias: false&lt;/p&gt;

&lt;p&gt;aliasInfo: runConsistencyChecker() RETURNS VARCHAR(2000) LANGUAGE JAVA&lt;br/&gt;
PARAMETER STYLE JAVA READS SQL DATA CALLED ON NUL&lt;/p&gt;

&lt;p&gt;L INPUT&lt;/p&gt;

&lt;p&gt;, type Alias, provides for 0d0600d0-0122-d761-1a5b-00000dd510ec, type&lt;br/&gt;
PreparedStatement&lt;/p&gt;

&lt;p&gt;SPSDescriptor:&lt;/p&gt;

&lt;p&gt;        name: SYS.getTables&lt;/p&gt;

&lt;p&gt;        uuid: 41588035-0122-9ac2-fefa-00000dd510ec&lt;/p&gt;

&lt;p&gt;        text: SELECT CAST (&amp;lt;&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1095)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertRowInResultSet(JDBC.java:1007)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:895)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(JDBC.java:833)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.functionTests.tests.lang.InbetweenTest.test_inbetween(InbetweenTest.java:695)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup$1.protect(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;        at junit.extensions.TestSetup.run(TestSetup.java:27)&lt;/p&gt;

&lt;p&gt;        at&lt;br/&gt;
org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="12738001" author="eranda" created="Sun, 2 Aug 2009 07:33:17 +0100"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I did some search on the RuntimeStaticParser and finally end up some coding&lt;br/&gt;
 which succeed.&lt;/p&gt;

&lt;p&gt;rs=st.executeQuery(&quot;SELECT R FROM t&quot;);&lt;br/&gt;
        while(rs.next()){}&lt;br/&gt;
        rs.close();&lt;/p&gt;

&lt;p&gt;        rs = st.executeQuery(&lt;br/&gt;
            &quot; values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS()&quot;);&lt;br/&gt;
        rs.next();&lt;/p&gt;

&lt;p&gt;        if(usingEmbedded())&lt;/p&gt;
{
            RuntimeStatisticsParser rtsp = new
RuntimeStatisticsParser(rs.getString(1));
            rs.close();
            assertTrue(rtsp.usedTableScan());
            assertFalse(rtsp.usedDistinctScan());
        }

&lt;p&gt;Is it fare to use this code here? Are there any problem with using this&lt;br/&gt;
code?&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12738070" author="eranda" created="Sun, 2 Aug 2009 13:41:23 +0100"  >&lt;p&gt;Hi Bryan,If the previous replacement correct we can use it in several&lt;br/&gt;
places. And after replacing I saw three parts which still gives the errors.&lt;/p&gt;

&lt;p&gt;In row 687,&lt;/p&gt;

&lt;p&gt;if(usingEmbedded()){&lt;br/&gt;
            rs = st.executeQuery(&lt;br/&gt;
                &quot;values ConsistencyChecker()&quot;);&lt;/p&gt;

&lt;p&gt;            expColNames = new String [] &lt;/p&gt;
{&quot;1&quot;}
&lt;p&gt;;&lt;br/&gt;
            JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;            expRS = new String [][]&lt;br/&gt;
            {&lt;br/&gt;
                &lt;/p&gt;
{&quot;No open scans, etc&quot;}
&lt;p&gt;,&lt;/p&gt;
                {&quot;30 dependencies found&quot;}
&lt;p&gt;            };&lt;/p&gt;

&lt;p&gt;            JDBC.assertFullResultSet(rs, expRS, true);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;In the row 2891,&lt;br/&gt;
rs = st.executeQuery(&quot;values (3, cast (null as int))&quot;);&lt;/p&gt;

&lt;p&gt;In row 4620,&lt;br/&gt;
st.executeUpdate(&lt;br/&gt;
            &quot; create view v1(c1)&quot;&lt;br/&gt;
            + &quot;as&quot;&lt;br/&gt;
            + &quot;select c1 from t1&quot;&lt;br/&gt;
            + &quot;union all&quot;&lt;br/&gt;
            + &quot;select c2 from t2 &quot;);&lt;/p&gt;

&lt;p&gt;I am attaching the patch file here.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12738113" author="eranda" created="Sun, 2 Aug 2009 19:49:18 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
I solve the third problem in which the error was a Syntax error.&lt;/p&gt;

&lt;p&gt;before,&lt;br/&gt;
st.executeUpdate(&lt;br/&gt;
           &quot; create view v1(c1)&quot;&lt;br/&gt;
           + &quot;as&quot;&lt;br/&gt;
           + &quot;select c1 from t1&quot;&lt;br/&gt;
           + &quot;union all&quot;&lt;br/&gt;
           + &quot;select c2 from t2 &quot;);&lt;br/&gt;
after&lt;br/&gt;
st.executeUpdate(&lt;br/&gt;
           &quot; create view v1(c1)&quot;&lt;br/&gt;
           + &quot;as&quot;&lt;br/&gt;
           + &quot;(select c1 from t1)&quot;&lt;br/&gt;
           + &quot;union all&quot;&lt;br/&gt;
           + &quot;(select c2 from t2 )&quot;);&lt;/p&gt;

&lt;p&gt;The change was use parenthesis on select c1 from t1 and select c2 from t2 .&lt;br/&gt;
The second problem was a nasty one and I ask help from derby-dev.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="12739678" author="eranda" created="Wed, 5 Aug 2009 20:05:18 +0100"  >&lt;p&gt;Hi Bryan,Is it correct and appropriate to use the codes in my previous 3&lt;br/&gt;
comments?&lt;br/&gt;
And I still have a problem with the code,&lt;br/&gt;
if(usingEmbedded()){&lt;br/&gt;
            rs = st.executeQuery(&lt;br/&gt;
                &quot;values ConsistencyChecker()&quot;);&lt;/p&gt;

&lt;p&gt;            expColNames = new String [] &lt;/p&gt;
{&quot;1&quot;}
&lt;p&gt;;&lt;br/&gt;
            JDBC.assertColumnNames(rs, expColNames);&lt;/p&gt;

&lt;p&gt;            expRS = new String [][]&lt;br/&gt;
            {&lt;br/&gt;
                &lt;/p&gt;
{&quot;No open scans, etc&quot;}
&lt;p&gt;,&lt;/p&gt;
                {&quot;30 dependencies found&quot;}
&lt;p&gt;            };&lt;/p&gt;

&lt;p&gt;            JDBC.assertFullResultSet(rs, expRS, true);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;and I found a unconverted part which includes the sql command,&lt;br/&gt;
maximumdisplaywidth 2000;&lt;br/&gt;
I use the code,&lt;br/&gt;
st.executeUpdate(&quot;maximumdisplaywidth 2000&quot;);&lt;br/&gt;
But it gave me errors.&lt;br/&gt;
Can you help me a little with this problems.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12739732" author="bryanpendleton" created="Wed, 5 Aug 2009 21:36:11 +0100"  >&lt;p&gt;I think that the maximumdisplaywidth is only needed for ij-based tests, not for JUnit tests, so&lt;br/&gt;
you should be able to simply delete that part from your new test.&lt;/p&gt;

&lt;p&gt;I don&apos;t understand the problem about the ConsistencyChecker finding the wrong number&lt;br/&gt;
of dependencies. I shall have to study it more.&lt;/p&gt;

&lt;p&gt;If you can prepare a patch which has all of the other issues resolved, and just has the&lt;br/&gt;
number-of-dependencies problem remaining, then it would be great to post that patch&lt;br/&gt;
so that I can have a look at it.&lt;/p&gt;</comment>
                            <comment id="12739745" author="eranda" created="Wed, 5 Aug 2009 21:57:15 +0100"  >&lt;p&gt;Hi Bryan,Here is my latest patch. While you study the test I can work on&lt;br/&gt;
break into several methods.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12740088" author="bryanpendleton" created="Thu, 6 Aug 2009 15:52:45 +0100"  >&lt;p&gt;The DatabasePropertyTestSetup code isn&apos;t working. The statement cache is getting set&lt;br/&gt;
to a size of 100 &lt;b&gt;before&lt;/b&gt; the setup code sets the property to 0.&lt;/p&gt;

&lt;p&gt;This seems like it might be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2341&quot; title=&quot;derby.language.statementCacheSize is ignored when it is set as a database property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2341&quot;&gt;&lt;del&gt;DERBY-2341&lt;/del&gt;&lt;/a&gt;, which is marked closed, but which&lt;br/&gt;
may have not been completely fixed?&lt;/p&gt;

&lt;p&gt;I&apos;ll study this further to see if I can understand how this is supposed to work.&lt;/p&gt;</comment>
                            <comment id="12740092" author="bryanpendleton" created="Thu, 6 Aug 2009 16:01:46 +0100"  >&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2341&quot; title=&quot;derby.language.statementCacheSize is ignored when it is set as a database property.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2341&quot;&gt;&lt;del&gt;DERBY-2341&lt;/del&gt;&lt;/a&gt; comment was a red herring.&lt;/p&gt;

&lt;p&gt;The optional 4th parameter to DatabasePropertyTestSetup.singleProperty() needs to&lt;br/&gt;
be set to &apos;true&apos; for parameters which require a database reboot after being set.&lt;/p&gt;

&lt;p&gt;So I changed &lt;/p&gt;

&lt;p&gt;        suite.addTest(DatabasePropertyTestSetup.singleProperty(&lt;br/&gt;
                TestConfiguration.defaultSuite(InbetweenTest.class),&lt;br/&gt;
                &quot;derby.language.statementCacheSize&quot;, &quot;0&quot;));&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;        suite.addTest(DatabasePropertyTestSetup.singleProperty(&lt;br/&gt;
                TestConfiguration.defaultSuite(InbetweenTest.class),&lt;br/&gt;
                &quot;derby.language.statementCacheSize&quot;, &quot;0&quot;,true));&lt;/p&gt;

&lt;p&gt;And now I can see that the tests are being run with statementCacheSize == 0.&lt;/p&gt;</comment>
                            <comment id="12740157" author="bryanpendleton" created="Thu, 6 Aug 2009 18:22:29 +0100"  >&lt;p&gt;With the statementCacheSize set to 0, we get a cleaner run, but we still find&lt;br/&gt;
16 dependencies when the IJ-based test finds only 2.&lt;/p&gt;

&lt;p&gt;I looked into the dependencies in more detail, and there are 2 in-memory&lt;br/&gt;
dependencies found, and 14 stored dependencies.&lt;/p&gt;

&lt;p&gt;The stored dependencies have to do with StoredPreparedStatement instances&lt;br/&gt;
for the various system catalogs (SYSALIASES, SYSSCHEMAS, etc.)&lt;/p&gt;

&lt;p&gt;The in-memory dependencies are for the call to CONSISTENCYCHECKER itself,&lt;br/&gt;
and for a separate call to SYSCS_SET_RUNTIMESTATISTICS which occurs&lt;br/&gt;
later in the test.&lt;/p&gt;

&lt;p&gt;I wonder if the IJ test harness ran this test in such a way that there were&lt;br/&gt;
no stored dependencies printed, but when we run it as a JUnit test we&lt;br/&gt;
get the stored dependencies.&lt;/p&gt;

&lt;p&gt;I&apos;m not actually sure what this test is trying to achieve by running the  ConsistencyChecker.&lt;/p&gt;

&lt;p&gt;Here&apos;s two possible ideas:&lt;br/&gt;
1) Change the test so that the expected output includes the actual number of&lt;br/&gt;
dependencies we find, even though that&apos;s a different number than we got&lt;br/&gt;
with the old IJ-based test. (we get 16 depedencies the first time, 18 the second time)&lt;br/&gt;
2) Change the test to just check the number of open scans, and not count the&lt;br/&gt;
number of dependencies at all.&lt;/p&gt;

&lt;p&gt;Does anybody else (Rick?) know why this test was calling the ConsistencyChecker&lt;br/&gt;
and whether the number of dependencies that we found is important or not?&lt;/p&gt;</comment>
                            <comment id="12743852" author="eranda" created="Sun, 16 Aug 2009 17:58:16 +0100"  >&lt;p&gt;Hi Bryan,&lt;br/&gt;
Thanks for the help. Here I make as you tell and now I am comparing the test&lt;br/&gt;
with the inbetween.out file.&lt;/p&gt;</comment>
                            <comment id="12743997" author="eranda" created="Mon, 17 Aug 2009 09:26:17 +0100"  >&lt;p&gt;Hi Bryan,I completed the comparing and did some changes, add some comments&lt;br/&gt;
and delete repeated codes. If you think test is alright we can commit it as&lt;br/&gt;
a patch.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="12744072" author="bryanpendleton" created="Mon, 17 Aug 2009 15:15:58 +0100"  >&lt;p&gt;Thanks Eranda, this is great!&lt;/p&gt;

&lt;p&gt;I will try to review the patch soon.&lt;/p&gt;</comment>
                            <comment id="12744357" author="bryanpendleton" created="Tue, 18 Aug 2009 05:40:28 +0100"  >&lt;p&gt;I verified that the new test runs correctly in both a standalone test run&lt;br/&gt;
as well as within the entire regression suite. My regression test runs&lt;br/&gt;
were clean, and I&apos;ve committed the patch to the trunk as svn revision 805275.&lt;/p&gt;

&lt;p&gt;Eranda, thanks very much for all the work on this issue, and for contributing it to Derby!&lt;/p&gt;</comment>
                            <comment id="12744379" author="eranda" created="Tue, 18 Aug 2009 07:02:17 +0100"  >&lt;p&gt;Hi Bryan,Thanks for committing this issue and I am closing it.&lt;/p&gt;

</comment>
                    </comments>
                    <attachments>
                            <attachment id="12416754" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="319850" author="eranda" created="Mon, 17 Aug 2009 09:26:17 +0100"/>
                            <attachment id="12416714" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="321298" author="eranda" created="Sun, 16 Aug 2009 17:58:16 +0100"/>
                            <attachment id="12415661" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="322012" author="eranda" created="Wed, 5 Aug 2009 21:57:15 +0100"/>
                            <attachment id="12415279" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="322204" author="eranda" created="Sun, 2 Aug 2009 13:41:24 +0100"/>
                            <attachment id="12414939" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="332556" author="eranda" created="Wed, 29 Jul 2009 20:37:18 +0100"/>
                            <attachment id="12414587" name="ASF.LICENSE.NOT.GRANTED--InbetweenTest.diff" size="161554" author="eranda" created="Mon, 27 Jul 2009 06:44:16 +0100"/>
                            <attachment id="12414233" name="ASF.LICENSE.NOT.GRANTED--inbetween.junit" size="163676" author="eranda" created="Wed, 22 Jul 2009 19:32:16 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Jul 2009 14:14:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31193</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0run:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38330</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>