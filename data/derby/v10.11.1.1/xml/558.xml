<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-558/DERBY-558.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-558] Optimizer hangs with query that uses more than 6 tables and does subquery flattening.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-558</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I was running a query that has a large number (hundreds) of tables in it and I set the derby property &quot;derby.optimizer.noTimeout&quot; to true to see what plan Derby would choose as the &lt;em&gt;best&lt;/em&gt; plan for the query.  When doing so, I ran into a situation where the optimizer hung forever--which is wrong.  I expect that setting &quot;noTimeout&quot; to true might cause the query to run more slowly (since it has to evaluate ALL possible join orders for all of the tables in question), but it should &lt;em&gt;not&lt;/em&gt; cause the optimizer to hang forever.&lt;/p&gt;

&lt;p&gt;I noticed that &quot;subquery flattening&quot; is peformed on the query, which introduces dependencies between the various tables and thus restricts the possible join orders that the optimizer can choose (see &lt;a href=&quot;http://db.apache.org/derby/docs/10.1/tuning/ctuntransform25868.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.1/tuning/ctuntransform25868.html&lt;/a&gt;).  I was eventually able to track the problem down to code in OptimizerImpl where, for queries with more than 6 tables, a certain &quot;jumping&quot; algorithm is used to try to allow the optimizer to find a better plan more quickly.&lt;/p&gt;

&lt;p&gt;Long story short, there is logic in the &quot;jumping&quot; mechanism that tries to put the tables into a legal join order, but in certain (rare) cases where multiple join order dependencies have to be enforced, the jump logic can end up looping indefinitely, causing the &quot;hang&quot; in the optimizer.&lt;/p&gt;</description>
                <environment>Running query in &amp;quot;ij&amp;quot;  with derby.optimizer.noTimeout=true</environment>
        <key id="12314755">DERBY-558</key>
            <summary>Optimizer hangs with query that uses more than 6 tables and does subquery flattening.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Sep 2005 07:27:40 +0100</created>
                <updated>Wed, 12 Jul 2006 00:51:23 +0100</updated>
                            <resolved>Thu, 6 Oct 2005 02:55:02 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                    <version>10.1.2.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12322973" author="army" created="Fri, 9 Sep 2005 07:35:34 +0100"  >&lt;p&gt;Attaching a simplified reproduction of the hang.  Note that this particular reproduction is completely contrived and nonsensical, but it nonetheless demonstrates the problem.  In order to reproduce, start ij with the &quot;derby.optimizer.noTimeout&quot; property set to true, connect to a database, and then run the attached sql script:&lt;/p&gt;

&lt;p&gt;&amp;gt; java -Dderby.optimizer.noTimeout=true org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.2&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:testdb;create=true&apos;;&lt;br/&gt;
ij&amp;gt; run &apos;repro.sql&apos;;&lt;/p&gt;

&lt;p&gt;Note that the hang won&apos;t reproduce if &quot;noTimeout&quot; is false (which is the default) because eventually the optimizer will decide that it&apos;s taking too long and will quit.  That&apos;s nice because it means most people won&apos;t ever see this problem &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  However, when noTimeout is set to true the query &lt;em&gt;should&lt;/em&gt; still finish (even if it takes longer), so I &lt;em&gt;do&lt;/em&gt; think this is a bug.&lt;/p&gt;</comment>
                            <comment id="12323234" author="army" created="Tue, 13 Sep 2005 02:00:22 +0100"  >&lt;p&gt;Attaching a patch for this problem.  The patch does the following:&lt;/p&gt;

&lt;p&gt;1) Fixes the logic in OptimizerImpl.java that was causing the hang (an indirect infinite loop).&lt;br/&gt;
2) Adds some comments describing the &quot;JUMPING&quot; logic that is in OptimizerImpl so that developers looking at the code can (hopefully) figure out what&apos;s going on more quickly in the future.&lt;br/&gt;
3) Adds a test case to the lang/subqueryFlattening.sql test for verification of the fix.  The test case is based on the repro attached to this issue.  NOTE: I had to set the &quot;derby.optimizer.noTimeout&quot; property to true for this entire test--I think this is okay since everything still passes (on my machine), but if anyone feels otherwise, please let me know...&lt;/p&gt;

&lt;p&gt;I ran derbyall on Windows 2000 w/ Sun jdk 1.4.2 and saw no failures.  If someone could review this, I&apos;d be grateful..&lt;/p&gt;</comment>
                            <comment id="12331232" author="bandaram" created="Tue, 4 Oct 2005 11:14:32 +0100"  >&lt;p&gt;Submitted this patch to trunk. Army, would you like to see this fix in 10.1 branch also?&lt;/p&gt;

&lt;p&gt;Thanks for fixing this interesting problem... And also for adding comments to existing mechanism. Great patch.&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\compile\OptimizerImpl.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\subqueryFlattening.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\subqueryFlattening.sql&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\lang\subqueryFlattening_derby.properties&lt;br/&gt;
Transmitting file data ....&lt;br/&gt;
Committed revision 293480.&lt;/p&gt;</comment>
                            <comment id="12331319" author="army" created="Wed, 5 Oct 2005 07:09:32 +0100"  >&lt;p&gt;Yes, I think it&apos;d be good to put this into the 10.1 branch as well, esp. if we can get it into the upcoming 10.1 bug fix release...&lt;/p&gt;</comment>
                            <comment id="12331322" author="bandaram" created="Wed, 5 Oct 2005 07:42:05 +0100"  >&lt;p&gt;Merged to 10.1 branch. Should be part of 10.1.2 release.&lt;/p&gt;</comment>
                            <comment id="12331401" author="army" created="Thu, 6 Oct 2005 02:55:02 +0100"  >&lt;p&gt;I ran the repro attached to this issue as well as the new test case in lang/subqueryFlattening.sql against the trunk (10.2) and the 10.1 branch to verify that the changes have been committed and that things are working as they should.  It all looks good, so I&apos;m resolving and closing this issue.  Thanks for committing, Satheesh.&lt;/p&gt;</comment>
                            <comment id="12420353" author="rhillegas" created="Wed, 12 Jul 2006 00:51:23 +0100"  >&lt;p&gt;Assigning to SQL component.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12312838" name="d558.patch" size="10172" author="army" created="Tue, 13 Sep 2005 02:00:22 +0100"/>
                            <attachment id="12312793" name="repro.sql" size="589" author="army" created="Fri, 9 Sep 2005 07:35:34 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Oct 2005 10:14:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy15rz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40586</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>