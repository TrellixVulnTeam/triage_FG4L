<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:31:36 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3299/DERBY-3299.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3299] Uniqueness violation error (23505) occurs after dropping a PK constraint if there exists a foreign key on the same columns.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3299</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When there are multiple constraints on a single table and the constraints have the same set of columns (in the same order), Derby tries to optimize things by re-using a single backing index for all of the relevant constraints.  See the &quot;executeConstantAction()&quot; method of CreateIndexConstantAction.java (search for &quot;duplicate&quot;).&lt;/p&gt;

&lt;p&gt;But there is a bug in Derby where, if one of the constraints is unique and is dropped, the uniqueness &quot;attribute&quot; of the backing index is not updated accordingly.  This means that uniqueness may be incorrectly enforced where it is not required.&lt;/p&gt;

&lt;p&gt;Take the following example (&quot;Case 2&quot; from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS ADD CONSTRAINT&lt;br/&gt;
      NEWORDERS_PK PRIMARY KEY(NO_W_ID, NO_D_ID, NO_O_ID);&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS ADD CONSTRAINT&lt;br/&gt;
      NO_O_FK FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES ORDERS;&lt;/p&gt;

&lt;p&gt;For these statements Derby will use a single backing index for both the primary constraint NEWORDERS_PK and the foreign key constraint NO_O_FK.  That backing index will be unique because the primary key must itself be unique.&lt;/p&gt;

&lt;p&gt;If later we drop the primary key:&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS DROP CONSTRAINT NEWORDERS_PK;&lt;/p&gt;

&lt;p&gt;then the backing index needs to be converted from a unique index to a non-unique index (because a foreign key is not inherently unique).  But in Derby the uniqueness attribute remains unchanged, so attempts to insert a duplicate (NO_W_ID, NO_D_ID, NO_O_ID) row into NEWORDERS will fail with error 23505, when it should really succeed.&lt;/p&gt;

&lt;p&gt;I tried this out on 10.1.3.1 and the same behavior occurs there, so marking &quot;Affects&quot; versions for everything back to that...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12385459">DERBY-3299</key>
            <summary>Uniqueness violation error (23505) occurs after dropping a PK constraint if there exists a foreign key on the same columns.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="army">A B</assignee>
                                    <reporter username="army">A B</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jan 2008 23:04:32 +0000</created>
                <updated>Fri, 3 Jun 2011 02:39:18 +0100</updated>
                            <resolved>Wed, 20 Feb 2008 16:40:28 +0000</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12555436" author="army" created="Wed, 2 Jan 2008 23:05:13 +0000"  >&lt;p&gt;Attaching a repro script to show the problem.&lt;/p&gt;</comment>
                            <comment id="12566189" author="army" created="Wed, 6 Feb 2008 16:43:52 +0000"  >&lt;p&gt;Attaching d3299_v1.patch, which is a first attempt at addressing this issue.&lt;/p&gt;

&lt;p&gt;The general approach taken by this patch is to &quot;update&quot; the physical conglomerate by first dropping the old conglomerate and then creating a new (non-unique) conglomerate.  So with respect to the example given in the description for this Jira, namely:&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS ADD CONSTRAINT&lt;br/&gt;
      NEWORDERS_PK PRIMARY KEY(NO_W_ID, NO_D_ID, NO_O_ID)&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS ADD CONSTRAINT&lt;br/&gt;
      NO_O_FK FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES ORDERS; &lt;/p&gt;

&lt;p&gt;where NEWORDERS_PK and NO_O_FK share a unique physical conglomerate, the d3299_v1.patch will make it so that the statement:&lt;/p&gt;

&lt;p&gt;  ALTER TABLE NEWORDERS DROP CONSTRAINT NEWORDERS_PK&lt;/p&gt;

&lt;p&gt;leads to a) the dropping of the unique physical conglomerate backing NEWORDERS_PK and b) the creation of a new NON-unique physical conglomerate to back NO_O_FK. This will only happen in cases where the physical conglomerate has to change. So if, for example, there are two foreign keys on a single table with the same columns and sorting requirements, and one of those foreign keys is dropped, we would NOT need to update the physical conglomerate for the other foreign key, and thus we would skip the &quot;drop and re-create&quot; processing.&lt;/p&gt;

&lt;p&gt;This particular change means that dropping a primary key whose backing conglomerate is shared by one or more foreign keys might take some time (due to the potential creation of an entirely new (non-unique) conglomerate, which must then be populated).&lt;/p&gt;

&lt;p&gt;The other approach would be to see if there is a uniqueness &quot;switch&quot; within the physical conglomerate that we could trun off, thus allowing us to use the same physical conglomerate but to disable uniqueness checking.  If possible, that would almost certainly lead to faster DROP CONSTRAINT processing than the approach taken in d3299_v1.patch (when shared conglomerates are at play).&lt;/p&gt;

&lt;p&gt;However, I chose to go with the &quot;drop and re-create&quot; approach for two reasons. First, in the interest of supporting a &quot;modular&quot; store as much as possible, it seems cleaner to follow an approach which does not depend on classes or &quot;switches&quot; that are specific to a given disk storage implementation. The approach of dropping a unique conglomerate and creating a new, non-unique one should, in theory, be usable regardless of how the storage implementation treats unique vs non-unique indexes.  It may not be optimal, but it seems more flexible. The second reason I opted for this approach is that I have been working with an eye toward &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt;, for which the &quot;drop and re-create&quot; approach seems like more of a necessity.  By resolving this issue in that manner, I&apos;m hoping that changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt; will be able to re-use or benefit from a good amount of the code that I&apos;m proposing to add for this issue.&lt;/p&gt;

&lt;p&gt;It is of course possible to improve upon the d3299_v1.patch in the future if performance of DROP CONSTRAINTs becomes an issue.  But for now I&apos;m leaving that as a potential future enhancement...&lt;/p&gt;

&lt;p&gt;More on the d3299_v1.patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds several utility methods to DDLSingleTableConstantAction.java that&lt;br/&gt;
    can be called by various constant action subclasses to drop a constraint&lt;br/&gt;
    and/or a conglomerate descriptor.  In addition to performing the drop as&lt;br/&gt;
    before, these utility methods also check to see if dropping the constraint&lt;br/&gt;
    or index necessitates the &quot;update&quot; of a shared physical conglomerate.  If&lt;br/&gt;
    so, the new methods will take the necessary steps to 1) drop the old physical&lt;br/&gt;
    conglomerate, and 2) create a new physical conglomerate that correctly&lt;br/&gt;
    satisifes all remaining conglomerate descriptors--i.e. all of the ones that&lt;br/&gt;
    were sharing the dropped physical conglomerate.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changes all existing ConstantAction calls to ConstraintDescriptor.drop(...)&lt;br/&gt;
    and ConglomerateDescriptor.drop(...) so that they now use the new utility&lt;br/&gt;
    methods defined on DDLSingleTableConstantAction.  Due to current restrictions&lt;br/&gt;
    in Derby-&lt;del&gt;see esp. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3300&quot; title=&quot;CREATE INDEX that matches an existing index succeeds with a 01504 warning but does not create the index.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3300&quot;&gt;DERBY-3300&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt;&lt;/del&gt;-there are a few places where&lt;br/&gt;
    calling &quot;drop&quot; on a constraint/index won&apos;t ever lead to the dropping of a&lt;br/&gt;
    shared physical conglomerate, so use of the new utility methods is not&lt;br/&gt;
    strictly necessary.  But in the interest of a) completeness, and b) potential&lt;br/&gt;
    changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3300&quot; title=&quot;CREATE INDEX that matches an existing index succeeds with a 01504 warning but does not create the index.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3300&quot;&gt;DERBY-3300&lt;/a&gt; in the future, this patch updates all&lt;br/&gt;
    such &quot;drop()&quot; calls, nonetheless.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    Note that in some scenarios--esp. AlterTableConstantAction.java and&lt;br/&gt;
    DropTableConstantAction.java--we may want to drop the old physical&lt;br/&gt;
    conglomerate and then either skip creation of the new one, or create&lt;br/&gt;
    the new one &quot;later&quot;.  The utility methods on DDLSingleTableConstantAction&lt;br/&gt;
    are written to support such a division where necessary/beneficial.  See&lt;br/&gt;
    code comments for details.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Uses the existing CreateIndexConstantAction class to create new physical&lt;br/&gt;
    conglomerates that &quot;replace&quot; shared ones that have been dropped.  The&lt;br/&gt;
    patch introduces a new CreateIndexConstantAction constructor that allows&lt;br/&gt;
    differentiation between creation of a &quot;normal&quot; index--for which we will&lt;br/&gt;
    create a new conglomerate descriptor, add corresponding data to the&lt;br/&gt;
    system catalogs, and (potentially) create a new physical conglomerate--&lt;br/&gt;
    verses creation of a &quot;replacement&quot; index, where we just create a new&lt;br/&gt;
    physical conglomerate based on an existing conglomerate descriptor.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds a new JUnit test, lang/ConglomerateSharingTest.java, which includes&lt;br/&gt;
    a test fixture for the &quot;convert to non-unique&quot; scenario described by this&lt;br/&gt;
    Jira.  It also includes a fixture for testing the various scenarios in&lt;br/&gt;
    which a constraint can be dropped, to verify that the logic surrounding&lt;br/&gt;
    &quot;drop and re-create conglomerate&quot; processing is correctly executed (or&lt;br/&gt;
    skipped) as appropriate.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updates one master file, RowLockIso.out, to reflect the fact that the&lt;br/&gt;
    new utility methods in DDLSingleTableConstantAction.java acquire a lock&lt;br/&gt;
    on the index in order to read the properties of the physical conglomerate&lt;br/&gt;
    that is being dropped.  This is necessary so that those properties can&lt;br/&gt;
    be propagated to the new (replacement) conglomerate if necessary.  In&lt;br/&gt;
    RowLockIso.out, this difference shows itself by a &quot;lock count&quot; that is&lt;br/&gt;
    now one greater than previously, after a &quot;drop index&quot; command has been&lt;br/&gt;
    issued.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After applying this patch I ran derbyall and suites.All with ibm142 on Linux and saw no failures.  Review comments/feedback would be much appreciated, especially since these changes will likely affect work for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2204&quot; title=&quot;Foreign key constraint backing index creation can be smarter when foreign key is a subset of the table&amp;#39;s primary key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2204&quot;&gt;DERBY-2204&lt;/a&gt; (and perhaps &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3300&quot; title=&quot;CREATE INDEX that matches an existing index succeeds with a 01504 warning but does not create the index.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3300&quot;&gt;DERBY-3300&lt;/a&gt;) in the future.&lt;/p&gt;</comment>
                            <comment id="12568630" author="army" created="Wed, 13 Feb 2008 17:04:31 +0000"  >&lt;p&gt;I broke the single _v1 patch down into 4 smaller, relatively modular patches in hopes of making things easier for any potential reviewers.  The patches are:&lt;/p&gt;

&lt;p&gt; 1. d3299_createIxAction_v1.patch: Changes/additions to CreateIndexConstantAction.java so that it can support the creation of &quot;replacement&quot; conglomerates, which will be necessary when the physical conglomerate for an index has been dropped but the index descriptor still exists.  In that case we need to create a new physical conglomerate to support the existing descriptor.  This can happen if multiple indexes share a physical conglomerate but then the conglomerate is dropped as part of &quot;drop index&quot; processing for one of the indexes. (Note that &quot;indexes&quot; here includes indexes which were created to back constraints).&lt;/p&gt;

&lt;p&gt;  2. d3299_caUtilMethods_v1.patch: Addition of utility methods to DDLSingleTableConstantAction.java that can be used by any ConstantAction classes which drop constraint or conglomerate descriptors.   The methods recognize when a &quot;replacement&quot; conglomerate is needed and make the necessary calls to create such a conglomerate.  See previous comment for details.&lt;/p&gt;

&lt;p&gt;  3. d3299_dropSharedConglom_v1.patch: Changes to ConglomerateDescriptor that include logic for detecting a &quot;replacement&quot; scenario, and logic to drop the old (shared) conglomerate in those scenarios.  Also changes the various ConstantAction classes which rely on the &quot;drop()&quot; methods of ConglomerateDescriptor and ConstraintDescriptor to use the utility methods added as part of caUtilMethods_v1.patch.  This is the patch which ultimately fixes this issue and &quot;activates&quot; the preceding two patches--and thus is the only one which changes the functional behavior of Derby.&lt;/p&gt;

&lt;p&gt;  4. d3299_tests_v1.patch: New JUnit tests for verifying the correct behavior when constraints share a physical conglomerate and then one of them is dropped.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching all 4 patches here, but plan to commit them one at a time, a day or two apart, to allow for any review comments/suggestions.  In the absence of review comments I&apos;ll just go ahead and commit each one in its own time.&lt;/p&gt;

&lt;p&gt;As each patch is committed, the subsequent patches may need to be tweaked to allow for minor conflicts that exist between them.  I will posted updated patches as necessary--but the _v1 patches should at least allow reviewers to see the changes and make comments.&lt;/p&gt;

&lt;p&gt;Note to any reviewers: the patches build on each other: i.e. attempts to apply and build patch #2 will fail unless patch #1 has been applied first.&lt;/p&gt;

&lt;p&gt;I ran derbyall with d3299_createIxAction_v1.patch and it ran cleanly; I&apos;m currently running suites.All.  If the latter passes, then I plan to commit that patch tomorrow (Thursday, Feb 14, PST).&lt;/p&gt;</comment>
                            <comment id="12569039" author="army" created="Thu, 14 Feb 2008 18:46:08 +0000"  >&lt;p&gt;derbyall and suites.All using ibm142 ran cleanly with d3299_createIxAction_v1.patch, so I committed that with svn # 627836:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=627836&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=627836&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;derbyall and suites.All also ran cleanly with d3299_caUtilMethods_v1.patch (which applied cleanly after createIxAction).  If tinderbox tests for createIxAction run cleanly, and if I hear no objections/feedback on d3299_caUtilMethods_v1.patch, I plan to commit the latter tomorrow (Feb 15 PST).&lt;/p&gt;</comment>
                            <comment id="12569200" author="kristwaa" created="Fri, 15 Feb 2008 08:13:13 +0000"  >&lt;p&gt;I took &apos;d3299_caUtilMethods_v1.patch&apos; out for a spin. I haven&apos;t reviewed the code, but noticed that the JavaDoc for DDLSingleTableConstantAction.executeConglomReplacement uses an incorrect parameter name.&lt;/p&gt;

&lt;p&gt;I don&apos;t have any comments on the approach and code otherwise, I was just a little curious and had a quick look &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12569311" author="army" created="Fri, 15 Feb 2008 16:44:47 +0000"  >&lt;p&gt;&amp;gt; I don&apos;t have any comments on the approach and code otherwise, I was just a&lt;br/&gt;
&amp;gt; little curious and had a quick look&lt;/p&gt;

&lt;p&gt;Thanks Kristian, every little bit helps &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;ll make the javadoc fix before committing...&lt;/p&gt;</comment>
                            <comment id="12569431" author="army" created="Fri, 15 Feb 2008 21:58:55 +0000"  >&lt;p&gt;Attaching d3299_caUtilMethods_v2.patch, which fixes the javadoc error mentioned by Kristian and also has some whitespace changes (to make use of tabs/spaces consistent).  I committed this patch with svn # 628181:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=628181&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=628181&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This commit necessitates some cleanup/merging with the d3299_dropSharedConglom_v1.patch, so I will make the needed changes and post a dropSharedConglom_v2 patch shortly.&lt;/p&gt;</comment>
                            <comment id="12569448" author="army" created="Fri, 15 Feb 2008 23:02:33 +0000"  >&lt;p&gt;Attaching d3299_dropSharedConglom_v2.patch, which has been updated to account for the commit of d3299_caUtilMethods_v2.patch.   This second version also has a minor change to the createNewBackingCongloms(...) method of AlterTableConstantAction--esp. _v2 removes an unnecessary parameter from that method.&lt;/p&gt;

&lt;p&gt;I&apos;ve started derbyall with this patch applied; if all goes well and I hear no objections/feedback, I plan to commit it early next week (Mon or Tues PST).&lt;/p&gt;</comment>
                            <comment id="12570310" author="army" created="Tue, 19 Feb 2008 17:03:25 +0000"  >&lt;p&gt;Committed d3299_dropSharedConglom_v2.patch with svn # 629160:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=629160&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=629160&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attaching d3299_tests_v2.patch, which is sync&apos;ed with the latest codeline.&lt;/p&gt;</comment>
                            <comment id="12570740" author="army" created="Wed, 20 Feb 2008 16:40:28 +0000"  >&lt;p&gt;Committed d3299_tests_v2.patch with svn # 629527:&lt;/p&gt;

&lt;p&gt;  URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=629527&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=629527&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resolving issue as fixed in 10.4.  If the tinderbox runs are clean and no additional comments/feedback are offered over the next couple of days, I plan to close the issue.&lt;/p&gt;</comment>
                            <comment id="12572274" author="army" created="Mon, 25 Feb 2008 22:17:11 +0000"  >&lt;p&gt;Haven&apos;t heard any followup issues/concerns with this, so I&apos;m marking it closed.&lt;/p&gt;</comment>
                            <comment id="12593199" author="kmarsden" created="Wed, 30 Apr 2008 02:26:17 +0100"  >&lt;p&gt;I had indicated that I might backport this change to 10.3, but looking at it more closely, I think I won&apos;t.  It contains several checkins and data dictionary changes, so I don&apos;t know that it is suitable for backport.  If someone thinks it is urgently needed in 10.3 and appropriate to backport let me know and I&apos;ll reconsider.&lt;/p&gt;

</comment>
                            <comment id="13040485" author="kmarsden" created="Fri, 27 May 2011 23:40:14 +0100"  >&lt;p&gt;I think it makes sense to try to reduce the test case a bit and add it in as an upgrade test.&lt;br/&gt;
But just as a data point, I noticed that the duplicate row is created with 10.1.1.0 but not the latest on the 10.1.&lt;br/&gt;
branch, so likely a backported bug fix.    10.3.1.4 the earliest release of 10.3 didn&apos;t show the problem.&lt;/p&gt;


</comment>
                            <comment id="13040503" author="kmarsden" created="Sat, 28 May 2011 00:41:31 +0100"  >&lt;p&gt;The last comment was mistakenly added to this issue instead of  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5249&quot; title=&quot;A table created with 10.0.2.1 with constraints cannot be dropped with 10.5 due to NullPointerException with insane build or ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate  with sane build&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5249&quot;&gt;&lt;del&gt;DERBY-5249&lt;/del&gt;&lt;/a&gt;. I don&apos;t see how to delete &lt;br/&gt;
without reopening the issue it so just disregard.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12508599">DERBY-5249</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12372428" name="case_2.sql" size="3860" author="army" created="Wed, 2 Jan 2008 23:05:12 +0000"/>
                            <attachment id="12375502" name="d3299_caUtilMethods_v1.patch" size="17064" author="army" created="Wed, 13 Feb 2008 17:04:31 +0000"/>
                            <attachment id="12375720" name="d3299_caUtilMethods_v2.patch" size="16770" author="army" created="Fri, 15 Feb 2008 21:58:55 +0000"/>
                            <attachment id="12375501" name="d3299_createIxAction_v1.patch" size="13574" author="army" created="Wed, 13 Feb 2008 17:04:31 +0000"/>
                            <attachment id="12375503" name="d3299_dropSharedConglom_v1.patch" size="22481" author="army" created="Wed, 13 Feb 2008 17:04:31 +0000"/>
                            <attachment id="12375725" name="d3299_dropSharedConglom_v2.patch" size="22542" author="army" created="Fri, 15 Feb 2008 23:02:32 +0000"/>
                            <attachment id="12375504" name="d3299_tests_v1.patch" size="27523" author="army" created="Wed, 13 Feb 2008 17:04:45 +0000"/>
                            <attachment id="12375942" name="d3299_tests_v2.patch" size="27526" author="army" created="Tue, 19 Feb 2008 17:03:25 +0000"/>
                            <attachment id="12374881" name="d3299_v1.patch" size="79246" author="army" created="Wed, 6 Feb 2008 16:43:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 15 Feb 2008 08:13:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23554</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0g4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36431</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>