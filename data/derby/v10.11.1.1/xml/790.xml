<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:55:05 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-790/DERBY-790.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-790] SQLException used by the networked interface to Derby is not serializable</title>
                <link>https://issues.apache.org/jira/browse/DERBY-790</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When running RMI client tests with Derby,  many tests failed with the following message:&lt;/p&gt;

&lt;p&gt;Caused by: java.rmi.UnmarshalException: Failed to marshal error response: &lt;br/&gt;
&apos;org.apache.derby.client.am.SqlException: &apos;DROP TABLE&apos; cannot be performed on &lt;br/&gt;
&apos;SDF014B7&apos; because it does not exist.&apos; because exception ; nested exception &lt;br/&gt;
is:&lt;br/&gt;
        java.io.NotSerializableException: &lt;br/&gt;
org.apache.derby.client.net.NetSqlca&lt;br/&gt;
        at weblogic.rjvm.ResponseImpl.unmarshalReturn(ResponseImpl.java:191)&lt;br/&gt;
        at &lt;br/&gt;
weblogic.rmi.internal.BasicRemoteRef.invoke(BasicRemoteRef.java:176)&lt;/p&gt;


&lt;p&gt;This issue is a blocking issue for us.&lt;/p&gt;
</description>
                <environment>Windows XP; WebLogic Server 9.0</environment>
        <key id="12327174">DERBY-790</key>
            <summary>SQLException used by the networked interface to Derby is not serializable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="forsini">Francois Orsini</assignee>
                                    <reporter username="dcabelus">David Cabelus</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jan 2006 01:32:58 +0000</created>
                <updated>Sat, 6 Oct 2007 08:19:39 +0100</updated>
                            <resolved>Thu, 8 Feb 2007 13:16:01 +0000</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                    <component>Network Server</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12361673" author="forsini" created="Wed, 4 Jan 2006 05:56:10 +0000"  >&lt;p&gt;&lt;b&gt;Neither&lt;/b&gt; of org.apache.derby.client.am.Sqlca (which NetSqlca extends) and org.apache.derby.client.net.NetSqlca are serializable - Since org.apache.derby.client.am.Sqlca is a member of org.apache.derby.client.am.SqlException, during serialization, the java.io.NotSerializableException gets raised...&lt;/p&gt;</comment>
                            <comment id="12363502" author="kmarsden" created="Sat, 21 Jan 2006 13:27:05 +0000"  >&lt;p&gt;I was wondering if there was an ETA for the fix for this  issue.&lt;/p&gt;</comment>
                            <comment id="12419823" author="fuzzylogic" created="Sat, 8 Jul 2006 11:30:21 +0100"  >&lt;p&gt;Francois, you are currently assigned to this issue. Do you think you will have time to complete it for 10.2?&lt;/p&gt;</comment>
                            <comment id="12425535" author="kmarsden" created="Thu, 3 Aug 2006 15:48:31 +0100"  >&lt;p&gt;I think this would be a good 10.2 fix candidate but did not change it to 10.2 because it is already assigned.  Francois,  I was wondering if you were actively working on this issue? If not it might be good to unassign yourself so that someone else can pick it up.&lt;/p&gt;

&lt;p&gt;I think it is a JDBC compliance issue  and while it does have only one vote, we have had users asking about it on the list.&lt;/p&gt;
</comment>
                            <comment id="12427253" author="forsini" created="Thu, 10 Aug 2006 16:45:13 +0100"  >&lt;p&gt;Sorry for missing the queries earlier - missed them in my emails somehow.&lt;/p&gt;

&lt;p&gt;I have a fix for this issue. I have added some tests in SqlExceptionTest.java as well.&lt;/p&gt;

&lt;p&gt;I&apos;m going to re-verify the fix and post some patch.&lt;/p&gt;</comment>
                            <comment id="12434688" author="knutanders" created="Thu, 14 Sep 2006 15:04:17 +0100"  >&lt;p&gt;Hi Francois,&lt;br/&gt;
Did your re-verification show any problems? Do you think the fix will make it into 10.2?&lt;/p&gt;</comment>
                            <comment id="12434700" author="forsini" created="Thu, 14 Sep 2006 15:48:38 +0100"  >&lt;p&gt;  &amp;gt; Did your re-verification show any problems? &lt;/p&gt;

&lt;p&gt;I had expanded the current SqlExceptionTest.java but realized the added logic was not proper in order to verify the fix is working. I added a test to SqlExceptionTest.java which is aimed at running in a true client/server environment and this is what I need to verify to ensure the fix is tested in a proper manner.&lt;/p&gt;

&lt;p&gt;  &amp;gt; Do you think the fix will make it into 10.2?&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;</comment>
                            <comment id="12435853" author="rhillegas" created="Tue, 19 Sep 2006 16:06:45 +0100"  >&lt;p&gt;Moving to 10.2.2.0.&lt;/p&gt;</comment>
                            <comment id="12437965" author="forsini" created="Wed, 27 Sep 2006 00:00:17 +0100"  >&lt;p&gt;I have attached some patch to address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-790&quot; title=&quot;SQLException used by the networked interface to Derby is not serializable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-790&quot;&gt;&lt;del&gt;DERBY-790&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have added a new test as part of derbynet/SqlExceptionTest.java (junit test) and made sure it ran fine under the derbynet and derbynetclient frameworks - I have also made sure that the issue reported by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-790&quot; title=&quot;SQLException used by the networked interface to Derby is not serializable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-790&quot;&gt;&lt;del&gt;DERBY-790&lt;/del&gt;&lt;/a&gt; is indeed fixed by the change reflected in - This fix is much simpler than it originally was and thanks to the changes into client/am/SqlException.java which recursively create a SQLException object out of a SqlException one...The risk of this fix is minimal.&lt;/p&gt;

&lt;p&gt;Basically, I have made Sqlca SqlException attribute a transient one as it is mostly and only required when the SQLException gets created through recursion before returning it to the client - Sqlca does not need to be serialized, once the SQLException has been constructed out of getSQLException() in SqlException.java; hence a client can go ahead and serialize it.&lt;/p&gt;

&lt;p&gt;The cause of the NotSeriazableException was due to the fact that we stick the SqlException object in the init &apos;cause&apos; of the SQLException (Throwable), and during serialization, the exception would be raised against Sqlca.&lt;/p&gt;

&lt;p&gt;Cheers. --francois&lt;/p&gt;</comment>
                            <comment id="12438128" author="knutanders" created="Wed, 27 Sep 2006 14:53:17 +0100"  >&lt;p&gt;Hi Francois,&lt;/p&gt;

&lt;p&gt;I think the patch might be a little too simple. When sqlca_ is made&lt;br/&gt;
transient (and thereby null after deserialization), getMessage() could&lt;br/&gt;
make the message text grow. For instance, I tried to insert two rows&lt;br/&gt;
with identical primary keys into a table with addBatch() and&lt;br/&gt;
executeBatch(). When I extracted the SqlException from the&lt;br/&gt;
BatchUpdateException, serialized it and deserialized it, getMessage()&lt;br/&gt;
on the deserialized exception returned&lt;/p&gt;

&lt;p&gt;Error for batch element #1: Error for batch element #1: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL060927031919790&apos; defined on &apos;T&apos;.&lt;/p&gt;

&lt;p&gt;Calling getMessage() a second time gave&lt;/p&gt;

&lt;p&gt;Error for batch element #1: Error for batch element #1: Error for batch element #1: Error for batch element #1: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL060927031919790&apos; defined on &apos;T&apos;.&lt;/p&gt;

&lt;p&gt;Each time getMessage() is called, &quot;Error for batch element #1: &quot; is&lt;br/&gt;
added to the message string.&lt;/p&gt;

&lt;p&gt;A couple of minor comments/suggestions to the JUnit test:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;testSerializedException() should call fail() after&lt;br/&gt;
    executeQuery(). Otherwise, the test succeeds if the query&lt;br/&gt;
    succeeds.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;recreateSQLException() could throw Exception instead of catching&lt;br/&gt;
    all exceptions and calling fail(). This would make the code&lt;br/&gt;
    simpler, and it would preserve stack trace and nested exceptions&lt;br/&gt;
    if an unexpected error occurred.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;maybe assertThrowableEquals() could be placed in BaseTestCase&lt;br/&gt;
    instead of BaseJDBCTestCase? It is not tied to JDBC as far as I&lt;br/&gt;
    can see.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="12440629" author="forsini" created="Sat, 7 Oct 2006 01:28:44 +0100"  >&lt;p&gt;Knut,&lt;/p&gt;

&lt;p&gt;Thanks for the review on this patch.&lt;/p&gt;

&lt;p&gt;I&apos;ve incorporated all the suggestions and increased the amount of test logic as far as comparing the original exception with the serialized one.&lt;/p&gt;

&lt;p&gt;As part of the test logic in SqlExceptionTest.java, I&apos;m now also using a batch to execute several batch elements and hence generate a few chained / nested exceptions.&lt;/p&gt;

&lt;p&gt;I&apos;ve tested under 1.3, 1.4, 1.5 &amp;amp; 1.6 Java runtime environments as well as under DerbyNetClient and DerbyNet frameworks as well as well as no framework.&lt;/p&gt;

&lt;p&gt;I have tested and called getMessage() several times for &lt;em&gt;each&lt;/em&gt; of the serialized exceptions generated from the BatchUpdateException and I&apos;m not getting the behavior you described - I get the exact same message than the original exception with no added string. The comparison of both the original and the serialized exceptions is thoroughly tested in BaseJDBCTestCase.java:assertSQLExceptionEquals() and that includes any chained exceptions.&lt;/p&gt;

&lt;p&gt;Hence, I&apos;m not sure how you got into the case you described and I would appreciate if you could post the logic for the test you ran as well as your java and platform environment.&lt;/p&gt;

&lt;p&gt;In the meantime, I have attached the new changes.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;</comment>
                            <comment id="12440885" author="knutanders" created="Mon, 9 Oct 2006 14:07:19 +0100"  >&lt;p&gt;Thanks, the test changes look great.&lt;/p&gt;

&lt;p&gt;The attached repro (Serialize.java) shows the problem with getMessage(). Note that I used getCause() to get the actual derby.client.am.SqlException object (which is not a java.sql.SQLException), whereas your tests use getNextException() which returns a java.sql.SQLException. I ran the repro with Sun J2SE 5.0 on Solaris 10 and got the following output:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Message from original exception ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Error for batch element #1: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL061009023735980&apos; defined on &apos;T&apos;.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Message from deserialized exception ***&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Error for batch element #1: Error for batch element #1: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL061009023735980&apos; defined on &apos;T&apos;.&lt;/p&gt;</comment>
                            <comment id="12457918" author="rhillegas" created="Tue, 12 Dec 2006 22:27:00 +0000"  >&lt;p&gt;Unknown release vehicle.&lt;/p&gt;</comment>
                            <comment id="12469917" author="forsini" created="Sat, 3 Feb 2007 00:25:43 +0000"  >&lt;p&gt;Comments for this patch have been taken care of - The reproducible test case (Serialize.java) is also passing. New tests that got added are also passing.&lt;/p&gt;

&lt;p&gt;If someone could test a full and partial build with the changes I would appreciate - at some point, it uses to compile fine with a full clean build and then I saw some class dependencies build issue on a partial build - I can no longer reproduce it but I&apos;d like to make sure there is no build issue.&lt;/p&gt;

&lt;p&gt;Thanks in advance,&lt;/p&gt;</comment>
                            <comment id="12470077" author="knutanders" created="Sun, 4 Feb 2007 19:37:13 +0000"  >&lt;p&gt;I don&apos;t see the build issue if I do an &quot;ant clean&quot; after applying your patch. If I don&apos;t do &quot;ant clean&quot;, or if I run &quot;touch java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java&quot; before I run &quot;ant all&quot;, I see this failure:&lt;/p&gt;

&lt;p&gt;junitcomponents:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 2 source files to /export/home/kah/derby/trunk/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /export/home/kah/derby/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java:727: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method getCause()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class java.sql.SQLException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;             if (se1.getCause() != (Throwable) null)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                    ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /export/home/kah/derby/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java:728: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method getCause()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class java.sql.SQLException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 assertThrowableEquals(se1.getCause(), se2.getCause());&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                          ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /export/home/kah/derby/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java:728: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method getCause()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class java.sql.SQLException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 assertThrowableEquals(se1.getCause(), se2.getCause());&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                                                          ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; /export/home/kah/derby/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java:730: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : method getCause()&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class java.sql.SQLException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                 assertNull(se2.getCause());&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;                               ^&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 4 errors&lt;/p&gt;

&lt;p&gt;BUILD FAILED&lt;/p&gt;

&lt;p&gt;I think this is because of a problem with the dependencies in the build scripts. build.xml in the junit directory specifies that BaseJDBCTestCase should be compiled against the 1.3 libraries, and that is what happens if BaseJDBCTestCase is the only file that has been modified. However, it seems like it is compiled against the 1.4 libraries after a clean/clobber.&lt;/p&gt;

&lt;p&gt;BaseJDBCTestCase.assertSQLState() uses reflection to invoke Throwable.initCause(). I guess that could also be done for getCause() in assertSQLExceptionEquals() to avoid the problem.&lt;/p&gt;</comment>
                            <comment id="12470079" author="knutanders" created="Sun, 4 Feb 2007 19:43:14 +0000"  >&lt;p&gt;Apart from the build issue, I think the patch looks good. My only minor comment is that the println statement in BaseTestCase which is commented out could be removed.&lt;/p&gt;</comment>
                            <comment id="12470837" author="forsini" created="Wed, 7 Feb 2007 08:04:03 +0000"  >&lt;p&gt;Thanks for the great review Knut.&lt;/p&gt;

&lt;p&gt;I&apos;ve removed the println() tracing statement and I&apos;m now using reflection - I think this is fine as this is within some test method and as you mentioned, it is already used in some other method within that class.&lt;/p&gt;

&lt;p&gt;Am running DerbyAll again and in the meantime I&apos;m posting the new changes.&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;</comment>
                            <comment id="12471048" author="knutanders" created="Wed, 7 Feb 2007 17:57:13 +0000"  >&lt;p&gt;Thanks Francois! I have committed v5 to trunk with revision 504630. Should the fix be ported to 10.2 as well?&lt;/p&gt;</comment>
                            <comment id="12471080" author="forsini" created="Wed, 7 Feb 2007 19:49:28 +0000"  >&lt;p&gt;Thanks for the commit and great help Knut.&lt;/p&gt;

&lt;p&gt;Yes I think it should be ported to 10.2 branch as well - This is a blocking issue for frameworks that need to do JDBC objects serialization  (i.e. via RMI). Changes are fairly low-risk as well. +1&lt;/p&gt;</comment>
                            <comment id="12471244" author="knutanders" created="Thu, 8 Feb 2007 09:22:30 +0000"  >&lt;p&gt;There was a conflict in SqlExceptionTest so the fix couldn&apos;t be merged automatically, but the conflict was easy to resolve. The attached patch applies cleanly on 10.2. I&apos;m running derbyall on it now and will commit if there are no problems.&lt;/p&gt;</comment>
                            <comment id="12471324" author="knutanders" created="Thu, 8 Feb 2007 13:16:01 +0000"  >&lt;p&gt;Committed fix to 10.2 with revision 504880.&lt;/p&gt;</comment>
                            <comment id="12532834" author="dagw" created="Sat, 6 Oct 2007 08:19:39 +0100"  >&lt;p&gt;Been resolved since Feb, and reporter hasn&apos;t closed it, so closing. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12341755" name="DERBY-790-v1.diff" size="5900" author="forsini" created="Wed, 27 Sep 2006 00:00:17 +0100"/>
                            <attachment id="12341754" name="DERBY-790-v1.stat" size="234" author="forsini" created="Wed, 27 Sep 2006 00:00:17 +0100"/>
                            <attachment id="12342490" name="DERBY-790-v2.diff" size="9101" author="forsini" created="Sat, 7 Oct 2006 01:28:44 +0100"/>
                            <attachment id="12342489" name="DERBY-790-v2.stat" size="303" author="forsini" created="Sat, 7 Oct 2006 01:28:44 +0100"/>
                            <attachment id="12350261" name="DERBY-790-v3.diff" size="11114" author="forsini" created="Sat, 3 Feb 2007 00:25:43 +0000"/>
                            <attachment id="12350260" name="DERBY-790-v3.stat" size="303" author="forsini" created="Sat, 3 Feb 2007 00:25:43 +0000"/>
                            <attachment id="12350532" name="DERBY-790-v5.diff" size="11856" author="forsini" created="Wed, 7 Feb 2007 08:04:03 +0000"/>
                            <attachment id="12350531" name="DERBY-790-v5.stat" size="303" author="forsini" created="Wed, 7 Feb 2007 08:04:02 +0000"/>
                            <attachment id="12342573" name="Serialize.java" size="1625" author="knutanders" created="Mon, 9 Oct 2006 14:07:19 +0100"/>
                            <attachment id="12350638" name="derby-790-10.2.diff" size="11800" author="knutanders" created="Thu, 8 Feb 2007 09:22:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 Jan 2006 05:56:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22149</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy111j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>