<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3359/DERBY-3359.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3359] The log shipper needs to be modified to vary the shipping intervals dynamically (based on load)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3359</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description></description>
                <environment></environment>
        <key id="12387365">DERBY-3359</key>
            <summary>The log shipper needs to be modified to vary the shipping intervals dynamically (based on load)</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12373499">DERBY-2922</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="narayanan">V.Narayanan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jan 2008 10:21:10 +0000</created>
                <updated>Fri, 15 Feb 2008 16:37:11 +0000</updated>
                            <resolved>Fri, 15 Feb 2008 16:36:49 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12563453" author="narayanan" created="Tue, 29 Jan 2008 10:23:04 +0000"  >&lt;p&gt;Introduction&lt;br/&gt;
------------&lt;/p&gt;

&lt;p&gt;The log shipper currently has a static shipping interval of 1 second with&lt;br/&gt;
a forceFlush capability when the buffer becomes full. This algorithm does not&lt;br/&gt;
augur well in the real-time environment and the bond between the buffer fill&lt;br/&gt;
and the log shipper frequency needs to be strengthened to allow shipping&lt;br/&gt;
to depend on incoming transaction load.&lt;/p&gt;

&lt;p&gt;Keeping this in mind the following refined shipping scheme is proposed for the&lt;br/&gt;
first version of replication. If required the design can be later modified to&lt;br/&gt;
a more efficient and complex implementations in later refinements of replication.&lt;/p&gt;


&lt;p&gt;Basic Idea&lt;br/&gt;
----------&lt;/p&gt;

&lt;p&gt;The Log Buffer will notify the Log Shipper when a buffer is full. When the Log &lt;br/&gt;
Shipper gets this notification it will decide the action to be done the following&lt;br/&gt;
way&lt;/p&gt;

&lt;p&gt;1) It will retrieve the fill information from the Log Buffer. The fill information&lt;br/&gt;
   is a indicator of how full the log is at any point of time.&lt;/p&gt;

&lt;p&gt;   fill information = (full buffers/Total Buffers)*100&lt;/p&gt;

&lt;p&gt;2) If the fill information is greater than 80 the log shipper will ship log records&lt;br/&gt;
   until the fill information returns a value less than 80. There will be no time&lt;br/&gt;
   delay between the ships.&lt;/p&gt;

&lt;p&gt;3) If the fill information is less than 80 but greater than 10 the log shipper will&lt;br/&gt;
   ship with a MID ms delay. (&lt;b&gt;MID has not been decided yet&lt;/b&gt;)&lt;/p&gt;

&lt;p&gt;4) If the fill information is less than 10 the log shipper will ship with a MAX ms delay&lt;br/&gt;
   or when a buffer becomes full whichever comes first. The delay however will not be&lt;br/&gt;
   smaller than MID.&lt;br/&gt;
   (&lt;b&gt;MAX &amp;gt; MID exact values of MAX has not been decided yet&lt;/b&gt;).&lt;/p&gt;

&lt;p&gt;Note: MID is a value that is only as large as not to affect the performance of the master database&lt;br/&gt;
      significantly.&lt;/p&gt;

&lt;p&gt;      max(MAX, DEFAULT_NUMBER_LOG_BUFFERS*MID)  is the maximum delay between a log record is committed at the master until &lt;br/&gt;
      it is replicated to the slave. Maybe we should make sure that MAX &amp;gt; DEFAULT_NUMBER_LOG_BUFFERS*MID. &lt;/p&gt;</comment>
                            <comment id="12563533" author="jorgenlo" created="Tue, 29 Jan 2008 14:38:03 +0000"  >&lt;p&gt;Thank you for the very clear description of the issue, Narayanan. This looks like a good idea to me. &lt;/p&gt;

&lt;p&gt;A question: How will MAX and MID be set? Do you intend for these to be hardcoded constants, properties that can be decided by the user or something else?&lt;/p&gt;</comment>
                            <comment id="12563553" author="narayanan" created="Tue, 29 Jan 2008 15:43:02 +0000"  >&lt;p&gt;&amp;gt;How will MAX and MID be set? Do you intend for these to be hardcoded constants, properties that can be decided by the user or &amp;gt;something else?&lt;/p&gt;

&lt;p&gt;I expect them to be harcoded constants for the first version of the replication release.&lt;br/&gt;
An improvement would be to make MID user configurable. &lt;/p&gt;

&lt;p&gt;MAX can be derived from this I guess? (Maybe we should make sure that&lt;br/&gt;
 MAX &amp;gt; DEFAULT_NUMBER_LOG_BUFFERS*MID ref. spec above).&lt;/p&gt;

&lt;p&gt;For the first release (atleast for the first version of this patch) I was hoping that if I do not get &lt;br/&gt;
any suggestions I will use a value of 50ms for MID.&lt;/p&gt;</comment>
                            <comment id="12564353" author="narayanan" created="Thu, 31 Jan 2008 10:01:56 +0000"  >&lt;p&gt;Implementation Nuances&lt;br/&gt;
----------------------&lt;/p&gt;

&lt;p&gt;Here, I will be explaining the changes that will be required to the appropriate classes for&lt;br/&gt;
implementating the Dynamic log shipping functionality as detailed above.&lt;/p&gt;

&lt;p&gt;org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer&lt;br/&gt;
----------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;This class will contain the functionality for &lt;/p&gt;

&lt;p&gt;1) calculating the Fill Information (&lt;b&gt;FI&lt;/b&gt;)&lt;br/&gt;
2) For notifying the log shipper each time a &lt;b&gt;log buffer element&lt;/b&gt; becomes full.&lt;/p&gt;

&lt;p&gt;1) calculating the Fill Information (&lt;b&gt;FI&lt;/b&gt;)&lt;br/&gt;
------------------------------------------&lt;/p&gt;

&lt;p&gt;FI will be an integer with a value ranging between 0-100&lt;/p&gt;

&lt;p&gt;FI = (dirtyBuffers.size()/DEFAULT_NUMBER_LOG_BUFFERS)*100&lt;/p&gt;

&lt;p&gt;where,&lt;/p&gt;

&lt;p&gt;dirtyBuffers is a LinkedList containing the log buffers elements with unsent log.&lt;/p&gt;

&lt;p&gt;DEFAULT_NUMBER_LOG_BUFFERS The total number of log buffers elements (filled and unfilled).&lt;/p&gt;

&lt;p&gt;A method,&lt;/p&gt;

&lt;p&gt;public int getFillInformation();&lt;/p&gt;

&lt;p&gt;will be added that will return the value of FI as calculated above.&lt;/p&gt;

&lt;p&gt;2) For notifying the log shipper each time a log buffer element becomes full.&lt;br/&gt;
----------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Each time a log shipper element becomes full we call &lt;b&gt;switchDirtyBuffer()&lt;/b&gt; in order to&lt;br/&gt;
Append the currentDirtyBuffer to dirtyBuffers, and make a fresh buffer element from &lt;br/&gt;
freeBuffers.&lt;/p&gt;

&lt;p&gt;We will add logic in the switchDirtyBuffer() method for notifying the Log Shipper.&lt;/p&gt;

&lt;p&gt;For more information on the LogShipper please refer to,&lt;br/&gt;
1) &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-2926&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-2926&lt;/a&gt;&lt;br/&gt;
2) &lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-3051&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-3051&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;org.apache.derby.impl.services.replication.master.LogShipper (interface)&lt;br/&gt;
------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;This interface will contain the definition of the method that will be called by the&lt;br/&gt;
log buffer.&lt;/p&gt;

&lt;p&gt;Will add a method workToDo that will be used by the Log Buffer to inform the log shipper&lt;br/&gt;
whenever a Log Buffer Element becomes full.&lt;/p&gt;

&lt;p&gt;org.apache.derby.impl.services.replication.master.AsynchronousLogShipper&lt;br/&gt;
------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;This class will contain the functionality for managing load in the Log buffer (by shipping log records)&lt;br/&gt;
,by using the FI information, during each buffer element full notification that is received.&lt;/p&gt;

&lt;p&gt;Two constants&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;MID = 50ms&lt;br/&gt;
MAX = 550ms (MAX &amp;gt; DEFAULT_NUMBER_LOG_BUFFERS*MID)&lt;/p&gt;

&lt;p&gt;attribute nextShippingTime&lt;br/&gt;
--------------------------&lt;/p&gt;

&lt;p&gt;will store the time at which the next log ship will happen and will be calculated as System.currentTimeMillis() +&lt;br/&gt;
shippingInterval in the run method.&lt;/p&gt;

&lt;p&gt;methods&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;constructor&lt;br/&gt;
-----------&lt;/p&gt;

&lt;p&gt;shippingInterval will be initialized to MID in the beginning.&lt;/p&gt;

&lt;p&gt;nextShippingTime will be initialized in the constructor initially to &lt;br/&gt;
System.currentTimeMills() + shippingInterval (i.e. MID).&lt;/p&gt;


&lt;p&gt;public void workToDo();&lt;br/&gt;
-----------------------&lt;/p&gt;

&lt;p&gt;Will be added that will be called by the log buffer each time a buffer element becomes full.&lt;/p&gt;

&lt;p&gt;The following steps will be used in this method&lt;/p&gt;

&lt;p&gt;a) Get FI from log buffer&lt;br/&gt;
b) If FI &amp;gt;= 80&lt;br/&gt;
   b.1) call shipALogChunk()&lt;br/&gt;
   b.2) repeat b) until FI &amp;lt; 80&lt;br/&gt;
   b.3) notify the log shipper thread.&lt;br/&gt;
c) If FI &amp;gt; 10 &amp;amp;&amp;amp; FI &amp;lt; 80&lt;br/&gt;
   c.1) calculate the time elapsed since last log ship.&lt;br/&gt;
        (For this before calling wait we need to store the&lt;br/&gt;
        time at which next transmit will happen.)&lt;br/&gt;
   c.2) If the time remaining for the next ship is less than&lt;br/&gt;
        MID then do not do anything.&lt;br/&gt;
   c.3) If the time elapsed since last ship is greater than&lt;br/&gt;
        MID notify the log shipper thread. (here we could have&lt;br/&gt;
        simply not shipped and waited for timeout to happen, but&lt;br/&gt;
        this would be a risk and a better option would be to ship)&lt;/p&gt;

&lt;p&gt;will check if the forceFlush method is required at all since all of the work done by the forceFlush&lt;br/&gt;
method can now be done by the workToDo method (see changes to MasterController).&lt;/p&gt;

&lt;p&gt;public void calculateWTfromFI() (WT - wait time)&lt;br/&gt;
-------------------------------&lt;/p&gt;

&lt;p&gt;will be used to calculate the wait time using the FI from the buffer.&lt;/p&gt;

&lt;p&gt;shippingInterval will be assigned to the return value from this method before calling&lt;br/&gt;
wait(shippingInterval) in the run method. *If this method returns -1 however we should&lt;br/&gt;
not call wait but just continue with the shipping.*&lt;/p&gt;

&lt;p&gt;The following steps will be used in this method&lt;/p&gt;

&lt;p&gt;a) FI &amp;gt;= 80 return -1 (&lt;b&gt;we should not call wait if the return value is -1&lt;/b&gt;)&lt;br/&gt;
b) FI &amp;gt; 10 and FI &amp;lt; 80 return MID&lt;br/&gt;
c) FI &amp;lt;= 10 return MAX&lt;/p&gt;

&lt;p&gt;run()&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;This method will be modified to&lt;/p&gt;

&lt;p&gt;1) shippingInterval will be assigned the return value&lt;br/&gt;
   of calculateWTfromFI().&lt;br/&gt;
2) calculate the next shipping time  which will be &lt;br/&gt;
   System.currentTimeMillis() + shippingInterval.&lt;/p&gt;

&lt;p&gt;For more information on the log shipper please refer to&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-3064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-3064&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;org.apache.derby.impl.services.replication.master.MasterController&lt;br/&gt;
------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;When a LogBufferFullException is thrown we will call workToDo instead of forceFlush.&lt;/p&gt;

&lt;p&gt;For more information on the MasterController please refer to&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/DERBY-2977&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/DERBY-2977&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12564363" author="jorgenlo" created="Thu, 31 Jan 2008 10:50:56 +0000"  >&lt;p&gt;Thanks for writing such a detailed implementation suggestion, Narayanan. This should make it easy to discuss the suggested solution and review the code later!&lt;/p&gt;

&lt;p&gt;I have only one concern with this, regarding workToDo case b):&lt;/p&gt;

&lt;p&gt;Basically, what you&apos;re saying, is that if the log becomes 80% full, the client thread should be used to ship log records. This choice has at least the following consequences: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The log buffer can never get fuller than 90% (with the current 10 LogBufferElements)&lt;/li&gt;
	&lt;li&gt;We start increasing the client response time even in cases where the log produced by the transaction that client is involved in would fit in the buffer.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Based on this, I think workToDo case b) could simply be reduced to on b.3, i.e. notify the log shipper thread that it has to wake up no matter what. By doing that, we would still need the forceFlush method, but the client thread would not be involved in log shipping until the buffer is 100% full.&lt;/p&gt;</comment>
                            <comment id="12564650" author="narayanan" created="Fri, 1 Feb 2008 06:02:20 +0000"  >&lt;p&gt;&amp;gt;Based on this, I think workToDo case b) could simply be reduced &lt;br/&gt;
&amp;gt;to on b.3, i.e. notify the log shipper thread that it has to wake up &lt;br/&gt;
&amp;gt;no matter what. By doing that, we would still need the forceFlush &lt;br/&gt;
&amp;gt;method, but the client thread would not be involved in log shipping&lt;br/&gt;
&amp;gt;until the buffer is 100% full.&lt;/p&gt;

&lt;p&gt;makes sense to notify the log shipper thread and let it handle the log shipping.&lt;br/&gt;
I agree with your comments Jorgen! I will remove b.1 and b.2 and shall retain&lt;br/&gt;
forceFlush.&lt;/p&gt;</comment>
                            <comment id="12565086" author="narayanan" created="Sat, 2 Feb 2008 17:01:49 +0000"  >&lt;p&gt;Pls find attached the patch for the implementation of dynamic log shipping. I have to test this code&lt;br/&gt;
for various cases but did not see that as stopping a review of this patch since the design,&lt;br/&gt;
and the subsequent changes required have been described in detail in previous comments on this patch.&lt;/p&gt;

&lt;p&gt;I thought that the workToDo() method can be used in the place of the forceFlush() method. When a &lt;br/&gt;
LogBufferFullException occurs in the MasterController the FI &amp;gt; 80 so this method would automatically&lt;br/&gt;
result in shipALogChunk() being called. The only difference from calling forceFlush() being that we do an&lt;br/&gt;
additional checking of FI before shipping. I am not sure this should be a deterrent to using this method.&lt;br/&gt;
Consequently,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed the use of forceFlush() when a LogBufferFullException is thrown and replaced it with workToDo().&lt;/li&gt;
	&lt;li&gt;Removed the forceFlush() method from the LogBuffer interface and its AsynchronousLogShipper implementation&lt;br/&gt;
     as it will not be used anymore.&lt;/li&gt;
	&lt;li&gt;workToDo() will now be called both when a log buffer element becomes full and when the log buffer becomes&lt;br/&gt;
     full&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12565269" author="narayanan" created="Mon, 4 Feb 2008 04:51:16 +0000"  >&lt;p&gt;On retrospection the forceFlush is required, it would be very&lt;br/&gt;
bad for a method that is called upon receiving a LogBufferFullException&lt;br/&gt;
to exit without shipping log and freeing space in the log buffer.&lt;br/&gt;
It is OK for the log shipper thread to take over from where the&lt;br/&gt;
forceFlush thread leaves.&lt;/p&gt;

&lt;p&gt;I will post this patch again with the forceFlush method!&lt;/p&gt;</comment>
                            <comment id="12565275" author="narayanan" created="Mon, 4 Feb 2008 05:33:07 +0000"  >&lt;p&gt;Modified v1 to switch back to using forceFlush!&lt;/p&gt;</comment>
                            <comment id="12567058" author="oysteing" created="Fri, 8 Feb 2008 14:53:49 +0000"  >&lt;p&gt;Thanks, for the patch Narayanan.  I think I have convinced myself that&lt;br/&gt;
the code would work, but I am not sure that it matches the description&lt;br/&gt;
of the basic idea above.  The description says:&lt;/p&gt;

&lt;p&gt;&amp;gt; If the fill information is less than 10 the log shipper will ship&lt;br/&gt;
&amp;gt; with a MAX ms delay or when a buffer becomes full whichever comes&lt;br/&gt;
&amp;gt; first.&lt;/p&gt;

&lt;p&gt;I do not think this is what is implemented.  If there is 10 or more&lt;br/&gt;
log buffers, it seems workToDo() will do nothing when the first log&lt;br/&gt;
buffer goes full.  I would consider reasoning around lastShippingTime&lt;br/&gt;
instead of nextShippingTime.  I think that would also make the&lt;br/&gt;
logic easier to understand.  In other words, I suggest something like&lt;br/&gt;
this in workToDo():&lt;/p&gt;

&lt;p&gt;   if (fi &amp;gt;= 80) &lt;/p&gt;
{
       notify();
   }
&lt;p&gt; else if (System.currentTimeMillis() - lastShippingTime) &amp;gt; MID) &lt;/p&gt;
{
       // Minimum MID time between messages unless buffer is almost full
       notify();
   }

&lt;p&gt;Some minor things:&lt;/p&gt;

&lt;p&gt;1. It seems to me that MIN would be a more descriptive name than MID.&lt;br/&gt;
   It is the minimum interval when not in &quot;Panic mode&quot;.&lt;/p&gt;

&lt;p&gt;2. I suggest increasing MID to 100.&lt;/p&gt;

&lt;p&gt;3. The MAX value could be higher.  I would think a default latency of&lt;br/&gt;
   5 seconds should be acceptable.&lt;/p&gt;

&lt;p&gt;4. The last sentence of Javadoc for MAX needs an explanation.  &lt;/p&gt;

&lt;p&gt;5. ReplicationLogBuffer: Why add a new constructor?  I think it would&lt;br/&gt;
   be better to just add a parameter to the existing.  Having the&lt;br/&gt;
   original constructor, opens for objects that will give null pointer&lt;br/&gt;
   exceptions where mf is referred.&lt;/p&gt;

&lt;p&gt;6. Comments in ReplicationLogBuffer refers to LogShipper, but&lt;br/&gt;
   strictly speaking ReplicationLogBuffer does not know of any&lt;br/&gt;
   LogShipper, just that the MasterFactory wants to know when there is&lt;br/&gt;
   more work to be done.&lt;/p&gt;

&lt;p&gt;7. I think you should use final fields for the thresholds (10/80).  That&lt;br/&gt;
    would make them easier to change if necessary.&lt;/p&gt;</comment>
                            <comment id="12567418" author="narayanan" created="Sun, 10 Feb 2008 09:55:35 +0000"  >&lt;p&gt;Thank you for the comments/reviews on the patch Oystein!&lt;/p&gt;

&lt;p&gt;I have done all the changes as suggested by you.&lt;/p&gt;

&lt;p&gt;Some additional changes are enumerated and explained below,&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed the Class level comment to indicate that the shipping happens&lt;br/&gt;
  when notification is received from the log buffer also. Also removed&lt;br/&gt;
  some comments that are not valid anymore.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lastShippingTime is initialized to System.currentTimemillis() in the&lt;br/&gt;
  beginning. This would mean that the first shipping for medium load&lt;br/&gt;
  FI_LOW &amp;lt; fi &amp;lt; FI_HIGH cannot happen unless MIN ms has elapsed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lastShippingTime is initialized in the shipALogChunk() method.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12567580" author="oysteing" created="Mon, 11 Feb 2008 10:56:50 +0000"  >&lt;p&gt;Thanks for addressing my comments, Narayanan. &lt;br/&gt;
Patch v3 commited as revision 620453.&lt;/p&gt;</comment>
                            <comment id="12567603" author="jorgenlo" created="Mon, 11 Feb 2008 12:21:30 +0000"  >&lt;p&gt;I tried running replication with the new log shipper. Seems mf is never initialized in ReplicationLogBuffer.&lt;/p&gt;

&lt;p&gt;Master-side start replication (slave side behaves normally):&lt;/p&gt;

&lt;p&gt;$ ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:t1&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:t1;startMaster=true;slaveHost=localhost&apos;;&lt;br/&gt;
ij(CONNECTION1)&amp;gt; Exception in thread &quot;Thread-1&quot; java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer.switchDirtyBuffer(ReplicationLogBuffer.java:319)&lt;br/&gt;
        at org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer.next(ReplicationLogBuffer.java:187)&lt;br/&gt;
        at org.apache.derby.impl.services.replication.master.AsynchronousLogShipper.shipALogChunk(AsynchronousLogShipper.java:213)&lt;br/&gt;
        at org.apache.derby.impl.services.replication.master.AsynchronousLogShipper.run(AsynchronousLogShipper.java:165)&lt;/p&gt;</comment>
                            <comment id="12567607" author="narayanan" created="Mon, 11 Feb 2008 12:35:18 +0000"  >&lt;p&gt;Thank you for the commit Oystein &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12567612" author="narayanan" created="Mon, 11 Feb 2008 12:42:26 +0000"  >&lt;p&gt;sorry my mistake &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Pls find patch attached that fixes this issue&lt;/p&gt;</comment>
                            <comment id="12567630" author="oysteing" created="Mon, 11 Feb 2008 13:15:53 +0000"  >&lt;p&gt;Committed patch v4 as revision 620483.&lt;br/&gt;
Checked that starting replication works.&lt;/p&gt;</comment>
                            <comment id="12567648" author="knutanders" created="Mon, 11 Feb 2008 14:45:00 +0000"  >&lt;p&gt;Could we also make mf final? Then we would have caught the error at compile time.&lt;/p&gt;</comment>
                            <comment id="12567656" author="scheur" created="Mon, 11 Feb 2008 14:57:09 +0000"  >&lt;p&gt;&amp;gt; Knut Anders Hatlen commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3359&quot; title=&quot;The log shipper needs to be modified to vary the shipping intervals dynamically (based on load)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3359&quot;&gt;&lt;del&gt;DERBY-3359&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Could we also make mf final? Then we would have caught the error at compile time.&lt;/p&gt;

&lt;p&gt;Good proposal.  Fix committed as revision 620499.&lt;/p&gt;</comment>
                            <comment id="12568206" author="knutanders" created="Tue, 12 Feb 2008 16:47:41 +0000"  >&lt;p&gt;The workToDo() method added in v3 seems to have a bug, see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3406&quot; title=&quot;IllegalMonitorStateException in ...replication.master.AsynchronousLogShipper.workToDo(:320)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3406&quot;&gt;&lt;del&gt;DERBY-3406&lt;/del&gt;&lt;/a&gt;. It should probably have a synchronized block around the calls to notify().&lt;/p&gt;</comment>
                            <comment id="12568443" author="narayanan" created="Wed, 13 Feb 2008 06:21:50 +0000"  >&lt;p&gt;Thank you for pointing this out. I will produce a fix soon.&lt;/p&gt;</comment>
                            <comment id="12569310" author="narayanan" created="Fri, 15 Feb 2008 16:36:49 +0000"  >&lt;p&gt;All relevant patches have been committed. Resolving issue!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12374606" name="DynamicLogShipping_v1.diff" size="15219" author="narayanan" created="Sat, 2 Feb 2008 17:01:48 +0000"/>
                            <attachment id="12374607" name="DynamicLogShipping_v1.stat" size="456" author="narayanan" created="Sat, 2 Feb 2008 17:01:49 +0000"/>
                            <attachment id="12374660" name="DynamicLogShipping_v2.diff" size="12564" author="narayanan" created="Mon, 4 Feb 2008 05:33:07 +0000"/>
                            <attachment id="12374661" name="DynamicLogShipping_v2.stat" size="456" author="narayanan" created="Mon, 4 Feb 2008 05:33:07 +0000"/>
                            <attachment id="12375172" name="DynamicLogShipping_v3.diff" size="13338" author="narayanan" created="Sun, 10 Feb 2008 09:55:34 +0000"/>
                            <attachment id="12375173" name="DynamicLogShipping_v3.stat" size="456" author="narayanan" created="Sun, 10 Feb 2008 09:55:35 +0000"/>
                            <attachment id="12375224" name="DynamicLogShipping_v4.diff" size="631" author="narayanan" created="Mon, 11 Feb 2008 12:42:26 +0000"/>
                            <attachment id="12375225" name="DynamicLogShipping_v4.stat" size="95" author="narayanan" created="Mon, 11 Feb 2008 12:42:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Jan 2008 14:38:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30822</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zdr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39550</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>