<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:27 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-392/DERBY-392.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-392] Disable creating indexes on long varchar for bit data. Long varchar column doesn&apos;t allow creating indexes already.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-392</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I guess I did not articulate my reasons for suggesting removal of index support for &apos;long varchar for bit data&apos; completely.&lt;/p&gt;

&lt;p&gt;    1) Long varchar types are not comparable... If they are not comparable, it should not be possible to use them in GROUP BY, ORDER BY or allow regular B-Tree indexes.&lt;br/&gt;
   2) Also, long varchar types tend to be long in size and hence the regular B-Tree mechanism is not a suitable way to index them. Dan also mentioned they become ineffective for keys longer than half a page size.&lt;/p&gt;

&lt;p&gt;It should not be possible to create an index on &apos;long varchar for bit data&apos; datatypes. Derby currently doesn&apos;t allow creating indexes on &apos;long varchar&apos; datatypes and the same should apply for it&apos;s bit data equivalent too.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table longchar ( i int, c long varchar);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create index longIdx on longchar(c);&lt;br/&gt;
ERROR X0X67: Columns of type &apos;LONG VARCHAR&apos; may not be used in CREATE INDEX, ORD&lt;br/&gt;
ER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because compari&lt;br/&gt;
sons are not supported for that type.&lt;br/&gt;
ij&amp;gt; create table longcharBitData ( i int, c long varchar for bit data);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; create index longIdx on longcharBitData(c);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;/p&gt;

&lt;p&gt;Derby also seems to allow GROUP BY and/or ORDER BY on LONG VARCHAR FOR BIT DATA types. I believe this is incorrect too.&lt;br/&gt;
select c from longcharBitData group by c;&lt;br/&gt;
C&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------------------------------&lt;br/&gt;
------------------------------------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;br/&gt;
ij&amp;gt; select c from longcharBitData group by c order by c;&lt;br/&gt;
C&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------------------------------&lt;br/&gt;
------------------------------------------------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;/p&gt;</description>
                <environment>generic</environment>
        <key id="12311674">DERBY-392</key>
            <summary>Disable creating indexes on long varchar for bit data. Long varchar column doesn&apos;t allow creating indexes already.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bandaram">Satheesh Bandaram</assignee>
                                    <reporter username="bandaram">Satheesh Bandaram</reporter>
                        <labels>
                    </labels>
                <created>Sat, 25 Jun 2005 07:18:53 +0100</created>
                <updated>Fri, 14 Oct 2005 09:47:06 +0100</updated>
                            <resolved>Fri, 14 Oct 2005 09:47:06 +0100</resolved>
                                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.2.1</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12314431" author="djd" created="Sat, 25 Jun 2005 08:02:19 +0100"  >&lt;p&gt;Not sure why we would remove a working feature, applications may be dependent on it. &lt;br/&gt;
Now it may be that such indexes are not really working beause the btree has a limit on key length that would be  make them not useable if the key value was over 1/2 page length.&lt;br/&gt;
Or maybe if long varchar for bit data is not comparable then obviously they can&apos;t be used and so it&apos;s a bug allowing such an index.&lt;/p&gt;</comment>
                            <comment id="12314860" author="bandaram" created="Fri, 1 Jul 2005 15:38:43 +0100"  >&lt;p&gt;Submitting a patch for review. I think we need to document that Derby doesn&apos;t support indexing, group by, order by on long varchar for bit data anymore in release notes, in case some one is already using this incorrect behavior.&lt;/p&gt;

&lt;p&gt;I think it would be good to port this fix to 10.1, so we can prevent more incorrect dependence on this behavior.&lt;/p&gt;</comment>
                            <comment id="12331337" author="bandaram" created="Wed, 5 Oct 2005 11:05:43 +0100"  >&lt;p&gt;Updated patch with master updates. I will merge this into trunk and then port to 10.1 soon.&lt;/p&gt;</comment>
                            <comment id="12331421" author="bandaram" created="Thu, 6 Oct 2005 04:33:26 +0100"  >&lt;p&gt;This fix has been submitted.&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\iapi\types\TypeId.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\aggbuiltin.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\bit.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\groupBy.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\implicitConversions.out&lt;br/&gt;
Transmitting file data .....&lt;br/&gt;
Committed revision 295070.&lt;/p&gt;</comment>
                            <comment id="12331427" author="bandaram" created="Thu, 6 Oct 2005 04:45:59 +0100"  >&lt;p&gt;Ported fix from TRUNK to 10.1 branch.&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\iapi\types\TypeId.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\aggbuiltin.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\bit.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\groupBy.out&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\master\implicitConversions.out&lt;br/&gt;
Transmitting file data .....&lt;br/&gt;
Committed revision 295076.&lt;/p&gt;</comment>
                            <comment id="12331428" author="bandaram" created="Thu, 6 Oct 2005 04:51:53 +0100"  >&lt;p&gt;I have verified the fix addresses the problem in 10.2 build.&lt;/p&gt;</comment>
                            <comment id="12332047" author="bandaram" created="Fri, 14 Oct 2005 09:46:46 +0100"  >&lt;p&gt;Reopening to include 10.1.1.2 fixIn.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12314734" name="Derby392" size="7081" author="bandaram" created="Wed, 5 Oct 2005 11:05:43 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 25 Jun 2005 07:02:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21930</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy17n3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40888</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>