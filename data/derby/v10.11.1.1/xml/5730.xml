<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5730/DERBY-5730.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5730] DataDictionaryImpl leaks references to itself via SYSFUN_AD</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5730</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;DataDictionaryImpl contains a static field called SYSFUN_AD, which holds an array of AliasDescriptor objects for the functions in the SYSFUN schema. This array is lazily populated as the functions are called, and it is shared between all DataDictionaryImpl instances on the system.&lt;/p&gt;

&lt;p&gt;The AliasDescriptors contain references to the DataDictionaryImpl that created them, so SYSFUN_AD may end up referencing indirectly to a number of different DataDictionaryImpl instances, depending on where the respective SYSFUN functions are called the first time. Once an AliasDescriptor has been added to SYSFUN_AD, it stays there until the DataDictionaryImpl class is unloaded (in most cases, until the JVM terminates). This means the array may hold references to DataDictionaryImpl instances that belong to database instances that have been shut down, and that the memory held by those database instances never becomes eligible for garbage collection.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12553108">DERBY-5730</key>
            <summary>DataDictionaryImpl leaks references to itself via SYSFUN_AD</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Apr 2012 09:55:17 +0100</created>
                <updated>Thu, 1 Aug 2013 20:10:29 +0100</updated>
                            <resolved>Tue, 8 May 2012 12:30:20 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13263518" author="knutanders" created="Fri, 27 Apr 2012 10:03:56 +0100"  >&lt;p&gt;Attaching a repro that exposes the leak.&lt;/p&gt;

&lt;p&gt;The repro repeatedly boot a database, performs some db operations, and shuts down the database. One of the db operations it performs, is preparing a statement that calls one of the SYSFUN functions, and it is a different function in each iteration.&lt;/p&gt;

&lt;p&gt;When running the repro with -Xmx20M, I see an OutOfMemoryError. If I comment out the preparing of the function call, the repro completes successfully with -Xmx5M.&lt;/p&gt;</comment>
                            <comment id="13263522" author="knutanders" created="Fri, 27 Apr 2012 10:05:12 +0100"  >&lt;p&gt;Marking the bug as a crash, since it&apos;s a memory leak that could potentially cause OOME.&lt;/p&gt;</comment>
                            <comment id="13268236" author="knutanders" created="Fri, 4 May 2012 11:09:48 +0100"  >&lt;p&gt;The attached patch makes each DataDictionaryImpl instance have its own copy of the AliasDescriptors for the SYSFUN functions. This avoids keeping references to old dictionary instances in a shared static array, and allows gc of the instances before the DataDictionaryImpl class itself is eligible for gc.&lt;/p&gt;

&lt;p&gt;The patch also adds a new test to the memory suite. The test reports an OOME without the fix.&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly with the patch.&lt;/p&gt;</comment>
                            <comment id="13268513" author="mikem" created="Fri, 4 May 2012 17:38:42 +0100"  >&lt;p&gt;the patch looks good to me.&lt;/p&gt;

&lt;p&gt;Can you comment &lt;br/&gt;
on expected performance degredation now that we are caching less, I don&apos;t know what work the caching is saving.  Since we are still caching privately I think only expected degredation is on first call for booted db, though I know there are some applications out there that boot very often.  If there were no memory consequences does the existing&lt;br/&gt;
implementation have any correctness issues?  &lt;/p&gt;</comment>
                            <comment id="13269563" author="knutanders" created="Mon, 7 May 2012 13:15:08 +0100"  >&lt;p&gt;&amp;gt; Can you comment on expected performance degredation now that we are&lt;br/&gt;
&amp;gt; caching less, I don&apos;t know what work the caching is saving. Since we&lt;br/&gt;
&amp;gt; are still caching privately I think only expected degredation is on&lt;br/&gt;
&amp;gt; first call for booted db, though I know there are some applications&lt;br/&gt;
&amp;gt; out there that boot very often.&lt;/p&gt;

&lt;p&gt;That&apos;s right, degradation should only be expected on the first call of&lt;br/&gt;
a SYSFUN function after the second db boot.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what degradation to expect myself, so I&apos;ve written a&lt;br/&gt;
small test program that executes the following statement repeatedly:&lt;/p&gt;

&lt;p&gt;  values atan(tan(asin(sin(acos(cos(pi()))))))&lt;/p&gt;

&lt;p&gt;The statement calls seven different SYSFUN functions, and I would&lt;br/&gt;
expect it to be very close to the worst case since VALUES statements&lt;br/&gt;
are among the cheapest ones to compile.&lt;/p&gt;

&lt;p&gt;I also turned off the statement cache, so that each execution of the&lt;br/&gt;
statement would cause a compilation (it is during the bind phase of&lt;br/&gt;
the compilation the SYSFUN_AD array is accessed).&lt;/p&gt;

&lt;p&gt;Using the test program, I compared clean trunk to a variant that was&lt;br/&gt;
modified to skip the caching altogether. That is, I commented out the&lt;br/&gt;
following line in DataDictionaryImpl.getRoutineList():&lt;/p&gt;

&lt;p&gt;          DataDictionaryImpl.SYSFUN_AD&lt;span class=&quot;error&quot;&gt;&amp;#91;f&amp;#93;&lt;/span&gt; = ad;&lt;/p&gt;

&lt;p&gt;The variant that didn&apos;t cache the alias descriptor, executed the&lt;br/&gt;
statement 2.5% slower on average in my environment.&lt;/p&gt;

&lt;p&gt;Since this degradation will only be observed when SYSFUN functions are&lt;br/&gt;
compiled for the first time in newly booted databases, I&apos;d say it&apos;s&lt;br/&gt;
negligible.&lt;/p&gt;

&lt;p&gt;One might perhaps even say that the gains of the alias descriptor&lt;br/&gt;
cache are so small that they don&apos;t justify the extra memory and code&lt;br/&gt;
complexity, but I don&apos;t think we want to go there in this JIRA.&lt;/p&gt;

&lt;p&gt;&amp;gt; If there were no memory consequences does the existing&lt;br/&gt;
&amp;gt; implementation have any correctness issues?&lt;/p&gt;

&lt;p&gt;Not that I have been able to find. The data dictionary instance is&lt;br/&gt;
only used in the following situations, as far as I can tell:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;At initialization time of the AliasDescriptor to find the UUID of&lt;br/&gt;
  the SYSFUN schema. This doesn&apos;t cause any problems, since the data&lt;br/&gt;
  dictionary instance is still alive at that time, and the UUID of the&lt;br/&gt;
  SYSFUN schema is the same in all databases.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;When an alias is dropped, but the functions in SYSFUN can&apos;t be&lt;br/&gt;
  dropped.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;During invalidation, but SYSFUN functions can&apos;t be invalidated.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13269566" author="knutanders" created="Mon, 7 May 2012 13:31:19 +0100"  >&lt;p&gt;Attaching the program I used to test the performance impact.&lt;/p&gt;</comment>
                            <comment id="13270373" author="knutanders" created="Tue, 8 May 2012 12:30:21 +0100"  >&lt;p&gt;Committed revision 1335423.&lt;/p&gt;</comment>
                            <comment id="13709172" author="mamtas" created="Tue, 16 Jul 2013 00:28:22 +0100"  >&lt;p&gt;I am working on backporting the fix to 10.8 codeline and I get error for the newly added test through the patch(I am using IBM jdk1.6 to run the test) &lt;br/&gt;
1) testLeak(org.apache.derbyTesting.functionTests.tests.memory.Derby5730Test)java.security.AccessControlException: Access denied (java.io.FilePermission C:\Program Files (x86)\IBM\Java60\jre\bin\java execute)&lt;br/&gt;
        at java.security.AccessController.checkPermission(AccessController.java:108)&lt;br/&gt;
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:533)&lt;br/&gt;
        at java.lang.SecurityManager.checkExec(SecurityManager.java:780)&lt;br/&gt;
        at java.lang.ProcessBuilder.start(ProcessBuilder.java:448)&lt;br/&gt;
        at java.lang.Runtime.exec(Runtime.java:593)&lt;br/&gt;
        at java.lang.Runtime.exec(Runtime.java:466)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase$8.run(BaseTestCase.java:558)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(AccessController.java:251)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.execJavaCmd(BaseTestCase.java:554)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.memory.Derby5730Test.testLeak(Derby5730Test.java:64)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;/p&gt;


&lt;p&gt;The error happens whether the test is run stand alone, or as part of the entire junit suite. I ran the test with classes and with jars and still get the same error. Do I need to change something in derby_tests.policy for this test to run correctly? I have been looking at derby mailing list to look for a fix for access control exception but haven&apos;t found anything yet. Thanks&lt;/p&gt;</comment>
                            <comment id="13709599" author="knutanders" created="Tue, 16 Jul 2013 09:20:33 +0100"  >&lt;p&gt;The required execute permission was added to derby_tests.policy in 10.9 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4249&quot; title=&quot;Create a simple store recovery test in JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4249&quot;&gt;&lt;del&gt;DERBY-4249&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13709601" author="knutanders" created="Tue, 16 Jul 2013 09:22:41 +0100"  >&lt;p&gt;If this fix is backported, please make sure to backport &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5753&quot; title=&quot;nighly regression test failure in testLeak(org.apache.derbyTesting.functionTests.tests.memory.Derby5730Test) process failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5753&quot;&gt;&lt;del&gt;DERBY-5753&lt;/del&gt;&lt;/a&gt; as well to avoid regression test failures.&lt;/p&gt;</comment>
                            <comment id="13711292" author="jira-bot" created="Wed, 17 Jul 2013 18:12:51 +0100"  >&lt;p&gt;Commit 1504205 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt; in branch &apos;code/branches/10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1504205&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1504205&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5730&quot; title=&quot;DataDictionaryImpl leaks references to itself via SYSFUN_AD&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5730&quot;&gt;&lt;del&gt;DERBY-5730&lt;/del&gt;&lt;/a&gt; (DataDictionaryImpl leaks references to itself via SYSFUN_AD)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5753&quot; title=&quot;nighly regression test failure in testLeak(org.apache.derbyTesting.functionTests.tests.memory.Derby5730Test) process failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5753&quot;&gt;&lt;del&gt;DERBY-5753&lt;/del&gt;&lt;/a&gt;: (Derby5730Test fails on Java 5)&lt;/p&gt;


&lt;p&gt;Backporting to 10.8. Original fix contributed by Knut.&lt;/p&gt;</comment>
                            <comment id="13711298" author="mamtas" created="Wed, 17 Jul 2013 18:15:16 +0100"  >&lt;p&gt;Knut, thanks for pointing to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4249&quot; title=&quot;Create a simple store recovery test in JUnit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4249&quot;&gt;&lt;del&gt;DERBY-4249&lt;/del&gt;&lt;/a&gt; for execute permission. With those changes to derby_tests.policy, the test runs fine. derbyall and junit ran fine with the backport of this jira and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5753&quot; title=&quot;nighly regression test failure in testLeak(org.apache.derbyTesting.functionTests.tests.memory.Derby5730Test) process failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5753&quot;&gt;&lt;del&gt;DERBY-5753&lt;/del&gt;&lt;/a&gt;. I have committed the backport to 10.8&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12656863">DERBY-6289</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12554525">DERBY-5753</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12592443" name="DERBY5730_backport_patch1_diff.txt" size="2135" author="mamtas" created="Tue, 16 Jul 2013 00:28:22 +0100"/>
                            <attachment id="12524832" name="Sysfun.java" size="4408" author="knutanders" created="Fri, 27 Apr 2012 10:03:55 +0100"/>
                            <attachment id="12525836" name="SysfunPerftest.java" size="872" author="knutanders" created="Mon, 7 May 2012 13:31:18 +0100"/>
                            <attachment id="12525589" name="d5730-1a.diff" size="8948" author="knutanders" created="Fri, 4 May 2012 11:09:48 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 4 May 2012 16:38:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>237124</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0aq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35556</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>