<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:34:12 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4544/DERBY-4544.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4544] Referencing streaming CLOBs in (some) generated column clauses fails</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4544</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Referencing a CLOB represented as a stream in generated columns can lead to data corruption or that the query fails.&lt;/p&gt;

&lt;p&gt;For instance, with 10.5:&lt;br/&gt;
create table t (id int, myclob clob, clen generated always as (length(myclob)));&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Insert CLOB using the streaming APIs (setCharacterStream).&lt;br/&gt;
The exception &apos;java.lang.ClassCastException: org.apache.derby.iapi.types.ReaderToUTF8Stream cannot be cast to org.apache.derby.iapi.types.Resetable&apos;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;On trunk the same query results in data corruption, and this isn&apos;t detected before the value is read back from store.&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br/&gt;
Don&apos;t use the streaming APIs when using CLOBs in generated columns. This increases the memory footprint, and may not feasible for large CLOBs.&lt;/p&gt;

&lt;p&gt;FYI, BLOB deals with this by materializing the value, which effectively equals to using the workaround mentioned above.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12455894">DERBY-4544</key>
            <summary>Referencing streaming CLOBs in (some) generated column clauses fails</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="kristwaa">Kristian Waagan</reporter>
                        <labels>
                            <label>CLOB</label>
                            <label>derby_triage10_8</label>
                    </labels>
                <created>Wed, 10 Feb 2010 12:45:03 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:33 +0100</updated>
                            <resolved>Mon, 26 Mar 2012 18:38:32 +0100</resolved>
                                    <version>10.5.3.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.3.2</fixVersion>
                    <fixVersion>10.6.2.4</fixVersion>
                    <fixVersion>10.7.1.4</fixVersion>
                    <fixVersion>10.8.1.2</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12833823" author="kristwaa" created="Mon, 15 Feb 2010 14:54:45 +0000"  >&lt;p&gt;One of the messages one might see due to this error:&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;ASSERT FAILED Less than one byte per char, CharacterStreamBuiler@31380681:bufferable=false, isPositionAware=false, curBytePos=0, curCharPos=0, dataOffset=2, byteLength=24932, charLength=65534, maxCharLength=9223372036854775807, stream=class org.apache.derby.iapi.services.io.FormatIdInputStream: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;

&lt;p&gt;In insane builds YMMV, depending on the contents of the value you insert. You may get an IOException when you read back the value, or you can get wrong results.&lt;br/&gt;
Here&apos;s an example where 65536 chars have been inserted as a stream:&lt;br/&gt;
id=4, clen=65536, length(myclob)=65534, String(myclob).length()=24930&lt;/p&gt;

&lt;p&gt;clen is the generated column, length(myclob) is obtained after the insert as select length(myclob), and the last number is obtained as rs.getString(1).length().&lt;/p&gt;</comment>
                            <comment id="13016494" author="rhillegas" created="Wed, 6 Apr 2011 20:50:35 +0100"  >&lt;p&gt;Attaching Test_4544.java. This class demonstrates a problem when you follow the steps described in this issue. Since Kristian logged this issue, the symptoms of the problem seem to have changed. The repro shows that Derby raises the following exception when you try to initially position a ResultSet for reading the corrupt Clob:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.sql.SQLException: Restore of a serializable or SQLData object of class , attempted to read more data than was originally stored&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:98)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:278)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:348)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2290)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4405)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:470)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:374)&lt;br/&gt;
	at Test_4544.read(Test_4544.java:41)&lt;br/&gt;
	at Test_4544.main(Test_4544.java:18)&lt;/p&gt;</comment>
                            <comment id="13018370" author="rhillegas" created="Mon, 11 Apr 2011 15:31:41 +0100"  >&lt;p&gt;Attaching a revised version of the repro. This fixes a bug in the repro, allowing it to run under the network driver.&lt;/p&gt;</comment>
                            <comment id="13018375" author="rhillegas" created="Mon, 11 Apr 2011 15:49:31 +0100"  >&lt;p&gt;Attaching derby-4544-01-ab-shortCircuitLengthOptimization.diff. This patch makes the repro behave correctly. I will run regression tests. More tests need to be written to verify that other generation expressions work on streaming Clobs.&lt;/p&gt;

&lt;p&gt;The SQLClob.getLength() method is a little tricky. It ends up calling getStreamWithDescriptor(). That method has a prominent comment saying that it doesn&apos;t expect to be called more than once--which happens if your generation clause invokes the length() function on a streaming Clob.&lt;/p&gt;

&lt;p&gt;There is no SQLBlob.getLength() method. Instead, if you call the length() function on a streaming Blob, you will get the getLength() behavior of the superclass, which materializes the Blob.&lt;/p&gt;

&lt;p&gt;The fix is to make SQLClob.getLength() first check whether it is operating on a non-resetable stream. If the stream is not resetable, then the assumptions of getStreamWithDescriptor() will be violated. For non-resetable streams, SQLClob.getLength() will just do what Blobs do, i.e., defer to the getLength() method in the superclass which materializes the Clob.&lt;/p&gt;

&lt;p&gt;This will be inefficient--but that is better than causing a data corruption.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/types/SQLClob.java&lt;/p&gt;

&lt;p&gt;1 line fix to force materialization if getLength() is called on a non-resetable stream.&lt;/p&gt;

&lt;p&gt;----------------&lt;/p&gt;

&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DummyReader.java&lt;br/&gt;
M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobTest.java&lt;/p&gt;

&lt;p&gt;Test case demonstrating the fix.&lt;/p&gt;</comment>
                            <comment id="13018399" author="rhillegas" created="Mon, 11 Apr 2011 16:52:22 +0100"  >&lt;p&gt;Attaching a new version of the repro. This experiments with additional generation expressions. The additional expressions test the builtin substr, locate, upper, and trim functions as well as a user-written function. In all of these cases, Derby behaves correctly. It appears to me that length() was the only builtin function which caused this bug. For other Derby builtin functions (and user-written functions), Derby materializes the Clob. This gives me some assurance that the solution, although inefficient, makes Derby behave in a regular way. I will incorporate these additional tests into the new test case.&lt;/p&gt;</comment>
                            <comment id="13018426" author="rhillegas" created="Mon, 11 Apr 2011 17:49:15 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-4544-01-ab-shortCircuitLengthOptimization.diff.&lt;/p&gt;</comment>
                            <comment id="13018519" author="rhillegas" created="Mon, 11 Apr 2011 20:15:58 +0100"  >&lt;p&gt;Attaching a new version of the patch, derby-4544-01-ac-shortCircuitLengthOptimization.diff. This includes the extra test cases from the revised repro. Committed at subversion revision 1091169.&lt;/p&gt;</comment>
                            <comment id="13018521" author="rhillegas" created="Mon, 11 Apr 2011 20:21:43 +0100"  >&lt;p&gt;Ported 1091169 from trunk to 10.8 branch at subversion revision 1091172.&lt;/p&gt;</comment>
                            <comment id="13018522" author="rhillegas" created="Mon, 11 Apr 2011 20:23:59 +0100"  >&lt;p&gt;Resolving this issue. We may want to figure out how to make the builtin operators (including length()) more efficient for this use case. However, I see that as a separate issue.&lt;/p&gt;</comment>
                            <comment id="13041221" author="kristwaa" created="Mon, 30 May 2011 19:20:59 +0100"  >&lt;p&gt;Reopening to assign to Rick.&lt;/p&gt;</comment>
                            <comment id="13041222" author="kristwaa" created="Mon, 30 May 2011 19:21:41 +0100"  >&lt;p&gt;Closing issue.&lt;/p&gt;</comment>
                            <comment id="13229382" author="kmarsden" created="Wed, 14 Mar 2012 17:19:47 +0000"  >&lt;p&gt;Reopen for 10.5 backport consideration. If working on the backport for this issue. Temporarily assign yourself and add a comment that you are working on it. When finished, reresolve with the new fix versions or label backport_reject_10_x as appropriate.&lt;/p&gt;</comment>
                            <comment id="13232295" author="mikem" created="Sun, 18 Mar 2012 16:25:25 +0000"  >&lt;p&gt;temp assigning to myself to do backports.&lt;/p&gt;</comment>
                            <comment id="13238592" author="mikem" created="Mon, 26 Mar 2012 18:38:21 +0100"  >&lt;p&gt;backported to 10.7, 10.6, and 10.5.  Don&apos;t plan on any more backports of this issue at this time.  resetting original owner.&lt;/p&gt;</comment>
                            <comment id="13685280" author="knutanders" created="Mon, 17 Jun 2013 10:19:33 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12470025">DERBY-4754</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12546430">DERBY-5654</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12476010" name="Test_4544.java" size="8039" author="rhillegas" created="Mon, 11 Apr 2011 16:52:22 +0100"/>
                            <attachment id="12476000" name="Test_4544.java" size="3664" author="rhillegas" created="Mon, 11 Apr 2011 15:31:41 +0100"/>
                            <attachment id="12475613" name="Test_4544.java" size="3144" author="rhillegas" created="Wed, 6 Apr 2011 20:50:35 +0100"/>
                            <attachment id="12476002" name="derby-4544-01-ab-shortCircuitLengthOptimization.diff" size="5281" author="rhillegas" created="Mon, 11 Apr 2011 15:49:31 +0100"/>
                            <attachment id="12476039" name="derby-4544-01-ac-shortCircuitLengthOptimization.diff" size="9050" author="rhillegas" created="Mon, 11 Apr 2011 20:15:58 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10364"><![CDATA[Data corruption]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Apr 2011 19:50:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24329</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0cj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35848</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>