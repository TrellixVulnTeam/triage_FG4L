<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:41:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5780/DERBY-5780.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5780] identity column performance has degredated</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5780</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Mamta has run some performance tests on windows, with (Enable write caching on the device AND Turn off Windows write-cache buffer flushing on the device) that shows &lt;br/&gt;
performance degredation of identity columns.  See results posted in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5471&quot; title=&quot;Stress test for identity columns and sequence seem to be taking longer on trunk compared to 10.8.2.2 RC3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5471&quot;&gt;&lt;del&gt;DERBY-5471&lt;/del&gt;&lt;/a&gt;, copied here:&lt;br/&gt;
Rick, first of all, I want to apologize for not responding to this jira sooner. I allowed other jiras to prioritize over this but I finally got around to running a long set of tests and here are the results of them. I have truned off debugging prints in these test runs.&lt;/p&gt;

&lt;p&gt;I ran lots of test as explained below on released 10.8.2.2 jars and top of the trunk(revision 1341151) insane jars with write caching off and the test results between the 2 set of jars do vary. I have Windows7 service pack1 laptop(Intel(R) Core(TM) i7-2720QM CPU @2.20GHz, 8GB RAM) with IBM jdk 1.6&lt;/p&gt;

&lt;p&gt;I chose to run with preallocation sizes of 5 and 20 because I think the default preallocation for 10.8 is 5 and for trunk is 20.&lt;/p&gt;

&lt;p&gt;Variations of test(with 3 test runs of each on 10.8 and trunk jars)&lt;br/&gt;
1)Identity column 10 threads with 20 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=20 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 10 	&lt;/p&gt;

&lt;p&gt;	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 10630&lt;br/&gt;
Average throughput (tx/s):      177.16666666666666&lt;br/&gt;
15427 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 10432&lt;br/&gt;
Average throughput (tx/s):      173.86376893718437&lt;br/&gt;
15282 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 10377&lt;br/&gt;
Average throughput (tx/s):      172.89524983755143&lt;br/&gt;
14908 successful transactions, including warmup phase.	&lt;/p&gt;

&lt;p&gt;	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 3002&lt;br/&gt;
Average throughput (tx/s):      50.021661612290465&lt;br/&gt;
4542 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2924&lt;br/&gt;
Average throughput (tx/s):      48.733333333333334&lt;br/&gt;
4370 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 2547&lt;br/&gt;
Average throughput (tx/s):      42.45&lt;br/&gt;
4023 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;2)Identity column 10 threads with 5 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 10 &lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 10677&lt;br/&gt;
Average throughput (tx/s):      177.92627649646712&lt;br/&gt;
15222 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 11188&lt;br/&gt;
Average throughput (tx/s):      186.46355894068432&lt;br/&gt;
15744 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 10571&lt;br/&gt;
Average throughput (tx/s):      176.18039699338345&lt;br/&gt;
15012 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 2453&lt;br/&gt;
Average throughput (tx/s):      40.88333333333333&lt;br/&gt;
3716 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2531&lt;br/&gt;
Average throughput (tx/s):      42.18333333333333&lt;br/&gt;
3668 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 3076&lt;br/&gt;
Average throughput (tx/s):      51.266666666666666&lt;br/&gt;
4615 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;3)Identity column 1 thread with 20 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=20 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 1 &lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 5865&lt;br/&gt;
Average throughput (tx/s):      97.75&lt;br/&gt;
8773 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 5753&lt;br/&gt;
Average throughput (tx/s):      95.88173530441159&lt;br/&gt;
8359 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 6326&lt;br/&gt;
Average throughput (tx/s):      105.43333333333334&lt;br/&gt;
9231 successful transactions, including warmup phase.&lt;br/&gt;
	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 526&lt;br/&gt;
Average throughput (tx/s):      8.766666666666667&lt;br/&gt;
801 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 546&lt;br/&gt;
Average throughput (tx/s):      9.1&lt;br/&gt;
831 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 572&lt;br/&gt;
Average throughput (tx/s):      9.533174447092549&lt;br/&gt;
841 successful transactions, including warmup phase.&lt;/p&gt;



&lt;p&gt;4)Identity column 1 thread with 5 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 1 &lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 5948&lt;br/&gt;
Average throughput (tx/s):      99.13333333333334&lt;br/&gt;
8799 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 5658&lt;br/&gt;
Average throughput (tx/s):      94.3&lt;br/&gt;
8337 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 6314&lt;br/&gt;
Average throughput (tx/s):      105.21755070072822&lt;br/&gt;
9197 successful transactions, including warmup phase.&lt;br/&gt;
	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 470&lt;br/&gt;
Average throughput (tx/s):      7.833202779953668&lt;br/&gt;
737 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 548&lt;br/&gt;
Average throughput (tx/s):      9.133333333333333&lt;br/&gt;
814 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 559&lt;br/&gt;
Average throughput (tx/s):      9.315424610051993&lt;br/&gt;
851 successful transactions, including warmup phase.&lt;/p&gt;



&lt;p&gt;5)Sequence column 10 threads with 20 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=20 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 10 &lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 20978&lt;br/&gt;
Average throughput (tx/s):      349.6275062082299&lt;br/&gt;
31469 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 20496&lt;br/&gt;
Average throughput (tx/s):      341.6&lt;br/&gt;
30196 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 17433&lt;br/&gt;
Average throughput (tx/s):      290.545157580707&lt;br/&gt;
24772 successful transactions, including warmup phase.&lt;br/&gt;
	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 470&lt;br/&gt;
Average throughput (tx/s):      7.833202779953668&lt;br/&gt;
737 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 548&lt;br/&gt;
Average throughput (tx/s):      9.133333333333333&lt;br/&gt;
814 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 559&lt;br/&gt;
Average throughput (tx/s):      9.315424610051993&lt;br/&gt;
851 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;6)Sequence column 10 threads with 5 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 10 &lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 19927&lt;br/&gt;
Average throughput (tx/s):      332.11113148114197&lt;br/&gt;
30250 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 21048&lt;br/&gt;
Average throughput (tx/s):      350.8&lt;br/&gt;
31331 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 20707&lt;br/&gt;
Average throughput (tx/s):      345.1166666666667&lt;br/&gt;
30251 successful transactions, including warmup phase.&lt;br/&gt;
	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 7038&lt;br/&gt;
Average throughput (tx/s):      117.29804503258279&lt;br/&gt;
13041 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 10129&lt;br/&gt;
Average throughput (tx/s):      168.8138531024483&lt;br/&gt;
15210 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 13775&lt;br/&gt;
Average throughput (tx/s):      229.58333333333334&lt;br/&gt;
19609 successful transactions, including warmup phase.&lt;/p&gt;




&lt;p&gt;7)Sequence column 1 thread with 20 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=20 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 1&lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 12989&lt;br/&gt;
Average throughput (tx/s):      216.47972533791105&lt;br/&gt;
19048 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 12521&lt;br/&gt;
Average throughput (tx/s):      208.68333333333334&lt;br/&gt;
18560 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 11970&lt;br/&gt;
Average throughput (tx/s):      199.5&lt;br/&gt;
17763 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 6853&lt;br/&gt;
Average throughput (tx/s):      114.21476308728188&lt;br/&gt;
10286 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 7277&lt;br/&gt;
Average throughput (tx/s):      121.2813119781337&lt;br/&gt;
10733 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 7293&lt;br/&gt;
Average throughput (tx/s):      121.55&lt;br/&gt;
10772 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;8)Sequence column 1 thread with 5 preallocation&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 1&lt;br/&gt;
	10.8 Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 12059&lt;br/&gt;
Average throughput (tx/s):      200.93979637745156&lt;br/&gt;
17215 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 11071&lt;br/&gt;
Average throughput (tx/s):      184.51359144014268&lt;br/&gt;
16884 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 12073&lt;br/&gt;
Average throughput (tx/s):      201.21331311144814&lt;br/&gt;
17489 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;	Trunk Runs&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 2479&lt;br/&gt;
Average throughput (tx/s):      41.31597806703222&lt;br/&gt;
3673 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2657&lt;br/&gt;
Average throughput (tx/s):      44.2825952900785&lt;br/&gt;
3921 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 2518&lt;br/&gt;
Average throughput (tx/s):      41.96596723387943&lt;br/&gt;
3698 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;&amp;gt; Stress test for identity columns and sequence seem to be taking longer on trunk compared to 10.8.2.2 RC3&lt;br/&gt;
&amp;gt; --------------------------------------------------------------------------------------------------------&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;                 Key: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5471&quot; title=&quot;Stress test for identity columns and sequence seem to be taking longer on trunk compared to 10.8.2.2 RC3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5471&quot;&gt;&lt;del&gt;DERBY-5471&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
&amp;gt;                 URL: &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5471&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/DERBY-5471&lt;/a&gt;&lt;br/&gt;
&amp;gt;             Project: Derby&lt;br/&gt;
&amp;gt;          Issue Type: Task&lt;br/&gt;
&amp;gt;          Components: Test&lt;br/&gt;
&amp;gt;    Affects Versions: 10.9.1.0&lt;br/&gt;
&amp;gt;         Environment: Windows XP version 2.18&lt;br/&gt;
&amp;gt; Genuine Intel(R) CPU T2600 dual core @2.16GHz 2.00GB of RAM &lt;br/&gt;
&amp;gt; $ java -version&lt;br/&gt;
&amp;gt; java version &quot;1.6.0&quot;&lt;br/&gt;
&amp;gt; Java(TM) SE Runtime Environment (build pwi3260sr9fp1-20110208_03(SR9 FP1))&lt;br/&gt;
&amp;gt; IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-201102&lt;br/&gt;
&amp;gt; 03_74623 (JIT enabled, AOT enabled)&lt;br/&gt;
&amp;gt; J9VM - 20110203_074623&lt;br/&gt;
&amp;gt; JIT  - r9_20101028_17488ifx3&lt;br/&gt;
&amp;gt; GC   - 20101027_AA)&lt;br/&gt;
&amp;gt; JCL  - 20110203_01&lt;br/&gt;
&amp;gt;            Reporter: Mamta A. Satoor&lt;br/&gt;
&amp;gt;         Attachments: 5471-performance.html&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I have been trying to run org.apache.derbyTesting.perf.clients.Runner (which provides ways to stress test sequence generator and identity columns) on trunk and 10.8.2.2 RC3 to compare the performance and I find that it takes almost double the time for the tests to finish on trunk. Additionally, the identity column test consistently ran into lock timeouts on trunk. I am running with insane jars on trunk and 10.8.2.2 RC3. The test in question is not in official jars for the release candidate so I manually copied them to 10.8.2.2 RC3 environment during my test(basically copied the entire org.apache.derbyTesting.perf.clients.Runner directory from trunk to 10.8.2.2 RC3 environment).&lt;br/&gt;
&amp;gt; Command to do sequence stress testing is as follows&lt;br/&gt;
&amp;gt; java org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 10&lt;br/&gt;
&amp;gt; Command to do identity column stress testing is as follows&lt;br/&gt;
&amp;gt; time java org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 10&lt;br/&gt;
&amp;gt; An average run on 10.8.2.2 RC3 for sequence stress test is about a minute and 46 secs. On trunk, on an average it takes 2 and half minutes&lt;br/&gt;
&amp;gt; An average run on 10.8.2.2 RC3 for identity stress test is about a minute and 50 secs. On trunk, on an average it takes 3minsutes and 30 secs. Also, on trunk, this test runs into lock timeouts.&lt;br/&gt;
&amp;gt; I was wondering if this is the right behavior. The performance should be better in trunk because of pre-allocation of range for sequences and identity columns(which defaults to 20) but unless I have missed something in my tests, the results don&apos;t show the performance improvement.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12557075">DERBY-5780</key>
            <summary>identity column performance has degredated</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="mikem">Mike Matrigali</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                    </labels>
                <created>Wed, 23 May 2012 22:26:04 +0100</created>
                <updated>Mon, 17 Jun 2013 10:19:21 +0100</updated>
                            <resolved>Thu, 31 May 2012 19:45:31 +0100</resolved>
                                    <version>10.10.1.1</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13281952" author="rhillegas" created="Wed, 23 May 2012 22:49:42 +0100"  >&lt;p&gt;I am in the middle of building the first 10.9 release candidate and this issue just turned up with priority Blocker. Since there is some confusion about the difference between priority and urgency, I need to ask this question: Are you flagging this issue as an issue which should block the 10.9 release until we understand the results you are seeing? Thanks.&lt;/p&gt;</comment>
                            <comment id="13281976" author="mamtas" created="Wed, 23 May 2012 23:10:45 +0100"  >&lt;p&gt;Just wanted to post some more test results for identity columns.&lt;/p&gt;

&lt;p&gt;I am testing identity columns with preallocation of 5 and with one thread as shown below&lt;br/&gt;
java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 1&lt;/p&gt;

&lt;p&gt;The result ot this test on 10.8.2.2&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 5948&lt;br/&gt;
Average throughput (tx/s):      99.13333333333334&lt;br/&gt;
8799 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 5658&lt;br/&gt;
Average throughput (tx/s):      94.3&lt;br/&gt;
8337 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 6314&lt;br/&gt;
Average throughput (tx/s):      105.21755070072822&lt;br/&gt;
9197 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;The results at the top of trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 470&lt;br/&gt;
Average throughput (tx/s):      7.833202779953668&lt;br/&gt;
737 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 548&lt;br/&gt;
Average throughput (tx/s):      9.133333333333333&lt;br/&gt;
814 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 559&lt;br/&gt;
Average throughput (tx/s):      9.315424610051993&lt;br/&gt;
851 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;The results at the revision(1327218) where changes were committed for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 606&lt;br/&gt;
Average throughput (tx/s):      10.099831669472175&lt;br/&gt;
921 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 603&lt;br/&gt;
Average throughput (tx/s):      10.04983250279162&lt;br/&gt;
909 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 563&lt;br/&gt;
Average throughput (tx/s):      9.383333333333333&lt;br/&gt;
882 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;The results right before changes were committed for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt;. The revision number I believe is 1327050&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 5913&lt;br/&gt;
Average throughput (tx/s):      98.32058530096441&lt;br/&gt;
8666 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 6290&lt;br/&gt;
Average throughput (tx/s):      104.831586140231&lt;br/&gt;
9305 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 6676&lt;br/&gt;
Average throughput (tx/s):      111.26666666666667&lt;br/&gt;
9872 successful transactions, including warmup phase.&lt;/p&gt;

&lt;p&gt;Atleast from this set of tests, it looks like performance degraded after the checkin for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt; was made.&lt;/p&gt;</comment>
                            <comment id="13282590" author="mamtas" created="Thu, 24 May 2012 17:12:39 +0100"  >&lt;p&gt;I have done identity columns testing with write caching disabled on the device on 10.8.2.2 released jars and top of the trunk insane jars and here are the results. Next, I plan to do the similar testing for sequences.&lt;/p&gt;

&lt;p&gt;********************&lt;br/&gt;
Identity column 10 threads with 100 preallocation&lt;/p&gt;

&lt;p&gt;10.8 &lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1676&lt;br/&gt;
Average throughput (tx/s):      27.932867785536907&lt;br/&gt;
2505 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 1333&lt;br/&gt;
Average throughput (tx/s):      22.21444522214445&lt;br/&gt;
2077 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 1576&lt;br/&gt;
Average throughput (tx/s):      26.225579924784505&lt;br/&gt;
2345 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 230&lt;br/&gt;
Average throughput (tx/s):      3.8333333333333335&lt;br/&gt;
351 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 255&lt;br/&gt;
Average throughput (tx/s):      4.25&lt;br/&gt;
393 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 242&lt;br/&gt;
Average throughput (tx/s):      4.033266112231463&lt;br/&gt;
360 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;


&lt;p&gt;********************&lt;br/&gt;
Identity column 10 threads with 5 preallocation&lt;/p&gt;

&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1559&lt;br/&gt;
Average throughput (tx/s):      25.983333333333334&lt;br/&gt;
2387 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 1469&lt;br/&gt;
Average throughput (tx/s):      24.48292528457859&lt;br/&gt;
2299 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 1397&lt;br/&gt;
Average throughput (tx/s):      23.283333333333335&lt;br/&gt;
2143 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 251&lt;br/&gt;
Average throughput (tx/s):      4.18110341151386&lt;br/&gt;
385 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 241&lt;br/&gt;
Average throughput (tx/s):      4.0121863918624205&lt;br/&gt;
368 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 248&lt;br/&gt;
Average throughput (tx/s):      4.133333333333334&lt;br/&gt;
387 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;



&lt;p&gt;********************&lt;br/&gt;
Identity column 1 threads with 100 preallocation&lt;/p&gt;

&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1493&lt;br/&gt;
Average throughput (tx/s):      24.88208922887189&lt;br/&gt;
2378 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 1657&lt;br/&gt;
Average throughput (tx/s):      27.616666666666667&lt;br/&gt;
2459 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 1599&lt;br/&gt;
Average throughput (tx/s):      26.65&lt;br/&gt;
2527 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 54&lt;br/&gt;
Average throughput (tx/s):      0.9&lt;br/&gt;
81 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 44&lt;br/&gt;
Average throughput (tx/s):      0.7333211113148114&lt;br/&gt;
68 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 52&lt;br/&gt;
Average throughput (tx/s):      0.8666522224629589&lt;br/&gt;
77 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;




&lt;p&gt;********************&lt;br/&gt;
Identity column 1 threads with 5 preallocation&lt;/p&gt;

&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1740&lt;br/&gt;
Average throughput (tx/s):      28.966206092891625&lt;br/&gt;
2492 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 1203&lt;br/&gt;
Average throughput (tx/s):      20.049665838902683&lt;br/&gt;
2026 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 1599&lt;br/&gt;
Average throughput (tx/s):      26.65&lt;br/&gt;
2302 successful transactions, including warmup phase.&lt;/p&gt;




&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 53&lt;br/&gt;
Average throughput (tx/s):      0.8833333333333333&lt;br/&gt;
78 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 51&lt;br/&gt;
Average throughput (tx/s):      0.8499858335694405&lt;br/&gt;
75 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 46&lt;br/&gt;
Average throughput (tx/s):      0.7666666666666667&lt;br/&gt;
73 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;</comment>
                            <comment id="13282805" author="mamtas" created="Thu, 24 May 2012 22:55:06 +0100"  >&lt;p&gt;Jira was down so I couldn&apos;t post the results for sequeces earlier.&lt;/p&gt;

&lt;p&gt;Here are the results for sequences testing with write caching disabled on the device on 10.8.2.2 released jars and top of the trunk insane jars.&lt;/p&gt;


&lt;p&gt;********************&lt;br/&gt;
Sequence column 10 threads with 100 preallocation&lt;/p&gt;

&lt;p&gt;java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=100 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 10 &lt;/p&gt;


&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 3682&lt;br/&gt;
Average throughput (tx/s):      61.3656439059349&lt;br/&gt;
5299 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 3765&lt;br/&gt;
Average throughput (tx/s):      62.74895418409693&lt;br/&gt;
6020 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 3671&lt;br/&gt;
Average throughput (tx/s):      61.1823136281062&lt;br/&gt;
5641 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 3608&lt;br/&gt;
Average throughput (tx/s):      60.13333333333333&lt;br/&gt;
5552 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 3702&lt;br/&gt;
Average throughput (tx/s):      61.7&lt;br/&gt;
5610 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 3988&lt;br/&gt;
Average throughput (tx/s):      66.46666666666667&lt;br/&gt;
5914 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;




&lt;p&gt;********************&lt;br/&gt;
Sequence column 10 threads with 5 preallocation&lt;/p&gt;

&lt;p&gt;java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 10 &lt;/p&gt;


&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 4192&lt;br/&gt;
Average throughput (tx/s):      69.86666666666666&lt;br/&gt;
6293 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 3927&lt;br/&gt;
Average throughput (tx/s):      65.44890918484693&lt;br/&gt;
6178 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 3588&lt;br/&gt;
Average throughput (tx/s):      59.8&lt;br/&gt;
5418 successful transactions, including warmup phase.&lt;/p&gt;



&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 442&lt;br/&gt;
Average throughput (tx/s):      7.3665438909351515&lt;br/&gt;
688 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 434&lt;br/&gt;
Average throughput (tx/s):      7.233333333333333&lt;br/&gt;
674 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 406&lt;br/&gt;
Average throughput (tx/s):      6.766666666666667&lt;br/&gt;
605 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;




&lt;p&gt;********************&lt;br/&gt;
Sequence column 1 threads with 100 preallocation&lt;/p&gt;

&lt;p&gt;java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=100 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 1&lt;/p&gt;


&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1475&lt;br/&gt;
Average throughput (tx/s):      24.583333333333332&lt;br/&gt;
2687 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2287&lt;br/&gt;
Average throughput (tx/s):      38.116031399476675&lt;br/&gt;
3546 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 2488&lt;br/&gt;
Average throughput (tx/s):      41.46666666666667&lt;br/&gt;
3732 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 1797&lt;br/&gt;
Average throughput (tx/s):      29.95&lt;br/&gt;
2652 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2059&lt;br/&gt;
Average throughput (tx/s):      34.31666666666667&lt;br/&gt;
3041 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 1907&lt;br/&gt;
Average throughput (tx/s):      31.782803619939667&lt;br/&gt;
2696 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;




&lt;p&gt;********************&lt;br/&gt;
Sequence column 1 threads with 5 preallocation&lt;/p&gt;

&lt;p&gt;java -Dderby.system.home=$derbyHome -Dderby.language.sequence.preallocator=5 org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=0,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=0 -gen b2b -threads 1&lt;/p&gt;


&lt;p&gt;10.8&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 2936&lt;br/&gt;
Average throughput (tx/s):      48.93333333333333&lt;br/&gt;
4275 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 2548&lt;br/&gt;
Average throughput (tx/s):      42.46666666666667&lt;br/&gt;
3726 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 2812&lt;br/&gt;
Average throughput (tx/s):      46.86588556857386&lt;br/&gt;
4026 successful transactions, including warmup phase.&lt;/p&gt;


&lt;p&gt;Trunk&lt;br/&gt;
Test run 1)&lt;br/&gt;
Number of transactions: 222&lt;br/&gt;
Average throughput (tx/s):      3.699938334361094&lt;br/&gt;
343 successful transactions, including warmup phase.&lt;br/&gt;
Test run 2)&lt;br/&gt;
Number of transactions: 220&lt;br/&gt;
Average throughput (tx/s):      3.666605556574057&lt;br/&gt;
328 successful transactions, including warmup phase.&lt;br/&gt;
Test run 3)&lt;br/&gt;
Number of transactions: 214&lt;br/&gt;
Average throughput (tx/s):      3.566488342249554&lt;br/&gt;
314 successful transactions, including warmup phase.&lt;br/&gt;
********************&lt;/p&gt;


</comment>
                            <comment id="13283577" author="mikem" created="Fri, 25 May 2012 17:26:01 +0100"  >&lt;p&gt;&lt;br/&gt;
This performance issue was caused by changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt;.  I am going to attach the fix to that issue.&lt;/p&gt;</comment>
                            <comment id="13286817" author="mikem" created="Thu, 31 May 2012 19:45:31 +0100"  >&lt;p&gt;Fixed in 10.10 and backported to unreleased 10.9 branch prior to 10.9 being released.  Because of &lt;br/&gt;
change in behavior in syncing and extent of changes I don&apos;t think we should backport the changes for&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5780&quot; title=&quot;identity column performance has degredated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5780&quot;&gt;&lt;del&gt;DERBY-5780&lt;/del&gt;&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt; to 10.8 or previous.&lt;/p&gt;</comment>
                            <comment id="13287223" author="knutanders" created="Fri, 1 Jun 2012 08:41:41 +0100"  >&lt;p&gt;Changing fix version to make it clear that the fix went into the first release candidate of 10.9.1.&lt;/p&gt;</comment>
                            <comment id="13685212" author="knutanders" created="Mon, 17 Jun 2013 10:19:21 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                                                <inwardlinks description="is broken by">
                                        <issuelink>
            <issuekey id="12530576">DERBY-5494</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 May 2012 21:49:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>245908</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0bhb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35678</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>