<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:19 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6542/DERBY-6542.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6542] Improve the concurrency of identity columns by using SYS.SYSSEQUENCES</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6542</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This is another attempt to improve the concurrency of identity columns. The previous attempt was tracked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4437&quot; title=&quot;Concurrent inserts into table with identity column perform poorly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4437&quot;&gt;&lt;del&gt;DERBY-4437&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This new attempt will try out Mike&apos;s last suggestion: use system-created sequences managed by SYS.SYSSEQUENCES. This should reduce the contention on the core catalogs.&lt;/p&gt;

&lt;p&gt;I&apos;m hopeful about this approach because of the experiments tracked by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6533&quot; title=&quot;Add a quiet mode to NsTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6533&quot;&gt;&lt;del&gt;DERBY-6533&lt;/del&gt;&lt;/a&gt;. There we are not seeing any problems related to sequence generators but we are seeing lots of identity-related lock timeouts.&lt;/p&gt;

&lt;p&gt;Here is the general shape of this approach:&lt;/p&gt;

&lt;p&gt;1) When adding an identity column to a table, Derby will create a sequence generator for the column. The sequence generator will live in the SYS schema and its name will be the table&apos;s UUID.&lt;/p&gt;

&lt;p&gt;2) DROP SEQUENCE will not operate on system-created sequences. System-created sequences will be dropped/modified by DROP/ALTER TABLE commands.&lt;/p&gt;

&lt;p&gt;3) We will add a new system function for inspecting the current, in-memory value of an identity generator without getting a lock on SYS.SYSSEQUENCES: SYSCS_UTIL.SYSCS_PEEK_AT_IDENTITY( tableSchemaName, tableName ).&lt;/p&gt;

&lt;p&gt;4) Derby will create a sequence for every legacy identity column after hard-upgrade.&lt;/p&gt;

&lt;p&gt;5) These changes will take place only after hard-upgrade. Soft-upgrade will not change the behavior of identity columns.&lt;/p&gt;

&lt;p&gt;Comments on this proposal are welcome. Thanks.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12708269">DERBY-6542</key>
            <summary>Improve the concurrency of identity columns by using SYS.SYSSEQUENCES</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="rhillegas">Rick Hillegas</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Apr 2014 15:39:26 +0100</created>
                <updated>Wed, 4 Jun 2014 14:12:48 +0100</updated>
                            <resolved>Fri, 30 May 2014 14:51:50 +0100</resolved>
                                    <version>10.11.1.1</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13968444" author="mikem" created="Mon, 14 Apr 2014 16:42:18 +0100"  >&lt;p&gt;it has been so many years since this discussion.  Can you remind me what the &lt;br/&gt;
architectural difference is between sequences and identity columns currently.  Or&lt;br/&gt;
if it is written up in one place point me there.  It is hard working through the &lt;br/&gt;
various old issues to tell what still applies or not after all the fixes have gone in.&lt;/p&gt;

&lt;p&gt;Scanning the old topics on this issue there seemed to be the following issues, could you comment&lt;br/&gt;
how your proposal affects identity column behavior for these:&lt;br/&gt;
1) correctness issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5493&quot; title=&quot;Same value returned by successive calls to a sequence generator.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5493&quot;&gt;&lt;del&gt;DERBY-5493&lt;/del&gt;&lt;/a&gt; (i think the answer is that sequences behave better than identity)&lt;br/&gt;
2) is there a worst case where the change will reduce current identity performance if sequences are used, &lt;br/&gt;
    likely some case with only preallocation=1.  There was some discussion about performance difference of identity and sequences,&lt;br/&gt;
could you note if there is any downside to switching to sequences.  I think the&lt;br/&gt;
areas of concern were performance with preallocation 1 being the worst case.  There&lt;br/&gt;
were changes both in sequences and identity columns since that discussion so not&lt;br/&gt;
clear what the current state is.  &lt;br/&gt;
3) is there a behavior change for &quot;lost&quot; values by changing to sequences?  &lt;/p&gt;</comment>
                            <comment id="13968551" author="rhillegas" created="Mon, 14 Apr 2014 18:33:16 +0100"  >&lt;p&gt;Thanks for raising these issues, Mike. Some responses follow:&lt;/p&gt;

&lt;p&gt;MM&amp;gt; it has been so many years since this discussion. Can you remind me what the &lt;br/&gt;
MM&amp;gt; architectural difference is between sequences and identity columns currently. Or&lt;br/&gt;
MM&amp;gt; if it is written up in one place point me there. It is hard working through the &lt;br/&gt;
MM&amp;gt; various old issues to tell what still applies or not after all the&lt;br/&gt;
MM&amp;gt; fixes have gone in.&lt;/p&gt;

&lt;p&gt;The behavior of sequence generators is described by the header comment in SequenceUpdater. The key differences in behavior between sequences and identity columns are these:&lt;/p&gt;

&lt;p&gt;i) A sequence generator pre-allocates a chunk of new values instead of updating a catalog row every time a new value is requested. During orderly shutdown, the unused values are flushed and the catalog row is updated so that shutdown won&apos;t leak chunks of unused values.&lt;/p&gt;

&lt;p&gt;ii) The sequence generator always updates the catalog in a subtransaction of the user&apos;s current execution transaction, expecting to get the lock immediately. The write is committed immediately. If the update fails, then the generator raises a TOO_MUCH_CONTENTION exception. It is believed that this can only happen if someone is scanning SYS.SYSSEQUENCES directly, rather than using the SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE function. In contrast, identity columns try to use a subtransaction, but if that doesn&apos;t work, they escalate to using the parent transaction. There is substantial lock contention because the volatile identity counter is maintained in a core catalog.&lt;/p&gt;


&lt;p&gt;MM&amp;gt; Scanning the old topics on this issue there seemed to be the following issues, could you comment&lt;br/&gt;
MM&amp;gt; how your proposal affects identity column behavior for these:&lt;br/&gt;
MM&amp;gt; 1) correctness issue &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5493&quot; title=&quot;Same value returned by successive calls to a sequence generator.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5493&quot;&gt;&lt;del&gt;DERBY-5493&lt;/del&gt;&lt;/a&gt; (i think the answer is that sequences behave better than identity)&lt;/p&gt;

&lt;p&gt;It appears to me that &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5493&quot; title=&quot;Same value returned by successive calls to a sequence generator.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5493&quot;&gt;&lt;del&gt;DERBY-5493&lt;/del&gt;&lt;/a&gt; and  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt; were both fixed. I am not aware of any outstanding correctness problems with sequence generators.&lt;/p&gt;

&lt;p&gt;MM&amp;gt; 2) is there a worst case where the change will reduce current identity performance if sequences are used, &lt;br/&gt;
MM&amp;gt; likely some case with only preallocation=1. There was some discussion about performance difference of identity and sequences,&lt;br/&gt;
MM&amp;gt; could you note if there is any downside to switching to sequences. I think the&lt;br/&gt;
MM&amp;gt; areas of concern were performance with preallocation 1 being the worst case. There&lt;br/&gt;
MM&amp;gt; were changes both in sequences and identity columns since that discussion so not&lt;br/&gt;
MM&amp;gt; clear what the current state is.&lt;/p&gt;

&lt;p&gt;I don&apos;t think we&apos;ve measured this. There&apos;s certainly a possibility that a degenerate preallocation range would result in reduced performance. I think that the big downside is the possibility of leaking chunks of unused identity values if the database crashes or is brought down ungracefully.&lt;/p&gt;

&lt;p&gt;MM&amp;gt; 3) is there a behavior change for &quot;lost&quot; values by changing to sequences?&lt;/p&gt;

&lt;p&gt;Other than the leakage mentioned above, I&apos;m not aware of any behavior change for lost values.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13977203" author="rhillegas" created="Tue, 22 Apr 2014 19:57:35 +0100"  >&lt;p&gt;Attaching derby-6542-01-ab-catalog.diff. This patch adds catalog support for backing identity columns with system-generated sequences. I am running tests now.&lt;/p&gt;

&lt;p&gt;This patch does the following:&lt;/p&gt;

&lt;p&gt;1) Creates a system-generated sequence when a table is created with an identity column and the database is at level 10.11 or higher. Note that you can&apos;t currently add an identity column to an existing table.&lt;/p&gt;

&lt;p&gt;2) Drop the system-generated sequence when the identity column is dropped.&lt;/p&gt;

&lt;p&gt;3) Drop the system-generated sequence when the table is dropped.&lt;/p&gt;

&lt;p&gt;4) Add a system-generated sequence for every identity column when hard-upgrading to 10.11.&lt;/p&gt;

&lt;p&gt;5) Add a new system function, SYSCS_UTIL.SYSCS_PEEK_AT_IDENTITY, when creating a 10.11 database or when hard-upgrading to 10.11.&lt;/p&gt;

&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/sql/dictionary/TableDescriptor.java&lt;/p&gt;

&lt;p&gt;Add a method for assigning a unique name to the system-generated sequence.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/catalog/SystemProcedures.jav&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java&lt;/p&gt;

&lt;p&gt;Support for SYSCS_PEEK_AT_IDENTITY. Upgrade support.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/tools/org/apache/derby/impl/tools/dblook/DB_Sequence.java&lt;/p&gt;

&lt;p&gt;dblook shouldn&apos;t create DDL for the system-generated sequences.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/iapi/types/TypeId.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/types/DataTypeDescriptor.java&lt;/p&gt;

&lt;p&gt;Add support for computing the min/max bounds of an integer type.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M       java/shared/org/apache/derby/shared/common/reference/SQLState.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/compile/NextSequenceNode.java&lt;/p&gt;

&lt;p&gt;Don&apos;t let users directly issue a NEXT VALUE FOR on a system-generated sequence.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/CreateTableConstantAction.java&lt;/p&gt;

&lt;p&gt;Make a system-generated sequence for a new identity column.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/DropTableConstantAction.java&lt;/p&gt;

&lt;p&gt;Drop the system-generated sequence when the table is dropped.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java&lt;/p&gt;

&lt;p&gt;Drop and recreate the system-generated sequence when the identity column is modified. Drop the system generated sequence when the identity column is dropped.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/RolesTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/master/ij7.out&lt;/p&gt;

&lt;p&gt;Adjust existing tests as necessary.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/IdentitySequenceTest.java&lt;/p&gt;

&lt;p&gt;Basic test for catalog support of system-generated sequences.&lt;/p&gt;

&lt;p&gt;-----------------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_11.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_2.java&lt;/p&gt;

&lt;p&gt;Basic upgrade tests for system-generated sequences.&lt;/p&gt;</comment>
                            <comment id="13977404" author="rhillegas" created="Tue, 22 Apr 2014 21:56:27 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6542-01-ab-catalog.diff.&lt;/p&gt;</comment>
                            <comment id="13978106" author="jira-bot" created="Wed, 23 Apr 2014 13:07:03 +0100"  >&lt;p&gt;Commit 1589379 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1589379&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1589379&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6542&quot; title=&quot;Improve the concurrency of identity columns by using SYS.SYSSEQUENCES&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6542&quot;&gt;&lt;del&gt;DERBY-6542&lt;/del&gt;&lt;/a&gt;: Add catalog support for using sequence generators to implement identity columns; commit derby-6542-01-ab-catalog.diff.&lt;/p&gt;</comment>
                            <comment id="13981506" author="rhillegas" created="Fri, 25 Apr 2014 20:51:20 +0100"  >&lt;p&gt;Attaching derby-6542-02-ab-useNewSequenceGenerator.diff. This is a first rev of a patch which uses sequence generators in order to produce identity values. I need to write a battery of tests.&lt;/p&gt;</comment>
                            <comment id="13986885" author="rhillegas" created="Thu, 1 May 2014 20:14:03 +0100"  >&lt;p&gt;Attaching derby-6542-02-ac-useNewSequenceGenerator.diff. This is the patch after merging with the head of trunk in order to pick up the bug fixes in derby-6554-01-ad-bugfixes.diff.&lt;/p&gt;

&lt;p&gt;This patch will not pass the regression tests cleanly because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6554&quot; title=&quot;Too much contention followed by assert failure when accessing sequence in transaction that created it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6554&quot;&gt;&lt;del&gt;DERBY-6554&lt;/del&gt;&lt;/a&gt;. We have regression tests which create a table with an identity column and then, in the same transaction, populate it. With sequence-backed identity columns, this gives rise to the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6554&quot; title=&quot;Too much contention followed by assert failure when accessing sequence in transaction that created it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6554&quot;&gt;&lt;del&gt;DERBY-6554&lt;/del&gt;&lt;/a&gt; bug.&lt;/p&gt;</comment>
                            <comment id="14004086" author="rhillegas" created="Tue, 20 May 2014 23:48:24 +0100"  >&lt;p&gt;Attaching derby-6542-02-af-useNewSequenceGenerator.diff. This syncs the previous rev of the patch with the work done on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6554&quot; title=&quot;Too much contention followed by assert failure when accessing sequence in transaction that created it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6554&quot;&gt;&lt;del&gt;DERBY-6554&lt;/del&gt;&lt;/a&gt; and implements the correct ALTER TABLE behavior described on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6579&quot; title=&quot;Changing the step value for an identity column incorrectly changes its current value.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6579&quot;&gt;&lt;del&gt;DERBY-6579&lt;/del&gt;&lt;/a&gt;. I am running tests now.&lt;/p&gt;


&lt;p&gt;Touches the following additional files:&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/AlterTableTest.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/AutoIncrementTest.java&lt;/p&gt;</comment>
                            <comment id="14004171" author="rhillegas" created="Wed, 21 May 2014 01:55:10 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6542-02-af-useNewSequenceGenerator.diff.&lt;/p&gt;</comment>
                            <comment id="14004604" author="jira-bot" created="Wed, 21 May 2014 13:05:26 +0100"  >&lt;p&gt;Commit 1596548 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1596548&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1596548&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6542&quot; title=&quot;Improve the concurrency of identity columns by using SYS.SYSSEQUENCES&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6542&quot;&gt;&lt;del&gt;DERBY-6542&lt;/del&gt;&lt;/a&gt;: Use sequence generators to create identity values; commit derby-6542-02-af-useNewSequenceGenerator.diff.&lt;/p&gt;</comment>
                            <comment id="14004642" author="rhillegas" created="Wed, 21 May 2014 14:15:16 +0100"  >&lt;p&gt;Attaching derby-6542-03-aa-lockTimeoutForIdentityContention.diff. This patch makes Derby raise LockTimeout rather than TooMuchContention when SYS.SYSSEQUENCES can&apos;t be updated for an identity column. I am running tests now.&lt;/p&gt;

&lt;p&gt;This should reduce backward compatibility issues for legacy applications with identity columns which have been coded to catch LockTimeout and retry.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/catalog/SequenceUpdater.java&lt;br/&gt;
M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/IdentitySequenceTest.java&lt;/p&gt;</comment>
                            <comment id="14004901" author="jira-bot" created="Wed, 21 May 2014 17:54:56 +0100"  >&lt;p&gt;Commit 1596619 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rhillegas&quot; class=&quot;user-hover&quot; rel=&quot;rhillegas&quot;&gt;Rick Hillegas&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1596619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1596619&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6542&quot; title=&quot;Improve the concurrency of identity columns by using SYS.SYSSEQUENCES&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6542&quot;&gt;&lt;del&gt;DERBY-6542&lt;/del&gt;&lt;/a&gt;: Raise LockTimeout when there is too much contention on an identity column; commit derby-6542-03-aa-lockTimeoutForIdentityContention.diff.&lt;/p&gt;</comment>
                            <comment id="14006326" author="rhillegas" created="Thu, 22 May 2014 20:00:01 +0100"  >&lt;p&gt;Attaching the first rev of a release note for this bug fix.&lt;/p&gt;</comment>
                            <comment id="14013631" author="rhillegas" created="Fri, 30 May 2014 14:50:09 +0100"  >&lt;p&gt;Attaching a second rev of the release note for this issue. The second rev adds advice about using SYSCS_UTIL.SYSCS_PEEK_AT_IDENTITY to discover the next value which will be inserted into an identity column, rather than querying SYS.SYSCOLUMNS or SYS.SYSSEQUENCES.&lt;/p&gt;</comment>
                            <comment id="14013635" author="rhillegas" created="Fri, 30 May 2014 14:51:50 +0100"  >&lt;p&gt;I believe I am done working on this issue. Mike&apos;s buddy-testing may disclose other flaws, which we can track with new JIRAs. Resolving this issue so that the detailed release note will appear in the 10.11 release notes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12710537">DERBY-6554</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12440016">DERBY-4437</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12705676">DERBY-6533</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12710136">DERBY-6550</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12718143">DERBY-6595</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12715491">DERBY-6579</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12715747">DERBY-6580</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12405445">DERBY-3888</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12641302" name="derby-6542-01-ab-catalog.diff" size="44973" author="rhillegas" created="Tue, 22 Apr 2014 19:57:35 +0100"/>
                            <attachment id="12641999" name="derby-6542-02-ab-useNewSequenceGenerator.diff" size="43234" author="rhillegas" created="Fri, 25 Apr 2014 20:51:20 +0100"/>
                            <attachment id="12642880" name="derby-6542-02-ac-useNewSequenceGenerator.diff" size="43234" author="rhillegas" created="Thu, 1 May 2014 20:14:03 +0100"/>
                            <attachment id="12645898" name="derby-6542-02-af-useNewSequenceGenerator.diff" size="75158" author="rhillegas" created="Tue, 20 May 2014 23:48:24 +0100"/>
                            <attachment id="12646006" name="derby-6542-03-aa-lockTimeoutForIdentityContention.diff" size="3571" author="rhillegas" created="Wed, 21 May 2014 14:15:16 +0100"/>
                            <attachment id="12647593" name="releaseNote.html" size="3836" author="rhillegas" created="Fri, 30 May 2014 14:50:09 +0100"/>
                            <attachment id="12646365" name="releaseNote.html" size="2988" author="rhillegas" created="Thu, 22 May 2014 20:00:01 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Apr 2014 15:42:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386592</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzoga7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386856</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>