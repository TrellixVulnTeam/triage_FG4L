<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:45:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-230/DERBY-230.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-230] &quot;Schema already exists&quot; when creating a table</title>
                <link>https://issues.apache.org/jira/browse/DERBY-230</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When running a multithreaded program where several threads in parallell create tables in a schema that is not explicitly created, one often get the following exception:&lt;/p&gt;

&lt;p&gt;ERROR X0Y68: Schema &apos;TESTSCHEMA&apos; already exists.&lt;br/&gt;
    at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:322)&lt;br/&gt;
    at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.duplicateDescriptorException(DataDictionaryImpl.java:1512)&lt;br/&gt;
    at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptorNow(DataDictionaryImpl.java:1496)&lt;br/&gt;
    at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addDescriptor(DataDictionaryImpl.java:1478)&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.CreateSchemaConstantAction.executeConstantAction(CreateSchemaConstantAction.java:147)&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(Unknown Source)&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.CreateTableConstantAction.executeConstantAction(CreateTableConstantAction.java:213)&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.MiscResultSet.open(MiscResultSet.java:56)&lt;br/&gt;
    at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:366)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1108)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:517)&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:475)&lt;br/&gt;
    at derbytest.Main$CreateTable.run(Main.java:42)&lt;br/&gt;
    at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;

&lt;p&gt;A program that reproduces this bug will be attached.&lt;/p&gt;</description>
                <environment></environment>
        <key id="31847">DERBY-230</key>
            <summary>&quot;Schema already exists&quot; when creating a table</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oysteing">&#216;ystein Gr&#248;vlen</assignee>
                                    <reporter username="oysteing">&#216;ystein Gr&#248;vlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Apr 2005 17:14:46 +0100</created>
                <updated>Mon, 6 Jun 2005 21:36:39 +0100</updated>
                            <resolved>Mon, 6 Jun 2005 21:35:53 +0100</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.0.2.2</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.1.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="63265" author="oysteing" created="Wed, 20 Apr 2005 18:46:41 +0100"  >&lt;p&gt;As far as I can understand, the problem is in DDLConstantAction.getSchemaDescriptorForCreate() which first tries to&lt;br/&gt;
get a SchemaDescriptor and if none exists will create one.  What probably happens is that a thread detects that the schema does not exist, but when it tries to create the SchemaDescriptor, another thread has already done that.  There is at least two possible ways to fix this:&lt;/p&gt;

&lt;p&gt;1. Make getSchemaDescriptorForCreate() synchronized.  (I have tested this and it solves the problem).&lt;/p&gt;

&lt;p&gt;2. Ignore the &quot;Schema already exists&quot; exception from executeConstantAction.  The subsequent getSchemaDescriptor will then get the SchemaDescriptor created by the other thread.&lt;/p&gt;



</comment>
                            <comment id="64351" author="oysteing" created="Tue, 3 May 2005 23:35:21 +0100"  >&lt;p&gt;According to Dan Debrunner alternative 1 is not correct since there are other ways schemas come into existence than through this method.  Hence, I will fix this as suggested in the second alternative by catching exceptions with messageId == SQLState.LANG_OBJECT_ALREADY_EXISTS.  &lt;/p&gt;</comment>
                            <comment id="65851" author="oysteing" created="Fri, 20 May 2005 21:09:44 +0100"  >&lt;p&gt;I have attached a patch to fix this bug.  Please, review it.&lt;/p&gt;

&lt;p&gt;The patch contains changes to the following files:&lt;br/&gt;
M      java/engine/org/apache/derby/impl/sql/execute/DDLConstantAction.java&lt;br/&gt;
    The fix as previously described in this JIRA report.&lt;/p&gt;

&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConcurrentImplicitCreateSchema.java&lt;br/&gt;
    A new test that, before the fix was applied, reproduced the problem almost every time on a multi-processor computer and once in a while on a single-threaded computer.&lt;/p&gt;

&lt;p&gt;A      java/testing/org/apache/derbyTesting/functionTests/master/ConcurrentImplicitCreateSchema.out&lt;br/&gt;
    The master file for the test.&lt;/p&gt;

&lt;p&gt;M      java/testing/org/apache/derbyTesting/functionTests/suites/derbylang.runall&lt;br/&gt;
    The test has been included in the derbylang suite.&lt;/p&gt;


&lt;p&gt;I have run the derbyall testsuite, and all tests passed except derbynet/testconnection.java which also failed without this patch (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-303&quot; title=&quot;derbynet/testconnection.java fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-303&quot;&gt;&lt;del&gt;DERBY-303&lt;/del&gt;&lt;/a&gt;). &lt;/p&gt;</comment>
                            <comment id="66530" author="oysteing" created="Mon, 30 May 2005 17:21:59 +0100"  >&lt;p&gt;Here is a new version of the patch which addresses the review comments by Army and Dan:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The new test, ConcurrentImplicitCreateSchema.java, has also been added to the client/server testsuites.&lt;/li&gt;
	&lt;li&gt;startJBMS() is used to get all connections&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;derbyall has been run with one known error, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-320&quot; title=&quot;Failed test: derbyall/derbynetclientmats/derbynetmats.fail:lang/updatableResultSet.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-320&quot;&gt;&lt;del&gt;DERBY-320&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="66733" author="oysteing" created="Thu, 2 Jun 2005 00:12:36 +0100"  >&lt;p&gt;Attaching a new version of the patch where I have increased the probability of the test reproducing the bug by increasing the number of threads to 200.  It now fails 16 out of 20 times on a single-CPU machine.  Increasing the number of threads further seems to increase the execution time very much.  Considering that when running derbyall, the test is run three times in different frameworks, the probability of the test suite detecting the rebirth of this bug should be more than 98%.  On a 2-CPU machine the test failed 20 out of 20 times.&lt;/p&gt;</comment>
                            <comment id="66857" author="oysteing" created="Thu, 2 Jun 2005 23:01:28 +0100"  >&lt;p&gt;Attaching a new version of the patch since the test with 200 threads once in a while experienced locking timeouts.&lt;br/&gt;
Hence, I am going back to 100 threads.  Also removed some unintentional property settings.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="19697" name="Main.java" size="5623" author="oysteing" created="Wed, 20 Apr 2005 17:17:36 +0100"/>
                            <attachment id="20382" name="derby-230c.diff" size="9963" author="oysteing" created="Thu, 2 Jun 2005 23:01:28 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21848</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy185j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40971</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>