<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5474/DERBY-5474.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5474] Speed up message splitting in build</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5474</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;On a slow machine I sometimes use to build Derby, running the org.apache.derbyBuild.splitmessages tool takes 30 seconds and accounts for 15% of the total time needed to run &quot;ant -q buildsource&quot; (which builds the engine, the network server and the client, but not the tests or demos). The tool is invoked 15 times, and each time a new Java process is started because the Ant target has specified fork=&quot;yes&quot;. By changing it to run the splitmessages tool in the same Java process as the one running Ant, the time is reduced to 3-4 seconds on the same machine.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12528464">DERBY-5474</key>
            <summary>Speed up message splitting in build</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Oct 2011 11:42:30 +0100</created>
                <updated>Tue, 24 Jul 2012 18:26:08 +0100</updated>
                            <resolved>Mon, 24 Oct 2011 16:28:20 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Build tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13133979" author="knutanders" created="Mon, 24 Oct 2011 12:05:42 +0100"  >&lt;p&gt;Attaching a patch that removes the fork attribute from the target so that it uses the default value &quot;no&quot;. It also removes the dir attribute, otherwise a warning is printed about the property being ignored (since working directory cannot be changed when fork is &quot;no&quot;). The tool doesn&apos;t use any relative path names as far as I can see, so inheriting the working directory from the parent process should be OK.&lt;/p&gt;

&lt;p&gt;Additionally, it turns the initClientMessageIds() method into a static initializer. This isn&apos;t strictly necessary, since initClientMessageIds() is idempotent, but it saves a little bit of work when the main() method is invoked multiple times in the same process.&lt;/p&gt;</comment>
                            <comment id="13133987" author="kristwaa" created="Mon, 24 Oct 2011 12:30:26 +0100"  >&lt;p&gt;+1, great having the build complete faster!&lt;/p&gt;</comment>
                            <comment id="13134081" author="bryanpendleton" created="Mon, 24 Oct 2011 15:01:12 +0100"  >&lt;p&gt;Wow! Years ago (2005-ish?) I did a series of experiments on a different, very complex, build system,&lt;br/&gt;
to see if I could measure the impact of fork=yes vs fork=no. At that time, I couldn&apos;t see any difference&lt;br/&gt;
at all; the tens of thousands of process forks that I was doing seemed to add no time at all to the&lt;br/&gt;
build.&lt;/p&gt;

&lt;p&gt;However, that was a completely different build system, a completely different source tree, and a&lt;br/&gt;
completely different set of machines (principally Windows and Linux boxes on fairly fast hardware).&lt;/p&gt;

&lt;p&gt;So I&apos;m pleased that you found a substantial difference, but somewhat surprised.&lt;/p&gt;</comment>
                            <comment id="13134143" author="knutanders" created="Mon, 24 Oct 2011 16:28:20 +0100"  >&lt;p&gt;Thanks, Kristian and Bryan.&lt;/p&gt;

&lt;p&gt;All regression tests passed with jars built with the patch.&lt;br/&gt;
Committed revision 1188163.&lt;/p&gt;

&lt;p&gt;The machine where I saw that the 15 invocations of splitmessages took 30 seconds, was a four-year-old laptop running Linux.&lt;/p&gt;

&lt;p&gt;On various desktops running Solaris I&apos;ve seen that it takes between 3 and 15 seconds, depending on how powerful the machines are. When changing to fork=no, it&apos;s reduced to 0-2 seconds on those machines.&lt;/p&gt;

&lt;p&gt;So whereas it&apos;s cheaper on the more powerful machines, the cost is still not negligible, even though there are just 15 processes to be started. Bryan, perhaps your experiment ran with processes that were lighter and cheaper to fork than a JVM? Or maybe it was a multi-threaded build system so that other threads could utilize the CPU while one thread was kept up waiting for the forked process to fault in the runtime libraries, or whatever it is that&apos;s taking time?&lt;/p&gt;</comment>
                            <comment id="13134679" author="bryanpendleton" created="Tue, 25 Oct 2011 02:14:48 +0100"  >&lt;p&gt;Well, it was &amp;lt;javac&amp;gt; and &amp;lt;java&amp;gt; tasks that we were forking, so I think it was definitely JVM forking.&lt;/p&gt;

&lt;p&gt;But, it was mostly on Linux boxes. I don&apos;t think we had a single Solaris machine in that build system.&lt;/p&gt;

&lt;p&gt;Another thing is that our machines tended to be massively over-provisioned with real memory, so that&lt;br/&gt;
might also make forking fast.&lt;/p&gt;

&lt;p&gt;On your laptop, do you have JAVA_OPTS or ANT_OPTS or other parameters that might control the&lt;br/&gt;
virtual memory size of the Ant and/or forked Java processes?&lt;/p&gt;

&lt;p&gt;I rather doubt it&apos;s worth pursuing my old memories very far. I see no reason not to remove the forking,&lt;br/&gt;
since as you say it was wholly unnecessary. So it can&apos;t hurt, and since it demonstrably helps at least&lt;br/&gt;
some environments, I say full speed ahead!&lt;/p&gt;</comment>
                            <comment id="13134827" author="knutanders" created="Tue, 25 Oct 2011 09:08:43 +0100"  >&lt;p&gt;I didn&apos;t have any JAVA_OPTS or ANT_OPTS set. All the machines I tested on had 4 GB of RAM, which should be sufficient to build Derby, I think.&lt;/p&gt;

&lt;p&gt;The next problem I found, was that the &amp;lt;chmod&amp;gt; tasks in the binscripts target need close to half a second on all the platforms I have tested (Solaris and Linux). There are six of those, so it totals to three seconds, also in incremental builds when there shouldn&apos;t be anything to do. I&apos;ll file a separate issue for that. I don&apos;t understand this either. Executing six chmod commands from a shell script takes a few milliseconds, so I don&apos;t see why doing the same from Ant should take three seconds. Oh well...&lt;/p&gt;

&lt;p&gt;For the record, I timed the targets by running Ant with these extra parameters: -logger org.apache.tools.ant.listener.ProfileLogger&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12500425" name="d5474.diff" size="1898" author="knutanders" created="Mon, 24 Oct 2011 12:05:42 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Oct 2011 11:30:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>214324</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0axz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35591</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>