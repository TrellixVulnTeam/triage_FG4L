<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:40:14 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4330/DERBY-4330.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4330] NullPointerException or assert failure when re-executing PreparedStatement after lock timeout</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4330</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I came across a query that failed with a NullPointerException (insane jars) or an assert failure (sane jars) when a PreparedStatement was re-executed after a lock timeout. I&apos;m able to reproduce this on 10.3.1.4 and later. 10.2.2.0 and earlier don&apos;t fail. Another fallout from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt;? I&apos;ve also seen other manifestations of the problem, apparently depending on the actual rows in the tables, including &quot;No current connection&quot; and &quot;The heap container with container id Container(0, 1120) is closed&quot;.&lt;/p&gt;

&lt;p&gt;Stack trace for the assert failure:&lt;/p&gt;

&lt;p&gt;org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED JoinResultSet already open&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.JoinResultSet.openCore(JoinResultSet.java:144)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:169)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.SortResultSet.openCore(SortResultSet.java:248)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:169)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:248)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:416)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:297)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1675)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.execute(EmbedPreparedStatement.java:1330)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12431919">DERBY-4330</key>
            <summary>NullPointerException or assert failure when re-executing PreparedStatement after lock timeout</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Jul 2009 19:08:28 +0100</created>
                <updated>Mon, 5 Jul 2010 18:08:03 +0100</updated>
                            <resolved>Fri, 14 Aug 2009 20:31:11 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.3.3.0</version>
                    <version>10.4.1.3</version>
                    <version>10.4.2.0</version>
                    <version>10.5.1.1</version>
                    <version>10.5.2.0</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.3.3.1</fixVersion>
                    <fixVersion>10.4.2.1</fixVersion>
                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12737629" author="knutanders" created="Fri, 31 Jul 2009 19:14:10 +0100"  >&lt;p&gt;Here&apos;s a script that reproduces the bug. I see this when I run the script with sane trunk:&lt;/p&gt;

&lt;p&gt;$ java -jar derbyrun.jar ij repro.sql&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
ij(C1)&amp;gt; execute ps;&lt;br/&gt;
ERROR 40XL1: A lock could not be obtained within the time requested&lt;br/&gt;
ij(C1)&amp;gt; set connection c2;&lt;br/&gt;
ij(C2)&amp;gt; rollback;&lt;br/&gt;
ij(C2)&amp;gt; set connection c1;&lt;br/&gt;
ij(C1)&amp;gt; execute ps;&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED JoinResultSet already open: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12737639" author="knutanders" created="Fri, 31 Jul 2009 19:24:43 +0100"  >&lt;p&gt;This started with revision 540921, which was the commit that enabled the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; changes.&lt;/p&gt;</comment>
                            <comment id="12737801" author="dagw" created="Sat, 1 Aug 2009 02:01:22 +0100"  >&lt;p&gt;This trial patch makes the repro work (not for commit). I agree result set reuse is the problem here.&lt;/p&gt;

&lt;p&gt;There are at least two JoinResultSets here (1 and 2 below) that are marked as open, even when the parent ProjectRestrictResultSet is not so marked (since openCore failed with the timeout).&lt;/p&gt;

&lt;p&gt;So, at reuse time, the top level ProjectRestrictResult skips closing the underlying JoinResultSet structure, because it itself is not marked opened. The patch works around this by cleaning up children if openCore fails, effectively undoing the setting of the isOpen flag.&lt;/p&gt;

&lt;p&gt;1) The top JoinResultSet&apos;s openCore sets its isOpened flag &lt;b&gt;before&lt;/b&gt; it attempts to open the children result sets. This triggers the seen error when the result set is reused (opened again).&lt;br/&gt;
2) Even if that is fixed by moving the setting of isOpened to the end of the method, there is another problem:  A lower level left result set does open correctly, but right child result set in a join fails with the timeout. The left one is thus already open at reuse openCore time. So just moving the flag setting is not sufficient.&lt;/p&gt;


</comment>
                            <comment id="12737943" author="knutanders" created="Sat, 1 Aug 2009 20:51:54 +0100"  >&lt;p&gt;Thanks for looking at this, Dag. I&apos;ll just mention that the patch also fixes the &quot;No current connection&quot; (sane) and &quot;The heap container with container id Container(0, 1120) is closed&quot; (insane) errors that I&apos;ve seen on a database with slightly different rows.&lt;/p&gt;</comment>
                            <comment id="12738418" author="dagw" created="Mon, 3 Aug 2009 17:36:55 +0100"  >&lt;p&gt;Uploading a new repro, showing another incarnation of this problem, this time with a UNION query, which relies on the UnionResultSet. That class&apos; openCore has a similar weakness as JoinResultSet&apos;s.&lt;/p&gt;

&lt;p&gt;With sane code I see this:&lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED UnionResultSet already open: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12738468" author="dagw" created="Mon, 3 Aug 2009 19:11:01 +0100"  >&lt;p&gt;Modifying repro-union.sql to use INTERSECT/EXCEPT combined with an ORDER BY where one of the tables is locked, shows the weakness in SetOpResultSet also. Furthermore SortResultSet has the weakness (seen with the UNION case above). I suspect there are more cases of this...&lt;/p&gt;</comment>
                            <comment id="12739057" author="dagw" created="Tue, 4 Aug 2009 18:38:54 +0100"  >&lt;p&gt;As I suspected, there were more result sets that had to be fixed for this weakness.&lt;br/&gt;
I upload a new patch, derby-4330b, which fixes the following result sets:&lt;/p&gt;

&lt;p&gt;DistinctGroupedAggregateResultSet&lt;br/&gt;
DistinctScalarAggregateResultSet&lt;br/&gt;
GroupedAggregateResultSet&lt;br/&gt;
JoinResultSet&lt;br/&gt;
SetOpResultSet&lt;br/&gt;
SortResultSet&lt;br/&gt;
UnionResultSet&lt;/p&gt;

&lt;p&gt;What they have in common, is that their openCore methods may fail without rolling back any successful opening of underlying result sets. The new code adds rollback by closing the underlying result sets before openCore of the parent is allowed to fail.&lt;/p&gt;

&lt;p&gt;The initial patch&apos;s fix to JoinResultSet is remade to be more targeted.&lt;/p&gt;

&lt;p&gt;The patch also adds test cases for these to  ResultSetsFromPreparedStatementTest.&lt;/p&gt;

&lt;p&gt;Regressions ran ok on an an earlier version of the patch, running them over again now. Please review.&lt;/p&gt;
</comment>
                            <comment id="12739086" author="rhillegas" created="Tue, 4 Aug 2009 19:39:55 +0100"  >&lt;p&gt;Thanks for the patch, Dag. Here&apos;s my understanding of the general problem you have found: When a ResultSet encounters an error at open() time, it fails to close its ResultSet children. I wonder if there is another version of this bug hanging around in the ResultSet.close() methods themselves: If an error occurs during the close of one child of a ResultSet, will the other children be closed or will they dangle open? It may be that you will bag more instances of this bug if you do the following:&lt;/p&gt;

&lt;p&gt;1) Make the ResultSet.close() methods more defensive so that they continue closing the rest of their children even if one child raises an error during close().&lt;/p&gt;

&lt;p&gt;2) Have the ResultSet call its own close() method if an error occurs during open().&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12739172" author="dagw" created="Tue, 4 Aug 2009 22:19:20 +0100"  >&lt;p&gt;Thanks for looking at this so quickly, Rick!&lt;/p&gt;

&lt;p&gt;&amp;gt; Thanks for the patch, Dag. Here&apos;s my understanding of the general&lt;br/&gt;
&amp;gt; problem you have found: When a ResultSet encounters an error at open()&lt;br/&gt;
&amp;gt; time, it fails to close its ResultSet children. &lt;/p&gt;

&lt;p&gt;That is correct.&lt;/p&gt;

&lt;p&gt;&amp;gt; I wonder if there is another version of this bug hanging around in&lt;br/&gt;
&amp;gt; the ResultSet.close() methods themselves: If an error occurs during&lt;br/&gt;
&amp;gt; the close of one child of a ResultSet, will the other children be&lt;br/&gt;
&amp;gt; closed or will they dangle open? It may be that you will bag more&lt;br/&gt;
&amp;gt; instances of this bug if you do the following:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; 1) Make the ResultSet.close() methods more defensive so that they&lt;br/&gt;
&amp;gt; continue closing the rest of their children even if one child raises&lt;br/&gt;
&amp;gt; an error during close().&lt;/p&gt;

&lt;p&gt;This could be done, sure. However, can you see a scenario where an&lt;br/&gt;
error at close time would be retryable (like time-out at open time) ?&lt;/p&gt;

&lt;p&gt;As the code in the patch currently stands, it does not check if the&lt;br/&gt;
exception is a a retryable one, admitted, it just goes ahead and&lt;br/&gt;
closes the child result set(s). In addition to time-out, I imagine&lt;br/&gt;
dead-lock would be a possible candidate candidate, as well as missing&lt;br/&gt;
permissions (which is why the new defensive code does not check for&lt;br/&gt;
time-out explicitly).&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;br/&gt;
&amp;gt; 2) Have the ResultSet call its own close() method if an error occurs&lt;br/&gt;
&amp;gt; during open().&lt;/p&gt;

&lt;p&gt;What I did for now, was to make sure the open method does not mark the&lt;br/&gt;
result set as open before all other actions have been successfully&lt;br/&gt;
performed, cf. the change to UnionResultSet. Would calling close() in&lt;br/&gt;
addition add value to my approach? &lt;br/&gt;
(I was hesitant to apply to much &quot;power&quot;, here without understanding if it&apos;s needed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Perhaps, for those result sets which also make calls to getNextRowCore before they complete openCore (e.g. GroupedAggregateResultSet) need some extra logic&lt;br/&gt;
like that typically contained in close, like e.g. clearCurrentRow, i.e. there is more state to roll back than just closing the underlying result sets. I&apos;ll have a look..&lt;/p&gt;
</comment>
                            <comment id="12739215" author="dagw" created="Tue, 4 Aug 2009 23:22:52 +0100"  >&lt;p&gt;I upload derby-4330c, which uses the result sets&apos; own close methods instead of&lt;br/&gt;
directly calling close on the underlying result sets, addressing Rick&apos;s point 2.&lt;/p&gt;

&lt;p&gt;This should clean up any additional state, provided the close methods work correctly in this (new) &quot;half-opened&quot; context. In my repro tests, the close methods did the job and did not throw. I did inspect the result sets that have additional state and it seems this should work OK provided the underlying close methods don&apos;t throw, but I am not absolutely sure (Rick&apos;s point 1 is still not addressed in the code).&lt;/p&gt;

</comment>
                            <comment id="12739484" author="rhillegas" created="Wed, 5 Aug 2009 14:23:31 +0100"  >&lt;p&gt;Thanks for the new patch, Dag. This looks simpler.&lt;/p&gt;</comment>
                            <comment id="12742474" author="dagw" created="Wed, 12 Aug 2009 18:36:10 +0100"  >&lt;p&gt;I will commit this shortly if there are no further review comments.&lt;/p&gt;</comment>
                            <comment id="12743253" author="dagw" created="Fri, 14 Aug 2009 16:55:04 +0100"  >&lt;p&gt;Commited derby-4330c on trunk as svn 804271.&lt;/p&gt;</comment>
                            <comment id="12743263" author="dagw" created="Fri, 14 Aug 2009 17:16:08 +0100"  >&lt;p&gt;Backported to 10.5 branch as svn 804279 and 804281.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2009-08-21: Knut found an accidental file committed. Fixed as svn  806401 and  806403&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="12743370" author="dagw" created="Fri, 14 Aug 2009 20:14:03 +0100"  >&lt;p&gt;Backported to 10.4 branch as svn 804327&lt;/p&gt;</comment>
                            <comment id="12743382" author="dagw" created="Fri, 14 Aug 2009 20:29:57 +0100"  >&lt;p&gt;Backported to 10.3 branch as svn 804334. resolving.&lt;/p&gt;</comment>
                            <comment id="12745380" author="knutanders" created="Thu, 20 Aug 2009 11:31:43 +0100"  >&lt;p&gt;Thanks for fixing this, Dag. The back-port to 10.5 made some changes to DatabaseMetaDataTest (disabled some test cases and added calls to System.err.println()). Were these intentional?&lt;/p&gt;</comment>
                            <comment id="12745382" author="knutanders" created="Thu, 20 Aug 2009 11:35:05 +0100"  >&lt;p&gt;It also made some changes to DRDAConnThread.&lt;/p&gt;</comment>
                            <comment id="12745583" author="dagw" created="Thu, 20 Aug 2009 20:20:20 +0100"  >&lt;p&gt;Probably not. I probably had forgotten to sanitize my 10.5 sandbox &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Thanks for catching that, Knut, I&apos;ll have a look.&lt;/p&gt;</comment>
                            <comment id="12745740" author="dagw" created="Fri, 21 Aug 2009 01:35:31 +0100"  >&lt;p&gt;Fixed the unintentional commit of cruft in DatabaseMetaDataTest to 10.5. The DRDAConnThread&lt;br/&gt;
cruft had been fixed already. Thanks for noticing, Knut.&lt;br/&gt;
Fixed as svn 806401 and 806403.&lt;/p&gt;</comment>
                            <comment id="12828555" author="knutanders" created="Tue, 2 Feb 2010 09:37:37 +0000"  >&lt;p&gt;Verified fix on trunk. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12327853">DERBY-827</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12415207" name="derby-4330a.diff" size="746" author="dagw" created="Sat, 1 Aug 2009 02:01:21 +0100"/>
                            <attachment id="12415498" name="derby-4330b.diff" size="21412" author="dagw" created="Tue, 4 Aug 2009 18:38:54 +0100"/>
                            <attachment id="12415499" name="derby-4330b.stat" size="582" author="dagw" created="Tue, 4 Aug 2009 18:38:54 +0100"/>
                            <attachment id="12415536" name="derby-4330c.diff" size="21313" author="dagw" created="Tue, 4 Aug 2009 23:22:52 +0100"/>
                            <attachment id="12415537" name="derby-4330c.stat" size="582" author="dagw" created="Tue, 4 Aug 2009 23:22:52 +0100"/>
                            <attachment id="12415378" name="repro-intersect.sql" size="895" author="dagw" created="Mon, 3 Aug 2009 19:12:46 +0100"/>
                            <attachment id="12415372" name="repro-union.sql" size="879" author="dagw" created="Mon, 3 Aug 2009 17:36:55 +0100"/>
                            <attachment id="12415136" name="repro.sql" size="2195" author="knutanders" created="Fri, 31 Jul 2009 19:14:10 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 1 Aug 2009 01:01:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24189</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0px3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38017</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>