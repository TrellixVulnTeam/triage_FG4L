<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:33:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5582/DERBY-5582.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5582]  Access denied (java.lang.RuntimePermission modifyThreadGroup) in IndexStatisticsDaemonImpl.schedule()</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5582</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I user reported this exception with 10.8.2.3 - (1212722) when running regression tests against 10.8.&lt;br/&gt;
As soon as the Index Statistics Thread was initialized they got the stack trace below.&lt;/p&gt;

&lt;p&gt;There was some discussion of this issue on the dev list:&lt;br/&gt;
&lt;a href=&quot;http://old.nabble.com/Report-of-security-manager-issue-with-10.8-and-ndexStatisticsDaemonImpl.schedule-to33137398.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://old.nabble.com/Report-of-security-manager-issue-with-10.8-and-ndexStatisticsDaemonImpl.schedule-to33137398.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I assume the failure is in &lt;br/&gt;
  runningThread = new Thread(this, &quot;index-stat-thread&quot;);&lt;/p&gt;


&lt;p&gt;Stack Trace:&lt;/p&gt;

&lt;p&gt;java.security.AccessControlException: Access denied&lt;br/&gt;
(java.lang.RuntimePermission modifyThreadGroup)&lt;br/&gt;
          at&lt;br/&gt;
java.security.AccessController.checkPermission(AccessController.java:108)&lt;br/&gt;
          at&lt;br/&gt;
java.lang.SecurityManager.checkPermission(SecurityManager.java:544)&lt;br/&gt;
          at&lt;br/&gt;
com.ibm.ws.security.core.SecurityManager.checkPermission(SecurityManager.java:208)&lt;br/&gt;
          at&lt;br/&gt;
com.ibm.ws.security.core.SecurityManager.checkAccess(SecurityManager.java:407)&lt;br/&gt;
          at java.lang.ThreadGroup.checkAccess(ThreadGroup.java:226)&lt;br/&gt;
          at java.lang.Thread.initialize(Thread.java:345)&lt;br/&gt;
          at java.lang.Thread.&amp;lt;init&amp;gt;(Thread.java:281)&lt;br/&gt;
          at java.lang.Thread.&amp;lt;init&amp;gt;(Thread.java:179)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.schedule(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)&lt;br/&gt;
          at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown&lt;br/&gt;
Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedPreparedStatement20.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedPreparedStatement30.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedPreparedStatement40.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
          at&lt;br/&gt;
org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)&lt;br/&gt;
          at&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12539230">DERBY-5582</key>
            <summary> Access denied (java.lang.RuntimePermission modifyThreadGroup) in IndexStatisticsDaemonImpl.schedule()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Jan 2012 00:18:04 +0000</created>
                <updated>Fri, 15 Nov 2013 08:15:11 +0000</updated>
                            <resolved>Fri, 10 Feb 2012 17:33:11 +0000</resolved>
                                    <version>10.8.3.0</version>
                                    <fixVersion>10.8.3.0</fixVersion>
                                    <component>Services</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13190215" author="kmarsden" created="Sat, 21 Jan 2012 00:27:57 +0000"  >&lt;p&gt;I was incorrect in my early assessment that public Thread(Runnable target,&lt;br/&gt;
              String name)&lt;br/&gt;
should not throw a Security exception.  &lt;/p&gt;


&lt;p&gt;I got this comment from the user which I think is a fair assessment.  Derby should use the derby  group for our thread.  I gave them a test build with the change Kristian recommended and will see if that resolves the issue.  I am having a bit of trouble getting a stand alone test case, but will keep working on that.&lt;/p&gt;

&lt;p&gt;According to the javadocs for Thread, that method effectively calls the following signature with TG=null&lt;br/&gt;
public Thread(ThreadGroup group,&lt;br/&gt;
              Runnable target,&lt;br/&gt;
              String name)&lt;br/&gt;
For which the javadocs say:&lt;br/&gt;
&quot;If group is null and there is a security manager, the group is determined by the security manager&apos;s getThreadGroup method. If group is null and there is not a security manager, or the security manager&apos;s getThreadGroup method returns null, the group is set to be the same ThreadGroup as the thread that is creating the new thread. &lt;br/&gt;
If there is a security manager, its checkAccess method is called with the ThreadGroup as its argument.&quot;&lt;br/&gt;
Based on the javadocs for the signature called, group is null, thus the group is determined by the security manager&apos;s getThreadGroup method.  Since our  sec mgr doesn&apos;t override the base sec mgr&apos;s getThreadGroup(), it&apos;s behavior is dependent on that impl.  If it returned null, the group would then be that of the calling thread,&lt;br/&gt;
which based on the stack is a worker thread from the thread pool executing an ejb call.  Since there is a sec mgr, checkAccess is called.  Since the thread is our ejb thread,  not a Derby thread, I&apos;m guessing that IndexStatisticsDaemonImpl.schedule() call doesn&apos;t have perms to add a new Thread to the ThreadGroup?  So maybe the call&lt;br/&gt;
to new up the statistics thread needs to explicitly use the Derby TG?&lt;/p&gt;</comment>
                            <comment id="13190238" author="kmarsden" created="Sat, 21 Jan 2012 01:04:02 +0000"  >&lt;p&gt;derby-5582_10_8_try1_diff.txt&lt;br/&gt;
Attaching the 10.8 patch that I gave the user to try changing the new Thread call to &lt;br/&gt;
Monitor.getMonitor().getDaemonThread(this, &quot;index-stat-thread&quot;, false);&lt;/p&gt;

&lt;p&gt;Not ready for commit. I don&apos;t know if it works and need to add tests.&lt;/p&gt;</comment>
                            <comment id="13190514" author="kristwaa" created="Sat, 21 Jan 2012 19:21:31 +0000"  >&lt;p&gt;KM&amp;gt; Since there is a sec mgr, checkAccess is called. Since the thread is our ejb thread, not a Derby thread, I&apos;m guessing that IndexStatisticsDaemonImpl.schedule() call doesn&apos;t have perms to add a new Thread to the ThreadGroup?&lt;/p&gt;

&lt;p&gt;It&apos;s a bit hard to say which preconditions must be met before the exception is actually thrown. From SecurityManager.checkAccess(ThreadGroup g):&lt;br/&gt;
&quot;&quot;&quot;&lt;br/&gt;
If the thread group argument is the system thread group ( has a null parent) then this method calls checkPermission with the RuntimePermission(&quot;modifyThreadGroup&quot;) permission. If the thread group argument is not the system thread group, this method just returns silently.&lt;br/&gt;
&quot;&quot;&quot;&lt;/p&gt;

&lt;p&gt;Note that the documentation separates only between the system thread group and other thread groups. In my mind the thread pool referred to above would have to be part of the system thread group for the exception to be raised, unless there are custom security measures in place.&lt;br/&gt;
Which JVM was the issue seen on?&lt;/p&gt;

&lt;p&gt;KM&amp;gt; So maybe the call to new up the statistics thread needs to explicitly use the Derby TG? &lt;/p&gt;

&lt;p&gt;Yes, I think that&apos;s the right thing to do in any case. That could also make it easier for someone wanting to implement a stricter security manager (i.e to allow only some components in a stack to create new threads).&lt;/p&gt;</comment>
                            <comment id="13191423" author="kmarsden" created="Mon, 23 Jan 2012 20:29:51 +0000"  >&lt;p&gt;The patch corrected the problem in the user environment.  I am going to go ahead and commit while working on a custom SecurityManager reproduction so I can get them the fix quickly.&lt;/p&gt;</comment>
                            <comment id="13193417" author="kmarsden" created="Wed, 25 Jan 2012 22:56:08 +0000"  >&lt;p&gt;Here is a reproduction for the issue. MySecurityManager has a checkAccess(ThreadGroup tg) method which prevents creation of the index-stat thread with the default (parent) Thread Group.&lt;/p&gt;

&lt;p&gt;$ java Derby5582Runner&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: derby.daemons&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: derby.daemons&lt;br/&gt;
currentGroup:system&lt;br/&gt;
tg group: system&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
initialized derby&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: main&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: privtg&lt;br/&gt;
currentGroup:main&lt;br/&gt;
tg group: privtg&lt;br/&gt;
currentGroup:system&lt;br/&gt;
Enter run()&lt;br/&gt;
tg group: system&lt;br/&gt;
currentGroup:privtg&lt;br/&gt;
tg group: derby.daemons&lt;br/&gt;
Created database&lt;br/&gt;
Firing off the worker thread&lt;br/&gt;
Starting index-stat thread&lt;br/&gt;
currentGroup:privtg&lt;br/&gt;
tg group: privtg&lt;br/&gt;
throwing security exception&lt;br/&gt;
got exception&lt;br/&gt;
java.sql.SQLException: Java exception: &apos;No permission to private ThreadGroup privtg: java.lang.SecurityException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:98)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:436)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2288)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:153)&lt;br/&gt;
        at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Driver40.java:107)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1613)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(EmbedConnection.java:1441)&lt;br/&gt;
        at Derby5582Runner.run(Derby5582Runner.java:43)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:736)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;No permission to private ThreadGroup privtg: java.lang.SecurityExcept&lt;br/&gt;
ion&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:12&lt;br/&gt;
2)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
        ... 12 more&lt;br/&gt;
Caused by: java.lang.SecurityException: No permission to private ThreadGroup privtg&lt;br/&gt;
        at MySecurityManager.checkAccess(MySecurityManager.java:10)&lt;br/&gt;
        at java.lang.ThreadGroup.checkAccess(ThreadGroup.java:226)&lt;br/&gt;
        at java.lang.Thread.initialize(Thread.java:331)&lt;br/&gt;
        at java.lang.Thread.&amp;lt;init&amp;gt;(Thread.java:267)&lt;br/&gt;
        at java.lang.Thread.&amp;lt;init&amp;gt;(Thread.java:165)&lt;br/&gt;
        at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.schedule(IndexStatisticsDaemonImpl.java:257)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepMinion(GenericStatement.java:569)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericStatement.prepare(GenericStatement.java:97)&lt;br/&gt;
        at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(GenericLanguageConne&lt;br/&gt;
ctionContext.java:1103)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.&amp;lt;init&amp;gt;(EmbedPreparedStatement.java:134)&lt;br/&gt;
        ... 5 more&lt;br/&gt;
run done&lt;/p&gt;</comment>
                            <comment id="13193835" author="kristwaa" created="Thu, 26 Jan 2012 13:45:48 +0000"  >&lt;p&gt;Just for clarity, was the original exception throw due to a custom SecurityManager in the user environent, or because the VM chose (for whatever reason) the system thread group as the home for the new thread?&lt;/p&gt;</comment>
                            <comment id="13194021" author="kmarsden" created="Thu, 26 Jan 2012 17:48:25 +0000"  >&lt;p&gt;They do have a custom SecurityManager (From the trace :com.ibm.ws.security.core.SecurityManager) &lt;br/&gt;
I don&apos;t have access to that code but was told that it would prevent access to the ejb thread group which would be the parent when Derby was run.  My repro doesn&apos;t give the exact same error regarding modifyThreadGroup, but I think it is generally a representation of what was happening in their environment.  Probably I am not throwing the right Exception, exactly to match their symptom.&lt;/p&gt;

&lt;p&gt;One thing I wondered about is why we create the index statistics thread in a lazy fashion.  I wonder if it might be safer to just create it up front to make any issues apparent and avoid any context related issues when it kicks in. &lt;/p&gt;
</comment>
                            <comment id="13194084" author="kristwaa" created="Thu, 26 Jan 2012 19:00:04 +0000"  >&lt;p&gt;Ok.&lt;br/&gt;
Explicitly specifying the thread group to create the new thread should take care of most scenarios, like the one reported by this user.&lt;br/&gt;
There&apos;s one other thing to consider. There&apos;s a group of operations / method calls that go through check-methods in the security manager, and most of the time these check-methods simply quietly return. Examples are (all relevant to Derby) new ThreadGroup(...), Thread.setDaemon(), and new Thread(...). It is rare (based on the number of error reports we&apos;ve seen) but possible to write custom check-methods that would require permissions to be granted for these operations even if they don&apos;t involve system threads or system thread groups. By wrapping these calls in doPrivileged-blocks, we would make it easier to write such custom check-methods.&lt;br/&gt;
Is this something that sounds useful?&lt;/p&gt;

&lt;p&gt;I can try to write a sample to make it easier to understand the issue. Note that this is different from, but also similar to, the issue reported by this JIRA. The custom security manager of the system used by the user was protecting one or more thread groups from modification, whereas what I&apos;m talking about here is restricting sensitive thread operations in a broader sense (i.e. you would have to grant certain permissions to all code bases creating thread groups and/or threads).&lt;/p&gt;


&lt;p&gt;I think when to create the index statistics thread was discussed during the development of the feature. The conclusion was that we didn&apos;t want another per-database thread, mostly idle, hanging around.&lt;/p&gt;</comment>
                            <comment id="13194097" author="kmarsden" created="Thu, 26 Jan 2012 19:16:22 +0000"  >&lt;p&gt;Kristian asked.&lt;br/&gt;
&amp;gt;By wrapping these calls in doPrivileged-blocks, we would make it easier to write such custom check-methods.&lt;br/&gt;
Is this something that sounds useful? &lt;/p&gt;

&lt;p&gt;I think it would be good and correct to wrap them  and could potentially be useful. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5571&quot; title=&quot;IndexStatisticsDaemonImpl.schedule  should wrap Thread.setDaemon() in a privilege block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5571&quot;&gt;&lt;del&gt;DERBY-5571&lt;/del&gt;&lt;/a&gt; touches on this but probably need a more general issue or change that one to cover the other calls.&lt;/p&gt;

&lt;p&gt;I think that might be a great newcomer task&lt;/p&gt;</comment>
                            <comment id="13194346" author="kmarsden" created="Fri, 27 Jan 2012 01:36:04 +0000"  >&lt;p&gt;Attached is the trunk diff with the test. derby-5582_trunk_withtest_diff.txt  I am  not sure my checkAccess method is quite right. I would prefer to get the actual modifyThreadGroup message to be thrown.&lt;/p&gt;

&lt;p&gt;Please review&lt;/p&gt;</comment>
                            <comment id="13194609" author="kristwaa" created="Fri, 27 Jan 2012 11:19:05 +0000"  >&lt;p&gt;Kathey, I can&apos;t find the actual test code in the diff you attached. Can you provide a new diff?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13194848" author="kmarsden" created="Fri, 27 Jan 2012 15:26:47 +0000"  >&lt;p&gt;My apologies. Here it is.&lt;/p&gt;</comment>
                            <comment id="13195104" author="kmarsden" created="Fri, 27 Jan 2012 21:17:18 +0000"  >&lt;p&gt;I went ahead and checked this in to trunk, but would appreciate review. I can submit a follow-up patch with any needed changes to the tests&lt;/p&gt;</comment>
                            <comment id="13198748" author="kristwaa" created="Thu, 2 Feb 2012 12:42:58 +0000"  >&lt;p&gt;There are some formatting issues in the patch (i.e. use of tabs, especially mixing spaces and tabs for indentation on the same line), and I was wondering why this condition is included in the checkAccess(ThreadGroup g) method:&lt;br/&gt;
    !currentGroup.getName().equals(&quot;main&quot;)&lt;br/&gt;
From what I can understand, it&apos;s there to stop the thread/-group initialization in testDerby5582 from failing. The if then expresses &quot;deny operation if target thread group is &apos;privtg&apos; and the current thread is not in the threadgroup &apos;main&apos;&quot;.&lt;/p&gt;

&lt;p&gt;Look good to me otherwise.&lt;/p&gt;
</comment>
                            <comment id="13204050" author="kmarsden" created="Wed, 8 Feb 2012 22:12:56 +0000"  >&lt;p&gt;Thank you Kristian for looking at the patch. That is correct regarding the condition. We want the main thread to be able to make the original thread created in main to be in the privtg group but not other ones.&lt;/p&gt;

&lt;p&gt;Regarding the formatting. SecurityManagerSetup has become such a mix of tabs and spaces that it is hard to figure out.  Would anyone object to a reformating patch to change this one to just spaces. You lose some history in annotation on trunk but could always go back to other branches for the annotation  if that is needed.&lt;/p&gt;


</comment>
                            <comment id="13204340" author="kristwaa" created="Thu, 9 Feb 2012 07:59:44 +0000"  >&lt;p&gt;I was thinking of the lines changed by the patch only, but I agree it&apos;s a bit more work now that it has been committed (i.e. no longer a simple search and replace).&lt;br/&gt;
Looking at the SecurityManager-class, it has gone though quite a few modifications over time. Maybe it&apos;s better to leave things as they are and do the reformatting at a single point in the future (&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;)?&lt;/p&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;  May possibly be very distant. Maybe version 11, whenever that comes along, is the first opportunity?&lt;/p&gt;</comment>
                            <comment id="13204626" author="mikem" created="Thu, 9 Feb 2012 16:35:21 +0000"  >&lt;p&gt;personally I am ok with changing an inconsistent file to consistent fot tab vs spaces, especially if you are actively working on the file and it is causing&lt;br/&gt;
problems as above.  I like the change to be a separate checkin from the bug fix to make it clear what you are doing.  When I do it I try to &lt;br/&gt;
add some extra value by fixing comments, maybe adding some javadoc where it is missing, ...   Long term I think we agreed that spaces is&lt;br/&gt;
the right direction.  &lt;/p&gt;

&lt;p&gt;As you point out there is some loss of history in trunk, so not ready to mass do this for the sake of doing it.  But again if you are working on a file&lt;br/&gt;
and it is inconsistent, and it makes it easier for you to work on the file, i say go ahead.&lt;/p&gt;</comment>
                            <comment id="13205051" author="kmarsden" created="Thu, 9 Feb 2012 23:40:11 +0000"  >
&lt;p&gt;I have to say eclipse is pretty infuriating in this regard.  I try to switch it back and forth based on where I am but it insists on odd things.  I will fix the tab in AutomaticIndexStatisticsTest and leave SecurityManagerSetup reformating for now.   Looking at history of this  file I see Kristian seems to take the approach of always using spaces for new lines, even when the surrounding code is tabs. Maybe that is the best way to go.&lt;/p&gt;


</comment>
                            <comment id="13205534" author="dagw" created="Fri, 10 Feb 2012 16:40:36 +0000"  >&lt;p&gt;&amp;gt; I see Kristian seems to take the approach of always using spaces for new lines, even when the surrounding code is tabs&lt;/p&gt;

&lt;p&gt;Knut and I also switched to this some time ago.&lt;/p&gt;</comment>
                            <comment id="13823410" author="knutanders" created="Fri, 15 Nov 2013 08:15:11 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update: close all resolved issues that haven&amp;#39;t had any activity the last year&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511903" name="Derby5582Runner.java" size="3205" author="kmarsden" created="Wed, 25 Jan 2012 22:56:07 +0000"/>
                            <attachment id="12511904" name="MySecurityManager.java" size="575" author="kmarsden" created="Wed, 25 Jan 2012 22:56:07 +0000"/>
                            <attachment id="12511340" name="derby-5582_10_8_try1_diff.txt" size="1621" author="kmarsden" created="Sat, 21 Jan 2012 01:04:02 +0000"/>
                            <attachment id="12512180" name="derby-5582_trunk_withtest_diff.txt" size="12094" author="kmarsden" created="Fri, 27 Jan 2012 15:26:47 +0000"/>
                            <attachment id="12512063" name="derby-5582_trunk_withtest_diff.txt" size="7085" author="kmarsden" created="Fri, 27 Jan 2012 01:36:03 +0000"/>
                            <attachment id="12513873" name="derby-5582_whitespace_diff.txt" size="21233" author="kmarsden" created="Wed, 8 Feb 2012 22:22:15 +0000"/>
                            <attachment id="12511905" name="derby5582.policy" size="56" author="kmarsden" created="Wed, 25 Jan 2012 22:56:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Jan 2012 19:21:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>224732</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0e5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36111</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>