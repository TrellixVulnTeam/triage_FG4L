<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:26:22 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6419/DERBY-6419.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6419] Make BTree scan honor  OPENMODE_LOCK_NOWAIT for row locks.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6419</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Optimization desirable to support deferred constraints.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12679933">DERBY-6419</key>
            <summary>Make BTree scan honor  OPENMODE_LOCK_NOWAIT for row locks.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12313704">DERBY-532</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Nov 2013 11:48:38 +0000</created>
                <updated>Thu, 5 Jun 2014 22:33:18 +0100</updated>
                            <resolved>Thu, 20 Mar 2014 20:58:41 +0000</resolved>
                                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13831880" author="jira-bot" created="Mon, 25 Nov 2013 20:30:49 +0000"  >&lt;p&gt;Commit 1545394 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1545394&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1545394&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-532&quot; title=&quot;Support deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-532&quot;&gt;&lt;del&gt;DERBY-532&lt;/del&gt;&lt;/a&gt; Support deferrable constraints&lt;/p&gt;

&lt;p&gt;Patch derby-532-post-scan-4 implements basic support for deferred&lt;br/&gt;
constraints for PRIMARY KEY and UNIQUE constraints. Deferrable&lt;br/&gt;
constraints are not enabled by default yet; one needs to set a&lt;br/&gt;
property to try the feature: &quot;derby.constraintsTesting&quot;.&lt;/p&gt;

&lt;p&gt;This patch enables deferred constraints for:&lt;/p&gt;

&lt;p&gt;    a) primary key constraints&lt;br/&gt;
    b) unique constraint with not nullable columns&lt;br/&gt;
    c) unique constraint with nullable columns&lt;/p&gt;

&lt;p&gt;by new logic in insertion and sorts.&lt;/p&gt;

&lt;p&gt;The patch includes relaxing the constraint at insertion and update&lt;br/&gt;
time, as well as adding a constraint to an existing table. &lt;/p&gt;

&lt;p&gt;Derby treats constraints a) and b) the same, and in the code these are&lt;br/&gt;
marked as &quot;unique&quot; when they are not deferrable (as in existing code).&lt;/p&gt;

&lt;p&gt;Constraint type c) is currently marked as&lt;br/&gt;
&quot;uniqueWithDuplicateNulls&quot;. Insert/update of these is implemented in&lt;br/&gt;
the BTree by including the RowLocation of the base row in the set of&lt;br/&gt;
keys in the index row (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3330&quot; title=&quot;provide support for unique constraint over keys that include one or more nullable columns.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3330&quot;&gt;&lt;del&gt;DERBY-3330&lt;/del&gt;&lt;/a&gt;). This makes them trivially unique,&lt;br/&gt;
but there is an extra code path in BTreeController that checks&lt;br/&gt;
neighbor rows for duplicates, and only allows insertion if the key&lt;br/&gt;
contains a null. When adding a constraint to an existing table, these&lt;br/&gt;
are handled by a specially crafted sorter&lt;br/&gt;
(UniqueWithDuplicateNullsMergeSort).&lt;/p&gt;

&lt;p&gt;The implementation of insert/update of deferrable indexes is based on&lt;br/&gt;
a similar approach, i.e. by backing with a non-unique index, and checking &lt;br/&gt;
duplicates in the language layer, notably IndexChanger.&lt;/p&gt;

&lt;p&gt;In IndexChanger, after inserting a row, we check if it is unique by&lt;br/&gt;
performing a scan of the BTree. A time-out here leads to a pessimistic&lt;br/&gt;
assumption that there is a duplicate. Duplicate key values are saved&lt;br/&gt;
until checking time (usually commit time), when a new scan is&lt;br/&gt;
performed to validate the uniqueness property.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;This means a) and b) if deferrable are no longer marked &amp;quot;unique&amp;quot;&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Deferrable indexes are not shared.&lt;/p&gt;

&lt;p&gt;If there are duplicates and we have deferred constraint mode (a&lt;br/&gt;
dynamic session property), we save the duplicate index row in a disk&lt;br/&gt;
based hash table (DeferredDuplicates#rememberDuplicate).&lt;/p&gt;

&lt;p&gt;For a) and b), constraints which are deferrable are marked as&lt;br/&gt;
&quot;uniqueDeferrable&quot; and &quot;hasDeferrableChecking&quot;. Constraints of type c)&lt;br/&gt;
which are deferrable are marked &quot;uniqueWithDuplicateNulls&quot; and&lt;br/&gt;
&quot;hasDeferrableChecking&quot;. These marks determines the code paths&lt;br/&gt;
used. Note that existing indexes and non-deferrable constraint do not&lt;br/&gt;
get a new code path, which should preserve correctness and performance&lt;br/&gt;
of those.&lt;/p&gt;

&lt;p&gt;Now, with these markers in place, deferral of checks happens in three&lt;br/&gt;
places:&lt;/p&gt;

&lt;p&gt;    {{ IndexChanger#insertAndCheckDups}}&lt;/p&gt;

&lt;p&gt;    {{CreateIndexConstantAction#executeConstantAction +&lt;br/&gt;
     MergeSort#compare and UniqueWithDuplicateNullsMergeSort#compare }}&lt;/p&gt;

&lt;p&gt;    &lt;tt&gt;InsertResultSet#setUpAllSorts&lt;/tt&gt;&lt;/p&gt;


&lt;p&gt;The former is active for deferral under INSERT and UPDATE. The middle&lt;br/&gt;
when adding a deferrable constraint to an existing table, when we sort&lt;br/&gt;
existing rows detecting any duplicates. The last is used when importing&lt;br/&gt;
rows.&lt;/p&gt;

&lt;p&gt;At transaction commit (1), or when the constraint mode for a deferred&lt;br/&gt;
constraint is changed back to immediate (2), we validate the&lt;br/&gt;
constraint (DeferredDuplicates#validate) by replaying the hash table&lt;br/&gt;
and scanning the index for the duplicate index rows to ascertain there&lt;br/&gt;
are none, or else we have an error: transaction or statement severity&lt;br/&gt;
respectively for (1) and (2).&lt;/p&gt;

&lt;p&gt;The constraint mode is a SQL session level variable, and inside&lt;br/&gt;
routines (nested connections), we push this on the stack. This means&lt;br/&gt;
change of the constraint mode inside nested connections will be popped&lt;br/&gt;
on routine exit. If, as part of this, a constraint changes from&lt;br/&gt;
deferred to immediate mode, we also validate it for correctness. If&lt;br/&gt;
this fail, the transaction rolls back&lt;br/&gt;
We needed to do this from a newly introduced method,&lt;br/&gt;
GenericLanguageConnectionContext#popNestedSessionContext. This&lt;br/&gt;
pops the SQL session context.&lt;br/&gt;
That hook is called from GenericPreparedStatement#executeStmt. As a&lt;br/&gt;
part of this effort, we also renamed #setupNestedSessionContext to&lt;br/&gt;
#pushNestedSessionContext.&lt;/p&gt;

&lt;p&gt;The patch also adds support for checking deferred constraints in&lt;br/&gt;
xa_prepare and xa_commit (.., true), cf. specification attached to the&lt;br/&gt;
JIRA issue.&lt;/p&gt;

&lt;p&gt;Concurrency: if a transaction gets a lock time-out when trying to&lt;br/&gt;
establish if a row just inserted is a duplicate (another transaction&lt;br/&gt;
may have just inserted a row with a similar index key), we use a&lt;br/&gt;
pessimistics assumption and add that key to the set of keys to be&lt;br/&gt;
checked at commit time. If a key can&apos;t be grabbed then, a time-out is&lt;br/&gt;
thrown. We plan to add an optimized scan to avoid waiting for the lock&lt;br/&gt;
at insertion time, cf &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6419&quot; title=&quot;Make BTree scan honor  OPENMODE_LOCK_NOWAIT for row locks.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6419&quot;&gt;&lt;del&gt;DERBY-6419&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &quot;not enforced&quot; feature is not yet implemented in this patch.&lt;/p&gt;

&lt;p&gt;Several new test cases been added to ConstraintCharacteristicsTest to&lt;br/&gt;
test these basic behaviors.&lt;/p&gt;</comment>
                            <comment id="13833169" author="dagw" created="Tue, 26 Nov 2013 22:40:21 +0000"  >&lt;p&gt;Uploading an experimental patch which seems to do the job. Using the debugger I can see that the current wait in ConstraintCharactericsTest#testLocking, line 417 as of svn 1545394 is no longer waiting with the patch, and stepping through the code in IndexChanger I can see that the second next() which currently waits returns immediately with an exception as desired.&lt;/p&gt;

&lt;p&gt;Instead of overloading the current flag OPENMODE_LOCK_NOWAIT, I introduced a new flag OPENMODE_LOCK_ROW_NOWAIT instead. The short circuiting logic was added in B2IRowLocking3#LockRowOnPage: I had to added an accessor to HeapController to get at the open_mode of the base table&apos;s conglomerate; not sure if that&apos;s kosher or not. An alternative could be to keep to flag in the B2IForwardScan object.&lt;/p&gt;

&lt;p&gt;Running regressions.&lt;/p&gt;


</comment>
                            <comment id="13840764" author="dagw" created="Fri, 6 Dec 2013 01:03:16 +0000"  >&lt;p&gt;Uploading a follow-up patch. From my sandbox git commit log:&lt;/p&gt;

&lt;p&gt;Only short circuit waiting for lock in BTree scan to check duplicates&lt;br/&gt;
for a deferred unique/pk constraint if constraint mode is deferred&lt;br/&gt;
(i.e. not if immediate).&lt;/p&gt;

&lt;p&gt;Added a test case lifted from UniqueConstraintMultiThreadedTest, which&lt;br/&gt;
exposed the issue when we run the regressions with default deferrable&lt;br/&gt;
by default (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-532&quot; title=&quot;Support deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-532&quot;&gt;&lt;del&gt;DERBY-532&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13845384" author="jira-bot" created="Wed, 11 Dec 2013 13:39:54 +0000"  >&lt;p&gt;Commit 1550135 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1550135&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1550135&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6419&quot; title=&quot;Make BTree scan honor  OPENMODE_LOCK_NOWAIT for row locks.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6419&quot;&gt;&lt;del&gt;DERBY-6419&lt;/del&gt;&lt;/a&gt; Make BTree scan honor OPENMODE_LOCK_NOWAIT for row locks&lt;/p&gt;

&lt;p&gt;Patch derby-6419-1 introduces a mode to avoid waiting for row locks in&lt;br/&gt;
BTeee scans.  Using the debugger I can see that the current wait in&lt;br/&gt;
ConstraintCharactericsTest#testLocking, line 417 as of svn 1545394 is&lt;br/&gt;
no longer waiting with the patch, and stepping through the code in&lt;br/&gt;
IndexChanger I can see that the second next() which currently waits&lt;br/&gt;
returns immediately with an exception as desired.&lt;/p&gt;

&lt;p&gt;Instead of overloading the current flag OPENMODE_LOCK_NOWAIT, I&lt;br/&gt;
introduced a new flag OPENMODE_LOCK_ROW_NOWAIT instead. The short&lt;br/&gt;
circuiting logic was added in B2IRowLocking3#LockRowOnPage: I had to&lt;br/&gt;
added an accessor to HeapController to get at the open_mode of the&lt;br/&gt;
base table&apos;s conglomerate; not sure if that&apos;s kosher or not. An&lt;br/&gt;
alternative could be to keep to flag in the B2IForwardScan object.&lt;/p&gt;</comment>
                            <comment id="13845795" author="jira-bot" created="Wed, 11 Dec 2013 22:36:48 +0000"  >&lt;p&gt;Commit 1550299 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagw&quot; class=&quot;user-hover&quot; rel=&quot;dagw&quot;&gt;Dag H. Wanvik&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1550299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1550299&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6419&quot; title=&quot;Make BTree scan honor  OPENMODE_LOCK_NOWAIT for row locks.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6419&quot;&gt;&lt;del&gt;DERBY-6419&lt;/del&gt;&lt;/a&gt; Make BTree scan honor OPENMODE_LOCK_NOWAIT for row locks&lt;/p&gt;

&lt;p&gt;A follow-up patch: derby-6419-followup.&lt;/p&gt;

&lt;p&gt;Only short circuit waiting for lock in BTree scan to check duplicates&lt;br/&gt;
for a deferred unique/pk constraint if constraint mode is deferred&lt;br/&gt;
(i.e. not if immediate).&lt;/p&gt;

&lt;p&gt;Added a test case lifted from UniqueConstraintMultiThreadedTest, which&lt;br/&gt;
exposed the issue when we run the regressions with default deferrable&lt;br/&gt;
by default (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-532&quot; title=&quot;Support deferrable constraints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-532&quot;&gt;&lt;del&gt;DERBY-532&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13942266" author="dagw" created="Thu, 20 Mar 2014 20:58:41 +0000"  >&lt;p&gt;I don&apos;t plan further work on this, so marking Resolved.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12615930" name="derby-6419-1.diff" size="6930" author="dagw" created="Tue, 26 Nov 2013 22:41:13 +0000"/>
                            <attachment id="12615929" name="derby-6419-1.status" size="777" author="dagw" created="Tue, 26 Nov 2013 22:41:13 +0000"/>
                            <attachment id="12617285" name="derby-6419-followup.diff" size="8334" author="dagw" created="Fri, 6 Dec 2013 01:03:16 +0000"/>
                            <attachment id="12617286" name="derby-6419-followup.status" size="493" author="dagw" created="Fri, 6 Dec 2013 01:03:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Nov 2013 20:30:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359290</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzjs7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359589</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>