<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:26 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6008/DERBY-6008.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6008] Allow ORDER BY and FETCH/OFFSET in set operands</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6008</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently, Derby doesn&apos;t allow ORDER BY nested in a set operand, e.g. in the following construct:&lt;/p&gt;

&lt;p&gt;(select i from t1 order by j offset 1 row)    union &lt;br/&gt;
(select i from t2 order by j desc offset 2 rows)&lt;/p&gt;

&lt;p&gt;This is allowed by the standard, as far as I can understand, cf. this quote from section 7.12 in SQL 2011:&lt;/p&gt;

&lt;p&gt;&amp;lt;query expression body&amp;gt; ::=&lt;br/&gt;
    &amp;lt;query term&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   &amp;lt;query expression body&amp;gt; UNION [ ALL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; DISTINCT ]&lt;br/&gt;
  [ &amp;lt;corresponding spec&amp;gt; ] &amp;lt;query term&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;   &amp;lt;query expression body&amp;gt; EXCEPT [ ALL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; DISTINCT ]&lt;br/&gt;
  [ &amp;lt;corresponding spec&amp;gt; ] &amp;lt;query term&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;&amp;lt;query term&amp;gt; ::=&lt;br/&gt;
   &amp;lt;query primary&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &amp;lt;query term&amp;gt; INTERSECT [ ALL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; DISTINCT ]&lt;br/&gt;
   [ &amp;lt;corresponding spec&amp;gt; ] &amp;lt;query primary&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;&amp;lt;query primary&amp;gt; ::=&lt;br/&gt;
   &amp;lt;simple table&amp;gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &amp;lt;left paren&amp;gt; &amp;lt;query expression body&amp;gt;&lt;br/&gt;
     [ &amp;lt;order by clause&amp;gt; ] [ &amp;lt;result offset clause&amp;gt; ] [ &amp;lt;fetch first clause&amp;gt; ] &amp;lt;right paren&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;I.e. the left paren chooses the second alternative in the production for &amp;lt;query primary&amp;gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12618971">DERBY-6008</key>
            <summary>Allow ORDER BY and FETCH/OFFSET in set operands</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dagw">Dag H. Wanvik</assignee>
                                    <reporter username="dagw">Dag H. Wanvik</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Dec 2012 23:54:44 +0000</created>
                <updated>Wed, 3 Sep 2014 09:31:25 +0100</updated>
                            <resolved>Mon, 31 Dec 2012 03:52:34 +0000</resolved>
                                                    <fixVersion>10.10.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                            <comments>
                            <comment id="13510980" author="dagw" created="Thu, 6 Dec 2012 00:39:26 +0000"  >&lt;p&gt;Uploading a patch that makes this construction work, running regressions.&lt;/p&gt;</comment>
                            <comment id="13511299" author="dagw" created="Thu, 6 Dec 2012 11:59:51 +0000"  >&lt;p&gt;Regressions ran without errors.&lt;/p&gt;</comment>
                            <comment id="13511309" author="dagw" created="Thu, 6 Dec 2012 12:25:54 +0000"  >&lt;p&gt;Uploaded a slightly improved version of the patch, &quot;*-b&quot;, (reintroduced a sane assertion I first removed erroneously).&lt;/p&gt;

&lt;p&gt;Patch details:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj&lt;/p&gt;

&lt;p&gt;Extends the production &quot;nonJoinQueryPrimary&quot; to allow &quot;orderByClause&quot; and &quot;offsetFetchFirstClause&quot;.&lt;br/&gt;
If we see one ore more of the above and the query expression is a SELECT (i.e. not a VALUES clause), we push the clauses into the SelectNode, else give an error message.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/SelectNode.java&lt;/p&gt;

&lt;p&gt;Up till now, the clauses haven&apos;t been pushed down to SelectNode after binding; being collected by other node types, e.g. CursorNode and InsertNode, so we add logic to SelectNode to cater for the fact we now need to make binding happen of the clauses in that node type, too. Additionally, we do the shenanigans of hoisting up order by columns into the select if not already there, and remove duplicates after binding. &lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/SetOperatorNode.java&lt;/p&gt;

&lt;p&gt;Any added hoisted order by column to the operand select node must be removed from the copied list when we build the result column list for thopse nodes.&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java&lt;/p&gt;

&lt;p&gt;Extended two comments to reflect new reality.&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/OrderByAndOffsetFetchInSubqueries.java&lt;/p&gt;

&lt;p&gt;Added test fixture testNestingInsideSetOperation.&lt;/p&gt;</comment>
                            <comment id="13511484" author="knutanders" created="Thu, 6 Dec 2012 16:03:57 +0000"  >&lt;p&gt;I tested some queries in ij, and the patch seems to do the right thing.&lt;/p&gt;

&lt;p&gt;The syntax check in the set operations seems to be a little stricter than in a top-level query, as we accept&lt;/p&gt;

&lt;p&gt;  VALUES 3, 2, 1 ORDER BY 1&lt;/p&gt;

&lt;p&gt;but not&lt;/p&gt;

&lt;p&gt;  (VALUES 3, 2, 1 ORDER BY 1) UNION VALUES 4&lt;/p&gt;

&lt;p&gt;If the former is valid SQL, we should probably allow the latter too, but I haven&apos;t checked what the standard says.&lt;/p&gt;

&lt;p&gt;Apart from that, it looks fine to me.&lt;/p&gt;

&lt;p&gt;And a tiny nit, feel free to ignore: In the error checking added to nonJoinQueryPrimary(), the two inner if statement levels could probably be flattened to a single level, which might make it a little clearer.&lt;/p&gt;</comment>
                            <comment id="13512063" author="dagw" created="Thu, 6 Dec 2012 20:09:17 +0000"  >&lt;p&gt;Thanks, Knut. I agree. Uploaded a version &quot;c&quot; of the patch which opens up for VALUES also. As far as I can see it&apos;s valid SQL. I kept a check on the node types in nonJoinQueryPrimary, albeit simplified in structure as you suggested, to guard against future extensions, although that&apos;s probably unnecessary now (checking for select, union or rowresultset nodes; the two latter used for VALUES).&lt;/p&gt;

&lt;p&gt;Added suitable bind-time operations for SetOperatorNode and RowResultSetNode. Note the boolean flag &quot;dontRemoveOrderingColumns&quot; which guards against removal when the node isn&apos;t really a UNION but represents the top level for a VALUES clause with an ORDER BY.&lt;/p&gt;

&lt;p&gt;Added more tests for the new cases. Rerunning regressions.&lt;/p&gt;
</comment>
                            <comment id="13526091" author="bryanpendleton" created="Fri, 7 Dec 2012 02:29:37 +0000"  >&lt;p&gt;This must be a (relatively) recent enhancement to SQL; my decades old memory of the overall&lt;br/&gt;
structure of an SQL query was that ORDER BY was the &quot;outermost&quot; or final step in query processing.&lt;/p&gt;

&lt;p&gt;I have these vague memories of various relational &quot;purists&quot; even arguing that the theoretical reason&lt;br/&gt;
for this was that ORDER BY was not part of the relational theory proper, but rather was just something&lt;br/&gt;
that user interfaces would do for display purposes. &lt;/p&gt;

&lt;p&gt;That is, all processing was supposed to be done with mathematically pure &quot;sets&quot; of data, and so&lt;br/&gt;
it was supposed to make no sense to ORDER BY an intermediate result.&lt;/p&gt;

&lt;p&gt;I guess what I&apos;m trying to figure out is why you would ever want to ORDER BY a portion of your query&lt;br/&gt;
results, rather than ordering the final result.&lt;/p&gt;

&lt;p&gt;Are there queries that will now return different results, as mathematical sets? Or is this just a way&lt;br/&gt;
to sort some, but not all, of your data?&lt;/p&gt;</comment>
                            <comment id="13526244" author="knutanders" created="Fri, 7 Dec 2012 09:15:20 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;I think ORDER BY in sub-queries was added in SQL:2008, so you&apos;re right it&apos;s quite new. And you&apos;re also right that ORDER BY doesn&apos;t make much sense on its own in a sub-query of a set operation, as the top-level set operation doesn&apos;t guarantee that the ordering of the sub-queries is preserved in the final result. However, in combination with FETCH and OFFSET clauses, it starts making sense. If you for example want to see a list of all countries that are among the 10 largest countries in the world both in area and in population, you might be able to express that as:&lt;/p&gt;

&lt;p&gt;(SELECT NAME FROM COUNTRIES ORDER BY POPULATION DESC FETCH FIRST 10 ROWS ONLY)&lt;br/&gt;
INTERSECT&lt;br/&gt;
(SELECT NAME FROM COUNTRIES ORDER BY AREA DESC FETCH FIRST 10 ROWS ONLY)&lt;/p&gt;

&lt;p&gt;Here, the ORDER BY clauses do matter, as FETCH FIRST needs ordering in order to tell what FIRST actually means. Without the ORDER BY clauses, each sub-query would return no more than ten rows, but it would be undefined which ten rows.&lt;/p&gt;</comment>
                            <comment id="13526258" author="knutanders" created="Fri, 7 Dec 2012 09:40:55 +0000"  >&lt;p&gt;Dag, I applied the &quot;c&quot; version of the patch and ran some tests in ij. This particular sequence didn&apos;t look quite right to me:&lt;/p&gt;

&lt;p&gt;ij version 10.10&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:memory:db;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table countries(name varchar(20), population int, area int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into countries values&lt;br/&gt;
        (&apos;Norway&apos;, 5033675, 385252),&lt;br/&gt;
        (&apos;Sweden&apos;, 9540065, 449964),&lt;br/&gt;
        (&apos;Denmark&apos;, 5580413, 42894),&lt;br/&gt;
        (&apos;Iceland&apos;, 320060, 103001),&lt;br/&gt;
        (&apos;Liechtenstein&apos;, 36281, 160);&lt;br/&gt;
5 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; SELECT NAME FROM COUNTRIES ORDER BY POPULATION DESC FETCH FIRST 2 ROWS ONLY;&lt;br/&gt;
NAME                &lt;br/&gt;
--------------------&lt;br/&gt;
Sweden              &lt;br/&gt;
Denmark             &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;br/&gt;
ij&amp;gt; SELECT NAME FROM COUNTRIES ORDER BY AREA DESC FETCH FIRST 2 ROWS ONLY;&lt;br/&gt;
NAME                &lt;br/&gt;
--------------------&lt;br/&gt;
Sweden              &lt;br/&gt;
Norway              &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;br/&gt;
ij&amp;gt; (SELECT NAME FROM COUNTRIES ORDER BY POPULATION DESC FETCH FIRST 2 ROWS ONLY)&lt;br/&gt;
INTERSECT&lt;br/&gt;
(SELECT NAME FROM COUNTRIES ORDER BY AREA DESC FETCH FIRST 2 ROWS ONLY);&lt;br/&gt;
NAME                &lt;br/&gt;
--------------------&lt;br/&gt;
Denmark             &lt;br/&gt;
Iceland             &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;/p&gt;

&lt;p&gt;The intersection of (&apos;Sweden&apos;, &apos;Denmark&apos;) and (&apos;Sweden&apos;, &apos;Norway&apos;) should be (&apos;Sweden&apos;) and not (&apos;Denmark&apos;, &apos;Iceland&apos;).&lt;/p&gt;</comment>
                            <comment id="13526286" author="knutanders" created="Fri, 7 Dec 2012 10:23:23 +0000"  >&lt;p&gt;&amp;gt; Note the boolean flag &quot;dontRemoveOrderingColumns&quot; which guards against removal when the node isn&apos;t really a UNION but represents the top level for a VALUES clause with an ORDER BY.&lt;/p&gt;

&lt;p&gt;I was wondering about that... When a VALUES clause has an ORDER BY, it can only reference one of the columns that will actually be returned:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values 1,2 order by 1+2;&lt;br/&gt;
ERROR 42878: The ORDER BY clause of a SELECT UNION statement only supports unqualified column references and column position numbers. Other expressions are not currently supported. (errorCode = 30000)&lt;/p&gt;

&lt;p&gt;So are there ever any generated ordering columns to remove in a VALUES clause? And if not, would it be harmful to call removeOrderByColumn() just to reduce the number of special cases?&lt;/p&gt;

&lt;p&gt;I found this example, though:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; values 1 order by 1+2;&lt;br/&gt;
1          |2          &lt;br/&gt;
-----------------------&lt;br/&gt;
1          |3          &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;

&lt;p&gt;Not sure why it doesn&apos;t raise the same syntax error as the first query. But at least it looks wrong that the ordering column is part of the result.&lt;/p&gt;

&lt;p&gt;I have logged &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6009&quot; title=&quot;Need stricter checking of ORDER BY clause in VALUES expressions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6009&quot;&gt;&lt;del&gt;DERBY-6009&lt;/del&gt;&lt;/a&gt; for this existing bug.&lt;/p&gt;</comment>
                            <comment id="13526374" author="dagw" created="Fri, 7 Dec 2012 13:19:27 +0000"  >&lt;p&gt;Thanks, Knut. I agree the intersect looks wrong indeed. As for the anomaly in values 1 order by 1+2, I guess this is because the logic to analyze the order by in this case resides in RowResultSetNode, not in UnionNode/SetOperatorNode as in the multi-valued case. I&apos;d guess an omission since it&apos;s a corner case.&lt;br/&gt;
And yes, I could remove the special case for removeOrderByColumns, probably, and just add a comment to remind the reader of the fact. I added it&lt;br/&gt;
first because I thought I had an error requiring it, but that turned to be something else, but I kept it mostly as a documentary thing.&lt;/p&gt;</comment>
                            <comment id="13526542" author="dagw" created="Fri, 7 Dec 2012 17:02:47 +0000"  >&lt;p&gt;The problem with the intersect is that, as part of its implementation, it pushes its own ORDER BY into the select, effectively clobbering the one specified by the user. I need to find a way to add another level in the result set tree so the two kinds of ordering can co-exist, ideally eliminating the implementation sort if the one specified gives the same ordering.&lt;/p&gt;</comment>
                            <comment id="13528002" author="dagw" created="Mon, 10 Dec 2012 15:33:26 +0000"  >&lt;p&gt;Adding a new patch, which handles the presence of two orderByLists for SelectNode and UnionNode (qua VALUES top node) under an INTERSECT/EXCEPT: The user specifed one arising from this issue, and the one used by the implementation of the set operations. Currently we make no attempt to detect if the same sort is specified by the operand&apos;s ORDER BY as the sort of all columns used by the intersect/except comparison operation.  The tree is stacked thus when we are ready to generate code:&lt;/p&gt;

&lt;p&gt;         OrderByNode (op intersect/except)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;         RowCountNode (offset/fetch first)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;         OrderBynode (of operand)&lt;/p&gt;

&lt;p&gt;The optimizer is informed by the lower order by if present, if not, by the intersect/except sort. Added new test cases.&lt;/p&gt;

&lt;p&gt;Rerunning regressions.&lt;/p&gt;</comment>
                            <comment id="13529326" author="dagw" created="Tue, 11 Dec 2012 20:47:47 +0000"  >&lt;p&gt;Regressions passed.&lt;/p&gt;</comment>
                            <comment id="13529927" author="dagw" created="Wed, 12 Dec 2012 13:00:00 +0000"  >&lt;p&gt;I think the latest patch represent a net improvement to Derby, so I propose to commit it by the end of the week if I see no objections. Please review.&lt;/p&gt;</comment>
                            <comment id="13531077" author="bryanpendleton" created="Thu, 13 Dec 2012 15:12:44 +0000"  >&lt;p&gt;I&apos;m generally comfortable with the purpose of the patch, and with the approach you&apos;ve taken to&lt;br/&gt;
implement it. I don&apos;t see any reason not to proceed; it&apos;s a net improvement to Derby, and we&lt;br/&gt;
can continue to test it in the trunk prior to releasing it in the next release.&lt;/p&gt;

&lt;p&gt;Two comments on the proposed final patch:&lt;br/&gt;
1) It seems like there are tab-versus-space inconsistencies in the new code w.r.t. its placement&lt;br/&gt;
in existing code. Not a big deal, but if it&apos;s easy to preserve the existing tabification ...&lt;br/&gt;
2) There were parts of the patch where there were comments saying things like &quot;presumably&lt;br/&gt;
we&apos;ve got a situation like this...&quot;, or &quot;FIXME check if ...&quot; Those sorts of comments in a patch&lt;br/&gt;
seem like reminders to me of things I&apos;d want to resolve before committing the patch, so I&lt;br/&gt;
thought I&apos;d check to see if they were things you wanted to fix prior to commit.&lt;/p&gt;</comment>
                            <comment id="13531276" author="dagw" created="Thu, 13 Dec 2012 18:23:51 +0000"  >&lt;p&gt;Thanks, Bryan! As for tabs, I gave up trying to retain tabs years ago, I try to make my patches only use blanks for all new code. I know it looks &lt;br/&gt;
awkward when one reads the patch in a tab=8 context, but alas... I set my tab width to 4 in Emacs before I inspect patches to avoid the problem. I really wish we could get rid of the tabs once and for all soon, though.&lt;/p&gt;

&lt;p&gt;In the comment starting with &quot;presumably&quot; I have an assertion just below it to sanity check that the presumption holds. I&apos;ll make the comment point to it more directly so it&apos;s clearer that the two belong together.&lt;/p&gt;

&lt;p&gt;As for the FIXME, I think it&apos;s OK to leave it in since the likelihood of this happening is low and it would be ok to leave this optimization till someone really needed it, IMHO. Perhaps I should avoid the FIXME word, though, and just say &quot;this can be optimized&quot;.?&lt;/p&gt;</comment>
                            <comment id="13531874" author="bryanpendleton" created="Fri, 14 Dec 2012 01:01:20 +0000"  >&lt;p&gt;&amp;gt;  I should avoid the FIXME word, though, and just say &quot;this can be optimized&quot;&lt;/p&gt;

&lt;p&gt;I think that would be clearer. Thanks for the follow-up, time to commit!&lt;/p&gt;</comment>
                            <comment id="13532824" author="dagw" created="Sat, 15 Dec 2012 00:21:08 +0000"  >&lt;p&gt;Uploading version &quot;e&quot; of this patch, which only introduces some comment improvements and some minor simplifications.&lt;/p&gt;</comment>
                            <comment id="13532833" author="dagw" created="Sat, 15 Dec 2012 00:35:42 +0000"  >&lt;p&gt;Committed version &quot;e&quot; as svn 1422164.&lt;/p&gt;</comment>
                            <comment id="13541247" author="dagw" created="Mon, 31 Dec 2012 03:52:34 +0000"  >&lt;p&gt;Marking resolved, but I leave it open for now if anyone wants to back-port it.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update:  Thinking again, that may not be advisable since it introduces a new functionality. But the documentation changes are pending still, so I keep this open.&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="14119559" author="knutanders" created="Wed, 3 Sep 2014 09:31:25 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12556190" name="derby-6008-a.diff" size="8695" author="dagw" created="Thu, 6 Dec 2012 00:46:41 +0000"/>
                            <attachment id="12556187" name="derby-6008-a.stat" size="398" author="dagw" created="Thu, 6 Dec 2012 00:39:26 +0000"/>
                            <attachment id="12556267" name="derby-6008-b.diff" size="8993" author="dagw" created="Thu, 6 Dec 2012 12:25:54 +0000"/>
                            <attachment id="12556268" name="derby-6008-b.stat" size="398" author="dagw" created="Thu, 6 Dec 2012 12:25:54 +0000"/>
                            <attachment id="12556491" name="derby-6008-c.diff" size="15721" author="dagw" created="Thu, 6 Dec 2012 20:09:47 +0000"/>
                            <attachment id="12556492" name="derby-6008-c.stat" size="614" author="dagw" created="Thu, 6 Dec 2012 20:09:47 +0000"/>
                            <attachment id="12560193" name="derby-6008-d.diff" size="46755" author="dagw" created="Mon, 10 Dec 2012 15:33:51 +0000"/>
                            <attachment id="12560194" name="derby-6008-d.stat" size="837" author="dagw" created="Mon, 10 Dec 2012 15:33:51 +0000"/>
                            <attachment id="12561068" name="derby-6008-e.diff" size="47048" author="dagw" created="Sat, 15 Dec 2012 00:21:08 +0000"/>
                            <attachment id="12561069" name="derby-6008-e.stat" size="837" author="dagw" created="Sat, 15 Dec 2012 00:21:08 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12624077">DERBY-6014</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10367"><![CDATA[Deviation from standard]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Dec 2012 16:03:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>296240</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hyy1sn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>232632</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>