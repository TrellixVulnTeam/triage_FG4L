<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:53 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3616/DERBY-3616.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3616] TableFunctionTest fails under Ubuntu 7.10</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3616</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When running the test org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest, it fails with the output shown below. This test blocks the proper execution of suites.All and it was tested under Ubuntu 7.10 (also tested on Windows Vista and it doesn&apos;t throw an error there).&lt;/p&gt;

&lt;p&gt;There were 2 errors:&lt;br/&gt;
1) noSpecialCollation(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)java.sql.SQLException: The exception &apos;java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 495.&apos; was thrown while evaluating an expression.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2125)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4320)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:463)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:367)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1935)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1776)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1762)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleVTIResults(TableFunctionTest.java:1079)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTest(TableFunctionTest.java:920)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.noSpecialCollation(TableFunctionTest.java:897)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 495.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        ... 29 more&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 495.&lt;br/&gt;
        at org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:129)&lt;br/&gt;
        at org.apache.derby.catalog.types.TypeDescriptorImpl.readExternal(TypeDescriptorImpl.java:491)&lt;br/&gt;
        at org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:126)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.thawReturnType(VTIResultSet.java:696)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.getReturnColumnTypes(VTIResultSet.java:670)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(VTIResultSet.java:559)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(VTIResultSet.java:347)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:460)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:423)&lt;br/&gt;
        ... 23 more&lt;br/&gt;
2) specialCollation(org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest)java.sql.SQLException: The exception &apos;java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 495.&apos; was thrown while evaluating an expression.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2125)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(EmbedResultSet.java:4320)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:463)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.next(EmbedResultSet.java:367)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1935)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1776)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(TableFunctionTest.java:1762)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.simpleVTIResults(TableFunctionTest.java:1079)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.tableFunctionTest(TableFunctionTest.java:920)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.specialCollation(TableFunctionTest.java:907)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
        at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;ERROR XBM0U: No class was registered for identifier 495.: java.lang.ClassNotFoundException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        ... 45 more&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: ERROR XBM0U: No class was registered for identifier 495.&lt;br/&gt;
        at org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:129)&lt;br/&gt;
        at org.apache.derby.catalog.types.TypeDescriptorImpl.readExternal(TypeDescriptorImpl.java:491)&lt;br/&gt;
        at org.apache.derby.iapi.services.io.FormatIdInputStream.readObject(FormatIdInputStream.java:126)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.thawReturnType(VTIResultSet.java:696)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.getReturnColumnTypes(VTIResultSet.java:670)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.populateFromResultSet(VTIResultSet.java:559)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.VTIResultSet.getNextRowCore(VTIResultSet.java:347)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(BasicNoPutResultSetImpl.java:460)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(EmbedResultSet.java:423)&lt;br/&gt;
        ... 39 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 2,  Failures: 0,  Errors: 2&lt;/p&gt;</description>
                <environment>Operating System: Ubuntu 7.10&lt;br/&gt;
JVMs tested: 1.4 and 1.6</environment>
        <key id="12393843">DERBY-3616</key>
            <summary>TableFunctionTest fails under Ubuntu 7.10</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="espinha">Tiago R. Espinha</reporter>
                        <labels>
                    </labels>
                <created>Sun, 13 Apr 2008 21:21:06 +0100</created>
                <updated>Fri, 21 Jan 2011 17:51:53 +0000</updated>
                            <resolved>Wed, 16 Apr 2008 17:03:44 +0100</resolved>
                                    <version>10.4.1.3</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12588553" author="narayanan" created="Mon, 14 Apr 2008 13:19:55 +0100"  >&lt;p&gt;I see these failures as well in ubuntu 7.10, looks like it is consistently failing here.&lt;/p&gt;</comment>
                            <comment id="12588583" author="bryanpendleton" created="Mon, 14 Apr 2008 15:06:22 +0100"  >&lt;p&gt;I also see these failures, on Red Hat Linux with the Sun JDK. Perhaps a Linux thing?&lt;/p&gt;</comment>
                            <comment id="12588613" author="rhillegas" created="Mon, 14 Apr 2008 16:44:00 +0100"  >&lt;p&gt;Dag reports this on derby-dev:&lt;/p&gt;

&lt;p&gt;&quot;I think I saw this once when I had an incorrect locale setting in the&lt;br/&gt;
shell from which I was running the tests (You need to have&lt;br/&gt;
en_US.ISO8859-1 for all tests to work, I think).&quot;&lt;/p&gt;</comment>
                            <comment id="12588649" author="myrna" created="Mon, 14 Apr 2008 17:49:49 +0100"  >&lt;p&gt;If that is indeed the cause of these particular test failures, then perhaps a check can be put in so the fixtures don&apos;t run if the locale is set to something else than expected.&lt;/p&gt;</comment>
                            <comment id="12588745" author="rhillegas" created="Mon, 14 Apr 2008 20:45:22 +0100"  >&lt;p&gt;I am able to reproduce this problem on Ubuntu 7 using a small test case outside of JUnit.&lt;/p&gt;</comment>
                            <comment id="12588838" author="rhillegas" created="Tue, 15 Apr 2008 00:08:11 +0100"  >&lt;p&gt;Attaching derby-3616-01-improvedEncoding.diff. The problem seems to be that the serialized byte array (which represents the VTIs type information) is encoded into a String differently on different platforms. This improves the encoding. Touches the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/iapi/services/io/FormatIdUtil.java&lt;/p&gt;

&lt;p&gt;Logic for encoding a byte array into a string.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/compile/FromVTI.java&lt;/p&gt;

&lt;p&gt;Use new encoding.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/sql/execute/VTIResultSet.java&lt;/p&gt;

&lt;p&gt;Ditto.&lt;/p&gt;

&lt;p&gt;With this change TableFunctionTest passes cleanly on Ubuntu 7 as well as Mac OS X 10.5. I am running full regression tests now.&lt;/p&gt;</comment>
                            <comment id="12588996" author="knutanders" created="Tue, 15 Apr 2008 10:41:26 +0100"  >&lt;p&gt;I think the patch works, but I don&apos;t think we need to write our own code to perform encoding/decoding. Instead, we could use the constructor and getBytes() method that take the encoding parameter, and specify a well-known 8-bit encoding (for instance ISO-8859-1). See the attached patch for an example (this patch makes TableFunctionTest pass, but a real patch should probably create friendly helper methods around new String() and getBytes()). Another benefit with this approach, is that we waste less space (one byte maps to one char, whereas derby-3616-01-improvedEncoding.diff maps one byte to two chars).&lt;/p&gt;</comment>
                            <comment id="12589059" author="rhillegas" created="Tue, 15 Apr 2008 13:37:03 +0100"  >&lt;p&gt;Thanks for the quick review, Knut. I agree that a more efficient encoding would be better and in the future we could improve FormatIdUtil.toString() and fromString(). I&apos;m not convinced that ISO-8859-1 is going to work, however. I&apos;m not an expert on the character encodings, but it seems to me that there are holes in this character set (see &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8859-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/ISO_8859-1&lt;/a&gt;), e.g., in the ranges 00-1F and 7F-9F. I don&apos;t know what happens when a byte in those ranges comes up, but I&apos;m worried that the holes mean that the encoding is not invertible.&lt;/p&gt;</comment>
                            <comment id="12589063" author="knutanders" created="Tue, 15 Apr 2008 13:55:48 +0100"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;According to the page you referred to, there are no holes:&lt;/p&gt;

&lt;p&gt;&amp;gt; ISO-8859-1&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; In 1992, the IANA registered the character map ISO_8859-1:1987, more&lt;br/&gt;
&amp;gt; commonly known by its preferred MIME name of ISO-8859-1 (note the&lt;br/&gt;
&amp;gt; extra hyphen over ISO 8859-1), a superset of ISO 8859-1, for use on&lt;br/&gt;
&amp;gt; the Internet. This map assigns the C0 and C1 control characters to&lt;br/&gt;
&amp;gt; the code values 00-1F, 7F, and 80-9F. It thus provides for 256&lt;br/&gt;
&amp;gt; characters via every possible 8-bit value.&lt;/p&gt;</comment>
                            <comment id="12589071" author="rhillegas" created="Tue, 15 Apr 2008 14:19:24 +0100"  >&lt;p&gt;Thanks for continuing to look into this, Knut. Perhaps ISO-8859-1 can be used as a better encoding scheme in FormatIdUtil.toString() and fromString(). In the meantime, I have committed the original patch at subversion revision 648232 and ported it to the 10.4 branch at subversion revision 648238. I will link this issue to the master table function issue as another improvement which can be made to our table function implementation.&lt;/p&gt;</comment>
                            <comment id="12589378" author="bryanpendleton" created="Wed, 16 Apr 2008 01:51:32 +0100"  >&lt;p&gt;The patch to the trunk resolves the failure I was seeing on RedHat Linux, too.&lt;/p&gt;</comment>
                            <comment id="12589623" author="dyret" created="Wed, 16 Apr 2008 17:03:44 +0100"  >&lt;p&gt;Resolving with fixversion 10.4.0.0 to get it on the list of fixed bugs in the release.&lt;/p&gt;</comment>
                            <comment id="12589762" author="knutanders" created="Thu, 17 Apr 2008 00:03:56 +0100"  >&lt;p&gt;I guess the best solution is to skip the encoding/decoding steps entirely. See the attached patch (no-encoding.diff). That patch stores the TypeDescriptor in a saved object in the Activation. Then all the encoding/decoding logic in FormatIdUtil could be removed, as could FromVTI.freezeReturnType() and VTIResultSet.thawReturnType().&lt;/p&gt;

&lt;p&gt;I have only run the TableFunctionTest, which passed in an environment where it failed before Rick&apos;s fix was checked in. I&apos;ll run the entire test suite and commit the patch if there are no objections to this approach.&lt;/p&gt;</comment>
                            <comment id="12589870" author="knutanders" created="Thu, 17 Apr 2008 09:46:58 +0100"  >&lt;p&gt;Committed the no-encoding patch to trunk with revision 649007.&lt;/p&gt;</comment>
                            <comment id="12589874" author="knutanders" created="Thu, 17 Apr 2008 09:55:58 +0100"  >&lt;p&gt;Assigned this bug to Rick since he fixed it.&lt;br/&gt;
Unchecked the regression flag since this is a bug in new functionality.&lt;/p&gt;</comment>
                            <comment id="12590064" author="rhillegas" created="Thu, 17 Apr 2008 16:32:14 +0100"  >&lt;p&gt;Thanks for the no-encoding patch, Knut. This is a nice solution.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12391489">DERBY-3545</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12325788">DERBY-716</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12380125" name="derby-3616-01-improvedEncoding.diff" size="4316" author="rhillegas" created="Tue, 15 Apr 2008 00:08:11 +0100"/>
                            <attachment id="12380160" name="enc.diff" size="1347" author="knutanders" created="Tue, 15 Apr 2008 10:41:26 +0100"/>
                            <attachment id="12380343" name="no-encoding.diff" size="8497" author="knutanders" created="Thu, 17 Apr 2008 00:03:56 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Apr 2008 12:19:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23747</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37292</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>