<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:06 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1764/DERBY-1764.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1764] Rewrite stress.multi as a JUnit test</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1764</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently, stress.multi consists of a number of sql scripts that are run in ij. It often fails with cryptic error messages, and since it uses ij, there is often no stack trace. It would be very useful to rewrite the test in JUnit so that we can get better error messages and stack traces when it fails.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12348657">DERBY-1764</key>
            <summary>Rewrite stress.multi as a JUnit test</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ebirkenes">Erlend Birkenes</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Aug 2006 19:33:06 +0100</created>
                <updated>Wed, 1 Jul 2009 00:55:08 +0100</updated>
                            <resolved>Sat, 7 Feb 2009 16:56:10 +0000</resolved>
                                                    <fixVersion>10.5.1.1</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12603725" author="ebirkenes" created="Tue, 10 Jun 2008 00:09:35 +0100"  >&lt;p&gt;Here is a preliminary patch for review. It&apos;s not complete yet, but the basics works. I&apos;ve never done something like this before so I hope it makes sense.&lt;br/&gt;
The test runs indefinetely for now, but can be set to break after a certain amount of loops so that it will eventually pass.. &lt;/p&gt;

&lt;p&gt;I couldn&apos;t quite figure out how the weights given to the operations in the old test worked, so I just spread them out in a similar way, thinking there was no deeper purpose than that.&lt;br/&gt;
Let me know if they should be arranged differently.&lt;/p&gt;

&lt;p&gt;The old test also prints everything it does in a logfile. Should this test do the same? For now it prints to stdout, but I&apos;ll remove that later.&lt;/p&gt;

&lt;p&gt;The only real problem right now is that the threads run for a little while, then stops and wait for almost exactly 20 seconds then runs for a little while again and keeps going like that.&lt;br/&gt;
It&apos;s almost always 20 seconds. I have no idea whats happening, so I need some help with that..&lt;/p&gt;

&lt;p&gt;Thats it for now. Please comment.&lt;/p&gt;

&lt;p&gt;-Erlend&lt;/p&gt;</comment>
                            <comment id="12603727" author="ebirkenes" created="Tue, 10 Jun 2008 00:13:41 +0100"  >&lt;p&gt;Also, I had to change the multi.stress/build.xml file to make it compile.. &lt;br/&gt;
I stole some parts from another one and hacked it together, but I really didn&apos;t know what I was doing so take look at that too please &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12604094" author="kmarsden" created="Wed, 11 Jun 2008 01:31:44 +0100"  >&lt;p&gt;I am sorry I did not have a chance to have a close look at your test today.  I will tomorrow if someone else doesn&apos;t beat me to it.&lt;br/&gt;
I think your 20 second delay is for deadlock timeouts which default to 20 seconds:&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/10.0/manuals/tuning/perf78.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/10.0/manuals/tuning/perf78.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below are the properties  for the test which  should be setup.  &lt;br/&gt;
  derby.locks.deadlockTimeout=3&lt;br/&gt;
  derby.locks.waitTimeout=5&lt;br/&gt;
  derby.language.logStatementText=true&lt;/p&gt;

&lt;p&gt;  derby.storage.keepTransactionLog=true&lt;/p&gt;

&lt;p&gt;You can use SystemPropertyTestSetup to setup the properties.&lt;/p&gt;
</comment>
                            <comment id="12604657" author="kmarsden" created="Thu, 12 Jun 2008 22:57:03 +0100"  >&lt;p&gt;Thanks Erlend at a great first effort for converting stress.multi. Myrna and I had a look together and this is what we came up with.  &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;need Apache header.&lt;/li&gt;
	&lt;li&gt;Keep lines to 80 characters.&lt;/li&gt;
	&lt;li&gt;assuming timing is in todo list.&lt;/li&gt;
	&lt;li&gt;Maybe we should move the junit test out to functionTests/tests/multi and have a separate build.xml.&lt;/li&gt;
	&lt;li&gt;Maybe rename to be StressMultiTest to match junit convention.&lt;/li&gt;
	&lt;li&gt;SQL Exceptions e.g. in setup() should be thrown or accumulated and not just printed to std out.&lt;/li&gt;
	&lt;li&gt;To keep your debug statements you can use BaseTestCase.println() and they will print out with derby.tests.debug set to true.&lt;/li&gt;
	&lt;li&gt;add SystemPropertyTestSetup to setup derby properties from the test (in run__derby.properties)&lt;/li&gt;
	&lt;li&gt;THREADS and MINUTES should be static.&lt;/li&gt;
	&lt;li&gt;fields should either nulled out with teardown or be changed to local variables to avoid them consuming memory after the test runs.&lt;/li&gt;
	&lt;li&gt;in setup() Statement s = getConnection().createStatement(); can just be Statement s = createStatement()&lt;/li&gt;
	&lt;li&gt;I don&apos;t think we should interupt the the threads on error.  I think instead we can set a completed flag and let the run method check for that and have the current operation complete. That way we will avoid potentially running into &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-151&quot; title=&quot;Thread termination -&amp;gt; XSDG after operation is &amp;#39;complete&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-151&quot;&gt;&lt;del&gt;DERBY-151&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;You probably have it planned, but we seem to be missing some of the cases from the original test, createy.sql, createz.sql, insert2.sql, update2.sql, selectmain2.sql.&lt;/li&gt;
	&lt;li&gt;eventually need to add network server run, and encryption run.&lt;/li&gt;
	&lt;li&gt;As for the weights I looked at this for a little while and am not quite sure how to map to the same percentages.  Before we had&lt;br/&gt;
	do
		{
			caseNum = (int)((java.lang.Math.random() * 1311) % numCases);
			testCase = (mtTestCase)cases.elementAt(caseNum);
		}
&lt;p&gt;		while (testCase.grab() == false);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Where grab() returned true weight percentage of the time and our weights did not add up to 100. Now we just want to use straight percentages which I think is fine.  Question is how do we map the old weights to the correct percentage.&lt;/p&gt;

&lt;p&gt;I feel like this is some high school math problem I can&apos;t figure out. Input from others would be welcome.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;As for the build.xml file I think that once you move the test copying one of the existing junit directory build.xml files and modifying it will be more straight forward.  (The current build.xml that you have will make the encryption and derbynetclient runs of stress.multi fail. Myrna understands why)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It would be good if others could look at the test on the next round of review.  This is an important test so it is crucial to get the conversion right.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Keep up the good work.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12606806" author="ebirkenes" created="Fri, 20 Jun 2008 17:02:27 +0100"  >&lt;p&gt;Here is a new version. I think I have resolved all of the issues in Katheys comment.&lt;br/&gt;
Everything runs fine on my machine at least. Please test that it works on other systems as well.&lt;br/&gt;
I changed derby.locks.deadlockTimeout and derby.locks.waitTimeout to 2 and 3 respectively because the test ran smoother then, I hope thats ok. &lt;/p&gt;

&lt;p&gt;Please review and comment!&lt;/p&gt;</comment>
                            <comment id="12607704" author="kmarsden" created="Tue, 24 Jun 2008 19:06:03 +0100"  >&lt;p&gt;Thanks Erlend for the new patch.  It is looking good.  I&apos;d really like someone else to take a thorough look at the patch though, in case I missed something.  This is an important test and we don&apos;t want to lose anything in the translation.&lt;/p&gt;

&lt;p&gt;One feature the old stress.multi test had was that if testers became hung, it would wait for some time for them to complete, dump the thread stack traces and interrupt the threads.  I think the way the test is now if we get a hang, the test would just hang.  Maybe that&apos;s ok at least for the first round.  That could be added as an improvement later on.&lt;/p&gt;

&lt;p&gt;It would be good if we could test the error handling somehow and make sure errors are getting reported properly.  My only thought on this is to remove some critical synchronization and introduce a bug to test.  Alternately I guess you could temporarily remove one of the expected SQLStates and let it fail on that.&lt;/p&gt;

&lt;p&gt;StressMulti50x59 used to just run embedded, now I think it will run for embedded, client and encryption.  Is that ok or do the folks that run this test expect it to run embedded only?&lt;/p&gt;

&lt;p&gt;We need to add the test to suites.All, the junit-all ant target  and remove it from  derbyall and remove  all the old test files.   We could check in this patch and make that a second patch.   Let me know if you would like to do it that way.&lt;/p&gt;

&lt;p&gt;Thanks for all the great work.  This was a tough test conversion to tackle.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;

</comment>
                            <comment id="12607709" author="kmarsden" created="Tue, 24 Jun 2008 19:10:22 +0100"  >&lt;p&gt;oops. Just tried to run it and got this.&lt;br/&gt;
i.TestRunner org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest&lt;br/&gt;
.&lt;br/&gt;
testStressMulti Exception in thread &quot;Thread-2&quot; java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.handleException(StressMultiTest.java:234)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.access$200(StressMultiTest.java:53)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.jav&lt;br/&gt;
a:329)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;
</comment>
                            <comment id="12607729" author="kmarsden" created="Tue, 24 Jun 2008 20:08:10 +0100"  >&lt;p&gt;When I ran it again, two fixtures passed and the last failed but with no trace information.&lt;br/&gt;
.&lt;br/&gt;
testStressMulti used 600906 ms .&lt;br/&gt;
testStressMulti used 605985 ms .&lt;br/&gt;
testStressMulti used 603093 ms F&lt;br/&gt;
Time: 1,878.437&lt;br/&gt;
There was 1 failure:&lt;br/&gt;
1) org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest&lt;br/&gt;
FAILURES!!!&lt;br/&gt;
Tests run: 3,  Failures: 1,  Errors: 0&lt;/p&gt;</comment>
                            <comment id="12608957" author="bryanpendleton" created="Sat, 28 Jun 2008 01:57:38 +0100"  >&lt;p&gt;I read through the code and it looked quite good to me. I&apos;m having some troubles&lt;br/&gt;
with my build and test environment, but will try to get that ironed out soon so I can&lt;br/&gt;
try to run the new test on my machine.&lt;/p&gt;</comment>
                            <comment id="12609014" author="bryanpendleton" created="Sat, 28 Jun 2008 16:02:56 +0100"  >&lt;p&gt;I managed to try a run of the test. I&apos;m not quite sure what results I should be expecting.&lt;br/&gt;
The test ran for 2+ hours, created an immense derby.log with thousands of errors&lt;br/&gt;
about deadlocks, duplicate keys, and other problems, then terminated. Below is pasted&lt;br/&gt;
the tail of the output that I received:&lt;/p&gt;

&lt;p&gt;10) testStressMulti(org.apache.derbyTesting.functionTests.multi.stress.StressMulti)java.sql.BatchUpdateException: Log Record has been sent to the stream, but it cannot be applied to the store (Object Page Operation: Page(1,Container(0, 13232)) pageVersion 3 : Insert :  Slot=2 recordId=8).  This may cause recovery problems also.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(EmbedStatement.java:999)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.multi.stress.StressMulti$StressMultiRunnable.create(StressMulti.java:238)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.multi.stress.StressMulti$StressMultiRunnable.run(StressMulti.java:191)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:595)&lt;br/&gt;
Caused by: java.sql.SQLException: Log Record has been sent to the stream, but it cannot be applied to the store (Object Page Operation: Page(1,Container(0, 13232)) pageVersion 3 : Insert :  Slot=2 recordId=8).  This may cause recovery problems also.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2183)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1325)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeBatchElement(EmbedStatement.java:1013)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeBatch(EmbedStatement.java:974)&lt;br/&gt;
        ... 3 more&lt;br/&gt;
Caused by: java.sql.SQLException: The store has been marked for shutdown by an earlier exception.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        ... 11 more&lt;br/&gt;
Caused by: java.sql.SQLException: An exception was thrown during transaction abort.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        ... 12 more&lt;br/&gt;
Caused by: java.sql.SQLException: Connection closed by unknown interrupt.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.seeNextException(Util.java:223)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:398)&lt;br/&gt;
        ... 13 more&lt;br/&gt;
Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.InterruptedException&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        ... 14 more&lt;br/&gt;
Caused by: java.lang.InterruptedException&lt;br/&gt;
        at java.lang.Object.wait(Native Method)&lt;br/&gt;
        at java.lang.Object.wait(Object.java:474)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.log.LogToFile.flush(LogToFile.java:3934)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.log.LogToFile.flush(LogToFile.java:1777)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.log.FileLogger.flush(FileLogger.java:585)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.Xact.abort(Xact.java:925)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactContext.cleanupOnError(XactContext.java:119)&lt;br/&gt;
        at org.apache.derby.iapi.services.context.ContextManager.cleanupOnError(ContextManager.java:332)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.cleanupOnError(TransactionResourceImpl.java:419)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:337)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2183)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1325)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.multi.stress.StressMulti$StressMultiRunnable.roll(StressMulti.java:288)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.multi.stress.StressMulti$StressMultiRunnable.run(StressMulti.java:194)&lt;br/&gt;
        ... 1 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 1,  Failures: 0,  Errors: 10&lt;/p&gt;
</comment>
                            <comment id="12609019" author="bryanpendleton" created="Sat, 28 Jun 2008 16:43:48 +0100"  >&lt;p&gt;I attached the derby.log from my run.&lt;/p&gt;</comment>
                            <comment id="12609031" author="ebirkenes" created="Sat, 28 Jun 2008 19:23:30 +0100"  >&lt;p&gt;There was a severe error in the last patch that caused it to not handle exceptions like it should. Sorry about that!! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Here is a new version. This time it should work better. It works perfectly for me in all my tests.&lt;/p&gt;

&lt;p&gt;I had alot of trouble setting up the CleanDataBaseSetup and encryptedDatabase decorators in a way that would work properly, but it works now in every way I could think of testing. However, there is still a fairly long delay (like 30-40 sec) after the fixtures before the test &quot;completes&quot; and this seems to be related to the CleanDataBaseSetup somehow (or maybe it&apos;s the encryptedDatabase that does it, i&apos;m not really sure..). I don&apos;t know what it&apos;s doing or if thats normal.&lt;br/&gt;
It&apos;s not the threads though. I ran it through TPTP trying to figure it out and the threads and fixtures runs fine and terminates when they are supposed to. But i&apos;m not very experienced with TPTP so I couldn&apos;t quite figure it out.. &lt;/p&gt;

&lt;p&gt;I also added it to suites.All and junit-all,  removed it from derbyall and deleted the old files this time.&lt;/p&gt;

&lt;p&gt;I also included a test called StressMulti10x1 (1 minute) for easy and quick testing.&lt;/p&gt;

&lt;p&gt;Please test. &lt;/p&gt;

&lt;p&gt;-Erlend&lt;/p&gt;</comment>
                            <comment id="12609147" author="bryanpendleton" created="Mon, 30 Jun 2008 03:17:09 +0100"  >&lt;p&gt;Hi Erlend, thanks for the updated patch.&lt;/p&gt;

&lt;p&gt;The test seems to be running much cleaner now.&lt;/p&gt;

&lt;p&gt;How long should it run? When should it end?&lt;/p&gt;</comment>
                            <comment id="12609162" author="ebirkenes" created="Mon, 30 Jun 2008 07:26:46 +0100"  >
&lt;p&gt;StressTestMulti should run for 30 minutes total (3x10). StressTest50x59 should run for 3 hours the way it is now (3x59 minutes), but this should maybe be changed to only run embedded? StressTest10x1 runs for 3x1 minutes&lt;/p&gt;

&lt;p&gt;Thanks for testing it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;-Erlend&lt;/p&gt;</comment>
                            <comment id="12609231" author="bryanpendleton" created="Mon, 30 Jun 2008 14:40:59 +0100"  >&lt;p&gt;The test definitely ran for longer than 3 hours. This morning, it was&lt;br/&gt;
still running, 13+ hours after I had started it.&lt;/p&gt;

&lt;p&gt;Other than apparently running indefinitely, the test seemed to run&lt;br/&gt;
without errors. It printed a lot of innocuous-appearing output to stdout,&lt;br/&gt;
lines like:&lt;/p&gt;

&lt;p&gt;Tester3 - Run 2157 - Select1 Mon Jun 30 06:41:46 PDT 2008&lt;br/&gt;
Tester4 - Run 2233 - Roll1 Mon Jun 30 06:42:06 PDT 2008&lt;br/&gt;
Tester3 - Run 2158 - Insert1 Mon Jun 30 06:42:06 PDT 2008&lt;br/&gt;
Tester6 - Run 2259 - Roll1 Mon Jun 30 06:42:06 PDT 2008&lt;br/&gt;
Tester1 - Run 2271 - CreateA Mon Jun 30 06:42:06 PDT 2008&lt;/p&gt;

&lt;p&gt;The command I used to run the test was:&lt;/p&gt;

&lt;p&gt;java junit.textui.TestRunner org.apache.derbyTesting.functionTests.multi.stress.StressMulti&lt;/p&gt;</comment>
                            <comment id="12610326" author="kmarsden" created="Thu, 3 Jul 2008 20:28:58 +0100"  >&lt;p&gt;I ran StressMulti10x1 and it seemed to run the expected length of time, but I got this assertion on the cleanup for third run of the fixture.  &lt;br/&gt;
junit.framework.AssertionFailedError: C:\svn3\trunk\system\singleUse\oneuse0\seg0\c400.dat&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
	at junit.framework.Assert.assertTrue(Assert.java:20)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabaseSetup.java:130)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(DropDatabaseSetup.java:128)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.access$000(DropDatabaseSetup.java:35)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup$1.run(DropDatabaseSetup.java:105)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropDatabaseSetup.java:102)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDirectory(DropDatabaseSetup.java:98)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.removeDatabase(DropDatabaseSetup.java:91)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DropDatabaseSetup.tearDown(DropDatabaseSetup.java:77)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:20)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;

&lt;p&gt;I&apos;ll try running again and also try the 10 minute version.&lt;/p&gt;</comment>
                            <comment id="12610341" author="kmarsden" created="Thu, 3 Jul 2008 21:34:10 +0100"  >&lt;p&gt;Re running StressMulti10x1 ran ok.  Running StressMultiTest it also seemed to run the expected length of time, but on the embedded run, I got an assertion that must be a Derby bug:&lt;/p&gt;


&lt;p&gt;1) testStressMulti(org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest)java.sql.SQLException: Java exception: &apos;ASSERT FAILED transaction table has null entry: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:244)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2183)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1325)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.run(StressMultiTest.jav&lt;br/&gt;
a:317)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:803)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED transaction table has null entry&lt;br/&gt;
        at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:120)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.TransactionTable.getTransactionInfo(TransactionTable.java:968)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactFactory.getTransactionInfo(XactFactory.java:991)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.RawStore.getTransactionInfo(RawStore.java:1153)&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMAccessManager.getTransactionInfo(RAMAccessManager.java:912)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.Deadlock.buildException(Deadlock.java:266)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(ConcurrentLockSet.java:613)&lt;br/&gt;
        at org.apache.derby.impl.services.locks.AbstractPool.lockObject(AbstractPool.java:117)&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.RowLocking3.lockRecordForWrite(RowLocking3.java:248)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:504)&lt;br/&gt;
        at org.apache.derby.impl.store.access.heap.HeapController.lockRow(HeapController.java:638)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(B2IRowLocking3.java:335)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(B2IRowLocking3.java:628)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(B2IRowLockingRR.java:112)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(BTreeForwardScan.java:304)&lt;br/&gt;
        at org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(BTreeScan.java:1809)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(TableScanResultSet.java:680)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(IndexRowToBaseRowResultSet.java:3&lt;br/&gt;
73)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:255)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:186)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:424)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:246)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:384)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1235)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeUpdate(EmbedStatement.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest$StressMultiRunnable.update(StressMultiTest.&lt;br/&gt;
java:471)&lt;br/&gt;
        ... 2 more&lt;/p&gt;

&lt;p&gt;FAILURES!!!&lt;br/&gt;
Tests run: 3,  Failures: 0,  Errors: 1&lt;/p&gt;

&lt;p&gt;I was thinking of maybe checking in this test but not adding it to a suite or removing the old one while we work to stabilize it.  Thoughts?&lt;/p&gt;</comment>
                            <comment id="12610471" author="knutanders" created="Fri, 4 Jul 2008 08:27:09 +0100"  >&lt;p&gt;Checking it in without enabling it sounds like a good idea. It makes it easier for others to try it out.&lt;/p&gt;</comment>
                            <comment id="12610826" author="kmarsden" created="Sun, 6 Jul 2008 19:40:29 +0100"  >&lt;p&gt;I checked in the test so others can try it.  Thanks Erlend for all your hard work on this.&lt;br/&gt;
Here are the issues I see.&lt;/p&gt;

&lt;p&gt;1) There seems to be an issue with the cleanup of the database for the encrypted run on windows.  I saw this with both the 10x1 and the regular StressMultiTest.&lt;br/&gt;
  (junit.framework.AssertionFailedError: C:\svn3\trunk\system\singleUse\oneuse0\seg0\c400.dat)&lt;br/&gt;
2) Need to add functionality so that if threads hang and cannot finish on their own, we dump the stack traces and interrupt the threads.  I think this is important as when we have had failures in this test in the past, we have seen the threads hang.&lt;br/&gt;
3) Bryan is seeing the test run forever for some reason and also seeing lots of output. It sounds like maybe he was using an early patch,  but need to resolve this. &lt;br/&gt;
4) The test seems to expose a derby bug intermittently. .&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt;.  &lt;br/&gt;
)testStressMulti(org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest)java.sql.SQLException: Java exception: &apos;ASSERT FAILED transaction table has null entry: org.apache.derby.shared.common.sanity.AssertFailure&apos;. &lt;br/&gt;
5) StressMulti50x59 should only do an embedded run.&lt;br/&gt;
6) I noticed when I got the error for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; that the derby.log was not saved to the fail  directory.  There seems to be a problem with the mechanism that is supposed to do this.  Is it possible it only saves the derby.log for failures and not errors?&lt;/p&gt;


&lt;p&gt;I hope others will try out the test as well now that it is checked in and review the code.  This is an important test and is a fairly major change.   It&apos;s important we get it right.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12610898" author="knutanders" created="Mon, 7 Jul 2008 08:07:32 +0100"  >&lt;p&gt;&amp;gt; 2) Need to add functionality so that if threads hang and cannot&lt;br/&gt;
&amp;gt; finish on their own, we dump the stack traces and interrupt the&lt;br/&gt;
&amp;gt; threads. I think this is important as when we have had failures in&lt;br/&gt;
&amp;gt; this test in the past, we have seen the threads hang.&lt;/p&gt;

&lt;p&gt;Perhaps it better to let it hang? One can always get the stack traces&lt;br/&gt;
with kill -QUIT or jstack when the hang happens, and one can also&lt;br/&gt;
attach a debugger to the process to see what&apos;s going on. Interrupting&lt;br/&gt;
the test may prevent cleanup code from being executed or leave the&lt;br/&gt;
engine in a bad state, which can cause subsequent errors and make the&lt;br/&gt;
problem harder to debug.&lt;/p&gt;</comment>
                            <comment id="12610906" author="kristwaa" created="Mon, 7 Jul 2008 08:51:31 +0100"  >&lt;p&gt;&apos;derby-1764-3a-whitespace_changes.diff&apos; changes a class name in one of the license headers, removes tabs and trailing spaces and corrects the indentation level in a few places.&lt;br/&gt;
No functional changes.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 674412.&lt;/p&gt;</comment>
                            <comment id="12614606" author="ebirkenes" created="Fri, 18 Jul 2008 03:32:54 +0100"  >&lt;p&gt;Version 4.&lt;/p&gt;

&lt;p&gt;1. StressTest50x59 now only do the embedded run.&lt;br/&gt;
2. Had to change the whole way errors was handled so that the derby.log is copied to the fail directory on failure. I think failures are handled much better now. The first Exception in a fixture is thrown for BaseTestCase and JUnit to deal with instead of messing around with the TestResult . Because of the threads other exceptions can happen after this, but they are discarded and not reported as failures by JUnit (They can be found in the log of course). So now there is only one failure per fixture, where before there could be many and that didn&apos;t make much sense.&lt;/p&gt;


&lt;p&gt;-Erlend&lt;/p&gt;</comment>
                            <comment id="12614608" author="ebirkenes" created="Fri, 18 Jul 2008 03:50:32 +0100"  >&lt;p&gt;Edit: Hmm, Jira doesn&apos;t handle quoting so well.. Or is it Gmails fault?&lt;/p&gt;

&lt;p&gt;On 7/6/08, Kathey Marsden (JIRA) &amp;lt;jira@apache.org&amp;gt; wrote:&lt;/p&gt;


&lt;p&gt;&amp;gt;    1) There seems to be an issue with the cleanup of the database for the encrypted run on windows.  I saw this with both the 10x1 and the regular StressMultiTest.&lt;br/&gt;
&amp;gt;      (junit.framework.AssertionFailedError: C:\svn3\trunk\system\singleUse\oneuse0\seg0\c400.dat)&lt;/p&gt;


&lt;p&gt;I don&apos;t have a Windows box, but maybe I can set something up. Is anyone else getting this error?&lt;/p&gt;


&lt;p&gt; &amp;gt;   3) Bryan is seeing the test run forever for some reason and also seeing lots of output. It sounds like maybe he was using an early patch,  but need to resolve this.&lt;/p&gt;


&lt;p&gt;Still have no clue about this. Is nobody else seeing this behaviour?&lt;/p&gt;



&lt;p&gt;&amp;gt;    4) The test seems to expose a derby bug intermittently. .&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
&amp;gt;    )testStressMulti(org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest)java.sql.SQLException: Java exception: &apos;ASSERT FAILED transaction table has null entry:  org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;


&lt;p&gt;This happened once for me, but I couldn&apos;t reproduce it.&lt;/p&gt;



&lt;p&gt;&amp;gt;   5) StressMulti50x59 should only do an embedded run.&lt;/p&gt;


&lt;p&gt; Fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;_V4.diff&lt;/p&gt;

&lt;p&gt;&amp;gt;    6) I noticed when I got the error for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; that the derby.log was not saved to the fail  directory.  There seems to be a problem with the mechanism that is supposed to do this.  Is it possible it only saves the derby.log for failures and not errors?&lt;/p&gt;


&lt;p&gt; Fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;_V4.diff&lt;/p&gt;</comment>
                            <comment id="12614917" author="kmarsden" created="Sat, 19 Jul 2008 01:01:17 +0100"  >&lt;p&gt;I looked a little at the Windows failure removing the database after the encrypted run.   I verified that the database is being shutdown normally (we get the database shutdown message).  I tried inserting a sleep for 10 seconds after the shutdown and before the directory removal.   I tried inserting a gc() after the shutdown and before removal and still got the same failure.   It seems there is some sort of bug shutting down the encrypted database that it hangs onto resources.  I have been running with IBM 1.5.  Monday I will try with other JVM&apos;s and also see if I can get a reproducible test case for the removal problem outside of this test.   If anyone has any ideas what is going on or other tips I would most appreciate it.  I can reproduce two out of three times with the multi.StressMulti10x1 test.&lt;/p&gt;

&lt;p&gt;One more thing. The file we are unable to remove seems to vary, for instance on one run it was:&lt;br/&gt;
1) StressMultiTest:encryptedjunit.framework.AssertionFailedError: C:\test\system\singleUse\oneuse0\seg0\c420.dat&lt;br/&gt;
and on another&lt;br/&gt;
1) StressMultiTest:encryptedjunit.framework.AssertionFailedError: C:\test\system\singleUse\oneuse0\seg0\c400.dat&lt;/p&gt;

&lt;p&gt;Don&apos;t know if that makes any difference.&lt;/p&gt;
</comment>
                            <comment id="12615365" author="kmarsden" created="Mon, 21 Jul 2008 19:54:49 +0100"  >&lt;p&gt;Hi Erlend,&lt;/p&gt;

&lt;p&gt;I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3789&quot; title=&quot;Shutting down encrypted database with ResultSet open does not allow directory to be deleted on Windows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3789&quot;&gt;&lt;del&gt;DERBY-3789&lt;/del&gt;&lt;/a&gt; for the encrypted shutdown problem. It appears to be a bug in Derby, but I also noticed this in the test. We  have the method:&lt;/p&gt;

&lt;p&gt;  private void select(String table) throws SQLException {&lt;br/&gt;
            Statement s = con.createStatement();&lt;br/&gt;
            try &lt;/p&gt;
{
                s.executeQuery(&quot;select * from &quot; + table);
            }
&lt;p&gt; catch (SQLException se) {&lt;br/&gt;
                String e = se.getSQLState();&lt;br/&gt;
                if (e.equals(&quot;42Y55&quot;) || e.equals(&quot;42000&quot;) || e.equals(&quot;40001&quot;)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; e.equals(&quot;40XL1&quot;) &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; e.equals(&quot;40XL2&quot;)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; e.equals(&quot;42Y07&quot;)) 
{
                    // ignore these
                }
&lt;p&gt; else &lt;/p&gt;
{
                    throw se;
                }
&lt;p&gt;            }finally &lt;/p&gt;
{
                s = null;
            }
&lt;p&gt;        }&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Which doesn&apos;t actually select all the results. It should do a next through the table and then close the ResultSet.    Perhaps that will help us avoid &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3789&quot; title=&quot;Shutting down encrypted database with ResultSet open does not allow directory to be deleted on Windows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3789&quot;&gt;&lt;del&gt;DERBY-3789&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;</comment>
                            <comment id="12615575" author="ebirkenes" created="Tue, 22 Jul 2008 12:05:39 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1764&quot; title=&quot;Rewrite stress.multi as a JUnit test&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1764&quot;&gt;&lt;del&gt;DERBY-1764&lt;/del&gt;&lt;/a&gt;_5.diff&lt;/p&gt;

&lt;p&gt;Changed &lt;br/&gt;
 s.executeQuery(&quot;select * from &quot; + table);&lt;/p&gt;

&lt;p&gt;to:&lt;br/&gt;
ResultSet rs =  s.executeQuery(&quot;select * from &quot; + table);&lt;br/&gt;
                JDBC.assertDrainResults(rs);&lt;/p&gt;

&lt;p&gt;This reads all the rows and columns in the resultset and closes it.&lt;/p&gt;</comment>
                            <comment id="12615662" author="kmarsden" created="Tue, 22 Jul 2008 17:32:39 +0100"  >&lt;p&gt;It looks like the patch included some other changes already committed, so I just made the change manually to drain results and committed.  With this change we seem to  no longer be hitting &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3789&quot; title=&quot;Shutting down encrypted database with ResultSet open does not allow directory to be deleted on Windows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3789&quot;&gt;&lt;del&gt;DERBY-3789&lt;/del&gt;&lt;/a&gt; on Windows. I think that leaves us with only &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; to resolve.  I think for that Mike added a comment that we can just remove the assertion.  &lt;/p&gt;
</comment>
                            <comment id="12615751" author="kmarsden" created="Tue, 22 Jul 2008 20:30:39 +0100"  >&lt;p&gt;I think we should hold off on resolving this issue until the test is incorporated into the nightlies.  I think that the only thing preventing that now is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt;.   Erlend, could you &lt;br/&gt;
1) Reopen this issue.&lt;br/&gt;
2) Submit a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; removing the assertion.&lt;br/&gt;
3) Submit a patch for this issue adding the test to suites.All and removing it from derbyall.  I&apos;d say lets hold off for a little while on removing the stress.multi test and all of its supporting files, until the new test has time to stabilize, but I think we can close this issue as soon as the test is running in suites.All.&lt;/p&gt;


</comment>
                            <comment id="12615832" author="ebirkenes" created="Wed, 23 Jul 2008 01:00:01 +0100"  >&lt;p&gt;Reopening issue until it is incorporated into the nightlies and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; is resolved.&lt;/p&gt;</comment>
                            <comment id="12619567" author="kmarsden" created="Mon, 4 Aug 2008 17:10:34 +0100"  >&lt;p&gt;I think we should go ahead and add this test to suites.All and remove stress.multi runs from derbyall.  I think we should leave the stress.multi test in place  so it can be run manually, (not as part of derbyall)  for a period of time while this test stabilizes and so we can be really sure we are testing the same thing.&lt;/p&gt;

&lt;p&gt;One issue with enabling the test is &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; which Erlend and I both hit once running the test.  This is a derby bug that might introduce a new intermittent failure to  developer runs of the test.  Probably the nightlies won&apos;t be affected since they run with insane builds.   I don&apos;t think this bug should prevent us from enabling the test.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12619577" author="kristwaa" created="Mon, 4 Aug 2008 17:29:28 +0100"  >&lt;p&gt;I think the suggestion sounds reasonable. We should also solve the problem reported as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would also consider running both versions of the stress test for a while,  as part of suites.All and derbyall.&lt;/p&gt;</comment>
                            <comment id="12619632" author="kmarsden" created="Mon, 4 Aug 2008 19:30:34 +0100"  >&lt;p&gt;I am ok with running both for a while, but it will add a half hour to the testing.  I don&apos;t know if anyone has objections to that.&lt;/p&gt;</comment>
                            <comment id="12621392" author="ebirkenes" created="Mon, 11 Aug 2008 10:38:29 +0100"  >
&lt;p&gt;This patch just adds StressMultiTest to suites.AllPackages. &lt;/p&gt;

&lt;p&gt;It&apos;s probaly a good idea to run both for a while, unless people think the extra half-hour is too much.&lt;/p&gt;

&lt;p&gt;I also added a patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3757&quot; title=&quot;&amp;#39;ASSERT FAILED transaction table has null entry when running new StressMultiTest&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3757&quot;&gt;&lt;del&gt;DERBY-3757&lt;/del&gt;&lt;/a&gt; that removes the assert for now.&lt;/p&gt;


&lt;p&gt;-Erlend&lt;/p&gt;</comment>
                            <comment id="12629163" author="knutanders" created="Mon, 8 Sep 2008 14:56:30 +0100"  >&lt;p&gt;The tinderbox failed after StressMultiTest was added to suites.AllPackages.&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-692494.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-692494.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think the problem may be that StressMultiTest sets a number of system properties in its suite() method. Since all the suite() methods are run before any of the tests, these properties will be used by all the tests in suites.All. To set system properties, SystemPropertiesTestSetup should be used instead.&lt;/p&gt;</comment>
                            <comment id="12629242" author="kmarsden" created="Mon, 8 Sep 2008 19:15:55 +0100"  >&lt;p&gt;I think I am going to back out the change to enable the test. I will do that as soon as suites.All finishes.  &lt;/p&gt;

&lt;p&gt;I attempted to change the test to use SystemPropertyTestSetup but am having some problems. If I run with derby.tests.debug=true, I see longer delays than the 2 or 3 seconds we have set for lock timeout and deadlock timeout.  I am attaching the diff and would appreciate any input on why this is not working.&lt;/p&gt;</comment>
                            <comment id="12629276" author="knutanders" created="Mon, 8 Sep 2008 21:23:53 +0100"  >&lt;p&gt;Perhaps DatabasePropertyTestSetup is better. And it probably needs to have staticProperties=true so that it reboots the engine and reads the properties.&lt;/p&gt;

&lt;p&gt;Also change System.getProperties() -&amp;gt; new Properties() in embeddedSuite(). (Or perhaps we can skip setting the properties in that method since we&apos;ve already set them in suite().) &lt;/p&gt;</comment>
                            <comment id="12629286" author="kmarsden" created="Mon, 8 Sep 2008 21:58:43 +0100"  >&lt;p&gt;Thanks Knut for looking at this.&lt;/p&gt;

&lt;p&gt;I think some of the properties like derby.storage.keepTransactionLog are system scope properties so I don&apos;t know that DatabasePropertyTestSetup will work., but you have a good point about shutting down. We probably need to shutdown derby before we start.&lt;/p&gt;


&lt;p&gt;embeddedSuite() is only called from StressMulti50x59 so I will change that to use SystemPropertyTestSetup too.&lt;/p&gt;</comment>
                            <comment id="12630927" author="ebirkenes" created="Sun, 14 Sep 2008 21:51:00 +0100"  >
&lt;p&gt;I just changed Katheys patch to use DatabasePropertiesTestSetup and re-added it to suites.All.&lt;br/&gt;
Ran suites.All and it seems to work fine now.&lt;/p&gt;


</comment>
                            <comment id="12631438" author="kmarsden" created="Tue, 16 Sep 2008 16:47:46 +0100"  >&lt;p&gt;I wonder with DatabasePropertyTestSetup if derby.storage.keepTransactionLog and derby.language.logStatementText will get set since they are  system wide properties.&lt;/p&gt;</comment>
                            <comment id="12638395" author="kmarsden" created="Thu, 9 Oct 2008 22:17:02 +0100"  >&lt;p&gt;Attached is a patch that enables the test and uses SystemPropertiesTestSetup for setting the system properties for embedded.  I added a staticproperties flag to SystemPropertiesTestSetup that will  cause the engine to shutdown on setup and teardown so that the properties take effect.   It is still not  perfect but I would like to check it in as an incremental improvement.  The SystemPropertyTestSetup  works fine for the embedded test but not for network server because it causes protocol errors and not for encrypted because the database cannot booted after it has been shutdown.  So I did the SystemPropertiesTestSetup only for embedded.  &lt;/p&gt;

&lt;p&gt;Another problem is that the database will get deleted after the test run, so the property to keep the transaction log is really not that useful.  I plan to change BaseTestCase to  save off the database if the test fails.  I&apos;ll open up another issue for that change.&lt;/p&gt;

&lt;p&gt;I ran suites.All (hit only &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3719&quot; title=&quot;&amp;#39;...replication.buffer.LogBufferFullException&amp;#39; causes failover to fail w/ &amp;#39;XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.&amp;#39;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3719&quot;&gt;&lt;del&gt;DERBY-3719&lt;/del&gt;&lt;/a&gt;) , StressMutli10x1,StressMulti50x59&lt;/p&gt;

</comment>
                            <comment id="12639492" author="kmarsden" created="Tue, 14 Oct 2008 18:02:07 +0100"  >&lt;p&gt;Patch is committed but I will leave this bug open as we still need to remove stress.multi from derbyall.&lt;/p&gt;</comment>
                            <comment id="12670176" author="kmarsden" created="Tue, 3 Feb 2009 23:41:32 +0000"  >&lt;p&gt;Are there any concerns with removing stress.multi  from derbyall now?   If not I&apos;&apos;ll do it Thursday.&lt;/p&gt;</comment>
                            <comment id="12671490" author="kmarsden" created="Sat, 7 Feb 2009 16:56:09 +0000"  >&lt;p&gt;Resolving this issue now that stress.multi has been removed from derbyall&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12399561">DERBY-3757</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12383721" name="DERBY-1764-Review.diff" size="17125" author="ebirkenes" created="Tue, 10 Jun 2008 00:09:35 +0100"/>
                            <attachment id="12384393" name="DERBY-1764-V1.diff" size="22929" author="ebirkenes" created="Fri, 20 Jun 2008 17:02:27 +0100"/>
                            <attachment id="12384892" name="DERBY-1764-V2.diff" size="69276" author="ebirkenes" created="Sat, 28 Jun 2008 19:23:30 +0100"/>
                            <attachment id="12386368" name="DERBY-1764_4.diff" size="9510" author="ebirkenes" created="Fri, 18 Jul 2008 03:32:54 +0100"/>
                            <attachment id="12386614" name="DERBY-1764_5.diff" size="10220" author="ebirkenes" created="Tue, 22 Jul 2008 12:05:39 +0100"/>
                            <attachment id="12387939" name="DERBY-1764_6.diff" size="921" author="ebirkenes" created="Mon, 11 Aug 2008 10:38:29 +0100"/>
                            <attachment id="12390082" name="DERBY-1764_8_Use_DatabasePropertiesTestSetup.diff" size="3387" author="ebirkenes" created="Sun, 14 Sep 2008 21:51:00 +0100"/>
                            <attachment id="12391850" name="DERBY-1764_sysprops_diff.txt" size="8588" author="kmarsden" created="Thu, 9 Oct 2008 22:17:02 +0100"/>
                            <attachment id="12385373" name="derby-1764-3a-whitespace_changes.diff" size="32035" author="kristwaa" created="Mon, 7 Jul 2008 08:51:31 +0100"/>
                            <attachment id="12384889" name="derby-1764-derby.log" size="3615015" author="bryanpendleton" created="Sat, 28 Jun 2008 16:43:48 +0100"/>
                            <attachment id="12389694" name="derby-1764_use_System_PropertySetup_diff.txt" size="2428" author="kmarsden" created="Mon, 8 Sep 2008 19:15:55 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 9 Jun 2008 23:09:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30132</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0tu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38652</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>