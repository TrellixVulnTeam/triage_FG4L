<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:48:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6137/DERBY-6137.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6137] update/delete statement on table with trigger fails randomly with ERROR XSTA2</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6137</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I have an AFTER DELETE trigger on an exchange rate table which inserts data into a history table. It uses a sequence for the key in the history table.&lt;/p&gt;

&lt;p&gt;Simplified it looks like this:&lt;br/&gt;
CREATE TRIGGER TRG_EXCHANGE_RATES_HIST_DEL&lt;br/&gt;
AFTER DELETE ON EXCHANGE_RATES&lt;br/&gt;
REFERENCING OLD ROW AS OLD&lt;br/&gt;
FOR EACH ROW&lt;br/&gt;
 INSERT INTO EXCHANGE_RATE_HISTORY (ID_HISTORY, CUR_FROM, AMNT_FROM, CUR_TO, AMNT_TO, AMNT_RATE, DAT_CREATION)&lt;br/&gt;
   VALUES (( NEXT VALUE for HIST_SEQ ), OLD.CUR_FROM, OLD.AMNT_FROM, OLD.CUR_TO, OLD.AMNT_TO, OLD.AMNT_RATE, CURRENT_TIMESTAMP);&lt;/p&gt;

&lt;p&gt;The sequence is defined as:&lt;br/&gt;
create sequence HIST_SEQ&lt;br/&gt;
increment by 1&lt;br/&gt;
start with 10000001&lt;br/&gt;
 no maxvalue&lt;br/&gt;
 minvalue 10000001&lt;br/&gt;
no cycle;&lt;/p&gt;

&lt;p&gt;Randomly when deleting data the statement will fail with:&lt;br/&gt;
ERROR XSTA2: A transaction was already active, when attempt was made to make another transaction active.&lt;/p&gt;

&lt;p&gt;I will attach the full stack trace. It looks like the sequence cache needs to be cleared which causes a nested user transaction to start. But my delete statement is already running as part of a transaction (non XA - spring managed - hibernate).&lt;/p&gt;

&lt;p&gt;We do not have this exception when testing with derby 10.8.2.2.&lt;/p&gt;

&lt;p&gt;I get the same exception after building and running the latest trunk version (revision 1463340, Bundle-Version: 10.11.0000000.1463340)&lt;/p&gt;

&lt;p&gt;To rule out the sequence on the history table, I switched it to use a generated column (GENERATED ALWAYS AS IDENTITY (START WITH 10000001, INCREMENT BY 1)) but I still randomly get the exception.&lt;/p&gt;

&lt;p&gt;All tables in the application use sequences for their primary keys (through Hibernate&apos;s SequenceHiLoGenerator) so it seems to be possibly related to that.&lt;/p&gt;</description>
                <environment>$ java -version&lt;br/&gt;
java version &amp;quot;1.6.0_43&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_43-b01)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 20.14-b01, mixed mode)&lt;br/&gt;
&lt;br/&gt;
Linux x86_64</environment>
        <key id="12640198">DERBY-6137</key>
            <summary>update/delete statement on table with trigger fails randomly with ERROR XSTA2</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rhillegas">Rick Hillegas</assignee>
                                    <reporter username="andrew.clemons">Andrew Clemons</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                    </labels>
                <created>Tue, 2 Apr 2013 01:51:44 +0100</created>
                <updated>Tue, 3 Jun 2014 14:09:22 +0100</updated>
                            <resolved>Mon, 22 Apr 2013 13:00:59 +0100</resolved>
                                    <version>10.9.1.0</version>
                    <version>10.11.1.1</version>
                                    <fixVersion>10.9.2.2</fixVersion>
                    <fixVersion>10.10.2.0</fixVersion>
                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13619385" author="andrew.clemons" created="Tue, 2 Apr 2013 01:53:02 +0100"  >&lt;p&gt;derby log with stacktrace&lt;/p&gt;</comment>
                            <comment id="13619501" author="dagw" created="Tue, 2 Apr 2013 05:18:33 +0100"  >&lt;p&gt;From the stack trace it looks like Derby is trying to create a nested updatable transaction &lt;b&gt;twice&lt;/b&gt;, first for compiling the trigger&apos;s stored prepared statment, then as a part of that effort, when the data dictionary is clearing out sequence caches as it tries to save unused but allocated sequences.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
Booting Derby version The Apache Software Foundation - Apache Derby - 10.9.1.0 - (1344872): &lt;br/&gt;
:&lt;/p&gt;

&lt;p&gt;ERROR XSTA2: A transaction was already active, when attempt was made to make another transaction active.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactFactory.pushTransactionContext&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactFactory.startCommonTransaction&lt;br/&gt;
        at org.apache.derby.impl.store.raw.xact.XactFactory.startNestedUpdateUserTransaction&lt;br/&gt;
        at org.apache.derby.impl.store.raw.RawStore.startNestedUpdateUserTransaction&lt;br/&gt;
        at org.apache.derby.impl.store.access.RAMTransaction.startNestedUserTransaction&lt;br/&gt;
**&amp;gt;     at org.apache.derby.impl.sql.catalog.SequenceUpdater.updateCurrentValueOnDisk&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SequenceUpdater.clean&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.SequenceUpdater.clearIdentity&lt;br/&gt;
        at org.apache.derby.impl.services.cache.ConcurrentCache.removeEntry&lt;br/&gt;
        at org.apache.derby.impl.services.cache.ConcurrentCache.ageOut&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearSequenceCaches&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.clearCaches&lt;br/&gt;
        at org.apache.derby.impl.sql.catalog.DataDictionaryImpl.startWriting&lt;br/&gt;
        at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.compileStatement&lt;br/&gt;
        at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.prepareAndRelease&lt;br/&gt;
**&amp;gt;     at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatement &lt;br/&gt;
#line 733 (nested transaction started at #706)&lt;/p&gt;

&lt;p&gt;        at org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getPreparedStatement&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.RowTriggerExecutor.fireTrigger&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.TriggerEventActivator.notifyEvent&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DeleteResultSet.fireAfterTriggers&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.DeleteResultSet.open&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate&lt;br/&gt;
:&lt;/p&gt;

&lt;p&gt;The transaction machinery doesn&apos;t allow two nested update transaction,&lt;br/&gt;
cf test in XactFactory.pushTransactionContext:&lt;/p&gt;

&lt;p&gt;   :&lt;br/&gt;
   if (cm.getContext(contextName) != null) {&lt;br/&gt;
       throw StandardException.newException&lt;/p&gt;

&lt;p&gt;contextName here being AccessFactoryGlobals.NESTED_UPDATE_USER_TRANS in both cases above.&lt;/p&gt;

&lt;p&gt;This looks like a clear bug to me. Thanks for finding this, Andrew!&lt;/p&gt;

&lt;p&gt;It looks as if the code to clean out the cache values to disk was introduced as part of &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5398&quot; title=&quot;NullPointerException in storemore/bug3498.sql&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5398&quot;&gt;&lt;del&gt;DERBY-5398&lt;/del&gt;&lt;/a&gt;: Use a transient transaction to flush unused sequence values back to disk during orderly engine shutdown.&quot;&lt;/p&gt;

&lt;p&gt;In this case it looks like the cache is cleaned not only at shutdown but also when DataDictionaryImpl#startWriting happens (line 1314).&lt;/p&gt;

&lt;p&gt;Note: the call to get a nested updatable user transaction in SPSDescriptor.getPreparedStatement was modified as part of a fix to&lt;/p&gt;

&lt;p&gt;   &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt; Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&lt;br/&gt;
   &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5780&quot; title=&quot;identity column performance has degredated&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5780&quot;&gt;&lt;del&gt;DERBY-5780&lt;/del&gt;&lt;/a&gt; identity column performance has degredated &lt;/p&gt;

&lt;p&gt;but I don&apos;t think that&apos;s relevant, since it only added explicit synching to disk.&lt;/p&gt;</comment>
                            <comment id="13625482" author="rhillegas" created="Mon, 8 Apr 2013 16:55:45 +0100"  >&lt;p&gt;Attaching derby-6137.sql, a script which demonstrates this problem.&lt;/p&gt;</comment>
                            <comment id="13625523" author="rhillegas" created="Mon, 8 Apr 2013 17:43:36 +0100"  >&lt;p&gt;Hi Andrew,&lt;/p&gt;

&lt;p&gt;You said that you could also cause this problem by using an identity column in the history table, instead of a sequence. Could you attach a stack trace for the problem you see when you use identity columns? Thanks.&lt;/p&gt;</comment>
                            <comment id="13626685" author="rhillegas" created="Tue, 9 Apr 2013 16:01:11 +0100"  >&lt;p&gt;Attaching derby-6137-01-aa-dontClearSequenceCache.diff. This patch disables the clearing of the sequence cache during DataDictionary writes. I am running tests now.&lt;/p&gt;

&lt;p&gt;The DataDictionary clears its cached information over-aggressively. I don&apos;t see any reason to clear the sequence cache during DDL or SPS recompilation. When we implement ALTER SEQUENCE, we will have to revisit this decision and adjust the sequence cache for that statement.&lt;/p&gt;

&lt;p&gt;This patch makes the DataDictionary NOT clear the sequence cache when you call DataDictionary.startWriting(). I&apos;ve added a test case to verify that SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE can&apos;t reach previously cached sequences which are dropped.&lt;/p&gt;


&lt;p&gt;Touches the following files:&lt;/p&gt;

&lt;p&gt;-----------&lt;/p&gt;

&lt;p&gt;M       java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java&lt;br/&gt;
M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;/p&gt;

&lt;p&gt;Don&apos;t clear the sequence cache inside DataDictionary.startWriting().&lt;/p&gt;

&lt;p&gt;-----------&lt;/p&gt;

&lt;p&gt;M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/SequenceTest.java&lt;/p&gt;

&lt;p&gt;Tests for this new behavior.&lt;/p&gt;</comment>
                            <comment id="13626911" author="rhillegas" created="Tue, 9 Apr 2013 19:21:50 +0100"  >&lt;p&gt;Attaching derby-6137-01-ab-dontClearSequenceCache.diff. The previous version of the patch caused an error in SequenceGeneratorTest. The new version makes the DROP SEQUENCE action clear the sequence cache. With this patch both SequenceTest and SequenceGeneratorTest pass cleanly. I will run full regression tests again.&lt;/p&gt;

&lt;p&gt;Touches the following additional file:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/execute/DropSequenceConstantAction.java&lt;/p&gt;</comment>
                            <comment id="13627782" author="rhillegas" created="Wed, 10 Apr 2013 14:31:14 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6137-01-ab-dontClearSequenceCache.diff. Committed at subversion revision 1466481.&lt;/p&gt;</comment>
                            <comment id="13627794" author="rhillegas" created="Wed, 10 Apr 2013 14:47:50 +0100"  >&lt;p&gt;Attaching derby-6137-02-aa-balanceFindWithRelease.diff. This is a small cleanup patch for a problem I noticed while scripting the original bug. I am running tests now.&lt;/p&gt;

&lt;p&gt;I noticed that the cache manager find() call was not balanced with a corresponding release() call in DataDictionaryImpl.peekAtSequence(). This patch fixes that.&lt;/p&gt;


&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M       java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java&lt;/p&gt;</comment>
                            <comment id="13627915" author="rhillegas" created="Wed, 10 Apr 2013 16:37:52 +0100"  >&lt;p&gt;Tests passed cleanly for me on derby-6137-02-aa-balanceFindWithRelease.diff. Committed at subversion revision 1466522.&lt;/p&gt;</comment>
                            <comment id="13628121" author="rhillegas" created="Wed, 10 Apr 2013 20:02:20 +0100"  >&lt;p&gt;Ported 1466481 and 1466522 from trunk to 10.10 branch at subversion revision 1466623.&lt;/p&gt;</comment>
                            <comment id="13628132" author="rhillegas" created="Wed, 10 Apr 2013 20:12:24 +0100"  >&lt;p&gt;Ported 1466481 and 1466522 from trunk to 10.9 branch at subversion revision 1466630.&lt;/p&gt;</comment>
                            <comment id="13628341" author="andrew.clemons" created="Wed, 10 Apr 2013 23:08:04 +0100"  >&lt;p&gt;&amp;gt; You said that you could also cause this problem by using an identity column in the history table, instead of a sequence. Could you attach a stack trace for the problem you see when you use identity columns?&lt;/p&gt;

&lt;p&gt;Hi Rick,&lt;br/&gt;
Sorry for the late reply. Here is a trace with an identity column in the history table. The trace looks the same, but there are other tables touched during the transaction which have sequences.&lt;/p&gt;</comment>
                            <comment id="13628345" author="andrew.clemons" created="Wed, 10 Apr 2013 23:09:57 +0100"  >&lt;p&gt;exception with identity column log&lt;/p&gt;</comment>
                            <comment id="13628878" author="rhillegas" created="Thu, 11 Apr 2013 13:29:24 +0100"  >&lt;p&gt;Thanks, Andrew. You might want to test-drive the fix, which has been checked into the 10.11 trunk and backported to the 10.10 and 10.9 branches. Let me know if that fixes the problem or just moves it around. Thanks.&lt;/p&gt;</comment>
                            <comment id="13637520" author="andrew.clemons" created="Sun, 21 Apr 2013 10:54:13 +0100"  >&lt;p&gt;Hi Rick,&lt;br/&gt;
I built the 10.9 branch and ran through my testcases. Everything is green for my tests. Thanks for the fix!&lt;/p&gt;</comment>
                            <comment id="13637962" author="rhillegas" created="Mon, 22 Apr 2013 13:22:54 +0100"  >&lt;p&gt;Thanks, Andrew. Resolving and closing this bug.&lt;/p&gt;</comment>
                            <comment id="13703214" author="rhillegas" created="Tue, 9 Jul 2013 13:36:13 +0100"  >&lt;p&gt;I think it should be possible to backport this fix to 10.8. However, the fix adds a test case to SequenceTest, which verifies the behavior of SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE. That test case would have to be modified because that system function doesn&apos;t exist in 10.8.&lt;/p&gt;</comment>
                            <comment id="13728707" author="mamtas" created="Sun, 4 Aug 2013 01:47:12 +0100"  >&lt;p&gt;I was looking at backporting this jira but I find that some of the code changes done by this jira in DataDictionaryImpl like following&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;clearSequenceCaches();&lt;br/&gt;
+        if ( clearSequenceCaches ) 
{ clearSequenceCaches(); }
&lt;p&gt;relies on the code added to DataDictionaryImpl through another jira(&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4437&quot; title=&quot;Concurrent inserts into table with identity column perform poorly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4437&quot;&gt;&lt;del&gt;DERBY-4437&lt;/del&gt;&lt;/a&gt;: Reclaim unused sequence/identity values on orderly shutdown) revision 1137985. An attempt was made to backport revision 1137985 into 10.8 but it was later backed out with revision 1179717 (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5448&quot; title=&quot;In the 10.8 branch, back out the concurrency improvements introduced by using SequenceUpdaters to allocate identity values.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5448&quot;&gt;&lt;del&gt;DERBY-5448&lt;/del&gt;&lt;/a&gt;: Back out 10.8 version of concurrency improvements to identity columns.) Based on this, I think this jira(&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6137&quot; title=&quot;update/delete statement on table with trigger fails randomly with ERROR XSTA2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6137&quot;&gt;&lt;del&gt;DERBY-6137&lt;/del&gt;&lt;/a&gt;) should not be backported to 10.8. Rick, if I my understanding of this is not correct, please feel free to remove the reject 10.8 backport label.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13729446" author="rhillegas" created="Mon, 5 Aug 2013 13:12:04 +0100"  >&lt;p&gt;Hi Mamta. That sounds like a good decision to me. Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12642135">DERBY-6176</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12718143">DERBY-6595</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12577808" name="derby-6137-01-aa-dontClearSequenceCache.diff" size="6513" author="rhillegas" created="Tue, 9 Apr 2013 16:01:11 +0100"/>
                            <attachment id="12577847" name="derby-6137-01-ab-dontClearSequenceCache.diff" size="7184" author="rhillegas" created="Tue, 9 Apr 2013 19:21:50 +0100"/>
                            <attachment id="12578007" name="derby-6137-02-aa-balanceFindWithRelease.diff" size="1019" author="rhillegas" created="Wed, 10 Apr 2013 14:47:50 +0100"/>
                            <attachment id="12577551" name="derby-6137.sql" size="861" author="rhillegas" created="Mon, 8 Apr 2013 16:55:45 +0100"/>
                            <attachment id="12576469" name="derby_db.log" size="11574" author="andrew.clemons" created="Tue, 2 Apr 2013 01:53:02 +0100"/>
                            <attachment id="12578093" name="derby_db_identity.log" size="12112" author="andrew.clemons" created="Wed, 10 Apr 2013 23:09:57 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10365"><![CDATA[Crash]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Apr 2013 04:18:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320661</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzd6e7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321002</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>