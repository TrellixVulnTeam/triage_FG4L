<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:07 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3302/DERBY-3302.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3302] NullPointerException during recovery of database with territory-based collation</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3302</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When logical undo is performed on a database with territory-based collation, you may get a NullPointerException in SQLChar.getCollationKey() because SQLChar.getLocaleFinder() returns null.&lt;/p&gt;

&lt;p&gt;This bug was reported on derby-user: &lt;a href=&quot;http://thread.gmane.org/gmane.comp.apache.db.derby.user/8253&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://thread.gmane.org/gmane.comp.apache.db.derby.user/8253&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12385703">DERBY-3302</key>
            <summary>NullPointerException during recovery of database with territory-based collation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Jan 2008 14:03:51 +0000</created>
                <updated>Thu, 24 Jan 2008 14:56:23 +0000</updated>
                            <resolved>Fri, 11 Jan 2008 20:57:25 +0000</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.3.2.1</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12556567" author="knutanders" created="Mon, 7 Jan 2008 14:17:38 +0000"  >&lt;p&gt;Attaching a script which reproduces the failure. Follow these steps:&lt;/p&gt;

&lt;p&gt;1. Start ij&lt;/p&gt;

&lt;p&gt;2. Execute this command in ij:&lt;br/&gt;
        run &apos;npe.sql&apos;;&lt;/p&gt;

&lt;p&gt;3. Terminate ij with Ctrl-C (don&apos;t terminate it with Ctrl-D or EXIT, as those commands will perform a clean shutdown)&lt;/p&gt;

&lt;p&gt;4. Restart ij&lt;/p&gt;

&lt;p&gt;5. Open a connection to the database with this command:&lt;br/&gt;
        connect &apos;jdbc:derby:colldb&apos;;&lt;/p&gt;

&lt;p&gt;Then you&apos;ll get a NullPointerException with the following stack trace:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.getCollationKey(SQLChar.java:2516)&lt;br/&gt;
	at org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes.stringCompare(WorkHorseForCollatorDatatypes.java:88)&lt;br/&gt;
	at org.apache.derby.iapi.types.CollatorSQLVarchar.stringCompare(CollatorSQLVarchar.java:159)&lt;br/&gt;
	at org.apache.derby.iapi.types.SQLChar.compare(SQLChar.java:902)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.ControlRow.compareIndexRowToKey(ControlRow.java:1354)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IUndo.findUndo(B2IUndo.java:221)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LogicalPageOperation.findLogicalPage(LogicalPageOperation.java:358)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LogicalPageOperation.generateUndo(LogicalPageOperation.java:164)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.FileLogger.undo(FileLogger.java:991)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.abort(Xact.java:919)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.XactFactory.rollbackAllTransactions(XactFactory.java:529)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.recover(LogToFile.java:1201)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.RawStore.boot(RawStore.java:334)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1992)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:546)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:419)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(RAMAccessManager.java:1001)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1992)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(BaseMonitor.java:546)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Monitor.java:419)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.bootStore(BasicDatabase.java:753)&lt;br/&gt;
	at org.apache.derby.impl.db.BasicDatabase.boot(BasicDatabase.java:201)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(BaseMonitor.java:1992)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.bootModule(TopService.java:291)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(BaseMonitor.java:1829)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(BaseMonitor.java:1695)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(BaseMonitor.java:1575)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(BaseMonitor.java:994)&lt;br/&gt;
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Monitor.java:542)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(EmbedConnection.java:1957)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.&amp;lt;init&amp;gt;(EmbedConnection.java:255)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection30.&amp;lt;init&amp;gt;(EmbedConnection30.java:73)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection40.&amp;lt;init&amp;gt;(EmbedConnection40.java:54)&lt;br/&gt;
	at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Driver40.java:68)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:211)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:582)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:154)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.dynamicConnection(ij.java:1238)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ConnectStatement(ij.java:1088)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.ijStatement(ij.java:916)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:328)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;br/&gt;
	at org.apache.derby.iapi.tools.run.main(run.java:51)&lt;/p&gt;</comment>
                            <comment id="12556654" author="mamtas" created="Mon, 7 Jan 2008 19:07:29 +0000"  >&lt;p&gt;I tried following the instructions multiple times but can&apos;t get the npe to reproduce. This is what I tried&lt;br/&gt;
$ java -Dij.exceptionTrace=true org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt; run &apos;npe.sql&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:colldb;create=true;territory=no_NO;collation=TERRITORY_BASED&apos; as c1;&lt;br/&gt;
ij&amp;gt; create table t (x varchar(100) primary key);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; autocommit off;&lt;br/&gt;
ij&amp;gt; insert into t values &apos;xxxx&apos;;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:colldb&apos; as c2;&lt;br/&gt;
ij(C2)&amp;gt; insert into t values &apos;abab&apos;;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(C2)&amp;gt;&lt;br/&gt;
$ java -Dij.exceptionTrace=true org.apache.derby.tools.ij&lt;br/&gt;
ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:colldb&apos;;&lt;br/&gt;
ij&amp;gt; exit;&lt;/p&gt;

&lt;p&gt;Notice that I Ctrl-C from the first session of ij. I am running this against the trunk.&lt;/p&gt;</comment>
                            <comment id="12556679" author="kristwaa" created="Mon, 7 Jan 2008 20:16:01 +0000"  >&lt;p&gt;Hello Mamta,&lt;/p&gt;

&lt;p&gt;I tried the repro as well, and I see varying results. Sometimes it works, sometimes it doesn&apos;t when I press CTRL-C using Cygwin on Windows XP. I don&apos;t know which mechanism is kicking in with CTRL-C, but the repro works every time if I kill ij with the task manager.&lt;br/&gt;
You can have a look at the timestamps of the log files to check if Derby was able to write something before exiting.&lt;/p&gt;


&lt;p&gt;hth,&lt;/p&gt;</comment>
                            <comment id="12556698" author="mamtas" created="Mon, 7 Jan 2008 21:14:12 +0000"  >&lt;p&gt;Thanks, Kristian. crashing ij through task manager did the trick. I get the NPE now.&lt;/p&gt;</comment>
                            <comment id="12557635" author="tom_" created="Thu, 10 Jan 2008 13:07:14 +0000"  >&lt;p&gt;This bug occured during the last week estimatedly every 32 hours, so I would ask for giving it a higher priority, as critical or blocker.&lt;/p&gt;

&lt;p&gt;tom_&lt;/p&gt;</comment>
                            <comment id="12557638" author="knutanders" created="Thu, 10 Jan 2008 13:22:44 +0000"  >&lt;p&gt;I agree. Raising the priority to &apos;Critical&apos; since the bug makes it impossible to access the database.&lt;/p&gt;</comment>
                            <comment id="12557721" author="mamtas" created="Thu, 10 Jan 2008 17:47:27 +0000"  >&lt;p&gt;Commited a fix for this into trunk using revision 610846. I will work on merging this into 10.3 codeline and writing a test case. The tests ran fine on my Windows XP machine with Sun jdk1.4 The commit comments are as follows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3302&quot; title=&quot;NullPointerException during recovery of database with territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3302&quot;&gt;&lt;del&gt;DERBY-3302&lt;/del&gt;&lt;/a&gt; The user was running into null pointer exception at the time of database recovery&lt;br/&gt;
because Derby was trying to get the Collator object through database context. But the &lt;br/&gt;
Collator object is already available in the territory sensitive character classes and we&lt;br/&gt;
do not have to go to database context to get it. I changed the code to use that collator &lt;br/&gt;
object rather than look into database context. The reason for null pointer exception was &lt;br/&gt;
that database context was not loaded yet during database recovery.&lt;/p&gt;</comment>
                            <comment id="12557751" author="knutanders" created="Thu, 10 Jan 2008 19:00:17 +0000"  >&lt;p&gt;Thanks for fixing this so quickly, Mamta! I have verified that the repro runs without failure with the fix.&lt;/p&gt;</comment>
                            <comment id="12557756" author="mamtas" created="Thu, 10 Jan 2008 19:22:08 +0000"  >&lt;p&gt;Thanks for double-checking the fix, Knut. I am thinking of merging the fix into 10.3 tomorrow just to make sure that tests run fine on the tinderbox. All the tests ran fine on my machine.&lt;/p&gt;</comment>
                            <comment id="12557789" author="mikem" created="Thu, 10 Jan 2008 20:38:24 +0000"  >&lt;p&gt;Could you comment on the SQLChar case, ie. the non collation recovery path.  In that case is there something that &lt;br/&gt;
guarantees at recovery time that localeFinder won&apos;t be null and we will never enter the code for the database&lt;br/&gt;
context?:&lt;/p&gt;

&lt;p&gt;   protected LocaleFinder getLocaleFinder()&lt;br/&gt;
   {&lt;br/&gt;
       // This is not very satisfactory, as it creates a dependency on&lt;br/&gt;
       // the DatabaseContext. It&apos;s the best I could do on short notice,&lt;br/&gt;
       // though.  -  Jeff&lt;br/&gt;
       if (localeFinder == null)&lt;/p&gt;
       {
           DatabaseContext dc = (DatabaseContext) ContextService.getContext(Dat
baseContext.CONTEXT_ID);
           if( dc != null)
               localeFinder = dc.getDatabase();
       }

&lt;p&gt;       return localeFinder;&lt;br/&gt;
   }&lt;/p&gt;</comment>
                            <comment id="12557912" author="mamtas" created="Fri, 11 Jan 2008 06:04:42 +0000"  >&lt;p&gt;The majority of getLocaleFinder calls are from dead national character datatype code. &lt;/p&gt;

&lt;p&gt;In addition, it is also called by existing code (ie the code before collation feature was added) for date, time and timestamp. I am not sure if that can run into problem during recovery. &lt;/p&gt;

&lt;p&gt;One place that I find suspicious is the SQLChar.like(dvd, dvd) method line number 1767. This code is executed for non-national/non-collation sensitive character types ie for UCS_BASIC character types and the code looks as follows&lt;br/&gt;
  // Make sure we fail for both varchar an nvarchar&lt;br/&gt;
  // for multiple collation characters.&lt;br/&gt;
  SQLChar escapeSQLChar = (SQLChar) escape;&lt;br/&gt;
  int[] escapeIntArray = escapeSQLChar.getIntArray();&lt;br/&gt;
  if (escapeIntArray != null &amp;amp;&amp;amp; (escapeIntArray.length != 1))&lt;/p&gt;
  {
  throw StandardException.newException(SQLState.LANG_INVALID_ESCAPE_CHARACTER,new String (escapeSQLChar.getCharArray()));
   }

&lt;p&gt;So, it appears that we are trying to see if number of collation elements associated with escape character is more than 1 and if yes, then we throw exception. Seems like a code like above should be done for collation sensitive character types and not for UCS_BASIC character types. Interestingly, nothing like this is getting checked for national character datatypes. I entered jira entry &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3315&quot; title=&quot;Should UCS_BASIC character types have to look at collation elements when dealing with escape character in the LIKE clause?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3315&quot;&gt;&lt;del&gt;DERBY-3315&lt;/del&gt;&lt;/a&gt; for this.&lt;/p&gt;</comment>
                            <comment id="12558116" author="mamtas" created="Fri, 11 Jan 2008 20:44:10 +0000"  >&lt;p&gt;Committed a test case for this jira entry into trunk with revision 611295. the commit comments were as follows&lt;/p&gt;

&lt;p&gt;Adding a test case for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3302&quot; title=&quot;NullPointerException during recovery of database with territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3302&quot;&gt;&lt;del&gt;DERBY-3302&lt;/del&gt;&lt;/a&gt;. There are two sub-test case classes involved here, col_rec1.java and col_rec2.java&lt;/p&gt;

&lt;p&gt;The purpose of col_rec1 test and col_rec2 test is to create a territory based database and create some objects with collation sensitive character types. Then, make the database crash so that during the recovery, store engine has to do collation related operations. Those collation related operations are going to require that we use correct Collator object. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3302&quot; title=&quot;NullPointerException during recovery of database with territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3302&quot;&gt;&lt;del&gt;DERBY-3302&lt;/del&gt;&lt;/a&gt; demonstrated a npe during this operation because Derby was relying on database context to get the correct Collator object. But database context is not available at this point in the recovery. With the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3302&quot; title=&quot;NullPointerException during recovery of database with territory-based collation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3302&quot;&gt;&lt;del&gt;DERBY-3302&lt;/del&gt;&lt;/a&gt;, the Collator object will now be obtained from collation sensitive datatypes itself rather than looking at database context which is not available at this point in recovery. &lt;/p&gt;

&lt;p&gt;col_rec1 class will do the steps of create a territory based database and create some objects with collation sensitive character types. Then, make the database crash. col_rec2 class will do the part of rebooting the crashed db which will require store to go through recovery.&lt;/p&gt;</comment>
                            <comment id="12558122" author="mamtas" created="Fri, 11 Jan 2008 20:49:39 +0000"  >&lt;p&gt;Merged changes from trunk revision(610846) into 10.3 codeline using revision 611297. Will work on merging the test case.&lt;/p&gt;</comment>
                            <comment id="12558123" author="mamtas" created="Fri, 11 Jan 2008 20:55:24 +0000"  >&lt;p&gt;Merged test changes from trunk revision(611295) into 10.3 codeline using revision 611298.&lt;/p&gt;</comment>
                            <comment id="12558124" author="mamtas" created="Fri, 11 Jan 2008 20:57:25 +0000"  >&lt;p&gt;I am finished with code changes and test changes for this jira entry. Would appreciate if Tom can give it a try. The changes are in trunk and 10.3 codeline.&lt;/p&gt;</comment>
                            <comment id="12561290" author="tom_" created="Tue, 22 Jan 2008 10:35:25 +0000"  >&lt;p&gt;Which version do you recommend for deployment? Will 10.3.2.2 be an official release? &lt;/p&gt;</comment>
                            <comment id="12561319" author="knutanders" created="Tue, 22 Jan 2008 12:14:07 +0000"  >&lt;p&gt;I&apos;m not aware of any plans for making an official 10.3 release any time soon. The tentative schedule for the 10.4 release can be found here: &lt;a href=&quot;http://wiki.apache.org/db-derby/DerbyTenFourRelease&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/db-derby/DerbyTenFourRelease&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to build your own jar files for deployment, I think you&apos;re better off with 10.3. If you use the code in the development trunk, you&apos;ll probably run into upgrade issues when you switch to an official release later (databases created with trunk are generally not upgradeable).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12372622" name="npe.sql" size="247" author="knutanders" created="Mon, 7 Jan 2008 14:17:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 7 Jan 2008 19:07:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23557</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0znz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39596</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>