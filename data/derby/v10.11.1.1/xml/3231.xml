<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:11:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3231/DERBY-3231.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3231] Sorting on COUNT with OR and GROUP BY delivers wrong results.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3231</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The result of the select is not sorted in &quot;order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; DESC&quot; or &quot;order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ASC&quot; &lt;/p&gt;

&lt;p&gt;create table yy (a double, b double);&lt;/p&gt;

&lt;p&gt;insert into yy values (2, 4);&lt;br/&gt;
insert into yy values (5, 7);&lt;br/&gt;
insert into yy values (2, 3);&lt;br/&gt;
insert into yy values (2, 3);&lt;br/&gt;
insert into yy values (2, 3);&lt;br/&gt;
insert into yy values (2, 3);&lt;br/&gt;
insert into yy values (9, 7);&lt;/p&gt;


&lt;p&gt;select b, COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; AS &quot;COUNT_OF&quot;, SUM(b) AS &quot;sum b&quot; &lt;br/&gt;
from yy&lt;br/&gt;
where a = 5 or a = 2&lt;br/&gt;
group by b&lt;br/&gt;
order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; asc&lt;/p&gt;

&lt;p&gt;&amp;#8211; same result as:&lt;/p&gt;

&lt;p&gt;select b, COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; AS &quot;COUNT_OF&quot;, SUM(b) AS &quot;sum b&quot; &lt;br/&gt;
from yy&lt;br/&gt;
where a = 5 or a = 2&lt;br/&gt;
group by b&lt;br/&gt;
order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; desc&lt;/p&gt;</description>
                <environment>Eclipse 3.2.2; java 1.5.0_11; </environment>
        <key id="12383298">DERBY-3231</key>
            <summary>Sorting on COUNT with OR and GROUP BY delivers wrong results.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mkhettry">Manish Khettry</assignee>
                                    <reporter username="peterb">Peter Balon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Nov 2007 10:16:26 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:09 +0000</updated>
                            <resolved>Thu, 24 Jan 2008 21:59:11 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12547634" author="bryanpendleton" created="Sun, 2 Dec 2007 15:17:35 +0000"  >&lt;p&gt;what sort of error do you get? The wrong number of rows? The wrong values in&lt;br/&gt;
the columns of those rows? The rows are in the wrong order? What results&lt;br/&gt;
did you expect to get, and how do they differ from the actual results?&lt;/p&gt;</comment>
                            <comment id="12547640" author="bryanpendleton" created="Sun, 2 Dec 2007 16:35:28 +0000"  >&lt;p&gt;I notice 3 interesting things when I run your query. First, here is the output I get:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select b, count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from yy where a=5 or a=2 group by b order by count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; asc;&lt;br/&gt;
B                     |2          |3&lt;br/&gt;
----------------------------------------------&lt;br/&gt;
3.0                   |4          |4&lt;br/&gt;
4.0                   |1          |1&lt;br/&gt;
7.0                   |1          |1&lt;/p&gt;

&lt;p&gt;Note that there are &lt;b&gt;three&lt;/b&gt; columns in the result set, not two. Since there were&lt;br/&gt;
only two columns in your select list, that seems wrong to me.&lt;/p&gt;

&lt;p&gt;Secondly, the output is ordered by column B, not by column count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, so that&lt;br/&gt;
seems wrong to me, too.&lt;/p&gt;

&lt;p&gt;Lastly,  I took a look at the query plan using -Dderby.language.logQueryPlan=true,&lt;br/&gt;
and I&apos;ve included it below. Note that there is only &lt;b&gt;one&lt;/b&gt; sort executed in this&lt;br/&gt;
query plan, although it seems that there should have been two sorts:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;one to order the rows by column &quot;b&quot; in order to perform the grouping.&lt;/li&gt;
	&lt;li&gt;one to take the grouped results and re-sort them by the count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; column&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It seems that the optimizer didn&apos;t understand that the desired ordering of&lt;br/&gt;
the results was different than the implied ordering of the GROUP BY column.&lt;/p&gt;

&lt;p&gt;Here is the query plan:&lt;/p&gt;

&lt;p&gt;2007-12-02 16:29:03.707 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 183), (SESSIONID = 0), se&lt;br/&gt;
lect b, count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from yy where a=5 or a=2 group by b order by count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; asc *****&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Project-Restrict ResultSet (5):&lt;br/&gt;
Number of opens = 1&lt;br/&gt;
Rows seen = 3&lt;br/&gt;
Rows filtered = 0&lt;br/&gt;
restriction = false&lt;br/&gt;
projection = true&lt;br/&gt;
    constructor time (milliseconds) = 0&lt;br/&gt;
    open time (milliseconds) = 0&lt;br/&gt;
    next time (milliseconds) = 0&lt;br/&gt;
    close time (milliseconds) = 0&lt;br/&gt;
    restriction time (milliseconds) = 0&lt;br/&gt;
    projection time (milliseconds) = 0&lt;br/&gt;
    optimizer estimated row count:            1.00&lt;br/&gt;
    optimizer estimated cost:           30.90&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Source result set:&lt;br/&gt;
    Grouped Aggregate ResultSet:&lt;br/&gt;
    Number of opens = 1&lt;br/&gt;
    Rows input = 6&lt;br/&gt;
    Has distinct aggregate = false&lt;br/&gt;
    In sorted order = false&lt;br/&gt;
    Sort information:&lt;br/&gt;
        Number of rows input=6&lt;br/&gt;
        Number of rows output=3&lt;br/&gt;
        Sort type=internal&lt;br/&gt;
        constructor time (milliseconds) = 0&lt;br/&gt;
        open time (milliseconds) = 0&lt;br/&gt;
        next time (milliseconds) = 0&lt;br/&gt;
        close time (milliseconds) = 0&lt;br/&gt;
        optimizer estimated row count:            1.20&lt;br/&gt;
        optimizer estimated cost:           30.90&lt;/p&gt;

&lt;p&gt;    Source result set:&lt;br/&gt;
        Project-Restrict ResultSet (4):&lt;br/&gt;
        Number of opens = 1&lt;br/&gt;
        Rows seen = 6&lt;br/&gt;
        Rows filtered = 0&lt;br/&gt;
        restriction = false&lt;br/&gt;
        projection = true&lt;br/&gt;
            constructor time (milliseconds) = 0&lt;br/&gt;
            open time (milliseconds) = 0&lt;br/&gt;
            next time (milliseconds) = 0&lt;br/&gt;
            close time (milliseconds) = 0&lt;br/&gt;
            restriction time (milliseconds) = 0&lt;br/&gt;
            projection time (milliseconds) = 0&lt;br/&gt;
            optimizer estimated row count:            1.20&lt;br/&gt;
            optimizer estimated cost:           30.90&lt;/p&gt;

&lt;p&gt;        Source result set:&lt;br/&gt;
            Project-Restrict ResultSet (3):&lt;br/&gt;
            Number of opens = 1&lt;br/&gt;
            Rows seen = 7&lt;br/&gt;
            Rows filtered = 1&lt;br/&gt;
            restriction = true&lt;br/&gt;
            projection = false&lt;br/&gt;
                constructor time (milliseconds) = 0&lt;br/&gt;
                open time (milliseconds) = 0&lt;br/&gt;
                next time (milliseconds) = 0&lt;br/&gt;
                close time (milliseconds) = 0&lt;br/&gt;
                restriction time (milliseconds) = 0&lt;br/&gt;
                projection time (milliseconds) = 0&lt;br/&gt;
                optimizer estimated row count:            1.20&lt;br/&gt;
                optimizer estimated cost:           30.90&lt;/p&gt;

&lt;p&gt;            Source result set:&lt;br/&gt;
                Table Scan ResultSet for YY at read committed isolation level us&lt;br/&gt;
ing instantaneous share row locking chosen by the optimizer&lt;br/&gt;
                Number of opens = 1&lt;br/&gt;
                Rows seen = 7&lt;br/&gt;
                Rows filtered = 0&lt;br/&gt;
                Fetch Size = 16&lt;br/&gt;
                    constructor time (milliseconds) = 0&lt;br/&gt;
                    open time (milliseconds) = 0&lt;br/&gt;
                    next time (milliseconds) = 0&lt;br/&gt;
                    close time (milliseconds) = 0&lt;br/&gt;
                    next time in milliseconds/row = 0&lt;/p&gt;

&lt;p&gt;                scan information:&lt;br/&gt;
                    Bit set of columns fetched=All&lt;br/&gt;
                    Number of columns fetched=2&lt;br/&gt;
                    Number of pages visited=1&lt;br/&gt;
                    Number of rows qualified=7&lt;br/&gt;
                    Number of rows visited=7&lt;br/&gt;
                    Scan type=heap&lt;br/&gt;
                    start position:&lt;br/&gt;
null                    stop position:&lt;br/&gt;
null                    qualifiers:&lt;br/&gt;
None&lt;br/&gt;
                    optimizer estimated row count:            1.20&lt;br/&gt;
                    optimizer estimated cost:           30.90&lt;/p&gt;</comment>
                            <comment id="12547756" author="peterb" created="Mon, 3 Dec 2007 08:08:43 +0000"  >&lt;p&gt;Hi Bryan,&lt;/p&gt;

&lt;p&gt;sorry that I did not made myself clear in the first post, but as you have pointed out, the sorting of the count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; column is not correct, which is the main problem here. The ASC and DESC is ignored.&lt;br/&gt;
The phantom column which appears as the last row is not an issue, but might become in an other application.&lt;br/&gt;
The wrong execution plan is propably caused by the wrong sorting issue.&lt;/p&gt;

&lt;p&gt;Expected results:&lt;/p&gt;

&lt;p&gt;select b, COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; AS &quot;COUNT_OF&quot;&lt;br/&gt;
from yy where a = 5 or a = 2&lt;br/&gt;
group by b&lt;br/&gt;
order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ASC&lt;/p&gt;

&lt;p&gt;B |COUNT_OF | 3&lt;br/&gt;
----------------------------------------------&lt;br/&gt;
4.0 |1 |1&lt;br/&gt;
7.0 |1 |1 &lt;br/&gt;
3.0 |4 |4&lt;/p&gt;

&lt;p&gt;select b, COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; AS &quot;COUNT_OF&quot;&lt;br/&gt;
from yy where a = 5 or a = 2&lt;br/&gt;
group by b&lt;br/&gt;
order by COUNT&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; DESC &lt;/p&gt;

&lt;p&gt;B |COUNT_OF | 3&lt;br/&gt;
----------------------------------------------&lt;br/&gt;
3.0 |4 |4&lt;br/&gt;
4.0 |1 |1&lt;br/&gt;
7.0 |1 |1 &lt;/p&gt;
</comment>
                            <comment id="12547979" author="army" created="Mon, 3 Dec 2007 20:27:28 +0000"  >&lt;p&gt;Looks like a regression caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-681&quot; title=&quot;Eliminate the parser&amp;#39;s rewriting of the abstract syntax tree for queries with GROUP BY and/or HAVING clauses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-681&quot;&gt;&lt;del&gt;DERBY-681&lt;/del&gt;&lt;/a&gt;, esp. svn # 516454:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=516454&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=rev&amp;amp;revision=516454&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12548551" author="mkhettry" created="Wed, 5 Dec 2007 06:47:11 +0000"  >&lt;p&gt;Interestingly if you leave out the where clause, the query works just fine.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select b, count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from yy  group by b order by count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; asc;&lt;br/&gt;
B                     |2&lt;br/&gt;
----------------------------------&lt;br/&gt;
4.0                   |1&lt;br/&gt;
7.0                   |2&lt;br/&gt;
3.0                   |4&lt;/p&gt;
</comment>
                            <comment id="12548557" author="mkhettry" created="Wed, 5 Dec 2007 06:58:29 +0000"  >&lt;p&gt;A.B, did this query work before svn revision 516454 and fail after this commit?&lt;/p&gt;</comment>
                            <comment id="12548715" author="army" created="Wed, 5 Dec 2007 16:24:17 +0000"  >&lt;p&gt;&amp;gt; A.B, did this query work before svn revision 516454 and fail after this commit?&lt;/p&gt;

&lt;p&gt;Yes, that is what I observed when I ran the test yesterday.  If you are seeing different results, please let me know and I can retry...&lt;/p&gt;</comment>
                            <comment id="12550273" author="mkhettry" created="Tue, 11 Dec 2007 02:19:44 +0000"  >&lt;p&gt;The problem was missing methods isConstant and isConstantExpression for AggregateNodes. The super class implementation would return true causing Derby to eliminate the order by.&lt;/p&gt;

&lt;p&gt;isConstantExpression is used to eliminate sorts in queries like this:&lt;/p&gt;

&lt;p&gt;select c1, c2&lt;br/&gt;
from t&lt;br/&gt;
where c1=2&lt;br/&gt;
order by c1;&lt;/p&gt;

&lt;p&gt;In this case, we have an aggregate as the sort column and this sort of optimization will apply to queries like this:&lt;/p&gt;

&lt;p&gt;select c1, count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
from t&lt;br/&gt;
group by c1&lt;br/&gt;
having count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; = 2&lt;br/&gt;
order by count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;/p&gt;

&lt;p&gt;To remove constant sort columns the code in SelectNode#preProcess (around line 915) will have to be modified to consider having clauses as well.  &lt;/p&gt;

&lt;p&gt;For now, I return false for both methods-- it is more important to get correct results for this query first.&lt;/p&gt;</comment>
                            <comment id="12550551" author="army" created="Tue, 11 Dec 2007 16:29:10 +0000"  >&lt;p&gt;&amp;gt; The problem was missing methods isConstant and isConstantExpression for&lt;br/&gt;
&amp;gt; AggregateNodes. The super class implementation would return true causing&lt;br/&gt;
&amp;gt; Derby to eliminate the order by. &lt;/p&gt;

&lt;p&gt;Thank you for looking into this, Manish!  Two follow-up questions based on what you have found, just for my own understanding:&lt;/p&gt;

&lt;p&gt;  1) If possible, can you explain what part of the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-681&quot; title=&quot;Eliminate the parser&amp;#39;s rewriting of the abstract syntax tree for queries with GROUP BY and/or HAVING clauses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-681&quot;&gt;&lt;del&gt;DERBY-681&lt;/del&gt;&lt;/a&gt; changes led to this behavior, since the query returned correct results prior to the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-681&quot; title=&quot;Eliminate the parser&amp;#39;s rewriting of the abstract syntax tree for queries with GROUP BY and/or HAVING clauses&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-681&quot;&gt;&lt;del&gt;DERBY-681&lt;/del&gt;&lt;/a&gt; fix?  I&apos;m just curious as to why the missing methods for AggregateNode were not a problem previously.&lt;/p&gt;

&lt;p&gt;  2) Any idea why removing the &quot;WHERE&quot; clause from the original query causes it to return correct results, even without the order_by_bug.diff patch, as stated in your December 4th comment?  I admit I haven&apos;t done any tracing myself, but from your previous comment I can&apos;t quite see the connection between the WHERE clause and the ORDER BY, since the WHERE clause does not reference the aggregate &quot;count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&quot;.  Apologies if I&apos;m missing something obvious...&lt;/p&gt;

&lt;p&gt;Thanks again for your willingness to investigate this further.  Have you had a chance to run any of the regression tests with your patch applied?&lt;/p&gt;</comment>
                            <comment id="12550648" author="mkhettry" created="Tue, 11 Dec 2007 17:29:57 +0000"  >&lt;p&gt;I ran the junit lang suite.&lt;/p&gt;

&lt;p&gt;1. Prior to 681, the query would get rewritten with a subselect so the aggregate node in the order by would be transformed to a column reference.&lt;br/&gt;
2. The optimization is only done if whereClause != null (SelectNode around line 910 or so)&lt;/p&gt;
</comment>
                            <comment id="12551038" author="army" created="Wed, 12 Dec 2007 17:25:04 +0000"  >&lt;p&gt;Thank you for the reply, Manish.  I&apos;m running the full regression tests with this patch to make sure that everything is okay; I&apos;ll report back with the results later.&lt;/p&gt;

&lt;p&gt;One thing I did notice is that this change makes it so that ALL aggregate nodes now return &quot;false&quot; for constantExpression(PredicateList).  Is that perhaps going too far?  For example, in the queries:&lt;/p&gt;

&lt;p&gt;  select b, max(a) from yy where a=5 group by b order by max(a) asc;&lt;br/&gt;
  select b, max(a) from yy where a=5 group by b order by max(a) desc;&lt;/p&gt;

&lt;p&gt;the value &quot;MAX(A)&quot; is in fact constant, and will be recognized as such prior to your patch, thus avoiding the need to actually sort the results for &quot;ORDER BY&quot;.  But with the patch applied we&apos;ll end up sorting the results unnecessarily.&lt;/p&gt;

&lt;p&gt;I definitely agree with your statement that &quot;it is more important to get correct results ... first&quot;, but I wonder if it might be worth it to try to preserve the optimization when possible?  I can&apos;t imagine there are many people out there who would issue an ORDER BY on a constant MAX aggregate, so maybe this isn&apos;t worth addressing; but executing the above two queries before and after your patch does show that, with the patch, we are doing an extra unnecessary sort.  So if it&apos;s not too difficult, I think it would be nice to preserve the &quot;constant&quot; nature of aggregates like MAX and MIN...&lt;/p&gt;

&lt;p&gt;Any thoughts one way or the other?&lt;/p&gt;</comment>
                            <comment id="12551194" author="mkhettry" created="Thu, 13 Dec 2007 02:21:50 +0000"  >&lt;p&gt;Well, I thought it was better to fix the wrong results and look at optimizations later on as a separate bug. I pointed out another kind of query in an earlier comment where we could do this &quot;sort avoidance&quot; thing.&lt;/p&gt;

&lt;p&gt;A slightly more abstract question-- how important is it for Derby to do optimizations like this? The downsides are code complexity and unanticipated bugs like this one while the benefits are restricted to queries, which as you put it, &quot;you can&apos;t imagine too many people writing&quot;? &lt;/p&gt;</comment>
                            <comment id="12551197" author="bryanpendleton" created="Thu, 13 Dec 2007 03:06:37 +0000"  >&lt;p&gt;Hi Manish, thanks very much for working on this problem.&lt;/p&gt;

&lt;p&gt;Did you happen to investigate the &quot;phantom column&quot; behavior that I saw in IJ?&lt;br/&gt;
As Peter noted, the extra column did not appear to cause any serious problems,&lt;br/&gt;
but I&apos;m wondering why it appeared.&lt;/p&gt;

&lt;p&gt;I agree with your assessment that the highest priority is for the query to&lt;br/&gt;
return the right results.&lt;/p&gt;

&lt;p&gt;But I also think it&apos;s hard to predict what sort of odd queries the DBMS will see;&lt;br/&gt;
particularly in this age of persistence layers and code generators, the strangest&lt;br/&gt;
sort of SQL seems to get generated and thrown at the system. Given that&lt;br/&gt;
the optimizer&apos;s job is to optimize, I think that we should pay attention to every&lt;br/&gt;
situation where there is a possible optimization.&lt;/p&gt;

&lt;p&gt;So, as a possible proposal, could we:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;include the various &quot;unusual&quot; queries that you and Army came up with as&lt;br/&gt;
   test cases in the regression test suite, so that at least we continue to&lt;br/&gt;
   increase the overall population of &quot;interesting&quot; queries in our test scripts, and&lt;/li&gt;
	&lt;li&gt;file a separate JIRA issue (or perhaps several) noting the various cases&lt;br/&gt;
   of potential further optimization, so that we can pursue these later as time permits?&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12551206" author="mkhettry" created="Thu, 13 Dec 2007 03:54:54 +0000"  >&lt;p&gt;I did not look into the &quot;phantom column&quot; behavior; just getting rid of the faulty logic which assumed the sort column was a constant expression did the trick. &lt;/p&gt;

&lt;p&gt;+1 on your proposal.&lt;/p&gt;

</comment>
                            <comment id="12551551" author="army" created="Thu, 13 Dec 2007 16:46:08 +0000"  >&lt;p&gt;manish&amp;gt; I thought it was better to fix the wrong results and look at optimizations later on as a separate bug. &lt;/p&gt;

&lt;p&gt;bryanp&amp;gt; I agree with your assessment that the highest priority is for the query to&lt;br/&gt;
bryanp&amp;gt; return the right results.&lt;/p&gt;

&lt;p&gt;Okay, so it looks like there is agreement here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I just wanted to bring up the fact that, in getting one query to return correct results, we&apos;re effectively &lt;b&gt;disabling&lt;/b&gt; an &lt;b&gt;existing&lt;/b&gt; optimization for another query that currently works correctly.  To say &quot;get it working, then improve it&quot; is perfectly okay; to say &quot;get it working but regress other optimizations, then fix those other optimizations later&quot; is also probably okay, but perhaps slightly more risky as a general principle.&lt;/p&gt;

&lt;p&gt;In any event, I&apos;m +1 to Bryan&apos;s proposal given the apparent unlikelihood of the to-be-disabled optimization (ex. for MAX()) showing up in a user&apos;s environment.&lt;/p&gt;

&lt;p&gt;manish&amp;gt; +1 on your proposal.&lt;/p&gt;

&lt;p&gt;Manish, are you volunteering to implement the proposal, i.e. to 1) add more test cases to the regression suite, and 2) file another Jira?&lt;/p&gt;

&lt;p&gt;My derbyall and suites.All with the patch ran cleanly (only failure was the known failure of outerjoin.sql, which is unrelated and has since been fixed).  So I can commit order_by_bug.diff now and the additional test cases can perhaps be added as a separate patch/commit.  Does that sound okay?&lt;/p&gt;</comment>
                            <comment id="12551557" author="army" created="Thu, 13 Dec 2007 16:57:40 +0000"  >&lt;p&gt;I added a single test case to the original patch to also check that a sort in ascending order works (the original patch only checked desc), so I&apos;m attaching the patch with that change as d3231_v2.patch.&lt;/p&gt;

&lt;p&gt;Committed with svn # 603954:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/viewvc?rev=603954&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=603954&amp;amp;view=rev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks again to Manish for picking this one up and offering a solution in such quick time.&lt;/p&gt;</comment>
                            <comment id="12551571" author="mikem" created="Thu, 13 Dec 2007 18:47:45 +0000"  >&lt;p&gt;manish have you had a chance to look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3257&quot; title=&quot;SELECT with HAVING clause containing OR conditional incorrectly return 1 row - should return 2 rows - works correctly with 10.2 DB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3257&quot;&gt;&lt;del&gt;DERBY-3257&lt;/del&gt;&lt;/a&gt;, it is another query which army tested  before &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-691&quot; title=&quot;committed deleted row space reclamation may be missed if delete is actually an aborted insert.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-691&quot;&gt;&lt;del&gt;DERBY-691&lt;/del&gt;&lt;/a&gt; and stopped after &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-691&quot; title=&quot;committed deleted row space reclamation may be missed if delete is actually an aborted insert.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-691&quot;&gt;&lt;del&gt;DERBY-691&lt;/del&gt;&lt;/a&gt;.  Looks like mamta checked it against this fix and still broken.  Any insight whether the issue might be similar to what you addressed in this issue?&lt;/p&gt;</comment>
                            <comment id="12551905" author="mkhettry" created="Fri, 14 Dec 2007 19:18:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3276&quot; title=&quot;Order by on aggregate always does a sort even if the sort is not needed.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3276&quot;&gt;DERBY-3276&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Mike, I&apos;ll take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3257&quot; title=&quot;SELECT with HAVING clause containing OR conditional incorrectly return 1 row - should return 2 rows - works correctly with 10.2 DB&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3257&quot;&gt;&lt;del&gt;DERBY-3257&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="12555376" author="mikem" created="Wed, 2 Jan 2008 19:44:47 +0000"  >&lt;p&gt;thanks manish, i have been out on vacation.  Let me know if there is anything I can do to help on this issue.  Don&apos;t really know much about the code but am happy to run/build test cases and try against different versions of the code.&lt;/p&gt;</comment>
                            <comment id="12560087" author="kmarsden" created="Thu, 17 Jan 2008 21:30:25 +0000"  >&lt;p&gt;Can this issue be marked resolved? &lt;/p&gt;</comment>
                            <comment id="12562167" author="kmarsden" created="Thu, 24 Jan 2008 18:55:26 +0000"  >&lt;p&gt;I think I&apos;ll port this to 10.3 since it is a regression fix.  Please let me know if you see any problem with porting it to 10.3.&lt;/p&gt;</comment>
                            <comment id="12562241" author="kmarsden" created="Thu, 24 Jan 2008 21:59:11 +0000"  >&lt;p&gt;Marking this issue resolved. Please reopen if there is still more work to do. It looked fixed as far as I could tell.  I ported the fix to 10.3 with revison 615042.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12354628">DERBY-2034</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12325311">DERBY-681</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12371604" name="d3231_v2.patch" size="1913" author="army" created="Thu, 13 Dec 2007 16:57:39 +0000"/>
                            <attachment id="12371401" name="order_by_bug.diff.txt" size="1571" author="mkhettry" created="Tue, 11 Dec 2007 02:14:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 2 Dec 2007 15:17:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23507</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lvr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37363</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>