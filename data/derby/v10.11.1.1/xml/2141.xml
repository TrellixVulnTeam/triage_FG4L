<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:24:17 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2141/DERBY-2141.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2141] BlobClob4BlobTest.testPositionBlob() fails with NullPointerException</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2141</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Seen in the nightly regression tests:&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/481811-org.apache.derbyTesting.functionTests.suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/481811-org.apache.derbyTesting.functionTests.suites.All_diff.txt&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/480626-org.apache.derbyTesting.functionTests.suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/480626-org.apache.derbyTesting.functionTests.suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;</description>
                <environment>Java SE 6, Java SE 5.0 (less frequently). Linux and Solaris.</environment>
        <key id="12357596">DERBY-2141</key>
            <summary>BlobClob4BlobTest.testPositionBlob() fails with NullPointerException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Dec 2006 10:50:21 +0000</created>
                <updated>Mon, 17 Jun 2013 10:27:18 +0100</updated>
                            <resolved>Wed, 9 Jan 2013 20:57:04 +0000</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.1.3.3</fixVersion>
                    <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12468594" author="knutanders" created="Tue, 30 Jan 2007 12:35:41 +0000"  >&lt;p&gt;This only seems to happen with jdk6. It also happens with other test methods, for instance testPositionBytes(). &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/498143-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/498143-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12468595" author="knutanders" created="Tue, 30 Jan 2007 12:46:31 +0000"  >&lt;p&gt;When this error happens, we don&apos;t get the stack trace of the original exception. Instead, we get something like:&lt;/p&gt;

&lt;p&gt;Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
	... 44 more&lt;/p&gt;

&lt;p&gt;The attached patch makes the SQLExceptionFactory for the JDBC 4.0 driver preserve the stack trace of the original exception.&lt;/p&gt;</comment>
                            <comment id="12468597" author="knutanders" created="Tue, 30 Jan 2007 12:53:21 +0000"  >&lt;p&gt;Committed stacktrace.diff with revision 501392 so we can see where the NullPointerException is thrown the next time it happens.&lt;/p&gt;</comment>
                            <comment id="12469228" author="knutanders" created="Wed, 31 Jan 2007 22:29:04 +0000"  >&lt;p&gt;And now we have a stack trace. &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/501472-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.6/testing/testlog/lin/501472-suitesAll_diff.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caused by: java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseContainerHandle.close(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseContainerHandle.update(Unknown Source)&lt;br/&gt;
	at java.util.Observable.notifyObservers(Observable.java:142)&lt;br/&gt;
	at org.apache.derby.iapi.store.raw.xact.RawTransaction.notifyObservers(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.dropContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.dropContainer(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.heap.Heap.drop(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.access.RAMTransaction.dropConglomerate(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantAction(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	... 36 more&lt;/p&gt;</comment>
                            <comment id="12469230" author="knutanders" created="Wed, 31 Jan 2007 22:32:21 +0000"  >&lt;p&gt;The stack trace is identical to the first error in &lt;a href=&quot;http://dbtg.thresher.com/derby/test/Daily/jvm1.5/testing/testlog/sles/490538-suitesAll_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/Daily/jvm1.5/testing/testlog/sles/490538-suitesAll_diff.txt&lt;/a&gt; (error in testClobFinalizer()), so the problem is not limited to JDK6.&lt;/p&gt;</comment>
                            <comment id="12471227" author="knutanders" created="Thu, 8 Feb 2007 08:47:51 +0000"  >&lt;p&gt;The tinderbox showed another NullPointerException in BlobClob4BlobTest, but this time in client/server mode:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-504740.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.thresher.com/derby/test/tinderbox_trunk16/jvm1.6/testing/Limited/testSummary-504740.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) testBlobAfterClosingConnection(org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseJDBCTestCase.rollback(BaseJDBCTestCase.java:172)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testBlobAfterClosingConnection(BlobClob4BlobTest.java:2278)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:76)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
Caused by: org.apache.derby.client.am.SqlException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.lang.NullPointerExceptionXJ001.U&lt;br/&gt;
	at org.apache.derby.client.am.Connection.completeSqlca(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.parseRDBRLLBCKreply(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnectionReply.readLocalRollback(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.ConnectionReply.readLocalRollback(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.net.NetConnection.readLocalRollback_(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Connection.readRollback(Unknown Source)&lt;br/&gt;
	at org.apache.derby.client.am.Connection.flowRollback(Unknown Source)&lt;br/&gt;
	... 43 more&lt;/p&gt;</comment>
                            <comment id="12493928" author="knutanders" created="Sun, 6 May 2007 15:37:11 +0100"  >&lt;p&gt;I think these errors are caused by the lack of synchronization between the finalization thread and the user thread. For LOBs that are not materialized in memory, the finalizers of EmbedBlob and EmbedClob call OverflowInputStream.closeStream() which again calls BaseContainerHandle.close(). Since the finalization thread doesn&apos;t synchronize on the connection synchronization object, the user thread and the finalization thread might run BaseContainerHandle.close() concurrently on the same object.&lt;/p&gt;</comment>
                            <comment id="12493931" author="mikem" created="Sun, 6 May 2007 16:13:16 +0100"  >&lt;p&gt;I don&apos;t know if this is the bug, but I think you are right about OverflowInputStream.  Most of store doesn&apos;t require synchronization as it assumes single thread access to it&apos;s objects as controlled by the derby&apos;s jdbc level which only allows one thread into a given&lt;br/&gt;
xact at the same time.&lt;/p&gt;

&lt;p&gt;But, OverflowInputStream is handed back to the caller and then can be accessed outside of jdbc.  Does jdbc say anything about&lt;br/&gt;
callers responsibility regarding multi-thread access to a stream handed back through jdbc?  Seems safer if possible to just&lt;br/&gt;
correctly synchronize OverflowInputStream, but this will add some overhead to the streams coming out of the server.&lt;/p&gt;</comment>
                            <comment id="12493932" author="mikem" created="Sun, 6 May 2007 16:31:26 +0100"  >&lt;p&gt;before adding the synchonization, what effect will that have on possible finalizer/synchronization deadlock?  &lt;/p&gt;</comment>
                            <comment id="12493933" author="mikem" created="Sun, 6 May 2007 16:34:15 +0100"  >&lt;p&gt;I am raising priority of this issue.  Anything that causes 58 errors in the nightly regression test may cause problems for&lt;br/&gt;
all developers on the project.  At the very least lost time in trying to figure out if they caused the issue or not.&lt;/p&gt;</comment>
                            <comment id="12493935" author="knutanders" created="Sun, 6 May 2007 16:42:37 +0100"  >&lt;p&gt;I don&apos;t think synchronizing on the OverflowInputStream solves this problem since only one of the threads access the BaseContainerHandle through the stream. To me it seems like this is what happens (T1 == main thread, T2 == finalization):&lt;/p&gt;

&lt;p&gt;  T1_1: An unmaterialized lob object is obtained by the test method.&lt;br/&gt;
  T1_2: The test method returns, and the lob is no longer referenced and is free to be garbage collected.&lt;br/&gt;
  T1_3: tearDown() calls rollback() which drops the table containing the lob and and the base container handle is notified and closed.&lt;br/&gt;
  T2_1: &lt;span class=&quot;error&quot;&gt;&amp;#91;BC&amp;#93;&lt;/span&gt;lob.finalize() calls OverflowInputStream.closeStream() which calls BaseContainerHandle.close().&lt;/p&gt;</comment>
                            <comment id="12493936" author="knutanders" created="Sun, 6 May 2007 16:48:40 +0100"  >&lt;p&gt;&amp;gt; before adding the synchonization, what effect will that have on possible finalizer/synchronization deadlock?&lt;/p&gt;

&lt;p&gt;Depends on what we synchronize on. If we synchronize on the connection sync object, it could definitely lead to deadlocks since we sometimes call System.runFinalization() while holding the monitor on the object. Having a synchronized flag or something locally in BaseContainerHandle that only prevented threads to enter close() concurrently would be safe, I think.&lt;/p&gt;</comment>
                            <comment id="12493937" author="knutanders" created="Sun, 6 May 2007 17:26:57 +0100"  >&lt;p&gt;BaseContainerHandle.close() already has some synchronized calls.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;informObservers() calls the synchronized methods countObservers(), setChanged() and notifyObservers() which are inherited from java.util.Observable.&lt;/li&gt;
	&lt;li&gt;getLockingPolicy().unlockContainer(xact, this) will synchronize on objects in the lock manager.&lt;/li&gt;
	&lt;li&gt;xact.deleteObserver(this) is actually a synchronized call to Observable.deleteObserver().&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So perhaps putting this code first in close() wouldn&apos;t be too expensive in comparison:&lt;/p&gt;

&lt;p&gt;  synchronized (this) &lt;/p&gt;
{
    if (!active) return;
    active = false;
  }

&lt;p&gt;It would at least not introduce a risk of deadlock since the method already (implicitly) synchronizes on this.&lt;/p&gt;</comment>
                            <comment id="12494810" author="mikem" created="Thu, 10 May 2007 19:14:19 +0100"  >&lt;p&gt;As you point out, performance of close may not be much of an issue.  I was taking the leap that there may be more problems&lt;br/&gt;
with OverflowInputStream than close.  I am just not sure if it is our job or the calling code to fix them.  Should we prevent a &lt;br/&gt;
client jdbc app from calling any interface on a single OverflowInputStream from 2 threads at the same time (for example read)?  &lt;/p&gt;

&lt;p&gt;Also  I don&apos;t understand the issue enough, does this fix have to happen in BaseContainerHandle?  It seems reasonable to add&lt;br/&gt;
extra synchronization to OverflowInputStream as we hand that out of the jdbc layer to direct callers, but if we start changing  the&lt;br/&gt;
classes only indirectly called I think we may not know where to stop.&lt;/p&gt;</comment>
                            <comment id="12494823" author="mikem" created="Thu, 10 May 2007 20:40:53 +0100"  >&lt;p&gt;Anyone see a problem with just syncronizing the BaseContainerHandle.close() method.  I don&apos;t think the suggested code with active works as it looks like there is a path through the code where active is false but we still need to do some work (the open container for lock only path still needs to unlock &lt;/p&gt;</comment>
                            <comment id="12494954" author="mikem" created="Fri, 11 May 2007 05:47:43 +0100"  >&lt;p&gt;I am hoping the following checkin fixes this issue.  I was not actually able to reproduce the timing on my single processor machine.&lt;br/&gt;
If anyone else see&apos;s the problem in a codeline build after this checkin please go ahead and reopen the issue.&lt;/p&gt;

&lt;p&gt;description:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2141&quot; title=&quot;BlobClob4BlobTest.testPositionBlob() fails with NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2141&quot;&gt;&lt;del&gt;DERBY-2141&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Made BaseContainerHandle.close() synchronized as it may be called concurrently&lt;br/&gt;
by a stream passed outside the store and an abort triggered concurrently.&lt;br/&gt;
Making it synchronized will allow the first close to do the proper work and&lt;br/&gt;
the subsequent calls will just return with no work to do.&lt;br/&gt;
Also made some of the fields private to convince myself no-one outside the&lt;br/&gt;
class was counting on something being changed during close.&lt;/p&gt;

&lt;p&gt;Actual commit:&lt;br/&gt;
m1_ibm15:38&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\store\raw\data\BaseContainerHandle.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\store\raw\data\D_BaseContainerHandle.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 537091.&lt;/p&gt;</comment>
                            <comment id="12590634" author="mkutty" created="Fri, 18 Apr 2008 23:37:29 +0100"  >&lt;p&gt;Found this error with weme6.1 on trunk&lt;br/&gt;
Here is the stack trace&lt;/p&gt;

&lt;p&gt;testRetrieveMoreThan32KLobs(sts.tests.jdbcapi.BlobClob4BlobTest)java.sql.SQLException: Java exception: &apos;: java.lang.NullPointerException&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Soorg.apache.derbyTesting.functionTeurce)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testRetrieveMoreThan32KLobs(BlobClob4BlobTest.java:3424)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:103)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
Caused by: java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testRetrieveMoreThan32KLobs(BlobClob4BlobTest.java:3424)&lt;br/&gt;
	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;br/&gt;
	... 30 more&lt;/p&gt;</comment>
                            <comment id="12590725" author="knutanders" created="Sat, 19 Apr 2008 23:07:10 +0100"  >&lt;p&gt;That&apos;s a different NPE than the one reported in this issue, so I suggest that a new bug report is filed. The NPE reported here was thrown by BaseContainerHandle.close(), whereas the new NPE is thrown by EmbedConnection.clearLOBMapping().&lt;/p&gt;</comment>
                            <comment id="12722396" author="kmarsden" created="Sun, 21 Jun 2009 19:12:23 +0100"  >&lt;p&gt;I just saw the NPE Manjula described (in clearLOBMapping) on 10.5 with weme6.1.  I am wondering if there was ever an issue filed.  I don&apos;t see one immediately on searching Jira.  Here is the trace from derby.log:&lt;/p&gt;

&lt;p&gt;), (DATABASE = wombat), (DRDAID = null), Cleanup action starting&lt;/p&gt;

&lt;p&gt;2009-06-20 03:21:13.484 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 351920), (SESSIONID = 117), (DATABASE = wombat), (DRDAID = null), Failed Statement is: null&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testRetrieveMoreThan32KLobs(BlobClob4BlobTest.java:3498)&lt;/p&gt;

&lt;p&gt;	at java.lang.reflect.AccessibleObject.invokeV(AccessibleObject.java:205)&lt;/p&gt;

&lt;p&gt;	at java.lang.reflect.Method.invoke(Method.java:253)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:106)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestResult.run(TestResult.java:109)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestCase.run(TestCase.java:118)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;/p&gt;

&lt;p&gt;	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;/p&gt;

&lt;p&gt;	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;/p&gt;

&lt;p&gt;	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;/p&gt;

&lt;p&gt;	at junit.textui.TestRunner.doRun(TestRunner.java:116)&lt;/p&gt;

&lt;p&gt;	at junit.textui.TestRunner.start(TestRunner.java:172)&lt;/p&gt;

&lt;p&gt;	at junit.textui.TestRunner.main(TestRunner.java:138)&lt;/p&gt;</comment>
                            <comment id="12722397" author="knutanders" created="Sun, 21 Jun 2009 19:22:35 +0100"  >&lt;p&gt;That exception looks similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4261&quot; title=&quot;testImportDataExportQueryLobsInExtFile fails with NullPointerException with weme6.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4261&quot;&gt;&lt;del&gt;DERBY-4261&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13544591" author="kmarsden" created="Sat, 5 Jan 2013 05:48:55 +0000"  >&lt;p&gt;Reopen for 10.1 backport&lt;/p&gt;</comment>
                            <comment id="13546290" author="kmarsden" created="Mon, 7 Jan 2013 21:37:33 +0000"  >&lt;p&gt;Date: Mon Jan  7 17:24:11 2013&lt;br/&gt;
New Revision: 1429912&lt;br/&gt;
Fixed in 10.1 and 10.2&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=1429912&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=1429912&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2141&quot; title=&quot;BlobClob4BlobTest.testPositionBlob() fails with NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2141&quot;&gt;&lt;del&gt;DERBY-2141&lt;/del&gt;&lt;/a&gt;  BlobClob4BlobTest.testPositionBlob() fails with NullPointerException&lt;/p&gt;



&lt;p&gt;Modified:&lt;br/&gt;
    db/derby/code/branches/10.1/   (props changed)&lt;br/&gt;
    db/derby/code/branches/10.1/java/engine/org/apache/derby/impl/store/raw/data/BaseContainerHandle.java&lt;br/&gt;
    db/derby/code/branches/10.1/java/engine/org/apache/derby/impl/store/raw/data/D_BaseContainerHandle.java&lt;/p&gt;


&lt;p&gt;Date: Mon Jan  7 21:28:03 2013&lt;br/&gt;
New Revision: 1430021&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=1430021&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=1430021&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2141&quot; title=&quot;BlobClob4BlobTest.testPositionBlob() fails with NullPointerException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2141&quot;&gt;&lt;del&gt;DERBY-2141&lt;/del&gt;&lt;/a&gt;  BlobClob4BlobTest.testPositionBlob() fails with NullPointerException&lt;/p&gt;


&lt;p&gt;Modified:&lt;br/&gt;
    db/derby/code/branches/10.2/   (props changed)&lt;br/&gt;
    db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/data/BaseContainerHandle.java&lt;br/&gt;
    db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/data/D_BaseContainerHandle.java&lt;/p&gt;
</comment>
                            <comment id="13548992" author="kmarsden" created="Wed, 9 Jan 2013 20:57:05 +0000"  >&lt;p&gt;Merged to 10.1 and 10.2&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12393006">DERBY-3591</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12349912" name="stacktrace.diff" size="1276" author="knutanders" created="Tue, 30 Jan 2007 12:46:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 6 May 2007 15:13:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22907</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0w9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39046</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>