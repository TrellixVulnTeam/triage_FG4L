<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:38 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2905/DERBY-2905.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2905] Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2905</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;After a shutdown of the embedded driver the AutoloadDriver is not unregistered from DriverManager. However it does not support any future loading of connections so it has no value in remaining registered. Since the DriverManager class will remain forever, this means the Derby code will remain forever in the JVM, even if Derby was loaded by a separate class loader.&lt;/p&gt;

&lt;p&gt;Regression from 10.1 since before the AutoloadedDriver the internal driver did unregister itself from the DriverManager on a shutdown.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12373115">DERBY-2905</key>
            <summary>Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lilywei">Lily Wei</assignee>
                                    <reporter username="djd">Daniel John Debrunner</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Jul 2007 23:31:20 +0100</created>
                <updated>Wed, 3 Sep 2014 09:31:33 +0100</updated>
                            <resolved>Tue, 15 Feb 2011 20:51:27 +0000</resolved>
                                    <version>10.2.2.0</version>
                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.8.1.2</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12516462" author="kmarsden" created="Mon, 30 Jul 2007 19:15:43 +0100"  >&lt;p&gt;marking urgent since this is a regression.&lt;/p&gt;</comment>
                            <comment id="12516463" author="rhillegas" created="Mon, 30 Jul 2007 19:22:43 +0100"  >&lt;p&gt;Reverting this issue to normal urgency. This issue occurs in 10.2. I do not believe that this old issue should block the incremental release of other quality improvements.&lt;/p&gt;</comment>
                            <comment id="12518931" author="moazeni" created="Fri, 10 Aug 2007 08:18:38 +0100"  >&lt;p&gt;Attaching a reproducible test case with this issue.&lt;br/&gt;
As mentioned in the description, the AutoloadedDriver is not unregistered &lt;br/&gt;
from the DriverManager. The attached test case shows the behavior as &lt;br/&gt;
follows:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver before DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Testing with org.apache.derby.jdbc.EmbeddedDriver&lt;/li&gt;
	&lt;li&gt;Getting Registered Drivers&lt;br/&gt;
        sun.jdbc.odbc.JdbcOdbcDriver&lt;br/&gt;
        org.apache.derby.jdbc.AutoloadedDriver&lt;br/&gt;
        org.apache.derby.jdbc.ClientDriver&lt;/li&gt;
	&lt;li&gt;Shutting Down Database&lt;br/&gt;
        Database shut down normally&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver after DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Getting Registered Drivers&lt;br/&gt;
        sun.jdbc.odbc.JdbcOdbcDriver&lt;br/&gt;
        org.apache.derby.jdbc.AutoloadedDriver&lt;br/&gt;
        org.apache.derby.jdbc.ClientDriver&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;in 10.1, the above test case shows Driver30 successfully unregistering after &lt;br/&gt;
database shutdown:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver before DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Testing with org.apache.derby.jdbc.EmbeddedDriver&lt;/li&gt;
	&lt;li&gt;Getting Registered Drivers&lt;br/&gt;
        org.apache.derby.jdbc.Driver30&lt;/li&gt;
	&lt;li&gt;Shutting Down Database&lt;br/&gt;
        Database shut down normally&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver after DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Getting Registered Drivers&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12518937" author="moazeni" created="Fri, 10 Aug 2007 08:54:46 +0100"  >&lt;p&gt;Attaching an interim patch for this issue.&lt;br/&gt;
The AutoloadedDriver is now unregistering itself from DriverManager&lt;br/&gt;
as follows:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver before DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Testing with org.apache.derby.jdbc.EmbeddedDriver&lt;/li&gt;
	&lt;li&gt;Getting Registered Drivers&lt;br/&gt;
        sun.jdbc.odbc.JdbcOdbcDriver&lt;br/&gt;
        org.apache.derby.jdbc.ClientDriver&lt;br/&gt;
        org.apache.derby.jdbc.AutoloadedDriver&lt;/li&gt;
	&lt;li&gt;Shutting Down Database&lt;br/&gt;
        Database shut down normally&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Check for Autoloaded driver after DB shutdown&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Getting Registered Drivers&lt;br/&gt;
        sun.jdbc.odbc.JdbcOdbcDriver&lt;br/&gt;
        org.apache.derby.jdbc.ClientDriver&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I appreciate your comments/review.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Ramin&lt;/p&gt;</comment>
                            <comment id="12519054" author="djd" created="Fri, 10 Aug 2007 17:21:51 +0100"  >&lt;p&gt;Patch looks good. Adding a test case to jdbcapi.AutoloadTest would be good.&lt;/p&gt;</comment>
                            <comment id="12520282" author="moazeni" created="Thu, 16 Aug 2007 17:03:51 +0100"  >&lt;p&gt;Thanks dan for your review.&lt;br/&gt;
I am attaching another patch for this issue. I appreciate&lt;br/&gt;
your comments/review.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Ramin&lt;/p&gt;</comment>
                            <comment id="12520295" author="mamtas" created="Thu, 16 Aug 2007 17:35:24 +0100"  >&lt;p&gt;Ramin, your patch looks good. I noticed though that for the new entry (JDBC_DRIVER_UNREGISTER_ERROR) in MessageId.java, there was no corresponding error text message entry in org.apache.derby.loc:messages.xml&lt;/p&gt;</comment>
                            <comment id="12520385" author="djd" created="Thu, 16 Aug 2007 22:54:56 +0100"  >&lt;p&gt;The first patch was simple, just adding a deregister of the driver.&lt;/p&gt;

&lt;p&gt;The new patch (v1) does a lot more, can you please explain what is going on?&lt;/p&gt;</comment>
                            <comment id="12520410" author="moazeni" created="Fri, 17 Aug 2007 00:27:12 +0100"  >&lt;p&gt;Hello Dan,&lt;/p&gt;

&lt;p&gt;Yes, the v0 patch was simpler however, I noticed that it has some problems.&lt;br/&gt;
Please consider the following scenario:&lt;br/&gt;
1) The DB is shut down and therefore, the Autoloaded driver is&lt;br/&gt;
unregistered.&lt;br/&gt;
2) The user tries to explicitly load the Embedded driver using&lt;br/&gt;
Class.forName(..).newInstance()&lt;/p&gt;

&lt;p&gt;With v0 patch, the user couldn&apos;t load the Embedded driver explicitly after&lt;br/&gt;
the DB shutdown and I was getting the &quot;No Suitable Driver&quot; error.&lt;/p&gt;

&lt;p&gt;I think the problem was that the DriverManager.registerDriver() was being&lt;br/&gt;
called in a static block and therefore it was called only once to load the&lt;br/&gt;
AutoloadedDriver. With the changes in v1 patch, the user can explicitly load the Embedded&lt;br/&gt;
driver after the DB shutdown and after the Autoloaded driver is being&lt;br/&gt;
unregistered. The AutoloadedDriver.registerDriverModule(...) takes care of registering the&lt;br/&gt;
driver when the user is explicitly loading the Embedded driver.&lt;/p&gt;

&lt;p&gt;I am attaching a testcase with this issue. If you apply the v0 patch and run the&lt;br/&gt;
testcase, you will see the behavior I am explaining above.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Ramin&lt;/p&gt;</comment>
                            <comment id="12520426" author="moazeni" created="Fri, 17 Aug 2007 01:36:56 +0100"  >&lt;p&gt;Thanks Mamta for your review. I am attaching the v3 patch &lt;br/&gt;
addressing your review comments.&lt;br/&gt;
I ran derbyall and suites.All without any errors.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Ramin&lt;/p&gt;</comment>
                            <comment id="12524853" author="djd" created="Tue, 4 Sep 2007 21:13:52 +0100"  >&lt;p&gt;I working on committing this patch.&lt;/p&gt;</comment>
                            <comment id="12524897" author="djd" created="Tue, 4 Sep 2007 23:08:04 +0100"  >&lt;p&gt;I reworked the test cases in the v3 patch into AutoLoadTest.java and committed them with revision 572822.&lt;br/&gt;
Main changes were:&lt;br/&gt;
  don&apos;t add an unused method&lt;br/&gt;
  split the test cases into two fixtures &amp;amp; reuse some existing code for reloading the embedded driver.&lt;br/&gt;
  don&apos;t assume JDBC 4&lt;/p&gt;
</comment>
                            <comment id="12530136" author="kmarsden" created="Tue, 25 Sep 2007 16:40:07 +0100"  >&lt;p&gt;Marking patch available so we hopefully get some comments on this patch.&lt;/p&gt;</comment>
                            <comment id="12533120" author="kmarsden" created="Mon, 8 Oct 2007 13:48:27 +0100"  >&lt;p&gt;On Sept 4, Dan said&lt;br/&gt;
&amp;gt;I working on committing this patch.&lt;/p&gt;

&lt;p&gt;Dan, could you give us an update on your review of this issue?  Are there changes needed to the patch?&lt;/p&gt;</comment>
                            <comment id="12537404" author="djd" created="Wed, 24 Oct 2007 21:12:57 +0100"  >&lt;p&gt;I think the patch results in code that is brittle, it adds more state about the boot state of the class when it already has a couple of fields trying to manage state.&lt;/p&gt;

&lt;p&gt;In addition its seems the registering of Derby&apos;s embedded driver has become overly complex, some due in part to previous changes, also I think the patch means that the autoloaded driver gets re-used on a re-boot which doesn&apos;t seem the right life-cycle for java.sql.Driver.&lt;/p&gt;

&lt;p&gt;I did try thinking about an alternate approach, more in-line with the original code (pre-JDBC 4 autoload) changes where a driver registers itself only, but I then got distracted by other stuff.&lt;/p&gt;</comment>
                            <comment id="12543127" author="dyret" created="Fri, 16 Nov 2007 16:24:59 +0000"  >&lt;p&gt;The last comment seems pretty close to a &quot;-1&quot; for the patch. If that is true, perhaps it would be good to remove &apos;Patch available&apos; for the time being, at least?&lt;/p&gt;</comment>
                            <comment id="12611301" author="kmarsden" created="Mon, 7 Jul 2008 20:29:08 +0100"  >&lt;p&gt;Ramin, are you still working on this issue. It would be good to unassign yourself if you are not.&lt;/p&gt;</comment>
                            <comment id="12977414" author="lilywei" created="Tue, 4 Jan 2011 19:03:14 +0000"  >&lt;p&gt;A user (Kuber) on IRC was inquiring about this issue. Rick: Do you have any understanding or insight on what need to be done to fix this bug since you worked on autoloaded driver (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-930&quot; title=&quot;Add support for autoloading of Derby client drivers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-930&quot;&gt;&lt;del&gt;DERBY-930&lt;/del&gt;&lt;/a&gt;)?&lt;/p&gt;</comment>
                            <comment id="12977437" author="rhillegas" created="Tue, 4 Jan 2011 20:09:49 +0000"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;It has been a long time since I thought about this issue and I no longer remember what the issues are. It is not clear to me what will happen if the driver is unregistered when the engine is shut down. Quite likely, that will break driver autoloading since the JRE autoloads drivers only once. The JRE autoloads the drivers on the very first attempt to resolve a connection URL via DriverManager.getConnection(). Subsequent calls to DriverManager.getConnection() do not trigger autoloading. I can understand that some users want to garbage collect the Derby classes after the engine shuts down. It is likely that other users want autoloading behavior to continue after engine shutdown. It may be possible to satisfy both types of users--and it may not be. An ideal solution would do the following:&lt;/p&gt;

&lt;p&gt;1) Unload all (or almost all) of the Derby classes after engine shutdown.&lt;/p&gt;

&lt;p&gt;2) Preserve the autoloading idiom that resolves a connection url provided that some jarball on the classpath provides an appropriate driver.&lt;/p&gt;

&lt;p&gt;What happens if you explicitly deregister the Derby driver after engine shutdown? What happens if you reregister the Derby driver later on?&lt;/p&gt;</comment>
                            <comment id="12978895" author="lilywei" created="Fri, 7 Jan 2011 18:05:09 +0000"  >&lt;p&gt;Hi Rick:&lt;br/&gt;
     Thank you so much for the prompt response and leading me to the ideal solution we would like to have - satisfied users who would like to have the 10.1 behavior and users who would like to have the autoloading behavior. Judging from the timeframe of the discussion, this is not an easy problem to get agreement upon.  I have to admit I don&apos;t totally understand all the complication so any health debate is welcome with the modify solution inspire by Ramin and Dan. The &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;-1.diff is the proposal patch and Repro2905.java is to show Derby behavior before and after this patch.&lt;/p&gt;

&lt;p&gt;     I found this solution solve the following issues&lt;br/&gt;
1.	Unload Derby classes after engine shutdown.&lt;br/&gt;
2.	Preserve 10.1 behavior and support any future loading of connections&lt;br/&gt;
Disadvantage:  It does not preserve the autoloading idiom.&lt;/p&gt;

&lt;p&gt;I am proposing Derby allows support any future loading of connections.&lt;/p&gt;

&lt;p&gt;I did not testing the impact of performance for this patch. Suites.all runs clean.&lt;/p&gt;

&lt;p&gt;Any proposal solution is welcome. Thanks!!!&lt;/p&gt;</comment>
                            <comment id="12978916" author="rhillegas" created="Fri, 7 Jan 2011 18:56:28 +0000"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;One way forward may be to separate class-unloading from engine shutdown. I suspect that many users would be satisfied with an explicit api which removed all of the Derby classes, and they would not insist that class-unloading be a side-effect of orderly shutdown. We could document that this new api breaks the autoloading idiom and we could give users instructions on how to reboot the engine and obtain new Derby connections after the unloading. Thanks.&lt;/p&gt;</comment>
                            <comment id="12980813" author="kmarsden" created="Wed, 12 Jan 2011 17:17:10 +0000"  >&lt;p&gt;I think shutdown=true with no database specified should shutdown the entire system and deregister the driver as documented.&lt;br/&gt;
&lt;a href=&quot;http://db.apache.org/derby/docs/dev/ref/rrefattrib16471.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://db.apache.org/derby/docs/dev/ref/rrefattrib16471.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have seen quite a few cases with memory leaks because Derby is loaded in multiple class loaders and leaking because the shutdown is not performed in the same classloader context as the boot and those applications needed to be changed to make sure the shutdown occurred in the proper loader.   I don&apos;t think it is good to add an additional step as all those applications that have made this change would need to add the additional step and their leaks might reoccur upon upgrade of Derby and the JVM as long as this bug exists.&lt;/p&gt;

&lt;p&gt;Perhaps the new API should be to shutdown while keeping the autoloaded driver. Perhaps a new or modified attribute. I am not very good with names but something like, deregister=&amp;lt;true|false&amp;gt; (only valid with shutdown)  and have it default to true.&lt;/p&gt;




</comment>
                            <comment id="12981202" author="knutanders" created="Thu, 13 Jan 2011 10:27:29 +0000"  >&lt;p&gt;Adding a deregister attribute to the URL when shutting down the system sounds like a good idea to me. I think true would be a reasonable default, as that would make the behaviour consistent with the documentation. I don&apos;t think that it would break the autoloading idiom any more than it already is in this case. If we do a getConnection() after a driver shutdown, without doing Class.forName(...).newInstance() in between, we get this exception with the current code:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.sql.SQLException: org.apache.derby.jdbc.EmbeddedDriver is not registered with the JDBC driver manager&lt;br/&gt;
        at org.apache.derby.jdbc.AutoloadedDriver.getDriverModule(AutoloadedDriver.java:186)&lt;br/&gt;
        at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:119)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:620)&lt;br/&gt;
        at java.sql.DriverManager.getConnection(DriverManager.java:222)&lt;/p&gt;

&lt;p&gt;If we make shutdown deregister AutoloadedDriver, we&apos;d probably get a &quot;No suitable driver&quot; error instead, but I don&apos;t think that&apos;s any worse than what we have now.&lt;/p&gt;</comment>
                            <comment id="12984247" author="lilywei" created="Thu, 20 Jan 2011 16:02:16 +0000"  >&lt;p&gt;Thanks Knut and Kathey.  I think shutdown=true should shutdown the  entire system and deregister the driver as document. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;-2.diff is implementing that. In AutoloadDriver, the _autoloadedDriver is to keep track of the AutoloadedDriver when getConnection is called the first time and did not get trigger on the following calls. This implementation did not truly implement deregister=true other than introduce the attribute.  I am posting the patch to make sure we agree on the proposal and whether I am on the right trace of fixing this issue. &lt;/p&gt;

&lt;p&gt;To summary the current proposal: &lt;br/&gt;
shutdown=true will shutdown the entire system and deregister the driver as document. On top of that, we will introduce deregister attribute. If deregister=false, we will keep the autoloading idiom and allow further getConnection after that. The default behavior for shutdown will be setting deregister=true. &lt;/p&gt;

&lt;p&gt;Some note about the patch:&lt;br/&gt;
Driver20.stop will deregister the driver as document when shutdown attribute is set. No change is needed.&lt;/p&gt;

&lt;p&gt;EmbeddedDataSource.java If AutoloadedDriver has been deregister from previous shutdown, just get the current driver.&lt;/p&gt;

&lt;p&gt;Attribute.java introduce deregister attribute&lt;/p&gt;

&lt;p&gt;AutoloadedDriver: handle register and deregister driver. i.e. AutoloadedDriver, Driver40(other if using different version of jvm) Need to know whether it is register driver the first time or after AutoloadedDriver has been initiated. I am using _driverModule to keep track of the derby driver and _autoloadedDriver to keep track of the AutoloadedDriver object. &lt;/p&gt;

&lt;p&gt;What is not implemented? The work of deregister=false. &lt;/p&gt;

&lt;p&gt;Suites.all runs clean.  &lt;/p&gt;</comment>
                            <comment id="12986665" author="kmarsden" created="Tue, 25 Jan 2011 20:24:26 +0000"  >&lt;p&gt; I looked the  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;-2.diff patch.   I am not so clear on all the autoloading implications, so it would be good if someone else could take a look too.  Here are my comments.&lt;/p&gt;

&lt;p&gt;In EmbeddedDataSource findDriver() I think we should just Call DriverManager.getDriver(url) once and save the value. to improve performance and make the code clearer.  I was sort of surprised that finding the driver is done for every connection rather than on instantiating the DataSource, but that was a preexisting situation. &lt;/p&gt;

&lt;p&gt;In AutoloadedDriver  I wonder if we can avoid having the new activeautoloadeddriver boolean and just use the _autoloadedDriver  and check if it was null. &lt;/p&gt;

&lt;p&gt;In unregisterDriverManager, I wonder if _autoLoadedDriver should be set to null and also if the driverModule shouild be deregistered  even if the autoloaded driver is registered.&lt;/p&gt;

&lt;p&gt;In the test we should not import ClientDataSource directly and instead use JDBCDataSource.getDataSource() and also should not assume the driver is Driver40 as it might be Driver30 etc. &lt;/p&gt;

&lt;p&gt;Again I am pretty fuzzy on this autoloading stuff so it would be good if someone else could look.&lt;/p&gt;

</comment>
                            <comment id="12987087" author="lilywei" created="Wed, 26 Jan 2011 16:50:56 +0000"  >&lt;p&gt;Thanks Kathey. Yes, it will be great to have someone else look at the patch too. I upload &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_3.diff based on your comments.&lt;/p&gt;

&lt;p&gt;In EmbeddedDataSourceFindDriver(), DriverManager.getDriver(url) is saved to improve performance. Having finding driver in DataSource instead of every connection could improve performance and oo design. Is there any other impact to Derby system?&lt;/p&gt;

&lt;p&gt;I tried to used _autoloadedDriver==null to handle AutoloadedDriver.registerDriverModule smf AutoloadedDriver.unregisterDriverModule. I am trouble by _driverModule not being set at all the appropriate time causing some of the getConnection get &quot;not suitable driver&quot; error either after Class.forName(url).newInstance(). I suggest to keep the activeautoloadeddriver Boolean to remember the very first time AutoloadedDriver is initiated and getting deregister from DriverManager.&lt;/p&gt;

&lt;p&gt;The _autoloadedDriver is set to null in AutoloadedDriver.unregisterDriverModule.&lt;/p&gt;

&lt;p&gt;In the test, the import of ClientDataSource is taking out and we test unregisterDriverModule on  Driver40, Driver30, and Driver20.&lt;/p&gt;

&lt;p&gt;Suites.all and derbyall run clean. The code is ready to review. It will be nice to see more review. I am writing the code for deregister attribute on shutdown time. &lt;/p&gt;</comment>
                            <comment id="12987639" author="lilywei" created="Thu, 27 Jan 2011 16:41:47 +0000"  >&lt;p&gt;Regressions ran ok, committed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_3.diff as svn 1063996 for the first part of fix.&lt;/p&gt;</comment>
                            <comment id="12988975" author="lilywei" created="Tue, 1 Feb 2011 00:35:13 +0000"  >&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_1.diff patch adds the attribute deregistere. The default behavior on shutdown is to deregister AutoloaderDriver. If users specify deregister=false attribute at shutdown, Derby will not deregister AutoloadedDriver. And, getConnection will get a new connection. I still need to write releaseNote.html for this issue.&lt;/p&gt;

&lt;p&gt;I had run more tests on the side. I am still in the middle of getting them into AutoloadTest. The code is ready for review especially on adding new error message part. I am not sure we should add new error message here. Any suggestion is welcome.&lt;/p&gt;

&lt;p&gt;Running suites.all and derbyall now.&lt;/p&gt;</comment>
                            <comment id="12991598" author="rhillegas" created="Mon, 7 Feb 2011 20:53:42 +0000"  >&lt;p&gt;Attaching ww.java. This patch shows an odd side-effect of the 1063996 submission. Before that submission, reloading the engine via Class.forName(...) resulted in the AutoloadedDriver being registered. After the 1063996 checkin, the same sequence of steps results in Driver40 being registered. I think it would be better if DriverManager.getDriver() always returned an AutoloadedDriver. I have some misgivings that supporting two paths here is going to give rise to mischief.&lt;/p&gt;</comment>
                            <comment id="12991970" author="lilywei" created="Tue, 8 Feb 2011 13:57:53 +0000"  >&lt;p&gt;Thanks Rick. I am uploading patch DERBY_2905_part2_2.diff to change the reloading the engine via Class.forName(&#8230;) resulted in the AutoloadedDriver registered. This patch also provide the deregister attribute. The default behavior for shutdown=true is to set deregister=true. AutoloadedDriver will not be in DriverManager. If users set deregister=false, the AutoloadDriver will not be deregister from DriverManager. The AutoloadTest create test cases like: default shutdown behavior, deregister=true, deregister=false and also wrong name of deregister attribute. The patch is ready for review. &lt;br/&gt;
Suites.all and derby passed before fixing the reload engine resulted in AutoloadedDriver begin registered. I will run the tests again.&lt;/p&gt;
</comment>
                            <comment id="12992020" author="rhillegas" created="Tue, 8 Feb 2011 16:00:44 +0000"  >&lt;p&gt;Thanks, Lily. I have applied the patch and verified that it fixes the behavior shown by the ww.java test case. Thanks.&lt;/p&gt;</comment>
                            <comment id="12992434" author="lilywei" created="Wed, 9 Feb 2011 11:07:33 +0000"  >&lt;p&gt;Thanks, Rick. The patch is check-in svn 1068842. If the reloading the engine via Class.forName(...).newInstance resulted in AutoloadedDriver registered does not load the desire AutoloadedDriver, please feel free to change the code. Before resync the latest change, Suites.all and derbyall passed. Hope this help, thanks!&lt;/p&gt;</comment>
                            <comment id="12992474" author="dagw" created="Wed, 9 Feb 2011 13:25:47 +0000"  >&lt;p&gt;Lily, the latest patch (DERBY_2905_part2_2) doesn&apos;t have the Apache grant flag set, so I think you should reattach it, so it&apos;s legally in order &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12992475" author="lilywei" created="Wed, 9 Feb 2011 13:31:43 +0000"  >&lt;p&gt;Oops! You are absolutely right. I reattach &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_2_1.diff and check the Apache grant flag. Thank you so much for catching that, Dag.&lt;/p&gt;</comment>
                            <comment id="12992482" author="knutanders" created="Wed, 9 Feb 2011 13:51:31 +0000"  >&lt;p&gt;Looks like there were two new failures in the Tinderbox after the latest commit: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/1068846-org.apache.derbyTesting.functionTests.suites.All_diff.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/tinderbox_trunk16/jvm1.6/testing/testlog/SunOS-5.10_i86pc-i386/1068846-org.apache.derbyTesting.functionTests.suites.All_diff.txt&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12992486" author="dagw" created="Wed, 9 Feb 2011 13:59:46 +0000"  >&lt;p&gt;I read through the latest patch, some small nits and possible a test bug:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;In AutoloadedDriver, typo in new comment:&lt;br/&gt;
  &amp;gt; //This flag is set is deregister attribute is set by user, 
	&lt;ul&gt;
		&lt;li&gt;&quot;if&quot; instead of second &quot;is&quot;&lt;br/&gt;
  &amp;gt; //default is true (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Better insert space after &quot;//&quot; too, for readability.&lt;br/&gt;
  If I understand this correctly, if the default is &quot;true&quot;, a more&lt;br/&gt;
  correct comment would perhaps be:&lt;/p&gt;

&lt;p&gt;  &quot;This flag is true unless the deregister attribute has been set to&lt;br/&gt;
  false by the user (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;).&quot; &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;InternalDriver, new comment:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  &amp;gt; // &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;, allow users to provide deregister attribute to &lt;br/&gt;
  &amp;gt; // left AutoloadedDriver in DriverManager, default value is true&lt;/p&gt;

&lt;p&gt;  &quot;left AutoloadedDriver&quot; -&amp;gt; &quot;leave AutoloadedDriver registered&quot;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AutoloadTest&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Typo in comment:&lt;/p&gt;

&lt;p&gt;  &amp;gt; * the AutoloadDriver is dergistered from DriverManager.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;&quot;dergistered&quot;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  This looks like a test bug:&lt;/p&gt;

&lt;p&gt;  &amp;gt; //Case 1: Test the deregister attribute error&lt;br/&gt;
  &amp;gt; JDBCDataSource.setBeanProperty(ds, &quot;connectionAttributes&quot;,&lt;br/&gt;
  &amp;gt;    &quot;shutdown=true;deregiste=false&quot;);&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;missing &quot;r&quot; in &quot;deregister&quot; ?&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  The extraneous blank inside &quot;true&quot; below looks suspicious, not sure&lt;br/&gt;
  if it works as expected:&lt;/p&gt;

&lt;p&gt;  &amp;gt; JDBCDataSource.setBeanProperty(ds, &quot;connectionAttributes&quot;,&lt;br/&gt;
  &amp;gt;      &quot;shutdown=tru e;deregister=false&quot;);&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;&quot;tru e&quot;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12992533" author="lilywei" created="Wed, 9 Feb 2011 15:34:18 +0000"  >&lt;p&gt;Thanks Dag for reviewing the patch.&lt;/p&gt;

&lt;p&gt;I read through the latest patch, some small nits and possible a test bug: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;In AutoloadedDriver, typo in new comment:&lt;br/&gt;
  &amp;gt; //This flag is set is deregister attribute is set by user, 
	&lt;ul&gt;
		&lt;li&gt;&quot;if&quot; instead of second &quot;is&quot;&lt;br/&gt;
  &amp;gt; //default is true (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;) &lt;br/&gt;
&amp;gt;&amp;gt;I change the typo in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_2_2.diff&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Better insert space after &quot;//&quot; too, for readability. &lt;br/&gt;
  If I understand this correctly, if the default is &quot;true&quot;, a more &lt;br/&gt;
  correct comment would perhaps be: &lt;/p&gt;

&lt;p&gt;  &quot;This flag is true unless the deregister attribute has been set to &lt;br/&gt;
  false by the user (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;).&quot; &lt;br/&gt;
&amp;gt;&amp;gt;Add the space and change the commend.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;InternalDriver, new comment:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  &amp;gt; // &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;, allow users to provide deregister attribute to &lt;br/&gt;
  &amp;gt; // left AutoloadedDriver in DriverManager, default value is true &lt;/p&gt;

&lt;p&gt;  &quot;left AutoloadedDriver&quot; -&amp;gt; &quot;leave AutoloadedDriver registered&quot; &lt;br/&gt;
&amp;gt;&amp;gt;Change the comment in the new patch.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AutoloadTest&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  Typo in comment: &lt;/p&gt;

&lt;p&gt;  &amp;gt; * the AutoloadDriver is dergistered from DriverManager. &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;&quot;dergistered&quot;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt;&amp;gt;Change in the patch&lt;br/&gt;
  This looks like a test bug: &lt;/p&gt;

&lt;p&gt;  &amp;gt; //Case 1: Test the deregister attribute error &lt;br/&gt;
  &amp;gt; JDBCDataSource.setBeanProperty(ds, &quot;connectionAttributes&quot;, &lt;br/&gt;
  &amp;gt; &quot;shutdown=true;deregiste=false&quot;); &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;missing &quot;r&quot; in &quot;deregister&quot; ?&lt;br/&gt;
&amp;gt;&amp;gt;This is the desire test. The typo is by design. I believe the behavior is expected.&lt;br/&gt;
When I run in ij, I got:&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:system/wombat;shutdown=true;deregiste=false&apos;;&lt;br/&gt;
URL Attribute &lt;span class=&quot;error&quot;&gt;&amp;#91;deregiste=false&amp;#93;&lt;/span&gt;&lt;br/&gt;
   Attribute is unknown to Derby.&lt;br/&gt;
ERROR 08006: Database &apos;system/wombat&apos; shutdown.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  The extraneous blank inside &quot;true&quot; below looks suspicious, not sure &lt;br/&gt;
  if it works as expected: &lt;/p&gt;

&lt;p&gt;  &amp;gt; JDBCDataSource.setBeanProperty(ds, &quot;connectionAttributes&quot;, &lt;br/&gt;
  &amp;gt; &quot;shutdown=tru e;deregister=false&quot;); &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;&quot;tru e&quot;&lt;br/&gt;
&amp;gt;&amp;gt;The space is taking out with the new patch.&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12992536" author="lilywei" created="Wed, 9 Feb 2011 15:38:57 +0000"  >&lt;p&gt;Hi Knut:&lt;br/&gt;
    When I run it with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_2_2.diff patch. I did not see the two &lt;br/&gt;
new failures.&lt;br/&gt;
This is the my results. I will keep on looking. Please see the following:&lt;br/&gt;
$ java -Dderby.tests.trace=true junit.textui.TestRunner org.apache.derbyTesting&lt;br/&gt;
.functionTests.tests.jdbc4.Driver40Test&lt;br/&gt;
.&lt;br/&gt;
test_jdbc4_1 used 6 ms .&lt;br/&gt;
test_jdbc4_1 used 55 ms&lt;br/&gt;
Time: 12.188&lt;/p&gt;

&lt;p&gt;OK (2 tests)&lt;br/&gt;
$ java -Dderby.tests.trace=true junit.textui.TestRunner org.apache.derbyTesting&lt;br/&gt;
.functionTests.tests.jdbcapi.DriverTest&lt;br/&gt;
.&lt;br/&gt;
testDriverCompliantVersion used 194 ms .&lt;br/&gt;
testAcceptsURL used 4 ms .&lt;br/&gt;
testEmbeddedAttributes used 20034 ms .&lt;br/&gt;
testClientAttributes used 4 ms .&lt;br/&gt;
testClientURL used 6 ms .&lt;br/&gt;
testDbNameWithSpaces used 6644 ms .&lt;br/&gt;
testDriverCompliantVersion used 140 ms .&lt;br/&gt;
testAcceptsURL used 4 ms .&lt;br/&gt;
testEmbeddedAttributes used 13573 ms .&lt;br/&gt;
testClientAttributes used 6817 ms .&lt;br/&gt;
testClientURL used 6394 ms .&lt;br/&gt;
testDbNameWithSpaces used 6604 ms&lt;br/&gt;
Time: 71.389&lt;/p&gt;

&lt;p&gt;OK (12 tests)&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Lily&lt;/p&gt;
</comment>
                            <comment id="12992758" author="knutanders" created="Wed, 9 Feb 2011 22:33:39 +0000"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;I applied the part2_2_2 patch, and I still see the failure in jdbc4.Driver40Test. Or to be precise, I see the failure when I run jdbc4._Suite. I do not see the failure when I run Driver40Test separately. Perhaps the test behaves differently when the driver has been loaded before the test starts?&lt;/p&gt;</comment>
                            <comment id="12993069" author="lilywei" created="Thu, 10 Feb 2011 14:39:39 +0000"  >&lt;p&gt;Thanks Knut. You are right, the test does behave differently when the driver has been loaded and shutdown has been issued before the test starts. When we first start embedded engine, AutoloadedDriver40 is created by Derby and loaded in DriverManager. With the current code, reloading engine after shutdown via for.ClassName(&#8230;).newInstance will result AutoloadedDriver loaded in DriverManager. Jdbc4.Driver40Test and jdbcapi.DriverTest both assume AutoloadedDriver40 is in DriverManager when JDBC.vmSupportsJDBC4() is true. I am attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_2_3.diff patch. This patch assumes the current AutoloadedDriver.registerDriverModule() behavior is correct. If this is not a correct assumption, please feel free to change the code. I did run jdbc4._Suite and jdbcapi._Suite and they are passing on my machine.  Please review the code. If it is okay with everybody, I can check-in when I get home. I am currently in HongKong airport. Happy Chinese New Year.&lt;/p&gt;</comment>
                            <comment id="12993166" author="rhillegas" created="Thu, 10 Feb 2011 18:52:47 +0000"  >&lt;p&gt;I have looked at the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;_part2_2_3.diff patch. It does indeed make Driver40Test succeed. But that is because it disables the tests which Driver40Test is trying to perform. The actual functionality remains broken. After reloading the engine on Java 6 or higher, the registered driver should be an AutoloadedDriver40. That is because that is the driver which contains the getParentLogger() method required by JDBC 4.1. The getParentLogger() method does not exist in AutoloadedDriver.&lt;/p&gt;

&lt;p&gt;Here is the output of ww.java after applying this patch:&lt;/p&gt;

&lt;p&gt;org.apache.derby.jdbc.AutoloadedDriver40@42b307f0&lt;br/&gt;
org.apache.derby.jdbc.AutoloadedDriver@236acdd1&lt;/p&gt;

&lt;p&gt;Both lines should report an AutoloadedDriver40.&lt;/p&gt;</comment>
                            <comment id="12993171" author="rhillegas" created="Thu, 10 Feb 2011 19:02:23 +0000"  >&lt;p&gt;I think I lied to you in my comment on 2011-02-08. The DERBY_2905_part2_2.diff patch seems to have changed the reloaded driver from a Driver40 into an AutoloadedDriver. I saw the AutoloadedDriver bit but I missed the fact that it did not end in 40. So that patch made the situation worse. -1 to that patch now.&lt;/p&gt;</comment>
                            <comment id="12993638" author="kmarsden" created="Fri, 11 Feb 2011 18:58:37 +0000"  >&lt;p&gt;What user functionality is broken with the DERBY_2905_part2_2.diff?   I have not seen any failures on JDK 1.6. Is it  JDK 1.7 specific related functionality of getParentLogger when the AutoloadedDriver is reloaded after shutdown?   Since there is no regression to previous releases and no JDK 1.7 released. I think it would make sense to file a separate issue for the JDK 1.7 issue and work on that separately as part of the JDBC 4.1 work.&lt;/p&gt;

&lt;p&gt;I think in general the Autoloader code was designed with the assumption that it would never be unloaded with all the references in DataSources and such, so it was quite tricky I think for Lily to figure out how to get the updates in all the right places, but it does work and is a great improvement over the current state.   Maybe the addition of AutoloadedDriver40 warrants a refactoring to remove that assumption.&lt;/p&gt;</comment>
                            <comment id="12993647" author="rhillegas" created="Fri, 11 Feb 2011 19:13:35 +0000"  >&lt;p&gt;Hi Kathey. Yes the user-visible functionality is visible on JDK 7. The problem also appears on JDK 6 in the form that the registered driver is different after reloading the engine. That will cause tech support a lot of mischief down the road because it will give rise to subtle problems which depend on whether an action is performed before or after reloading the engine. I  have provided a test case which shows the problem of different drivers on JDK 6: ww.java. -1 to your suggestion that this is a JDBC 4.1 problem.&lt;/p&gt;</comment>
                            <comment id="12993650" author="rhillegas" created="Fri, 11 Feb 2011 19:16:44 +0000"  >&lt;p&gt;I take part of that back. Perhaps you cannot see this with ww.java on JDK 6. In any event, I have spent a lot of time implementing JDBC 4.1 and I do not appreciate the problem being kicked over to me.&lt;/p&gt;</comment>
                            <comment id="12993651" author="kmarsden" created="Fri, 11 Feb 2011 19:32:11 +0000"  >&lt;p&gt;I am not kicking it over to you personally but rather suggesting we file a separate issue and whomever is interested in fixing it can, but as you recall this issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt; was a regression introduced by your original Autoloader work. Several times your work has introduced outright regressions including this one that you have left to others to fix.  In this case of this regression, Lily has worked hard to fix the regression  and made her plans clear over the course of development.   I am sure it would have been helpful to communicate more about potential conflicts during that process.&lt;/p&gt;</comment>
                            <comment id="12993663" author="lilywei" created="Fri, 11 Feb 2011 19:54:49 +0000"  >&lt;p&gt;+1 on communicating more in turn of conflicts and potential fix. I will be more than happy to keep working on resolving getParentLogger issue for AutoloadedDriver. I will definitely appreciate Rick&apos;s suggestion for how to proceed.&lt;br/&gt;
As far as I can see, we need to create AutoloadedDriver40 in AutoloadedDriver.registerDriverModule. Something like this:&lt;br/&gt;
           if (_autoloadedDriver == null) {&lt;br/&gt;
                //Support JDBC 4 or higher (&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;)&lt;br/&gt;
                if (HAVE_DRIVER &amp;amp;&amp;amp; HAVE_SQLXML) &lt;/p&gt;
{
                    AutoloadedDriver40.reloadAutoloadedDriver40();
                }
&lt;p&gt;However, I am having compiler error on the line &quot;AutoloadedDriver40.reloadAutoloadedDriver40 on reflect, invoke etc.&lt;/p&gt;</comment>
                            <comment id="12993673" author="rhillegas" created="Fri, 11 Feb 2011 20:10:10 +0000"  >&lt;p&gt;Kathey, no one is faulting Lily&apos;s hard work or cleverness here. She has done a great job. But this is tricky code. I think you should avoid personalizing the issue. It is not helpful. Perhaps we should have a friendly chat over a couple beers next week. The -1 stands.&lt;/p&gt;</comment>
                            <comment id="12993676" author="rhillegas" created="Fri, 11 Feb 2011 20:24:10 +0000"  >&lt;p&gt;Hi Lily,&lt;/p&gt;

&lt;p&gt;The following code snippet may help move this forward:&lt;/p&gt;

&lt;p&gt;    public  static  AutoloadedDriver    makeAutoloadedDriver()&lt;br/&gt;
    {&lt;br/&gt;
        try &lt;/p&gt;
{
            return (AutoloadedDriver) Class.forName( &quot;org.apache.derby.jdbc.AutoloadedDriver40&quot; ).newInstance();
        }
&lt;p&gt;        catch (Throwable t) {}&lt;/p&gt;

&lt;p&gt;        return new AutoloadedDriver();&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Hope that&apos;s useful.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="12993677" author="kmarsden" created="Fri, 11 Feb 2011 20:24:16 +0000"  >&lt;p&gt;I think there is no reason to veto the patch. The fix is a marked improvement in behavior, fixes the regression  and causes no functional regression from a released version.  Let&apos;s file a new issue for the minor getParentLogger  after shutdown issue, fix that and move forward.&lt;/p&gt;</comment>
                            <comment id="12993680" author="rhillegas" created="Fri, 11 Feb 2011 20:32:26 +0000"  >&lt;p&gt;I think that Lily is going to very close to fixing this. Let&apos;s help her do that.&lt;/p&gt;</comment>
                            <comment id="12993694" author="rhillegas" created="Fri, 11 Feb 2011 20:56:46 +0000"  >&lt;p&gt;Attaching derby-2905-01-aa-fixAutoloadedDriverReload.diff. This appears to fix the problem with Driver40Test. I will run regression tests.&lt;/p&gt;

&lt;p&gt;This patch applies the solution from my previous comment.&lt;/p&gt;

&lt;p&gt;Touches the following file:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/jdbc/AutoloadedDriver.java&lt;/p&gt;</comment>
                            <comment id="12993695" author="kmarsden" created="Fri, 11 Feb 2011 20:57:46 +0000"  >&lt;p&gt;Sounds good and thank you for helping. That,  I think is generally is a better approach than rejecting a valuable contribution outright.    Lily filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5029&quot; title=&quot;getParentLogger() won&amp;#39;t work after the engine has been shut down once&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5029&quot;&gt;&lt;del&gt;DERBY-5029&lt;/del&gt;&lt;/a&gt; to track the issue moving forward.&lt;/p&gt;</comment>
                            <comment id="12994964" author="lilywei" created="Tue, 15 Feb 2011 19:48:02 +0000"  >&lt;p&gt;Add release notes. &lt;/p&gt;</comment>
                            <comment id="12994997" author="lilywei" created="Tue, 15 Feb 2011 20:50:37 +0000"  >&lt;p&gt;Add release notes.&lt;/p&gt;</comment>
                            <comment id="12995096" author="dagw" created="Wed, 16 Feb 2011 00:46:25 +0000"  >&lt;p&gt;Release notes look good. +1.&lt;/p&gt;</comment>
                            <comment id="13000828" author="knutanders" created="Tue, 1 Mar 2011 11:10:27 +0000"  >&lt;p&gt;Attaching an updated release note.&lt;/p&gt;

&lt;p&gt;Made the summary a one-liner (&quot;System shutdown now deregisters the embedded JDBC driver&quot;) and incorporated the information in the original summary into the other sections.&lt;/p&gt;</comment>
                            <comment id="13000947" author="rhillegas" created="Tue, 1 Mar 2011 16:34:41 +0000"  >&lt;p&gt;Adjusted the release note. Further adjustment may be needed depending on the answer to the question which I just posted on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5043&quot; title=&quot;Document the new url attribute deregister to keep the AutoloadedDriver registers in DriverManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5043&quot;&gt;&lt;del&gt;DERBY-5043&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13000983" author="kmarsden" created="Tue, 1 Mar 2011 17:47:23 +0000"  >&lt;p&gt;I definitely think it was valuable to have information on the deregister attribute in the release note, because it was added as part of this change and especially because it might not make the 10.8 documentation, so +1 to adjusting the releaseNote to include it once again.&lt;/p&gt;
</comment>
                            <comment id="13000991" author="rhillegas" created="Tue, 1 Mar 2011 17:59:06 +0000"  >&lt;p&gt;We should document this attribute in the user guides unless this is an experimental feature which we intend to change in a future release. I will adjust the release note after I have something I can point at. I will hold off building an RC until after this documentation is complete.&lt;/p&gt;</comment>
                            <comment id="13001033" author="kmarsden" created="Tue, 1 Mar 2011 19:13:29 +0000"  >&lt;p&gt;We definitely want to keep the functionality. The only thought  of change that came to mind for me in this exchange is that perhaps the double negative might be confusing.   The only possible alternative I could think of would be something like keepregistered=true  instead of deregister=false, but maybe it is fine the way it is as that would be kind of wordy and we would need to change it quickly.&lt;/p&gt;</comment>
                            <comment id="13001061" author="rhillegas" created="Tue, 1 Mar 2011 19:46:33 +0000"  >&lt;p&gt;I don&apos;t have strong religion about what to call this attribute. I think that deregister=true is fine. I would prefer to leave it alone now that Kim is in the middle of documenting the feature.&lt;/p&gt;</comment>
                            <comment id="13001070" author="chaase3" created="Tue, 1 Mar 2011 19:55:11 +0000"  >&lt;p&gt;I might amend that to say, &quot;Kim, who is already confused enough, is in the middle of documenting the feature&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13002317" author="lilywei" created="Thu, 3 Mar 2011 23:25:29 +0000"  >&lt;p&gt;Should we adjust the release note about deregister attribute so it is consistent with documentation?&lt;/p&gt;</comment>
                            <comment id="13002641" author="rhillegas" created="Fri, 4 Mar 2011 14:59:53 +0000"  >&lt;p&gt;Attaching a new version of the release note for this issue. This version refers the reader to the Reference Manual for more information on the deregister attribute. Does this version look OK?&lt;/p&gt;</comment>
                            <comment id="13002666" author="lilywei" created="Fri, 4 Mar 2011 15:28:27 +0000"  >&lt;p&gt;Thanks Rick. The release note looks great. If there is anything I would add, it will be the actual link of deregister attribute in the Derby Reference Manual. However, I think it will be easy for users just Google it.  &lt;/p&gt;</comment>
                            <comment id="13002670" author="rhillegas" created="Fri, 4 Mar 2011 15:36:45 +0000"  >&lt;p&gt;Hi Lily. We could add a link to the documentation for the deregister attribute, but the link won&apos;t work while we are evaluating the RC. That is because the 10.8 docs will not have been posted on the Derby site yet. I would prefer to not create that situation. Thanks.&lt;/p&gt;</comment>
                            <comment id="13002683" author="lilywei" created="Fri, 4 Mar 2011 16:02:22 +0000"  >&lt;p&gt;Thanks Rick. This is like catch 22 problem. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; No, I wouldn&apos;t want to have that situation as well.&lt;/p&gt;</comment>
                            <comment id="13017442" author="rhillegas" created="Fri, 8 Apr 2011 14:12:32 +0100"  >&lt;p&gt;Attaching a new version of the release note. This version removes the blockquotes which violate the accessibility guidelines at &lt;a href=&quot;http://www.w3.org/TR/WCAG10/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/WCAG10/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13212640" author="whisperer" created="Tue, 21 Feb 2012 15:07:43 +0000"  >&lt;p&gt;I have the feeling this bug is not fixed or I have a similar problem.&lt;br/&gt;
I use tomcat 6.0.26 and an embedded derby(Bundle-Name: Apache Derby 10.8 Bundle-Version: 10.8.2000002.1181258). &lt;br/&gt;
There is always the following line logged into the catalina.log on stopping my tomcat.&lt;/p&gt;

&lt;p&gt;SEVERE: A web application registered the JBDC driver &lt;span class=&quot;error&quot;&gt;&amp;#91;org.apache.derby.jdbc.AutoloadedDriver40&amp;#93;&lt;/span&gt; but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.&lt;/p&gt;</comment>
                            <comment id="13213466" author="whisperer" created="Wed, 22 Feb 2012 08:55:06 +0000"  >
&lt;p&gt;Here my code for the shutdown:&lt;/p&gt;

&lt;p&gt;Context ctx = new InitialContext(env);&lt;br/&gt;
EmbeddedConnectionPoolDataSource ds = (EmbeddedConnectionPoolDataSource)ctx.lookup(DB_CONTEXT);&lt;br/&gt;
if (ds != null) &lt;/p&gt;
{
   ds.setShutdownDatabase(&quot;shutdown&quot;);
   ds.getConnection();
}

</comment>
                            <comment id="13213517" author="knutanders" created="Wed, 22 Feb 2012 10:41:29 +0000"  >&lt;p&gt;Maybe you&apos;re just shutting down the database, and not the database engine? To shut down the engine, make sure there&apos;s no database name set in the data source by calling ds.setDatabaseName(null) before getConnection().&lt;/p&gt;</comment>
                            <comment id="14119594" author="knutanders" created="Wed, 3 Sep 2014 09:31:33 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12500202">DERBY-5085</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12513022">DERBY-5316</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12647706">DERBY-6224</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12468858" name="DERBY-2905-2.diff" size="11100" author="lilywei" created="Thu, 20 Jan 2011 16:02:16 +0000"/>
                            <attachment id="12467746" name="DERBY-2905_1.diff" size="10805" author="lilywei" created="Fri, 7 Jan 2011 18:05:09 +0000"/>
                            <attachment id="12469435" name="DERBY-2905_3.diff" size="10802" author="lilywei" created="Wed, 26 Jan 2011 16:50:56 +0000"/>
                            <attachment id="12469880" name="DERBY-2905_part2_1.diff" size="7689" author="lilywei" created="Tue, 1 Feb 2011 00:35:13 +0000"/>
                            <attachment id="12470591" name="DERBY-2905_part2_2.diff" size="13627" author="lilywei" created="Tue, 8 Feb 2011 13:57:53 +0000"/>
                            <attachment id="12470675" name="DERBY-2905_part2_2_1.diff" size="13607" author="lilywei" created="Wed, 9 Feb 2011 13:31:43 +0000"/>
                            <attachment id="12470678" name="DERBY-2905_part2_2_2.diff" size="2814" author="lilywei" created="Wed, 9 Feb 2011 15:34:18 +0000"/>
                            <attachment id="12470779" name="DERBY-2905_part2_2_3.diff" size="7633" author="lilywei" created="Thu, 10 Feb 2011 14:39:39 +0000"/>
                            <attachment id="12363563" name="DERBY-2905v0.diff" size="1828" author="moazeni" created="Fri, 10 Aug 2007 08:54:46 +0100"/>
                            <attachment id="12363564" name="DERBY-2905v0.stat" size="138" author="moazeni" created="Fri, 10 Aug 2007 08:54:46 +0100"/>
                            <attachment id="12363945" name="DERBY-2905v1.diff" size="10975" author="moazeni" created="Thu, 16 Aug 2007 17:03:51 +0100"/>
                            <attachment id="12363946" name="DERBY-2905v1.stat" size="409" author="moazeni" created="Thu, 16 Aug 2007 17:03:51 +0100"/>
                            <attachment id="12363984" name="DERBY-2905v3.diff" size="11639" author="moazeni" created="Fri, 17 Aug 2007 01:36:55 +0100"/>
                            <attachment id="12363985" name="DERBY-2905v3.stat" size="462" author="moazeni" created="Fri, 17 Aug 2007 01:36:56 +0100"/>
                            <attachment id="12363559" name="Main.java" size="2605" author="moazeni" created="Fri, 10 Aug 2007 08:18:38 +0100"/>
                            <attachment id="12363973" name="Mainv1.java" size="3203" author="moazeni" created="Fri, 17 Aug 2007 00:27:12 +0100"/>
                            <attachment id="12467747" name="Repro2905.java" size="3890" author="lilywei" created="Fri, 7 Jan 2011 18:05:09 +0000"/>
                            <attachment id="12470899" name="derby-2905-01-aa-fixAutoloadedDriverReload.diff" size="981" author="rhillegas" created="Fri, 11 Feb 2011 20:56:46 +0000"/>
                            <attachment id="12475813" name="releaseNote.html" size="4997" author="rhillegas" created="Fri, 8 Apr 2011 14:12:32 +0100"/>
                            <attachment id="12472676" name="releaseNote.html" size="5026" author="rhillegas" created="Fri, 4 Mar 2011 14:59:53 +0000"/>
                            <attachment id="12472325" name="releaseNote.html" size="4246" author="rhillegas" created="Tue, 1 Mar 2011 16:34:41 +0000"/>
                            <attachment id="12472298" name="releaseNote.html" size="4580" author="knutanders" created="Tue, 1 Mar 2011 11:10:27 +0000"/>
                            <attachment id="12471113" name="releaseNote.html" size="4693" author="lilywei" created="Tue, 15 Feb 2011 20:50:37 +0000"/>
                            <attachment id="12471104" name="releaseNote.html" size="4693" author="lilywei" created="Tue, 15 Feb 2011 19:48:02 +0000"/>
                            <attachment id="12470498" name="ww.java" size="606" author="rhillegas" created="Mon, 7 Feb 2011 20:53:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 30 Jul 2007 18:15:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23313</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0d1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35933</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>