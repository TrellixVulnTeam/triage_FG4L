<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:50:01 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5090/DERBY-5090.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5090] Retrieving BLOB fields sometimes fails</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5090</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;This is my first issue report, so please be understanding if I&apos;m posting the wrong thing, in the wrong place or in the wrong way. I just want to help. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;While iterating through a ResultSet, when accessing a BLOB field to read its contents via an InputStream, I noticed that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if the current ResultSet&apos;s has been &quot;warmed up&quot; by retrieving another column first, everything it&apos;s fine;&lt;/li&gt;
	&lt;li&gt;if, on the other hand, you first-thing access the BLOB (and read other columns later), then upon reading the first byte out the InputStream bound to the BLOB field (ResultSet.getBinaryStream(&quot;col_name&quot;)) an IOException is thrown (and IOException&apos;s getMessage() method returns null).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Following is an example, taken from a real application. The two code segments only differ in the fact that a SMALLINT &amp;amp; VARCHAR read is done before/after the BLOB read.&lt;/p&gt;

&lt;p&gt;-&lt;del&gt;Working snippet&lt;/del&gt;-&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
                    icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = &quot;imm&quot; + File.separator + &quot;ic&quot; + &quot;&lt;em&gt;&quot; + rs.getShort(&quot;setIcone&quot;) + &quot;&lt;/em&gt;&quot; + i + &quot;.&quot; + rs.getString(&quot;estensione&quot;);&lt;br/&gt;
                    AutoCloseInputStream acis = new AutoCloseInputStream(rs.getBinaryStream(&quot;ic&quot; + i));&lt;br/&gt;
                    if (rs.wasNull())&lt;br/&gt;
                        icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = null;&lt;br/&gt;
                    else&lt;br/&gt;
                    {&lt;br/&gt;
                        //icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = &quot;imm&quot; + File.separator + &quot;ic&quot; + &quot;&lt;em&gt;&quot; + rs.getShort(&quot;setIcone&quot;) + &quot;&lt;/em&gt;&quot; + i + &quot;.&quot; + rs.getString(&quot;estensione&quot;);&lt;br/&gt;
                        BufferedInputStream bis = new BufferedInputStream(acis);&lt;br/&gt;
                        int b = bis.read();//READS FINE&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;-&lt;del&gt;Broken snippet&lt;/del&gt;-&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;br/&gt;
                    //icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = &quot;imm&quot; + File.separator + &quot;ic&quot; + &quot;&lt;em&gt;&quot; + rs.getShort(&quot;setIcone&quot;) + &quot;&lt;/em&gt;&quot; + i + &quot;.&quot; + rs.getString(&quot;estensione&quot;);&lt;br/&gt;
                    AutoCloseInputStream acis = new AutoCloseInputStream(rs.getBinaryStream(&quot;ic&quot; + i));&lt;br/&gt;
                    if (rs.wasNull())&lt;br/&gt;
                        icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = null;&lt;br/&gt;
                    else&lt;br/&gt;
                    {&lt;br/&gt;
                        icRelPath&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; = &quot;imm&quot; + File.separator + &quot;ic&quot; + &quot;&lt;em&gt;&quot; + rs.getShort(&quot;setIcone&quot;) + &quot;&lt;/em&gt;&quot; + i + &quot;.&quot; + rs.getString(&quot;estensione&quot;);&lt;br/&gt;
                        BufferedInputStream bis = new BufferedInputStream(acis);&lt;br/&gt;
                        int b = bis.read();//THROWS IOException WITH A null ERROR MESSAGE STRING&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
                <environment>JDBC derby embedded driver</environment>
        <key id="12500320">DERBY-5090</key>
            <summary>Retrieving BLOB fields sometimes fails</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="unai">Unai Vivi</reporter>
                        <labels>
                            <label>BLOB</label>
                            <label>derby_backport_reject_10_8</label>
                            <label>exception</label>
                            <label>null</label>
                            <label>read</label>
                    </labels>
                <created>Thu, 3 Mar 2011 16:51:03 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:28 +0100</updated>
                            <resolved>Thu, 18 Aug 2011 08:29:35 +0100</resolved>
                                    <version>10.7.1.1</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13006981" author="knutanders" created="Tue, 15 Mar 2011 15:58:28 +0000"  >&lt;p&gt;Hi Unai,&lt;/p&gt;

&lt;p&gt;Do you have the stack trace for the IOException that is thrown?&lt;/p&gt;</comment>
                            <comment id="13007017" author="unai" created="Tue, 15 Mar 2011 17:05:32 +0000"  >&lt;p&gt;Hi Knut,&lt;br/&gt;
thank you for having a look into this.&lt;/p&gt;

&lt;p&gt;Here is the stack trace:&lt;/p&gt;

&lt;p&gt;java.io.IOException&lt;br/&gt;
        at org.apache.derby.iapi.services.io.NewByteArrayInputStream.read(Unknown Source)&lt;br/&gt;
        at org.apache.commons.io.input.ProxyInputStream.read(ProxyInputStream.java:99)&lt;br/&gt;
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)&lt;br/&gt;
        at java.io.BufferedInputStream.read(BufferedInputStream.java:237)&lt;br/&gt;
        at eu.vv_tech.domo.db.Icone.costrIcone(Icone.java:90)&lt;br/&gt;
        at eu.vv_tech.domo.db.Icone.&amp;lt;init&amp;gt;(Icone.java:127)&lt;br/&gt;
        at org.apache.jsp.insBottone_jsp._jspService(insBottone_jsp.java:188)&lt;br/&gt;
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)&lt;br/&gt;
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)&lt;br/&gt;
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)&lt;br/&gt;
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)&lt;br/&gt;
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)&lt;br/&gt;
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)&lt;br/&gt;
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)&lt;br/&gt;
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)&lt;br/&gt;
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)&lt;br/&gt;
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)&lt;br/&gt;
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)&lt;br/&gt;
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)&lt;br/&gt;
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)&lt;br/&gt;
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)&lt;br/&gt;
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)&lt;br/&gt;
        at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:859)&lt;br/&gt;
        at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:579)&lt;br/&gt;
        at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1555)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;

&lt;p&gt;I don&apos;t know about the internals of org.apache.derby.iapi.services.io.NewByteArrayInputStream.read(), but my guess is that if you match the Blob with an InputStream and then (before actually using the InputStream) you read other columns, something gets misplaced...&lt;/p&gt;</comment>
                            <comment id="13007227" author="knutanders" created="Tue, 15 Mar 2011 22:10:45 +0000"  >&lt;p&gt;Hi Unai,&lt;/p&gt;

&lt;p&gt;JDBC&apos;s definition of ResultSet.getBinaryStream() can be found here:&lt;br/&gt;
&lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/sql/ResultSet.html#getBinaryStream(java.lang.String&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/6/docs/api/java/sql/ResultSet.html#getBinaryStream(java.lang.String&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;It says:&lt;/p&gt;

&lt;p&gt;,----&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Note: All the data in the returned stream must be read prior to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; getting the value of any other column. The next call to a getter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; method implicitly closes the stream.&lt;br/&gt;
`----&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;So it seems like the specification demands that the stream is closed&lt;br/&gt;
by the calls to getShort() and getString() between the calls to&lt;br/&gt;
getBinaryStream() and read(). And I suppose that the implicit closing&lt;br/&gt;
of the stream is why the IOException is raised by read().&lt;/p&gt;

&lt;p&gt;But although the described behaviour appears to match the&lt;br/&gt;
specification, I think it would be good if the IOException had a&lt;br/&gt;
message text saying the stream was closed, rather than just having a&lt;br/&gt;
null message. I think we should keep this bug report open until we&lt;br/&gt;
have a better error message.&lt;/p&gt;</comment>
                            <comment id="13007232" author="knutanders" created="Tue, 15 Mar 2011 22:20:29 +0000"  >&lt;p&gt;Attaching a repro for the issue (Derby5090.java).&lt;/p&gt;

&lt;p&gt;With the embedded driver, I get the following exception (no message text):&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.io.IOException&lt;br/&gt;
        at org.apache.derby.iapi.services.io.NewByteArrayInputStream.read(NewByteArrayInputStream.java:53)&lt;br/&gt;
        at Derby5090.main(Derby5090.java:22)&lt;/p&gt;

&lt;p&gt;With the client driver, I get this exception (which does say the stream is closed):&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.io.IOException: The object is already closed.&lt;br/&gt;
        at org.apache.derby.client.am.CloseFilterInputStream.read(CloseFilterInputStream.java:50)&lt;br/&gt;
        at Derby5090.main(Derby5090.java:22)&lt;/p&gt;</comment>
                            <comment id="13007239" author="knutanders" created="Tue, 15 Mar 2011 22:36:48 +0000"  >&lt;p&gt;However, the call to read() doesn&apos;t fail if the Blob is fetched from store and exceeds the size of a page. See the updated repro (Derby5090_2.java). It still raises an IOException with the client driver. The behaviour should be consistent.&lt;/p&gt;</comment>
                            <comment id="13007274" author="unai" created="Tue, 15 Mar 2011 23:24:01 +0000"  >&lt;p&gt;Oops, how stupid of me to miss that note in the ResultSet&apos;s javadoc... I&apos;m glad I put the newcomer &quot;disclaimer&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Anyways, it&apos;s good that this helped to point out that there&apos;s this difference between embedded and client drivers, where the former gives a null string message while the latter very helpfully says that the stream is closed.&lt;/p&gt;

&lt;p&gt;The second inconsistency you found is interesting too, where if the Blob is bigger than a page only the client driver throws the object-closed exception while the embedded driver doesn&apos;t.&lt;/p&gt;</comment>
                            <comment id="13007419" author="knutanders" created="Wed, 16 Mar 2011 10:56:56 +0000"  >&lt;p&gt;I suppose the stream returned by the embedded driver also will throw an exception on read() for the bigger Blob once all the bytes from the first page have been read, but I haven&apos;t checked that. We should at least verify that it throws an exception and doesn&apos;t return -1 in that case. &lt;/p&gt;</comment>
                            <comment id="13007522" author="unai" created="Wed, 16 Mar 2011 15:54:49 +0000"  >&lt;p&gt;Attaching Derby5090_3.java&lt;/p&gt;</comment>
                            <comment id="13007523" author="unai" created="Wed, 16 Mar 2011 15:57:16 +0000"  >&lt;p&gt;Hi Knut,&lt;br/&gt;
it actually doesn&apos;t. Embedded client returns -1 after all the bytes have been read. &lt;span class=&quot;error&quot;&gt;&amp;#91;See repro Derby5090_3.java&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13056506" author="kristwaa" created="Tue, 28 Jun 2011 14:33:32 +0100"  >&lt;p&gt;Attaching patches 1a and 2a.&lt;br/&gt;
Patch 1a is the fix, including some clean-up:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java&lt;br/&gt;
Replace NewByteArrayInputStream with ByteArrayInputStream&lt;br/&gt;
Wrap the above stream in CloseFilterInputStream&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;java/engine/org/apache/derby/iapi/services/io/CloseFilterInputStream.java&lt;br/&gt;
Added filter stream that will throw exception after being closed. Modeled after the equally named class in the client.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;java/engine/org/apache/derby/iapi/services/io/NewByteArrayInputStream.java&lt;br/&gt;
Deleted this class, use a standard API-class instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;java/engine/org/apache/derby/iapi/services/io/AccessibleByteArrayOutputStream.java&lt;br/&gt;
Replace NewByteArrayInputStream with ByteArrayInputStream&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;java/client/org/apache/derby/client/am/ResultSet.java&lt;br/&gt;
Renamed is_ to currentStream.&lt;br/&gt;
Added instance variable currentReader&lt;br/&gt;
Renamed method closeCloseFilterInputStream to closeOpenStreams&lt;br/&gt;
Modified closeOpenStream to close both currentStream and currentReader (only one will be non-null at any time)&lt;br/&gt;
Assigned reader to currentReader in getCharacterStream&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Patch 2b adds two tests, but I&apos;m a bit unsure if I want to keep JDBCSetGet as a separate class. Will anyone else use it?&lt;br/&gt;
If not, it might be better to keep them as private classes in the test class.&lt;br/&gt;
If we want to add it as a JUnit utility class, should it be split in two, i.e. JDBCGet and JDBCSet? Also, if keeping I&apos;d like to make it possible to obtain the name of the last called getter to improve the error reporting.&lt;/p&gt;

&lt;p&gt;Patches ready for review.&lt;/p&gt;
</comment>
                            <comment id="13058608" author="knutanders" created="Fri, 1 Jul 2011 16:42:29 +0100"  >&lt;p&gt;I had a look at the 1a patch and it looks like a good fix. I was a bit surprised by the use of MessageId.CONN_ALREADY_CLOSED to tell that the stream was closed, but after checking messages.xml, I found that the message text wasn&apos;t connection-specific despite the name of the constant.&lt;/p&gt;

&lt;p&gt;One tiny nit in EmbedResultSet:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;currentStream = stream;&lt;br/&gt;
+            // Wrap in a stream throwing exception on invocations when closed.&lt;br/&gt;
+            currentStream = stream = new CloseFilterInputStream(stream);&lt;br/&gt;
 			return stream;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Perhaps avoiding the double assignment would be slightly clearer:&lt;br/&gt;
        currentStream = new CloseFilterInputStream(stream);&lt;br/&gt;
        return currentStream;&lt;br/&gt;
?&lt;/p&gt;

&lt;p&gt;Before the fix, the stream sometimes worked (or perhaps it just appeared to work?) after reading the next column, whereas now it&apos;ll always throw an IOException. Should we mention that in the release notes?&lt;/p&gt;</comment>
                            <comment id="13059686" author="kristwaa" created="Tue, 5 Jul 2011 07:01:02 +0100"  >&lt;p&gt;Thanks for the review, Knut.&lt;/p&gt;

&lt;p&gt;I made the double assignment because &apos;currentStream&apos; is of type Object. I have now split it up into two separate assignments. I&apos;m still returning &apos;stream&apos; to avoid a cast.&lt;/p&gt;

&lt;p&gt;Attached patch 1b, committed to trunk with revision 1142896.&lt;/p&gt;</comment>
                            <comment id="13059695" author="kristwaa" created="Tue, 5 Jul 2011 07:54:42 +0100"  >&lt;p&gt;Attaching patch 3a, which takes a stab at improving the message situation. I found the following relevant messages:&lt;br/&gt;
6 x XCL53    LANG_STREAM_CLOSED        Stream is closed&lt;br/&gt;
7 x XJ012.S ALREADY_CLOSED                 &apos;&lt;/p&gt;
{0}
&lt;p&gt;&apos; already closed.&lt;br/&gt;
0 x XJ094.S OBJECT_ALREADY_CLOSED  This object is already closed.&lt;br/&gt;
2 x J104      CONN_ALREADY_CLOSED     The object is already closed.&lt;/p&gt;

&lt;p&gt;XCL53 doesn&apos;t carry an SQLState, so it probably belongs in MessageId. The use of XJ012.S seems OK.&lt;br/&gt;
Patch 3a does the following:&lt;br/&gt;
 o remove unused XJ094.S&lt;br/&gt;
 o rename J104 to OBJECT_CLOSED.&lt;br/&gt;
 o replace uses of XCL53 with J104.&lt;br/&gt;
 o remove XCL53&lt;/p&gt;

&lt;p&gt;Alternatively, we could do a swap - use msg/translations for XCL53 in J104 to make it more specific (and rename it to STREAM_CLOSED).&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="13081599" author="kristwaa" created="Tue, 9 Aug 2011 13:48:52 +0100"  >&lt;p&gt;Committed patch 3a to trunk with revision 1155332.&lt;/p&gt;

&lt;p&gt;Attaching the first attempt at a release note.&lt;/p&gt;</comment>
                            <comment id="13082340" author="dagw" created="Wed, 10 Aug 2011 14:48:18 +0100"  >&lt;p&gt;Release note looked clear to me. +1&lt;/p&gt;</comment>
                            <comment id="13085679" author="kristwaa" created="Tue, 16 Aug 2011 14:05:49 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4521&quot; title=&quot;Stream passed out to user does not heed close, allowing reads after next ResultSet#getXXX&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4521&quot;&gt;&lt;del&gt;DERBY-4521&lt;/del&gt;&lt;/a&gt; has been fixed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5090&quot; title=&quot;Retrieving BLOB fields sometimes fails&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5090&quot;&gt;&lt;del&gt;DERBY-5090&lt;/del&gt;&lt;/a&gt;. The latter also fixed similar problems with some of the other getXStream methods.&lt;/p&gt;</comment>
                            <comment id="13086856" author="kristwaa" created="Thu, 18 Aug 2011 08:29:35 +0100"  >&lt;p&gt;Since the incorporated issue and this issue have been marked as unsuitable for backport, there is no more work to be done.&lt;/p&gt;

&lt;p&gt;Note that the fix isn&apos;t required for proper operation. The fix makes Derby balk if someone tries to do something that&apos;s not in accordance with the JDBC specification.&lt;/p&gt;</comment>
                            <comment id="13095246" author="unai" created="Thu, 1 Sep 2011 12:57:24 +0100"  >&lt;p&gt;Thank you Kristian for the patch and for the release note!&lt;br/&gt;
+1!!&lt;/p&gt;</comment>
                            <comment id="13685252" author="knutanders" created="Mon, 17 Jun 2013 10:19:28 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12446330">DERBY-4521</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12473741" name="Derby5090.java" size="794" author="knutanders" created="Tue, 15 Mar 2011 22:20:29 +0000"/>
                            <attachment id="12473743" name="Derby5090_2.java" size="1019" author="knutanders" created="Tue, 15 Mar 2011 22:36:48 +0000"/>
                            <attachment id="12473804" name="Derby5090_3.java" size="1142" author="unai" created="Wed, 16 Mar 2011 15:54:49 +0000"/>
                            <attachment id="12484434" name="derby-5090-1a-fix.diff" size="19412" author="kristwaa" created="Tue, 28 Jun 2011 14:33:32 +0100"/>
                            <attachment id="12484435" name="derby-5090-1a-fix.stat" size="385" author="kristwaa" created="Tue, 28 Jun 2011 14:33:32 +0100"/>
                            <attachment id="12485197" name="derby-5090-1b-fix.diff" size="19433" author="kristwaa" created="Tue, 5 Jul 2011 07:01:02 +0100"/>
                            <attachment id="12484436" name="derby-5090-2a-test.diff" size="29621" author="kristwaa" created="Tue, 28 Jun 2011 14:33:32 +0100"/>
                            <attachment id="12484437" name="derby-5090-2a-test.stat" size="165" author="kristwaa" created="Tue, 28 Jun 2011 14:33:32 +0100"/>
                            <attachment id="12485200" name="derby-5090-3a-change_messages.diff" size="30135" author="kristwaa" created="Tue, 5 Jul 2011 07:54:42 +0100"/>
                            <attachment id="12489839" name="releaseNote.html" size="3507" author="kristwaa" created="Tue, 9 Aug 2011 13:48:52 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10363"><![CDATA[Embedded/Client difference]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Mar 2011 15:58:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24641</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    <customfieldvalue key="10427"><![CDATA[Workaround attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0fcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36305</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>