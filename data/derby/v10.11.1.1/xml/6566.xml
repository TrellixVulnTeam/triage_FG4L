<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:12:32 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-6566/DERBY-6566.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-6566] Simplify handling of untyped nulls in CASE and NULLIF expressions</title>
                <link>https://issues.apache.org/jira/browse/DERBY-6566</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The parser translates both CASE and NULLIF expressions into ConditionalNodes, but it represents untyped NULLs differently in the two cases.&lt;/p&gt;

&lt;p&gt;In a CASE expression, any branch that is an untyped NULL, is translated into an UntypedNullConstantNode that&apos;s wrapped in a CastNode that casts the value to CHAR(1). The CastNode is replaced with a cast to the correct type during the bind phase.&lt;/p&gt;

&lt;p&gt;A NULLIF expression is turned into a CASE expression that has a THEN NULL clause. The parser simply creates an UntypedNullConstantNode for that clause, without wrapping it in a CastNode. A CastNode is instead added during the bind phase.&lt;/p&gt;

&lt;p&gt;This slight difference in how NULLs are represented by the parser in the two cases, means that ConditionalNode needs to handle the two cases differently during the bind phase. It would be better if the parser generated NULLs in the same way for the two cases, so that ConditionalNode didn&apos;t need to know if it was generated for a CASE expression or a NULLIF expression.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12713029">DERBY-6566</key>
            <summary>Simplify handling of untyped nulls in CASE and NULLIF expressions</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                            <label>derby_backport_reject_10_10</label>
                    </labels>
                <created>Thu, 8 May 2014 08:31:29 +0100</created>
                <updated>Wed, 21 Jan 2015 00:23:54 +0000</updated>
                            <resolved>Mon, 12 May 2014 08:31:04 +0100</resolved>
                                    <version>11.0.0.0</version>
                                    <fixVersion>10.11.1.1</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13993523" author="knutanders" created="Fri, 9 May 2014 11:51:18 +0100"  >&lt;p&gt;Attaching &lt;span class=&quot;nobr&quot;&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12644099/12644099_d6566-1a.diff&quot; title=&quot;d6566-1a.diff attached to DERBY-6566&quot;&gt;d6566-1a.diff&lt;sup&gt;&lt;img class=&quot;rendericon&quot; src=&quot;https://issues.apache.org/jira/images/icons/link_attachment_7.gif&quot; height=&quot;7&quot; width=&quot;7&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;, which simplifies the handling of untyped NULLs in CASE and NULLIF expressions. The patch removes 245 lines more from the engine code than it adds to it. It is primarily ConditionalNode that&apos;s reduced in size.&lt;/p&gt;

&lt;p&gt;First I&apos;d like to point out that there is one behaviour change introduced by the patch. In Derby versions from 10.3 up to current, CASE expressions where one branch has a typed NULL of a type not compatible with the expression in the other branch, such as &lt;tt&gt;CASE WHEN 1=1 THEN &apos;abc&apos; ELSE CAST(NULL AS SMALLINT) END&lt;/tt&gt;, are silently rewritten during the bind phase so that &lt;tt&gt;CAST(NULL AS SMALLINT)&lt;/tt&gt; becomes &lt;tt&gt;CAST(NULL AS CHAR(3))&lt;/tt&gt;. The THEN branch and the ELSE branch are believed to have compatible types because of this rewrite, and the expression is successfully evaluated.&lt;/p&gt;

&lt;p&gt;With the patch, this rewrite no longer happens, and the behaviour is reverted to what it was in 10.2 and earlier. Such an expression will now cause the following error to be raised:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ERROR 42X89: Types &apos;CHAR&apos; and &apos;SMALLINT&apos; are not type compatible. Neither type is assignable to the other type.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I believe 10.3 and higher accept such expressions because of an unintended fallout caused by the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1620&quot; title=&quot;SQL CASE statement returns ERROR 42X89 when including NULL as a return value&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1620&quot;&gt;&lt;del&gt;DERBY-1620&lt;/del&gt;&lt;/a&gt;. That fix was supposed to make untyped NULLs get their type from the context, but ended up changing the type of already typed NULLs as well.&lt;/p&gt;

&lt;p&gt;Here&apos;s a description of what the patch does:&lt;/p&gt;

&lt;p&gt;1) It makes CASE expression represent untyped NULLs as UntypedNullConstantNodes, which is the same as NULLIF already does. This allows ConditionalNode to handle CASE and NULLIF exactly the same way.&lt;/p&gt;

&lt;p&gt;2) It changes how the parser builds the AST so that a single CASE expression is now represented by a single ConditionalNode.&lt;/p&gt;

&lt;p&gt;Previously, an expression such as &lt;tt&gt;CASE WHEN a THEN b WHEN c THEN d ELSE e END&lt;/tt&gt; would be represented by two nested ConditionalNodes, as if the expression had actually been &lt;tt&gt;CASE WHEN a THEN b ELSE (CASE WHEN c THEN d ELSE e END) END&lt;/tt&gt;. Those two expressions aren&apos;t always completely equivalent.&lt;/p&gt;

&lt;p&gt;Take for example &lt;tt&gt;CASE WHEN a THEN 1 WHEN b THEN NULL ELSE NULL END&lt;/tt&gt;, which would be represented as &lt;tt&gt;CASE WHEN a THEN 1 ELSE (CASE WHEN b THEN NULL ELSE NULL END) END&lt;/tt&gt;. The inner conditional node in the rewritten expression is &lt;tt&gt;CASE WHEN b THEN NULL ELSE NULL&lt;/tt&gt;, which has no information about what the return type is. Because of this, the current code needs some extra complexity to transfer type information from the outer ConditionalNode to the inner ConditionalNode. The patch is able to remove much of this complexity because it has information about all the branches of the CASE expression in one ConditionalNode.&lt;/p&gt;

&lt;p&gt;Another benefit from this change, is that the AST is not so deeply nested, which reduces the risk of getting a StackOverflowError during compilation of CASE expressions with lots of WHEN clauses.&lt;/p&gt;

&lt;p&gt;3) It changes some of the CASE expressions in the ODBC metadata queries. Some CASTs to the incorrect type had sneaked into the queries, and the previously described behaviour change revealed those bugs.&lt;/p&gt;

&lt;p&gt;4) Add a test case to verify that some edge cases still work as before.&lt;/p&gt;


&lt;p&gt;All the regression tests passed with the patch.&lt;/p&gt;</comment>
                            <comment id="13994884" author="jira-bot" created="Mon, 12 May 2014 08:30:48 +0100"  >&lt;p&gt;Commit 1593898 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knutanders&quot; class=&quot;user-hover&quot; rel=&quot;knutanders&quot;&gt;Knut Anders Hatlen&lt;/a&gt; in branch &apos;code/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1593898&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1593898&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6566&quot; title=&quot;Simplify handling of untyped nulls in CASE and NULLIF expressions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6566&quot;&gt;&lt;del&gt;DERBY-6566&lt;/del&gt;&lt;/a&gt;: Simplify handling of untyped nulls in CASE and NULLIF expressions&lt;/p&gt;

&lt;p&gt;Make the parser represent untyped nulls the same way in CASE&lt;br/&gt;
expressions as in NULLIF expressions, so that ConditionalNode can&lt;br/&gt;
handle the two kinds of expressions uniformly.&lt;/p&gt;

&lt;p&gt;Make the parser create a single ConditionalNode for each CASE&lt;br/&gt;
expression, instead of creating a tree of ConditionalNodes for a&lt;br/&gt;
single CASE expression.&lt;/p&gt;</comment>
                            <comment id="13995071" author="chaase3" created="Mon, 12 May 2014 14:24:26 +0100"  >&lt;p&gt;If there is a visible behavior change, is a release note needed? &lt;/p&gt;</comment>
                            <comment id="13995139" author="knutanders" created="Mon, 12 May 2014 16:04:13 +0100"  >&lt;p&gt;Yes, let&apos;s add a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="14005877" author="knutanders" created="Thu, 22 May 2014 13:41:32 +0100"  >&lt;p&gt;Attaching a release note for this issue.&lt;/p&gt;</comment>
                            <comment id="14007301" author="dagw" created="Fri, 23 May 2014 17:14:28 +0100"  >&lt;p&gt;Release note looks good; +1&lt;/p&gt;</comment>
                            <comment id="14010036" author="mikem" created="Tue, 27 May 2014 19:17:42 +0100"  >&lt;p&gt;due to behavior change and possible application changes necessary for change marking that this should not be backported to 10.10.&lt;/p&gt;

&lt;p&gt;review of list of issues fixed in 10.11 but not in 10.10 for possible compatibility issues in upcoming release.&lt;/p&gt;

&lt;p&gt;This change does present a possible incompatibility, and possible &lt;br/&gt;
application changes are highlighted in the release note.  &lt;/p&gt;</comment>
                            <comment id="14010045" author="mikem" created="Tue, 27 May 2014 19:21:40 +0100"  >&lt;p&gt;Is there any soft vs hard upgrade issue with this change? &lt;/p&gt;

&lt;p&gt;It looks to me like this is just a runtime change, so a soft upgrader will get new behavior when running&lt;br/&gt;
new software, but if they revert to old software they will get original behavior - right?&lt;/p&gt;</comment>
                            <comment id="14010985" author="knutanders" created="Wed, 28 May 2014 10:58:54 +0100"  >&lt;p&gt;That&apos;s correct. This change only streamlines how ConditionalNode.bindExpression() infers the type of an untyped NULL. It&apos;s just a compiler change. No change to the stored format.&lt;/p&gt;

&lt;p&gt;The possible compatibility issue is that the new logic does not attempt to infer the type of an already typed NULL. So if you for example say WHEN a=b THEN CAST(NULL AS BLOB), and the context requires the result to be an INTEGER, we now raise a type-mismatch error instead of silently rewriting CAST(NULL AS BLOB) to CAST(NULL AS INTEGER). If you soft downgrade to an earlier version, you&apos;ll get the old behaviour again.&lt;/p&gt;

&lt;p&gt;I agree that this change should not be backported.&lt;/p&gt;</comment>
                            <comment id="14284886" author="myrna" created="Wed, 21 Jan 2015 00:23:54 +0000"  >&lt;p&gt;bulk change to close all issues resolved but not closed and not changed since June 1, 2014.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12714167">DERBY-6577</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12644099" name="d6566-1a.diff" size="35093" author="knutanders" created="Fri, 9 May 2014 11:51:18 +0100"/>
                            <attachment id="12646288" name="releaseNote.html" size="5038" author="knutanders" created="Thu, 22 May 2014 13:41:32 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 May 2014 07:30:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391345</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hzp9a7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391565</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>