<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:13 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3343/DERBY-3343.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3343] Subsequent calls to PreparedStatement cause SQLIntegrityConstraintViolationException on column that is  &quot;Generated always&quot;</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3343</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following series of statements fails:&lt;/p&gt;

&lt;p&gt;j&amp;gt; connect &apos;jdbc:derby:test;create=true&apos;;&lt;br/&gt;
ij&amp;gt; create table t (id int primary key generated always as identity);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; prepare p as &apos;insert into t(id) values (default)&apos;;&lt;br/&gt;
ij&amp;gt; execute p;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; execute p;&lt;br/&gt;
ERROR 23505: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL080123140906700&apos; defined on &apos;T&apos;.&lt;/p&gt;

&lt;p&gt;There is a more detailed discussion about it here: &lt;a href=&quot;http://www.nabble.com/Generate-Always-and-SQLIntegrityConstraintViolationException-td15012038.html#a15018054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Generate-Always-and-SQLIntegrityConstraintViolationException-td15012038.html#a15018054&lt;/a&gt;&lt;/p&gt;</description>
                <environment>gentoo linux amd64</environment>
        <key id="12386914">DERBY-3343</key>
            <summary>Subsequent calls to PreparedStatement cause SQLIntegrityConstraintViolationException on column that is  &quot;Generated always&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dyret">Dyre Tjeldvoll</assignee>
                                    <reporter username="wbecker">William Becker</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Jan 2008 03:12:35 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:19 +0000</updated>
                            <resolved>Sat, 26 Jan 2008 16:07:55 +0000</resolved>
                                    <version>10.3.2.1</version>
                                    <fixVersion>10.3.3.0</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12561612" author="dyret" created="Wed, 23 Jan 2008 08:49:52 +0000"  >&lt;p&gt;Marking as regression. Caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12561613" author="dyret" created="Wed, 23 Jan 2008 08:50:44 +0000"  >&lt;p&gt;Regression&lt;/p&gt;</comment>
                            <comment id="12561615" author="dyret" created="Wed, 23 Jan 2008 09:16:04 +0000"  >&lt;p&gt;Based on the comments so far, I&apos;m guessing that the way to fix this is to extend HasVariantValueNodeVistor.visit(Visitable v) with special handling of ResultColumn objects. It doesn&apos;t seem reasonable to make all NumericConstantNodes be not constant, and ResultColumn appears to be where information about default value/auto-increment is kept. &lt;/p&gt;

&lt;p&gt;ResultColumn has, what appears to be, four relevant predicates:&lt;/p&gt;

&lt;p&gt;isAutoincrement()&lt;/p&gt;

&lt;p&gt;isAutoincrementGenerated()&lt;/p&gt;

&lt;p&gt;isDefaultColumn()&lt;/p&gt;

&lt;p&gt;isGenerated()&lt;/p&gt;

&lt;p&gt;For the failing example, only isAutoincrementGenerated() returns true.&lt;br/&gt;
HasVariantValueNodeVistor.visit(Visitable v)  does not consider any of them.&lt;/p&gt;</comment>
                            <comment id="12561630" author="knutanders" created="Wed, 23 Jan 2008 10:55:29 +0000"  >&lt;p&gt;The logic in ResultColumn.getOrderableVariantType() looks incorrect. The attached patch makes it return Qualifier.VARIANT for all auto-increment generated columns. I haven&apos;t run any regression tests, but it makes the repro run without failure in my sandbox.&lt;/p&gt;</comment>
                            <comment id="12561647" author="dyret" created="Wed, 23 Jan 2008 12:08:49 +0000"  >&lt;p&gt;I agree, but I&apos;m also worried about what happens when some of the other predicates are true. Will that ever happen, and could it cause problems? We should probably have some more test cases for default values that change between executions, but I don&apos;t know all the different ways in which this could happen.&lt;/p&gt;</comment>
                            <comment id="12561727" author="dyret" created="Wed, 23 Jan 2008 16:07:23 +0000"  >&lt;p&gt;Attaching an ij script (defaults.sql) which tests most of the legal default/autogen cases, (did not try to modify user between executions and did not test current time and current date). The error appears for all GENERATED AS IDENTITY columns when the default is specified explicitly, e.g. INSERT INTO T(I) VALUES(default) fails, but INSERT INTO T(X) VALUES(&amp;lt;something&amp;gt;) works correctly. INT, SMALLINT and BIGINT all have the same problem.&lt;/p&gt;

&lt;p&gt;Knut&apos;s patch appears to fix all these cases.&lt;/p&gt;</comment>
                            <comment id="12561821" author="dyret" created="Wed, 23 Jan 2008 21:04:37 +0000"  >&lt;p&gt;I just realized that the behavior I described in my previous comment matches perfectly with the problem pointed out by Knut. Presumably ResultColumn.expression is non-null exactly when there is no VALUES(default) clause. Which, in turn,  explains why the isAutoincrementGenerated() predicate only gets evaluated when there is no explicit VALUES(default) clause. &lt;/p&gt;</comment>
                            <comment id="12561990" author="knutanders" created="Thu, 24 Jan 2008 09:35:22 +0000"  >&lt;p&gt;The comment in ResultColumn.getOrderableVariantType() says &quot;note that there is no expression associated with an autoincrement column in an insert statement.&quot; As noted by Dyre, this statement is false, as values(default) will cause a non-null expression also when the column is auto-generated. I therefore think d3343.diff is a correct fix (it should also update the incorrect comment). The tests (derbyall + suites.All) ran cleanly.&lt;/p&gt;

&lt;p&gt;As to the predicates that are false, I think they could be explained. The default node is replaced with a placeholder node for the auto-generated value during the bind phase, so it is correct that isDefaultColumn() returns false. isAutoincrement() seems to be used for columns that reference an auto-increment column in a table in a select statement, whereas values(default) doesn&apos;t actually reference a column in a table. isGenerated() seems to be used for a different kind of generated columns than isAutoincrementGenerated() (aggregated columns and internal helpers like row location columns).&lt;/p&gt;</comment>
                            <comment id="12562107" author="dyret" created="Thu, 24 Jan 2008 15:47:10 +0000"  >&lt;p&gt;Given that information, I think I&apos;ll merge d3343.diff with a JUnit version of (parts of) the ij-script I uploaded, so that we get a regression test for the fix included in the patch.&lt;/p&gt;</comment>
                            <comment id="12562391" author="dyret" created="Fri, 25 Jan 2008 08:05:24 +0000"  >&lt;p&gt;Attaching new patch (v2) which fixes the incorrect comment, and adds regression tests. All tests (including the new regression tests pass).&lt;/p&gt;</comment>
                            <comment id="12562396" author="knutanders" created="Fri, 25 Jan 2008 08:23:57 +0000"  >&lt;p&gt;Looks good to me. Two nits:&lt;/p&gt;

&lt;p&gt;1) There&apos;s a mismatch between the parameter name and the @param tag in testGeneratedIdentity() (generateType vs generatedType)&lt;/p&gt;

&lt;p&gt;2) I think it&apos;s best not to have cleanup code inside the test cases, like the try/finally block in testGeneratedIdentity(), since it tends to obscure failures. Since the test is already wrapped in a CleanDatabaseTestSetup, perhaps you could just make sure each invocation of the method uses a unique table name and rely on the decorator to do the cleanup.&lt;/p&gt;</comment>
                            <comment id="12562426" author="dyret" created="Fri, 25 Jan 2008 10:24:21 +0000"  >&lt;p&gt;Attaching another patch (v3) which fixes the javadoc typo and removes the try-finally cleanup. It turns out that it was redundant, since setUp() turns autocommit off, and tearDown() issues a rollback(). &lt;/p&gt;

&lt;p&gt;I do, however, think that the assertion that using a try-finally block will obscure failures is not true in general. To test it I did the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reverted the changes to ResultColumn&lt;/li&gt;
	&lt;li&gt;set autocommit to true&lt;/li&gt;
	&lt;li&gt;introduced a syntax error in the drop statement in the finally block&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The drop-error was masked as expected but the call stack from JUnit was correct and showing the correct error message (duplicate key).&lt;br/&gt;
The next testcase failed because table T already existed, as expected.&lt;/p&gt;

&lt;p&gt;It is entirely possible that using a try-finally block like this is &quot;not the JUnit way&quot;. I would not know.&lt;/p&gt;

&lt;p&gt;I have not run any other tests with this (v3) patch.&lt;/p&gt;</comment>
                            <comment id="12562430" author="knutanders" created="Fri, 25 Jan 2008 10:47:08 +0000"  >&lt;p&gt;Thanks Dyre, +1 to commit.&lt;/p&gt;

&lt;p&gt;&amp;gt; the assertion that using a try-finally block will obscure failures is not true in general.&lt;br/&gt;
(...)&lt;br/&gt;
&amp;gt; The drop-error was masked as expected but the call stack from JUnit was correct and showing the correct error message (duplicate key).&lt;br/&gt;
&amp;gt; The next testcase failed because table T already existed, as expected. &lt;/p&gt;

&lt;p&gt;A syntax error in one test case being reported as &quot;table T already exists&quot; in another test case sounds obscure to me... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12562437" author="dyret" created="Fri, 25 Jan 2008 11:05:57 +0000"  >&lt;p&gt;But isn&apos;t that exactly what would happen with your solution if someone inadvertently tried to use a table name already used by another test case...?&lt;/p&gt;</comment>
                            <comment id="12562447" author="knutanders" created="Fri, 25 Jan 2008 11:33:25 +0000"  >&lt;p&gt;Yes, but in that case the problem is that the table exists, not that drop table failed, so &quot;table T already exists&quot; would actually be an accurate message. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I agree, of course, that it is certainly possible to use try/finally without obscuring the error reporting, and that it is very unlikely that the try/finally block you wrote would ever cause any problem. However, I do think that the test case became easier to read now that the cleanup code was moved out.&lt;/p&gt;</comment>
                            <comment id="12562468" author="dyret" created="Fri, 25 Jan 2008 12:30:17 +0000"  >&lt;p&gt;Committed revision 615203.&lt;/p&gt;</comment>
                            <comment id="12562561" author="dyret" created="Fri, 25 Jan 2008 16:37:10 +0000"  >&lt;p&gt;I managed to commit this with a log message which reference a different jira number (thanks to Knut for noticing). I have updated the log comment (in case anyone wonders why the output from svn log has changed).&lt;/p&gt;</comment>
                            <comment id="12562586" author="dyret" created="Fri, 25 Jan 2008 17:20:36 +0000"  >&lt;p&gt;Adding fix-version 10.3.2.2 since the other &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-827&quot; title=&quot;Performance can be improved by re-using language ResultSets across Activation executions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-827&quot;&gt;&lt;del&gt;DERBY-827&lt;/del&gt;&lt;/a&gt; regressions have been merged to 10.3&lt;/p&gt;</comment>
                            <comment id="12562872" author="dyret" created="Sat, 26 Jan 2008 16:07:18 +0000"  >&lt;p&gt;Merged to 10.3 in revision 615458.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12327853">DERBY-827</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12373817" name="d3343.diff" size="905" author="knutanders" created="Wed, 23 Jan 2008 10:55:29 +0000"/>
                            <attachment id="12374009" name="d3343.v2.diff" size="4065" author="dyret" created="Fri, 25 Jan 2008 08:05:11 +0000"/>
                            <attachment id="12374019" name="d3343.v3.diff" size="3863" author="dyret" created="Fri, 25 Jan 2008 10:24:21 +0000"/>
                            <attachment id="12373844" name="defaults.sql" size="4822" author="dyret" created="Wed, 23 Jan 2008 16:07:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10420"><![CDATA[Regression]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jan 2008 08:49:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23582</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ls7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37347</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>