<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:37:24 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5680/DERBY-5680.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5680] indexStat daemon processing tables over and over even when there are no changes in the tables</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5680</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I think there is something wrong with the indexStats.     &lt;/p&gt;

&lt;p&gt;The problem happens on many tables in the database.   &lt;br/&gt;
None of these tables are changing however, no inserts or deletes or updates.  They are being queried, however.  &lt;/p&gt;

&lt;p&gt;Here is one such table.&lt;/p&gt;

&lt;p&gt;Here is the statistics for this table:&lt;/p&gt;

&lt;p&gt;Table (Index)     2              3&lt;br/&gt;
ACCOUNTTABLE_CONFIG_BUNDLE (SQL081029110443810)          numunique= 38390 numrows= 38390     2012-03-30 13:00:26.84&lt;br/&gt;
ACCOUNTTABLE_CONFIG_BUNDLE (SQL100922215819290)          numunique= 38390 numrows= 38390     2012-03-30 13:00:26.917&lt;/p&gt;

&lt;p&gt;There are in fact 38390 rows in the table.&lt;/p&gt;

&lt;p&gt;Here is some of the indexStat trace:&lt;/p&gt;

&lt;p&gt;Fri Mar 30 12:47:12 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_43,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=38390, i-est=2355 =&amp;gt; cmp=2.7912562815443245&amp;#93;&lt;/span&gt; (queueSize=12)&lt;br/&gt;
Fri Mar 30 12:47:48 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL081029110443810 (fc33890d-011d-491f-3d8c-0000376d74d3): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:47:48 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL100922215819290 (75608675-012b-3c38-b55c-000043ea6398): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:47:48 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: scan durations (c30625=91ms,c30625=98ms)&lt;br/&gt;
Fri Mar 30 12:47:48 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: generation complete (210 ms)&lt;br/&gt;
&lt;br/&gt;
Fri Mar 30 12:47:49 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_44,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=38390, i-est=2355 =&amp;gt; cmp=2.7912562815443245&amp;#93;&lt;/span&gt; (queueSize=19)&lt;br/&gt;
Fri Mar 30 12:48:25 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL081029110443810 (fc33890d-011d-491f-3d8c-0000376d74d3): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:48:25 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL100922215819290 (75608675-012b-3c38-b55c-000043ea6398): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:48:25 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: scan durations (c30625=93ms,c30625=95ms)&lt;br/&gt;
Fri Mar 30 12:48:25 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: generation complete (211 ms)&lt;br/&gt;
Fri Mar 30 12:48:25 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_50,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=38390, i-est=2355 =&amp;gt; cmp=2.7912562815443245&amp;#93;&lt;/span&gt; (queueSize=18)&lt;br/&gt;
&lt;br/&gt;
Fri Mar 30 12:48:57 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL081029110443810 (fc33890d-011d-491f-3d8c-0000376d74d3): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:48:57 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL100922215819290 (75608675-012b-3c38-b55c-000043ea6398): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:48:57 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: generation complete (243 ms)&lt;/p&gt;

&lt;p&gt;Fri Mar 30 12:49:27 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_56,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=38390, i-est=2355 =&amp;gt; cmp=2.7912562815443245&amp;#93;&lt;/span&gt; (queueSize=20)&lt;br/&gt;
Fri Mar 30 12:49:36 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL081029110443810 (fc33890d-011d-491f-3d8c-0000376d74d3): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:49:37 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: wrote stats for index SQL100922215819290 (75608675-012b-3c38-b55c-000043ea6398): rows=38390, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;38390&amp;#93;&lt;/span&gt;&lt;br/&gt;
Fri Mar 30 12:49:37 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: scan durations (c30625=111ms,c30625=108ms)&lt;br/&gt;
Fri Mar 30 12:49:37 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: generation complete (238 ms)&lt;br/&gt;
&lt;br/&gt;
Fri Mar 30 12:49:37 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;DRDAConnThread_49,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;PKG_9145E_V1&quot;.&quot;ACCOUNTTABLE_CONFIG_BUNDLE&quot;: update scheduled, reason=&lt;span class=&quot;error&quot;&gt;&amp;#91;t-est=38390, i-est=2355 =&amp;gt; cmp=2.7912562815443245&amp;#93;&lt;/span&gt; (queueSize=18)&lt;/p&gt;


&lt;p&gt;As can be seen, the &quot;i-est&quot; appears to be wrong and is used over and over even though the statistics for the indexes have been updated.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12548851">DERBY-5680</key>
            <summary>indexStat daemon processing tables over and over even when there are no changes in the tables</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="bbergquist">Brett Bergquist</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Mar 2012 18:20:54 +0100</created>
                <updated>Wed, 3 Sep 2014 09:31:22 +0100</updated>
                            <resolved>Fri, 28 Jun 2013 19:25:41 +0100</resolved>
                                    <version>10.8.2.2</version>
                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.3.3</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13244198" author="kristwaa" created="Mon, 2 Apr 2012 15:00:41 +0100"  >&lt;p&gt;Attaching patch 1a, which makes the istat daemon drop any orphaned statistics if it find any when processing the index cardinality statistics for a given base table.&lt;br/&gt;
Maybe the logging needs to be improved?&lt;br/&gt;
(i.e. log to derby.log even if istat logging is off, also need to deal with a log entry when running system procedure explicitly).&lt;/p&gt;

&lt;p&gt;Patch ready for initial review.&lt;br/&gt;
Not sure how to test this once &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; has been fixed.&lt;br/&gt;
Tested manually using the repro provided by Brett under the mentioned issue.&lt;/p&gt;</comment>
                            <comment id="13244230" author="bbergquist" created="Mon, 2 Apr 2012 15:50:41 +0100"  >&lt;p&gt;Applied the patch to Derby 10.8.2.2 source manually and am getting:&lt;/p&gt;


&lt;p&gt;Loaded com.canoga.derby.fcn.NpaSamResultsTableFunction from database jar &quot;PCS_V1&quot;.&quot;PCSDERBY&quot;&lt;br/&gt;
Mon Apr 02 10:52:46 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;CORE_V1&quot;.&quot;MANAGED_HARDWARE&quot;: wrote stats for index SQL100922220307480 (36370979-012b-3c38-b55c-000043ea6398): rows=28639, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;28639&amp;#93;&lt;/span&gt;&lt;br/&gt;
Mon Apr 02 10:52:46 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;CORE_V1&quot;.&quot;MANAGED_HARDWARE&quot;: wrote stats for index SQL100922220413140 (07558c64-012b-3c38-b55c-000043ea6398): rows=28639, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;28639&amp;#93;&lt;/span&gt;&lt;br/&gt;
Mon Apr 02 10:52:46 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat} &quot;CORE_V1&quot;.&quot;MANAGED_HARDWARE&quot;: wrote stats for index MANAGED_HARDWARE_IX_1 (b0c8433f-0133-8aa5-52b7-000043ea6398): rows=28639, card=&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;br/&gt;
Mon Apr 02 10:52:46 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; {istat}
&lt;p&gt; &quot;CORE_V1&quot;.&quot;MANAGED_HARDWARE&quot;: scan durations (c25409=135ms,c25409=80ms,c46241=107ms,c59265=176ms)&lt;br/&gt;
Mon Apr 02 10:52:46 EDT 2012 Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;index-stat-thread,5,main&amp;#93;&lt;/span&gt; &lt;/p&gt;
{istat}
&lt;p&gt; runtime exception during normal operation&lt;br/&gt;
org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:98)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.vetIndexCardinalityStats(IndexStatisticsDaemonImpl.java:1223)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(IndexStatisticsDaemonImpl.java:531)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatistics(IndexStatisticsDaemonImpl.java:325)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.processingLoop(IndexStatisticsDaemonImpl.java:801)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.run(IndexStatisticsDaemonImpl.java:717)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:662)&lt;br/&gt;
(Skipping thread dump because of insufficient permissions:&lt;br/&gt;
java.security.AccessControlException: access denied (java.lang.RuntimePermission getStackTrace))&lt;/p&gt;


&lt;p&gt;Exception in thread &quot;index-stat-thread&quot; org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:98)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.vetIndexCardinalityStats(IndexStatisticsDaemonImpl.java:1223)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(IndexStatisticsDaemonImpl.java:531)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatistics(IndexStatisticsDaemonImpl.java:325)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.processingLoop(IndexStatisticsDaemonImpl.java:801)&lt;br/&gt;
	at org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.run(IndexStatisticsDaemonImpl.java:717)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:662)&lt;br/&gt;
(Skipping thread dump because of insufficient permissions:&lt;br/&gt;
java.security.AccessControlException: access denied (java.lang.RuntimePermission getStackTrace))&lt;/p&gt;

</comment>
                            <comment id="13244235" author="bbergquist" created="Mon, 2 Apr 2012 16:01:56 +0100"  >&lt;p&gt;I commented out the ASSERT and tried it again.  It appears to be working correctly.  I can see the orphan statistics being dropped.  I shutdown the database and restarted and there are no more orphans being detected the second time around.&lt;/p&gt;

&lt;p&gt;May the asserted condition is not valid?&lt;/p&gt;
</comment>
                            <comment id="13244355" author="mikem" created="Mon, 2 Apr 2012 18:29:57 +0100"  >&lt;p&gt;one way to test this without having to hack anything into the catalog is to turn it into an upgrade test and create the bad rows using a past release with the bug in it.  Even if we backport the eventual fix, those old versions will always generate the bad row.&lt;/p&gt;</comment>
                            <comment id="13244421" author="mikem" created="Mon, 2 Apr 2012 19:36:03 +0100"  >&lt;p&gt;I reviewed the change, could use a few more comments for those of us not familar with data design of the statistics catalog, but I would&lt;br/&gt;
have expected it fix the problem.  Not sure what the issue with the assert is, there is a comment about when we turn on write mode, but&lt;br/&gt;
not sure when it is expected to get turned off - maybe at commit?&lt;/p&gt;

&lt;p&gt;I was hoping the change could be less invasive by just dropping all statistics even bad ones upfront with no checking, ie. not have to reget all the valid rows and recheck them always.  But I see the current&lt;br/&gt;
code logic wants to drop statistics one at a time, and that were problems trying to invalidate all at once which might be similar to problems with dropping all rows at once.&lt;/p&gt;

&lt;p&gt;It is not part of this change, but is there a possible problem with when invalidateStatements is called?   Unless you need it for some&lt;br/&gt;
locking reason it would seem better to invalidate after you do the update than in the middle.&lt;br/&gt;
Can queries sneak in between when a statistic is dropped and when you insert the new updated statistic?  If so it would be another reason&lt;br/&gt;
not to drop them all up front as it would increase the window.  brett was reporting some wierdness with working queries getting recompiled&lt;br/&gt;
to bad plans.  I think we can think of his system as always having concurrent processors availble to run statements constantly, so they&lt;br/&gt;
can almost instantaneously start recompiling once you invalidate their plan.  Now if they can get in after the invalidate, after the drop but before&lt;br/&gt;
the insert then they probably have worse stats (ie. no stats), vs the old stats.&lt;/p&gt;</comment>
                            <comment id="13245700" author="bbergquist" created="Tue, 3 Apr 2012 21:32:46 +0100"  >&lt;p&gt;I have run a patched version of 10.8.2.2 (without the assert) overnight on a copy of the production database where the problem was occurring.  It has worked fine, cleaned up the orphan statistics rows, and now only does the job it should.  Just some feedback from testing.&lt;/p&gt;
</comment>
                            <comment id="13246716" author="kristwaa" created="Wed, 4 Apr 2012 21:46:10 +0100"  >&lt;p&gt;Thanks a lot for testing the patch, Brett.&lt;/p&gt;

&lt;p&gt;I&apos;m testing some other improvements under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5684&quot; title=&quot;Explore possible istat daemon improvements and optimizations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5684&quot;&gt;DERBY-5684&lt;/a&gt;, but it will take a while before any of it is production ready &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; There&apos;s a patch there, but I&apos;m not sure how well it will do out in the wild...&lt;/p&gt;</comment>
                            <comment id="13258752" author="mamtas" created="Sat, 21 Apr 2012 03:57:18 +0100"  >&lt;p&gt;Apologies up front if this has already been discussed. &lt;/p&gt;

&lt;p&gt;But I was wondering if all the stats could be dropped up front during hard upgrade time(this will take care of orphaned stats. If there is no way of clearing everything in the statistics table, then we could drop stats one table at a time at the time of hard upgrade). &lt;/p&gt;

&lt;p&gt;Statistic creation deamon will have to collect stats again since we have dropped all the stats at upgrade time but since stat gathering happens in background, it probably won&apos;t be very noticeable. &lt;/p&gt;

&lt;p&gt;We know of one case &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; where a drop constraint can leave orphaned stats row. There is already a patch on that issue which will make sure that we do not have such stats row left behind. If that is the only case where orphaned stats get left behind, then we shouldn&apos;t run into orphaned stats again on an upgraded database.&lt;/p&gt;</comment>
                            <comment id="13258842" author="bbergquist" created="Sat, 21 Apr 2012 13:13:38 +0100"  >&lt;p&gt;I don&apos;t like arbitrarily dropping the stats at hard upgrade time.   Statistics are needed when tables have a large number of rows and it does take time and resources to recreate them.  So while in the general case of testing with a few thousand rows, this may be acceptable, in my particular case with tables with many millions of rows being actively inserted and queried upon, I don&apos;t think this is best.&lt;/p&gt;

&lt;p&gt;Cleaning up orphaned statistics tables that are not being used but triggering the indexStat daemon is acceptable but blindly dropping all statistics is not I don&apos;t believe.&lt;/p&gt;</comment>
                            <comment id="13278871" author="kristwaa" created="Fri, 18 May 2012 16:34:41 +0100"  >&lt;p&gt;Attaching patch 1b, which adds functionality to the update statistics code to drop disposable statistics entries.&lt;/p&gt;

&lt;p&gt;For now disposable statistics consist only of orphaned rows, but when &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; goes in there will also be entries for single-column primary keys. For the check and dropping to take place, either the istat daemon must kick in or the SYSCS_UPDATE_STATISTICS system procedure must be run with null as the argument for which index to update (i.e. tell it to update statistics for all indexes). This restriction allows for simpler login when identifying disposable stats: drop all statistics entries we won&apos;t update.&lt;/p&gt;

&lt;p&gt;Description of the changes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;impl/sql/execute/AlterTableConstantAction&lt;br/&gt;
   Enable identification of disposable stats when no index is specified when invoking SYSCS_UPDATE_STATISTICS.&lt;/li&gt;
	&lt;li&gt;impl/services/daemon/IndexStatisticsDaemonImpl&lt;br/&gt;
   Added a property to allow users to force the old behavior.&lt;br/&gt;
   Added logic to not identify disposable statistics on old databases (soft upgrade).&lt;br/&gt;
   Made the same change as in AlterTableConstantAction (pass null).&lt;br/&gt;
   Added the method logAlways.&lt;/li&gt;
	&lt;li&gt;iapi/reference/Property&lt;br/&gt;
   Added property &quot;derby.storage.indexStats.debug.forceOldBehavior&quot;.&lt;/li&gt;
	&lt;li&gt;functionTests/tests/lang/UpdateStatisticsTest&lt;br/&gt;
   Added testDisposableStatsEagerness, which verifies that the new code doesn&apos;t remove entries it should leave alone.&lt;br/&gt;
   There will be more tests as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; (upgrade test + testing the forceOldBehavior property).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To sum up, all existing tests should continue to work with this patch. This is not the case with what&apos;s going in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;, as that patch will reduce the number of statistics entries for tables with single-column primary keys.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;br/&gt;
I plan to commit pretty soon, so if anyone has planned to review the code it would be nice if it happened sooner than later &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks to Dag who has already reviewed the prototype code under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5684&quot; title=&quot;Explore possible istat daemon improvements and optimizations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5684&quot;&gt;DERBY-5684&lt;/a&gt;. Since I decided to drop what I was working on for foreign indexes, which I now believe wasn&apos;t doing the correct thing, I also decided to drop the class IndexStatisticsAnalyzer. I found it to be a bit heavy-weight already, but with the second optimization pulled out it was simply just too much (over-engineered).&lt;/p&gt;</comment>
                            <comment id="13279375" author="dagw" created="Sat, 19 May 2012 01:49:49 +0100"  >&lt;p&gt;Thanks, Kristian. Went through the code and it looks right to me. One question:&lt;/p&gt;

&lt;p&gt;updateIndexStatsMinion:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Are these lined needed (I know they are not wrong, but possibly redundant)?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;                    if (conglomerateNumber&lt;span class=&quot;error&quot;&gt;&amp;#91;ci&amp;#93;&lt;/span&gt; == -1) &lt;/p&gt;
{
                        continue;
                    }</comment>
                            <comment id="13279607" author="kristwaa" created="Sat, 19 May 2012 20:32:43 +0100"  >&lt;p&gt;Thanks, Dag.&lt;/p&gt;

&lt;p&gt;You&apos;re right about the check being redundant, because objectUUID&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; will be null. I&apos;ll correct this after the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; is in, as it will include a better test for this code (I&apos;ll first force old behavior to generate stats for single-column primary keys and then run with the new behavior to confirm that they&apos;re dropped). There will also be an upgrade test making sure the orphaned row caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; is dropped.&lt;/p&gt;

&lt;p&gt;I committed patch 1b to trunk with revision 1340549.&lt;br/&gt;
I will not mark this issue as resolved before the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;, which includes more tests, is committed.&lt;/p&gt;</comment>
                            <comment id="13280156" author="knutanders" created="Mon, 21 May 2012 14:58:23 +0100"  >&lt;p&gt;Should we call the property &quot;keepDisposableStats&quot; or something more descriptive instead of &quot;forceOldBehavior&quot;? Just so that we don&apos;t have to call the next property &quot;forceNotQuiteSoOldBehavior&quot;... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13280193" author="kristwaa" created="Mon, 21 May 2012 15:50:51 +0100"  >&lt;p&gt;We can do that, I&apos;ll append it to the todo-list &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Note that I do not plan to document this property. Regardless of whether the feature demonstrates it usefulness or not (which is a more relevant question for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;), the property will be removed in a future release. In the former case it will simply be removed, in the latter case it will be removed together with the feature itself.&lt;/p&gt;</comment>
                            <comment id="13281212" author="kristwaa" created="Tue, 22 May 2012 22:03:26 +0100"  >&lt;p&gt;Attaching patch 2a, which removes the redundant check Dag spotted. The tests passed without the check.&lt;/p&gt;

&lt;p&gt;Committed patch 2a to trunk with revision 1341622.&lt;/p&gt;</comment>
                            <comment id="13281219" author="kristwaa" created="Tue, 22 May 2012 22:15:04 +0100"  >&lt;p&gt;Attaching patch 3a, which renames the debug property to give it a more descriptive name as suggested by Knut Anders.&lt;/p&gt;

&lt;p&gt;Committed to trunk with revision 1341629.&lt;/p&gt;</comment>
                            <comment id="13281524" author="kristwaa" created="Wed, 23 May 2012 12:13:15 +0100"  >&lt;p&gt;Resolving issue, the outstanding tests have been committed under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13692125" author="mikem" created="Mon, 24 Jun 2013 17:38:42 +0100"  >&lt;p&gt;Is this fix ok to backport to 10.8?  I think &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; should not be backported as it is a feature, so most of need for this issue is not in 10.8.  But&lt;br/&gt;
I think there are some cases in 10.8 that are fixed by this, correct?&lt;/p&gt;</comment>
                            <comment id="13693301" author="mikem" created="Tue, 25 Jun 2013 20:28:59 +0100"  >&lt;p&gt;much of the discussion about this issue happened on the list before the bug was created.  Here is a link to the&lt;br/&gt;
beginning of the discussion (would of liked to post a link to the whole thread but could not figure out how to do that), i believe&lt;br/&gt;
the net is that one part of the istat daemon code finds the orphan stat row and recognizes that the number of rows is bad, but the actual&lt;br/&gt;
update code just updates the good rows - thus the output looks like it is updating all rows to same values.  I might be good to enhance the&lt;br/&gt;
istat debugging code to print out before info for all stats so it is obvious we are running into the bug.:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/201203.mbox/%3C97EB699F861AD841B5908C7CA9C9565602065E174BD4%40VSERVER1.canoga.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/201203.mbox/%3C97EB699F861AD841B5908C7CA9C9565602065E174BD4%40VSERVER1.canoga.com%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13695135" author="mamtas" created="Thu, 27 Jun 2013 23:48:23 +0100"  >&lt;p&gt;I have been able to backport(with some issues as explained below) the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, I hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. I think the intention is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Also, if my understanding is correct, then we can end up with orphaned/disposable stats for &lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). This has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) This fix is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is&lt;br/&gt;
store.KeepDisposableStatsPropertyTest. I tried copying that test from trunk to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted. Just a thought.&lt;/p&gt;

&lt;p&gt;I have attached the patch for 10.8 backport and KeepDisposableStatsPropertyTest (although it doesn&apos;t really test the property in it&apos;s true sense because of the absence of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fix, but may be we can use &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; to create test cases in upgrade suite).&lt;/p&gt;

&lt;p&gt;I am running the junit suite and derbyall with the patch. Will post the results of it when it is done. &lt;/p&gt;

&lt;p&gt;I haven&apos;t spent too  much time understanding the impact of the backport on 10.8 codeline, ie can it break something else? My gut feeling based on the time I have spent so far is that it should work ok in 10.8. I will look more into it. I will appreciate if others can also take a look and share their thoughts about 10.8 backport.&lt;/p&gt;</comment>
                            <comment id="13695158" author="kmarsden" created="Fri, 28 Jun 2013 00:29:00 +0100"  >&lt;p&gt;Thanks Mamta for backporting this.&lt;/p&gt;

&lt;p&gt;I think that if we are backporting to 10.8 we should also drop the disposable indexes for pre 10.8 databases, so that databases that have not been hard upgraded will get the fix.&lt;/p&gt;

&lt;p&gt;I have a database with the problem that is still in an earlier format and soft upgraded to 10.8 that needs to have the disposable indexes dropped. I think, because the database is in a prior version format, the fix does not kick in.&lt;/p&gt;

&lt;p&gt;It makes sense for 10.9 to have the version check for the newly disposable &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; disposables, but I thiink the just wrong ones resulting from &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; or something similar should always go. I think for the 10.8 fix it will be enough to just remove the check, but perhaps  10.9 and 10.10 will have to be changed to differentiate or maybe it is ok even for those to drop all the disposables too?&lt;/p&gt;</comment>
                            <comment id="13695170" author="kmarsden" created="Fri, 28 Jun 2013 00:58:27 +0100"  >&lt;p&gt;With hard upgrade, the disposables get dropped properly and index statistics does not kick in.   Now that I think about it, since soft upgrade is also a problem for 10.9 and later versions, maybe we should commit your change as a clean backport of this fix and then open a new issue for soft upgrade dropping disposables that are remnants of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;, etc.&lt;/p&gt;</comment>
                            <comment id="13695241" author="mamtas" created="Fri, 28 Jun 2013 04:31:45 +0100"  >&lt;p&gt;Thanks for reviewing the patch, Kathey. I will wait until tomorrow in case if there are any more feedbacks.&lt;/p&gt;

&lt;p&gt;Like you suggested, we can take the soft upgrade case as a separate issue but I was wondering if anyone might know why we did we decide to not cleanup orphaned state rows in case of soft upgrade mode in the original changes for this jira? I see comments in the code and in the commit comment that we do not want to cleanup in soft upgrade mode but I couldn&apos;t quite comprehend why. Thanks&lt;/p&gt;</comment>
                            <comment id="13695517" author="mikem" created="Fri, 28 Jun 2013 16:43:17 +0100"  >&lt;p&gt;I agree with kathey, let&apos;s just backport this to 10.8 and open a new issue to correctly handle the looping problem for soft upgrade in all versions.  Otherwise we might end up with 10.8 fixing&lt;br/&gt;
the problem for soft upgrade but not 10.9, 10.10 and trunk. &lt;/p&gt;

&lt;p&gt; Hopefully we can figure out a way to handle&lt;br/&gt;
the buggy orphaned stat differently than the expected &quot;disposable&quot; stats and deal with them differently.  If you hit this problem then the problem is very serious, as it can eat all the cpu on&lt;br/&gt;
at least one processor, which may be the whole machine, it also may be hard to diagnose as those with multiple processors may just notice that &quot;derby is slow and slowing the rest of the &lt;br/&gt;
machine&quot;.&lt;/p&gt;

&lt;p&gt;Can anyone think of a reason that the truly orphaned stat (an existing stat for no existing index) would be useful for any previous version of the software?  I think worst case if someone had to &lt;br/&gt;
downgrade after we deleted the orphaned stat and it was somehow needed then re-creating indexes would fix that issue.&lt;/p&gt;</comment>
                            <comment id="13695556" author="mamtas" created="Fri, 28 Jun 2013 17:52:09 +0100"  >&lt;p&gt;reopening it for backport to 10.8&lt;/p&gt;</comment>
                            <comment id="13695558" author="mamtas" created="Fri, 28 Jun 2013 17:52:36 +0100"  >&lt;p&gt;junit suite ran fine with the patch. still waiting for derbyall to finish&lt;/p&gt;</comment>
                            <comment id="13695577" author="mikem" created="Fri, 28 Jun 2013 18:18:54 +0100"  >&lt;p&gt;I have added &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6283&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6283&quot;&gt;&lt;del&gt;DERBY-6283&lt;/del&gt;&lt;/a&gt; to track discussion and fix for the soft upgrade case of this bug.&lt;/p&gt;</comment>
                            <comment id="13695621" author="mamtas" created="Fri, 28 Jun 2013 19:10:44 +0100"  >&lt;p&gt;derbyall ran fine too. I will go ahead and commit the patch to backport the changes to 10.8&lt;/p&gt;</comment>
                            <comment id="13695629" author="jira-bot" created="Fri, 28 Jun 2013 19:23:25 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13695630" author="jira-bot" created="Fri, 28 Jun 2013 19:23:26 +0100"  >&lt;p&gt;Commit 1497868 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1497868&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1497868&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;( indexStat daemon processing tables over and over even when there are no changes in the tables )&lt;/p&gt;

&lt;p&gt;Backporting the 3 commits that went in for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; to 10.8. The 3 commits were 1340549, 1341622, 1341629. The first two commits were easy to backport using svn merge command but the third commit 1341629 ran into conflicts. For that backport, hand made the changes since there were not too many changes.&lt;/p&gt;

&lt;p&gt;The changes for this jira has added a new property derby.storage.indexStats.debug.keepDisposableStats. The intention of the property is that if the property is set to true, we do not delete the orphaned/disposable stats. If the property is set to false, the orphaned/disposable stats will get dropped by the index stats daemon. Currently known reasons for orphaned/disposable stats are&lt;br/&gt;
1)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt;(When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed). Fix for this has been backported all the way to 10.3&lt;br/&gt;
2)&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;(Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) Fix for this is in 10.9 and higher&lt;/p&gt;

&lt;p&gt;A junit test was added for this new property but it went in as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt;. The name of the junit test is store.KeepDisposableStatsPropertyTest. Had to make changes to this test to backport it to 10.8 but without the fix for DEBRY-3790 and with the absence of drop statistics procedure, the test really does not make much sense for 10.8 codeline. The test uses drop statistics procedure and it is mainly testing &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; to make sure that the orphaned stats are being deleted or left behind based on whether the property is set to true or false. But since we do not have drop statistics procedure and we do not have &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; fixed in 10.8, we can&apos;t really meaningfully run the KeepDisposableStatsPropertyTest in 10.8. In any case, I have changed the test so that atleast it will not fail in 10.8 but it is not able to truly test the property. May be we can test this property through upgrade suite where we will create orphaned stats because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5681&quot; title=&quot;When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5681&quot;&gt;&lt;del&gt;DERBY-5681&lt;/del&gt;&lt;/a&gt; on older releases and we will find that when the property is set to true, even after upgrade, we will have orphaned stats but when property is set to false, after upgrade, orphaned stats are deleted.&lt;/p&gt;</comment>
                            <comment id="13695640" author="mamtas" created="Fri, 28 Jun 2013 19:24:58 +0100"  >&lt;p&gt;Committed the backport to 10.8 with revision 1497868&lt;/p&gt;</comment>
                            <comment id="13696399" author="jira-bot" created="Sun, 30 Jun 2013 20:41:59 +0100"  >&lt;p&gt;Commit 1498173 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mamtas&quot; class=&quot;user-hover&quot; rel=&quot;mamtas&quot;&gt;Mamta A. Satoor&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1498173&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1498173&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt;(indexStat daemon processing tables over and over even when there are no changes in the tables)&lt;/p&gt;

&lt;p&gt;KeepDisposableStatsPropertyTest test is meant for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3790&quot; title=&quot;Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3790&quot;&gt;&lt;del&gt;DERBY-3790&lt;/del&gt;&lt;/a&gt; which is not in in 10.8 codeline and hence should not be run in 10.8&lt;/p&gt;</comment>
                            <comment id="13706077" author="jira-bot" created="Thu, 11 Jul 2013 19:26:05 +0100"  >&lt;p&gt;Commit 1502319 from mikem@apache.org&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1502319&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1502319&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6283&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6283&quot;&gt;&lt;del&gt;DERBY-6283&lt;/del&gt;&lt;/a&gt; indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&lt;/p&gt;

&lt;p&gt;Changed system to always drop orphaned stats during update statistics call.  &lt;/p&gt;

&lt;p&gt;Without this change soft upgraded systems running on 10.8 or higher derby &lt;br/&gt;
software, that had an orphaned statistic would spin forever in the index &lt;br/&gt;
stat daemon due to the same problem fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; for hard &lt;br/&gt;
upgraded databases.&lt;/p&gt;</comment>
                            <comment id="13707438" author="jira-bot" created="Fri, 12 Jul 2013 22:59:44 +0100"  >&lt;p&gt;Commit 1502706 from mikem@apache.org&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1502706&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1502706&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6283&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6283&quot;&gt;&lt;del&gt;DERBY-6283&lt;/del&gt;&lt;/a&gt; indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&lt;/p&gt;

&lt;p&gt;backported change #1502319 from trunk to 10.10, some manual merging was &lt;br/&gt;
required.&lt;/p&gt;

&lt;p&gt;Changed system to always drop orphaned stats during update statistics call.&lt;/p&gt;

&lt;p&gt;Without this change soft upgraded systems running on 10.8 or higher derby&lt;br/&gt;
software, that had an orphaned statistic would spin forever in the index&lt;br/&gt;
stat daemon due to the same problem fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; for hard&lt;br/&gt;
upgraded databases.&lt;/p&gt;</comment>
                            <comment id="13708329" author="knutanders" created="Mon, 15 Jul 2013 10:04:38 +0100"  >&lt;p&gt;I don&apos;t know if it&apos;s related, but UpdateStatisticsTest has failed twice on the 10.8 branch after the fix was backported:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579017-report/javadb-task-3685070.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579017-report/javadb-task-3685070.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    junit.framework.AssertionFailedError: Index statistics for &amp;lt;ALL TABLES&amp;gt;&lt;br/&gt;
1: &lt;/p&gt;
{tableId=25347265-013f-8c71-7445-fffff6662cff, tableName=DISPOSABLE_STATS_EAGERNESS_FK, indexName=SQL130628223832620, lcols=1, rows=1000, unique/card=1000, created=2013-06-28 22:38:32.672}
&lt;p&gt;2: &lt;/p&gt;
{tableId=f0cfb26b-013f-8c71-7445-fffff6662cff, tableName=DISPOSABLE_STATS_EAGERNESS, indexName=NU_DISPOSABLE_STATS_EAGERNESS, lcols=1, rows=1000, unique/card=35, created=2013-06-28 22:38:32.688}
&lt;p&gt;3: &lt;/p&gt;
{tableId=f0cfb26b-013f-8c71-7445-fffff6662cff, tableName=DISPOSABLE_STATS_EAGERNESS, indexName=SQL130628223832640, lcols=1, rows=1000, unique/card=1000, created=2013-06-28 22:38:32.672}
&lt;p&gt;4: &lt;/p&gt;
{tableId=f0cfb26b-013f-8c71-7445-fffff6662cff, tableName=DISPOSABLE_STATS_EAGERNESS, indexName=SQL130628223832621, lcols=1, rows=1000, unique/card=1000, created=2013-06-28 22:38:32.672}
&lt;p&gt;5: &lt;/p&gt;
{tableId=f0cfb26b-013f-8c71-7445-fffff6662cff, tableName=DISPOSABLE_STATS_EAGERNESS, indexName=SQL130628223832621, lcols=2, rows=1000, unique/card=1000, created=2013-06-28 22:38:32.672}
&lt;p&gt; expected:&amp;lt;0&amp;gt; but was:&amp;lt;5&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.junit.IndexStatsUtil.assertStats(IndexStatsUtil.java:132)&lt;br/&gt;
	at org.apache.derbyTesting.junit.IndexStatsUtil.assertNoStats(IndexStatsUtil.java:109)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatistics(UpdateStatisticsTest.java:93)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579314-report/javadb-task-3689573.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579314-report/javadb-task-3689573.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    junit.framework.AssertionFailedError&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness(UpdateStatisticsTest.java:481)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="13708664" author="mamtas" created="Mon, 15 Jul 2013 18:21:04 +0100"  >&lt;p&gt;Hi Knut, I looked at the diff for UpdateStatisticsTest.testUpdateStatistics at &lt;a href=&quot;http://download.java.net/javadesktop/derby/javadb-5579017-report/javadb-task-3685070.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.java.net/javadesktop/derby/javadb-5579017-report/javadb-task-3685070.html&lt;/a&gt; and see that the test failed with svn revision 1497868. The reason for failure was &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5774&quot; title=&quot;Failures in UpdateStatisticsTest (order-dependent test cases)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5774&quot;&gt;DERBY-5774&lt;/a&gt;: Failures in UpdateStatisticsTest (order-dependent test cases) which got fixed into 10.8 with revision 1498052. After that checkin in 10.8, the test has not failed again yet.&lt;/p&gt;

&lt;p&gt;As for UpdateStatisticsTest.testDisposableStatsEagerness, I need to study the failure more. I do not know if it is related to fix for this jira in 10.8 but let me understand the test more to see what does the failure mean. Thanks&lt;/p&gt;</comment>
                            <comment id="13709351" author="mamtas" created="Tue, 16 Jul 2013 02:50:52 +0100"  >&lt;p&gt;UpdateStatisticsTest.testDisposableStatsEagerness may be because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5797&quot; title=&quot;AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5797&quot;&gt;&lt;del&gt;DERBY-5797&lt;/del&gt;&lt;/a&gt;(AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness). Fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5797&quot; title=&quot;AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5797&quot;&gt;&lt;del&gt;DERBY-5797&lt;/del&gt;&lt;/a&gt; is in 10.10 and 10.9 but not in 10.8, I will work on backporting it to 10.8.&lt;/p&gt;</comment>
                            <comment id="13710359" author="mamtas" created="Tue, 16 Jul 2013 23:08:25 +0100"  >&lt;p&gt;Fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5797&quot; title=&quot;AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5797&quot;&gt;&lt;del&gt;DERBY-5797&lt;/del&gt;&lt;/a&gt; has been backported to 10.8&lt;/p&gt;</comment>
                            <comment id="13714077" author="jira-bot" created="Fri, 19 Jul 2013 22:09:03 +0100"  >&lt;p&gt;Commit 1505021 from mikem@apache.org in branch &apos;code/branches/10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1505021&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1505021&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6283&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6283&quot;&gt;&lt;del&gt;DERBY-6283&lt;/del&gt;&lt;/a&gt; indexStat daemon processing tables over and over even when there are&lt;br/&gt;
no changes in the tables in soft upgraded database.&lt;/p&gt;

&lt;p&gt;backported change #1502319 from trunk to 10.8, some manual merging was&lt;br/&gt;
required.&lt;/p&gt;

&lt;p&gt;Changed system to always drop orphaned stats during update statistics call.&lt;/p&gt;

&lt;p&gt;Without this change soft upgraded systems running on 10.8 or higher derby&lt;br/&gt;
software, that had an orphaned statistic would spin forever in the index&lt;br/&gt;
stat daemon due to the same problem fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; for hard&lt;br/&gt;
upgraded databases.&lt;/p&gt;</comment>
                            <comment id="13714167" author="jira-bot" created="Fri, 19 Jul 2013 23:25:45 +0100"  >&lt;p&gt;Commit 1505054 from mikem@apache.org in branch &apos;code/branches/10&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1505054&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1505054&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-6283&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-6283&quot;&gt;&lt;del&gt;DERBY-6283&lt;/del&gt;&lt;/a&gt; indexStat daemon processing tables over and over even when there are&lt;br/&gt;
no changes in the tables in soft upgraded database.&lt;/p&gt;

&lt;p&gt;backported change #1502319 from trunk to 10.8, some manual merging was&lt;br/&gt;
required.&lt;/p&gt;

&lt;p&gt;Changed system to always drop orphaned stats during update statistics call.&lt;/p&gt;

&lt;p&gt;Without this change soft upgraded systems running on 10.8 or higher derby&lt;br/&gt;
software, that had an orphaned statistic would spin forever in the index&lt;br/&gt;
stat daemon due to the same problem fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5680&quot; title=&quot;indexStat daemon processing tables over and over even when there are no changes in the tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5680&quot;&gt;&lt;del&gt;DERBY-5680&lt;/del&gt;&lt;/a&gt; for hard&lt;br/&gt;
upgraded databases.&lt;/p&gt;</comment>
                            <comment id="14119543" author="knutanders" created="Wed, 3 Sep 2014 09:31:22 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12655383">DERBY-6283</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12548973">DERBY-5681</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12589972" name="DERBY5680_backportTo108_patch1_diff.txt" size="24919" author="mamtas" created="Thu, 27 Jun 2013 23:48:23 +0100"/>
                            <attachment id="12589973" name="DERBY5680_backportTo108_patch1_stat.txt" size="622" author="mamtas" created="Thu, 27 Jun 2013 23:48:23 +0100"/>
                            <attachment id="12520976" name="derby-5680-1a-drop_orphaned_stats.diff" size="3311" author="kristwaa" created="Mon, 2 Apr 2012 15:00:41 +0100"/>
                            <attachment id="12528078" name="derby-5680-1b-remove_disposable_stats.diff" size="16052" author="kristwaa" created="Fri, 18 May 2012 16:34:41 +0100"/>
                            <attachment id="12528647" name="derby-5680-2a-remove_redundant_check.diff" size="817" author="kristwaa" created="Tue, 22 May 2012 22:03:26 +0100"/>
                            <attachment id="12528651" name="derby-5680-3a-rename_debug_property.diff" size="2549" author="kristwaa" created="Tue, 22 May 2012 22:15:04 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10362"><![CDATA[Performance]]></customfieldvalue>
    <customfieldvalue key="10421"><![CDATA[Seen in production]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 Apr 2012 14:00:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>233948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0bn3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35704</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>