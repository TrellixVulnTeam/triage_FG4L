<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:41 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4577/DERBY-4577.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4577] An expanding update fails with an nospc.U error.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4577</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;An update of a long row piece on an overflow page that has limited row used space, row reserved space, and page free space can throw the nospc.U error on an update.  I will attach a patch with a simple junit test that reproduces this&lt;br/&gt;
issue.  &lt;/p&gt;

&lt;p&gt;This issue is probably the same as &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt;.  Logging a new issue so that it is clear the associated changes fix&lt;br/&gt;
the attached repro.  The repro for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt; is random and I could only get it to fail on one machine.  If after the fix&lt;br/&gt;
for this goes in and no one can repro, then we can close &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt; as a repro.&lt;/p&gt;

&lt;p&gt;The nospc errror is never meant to get to the user.  The code path that can raise it is shared by insert and update.  &lt;br/&gt;
Insert has code that internally catches the error and does the right thing.  The error should never be raised for an update.  What is meant to happen for updates is that on update on any page, including an overflow page should always&lt;br/&gt;
in the worst case have enough room to transform the row piece from whatever it is to a just a row header with an&lt;br/&gt;
overflow pointer to the next piece.  &lt;/p&gt;

&lt;p&gt;For the attached test the row piece on the overflow page is 12 bytes reserved, and 0 bytes free on the page.  So &lt;br/&gt;
far in the code path the code has written a preliminary row header that is 4 bytes, and then has noticed that the&lt;br/&gt;
remaining 8 bytes are not enough for an overflow pointer (worst case 8 bytes for page number + 4 bytes for record&lt;br/&gt;
id).  &lt;/p&gt;

&lt;p&gt;I think the real problem is that not enough minimum space is being reserved on the overflow page.  There should be&lt;br/&gt;
12 bytes reserved + the maximum size of a record header that does not include an overflow pointer.   I think the&lt;br/&gt;
code does the right thing in the case of head pages where the minimum reserved space is 12 for the &quot;user&quot; portion&lt;br/&gt;
of the data, but it looks like we don&apos;t apply this reserved space to just user portion on overflow pages.&lt;/p&gt;

&lt;p&gt;I need to research more, but it looks like on overflow pages we apply the minimum reserved space to the entire row&lt;br/&gt;
rather than just the user space.&lt;/p&gt;

&lt;p&gt;The stack trace being thrown in this case is:&lt;br/&gt;
2010-03-06 00:18:40.750 GMT:&lt;br/&gt;
 Booting Derby version The Apache Software Foundation - Apache Derby - 10.6.0.0 alpha - (1): instance 3405c0cb-0127-30d6-6168-ffffe7&lt;br/&gt;
008b2c&lt;br/&gt;
on database directory C:\derby\s2\systest\out\junit\system\wombat&lt;br/&gt;
^M&lt;br/&gt;
Database Class Loader started - derby.database.classpath=&apos;&apos;^M&lt;br/&gt;
2010-03-06 00:18:41.171 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 253), (SESSIONID = 1), (DATABASE = wombat), (DRDAID = null), Cleanup action s&lt;br/&gt;
tarting^M&lt;br/&gt;
2010-03-06 00:18:41.171 GMT Thread&lt;span class=&quot;error&quot;&gt;&amp;#91;main,5,main&amp;#93;&lt;/span&gt; (XID = 253), (SESSIONID = 1), (DATABASE = wombat), (DRDAID = null), Failed Statement&lt;br/&gt;
 is: UPDATE testBadUpdate set value = ? where id = ? with 2 parameters begin parameter #1: BLOB:Length=120000 :end parameter begin p&lt;br/&gt;
arameter #2: 0 :end parameter ^M&lt;br/&gt;
ERROR nospc: nospc.U^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.StoredPage.logRow(StoredPage.java:4106)^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.UpdateOperation.writeOptionalDataToBuffer(UpdateOperation.java:255)^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.UpdateOperation.&amp;lt;init&amp;gt;(UpdateOperation.java:106)^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.LoggableActions.actionUpdate(LoggableActions.java:80)^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.StoredPage.doUpdateAtSlot(StoredPage.java:8551)^M&lt;br/&gt;
    at org.apache.derby.impl.store.raw.data.BasePage.updateAtSlot(BasePage.java:1062)^M&lt;br/&gt;
    at org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController.replace(GenericConglomerateController.java:472)&lt;br/&gt;
^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.RowChangerImpl.updateRow(RowChangerImpl.java:523)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:554)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)^M&lt;br/&gt;
    at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673)^M&lt;br/&gt;
    at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:303)^M&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.store.DerbyBugTest2.run_one(DerbyBugTest2.java:224)^M&lt;br/&gt;
    at org.apache.derbyTesting.functionTests.tests.store.DerbyBugTest2.testOne(DerbyBugTest2.java:84)^M&lt;br/&gt;
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)^M&lt;br/&gt;
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)^M&lt;br/&gt;
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)^M&lt;br/&gt;
    at java.lang.reflect.Method.invoke(Method.java:600)^M&lt;br/&gt;
    at junit.framework.TestCase.runTest(TestCase.java:154)^M&lt;br/&gt;
    at junit.framework.TestCase.runBare(TestCase.java:127)^M&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)^M&lt;br/&gt;
    at junit.framework.TestResult$1.protect(TestResult.java:106)^M&lt;br/&gt;
    at junit.framework.TestResult.runProtected(TestResult.java:124)^M&lt;br/&gt;
    at junit.framework.TestResult.run(TestResult.java:109)^M&lt;br/&gt;
    at junit.framework.TestCase.run(TestCase.java:118)^M&lt;br/&gt;
    at junit.framework.TestSuite.runTest(TestSuite.java:208)^M&lt;br/&gt;
    at junit.framework.TestSuite.run(TestSuite.java:203)^M&lt;br/&gt;
    at junit.framework.TestSuite.runTest(TestSuite.java:208)^M&lt;br/&gt;
    at junit.framework.TestSuite.run(TestSuite.java:203)^M&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)^M&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:19)^M&lt;br/&gt;
    at junit.framework.TestResult.runProtected(TestResult.java:124)^M&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:23)^M&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)^M&lt;br/&gt;
    at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)^M&lt;br/&gt;
    at junit.extensions.TestSetup$1.protect(TestSetup.java:19)^M&lt;br/&gt;
    at junit.framework.TestResult.runProtected(TestResult.java:124)^M&lt;br/&gt;
    at junit.extensions.TestSetup.run(TestSetup.java:23)^M&lt;br/&gt;
    at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)^M&lt;br/&gt;
    at junit.framework.TestSuite.runTest(TestSuite.java:208)^M&lt;br/&gt;
    at junit.framework.TestSuite.run(TestSuite.java:203)^M&lt;br/&gt;
    at junit.textui.TestRunner.doRun(TestRunner.java:116)^M&lt;br/&gt;
    at junit.textui.TestRunner.start(TestRunner.java:172)^M&lt;br/&gt;
    at junit.textui.TestRunner.main(TestRunner.java:138)^M&lt;br/&gt;
Cleanup action completed^M&lt;/p&gt;</description>
                <environment></environment>
        <key id="12458326">DERBY-4577</key>
            <summary>An expanding update fails with an nospc.U error.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikem">Mike Matrigali</assignee>
                                    <reporter username="mikem">Mike Matrigali</reporter>
                        <labels>
                    </labels>
                <created>Sat, 6 Mar 2010 00:42:35 +0000</created>
                <updated>Wed, 19 Jun 2013 18:20:09 +0100</updated>
                            <resolved>Tue, 29 Jun 2010 17:57:13 +0100</resolved>
                                    <version>10.6.1.0</version>
                                    <fixVersion>10.7.1.1</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12842134" author="mikem" created="Sat, 6 Mar 2010 00:43:56 +0000"  >&lt;p&gt;it is likely that this is same bug as is demonstrated on some machines by the test associated with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt;.  Defintely has same stack.&lt;/p&gt;</comment>
                            <comment id="12842135" author="mikem" created="Sat, 6 Mar 2010 00:46:43 +0000"  >&lt;p&gt;patch with junit test that repro&apos;s the bug.  not ready for commit.&lt;/p&gt;</comment>
                            <comment id="12882354" author="mikem" created="Thu, 24 Jun 2010 22:55:18 +0100"  >&lt;p&gt;updated note - this fix did not pass tests.  See subsequent patch.&lt;/p&gt;

&lt;p&gt;working copy of fix.  preliminary, not ready for commit yet.  still running tests.  After &lt;br/&gt;
further debugging the problem does seem to be isolated to overflow pages.  This &lt;br/&gt;
patch fixes the test case which is also in the patch.  That test case was 100%&lt;br/&gt;
reproducible on my machine. &lt;/p&gt;

&lt;p&gt;The overall issue is that the current design to handle expanding updates of rows on both main pages and overflow pages is that it is assumed that each piece can always in the worst case of an expanding update be updated to have a piece that is just an overflow row pointer with all the data moved to another overflow page.  The worst case size of this is 17 bytes which is 1 byte status, 4 bytes record id, 8 bytes overflow page, 4 bytes oveflow record id.  In some cases the space to do this is actually longer than the actual space of an existing row (ie. something like a 1 column blob that has no data in it).  &lt;/p&gt;

&lt;p&gt;On main pages this is taken care of by the minimum reserve space. The main intent of minimum reserve space is to allow user to specify the amount of space to save for the &quot;user&quot; portion of the row.   The system sets a minimum user reserve space of 12 for main page rows.  This works around &quot;reserve for overflow&quot; problem as it means there is always space for just the overflow pointer part to come out of the user portion does not include the record header part.  &lt;/p&gt;

&lt;p&gt;On overflow pages the code does not enforce minimum reserve space, because for user rows it does not make sense.  The point of reserve space is to avoid oveflowing the row on expanding updates to another page.   The system only maintains this reserve space on main pages.&lt;/p&gt;

&lt;p&gt;Thus a different mechanism is needed to also insure on overflow pages that there is enough space reserved for the &quot;reserve for overflow&quot; problem.  This current patch does this by just making sure overflow rows on insert are always &amp;gt;= 17 bytes including reserve space for the row.  It also changes the code that deals with reclaiming space from shrinking updates to also maintain this 17 byte minimum.  &lt;/p&gt;

&lt;p&gt;Going through the code the use of minimum reserve space was confusing and I believe inconsistent.  Sometimes it was applied to user space, sometimes to the whole row.  The patch changes the use of this in a few places to make it more consistent.  &lt;/p&gt;

&lt;p&gt;For anyone reviewing the patch, it is probably easier to look side by side at &lt;br/&gt;
compactRecord() and checkRowReservedSpace() than at the diffs.   Some reformats along with &quot;real&quot; code changes went into this area as I was having a&lt;br/&gt;
hard time understanding the original logic.   &lt;/p&gt;

&lt;p&gt;The goal of the change is to only affect the minimum length of rows on overflow pages, so that short rows on main pages should remain the same length.  Also &lt;br/&gt;
this fix only stops the bug from happening to future inserted rows.  Existing &lt;br/&gt;
overflow rows may have the problem.  Running offline compress should fix an&lt;br/&gt;
existing table that runs into the problem.&lt;/p&gt;</comment>
                            <comment id="12882509" author="kristwaa" created="Fri, 25 Jun 2010 10:42:27 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;Just had a quick look at the patch out of curiosity, I did not review the logic properly.&lt;br/&gt;
I verified that the test succeeds with the patch, and fails without it.&lt;/p&gt;

&lt;p&gt;Some nits to consider for a next revision (if any):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;any reason why you&apos;re not using Math.max() when calculating size_to_reserve?&lt;/li&gt;
	&lt;li&gt;mixing tabs and spaces for indentation on changed/new lines&lt;/li&gt;
	&lt;li&gt;wrong class name in license header for the test&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12882824" author="mikem" created="Sat, 26 Jun 2010 09:27:01 +0100"  >&lt;p&gt;The previous patch had one problem with btree root split, shown up when running&lt;br/&gt;
the full suite in the databasemetadata tests, while running with SANE causing it to throw an assert.   The root had gotten full and had some rows with less than 17 bytes and some more, and the copy to leaf routine was incorrectly applying the 17 byte minimum to all the copied rows and the copy did not work.  &lt;/p&gt;

&lt;p&gt;The intent of the fix is to only apply the 17 byte minimum to overflow pages, so needed to change storeRecordForInsert to do so.&lt;/p&gt;

&lt;p&gt;This patch passed all tests run against a SANE against ibm16 on a windows machine.&lt;/p&gt;

&lt;p&gt;I ran the previous patch against the user provided repro in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt; and it not fail in a couple of hours against a normal server on a 2 processor, fast linux box.  I got a wierd logging error when I tried to run it against a durability=test build - I believe that is&lt;br/&gt;
more about timing in the logging system than anything I am changing.  I&apos;ll file something separate on that if I can reproduce.&lt;/p&gt;

&lt;p&gt;I will run some linux insane tests and look to commit to trunk sometime next week.&lt;/p&gt;

&lt;p&gt;I addressed the test issue brought up.  Will look at doing something about mixed space and leading tabs after the fix.  I just didn&apos;t think of the max routine, all this code is pretty low level critical - any opinions on if Math.max is as fast as hand coding using ? operator.&lt;/p&gt;</comment>
                            <comment id="12882879" author="knutanders" created="Sat, 26 Jun 2010 19:46:00 +0100"  >&lt;p&gt;I haven&apos;t tested this, but I think it is a fair assumption to expect that the code using the Math.max() method will end up getting optimized to the same native code as the hand-coded expression. Math.max() is a static method and should be easy to inline, according to this writeup &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; by the JVM experts. (It talks about static methods in general, though, not about Math.max() in particular. I read this under Methods: &quot;Static, private, final, and/or &quot;special&quot; invocations are easy to inline.&quot;) And max(int,int) is implemented &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; just like the hand-crafted code in the patch, so inlining the call should be enough to get identical performance.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://wikis.sun.com/display/HotSpotInternals/PerformanceTechniques&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wikis.sun.com/display/HotSpotInternals/PerformanceTechniques&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/tip/src/share/classes/java/lang/Math.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/tip/src/share/classes/java/lang/Math.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12883045" author="kristwaa" created="Mon, 28 Jun 2010 08:04:57 +0100"  >&lt;p&gt;For the record, my comment about Math.max was for improved readability only - it&apos;s less verbose and people know what the method does.&lt;/p&gt;</comment>
                            <comment id="12883384" author="mikem" created="Tue, 29 Jun 2010 03:04:58 +0100"  >&lt;p&gt; Fixes problem in previous patch where main page rows were being affected during compact rows.  Passes full set of tests on windows and linux.  Also ran with no error against stress test submitted with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2286&quot; title=&quot;Exception NoSpaceOnPage does not provide SQLState or exception text&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2286&quot;&gt;&lt;del&gt;DERBY-2286&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12883609" author="mikem" created="Tue, 29 Jun 2010 17:52:05 +0100"  >&lt;p&gt;change 959027 commits this fix to trunk.&lt;br/&gt;
s1_ibm16:16&amp;gt;svn commit&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\iapi\store\raw\RawStoreFactory.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\store\raw\data\StoredPage.java&lt;br/&gt;
Sending        java\engine\org\apache\derby\impl\store\raw\data\StoredRecordHead&lt;br/&gt;
er.java&lt;br/&gt;
Adding         java\testing\org\apache\derbyTesting\functionTests\tests\store\Derby4577Test.java&lt;br/&gt;
Sending        java\testing\org\apache\derbyTesting\functionTests\tests\store&amp;#95;Suite.java&lt;br/&gt;
Transmitting file data .....&lt;br/&gt;
Committed revision 959027.&lt;/p&gt;</comment>
                            <comment id="12883990" author="mikem" created="Wed, 30 Jun 2010 18:28:13 +0100"  >&lt;p&gt;adding a release note.&lt;/p&gt;</comment>
                            <comment id="12931508" author="rhillegas" created="Fri, 12 Nov 2010 19:44:29 +0000"  >&lt;p&gt;Updating the release note, incorporating Dag&apos;s comments on the 10.7.1 release notes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12361813">DERBY-2286</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12539208">DERBY-5581</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12598679">DERBY-5858</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12644558">DERBY-6203</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12361813">DERBY-2286</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12438066" name="derby-4577.diff" size="10112" author="mikem" created="Sat, 6 Mar 2010 00:46:43 +0000"/>
                            <attachment id="12448127" name="derby-4577_fix.diff" size="37943" author="mikem" created="Sat, 26 Jun 2010 09:27:01 +0100"/>
                            <attachment id="12448266" name="derby-4577_fix2.diff" size="37153" author="mikem" created="Tue, 29 Jun 2010 03:04:57 +0100"/>
                            <attachment id="12447988" name="derby-4577_not_for_commit_fix.diff" size="31636" author="mikem" created="Thu, 24 Jun 2010 22:55:18 +0100"/>
                            <attachment id="12459480" name="releaseNote.html" size="3025" author="rhillegas" created="Fri, 12 Nov 2010 19:44:29 +0000"/>
                            <attachment id="12448422" name="releaseNote.html" size="3028" author="mikem" created="Wed, 30 Jun 2010 18:28:13 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Jun 2010 09:42:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0b27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35610</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>