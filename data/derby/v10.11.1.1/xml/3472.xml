<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:20 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3472/DERBY-3472.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3472] Replication: Thread deadlock when deleting many records.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3472</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When I tried to delete ca 280000 records from a table while replication was running, the statement never completed.&lt;br/&gt;
VisualVM reports a deadlock:&lt;/p&gt;

&lt;p&gt;Found one Java-level deadlock:&lt;br/&gt;
=============================&lt;br/&gt;
&quot;Thread-2&quot;:&lt;br/&gt;
  waiting to lock monitor 0x08164e4c (object 0xfa9db5f8, a java.lang.Object),&lt;br/&gt;
  which is held by &quot;main&quot;&lt;br/&gt;
&quot;main&quot;:&lt;br/&gt;
  waiting to lock monitor 0x08164d20 (object 0xfa9db608, a org.apache.derby.impl.services.replication.master.AsynchronousLogShipper),&lt;br/&gt;
  which is held by &quot;Thread-2&quot;&lt;/p&gt;

&lt;p&gt;Java stack information for the threads listed above:&lt;br/&gt;
===================================================&lt;br/&gt;
&quot;Thread-2&quot;:&lt;br/&gt;
	at org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer.next(ReplicationLogBuffer.java:182)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting to lock 0xfa9db5f8&amp;gt; (a java.lang.Object)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.AsynchronousLogShipper.shipALogChunk(AsynchronousLogShipper.java:218)&lt;/li&gt;
	&lt;li&gt;locked 0xfa9db608&amp;gt; (a org.apache.derby.impl.services.replication.master.AsynchronousLogShipper)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.AsynchronousLogShipper.run(AsynchronousLogShipper.java:169)&lt;br/&gt;
&quot;main&quot;:&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.AsynchronousLogShipper.workToDo(AsynchronousLogShipper.java:336)&lt;/li&gt;
	&lt;li&gt;waiting to lock 0xfa9db608&amp;gt; (a org.apache.derby.impl.services.replication.master.AsynchronousLogShipper)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.MasterController.workToDo(MasterController.java:472)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer.switchDirtyBuffer(ReplicationLogBuffer.java:322)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.buffer.ReplicationLogBuffer.appendLog(ReplicationLogBuffer.java:148)&lt;/li&gt;
	&lt;li&gt;locked 0xfa9db5f8&amp;gt; (a java.lang.Object)&lt;br/&gt;
	at org.apache.derby.impl.services.replication.master.MasterController.appendLog(MasterController.java:328)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.writeToLog(LogAccessFile.java:787)&lt;/li&gt;
	&lt;li&gt;locked 0xbb041788&amp;gt; (a org.apache.derby.impl.io.DirRandomAccessFile4)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.flushDirtyBuffers(LogAccessFile.java:534)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.switchLogBuffer(LogAccessFile.java:611)&lt;/li&gt;
	&lt;li&gt;locked 0xbb041618&amp;gt; (a org.apache.derby.impl.store.raw.log.LogAccessFile)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogAccessFile.reserveSpaceForChecksum(LogAccessFile.java:855)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(LogToFile.java:3737)&lt;/li&gt;
	&lt;li&gt;locked 0xbb041528&amp;gt; (a org.apache.derby.impl.store.raw.log.LogToFile)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.log.FileLogger.logAndDo(FileLogger.java:370)&lt;/li&gt;
	&lt;li&gt;locked 0xfab06ec8&amp;gt; (a org.apache.derby.impl.store.raw.log.FileLogger)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.xact.Xact.logAndDo(Xact.java:1193)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.doAction(LoggableActions.java:221)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.LoggableActions.actionDelete(LoggableActions.java:64)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BasePage.deleteAtSlot(BasePage.java:1149)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeScan.delete(BTreeScan.java:1386)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.doDelete(IndexChanger.java:369)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.delete(IndexChanger.java:544)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexSetChanger.delete(IndexSetChanger.java:250)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.deleteRow(RowChangerImpl.java:476)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DeleteResultSet.collectAffectedRows(DeleteResultSet.java:405)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.DeleteResultSet.open(DeleteResultSet.java:137)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:372)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1234)&lt;/li&gt;
	&lt;li&gt;locked 0xfab36948&amp;gt; (a org.apache.derby.impl.jdbc.EmbedConnection40)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:624)&lt;/li&gt;
	&lt;li&gt;locked 0xfab36948&amp;gt; (a org.apache.derby.impl.jdbc.EmbedConnection40)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:556)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:330)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:508)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:350)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:248)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
	at org.apache.derby.impl.tools.ij.Main.main(Main.java:73)&lt;br/&gt;
	at org.apache.derby.tools.ij.main(ij.java:59)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Found 1 deadlock.&lt;/p&gt;</description>
                <environment>Derby trunk revision 631534 + DERBY 3205 patch failover-slave-2a.</environment>
        <key id="12389671">DERBY-3472</key>
            <summary>Replication: Thread deadlock when deleting many records.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jorgenlo">J&#248;rgen L&#248;land</assignee>
                                    <reporter username="oysteing">&#216;ystein Gr&#248;vlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Feb 2008 11:12:53 +0000</created>
                <updated>Tue, 4 Mar 2008 08:54:28 +0000</updated>
                            <resolved>Mon, 3 Mar 2008 12:24:22 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12572895" author="jorgenlo" created="Wed, 27 Feb 2008 12:40:30 +0000"  >&lt;p&gt;The deadlock appears because mf.workToDo is called while holding the listLatch in ReplicationLogBuffer. Patch v1a moves the mf.workToDo call outside the synchronized block. &lt;/p&gt;

&lt;p&gt;Running tests.&lt;/p&gt;</comment>
                            <comment id="12573251" author="jorgenlo" created="Thu, 28 Feb 2008 12:39:27 +0000"  >&lt;p&gt;All tests passed on patch 1a.&lt;/p&gt;</comment>
                            <comment id="12574428" author="oysteing" created="Mon, 3 Mar 2008 11:02:52 +0000"  >&lt;p&gt;I have tested patch 1a, and it solved the problem in a scenario where my previous two attempts resulted in a deadlock.&lt;/p&gt;

&lt;p&gt;However, I notice that while workToDo previously was always called when switchDirtyBuffer was called, now this only occurs for one out of three calls to switchDirtyBuffer.  Is that intentional?&lt;/p&gt;</comment>
                            <comment id="12574448" author="jorgenlo" created="Mon, 3 Mar 2008 11:48:31 +0000"  >&lt;p&gt;Yes, that&apos;s intentional since that is the only call to switchDirtyBuffer that adds a buffer to the dirty list:&lt;/p&gt;

&lt;p&gt;Around line 145, swithDirtyBuffer is called to make one of the clean buffers the current buffer in a case where the current buffer has not been set yet. Since currentbuffer is null, this won&apos;t add a buffer to the dirty buffer list.&lt;/p&gt;

&lt;p&gt;Around line 202, switchDirtyBuffer is called because someone tries to get a chunk of log in a case where there are no buffers in the dirty list. The current buffer will be moved to the dirty buffers, but the caller of next will also do the required work that would otherwise performed by calling workToDo. &lt;/p&gt;

&lt;p&gt;I&apos;ll attach a new patch with comments explaining why workToDo is not called in these two cases.&lt;/p&gt;</comment>
                            <comment id="12574462" author="jorgenlo" created="Mon, 3 Mar 2008 12:07:59 +0000"  >&lt;p&gt;Patch 1b replaces 1a. Adds comments explaining why mf.workToDo does not need to be called after two of the calls to switchDirtyBuffer.&lt;/p&gt;</comment>
                            <comment id="12574468" author="oysteing" created="Mon, 3 Mar 2008 12:24:22 +0000"  >&lt;p&gt;J&#248;rgen, thanks for the explanation.  Patch 1b committed as revision 633063.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12376619" name="derby-3472-1a.diff" size="2368" author="jorgenlo" created="Wed, 27 Feb 2008 12:40:30 +0000"/>
                            <attachment id="12376618" name="derby-3472-1a.stat" size="95" author="jorgenlo" created="Wed, 27 Feb 2008 12:40:30 +0000"/>
                            <attachment id="12376971" name="derby-3472-1b.diff" size="3369" author="jorgenlo" created="Mon, 3 Mar 2008 12:07:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Feb 2008 12:40:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23657</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0z8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>