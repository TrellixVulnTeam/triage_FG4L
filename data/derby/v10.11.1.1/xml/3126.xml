<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:36:31 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3126/DERBY-3126.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3126] Inserting BigDecimal value in PreparedStatement with setBigDecimal into double column loses fractional digits</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3126</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Splitting this issue into two subtasks one for setBigDecimal and one for setObject as they take a different code path and I plan to submit separate patches. Reproduces with BigDecimalProblemTester attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2073&quot; title=&quot;Inserting BigDecimal value in PreparedStatement into double column loses fractional digits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2073&quot;&gt;&lt;del&gt;DERBY-2073&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;


</description>
                <environment></environment>
        <key id="12380198">DERBY-3126</key>
            <summary>Inserting BigDecimal value in PreparedStatement with setBigDecimal into double column loses fractional digits</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12355444">DERBY-2073</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kmarsden">Kathey Marsden</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Oct 2007 23:49:33 +0100</created>
                <updated>Wed, 17 Oct 2007 23:12:11 +0100</updated>
                            <resolved>Mon, 15 Oct 2007 20:30:14 +0100</resolved>
                                                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>JDBC</component>
                    <component>Network Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12534182" author="kmarsden" created="Thu, 11 Oct 2007 23:59:42 +0100"  >&lt;p&gt;Attached is a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3126&quot; title=&quot;Inserting BigDecimal value in PreparedStatement with setBigDecimal into double column loses fractional digits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3126&quot;&gt;&lt;del&gt;DERBY-3126&lt;/del&gt;&lt;/a&gt;.  The patch is called derby-2073_diff.txt&lt;/p&gt;

&lt;p&gt;The change changes NetStatementRequest.computeProtocolTypesAndLengths to always look at the data scale and precision when sending decimal values to the server rather than using the parameterMetaData values which are never set. For null values it just uses scale 0 and precision 1. For non-null values I used the pre-existing  Utils.computeBigDecimalPrecision method to compute precision.&lt;/p&gt;


&lt;p&gt;Getting the scale and precision from the data is the only way to make sure the server gets the actual data value set by the user.  There was some talk in the old comments about scale and  precision for output and inout parameters but as far as I can tell the scale set with registerOutputParameter is not saved anywhere, so cannot be used here.   I don&apos;t think it makes sense use the output scale for the input parameter as it might affect the value sent to the server.  There may be additional issues with output parameter and registerOutputParameter, specifying a scale, since we don&apos;t seem to use the scale anywhere.  I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3125&quot; title=&quot;registerOutputParameter with a specified scale does not adjust the scale of the output parameter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3125&quot;&gt;DERBY-3125&lt;/a&gt; for the lack of use of the scale parameter in registerOutputParameter for both embedded and client.&lt;/p&gt;

&lt;p&gt;I added a test to ParameterMappingTest which was only testing whole numbers for decimal values.&lt;/p&gt;

&lt;p&gt;I also noticed that setObject with big decimal and specified scale has a similar issue, but it is not fixed by this patch. I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3127&quot; title=&quot; Inserting BigDecimal value in PreparedStatement with setObject into double column loses fractional digits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3127&quot;&gt;&lt;del&gt;DERBY-3127&lt;/del&gt;&lt;/a&gt; for that.&lt;/p&gt;


&lt;p&gt;tests passed&lt;/p&gt;



&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12534272" author="kmarsden" created="Fri, 12 Oct 2007 12:44:13 +0100"  >&lt;p&gt;Marking patch available. Patch is ready for review&lt;/p&gt;</comment>
                            <comment id="12534373" author="kmarsden" created="Fri, 12 Oct 2007 20:42:16 +0100"  >&lt;p&gt;Updating patch with more tests and fixed some code formatting.&lt;br/&gt;
I&apos;ll commit this patch Monday, October 15, if I don&apos;t hear comments. Please let me know if you need more time to review.&lt;/p&gt;</comment>
                            <comment id="12534637" author="knutanders" created="Sun, 14 Oct 2007 14:59:48 +0100"  >&lt;p&gt;The patch looks correct to me. Two small comments:&lt;/p&gt;

&lt;p&gt;  1) There&apos;s some strange use of tabs in NetStatementRequest.&lt;/p&gt;

&lt;p&gt;  2) I think it would be good to add a test case which tested negative scale. To me it seems like this code assumes that the scale is not negative and not greater than 255:&lt;br/&gt;
+                	lidAndLengths&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = (precision &amp;lt;&amp;lt; 8) + // use precision above&lt;br/&gt;
+                                          (scale &amp;lt;&amp;lt; 0);&lt;br/&gt;
I know this code was not introduced by you, but I would feel more comfortable if there was a test to verify that it works.&lt;/p&gt;</comment>
                            <comment id="12534698" author="kmarsden" created="Sun, 14 Oct 2007 23:40:58 +0100"  >&lt;p&gt;Here is an updated patch that handles negative scale with setBigDecimal.  It does not take care of the exception Knut pointed out with setObject.&lt;/p&gt;

&lt;p&gt;In order to send a packed decimal over DRDA, I had to convert the BigDecimal to an equivalent BigDecimal with zero scale.  I put the conversion in the same place as the other scale and precision handling. I hope this is the right place in the code to do this.&lt;/p&gt;


&lt;p&gt;suiltes.All passed. derbyall running.&lt;/p&gt;

&lt;p&gt;Please review.&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12534855" author="knutanders" created="Mon, 15 Oct 2007 15:22:32 +0100"  >&lt;p&gt;Thanks Kathey. I think the patch looks good. Do you know whether the problem with encoding BigDecimals with negative scale is a limitation in the DRDA protocol or a problem with our implementation?&lt;/p&gt;

&lt;p&gt;One last nit... There&apos;s still a tab in NetStatementRequest:&lt;/p&gt;

&lt;p&gt; public class NetStatementRequest extends NetPackageRequest implements StatementRequestInterface {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;java.util.ArrayList extdtaPositions_ = null; // Integers: build EXTDTA for column i&lt;br/&gt;
+    &lt;br/&gt;
+	java.util.ArrayList extdtaPositions_ = null; // Integers: build EXTDTA for column i&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12534867" author="djd" created="Mon, 15 Oct 2007 16:28:24 +0100"  >&lt;p&gt;I think that SQL does not have the concept of a negative scale, thus DRDA does not either. I think conversion to the same value with zero scale is the correct behaviour for SQL.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12367725" name="derby-2073_diff.txt" size="10455" author="kmarsden" created="Sun, 14 Oct 2007 23:40:58 +0100"/>
                            <attachment id="12367652" name="derby-2073_diff.txt" size="9670" author="kmarsden" created="Fri, 12 Oct 2007 20:42:16 +0100"/>
                            <attachment id="12367606" name="derby-2073_diff.txt" size="242" author="kmarsden" created="Thu, 11 Oct 2007 23:59:42 +0100"/>
                            <attachment id="12367653" name="derby-2073_stat.txt" size="242" author="kmarsden" created="Fri, 12 Oct 2007 20:42:16 +0100"/>
                            <attachment id="12367607" name="derby-2073_stat.txt" size="242" author="kmarsden" created="Thu, 11 Oct 2007 23:59:42 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 14 Oct 2007 13:59:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30732</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10xj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39801</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>