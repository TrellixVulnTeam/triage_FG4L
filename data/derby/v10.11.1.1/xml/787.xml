<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:24:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-787/DERBY-787.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-787] cursor closed as a sideeffect of closing another cursor with the same name on another connection</title>
                <link>https://issues.apache.org/jira/browse/DERBY-787</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I was writing some tests for the Scrollable updatable ResultSet feature, and  found some tests failing with &lt;/p&gt;

&lt;p&gt;ERROR XCL07: Cursor &apos;SQLCUR0&apos; is closed. Verify that autocommit is OFF.&lt;/p&gt;

&lt;p&gt;in ResultSet.updateRow(). &lt;/p&gt;

&lt;p&gt;The test does the following:&lt;br/&gt;
1. set up a connection, and run a query which selects one tuple&lt;br/&gt;
2. update the tuple using updateXXX and updateRow&lt;br/&gt;
3. rollback the transaction and close the connection&lt;/p&gt;

&lt;p&gt;Then, repeat the process, however this time use a different string in the query.  This time updateRow() may fail with the error above. &lt;/p&gt;

&lt;p&gt;The problem has been reproduced on forward only, updatable resultsets.&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br/&gt;
It does not seem to fail if I&lt;br/&gt;
a, set another cursorname on the statement object,&lt;br/&gt;
b, use the same query string.&lt;/p&gt;

&lt;p&gt;I will attach the program to reproduce the problem. Below is the output:&lt;/p&gt;

&lt;p&gt;~:/&amp;lt;3&amp;gt;db-derby-10.1.2.1-bin/lib&amp;gt; java -cp /home/ak136785/devel/derbytesting/derbytest/build/classes/:derby.jar derbytest.CursorIsClosedIssue&lt;/p&gt;

&lt;p&gt;1,1,19,Tuple 1&lt;br/&gt;
2,2,21,Tuple 2&lt;br/&gt;
ERROR XCL07: Cursor &apos;SQLCUR0&apos; is closed. Verify that autocommit is OFF.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CurrentOfResultSet.getCursor(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.CurrentOfResultSet.openCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.NormalizeResultSet.openCore(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.setup(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.execute.UpdateResultSet.open(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.updateRow(Unknown Source)&lt;br/&gt;
        at derbytest.CursorIsClosedIssue.runTest(CursorIsClosedIssue.java:80)&lt;br/&gt;
        at derbytest.CursorIsClosedIssue.main(CursorIsClosedIssue.java:103)&lt;/p&gt;</description>
                <environment>Java 1.4</environment>
        <key id="12327153">DERBY-787</key>
            <summary>cursor closed as a sideeffect of closing another cursor with the same name on another connection</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="andreask">Andreas Korneliussen</assignee>
                                    <reporter username="andreask">Andreas Korneliussen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jan 2006 01:34:03 +0000</created>
                <updated>Tue, 11 Apr 2006 18:10:50 +0100</updated>
                            <resolved>Tue, 11 Apr 2006 18:10:50 +0100</resolved>
                                    <version>10.1.2.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12361952" author="dagw" created="Fri, 6 Jan 2006 17:51:07 +0000"  >&lt;p&gt;What is is happening here is that the updateRow operation generates&lt;br/&gt;
identical &quot;UPDATE .. WHERE CURRENT OF SQLCUR0&quot; statements for the two&lt;br/&gt;
connections.&lt;/p&gt;

&lt;p&gt;The statement cache contains a compiled plan (from connection one),&lt;br/&gt;
when connection two tries to do the updateRow, resulting in using the&lt;br/&gt;
wrong plan (which refers to the result set of the first connection,&lt;br/&gt;
which happens to be closed when connection two tries to do its&lt;br/&gt;
updateRow).&lt;/p&gt;

&lt;p&gt;I have checked the ISO wording about cursors, and from what I can&lt;br/&gt;
understand, cursor names should be scoped locally to a connection, but&lt;br/&gt;
I cannot find any logic in the compiler statement caching to handle&lt;br/&gt;
this.&lt;/p&gt;

&lt;p&gt;A partial solution might possibly be to generate cursor names which&lt;br/&gt;
are unique per connection for the updatable cursor case, but that&lt;br/&gt;
would seem to be just side-stepping the issue. If the user sets the&lt;br/&gt;
cursor name explicitly (JDBC Statement#setCursorName) to the same name&lt;br/&gt;
in several connections, the scenario would still fail.&lt;/p&gt;

&lt;p&gt;I guess one could make the compiler &lt;b&gt;not&lt;/b&gt; cache statements involving&lt;br/&gt;
cursors (similar to what is done for statements referring temporary&lt;br/&gt;
tables), but that would force recompilation at every execution of an&lt;/p&gt;
{update,delete}
&lt;p&gt;Row, which is undesirable as well.&lt;/p&gt;

&lt;p&gt;A possibly better approach would be to have the compiler distinguish&lt;br/&gt;
the two similar looking statements when it compares them during the&lt;br/&gt;
cache lookup operation, by extending the recorded information so that&lt;br/&gt;
a comparison would only match - when the statement contains a cursor -&lt;br/&gt;
if the cached plan refers a cursor from the current connection.&lt;/p&gt;</comment>
                            <comment id="12362001" author="mamtas" created="Sat, 7 Jan 2006 05:38:05 +0000"  >&lt;p&gt;I think Andreas (as part of derby-231 &quot;FOR UPDATE&quot; required for updatable result set to work) enhanced the information used during cache lookup to differentiate between readonly select statement against updatable select statement. Something like that might need to be done to associate a statement with cursor to the right connection.&lt;/p&gt;</comment>
                            <comment id="12371420" author="andreask" created="Wed, 22 Mar 2006 21:24:36 +0000"  >&lt;p&gt;I think I have found what caused this issue.&lt;/p&gt;

&lt;p&gt;The &quot;UPDATE WHERE CURRENT OF SQLCUR0&quot; is prepared and compiled and produces an Activation (generated code) which can be reused by other connections, since the compiled code is cached.&lt;/p&gt;

&lt;p&gt;The generated code keeps a cursor name and it will during execution look up a CursorActivation based on the cursor name. &lt;br/&gt;
The CursorActivation is the code for the cursor (the select statement).&lt;br/&gt;
During execution, the class CurrentOfResultSet has a method called getCursor(). It finds the CursorActivation for the LanguageConnectionContext, however it has a check that the prepared statement object for the CursorActivation is the same as it was whem first compiling &quot;UPDATE WHERE ..&quot;.  This will only be the case if it was the same statement string which produced the cursors.&lt;/p&gt;

&lt;p&gt;Here is some debug of the LanguageConnectionContext.lookupCursorActivation(..)&lt;br/&gt;
1st connection:&lt;br/&gt;
(XID = 562), (SESSIONID = 1), (DATABASE = cis), (DRDAID = null), &lt;span class=&quot;error&quot;&gt;&amp;#91;BaseActivation: Source: select * from t1 where a=1 FOR UPDATE, ObjectName =582f8014-010a-21d6-1c29-00000016c7a0, BaseActivation: Source: UPDATE &amp;quot;APP&amp;quot;.&amp;quot;T1&amp;quot; SET &amp;quot;A&amp;quot;=?,&amp;quot;B&amp;quot;=? WHERE CURRENT OF &amp;quot;SQLCUR0&amp;quot;, ObjectName =6839c016-010a-21d6-1c29-00000016c7a0&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2nd connection:&lt;br/&gt;
(XID = 566), (SESSIONID = 2), (DATABASE = cis), (DRDAID = null), &lt;span class=&quot;error&quot;&gt;&amp;#91;BaseActivation: Source: select * from t1 where a=2 FOR UPDATE, ObjectName =e03f4017-010a-21d6-1c29-00000016c7a0, BaseActivation: Source: UPDATE &amp;quot;APP&amp;quot;.&amp;quot;T1&amp;quot; SET &amp;quot;A&amp;quot;=?,&amp;quot;B&amp;quot;=? WHERE CURRENT OF &amp;quot;SQLCUR0&amp;quot;, ObjectName =6839c016-010a-21d6-1c29-00000016c7a0&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the Connections do not share the CursorActivation code.&lt;/p&gt;

&lt;p&gt;Fixing this issue could be to remove the check that the prepared statement objectname for the cursor is the same.  &lt;br/&gt;
If anyone knows a case were this would be incorrect, please let me know. &lt;/p&gt;</comment>
                            <comment id="12371541" author="andreask" created="Thu, 23 Mar 2006 18:26:12 +0000"  >&lt;p&gt;Attaching the patch for this issue. Removing the check that &quot;UPDATE .. WHERE CURRENT OF ..&quot; only can execute against the cursors which comes from the same prepared statement as it was origianlly compiled with.&lt;/p&gt;

&lt;p&gt;Testing: Removed the workaround in the SURTests which were added due to this bug. All SURTest will then use the same cursor name, and we will hit this bug if only the testing changes are applied. With the patch, everything works fine.  Also the repro program successfully runs with this patch.&lt;/p&gt;

&lt;p&gt;Ran derbyall, and got two failures. In one of the tests, the network server threw a java.net.SocketException: Connection reset exception when shutting down. The other failure is a known regression. These failures are not relevant for this patch.&lt;/p&gt;</comment>
                            <comment id="12373243" author="bernt" created="Wed, 5 Apr 2006 17:06:34 +0100"  >&lt;p&gt;Committed revision 391559.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12321640" name="CursorIsClosedIssue.java" size="3482" author="andreask" created="Tue, 3 Jan 2006 01:36:57 +0000"/>
                            <attachment id="12324482" name="DERBY-787.diff" size="3070" author="andreask" created="Thu, 23 Mar 2006 18:26:11 +0000"/>
                            <attachment id="12324483" name="DERBY-787.stat" size="162" author="andreask" created="Thu, 23 Mar 2006 18:26:12 +0000"/>
                            <attachment id="12324484" name="derbyall_report.txt" size="13202" author="andreask" created="Thu, 23 Mar 2006 18:26:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jan 2006 17:51:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22147</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10102"><![CDATA[Patch Available]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy16tj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40755</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>