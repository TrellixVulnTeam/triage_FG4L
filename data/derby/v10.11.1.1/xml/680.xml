<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:23:23 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-680/DERBY-680.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-680] In ij, executing a prepared statement with numeric/decimal parameter fails with NullPointerException in J2ME/CDC/FP</title>
                <link>https://issues.apache.org/jira/browse/DERBY-680</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;NPE is thrown in ij when executing prepared statement which &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;has numeric/decimal parameters&lt;/li&gt;
	&lt;li&gt;does not return any result set&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Repro for this problem is the test lang/cast.sql. This test currently fails in CDC/FP.&lt;/p&gt;

&lt;p&gt;The following lines in the test throw NPE:&lt;br/&gt;
execute q10 using &apos;values 123456.78&apos;;&lt;br/&gt;
execute q11 using &apos;values 123456.78&apos;;&lt;/p&gt;

&lt;p&gt;where q10 is &quot;prepare q10 as &apos;insert into t1 (num) values cast(? as numeric(18))&apos;;&quot;&lt;br/&gt;
and q11 is &quot;prepare q11 as &apos;insert into t1 (dc) values cast(? as decimal(18))&apos;;&quot;&lt;/p&gt;

&lt;p&gt;The stack trace for failure is:&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.util.DisplayMulti(util.java:666)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:398)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:290)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:203)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:56)&lt;/p&gt;


&lt;p&gt;This happens in the following code. Since the above prepared statements do not return result sets, call to getMetaData() will return null. But in the code, no check is done to see if getMetaData() returns null before calling getColumnType.&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
						// In J2ME there is no object that represents&lt;br/&gt;
						// a DECIMAL value. By default use String to&lt;br/&gt;
						// pass values around, but for integral types&lt;br/&gt;
						// first convert to a integral type from the DECIMAL&lt;br/&gt;
						// because strings like 3.4 are not convertible to&lt;br/&gt;
						// an integral type.&lt;br/&gt;
						switch (ps.getMetaData().getColumnType(c))&lt;/p&gt;
						{
						case Types.BIGINT:
							ps.setLong(c, rs.getLong(c));
						    break;
						case Types.INTEGER:
						case Types.SMALLINT:
						case Types.TINYINT:
							ps.setInt(c, rs.getInt(c));
							break;
						default:
							ps.setString(c,rs.getString(c));
						    break;
						}			
&lt;p&gt;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;





</description>
                <environment>j9_foundation VM in IBM WCTME 5.7</environment>
        <key id="12325305">DERBY-680</key>
            <summary>In ij, executing a prepared statement with numeric/decimal parameter fails with NullPointerException in J2ME/CDC/FP</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deepa">Deepa Remesh</assignee>
                                    <reporter username="deepa">Deepa Remesh</reporter>
                        <labels>
                    </labels>
                <created>Fri, 4 Nov 2005 03:03:28 +0000</created>
                <updated>Thu, 24 Jan 2008 13:10:00 +0000</updated>
                            <resolved>Tue, 23 Jan 2007 19:39:48 +0000</resolved>
                                    <version>10.2.1.6</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12357621" author="deepa" created="Tue, 15 Nov 2005 05:11:23 +0000"  >&lt;p&gt;By changing the above code to check for the value returned by ps.getMetaData() , the prepared statements q10 and q11 listed in the description above work. The test lang/cast.sql also passes with JSR169.&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
						// In J2ME there is no object that represents&lt;br/&gt;
						// a DECIMAL value. By default use String to&lt;br/&gt;
						// pass values around, but for integral types&lt;br/&gt;
						// first convert to a integral type from the DECIMAL&lt;br/&gt;
						// because strings like 3.4 are not convertible to&lt;br/&gt;
						// an integral type.&lt;br/&gt;
						ResultSetMetaData  psmd = ps.getMetaData();&lt;br/&gt;
						if(psmd != null) {&lt;br/&gt;
							switch (psmd.getColumnType(c))&lt;/p&gt;
							{
							case Types.BIGINT:
								ps.setLong(c, rs.getLong(c));
							    break;
							case Types.INTEGER:
							case Types.SMALLINT:
							case Types.TINYINT:
								ps.setInt(c, rs.getInt(c));
								break;
							default:
								ps.setString(c,rs.getString(c));
							    break;
							}
&lt;p&gt;						}&lt;br/&gt;
						else &lt;/p&gt;
{
							ps.setString(c,rs.getString(c));
						}
&lt;p&gt;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;But the following case does not work because there is no way to get parameter metadata in JSR169 since ParameterMetaData is not available. So, there is no equivalent to &quot;switch (ps.getMetaData().getColumnType(c))&quot; to determine the the column/parameter type and call the corresponding setXXX method.&lt;/p&gt;

&lt;p&gt;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
ij&amp;gt; create table int_tab (i int);&lt;br/&gt;
ij&amp;gt; prepare i1  as &apos;insert into int_tab values &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&apos;;&lt;br/&gt;
ij&amp;gt; execute i1 using &apos;values 3.4&apos;;&lt;br/&gt;
IJ WARNING: Autocommit may close using result set&lt;br/&gt;
ERROR 22018: Invalid character string format for type INTEGER.&lt;br/&gt;
ERROR 22018: Invalid character string format for type INTEGER.&lt;br/&gt;
        at org.apache.derby.iapi.error.StandardException.newException(StandardEx&lt;br/&gt;
ception.java:311)&lt;br/&gt;
        at org.apache.derby.iapi.types.DataType.invalidFormat(DataType.java:1049&lt;br/&gt;
)&lt;br/&gt;
        at org.apache.derby.iapi.types.SQLInteger.setValue(SQLInteger.java:340)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.setString(EmbedPrep&lt;br/&gt;
aredStatement.java:452)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.util.DisplayMulti(util.java:684)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.displayResult(utilMain.java:3&lt;br/&gt;
98)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:290)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.go(Main.java:203)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:169)&lt;br/&gt;
        at org.apache.derby.impl.tools.ij.Main.main(Main.java:75)&lt;br/&gt;
        at org.apache.derby.tools.ij.main(ij.java:56)&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;I would like to know if anyone has suggestions to handle this. Thanks.&lt;/p&gt;</comment>
                            <comment id="12360462" author="deepa" created="Thu, 15 Dec 2005 07:30:42 +0000"  >&lt;p&gt;Attaching a patch &apos;derby-680.diff&apos;. This patch removes the check &quot;ps.getMetaData().getColumnType(c)&quot; from org.apache.derby.impl.tools.ij.util.java. This was checking ResultSetMetaData, whereas the actual check should be for ParameterMetaData. But ParameterMetaData is not available in JSR169. So currently, get/set String has to be used for all types. With this change, lang/cast.sql does not give NPE. I have added a new master for ejbql.sql. This test was passing because coincidentally ResultSetMetaData and ParameterMetaData were of same type in the statements used. &lt;/p&gt;

&lt;p&gt;With this patch, I ran derbyall with Sun JDK1.4.2 and j9_foundation vm in IBM WCTME5.7. No new failures. Please review/commit this patch.&lt;/p&gt;</comment>
                            <comment id="12361280" author="djd" created="Wed, 28 Dec 2005 03:18:41 +0000"  >&lt;p&gt;I&apos;m looking at reviewing &amp;amp; committing this patch.&lt;/p&gt;</comment>
                            <comment id="12361874" author="djd" created="Fri, 6 Jan 2006 03:12:04 +0000"  >&lt;p&gt;I think the code is correct but I wonder if the ejbql test should be modified so that a CDC/Foundation specific master file is not required?&lt;br/&gt;
Would the purpose of the test be changed by adding a cast to the expression that causes the failure in J2ME?&lt;/p&gt;</comment>
                            <comment id="12361879" author="deepa" created="Fri, 6 Jan 2006 04:52:58 +0000"  >&lt;p&gt;Thanks Dan for looking at this patch. lang/ejbql.sql tests abs and absval functions. I think using cast may not be okay.  These are the execute statements which fail in J2ME (leaving out statements which pass):&lt;/p&gt;

&lt;p&gt;create table myint( a int );&lt;br/&gt;
insert into myint values (null);&lt;br/&gt;
autocommit off;&lt;/p&gt;

&lt;p&gt;&amp;#8211; Prepare Statements, should pass and return 1&lt;br/&gt;
prepare p1 as &apos;select abs&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; from myint&apos;;&lt;br/&gt;
prepare p1 as &apos;select 1 from myint where ? &amp;lt;= 4&apos;;&lt;br/&gt;
execute p1 using &apos;values absval( 4.4 )&apos;;&lt;br/&gt;
execute p1 using &apos;values absval( -4.4 )&apos;;&lt;/p&gt;

&lt;p&gt;&amp;#8211; Prepare Statements, should pass and return 1&lt;br/&gt;
prepare p2 as &apos;select &lt;/p&gt;
{fn abs(?)}
&lt;p&gt; from myint&apos;;&lt;br/&gt;
prepare p2 as &apos;select 1 from myint where ? &amp;lt;= 4&apos;;&lt;br/&gt;
execute p2 using &apos;values &lt;/p&gt;
{fn abs( 4.4 )}
&lt;p&gt;&apos;;&lt;br/&gt;
execute p2 using &apos;values &lt;/p&gt;
{fn abs( -4.4 )}
&lt;p&gt;&apos;;&lt;br/&gt;
execute p2 using &apos;values &lt;/p&gt;
{fn abs( -4.44444444444444444444444 )}
&lt;p&gt;&apos;;&lt;/p&gt;

&lt;p&gt;Please look at these statements and let me know if you think it is okay to change them . &lt;/p&gt;</comment>
                            <comment id="12362228" author="djd" created="Tue, 10 Jan 2006 02:55:42 +0000"  >&lt;p&gt;I think it&apos;s ok to change these SQL statements to not use prepared statements and ij&apos;s using clause.&lt;br/&gt;
The return value of the fn abs is what is being tested here, not the fact that if you pass 4.4 into a prepared statement  and compare it to 4 you get false.&lt;/p&gt;</comment>
                            <comment id="12362244" author="deepa" created="Tue, 10 Jan 2006 05:01:38 +0000"  >&lt;p&gt;Attaching &apos;derby-680_v2.diff&apos;. This patch changes the test lang/ejbql.sql as suggested by Dan. Avoids a new master for j9_foundation.&lt;/p&gt;</comment>
                            <comment id="12362247" author="deepa" created="Tue, 10 Jan 2006 05:17:26 +0000"  >&lt;p&gt;lang/cast.sql is failing in J2ME because of some recent additions to the test which require BigDecimal class. Resubmitting the patch without enabling lang/cast.sql.&lt;/p&gt;</comment>
                            <comment id="12363504" author="kmarsden" created="Sat, 21 Jan 2006 14:28:20 +0000"  >&lt;p&gt;Since the prepared statements have been taken out of lang/ejbql.sql, I wonder if we are still testing the case that was giving the NPE ( ij, executing a prepared statement with numeric/decimal parameters).    Is that covered in another test?&lt;/p&gt;</comment>
                            <comment id="12363686" author="deepa" created="Tue, 24 Jan 2006 01:16:10 +0000"  >&lt;p&gt;lang/ejbql.sql tests &apos;abs&apos; and &apos;absval&apos; functions. So removing the prepared statements from lang/ejbql.sql does not remove any testing. Dan mentioned this in an earlier comment. &lt;/p&gt;

&lt;p&gt;The test that was giving NPE was lang/cast.sql. With the patch, I have run the test in J2ME and verified that the NPE does not occur. However, this test is still disabled in J2ME because some recent additions to the test require BigDecimal class. Because of these additional tests, it fails towards the end but the failure is not related to this issue. &lt;/p&gt;</comment>
                            <comment id="12364002" author="kmarsden" created="Thu, 26 Jan 2006 06:15:52 +0000"  >&lt;p&gt;I think we should have a regression test that verifies the fix submitted with the fix, , either by enabling cast.sql with J2ME  or adding the case to another test that already runs with J2ME&lt;/p&gt;</comment>
                            <comment id="12364854" author="djd" created="Thu, 2 Feb 2006 04:01:14 +0000"  >&lt;p&gt;Submitted changes to ejbql test from patch derby-680_v2.diff , as they are separate from the code change to ij.&lt;/p&gt;</comment>
                            <comment id="12466811" author="djd" created="Tue, 23 Jan 2007 19:39:48 +0000"  >&lt;p&gt;I believe this was fixed by the changes to ij.util for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2228&quot; title=&quot;Support Derby on J2ME/CDC/Foundation 1.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2228&quot;&gt;&lt;del&gt;DERBY-2228&lt;/del&gt;&lt;/a&gt;. The NPE resulted due to fetching the ResultSetMetaData for an INSERT statement which was of course null. The fixed code no longer uses the ResultSetMetaData which was incorrect anyway.&lt;/p&gt;</comment>
                            <comment id="12562047" author="dyret" created="Thu, 24 Jan 2008 13:10:00 +0000"  >&lt;p&gt;This issue is resolved and has not been updated in the last 12 months (since 24/Jan/07). &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12321832" name="derby-680_v2.diff" size="6640" author="deepa" created="Tue, 10 Jan 2006 05:17:26 +0000"/>
                            <attachment id="12321833" name="derby-680_v2.status" size="298" author="deepa" created="Tue, 10 Jan 2006 05:17:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Dec 2005 03:18:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22091</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zpr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39604</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>