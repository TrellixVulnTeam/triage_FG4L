<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:20:28 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2534/DERBY-2534.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2534] Add new api &quot;public StringDataValue getValue(RuleBasedCollator)&quot; on StringDataValue. This method will return either the base DVDs for char datatypes or it will return collation sensitive DVD for char datatypes.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2534</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In Derby 10.3, the collation of char datatypes can be different depending on what kind of collation is requested by the user at the database create time through the optional JDBC url attribute COLLATION. The collation type associated with the DTD will determine which kind of DVD needs to be generated. (Note that, irrespective of what collation is used, the format id of the char datatypes remain same.) In order to support this behavior of generating the base DVD or the collation sensitive DVD for character datatypes, we need to add a new api to StringDataValue which will look as follows&lt;/p&gt;

&lt;p&gt;	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets either SQLChar/SQLVarchar/SQLLongvarchar/SQLClob(base classes) or&lt;/li&gt;
	&lt;li&gt;CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarch/CollatorSQLClob&lt;/li&gt;
	&lt;li&gt;(subclasses). Whether this method returns the base class or the subclass&lt;/li&gt;
	&lt;li&gt;depends on the value of the RuleBasedCollator. If RuleBasedCollator is&lt;/li&gt;
	&lt;li&gt;null, then the object returned would be baseclass otherwise it would be&lt;/li&gt;
	&lt;li&gt;subcalss.&lt;br/&gt;
	 */&lt;br/&gt;
	public StringDataValue getValue(RuleBasedCollator collatorForComparison);&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12366799">DERBY-2534</key>
            <summary>Add new api &quot;public StringDataValue getValue(RuleBasedCollator)&quot; on StringDataValue. This method will return either the base DVDs for char datatypes or it will return collation sensitive DVD for char datatypes.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mamtas">Mamta A. Satoor</assignee>
                                    <reporter username="mamtas">Mamta A. Satoor</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Apr 2007 08:23:58 +0100</created>
                <updated>Thu, 2 May 2013 03:29:07 +0100</updated>
                            <resolved>Mon, 14 May 2007 18:33:27 +0100</resolved>
                                    <version>10.3.1.4</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12487490" author="mamtas" created="Mon, 9 Apr 2007 08:44:00 +0100"  >&lt;p&gt;I am attaching a patch DERBY2534_getValue_On_StringDataValue_v1_diff.txt to this Jira entry which I plan to commit soon. The patch adds a new api to StringDataValue interface and the new api looks as follows&lt;br/&gt;
public StringDataValue getValue(RuleBasedCollator collatorForComparison);&lt;/p&gt;

&lt;p&gt;The new api will be needed in quite a few different places. 2 distinct uses that I can see at this point are&lt;br/&gt;
1)Store will have a format id and collation type when it is trying to construct a DVD template. Using the formatid, we will first always get the base class DVD for char datatypes namely SQLChar, SQLVarchar, SQLLongvarchar or SQLClob. Next, if the collation type is not 0  ie it is not UCS_BASIC, then we want to use Collation sensitive DVDs of base char DVDs because we want to use the passed Collator for collation rather than the default UCS_BASIC Collator. The collation sensitive DVDs of char datatypes are CollatorSQLChar, CollatorSQLVarchar, CollatorSQLLongvarchar and CollatorSQLClob. In order to derive these collation sensitive DVDs of character datatypes, we will use this new api called getValue on base character DVDs. The getValue method will have the Collator object as parameter to it. If the Collator object is null, then we can continue to use the base DVD. But if the Collator object is not null, then we want to construct collation sensitive DVD. The new api on StringDataValue will help achieve this behavior.&lt;br/&gt;
2)Another place which I can envision using this new api is in DataTypeDescriptor.getNull() method which returns a DVD. Currently, the implementation of this method looks as follows&lt;br/&gt;
	public DataValueDescriptor getNull() &lt;/p&gt;
{
		return typeId.getNull();
	}
&lt;p&gt;So, if the typeid of DTD is character data type, this method will always return base char DVD, no matter what is the collation type of the DTD. But, if the DTD has a territory based collation set for it, then this method should return collation sensitive char DVD. This functionality can be achieved by using the new api on StringDataValue.&lt;/p&gt;

&lt;p&gt;I do not anticipate this new method ever getting called on collation sensitive DVDs in Derby 10.3 In future, when Derby will start  supporting SQL standard COLLATE clause, this method might get called on the collation sensitive DVDs but for Derby 10.3, the new api in collation sensitive DVDs is just a place holder.&lt;/p&gt;

&lt;p&gt;Another change to note is I changed all the collation sensitive subclasses to have their method setCollator changed from private to protected. This is so that the getValue method from their correspoding base classes can call the setCollator method on subclasses.&lt;/p&gt;

&lt;p&gt;The files changed by this patch are&lt;br/&gt;
svn stat -q&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\SQLLongvarchar.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\StringDataValue.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\CollatorSQLChar.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\CollatorSQLClob.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\CollatorSQLVarchar.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\SQLChar.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\SQLClob.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\SQLVarchar.java&lt;br/&gt;
M      java\engine\org\apache\derby\iapi\types\CollatorSQLLongvarchar.java&lt;/p&gt;

&lt;p&gt;The code compiles ok with my changes. None of the tests should get impacted because currently, this new api on StringDataValue is  not called by any other code in Derby.&lt;/p&gt;</comment>
                            <comment id="12487492" author="mamtas" created="Mon, 9 Apr 2007 08:50:53 +0100"  >&lt;p&gt;Just commited the patch DERBY2534_getValue_On_StringDataValue_v1_diff.txt with revision 526668. If anyone has any feedback, please share them. I will address them in subsequent patches.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12362830">DERBY-2336</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12355141" name="DERBY2534_getValue_On_StringDataValue_v1_diff.txt" size="12836" author="mamtas" created="Mon, 9 Apr 2007 08:44:00 +0100"/>
                            <attachment id="12355142" name="DERBY2534_getValue_On_StringDataValue_v1_stat.txt" size="677" author="mamtas" created="Mon, 9 Apr 2007 08:44:00 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30504</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0kcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37115</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>