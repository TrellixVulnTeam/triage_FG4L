<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:44:33 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3099/DERBY-3099.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3099] Possible bug in interaction with buffer manager causing pages not to be freed on rollback to savepoint</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3099</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;I noticed this strange behaviour when I was working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2911&quot; title=&quot;Implement a buffer manager using java.util.concurrent classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2911&quot;&gt;&lt;del&gt;DERBY-2911&lt;/del&gt;&lt;/a&gt;. It seems like the result of test case P042 in unit/T_RawStoreFactory.unit is dependent on the actual contents of the buffer manager (which pages have been evicted, which free entries have been reused and so on). I&apos;m not sure if this is a bug in the test or somewhere in the code, or if this is expected behaviour, but it sounds a bit suspicious.&lt;/p&gt;

&lt;p&gt;For instance, commenting out all the test cases preceeding P042 makes P042 fail, even though P042 creates a new container so that it should not be affected by any of the previous test cases. Also, commenting out a space optimization in Clock.findFreeItem() so that freed entries are not reused except when rotateClock() is called on a full cache to find a victim, causes the test case to fail. A third way to make it fail, is to vary the scan direction when looking for a free entry to reuse in the new buffer manager (ConcurrentCache). If the scan is disabled or walks the clock from the beginning to the end, the test fails, but if the clock is scanned backwards, it passes.&lt;/p&gt;

&lt;p&gt;The code that fails in the test, is&lt;/p&gt;

&lt;p&gt;			c = t_util.t_openContainer(t, segment, cid, true);&lt;br/&gt;
			Page checkNextPage = t_util.t_addPage(c);&lt;br/&gt;
			if (checkNextPage.getPageNumber() == nextPageNumber)&lt;br/&gt;
				throw T_Fail.testFailMsg(&lt;br/&gt;
					&quot;expect some pages to be freed by update rollback&quot;);&lt;/p&gt;

&lt;p&gt;The expected page number is 2, and the actual page number is 7.&lt;/p&gt;

&lt;p&gt;Before this, a large row has been inserted on page 1 and overflows to page 2, 3, 4, 5 and 6. Also, page 7 has been added manually before all the updates were rolled back so that the pages from 2 up to 7 should be unallocated. Page 7 is then added and removed, and the transaction is committed. After reopening the container, the test expects the pages from 2 up to 7 to be free, and that t_addPage() should allocate page number 2.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12379549">DERBY-3099</key>
            <summary>Possible bug in interaction with buffer manager causing pages not to be freed on rollback to savepoint</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Oct 2007 09:55:14 +0100</created>
                <updated>Thu, 11 Oct 2007 22:23:07 +0100</updated>
                            <resolved>Thu, 11 Oct 2007 07:35:15 +0100</resolved>
                                    <version>10.3.1.4</version>
                    <version>10.4.1.3</version>
                                    <fixVersion>10.3.2.1</fixVersion>
                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Services</component>
                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12532050" author="knutanders" created="Wed, 3 Oct 2007 10:49:30 +0100"  >&lt;p&gt;When T_RawStoreFactory.P042() fails, a finally clause tries to unlatch an already unlatched page and hides the actual error. The failure in the finally clause is not immediately picked up by the test framework and the test therefore hangs until it times out after one hour.&lt;/p&gt;

&lt;p&gt;The attached patch makes the cleanup code check whether the page is latched before unlatching it. This makes the test fail faster if it fails, and the real error is not hidden by the error in the cleanup code. The patch also removes an unused variable from the test case.&lt;/p&gt;

&lt;p&gt;Committed revision 581544.&lt;/p&gt;</comment>
                            <comment id="12532053" author="knutanders" created="Wed, 3 Oct 2007 11:03:46 +0100"  >&lt;p&gt;Here is a dump of the alloc page right before the call to addPage() in a successfull test run (clean trunk). Note that page 3, 4, 5 and 6 are marked as valid, in use pages. I had expected those pages to be free, since the update that overflowed to them was rolled back.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Alloc page ***&lt;br/&gt;
nextAllocPageNumber = -1&lt;br/&gt;
nextAllocPageOffset = 0&lt;br/&gt;
reserved1 = 0&lt;br/&gt;
reserved2 = 0&lt;br/&gt;
reserved3 = 0&lt;br/&gt;
reserved4 = 0&lt;br/&gt;
borrowedSpace = 80&lt;br/&gt;
extent = -----------------------------------------------------------------------&lt;br/&gt;
-------&lt;br/&gt;
Extent map of from page 1 to page 10216&lt;br/&gt;
        page 1: valid, in use page&lt;br/&gt;
        page 2: free page&lt;br/&gt;
        page 3: valid, in use page&lt;br/&gt;
        page 4: valid, in use page&lt;br/&gt;
        page 5: valid, in use page&lt;br/&gt;
        page 6: valid, in use page&lt;br/&gt;
        page 7: free page&lt;br/&gt;
        From 7 to 10216 are un-allocated pages&lt;br/&gt;
------------------------------------------------------------------------------&lt;br/&gt;
---------------------------------------------------&lt;br/&gt;
page id Page(0,Container(0, 1191405214574)) Overflow: false PageVersion: 28 SlotsInUse: 0 DeletedRowCount: 0 PageStatus: 1 NextId: 6 firstFreeByte: 189 freeSpace: 3899 totalSpace: 3899 spareSpace: 0 PageSize: 4096&lt;br/&gt;
---------------------------------------------------&lt;br/&gt;
Hex dump:&lt;br/&gt;
00000000: 0076 0000 0001 0000 0000 0000 0000 0000  .v..............&lt;br/&gt;
00000010: 0000 0006 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000020: 0000 0000 0001 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000030: 0000 0000 0000 0000 0000 0000 ffff ffff  ................&lt;br/&gt;
00000040: ffff ffff 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000060: 0000 0000 0000 0000 0000 0000 5000 0000  ............P...&lt;br/&gt;
00000070: 7400 0000 0000 0010 0000 0000 1400 0000  t...............&lt;br/&gt;
00000080: 0c00 0100 0800 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000090: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
000000a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
000000b0: 0000 0000 0000 0000 00dc 7f30 ca00 0000  .........?.0?...&lt;br/&gt;
000000c0: 0000 0010 0000 0000 0000 0000 0100 0000  ................&lt;br/&gt;
000000d0: 0000 0027 e800 0000 0030 0000 0000 0000  .........0......&lt;br/&gt;
000000e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
(the rest of the page is just zeros, except the checksum)&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12532096" author="knutanders" created="Wed, 3 Oct 2007 14:23:26 +0100"  >&lt;p&gt;To disable the scan for free entries in a buffer manager which is not full, make this change to Clock.findFreeItem():&lt;/p&gt;

&lt;p&gt;@@ -860,7 +860,7 @@&lt;/p&gt;

&lt;p&gt; 		// no need to sync on getting the sizes since if they are&lt;br/&gt;
 		// wrong we will discover it in the loop.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (validItemCount &amp;lt; holders.size()) {&lt;br/&gt;
+		if (false&amp;amp;&amp;amp;validItemCount &amp;lt; holders.size()) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 			synchronized (this) {&lt;/p&gt;


&lt;p&gt;Below is a dump of the alloc page at the same point in the test when running with the scan disabled. Major differences:&lt;/p&gt;

&lt;p&gt;  a) page 2 is not free&lt;br/&gt;
  b) 6th byte (status byte) is zero, whereas the only valid values are 1 (valid) and 2 (invalid). However, the pageStatus flag is 1.&lt;br/&gt;
  c) firstFreeByte, freeSpace and totalSpace are different&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Alloc page ***&lt;br/&gt;
nextAllocPageNumber = -1&lt;br/&gt;
nextAllocPageOffset = 0&lt;br/&gt;
reserved1 = 0&lt;br/&gt;
reserved2 = 0&lt;br/&gt;
reserved3 = 0&lt;br/&gt;
reserved4 = 0&lt;br/&gt;
borrowedSpace = 80&lt;br/&gt;
extent = ------------------------------------------------------------------------------&lt;br/&gt;
Extent map of from page 1 to page 10216&lt;br/&gt;
	page 1: valid, in use page&lt;br/&gt;
	page 2: valid, in use page&lt;br/&gt;
	page 3: valid, in use page&lt;br/&gt;
	page 4: valid, in use page&lt;br/&gt;
	page 5: valid, in use page&lt;br/&gt;
	page 6: valid, in use page&lt;br/&gt;
	page 7: free page&lt;br/&gt;
	From 7 to 10216 are un-allocated pages&lt;br/&gt;
------------------------------------------------------------------------------&lt;br/&gt;
---------------------------------------------------&lt;br/&gt;
page id Page(0,Container(0, 1191416310107)) Overflow: false PageVersion: 27 SlotsInUse: 0 DeletedRowCount: 0 PageStatus: 1 NextId: 6 firstFreeByte: 109 freeSpace: 3979 totalSpace: 3979 spareSpace: 0 PageSize: 4096&lt;br/&gt;
---------------------------------------------------&lt;br/&gt;
Hex dump:&lt;br/&gt;
00000000: 0076 0000 0000 0000 0000 0000 0000 0000  .v..............&lt;br/&gt;
00000010: 0000 0006 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000020: 0000 0000 0001 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000030: 0000 0000 0000 0000 0000 0000 ffff ffff  ................&lt;br/&gt;
00000040: ffff ffff 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000060: 0000 0000 0000 0000 0000 0000 5000 0000  ............P...&lt;br/&gt;
00000070: 7400 0000 0000 0010 0000 0000 1400 0000  t...............&lt;br/&gt;
00000080: 0c00 0100 0800 0000 0000 0000 0000 0000  ................&lt;br/&gt;
00000090: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
000000a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
000000b0: 0000 0000 0000 0000 00dc 7f30 ca00 0000  .........?.0?...&lt;br/&gt;
000000c0: 0000 0010 0000 0000 0000 0000 0100 0000  ................&lt;br/&gt;
000000d0: 0000 0027 e800 0000 0030 0000 0000 0000  .........0......&lt;br/&gt;
000000e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................&lt;br/&gt;
.&lt;br/&gt;
.&lt;br/&gt;
.&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12532101" author="knutanders" created="Wed, 3 Oct 2007 14:28:48 +0100"  >&lt;p&gt;I also tried to dump the alloc page right after the container was created, and I see the same differences in the 6th byte and in the fields firstFreeByte, freeSpace and totalSpace there as well.&lt;/p&gt;</comment>
                            <comment id="12532106" author="knutanders" created="Wed, 3 Oct 2007 14:35:14 +0100"  >&lt;p&gt;If I run the test with all other test cases commented out (but with a clean version of Clock), the status byte is OK (1), but all the other differences are there (page 2 is not free, and firstFreeByte/freeSpace/totalSpace are different).&lt;/p&gt;

&lt;p&gt;So I guess the first thing we need to find out is why firstFreeByte/freeSpace/totalSpace are different already when the container is created.&lt;/p&gt;</comment>
                            <comment id="12533135" author="knutanders" created="Mon, 8 Oct 2007 15:28:06 +0100"  >&lt;p&gt;OK, so I found out why firstFreeByte/freeSpace/totalSpace were different (see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3116&quot; title=&quot;totalSpace not properly initialized in AllocPage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3116&quot;&gt;&lt;del&gt;DERBY-3116&lt;/del&gt;&lt;/a&gt;), but that doesn&apos;t seem to be the problem. I&apos;ll keep looking.&lt;/p&gt;</comment>
                            <comment id="12533336" author="knutanders" created="Tue, 9 Oct 2007 13:02:33 +0100"  >&lt;p&gt;I think I found the problem. I extended the toString() methods in the page classes so that they printed all the fields, and then I noticed that the maxFieldSize field was different too. This field is initialized in StoredPage.initSpace() and depends on the value of slotEntrySize. initSpace() is called from StoredPage.usePageBuffer() which also initializes slotEntrySize. However, slotEntrySize is not initialized until after initSpace() has been called, so the value seen in initSpace() is old and possibly incorrect.&lt;/p&gt;

&lt;p&gt;The attached patch delays the call to initSpace() until slotEntrySize is properly initialized. This made T_RawStoreFactory run successfully with the buffer manager changes that made it fail before.&lt;/p&gt;</comment>
                            <comment id="12533667" author="knutanders" created="Wed, 10 Oct 2007 10:09:02 +0100"  >&lt;p&gt;I don&apos;t know how to make a reliable repro for this issue on a clean trunk, but the attached assert.diff adds some asserts that check if slotFieldSize and slotEntrySize are uninitialized. With these asserts, I&apos;m not able to create a new database:&lt;/p&gt;

&lt;p&gt;ij version 10.4&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:db;create=true&apos;;&lt;br/&gt;
ERROR XJ041: Failed to create database &apos;db&apos;, see the next exception for details.&lt;br/&gt;
ERROR XBM01: Startup failed due to an exception. See next exception for details. &lt;br/&gt;
ERROR XJ001: Java exception: &apos;ASSERT FAILED slotFieldSize uninitialized: org.apache.derby.shared.common.sanity.AssertFailure&apos;.&lt;/p&gt;</comment>
                            <comment id="12533671" author="knutanders" created="Wed, 10 Oct 2007 10:15:55 +0100"  >&lt;p&gt;The patch d3099-1.diff combines initSpace.diff and assert.diff. I have started a full regression test suite run and will post the results as soon as it has finished.&lt;/p&gt;

&lt;p&gt;The patch makes the following changes:&lt;br/&gt;
  1) Makes maxFieldSize private and fixes its comment&lt;br/&gt;
  2) Asserts that slotFieldSize/slotEntrySize have been properly initialized in initSpace()&lt;br/&gt;
  3) Delays the call to initSpace() until slotFieldSize/slotEntrySize have been initialized&lt;/p&gt;</comment>
                            <comment id="12533732" author="knutanders" created="Wed, 10 Oct 2007 13:57:04 +0100"  >&lt;p&gt;Derbyall and suites.All ran cleanly. Please review.&lt;/p&gt;</comment>
                            <comment id="12533766" author="bryanpendleton" created="Wed, 10 Oct 2007 16:19:11 +0100"  >&lt;p&gt;Patch d3099-1.diff seems like a good patch to me. My only suggestion is&lt;br/&gt;
that I think you could place a comment into the code around line 700,&lt;br/&gt;
noting that the order of operations here is important, something along&lt;br/&gt;
the lines of:&lt;/p&gt;

&lt;p&gt;  // Note that the slotFieldSize and slotEntrySize need to be&lt;br/&gt;
  // calculated BEFORE initSpace() is called, because the&lt;br/&gt;
  // maxFieldSize computation in initSpace() includes these&lt;br/&gt;
  // values in its calculations.&lt;/p&gt;

&lt;p&gt;The comment at line 3355 is good, too, but it is somewhat &lt;br/&gt;
discontiguous from the order-critical portion of your change.&lt;/p&gt;

&lt;p&gt;Whether or not you think an extra comment would help, +1 to commit from me.&lt;/p&gt;</comment>
                            <comment id="12533840" author="knutanders" created="Wed, 10 Oct 2007 20:06:51 +0100"  >&lt;p&gt;Good idea, Bryan. I&apos;ll add the comment before I commit. Thanks!&lt;/p&gt;</comment>
                            <comment id="12533966" author="knutanders" created="Thu, 11 Oct 2007 07:35:15 +0100"  >&lt;p&gt;Committed revision 583691.&lt;/p&gt;</comment>
                            <comment id="12533970" author="knutanders" created="Thu, 11 Oct 2007 07:46:36 +0100"  >&lt;p&gt;The bug is also present on the 10.3 branch (I applied the assert.diff patch and got the expected assert failures when I tried to connect to a database). Should the fix be backported, or is it safer just to leave it as it is since there are no known user-visible consequences?&lt;/p&gt;</comment>
                            <comment id="12534162" author="knutanders" created="Thu, 11 Oct 2007 22:22:54 +0100"  >&lt;p&gt;Committed to 10.3 with revision 583956.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12367452" name="assert.diff" size="2340" author="knutanders" created="Wed, 10 Oct 2007 10:09:02 +0100"/>
                            <attachment id="12367453" name="d3099-1.diff" size="2543" author="knutanders" created="Wed, 10 Oct 2007 10:15:55 +0100"/>
                            <attachment id="12366989" name="failfast.diff" size="755" author="knutanders" created="Wed, 3 Oct 2007 10:49:30 +0100"/>
                            <attachment id="12367334" name="initSpace.diff" size="714" author="knutanders" created="Tue, 9 Oct 2007 13:02:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 10 Oct 2007 15:19:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23431</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1107:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39813</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>