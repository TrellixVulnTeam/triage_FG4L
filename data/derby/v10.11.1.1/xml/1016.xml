<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:18:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-1016/DERBY-1016.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-1016] javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction</title>
                <link>https://issues.apache.org/jira/browse/DERBY-1016</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction&lt;/p&gt;

&lt;p&gt;I posted a question to derby-dev about this and heard no response so am assuming it is indeed a bug.&lt;/p&gt;

&lt;p&gt; in  the  XA+ &lt;br/&gt;
specification, it seems like xa_forget should  only be valid for a&lt;br/&gt;
heuristically completed transaction, so should  be  XAER_PROTO&lt;br/&gt;
and not XAER_NOTA.&lt;/p&gt;


&lt;p&gt;In xaStateTran.sql we have this case:&lt;/p&gt;

&lt;p&gt;&amp;#8211; get back into prepared state&lt;br/&gt;
xa_start xa_noflags 50;&lt;br/&gt;
insert into xastate values(2);&lt;br/&gt;
xa_end xa_success 50;&lt;br/&gt;
xa_prepare 50;&lt;/p&gt;

&lt;p&gt;select * from global_xactTable where gxid is not null order by gxid;&lt;/p&gt;

&lt;p&gt;&amp;#8211; the following should error XAER_NOTA&lt;br/&gt;
xa_forget 50;&lt;/p&gt;



&lt;p&gt;The user  code I am looking at handles forget like this. They expect &lt;br/&gt;
XAER_PROTO in this case.&lt;/p&gt;

&lt;p&gt;try &lt;/p&gt;
{
             xaRes.forget(xidList[i]);
              System.out.print(&quot;XA-Transaction [&quot; + (i+1) + &quot;]
Forgotten. \n&quot; );
}
&lt;p&gt; catch (XAException XAeForget) {&lt;br/&gt;
                        if ( XAeForget.errorCode ==&lt;br/&gt;
XAException.XAER_PROTO ) &lt;/p&gt;
{
                            System.out.print(&quot;XA-Transaction [&quot; + (i+1)
+ &quot;] not heuristically completed yet - Rolling Back instead. \n&quot; );
                            xaRes.rollback(xidList[i]);
                            System.out.print(&quot;XA-Transaction [&quot; + (i+1)
+ &quot;] Rolled Back. \n&quot; );
                        }
&lt;p&gt;                        if ( XAeForget.getMessage() != null ) {&lt;br/&gt;
                            System.out.println(&quot;XAException &quot; +&lt;br/&gt;
XAeForget.getMessage() );&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12329270">DERBY-1016</key>
            <summary>javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rsjay1976">Jayaram Subramanian</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                            <label>derby_backport_reject_10_8</label>
                            <label>derby_triage10_5_2</label>
                    </labels>
                <created>Wed, 22 Feb 2006 03:07:02 +0000</created>
                <updated>Mon, 17 Jun 2013 10:19:45 +0100</updated>
                            <resolved>Tue, 6 Dec 2011 15:14:59 +0000</resolved>
                                    <version>10.1.3.1</version>
                    <version>10.2.1.6</version>
                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12367447" author="djd" created="Thu, 23 Feb 2006 08:34:55 +0000"  >&lt;p&gt;Reading the javadoc for XAResource I think I agree with you,  XAER_PROTO is the correct error.&lt;/p&gt;

&lt;p&gt;XAResource.recover()&lt;/p&gt;

&lt;p&gt;&quot;The transaction manager calls this method during recovery to obtain the list of transaction branches that are currently in prepared or heuristically completed states.&quot;&lt;/p&gt;

&lt;p&gt;XAResource.forget&lt;/p&gt;

&lt;p&gt;&quot;Tells the resource manager to forget about a heuristically completed transaction branch.&quot;&lt;/p&gt;

&lt;p&gt;Thus a prepared transaction is not a heuristically completed transaction branch and therefore is not a valid state for forget.&lt;/p&gt;


</comment>
                            <comment id="12368390" author="mikem" created="Thu, 2 Mar 2006 08:02:54 +0000"  >&lt;p&gt;I took a quick look at the store implementation of forget() which is in &lt;br/&gt;
opensource/java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java!forget().  &lt;br/&gt;
It turns out in this store implementation of XA there is never such a thing as a &lt;br/&gt;
heuristically completed transaction, so the implementation just ALWAYS throws&lt;br/&gt;
 throw StandardException.newException(&lt;br/&gt;
         SQLState.STORE_XA_PROTOCOL_VIOLATION);&lt;/p&gt;

&lt;p&gt;I would have assumed that this would have been mapped to PROTO.&lt;/p&gt;

&lt;p&gt;I also seem to remember that in runtime the jdbc layer maintains the XA xid list, so it may be doing a &lt;br/&gt;
lookup before calling store, to do the forget.&lt;/p&gt;

&lt;p&gt;The problem must be in the error mapping from store error to jdbc error.  I am not sure but I believe this mapping&lt;br/&gt;
may be different in network vs. embedded, so it ism portant for the bug reporter to note which system he is using.  My&lt;br/&gt;
guess would be embedded , but that is only a guess.&lt;/p&gt;

&lt;p&gt;Anyone know where the mapping for these errors is?&lt;/p&gt;</comment>
                            <comment id="12709409" author="kmarsden" created="Thu, 14 May 2009 15:23:04 +0100"  >&lt;p&gt;This appears to be a problem for both embedded and network server.  Attached is a reproduction.  As is it runs with embedded but you can comment/&apos;uncomment a few lines to run with Client.&lt;/p&gt;

&lt;p&gt;There is this highly suspect code in  EmbedXAResource.forget() which may be relevant:&lt;/p&gt;


&lt;p&gt;  throw new XAException(tranState.isPrepared&lt;br/&gt;
            ? XAException.XAER_NOTA &lt;br/&gt;
            : XAException.XAER_PROTO);&lt;/p&gt;

</comment>
                            <comment id="12710693" author="pandiri" created="Tue, 19 May 2009 11:43:33 +0100"  >&lt;p&gt;I am getting the following error when I try to reproduce the error for &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1016&quot; title=&quot;javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1016&quot;&gt;&lt;del&gt;DERBY-1016&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ReproDerby1016.java:26: cannot find symbol&lt;br/&gt;
symbol  : class utilXid&lt;br/&gt;
location: class ReproDerby1016&lt;br/&gt;
        Xid xid = new utilXid(1,93,18);&lt;br/&gt;
                      ^&lt;br/&gt;
1 error&lt;/p&gt;

&lt;p&gt;More Info about the Derby Setup:&lt;/p&gt;

&lt;p&gt;I have checked-out  trunk  source in windows machine and built it  using Ant.&lt;br/&gt;
I have created a lib folder in home directory and copied  all jars (jars/sane/*.jar) to lib and set the DERBY_HOME , path , classpath accordingly.&lt;br/&gt;
I have put classes folder also in classpath.&lt;/p&gt;

&lt;p&gt;what might be the Error.?&lt;/p&gt;</comment>
                            <comment id="12710734" author="kmarsden" created="Tue, 19 May 2009 14:54:33 +0100"  >&lt;p&gt;My bad, I neglected to attach this file.&lt;/p&gt;</comment>
                            <comment id="12711238" author="pandiri" created="Wed, 20 May 2009 18:17:47 +0100"  >&lt;p&gt;Thanks Kathey&lt;/p&gt;</comment>
                            <comment id="12714079" author="pandiri" created="Thu, 28 May 2009 18:37:27 +0100"  >&lt;p&gt;As pointed out by Kathey , It seems that the error lies in the conditional evaluation of tranState.isPrepared in EmbedXAResource.forget().&lt;br/&gt;
Attached is the first/quick/small  patch to it , please review and give your comments.&lt;br/&gt;
Thank you&lt;/p&gt;</comment>
                            <comment id="12714084" author="kmarsden" created="Thu, 28 May 2009 18:49:20 +0100"  >&lt;p&gt;Hi Ravinder,&lt;/p&gt;

&lt;p&gt;I think the  code change looks ok. Please add a test to XATransactionTest.  You should also run XATest (currently not in a suite &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4155&quot; title=&quot;jdbcapi/XATest.java  doesn&amp;#39;t seem to be running anywhere&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4155&quot;&gt;&lt;del&gt;DERBY-4155&lt;/del&gt;&lt;/a&gt;) to make sure there are no issues associated with the change  and let us know the results of your  Suites.All and derbyall runs.&lt;/p&gt;

&lt;p&gt;Thanks &lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;</comment>
                            <comment id="12717281" author="kmarsden" created="Mon, 8 Jun 2009 16:07:25 +0100"  >&lt;p&gt;Hi Ravinder,&lt;/p&gt;

&lt;p&gt;I just wanted to check in on this issue.  It would be great to get it committed by July 14,our target release candidate date.  Do you think you will have time to work on it between now and then?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Kathey&lt;/p&gt;
</comment>
                            <comment id="12717623" author="pandiri" created="Tue, 9 Jun 2009 10:18:24 +0100"  >&lt;p&gt;Hi Kathey,&lt;/p&gt;

&lt;p&gt;I think I can complete by then.&lt;/p&gt;

&lt;p&gt;thank you&lt;/p&gt;</comment>
                            <comment id="12733696" author="rhillegas" created="Tue, 21 Jul 2009 17:30:09 +0100"  >&lt;p&gt;Triaged for 10.5.3: assigned normal urgency and noted that a repro is attached.&lt;/p&gt;</comment>
                            <comment id="12738443" author="kmarsden" created="Mon, 3 Aug 2009 18:33:13 +0100"  >&lt;p&gt;Ravinder told me offline that he would not be able to work on this for a while. Unassigning so someone else can finish it off.  I think the code change is ok. We just need a new test.&lt;/p&gt;

&lt;p&gt;Ravinder, I hope you will be able to come back in the near future and pick up another issue.&lt;/p&gt;</comment>
                            <comment id="12738686" author="espinha" created="Tue, 4 Aug 2009 00:46:46 +0100"  >&lt;p&gt;I&apos;m attaching a second patch that adds a new fixture to XATransaction to test for the existence of this bug. With Ravinder&apos;s patch, the fixture passes correctly. I&apos;ll be running suites.All with both patches on.&lt;/p&gt;</comment>
                            <comment id="12738687" author="kmarsden" created="Tue, 4 Aug 2009 00:53:15 +0100"  >&lt;p&gt;Hi Tiago,&lt;br/&gt;
Before you start your suites.All run. The test should use  the J2EEDataSource class and run with client too. &lt;/p&gt;

&lt;p&gt;Also I think the arguments in the assertEquals are reversed.&lt;br/&gt;
XAeForget.errorCode, XAException.XAER_PROTO&lt;/p&gt;

&lt;p&gt;The expected code should come first.&lt;/p&gt;
</comment>
                            <comment id="12739713" author="espinha" created="Wed, 5 Aug 2009 21:11:45 +0100"  >&lt;p&gt;I&apos;m attaching a fixed patch. I&apos;ve also ran suites.All with no failures. However, I ran suites.All under Mac OS X and I was surprised to get a test count that was inferior to 10k tests. If I recall correctly, my Windows and Linux runs always have around 12k tests - is there a logical explanation for this? And is it concerning?&lt;/p&gt;</comment>
                            <comment id="12739957" author="pandiri" created="Thu, 6 Aug 2009 10:27:29 +0100"  >&lt;p&gt;Sure , I will be back !&lt;/p&gt;</comment>
                            <comment id="12740193" author="myrna" created="Thu, 6 Aug 2009 19:48:58 +0100"  >&lt;p&gt;Tiago, maybe the upgrade tests, or not all of them, did get run? Did you maybe run with -DderbyTesting.oldReleasePath set to an old directory? Or perhaps you didn&apos;t run with it set and there was a problem getting to  &apos;http://svn.apache.org/repos/asf/db/derby/jars&apos;? (like, either that http server was down or you have some sort of firewall protection or had network trouble).&lt;/p&gt;
</comment>
                            <comment id="12740201" author="espinha" created="Thu, 6 Aug 2009 19:56:35 +0100"  >&lt;p&gt;It is possible that the upgrade tests were skipped. I didn&apos;t use the derbyTesting.oldReleasePath but network trouble isn&apos;t completely out of the picture. I will give it another spin today with derby.tests.trace=true and redirecting the output to a file, then maybe I can see which ones were skipped.&lt;/p&gt;

&lt;p&gt;I&apos;m just worried that this might be a Mac issue, as Macs run Apple&apos;s own JDK. In the meanwhile I&apos;m doing my test runs on my trustworthy Ubuntu VM, just to be safe.&lt;/p&gt;</comment>
                            <comment id="12741104" author="myrna" created="Sun, 9 Aug 2009 17:28:59 +0100"  >&lt;p&gt;Thanks Tiago for your email to the list indicating you ran suites.All successfully. &lt;br/&gt;
However, I thought it prudent to run derbyall (with ibm16 and sane classes), and it popped one new test failure (apart from a failure in unit/T_RawStoreFactory.unit, similar to the closed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-654&quot; title=&quot;unit/T_RawStoreFactory.unit fails with an assert failure in J2ME/CDC/FP&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-654&quot;&gt;&lt;del&gt;DERBY-654&lt;/del&gt;&lt;/a&gt;, which we can ignore here because I often get it on my machine with this configuration):&lt;br/&gt;
jdbcapi/xaSimpleNegative.sql. This test apparently already had a test for the XaResource.forget...&lt;br/&gt;
And as expected, it now shows XAER_PROTO instead of XAER_NOTA.&lt;br/&gt;
However, it has another test case of XAResource.forget, and that now returns XAER_NOTA instead of XAER_PROTO&lt;/p&gt;

&lt;p&gt;Looking at the code change, this is logical, but I&apos;m just not sure that we&apos;re doing the right thing.&lt;br/&gt;
Should both cases return XAER_PROTO?&lt;/p&gt;

&lt;p&gt;I looked at the diff for a while, but would like to get the opinion of someone who understands/knows the XA specs better....&lt;br/&gt;
This is the flip/flop section:&lt;br/&gt;
-------------------------------------------------&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; start one&lt;br/&gt;
xa_start xa_noflags 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; ERROR: can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_NOTA                                                          &amp;lt;---returns XAER_PROTO after patch&lt;br/&gt;
ij(XA)&amp;gt; delete from APP.negative;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij(XA)&amp;gt; xa_end xa_success 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; ERROR: now try some bad flag &lt;br/&gt;
xa_start xa_suspend 1;&lt;br/&gt;
IJ ERROR: XAER_INVAL &lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; ERROR: now try some bad flag &lt;br/&gt;
xa_start xa_fail 1;&lt;br/&gt;
IJ ERROR: XAER_INVAL &lt;br/&gt;
ij(XA)&amp;gt; xa_prepare 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_PROTO                                                     &amp;lt;--returns XAER_NOTA after patch&lt;br/&gt;
--------------------------------------------------------------&lt;/p&gt;</comment>
                            <comment id="12741105" author="myrna" created="Sun, 9 Aug 2009 17:29:34 +0100"  >&lt;p&gt;I forgot to say - the test case in xaTransactionTest looks good.&lt;/p&gt;</comment>
                            <comment id="12741421" author="espinha" created="Mon, 10 Aug 2009 17:53:24 +0100"  >&lt;p&gt;If I understood this properly, XA.forget does return different exceptions depending on the status of the transaction. With this in mind, we probably need to change one occurrence of the XA.forget in the harness test to accommodate for the fact that the exception being thrown for this specific case is now different.&lt;/p&gt;

&lt;p&gt;Is this correct?&lt;/p&gt;</comment>
                            <comment id="12741501" author="kmarsden" created="Mon, 10 Aug 2009 20:23:32 +0100"  >&lt;p&gt;I have not looked closely at this issue or the XA spec in a long time, but my gut instinct is that we should still return XAER_PROTO for this case:&lt;br/&gt;
(XA)&amp;gt; xa_prepare 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_PROTO &amp;lt;--returns XAER_NOTA after patch &lt;/p&gt;

&lt;p&gt;The new  behavior seems to contradict the description of the issue: javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XAERR_PROTO on a prepared transaction&lt;/p&gt;

&lt;p&gt;and in general you would think that if the transaction exists you shouldn&apos;t get XAER_NOTA (no transaction)&lt;/p&gt;

&lt;p&gt;Please consult the XA Spec to clarify what the behavior should be.&lt;br/&gt;
&lt;a href=&quot;http://www.opengroup.org/publications/catalog/c193.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.opengroup.org/publications/catalog/c193.htm&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12741581" author="espinha" created="Mon, 10 Aug 2009 22:55:45 +0100"  >&lt;p&gt;I checked the specification that Kathey posted and here&apos;s what it has to say about forgetting transactions:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;XAER_NOTA&amp;#93;&lt;/span&gt; &lt;br/&gt;
The speci&#64257;edXIDis not knownbythe resource manager as a heuristically &lt;br/&gt;
completedXID.&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;XAER_PROTO&amp;#93;&lt;/span&gt; &lt;br/&gt;
The routine was invoked in an improper context. See Chapter 6 for details.&lt;/p&gt;

&lt;p&gt;On further reading, it says the following:&lt;br/&gt;
If a resource manager does not recognise &#8727;xid, the function fails, returning &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;XAER_NOTA&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;So, I think this is pretty clear that XAER_NOTA is specifically for when we attempt to do an operation on a transaction that is not recognized by the resource manager. Therefore, I think that as long as the transaction exists, the xa_forget call should always return XAER_PROTO in the event of an exception.&lt;/p&gt;</comment>
                            <comment id="12741948" author="myrna" created="Tue, 11 Aug 2009 17:34:45 +0100"  >&lt;p&gt;I messed up my comment. I had modified the .out to check that it would make the test pass, and instead of from the original .out, I pasted my comment using the modified one.&lt;/p&gt;

&lt;p&gt;So....&lt;br/&gt;
xaSimpleNegative has 2 cases of using of xa_forget:&lt;br/&gt;
1:&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; start one&lt;br/&gt;
xa_start xa_noflags 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; ERROR: can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_PROTO                    &amp;lt;-- returns XAER_NOTA after the patch&lt;/p&gt;

&lt;p&gt;2.:&lt;br/&gt;
ij(XA)&amp;gt; xa_prepare 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_NOTA                     &amp;lt;-- returns XAER_PROTO after the patch&lt;/p&gt;

&lt;p&gt;I&apos;m sorry for the confusion. &lt;br/&gt;
So, based on this, I think the result after the patch makes perfect sense based on the change the patch does...But are both correct?&lt;/p&gt;</comment>
                            <comment id="12742050" author="espinha" created="Tue, 11 Aug 2009 21:40:41 +0100"  >&lt;p&gt;Me and Kathey have been testing the repro in this issue under both PostgreSQL and DB2. As it turns out, PostgreSQL fails and DB2 passes. The failure I get on PostgreSQL reads as follows:&lt;br/&gt;
FAIL: got unexpected exception Heuristic commit/rollback not supported errorCode: -4  calling forget on a prepared transaction&lt;/p&gt;

&lt;p&gt;It is throwing an error code -4. If we check the XAException class we can see that the error being thrown is actually an XAER_NOTA as opposed to the expected XAER_PROTO.&lt;/p&gt;

&lt;p&gt;However, per Kathey&apos;s testing, we do get XAER_PROTO on DB2.&lt;/p&gt;</comment>
                            <comment id="12742086" author="kmarsden" created="Tue, 11 Aug 2009 23:01:30 +0100"  >&lt;p&gt;DB2 also returns XAER_PROTO for the case where forget() is called after start()  (This case now returns XAER_NOTA with the patch)&lt;/p&gt;

&lt;p&gt;My understanding is that Informix also returns XAER_PROTO  for both cases but I have not confirmed that myself.&lt;/p&gt;

&lt;p&gt;Tiago found Postgress returned XAER_NOTA in both cases.&lt;/p&gt;

&lt;p&gt;A couple things to note when trying to sort out the spec and our behavior.  &lt;br/&gt;
1) There are no positive cases for forget() with Derby I think. We do not have a method for  heuristic completion, so it is just a matter of which error to throw.  In the xa spec under xa_fprget() it says:&lt;/p&gt;

&lt;p&gt;XAER_NOTA - The specified XID is not known by the resource manager as a heuristically completed XID.&lt;/p&gt;

&lt;p&gt;XAER_PROTO - The routine was invoked in an improper context.&lt;/p&gt;

&lt;p&gt;2) For the original case on which this Jira was based, the user was trying to write a generic recovery program which would forget transactions that had been heuristically completed and rollback if they were not heuristically completed but rather still in a prepared state.  He would first try the forget() and then if that gave an XAER_PROTO would attempt the rollback(). The workaround we gave was to also check for XAER_NOTA.  &lt;/p&gt;

&lt;p&gt;3) It is interesting to note that for other calls XAER_NOTA has a different description.&lt;br/&gt;
XAER_NOTA - The specified XID is not known by the resource manager.&lt;/p&gt;

&lt;p&gt;I wish I understood some more about heuristic completion but tend to think that since the only way to differentiate a prepared vs heuristically completed transaction returned by recover() is to call forget, the user was not really calling it in an improper context and someone went out of their way to put that extra condition on the XAER_NOTA exception desription for forget(),  so my somewhat uneasy opinion is that XAER_NOTA is  most appropriate whenever forget() is called with Derby.  Opinions?&lt;/p&gt;
</comment>
                            <comment id="12742663" author="kmarsden" created="Thu, 13 Aug 2009 01:23:29 +0100"  >&lt;p&gt;Just to add in another opinion, I consulted with my colleague with the JCC team (DB2) and he feels XAER_PROTO is correct.  He said:&lt;br/&gt;
&quot;I would say that XAER_PROTO is more appropriate as the resource manager is aware of the XID in prepared state.&quot;&lt;/p&gt;
</comment>
                            <comment id="12742952" author="espinha" created="Thu, 13 Aug 2009 21:46:45 +0100"  >&lt;p&gt;I have been discussing this issue with Kathey and Myrna on IRC and it is generally hard to reach an optimal behavior, mostly because the XA specification is too vague and not very clear on this issue.&lt;/p&gt;

&lt;p&gt;On MySQL for example, we are able to invoke a forget on a transaction right after we start it, whereas this is not possible in DB2. Also, running the attached repro against MySQL makes it fail with XAER_RMFAIL:&lt;br/&gt;
XAER_RMFAIL: The command cannot be executed when global transaction is in the  ACTIVE state&lt;/p&gt;

&lt;p&gt;Still, since we don&apos;t have heuristic transactions in Derby, forget will always return an error and never really succeed. This way, we thought the best behavior is to throw XAER_NOTA (not a transaction) whenever the XID doesn&apos;t exist and throw XAER_PROTO for all the cases where the XID exists.&lt;/p&gt;

&lt;p&gt;Should no one object to this change, I&apos;ll create a patch and go through with it.&lt;/p&gt;</comment>
                            <comment id="12742985" author="kmarsden" created="Thu, 13 Aug 2009 22:39:35 +0100"  >&lt;p&gt;That behavior sounds reasonable to me and  provides the most intuitive user feedback I think.  We should have a release note describing the cases that change.&lt;/p&gt;

</comment>
                            <comment id="12896705" author="espinha" created="Mon, 9 Aug 2010 22:44:00 +0100"  >&lt;p&gt;Unassigning as I&apos;m working on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-728&quot; title=&quot;Unable to create databases whose name containg Chinese characters through the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-728&quot;&gt;&lt;del&gt;DERBY-728&lt;/del&gt;&lt;/a&gt; and other people might pick this up in the meanwhile.&lt;/p&gt;</comment>
                            <comment id="13105414" author="kmarsden" created="Thu, 15 Sep 2011 16:08:57 +0100"  >&lt;p&gt;Hi Jayaram,&lt;/p&gt;

&lt;p&gt;Thank you for looking at this issue. If you read through the comments you will see that Tiago did most of the work to figure out what the behavior should be.  So the code fix itself should probably just be a few lines plus you will need to add a test to XATest, but you may want to familiarize yourself with XA first.&lt;/p&gt;

&lt;p&gt;Here is some reference material that you might find helpful in learning about XA&lt;br/&gt;
The XA Open Specification&lt;br/&gt;
&lt;a href=&quot;https://www2.opengroup.org/ogsys/jsp/publications/PublicationDetails.jsp?publicationid=11144&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www2.opengroup.org/ogsys/jsp/publications/PublicationDetails.jsp?publicationid=11144&lt;/a&gt;&lt;br/&gt;
The JTA Specification&lt;br/&gt;
&lt;a href=&quot;http://www.oracle.com/technetwork/java/javaee/jta/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.oracle.com/technetwork/java/javaee/jta/index.html&lt;/a&gt;&lt;/p&gt;

</comment>
                            <comment id="13118609" author="rsjay1976" created="Sat, 1 Oct 2011 02:01:40 +0100"  >&lt;p&gt;Hi &lt;br/&gt;
1) In the attaced test case suite, should we add a case for XAER_NOTA scenario&lt;br/&gt;
2) In the atttached test case should we test for a positive scenario where XA_FORGET goes through without any issues&lt;br/&gt;
3) Also in simillar lines should we test how XA_FORGET behaves  after a commit or rollback.&lt;/p&gt;</comment>
                            <comment id="13128338" author="rsjay1976" created="Sun, 16 Oct 2011 04:54:14 +0100"  >&lt;p&gt;Thanks Kathy,&lt;br/&gt;
As per the issue history, to make the xa_forget to throw the xaer_proto error, modified the patched EmbedXAResource.java from &lt;/p&gt;

&lt;p&gt;throw new XAException(tranState.isPrepared ? XAException.XAER_PROTO: XAException.XAER_NOTA) &lt;br/&gt;
to &lt;br/&gt;
throw     new XAException(XAException.XAER_PROTO)&lt;/p&gt;

&lt;p&gt;After making the above change, tried running attached fixture testForgetExceptionDerby1016. But  i get the exception  below. &lt;/p&gt;

&lt;p&gt;1) testForgetExceptionDerby1016(org.apache.derbyTesting.functionTests.tests.jdbcapi.XATransactionTest)junit.framework.AssertionFailedError: &lt;br/&gt;
FAIL: Got unexpected exception null errorCode: -4  calling forget on a prepared transaction expected:&amp;lt;-6&amp;gt; but was:&amp;lt;-4&amp;gt;&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.XATransactionTest.testForgetExceptionDerby1016(XATransactionTest.java:447)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:116)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;/p&gt;</comment>
                            <comment id="13159074" author="rsjay1976" created="Tue, 29 Nov 2011 04:15:56 +0000"  >&lt;p&gt;Attaching the fix for review. Also attaching the test output.&lt;/p&gt;</comment>
                            <comment id="13159849" author="myrna" created="Wed, 30 Nov 2011 06:09:24 +0000"  >&lt;p&gt;Thanks Jayaram for that patch.&lt;/p&gt;

&lt;p&gt;There are a couple of concerns with your patch.&lt;br/&gt;
Firstly, the .stat file seems to list a number of files that have conflicts. &lt;br/&gt;
Secondly, there were some unnecessary whitespace differences, some unnecessary brackets, and there were some left-over references to java.io.PrintStream - probably from some debugging attempts.&lt;br/&gt;
Usually, before submitting a patch, it makes sense to review your svn diff result and carefully evaluate your changes...&lt;/p&gt;

&lt;p&gt;Apart from that, the patch looked fine to me.&lt;br/&gt;
However, it seems that the forget method in EmbedXAResource that was changed for this test would return either an XAER_NOTA or XAER_PROTO, and so perhaps it would be nice to have an additional test case for the XAER_NOTA.&lt;br/&gt;
I&apos;ve uploaded a patch that makes those minor adjustments.&lt;/p&gt;

&lt;p&gt;However, I have two further questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;before submitting this latest patch, you mentioned seeing the test fail. What happened between then and now? Did the problem get resolved by doing a clean build (after ant clobber) perhaps?&lt;/li&gt;
	&lt;li&gt;Did you run suites.All?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I ran jdbcapi._Suite which I think is enough to test the latest patch. That patch is now ready for review.&lt;/p&gt;</comment>
                            <comment id="13163118" author="myrna" created="Mon, 5 Dec 2011 22:37:28 +0000"  >&lt;p&gt;I committed the last patch (my modifications based on Jayaram&apos;s) with revision 1210686.&lt;/p&gt;</comment>
                            <comment id="13163623" author="myrna" created="Tue, 6 Dec 2011 14:32:36 +0000"  >&lt;p&gt;Reopening because this check in caused a test failure in jdbcapi/xaSimpleNegative.sql:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Start: xaSimpleNegative jdk1.6.0_24 derbyall:xa 2011-12-06 01:06:38 ***&lt;br/&gt;
193 del&lt;br/&gt;
&amp;lt; IJ ERROR: XAER_NOTA &lt;br/&gt;
193a193&lt;br/&gt;
&amp;gt; IJ ERROR: XAER_PROTO &lt;br/&gt;
Test Failed.&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13163636" author="myrna" created="Tue, 6 Dec 2011 15:14:59 +0000"  >&lt;p&gt;It seems to me the diff in the failing xaSimpleNegative test was exactly in the case for which this bug was logged, this is from xaSimpleNegative.out:&lt;br/&gt;
ij(XA)&amp;gt; xa_prepare 1;&lt;br/&gt;
ij(XA)&amp;gt; &amp;#8211; can only forget heuristically completed transaction&lt;br/&gt;
xa_forget 1;&lt;br/&gt;
IJ ERROR: XAER_PROTO &lt;/p&gt;

&lt;p&gt;So I updated the master with revision 1210972.&lt;br/&gt;
resolving again.&lt;/p&gt;</comment>
                            <comment id="13222604" author="kmarsden" created="Mon, 5 Mar 2012 20:53:12 +0000"  >&lt;p&gt;Although a behavior  correction, this is a behavior change so I think needs a release note and is  probably  not appropriate for backport.&lt;/p&gt;
</comment>
                            <comment id="13276144" author="rhillegas" created="Tue, 15 May 2012 20:37:04 +0100"  >&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;This issue is marked as needing a release note but no release note has been provided. Could someone please supply a release note? Thanks.&lt;/p&gt;</comment>
                            <comment id="13278561" author="rsjay1976" created="Fri, 18 May 2012 04:59:21 +0100"  >&lt;p&gt;Please find the attached release notes. But i was not able to validate the release notes, since i kept getting classnotfound exception when trying to run java org.apache.derbyBuild.ReleaseNoteReader releaseNote.html.&lt;/p&gt;</comment>
                            <comment id="13278771" author="rhillegas" created="Fri, 18 May 2012 13:41:55 +0100"  >&lt;p&gt;Thanks for the first draft of the release note, Jayaram. I have re-worded it slightly. Feel free to correct it further if you think I garbled it.&lt;/p&gt;

&lt;p&gt;It may be that your classpath did not include the class tree generated by the Derby build. ReleaseNoteReader is compiled into the class tree but it isn&apos;t put into any of the Derby jars.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Rick&lt;/p&gt;</comment>
                            <comment id="13279014" author="kmarsden" created="Fri, 18 May 2012 18:50:47 +0100"  >&lt;p&gt;I think the release note makes it sound like we throw XAER_PROTO in all cases of forget() even if the transaction does not exist. If the transaction does not exist, we still throw XAER_NOTA.&lt;/p&gt;

&lt;p&gt;So we throw XAER_PROTO for forget() with an active transaction id. XAER_NOTA  if the transaction does not exist.  Prior behavior was we would throw XAER_NOTA in all cases when forget() was called.&lt;/p&gt;


</comment>
                            <comment id="13279041" author="rhillegas" created="Fri, 18 May 2012 19:16:35 +0100"  >&lt;p&gt;Attaching a new version of the release note, which hopefully clarifies the point Kathey raised. If this still doesn&apos;t look correct, feel free to wordsmith it further.&lt;/p&gt;</comment>
                            <comment id="13279124" author="kmarsden" created="Fri, 18 May 2012 20:51:43 +0100"  >&lt;p&gt;I think that looks great. Thanks Rick and Jayaram.&lt;/p&gt;</comment>
                            <comment id="13685348" author="knutanders" created="Mon, 17 Jun 2013 10:19:45 +0100"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update&amp;#93;&lt;/span&gt; Close all resolved issues that haven&apos;t been updated for more than one year.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12505579" name="DERBY-1016.diff" size="4253" author="myrna" created="Wed, 30 Nov 2011 05:56:13 +0000"/>
                            <attachment id="12415651" name="DERBY-1016.patch" size="3109" author="espinha" created="Wed, 5 Aug 2009 21:11:45 +0100"/>
                            <attachment id="12415426" name="DERBY-1016.patch" size="2387" author="espinha" created="Tue, 4 Aug 2009 00:46:46 +0100"/>
                            <attachment id="12409286" name="DERBY-1016_Patch_1.diff" size="556" author="pandiri" created="Thu, 28 May 2009 18:37:27 +0100"/>
                            <attachment id="12408134" name="ReproDerby1016.java" size="3475" author="kmarsden" created="Thu, 14 May 2009 15:23:04 +0100"/>
                            <attachment id="12505443" name="derby1016-donotcommit.diff" size="3606" author="rsjay1976" created="Tue, 29 Nov 2011 04:15:55 +0000"/>
                            <attachment id="12505444" name="derby1016-stat.txt" size="878" author="rsjay1976" created="Tue, 29 Nov 2011 04:15:55 +0000"/>
                            <attachment id="12528116" name="releaseNote.html" size="1294" author="rhillegas" created="Fri, 18 May 2012 19:16:35 +0100"/>
                            <attachment id="12528049" name="releaseNote.html" size="1201" author="rhillegas" created="Fri, 18 May 2012 13:41:55 +0100"/>
                            <attachment id="12527999" name="releaseNote.html" size="1315" author="rsjay1976" created="Fri, 18 May 2012 04:59:54 +0100"/>
                            <attachment id="12505445" name="runoutputNov30.out" size="1155" author="rsjay1976" created="Tue, 29 Nov 2011 04:15:55 +0000"/>
                            <attachment id="12408484" name="utilXid.java" size="1591" author="kmarsden" created="Tue, 19 May 2009 14:54:33 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 23 Feb 2006 08:34:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10422"><![CDATA[High Value Fix]]></customfieldvalue>
    <customfieldvalue key="10426"><![CDATA[Known fix]]></customfieldvalue>
    <customfieldvalue key="10423"><![CDATA[Newcomer]]></customfieldvalue>
    <customfieldvalue key="10101"><![CDATA[Release Note Needed]]></customfieldvalue>
    <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0brz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35726</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10052"><![CDATA[Normal]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>