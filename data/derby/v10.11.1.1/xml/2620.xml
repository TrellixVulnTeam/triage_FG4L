<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:35:08 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2620/DERBY-2620.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2620] embedded throws SQLState 8003 (No current connection) on rs.next() on closed resultSet in test for DERBY-1025 in DataSourceTest</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2620</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The following code checking that a CLOSE_CURSORS_AT_COMMIT ResultSet is closed by xa_start  throws the wrong exception for embedded, indicating that there is no current connection instead of the ResultSet  being closed.&lt;br/&gt;
   Statement s4 = conn4.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.CLOSE_CURSORS_AT_COMMIT);&lt;br/&gt;
        ResultSet rs4 = s4.executeQuery(&quot;select i from autocommitxastart&quot;);&lt;br/&gt;
        rs4.next();&lt;br/&gt;
        assertEquals(1, rs4.getInt(1));&lt;br/&gt;
        rs4.next();&lt;br/&gt;
        assertEquals(2, rs4.getInt(1));&lt;/p&gt;

&lt;p&gt;        // XAResource().start should commit the transaction&lt;br/&gt;
        try &lt;/p&gt;
{
            xac4.getXAResource().start(xid4a, XAResource.TMNOFLAGS);
            xac4.getXAResource().end(xid4a, XAResource.TMSUCCESS);
        }
&lt;p&gt; catch (XAException xae) &lt;/p&gt;
{
            fail(&quot;unexpected XAException on xac4.getXAResource.start or end&quot;);
        }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
            fail(&quot;unexpected Exception on xac4.getXAResource.start or end&quot;);
        }

&lt;p&gt;        // &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-1025&quot; title=&quot;[xa] client XAResource.start() does not commit an active local transaction when auto commit is true&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-1025&quot;&gt;&lt;del&gt;DERBY-1025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
        // With Embedded, this will give error: 08003 - No current connection&lt;br/&gt;
        // But with NetworkServer / DerbyNetClient, the transaction does not&lt;br/&gt;
        // appear to be closed, and we actually get a value.&lt;br/&gt;
        try &lt;/p&gt;
{
            rs4.next();
            rs4.getInt(1);            
            fail (&quot;expected an exception indicating resultset is closed.&quot;);
        }
&lt;p&gt; catch (SQLException sqle) &lt;/p&gt;
{
            // Embedded gets 08003.
        	if (usingDerbyNetClient())
        		assertSQLState(&quot;XCL16&quot;,sqle);
        }</description>
                <environment></environment>
        <key id="12368792">DERBY-2620</key>
            <summary>embedded throws SQLState 8003 (No current connection) on rs.next() on closed resultSet in test for DERBY-1025 in DataSourceTest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                            <label>derby_triage10_8</label>
                    </labels>
                <created>Mon, 7 May 2007 20:59:18 +0100</created>
                <updated>Wed, 16 Feb 2011 14:39:28 +0000</updated>
                                            <version>10.3.1.4</version>
                                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12494129" author="kmarsden" created="Mon, 7 May 2007 22:02:35 +0100"  >&lt;p&gt;I see this code where the error occurs.&lt;/p&gt;

&lt;p&gt;java.sql.Connection appConn = getEmbedConnection().getApplicationConnection();&lt;/p&gt;

&lt;p&gt; // Currently disconnected, i.e. a detached gobal transaction&lt;br/&gt;
        if (appConn == null)&lt;br/&gt;
            throw Util.noCurrentConnection();&lt;/p&gt;

&lt;p&gt;We are detatched from the global transaction, but this statement was never used.&lt;br/&gt;
In this context getEmbedConnection() returns a valid connection, but getApplicationConnection() is null.&lt;br/&gt;
What is the difference between the EmbedConnection and the ApplicationConnection?&lt;/p&gt;</comment>
                            <comment id="12494143" author="djd" created="Mon, 7 May 2007 23:08:37 +0100"  >&lt;p&gt;See the javadoc for EmbedConnection.applicationConnection.&lt;/p&gt;</comment>
                            <comment id="12494164" author="djd" created="Tue, 8 May 2007 01:10:45 +0100"  >&lt;p&gt;I see the code above is from the DataSource test.&lt;br/&gt;
 Is there a reason for catching the exceptions (in the first block) and calling fail() in the catch block? The test will fail if the exceptions are thrown without a catch block and the junit runner will show a stack trace. With the fail it will not be clear which method caused the problem, or where the exception was actually thrown from.&lt;/p&gt;

&lt;p&gt;And in the second case, is it the next() or getInt() that is expected to fail? Putting two method calls that can throw the same exception when expecting one of them to fail is  a way of hiding errors and being confusing to the test reader. E.g. if the next() is meant to succeed and the getInt() fail then the test would pass even if the next() throws an exception. If the next() is meant to fail() then what&apos;s the purpose of  calling getInt()?&lt;/p&gt;</comment>
                            <comment id="12494168" author="myrna" created="Tue, 8 May 2007 02:02:31 +0100"  >&lt;p&gt;There&apos;s probably no good reason for the first one, except maybe an attempt to roll past the offending pieces so I could convert the rest of the test.&lt;br/&gt;
Probably no good reason to have the next() in the try/catch blocks; just that the original test had it constructed like this.&lt;br/&gt;
But this is high-jacking this particular bug, these comments probably belong with the original test conversion...see &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2492&quot; title=&quot;convert checkDataSource, checkDataSource30 and checkDriver.java to junit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2492&quot;&gt;&lt;del&gt;DERBY-2492&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12494353" author="kmarsden" created="Tue, 8 May 2007 18:48:15 +0100"  >
&lt;p&gt;The reason for the error is that xa_end sets the application connection to null.Then on the first operation outside of the global xact,for instance calling Connection.isClosed() or createStatement()  it will make a call to &lt;br/&gt;
BrokeredConnection.getRealConnection() which will create a new EmbedConnection if the realConnection is null.  However for operations on existing resultSets we get the 8003 error because the ResultSet is still linked to the BrokeredConnection  whose realConnection is still null.&lt;/p&gt;

&lt;p&gt;Question: &lt;br/&gt;
1)  Should the ResultSet created before a global transaction be usable after a global transaction?  &lt;br/&gt;
    If not we could just change EmbedResultSet.checkExecIfClosed() to throw SQLState.LANG_RESULT_SET_NOT_OPEN if the connection is null.  There are likely other places e.g. Statement objects where similar changes would need to be made.  &lt;/p&gt;
</comment>
                            <comment id="12494387" author="kmarsden" created="Tue, 8 May 2007 20:36:00 +0100"  >&lt;p&gt;Interestingly, if I put a s4.getConnection() before the rs4.next() call, I get the expected error, so perhaps the correct solution is to reestablish a real connection on rs.next()&lt;/p&gt;</comment>
                            <comment id="12495113" author="djd" created="Fri, 11 May 2007 19:16:25 +0100"  >&lt;p&gt;&amp;gt; Question: 1) Should the ResultSet created before a global transaction be usable after a global transaction? &lt;/p&gt;

&lt;p&gt;For a ResultSet that is CLOSE_CURSORS_AT_COMMIT then no, since the switch to an global transaction from a local one will cause the local one to commit and thus close the ResultSet.&lt;/p&gt;

&lt;p&gt;For a held cursor then it should remain open but I don&apos;t know if Derby supports that.&lt;/p&gt;</comment>
                            <comment id="12495207" author="kmarsden" created="Sat, 12 May 2007 00:46:34 +0100"  >&lt;p&gt;Currently, since xa end sets the application to null, so we get the 8003 (No connection) message if we try to use the resultset,  Could you explain the logic behind setting the applicationConnection to null in XATransactionState.end()&lt;/p&gt;</comment>
                            <comment id="12495737" author="kmarsden" created="Mon, 14 May 2007 19:58:45 +0100"  >&lt;p&gt;I am unnassigning myself from this issue for now.  I don&apos;t have a clear idea of the best solution.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 7 May 2007 22:08:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23135</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0i4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36755</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10053"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>