<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:29:56 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4372/DERBY-4372.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4372] Wrong result for simple join when index is created</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4372</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;In the example below, the first SELECT has correct result. After the index is created, the second SELECT gives wrong result.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; CREATE TABLE t1 (i1 INT, j1 INT);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; CREATE TABLE t2 (i2 INT, j2 INT);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; INSERT INTO t1 VALUES (8, 8),(NULL, 8);&lt;br/&gt;
2 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; INSERT INTO t2 VALUES (8, 8);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; SELECT * FROM t1 INNER JOIN t2 ON (t2.j2 = t1.i1) OR (t2.j2 = t1.j1);&lt;br/&gt;
I1         |J1         |I2         |J2         &lt;br/&gt;
-----------------------------------------------&lt;br/&gt;
8          |8          |8          |8          &lt;br/&gt;
NULL       |8          |8          |8          &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;br/&gt;
ij&amp;gt; CREATE INDEX ix2 ON t2(j2);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; SELECT * FROM t1 INNER JOIN t2 ON (t2.j2 = t1.i1) OR (t2.j2 = t1.j1);&lt;br/&gt;
I1         |J1         |I2         |J2         &lt;br/&gt;
-----------------------------------------------&lt;br/&gt;
8          |8          |8          |8          &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</description>
                <environment></environment>
        <key id="12435085">DERBY-4372</key>
            <summary>Wrong result for simple join when index is created</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="bernt">Bernt M. Johnsen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Sep 2009 12:21:19 +0100</created>
                <updated>Fri, 21 Jan 2011 17:52:34 +0000</updated>
                            <resolved>Fri, 25 Sep 2009 18:51:30 +0100</resolved>
                                    <version>10.1.3.3</version>
                    <version>10.2.2.1</version>
                    <version>10.5.1.1</version>
                                    <fixVersion>10.5.3.1</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12752968" author="knutanders" created="Wed, 9 Sep 2009 08:48:34 +0100"  >&lt;p&gt;Other variants of the query also show this problem:&lt;/p&gt;

&lt;p&gt;ij&amp;gt; select * from t1,t2 where t2.j2 in (t1.i1, t1.j1);&lt;br/&gt;
I1         |J1         |I2         |J2         &lt;br/&gt;
-----------------------------------------------&lt;br/&gt;
8          |8          |8          |8          &lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; drop index ix2;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select * from t1,t2 where t2.j2 in (t1.i1, t1.j1);&lt;br/&gt;
I1         |J1         |I2         |J2         &lt;br/&gt;
-----------------------------------------------&lt;br/&gt;
8          |8          |8          |8          &lt;br/&gt;
NULL       |8          |8          |8          &lt;/p&gt;

&lt;p&gt;2 rows selected&lt;/p&gt;

&lt;p&gt;Oddly enough, if the last condition (t2.j2=t1.j1) is changed into the equivalent form (t1.j1=t2.j2) the query returns correct results regardless of the index (the query plan says that the index is not used in this case).&lt;/p&gt;</comment>
                            <comment id="12755426" author="knutanders" created="Tue, 15 Sep 2009 10:04:56 +0100"  >&lt;p&gt;It seems like the problem can be reproduced even without the join. However, because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4376&quot; title=&quot;Simple select runs forever&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4376&quot;&gt;&lt;del&gt;DERBY-4376&lt;/del&gt;&lt;/a&gt;, it is only reproducible this way on 10.2.2.0 and earlier. On 10.3.1.4 and later, this will go into an infinite loop.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; create table t(x int);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values (8);&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; prepare ps as &apos;select * from t where x = ? or x = ?&apos;;&lt;br/&gt;
ij&amp;gt; execute ps using &apos;values (cast(null as int), 8)&apos;;&lt;br/&gt;
IJ WARNING: Autocommit may close using result set&lt;br/&gt;
X          &lt;br/&gt;
-----------&lt;br/&gt;
8          &lt;/p&gt;

&lt;p&gt;1 row selected&lt;br/&gt;
ij&amp;gt; create index idx on t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; execute ps using &apos;values (cast(null as int), 8)&apos;;&lt;br/&gt;
IJ WARNING: Autocommit may close using result set&lt;br/&gt;
X          &lt;br/&gt;
-----------&lt;/p&gt;

&lt;p&gt;0 rows selected&lt;/p&gt;</comment>
                            <comment id="12756494" author="knutanders" created="Thu, 17 Sep 2009 12:43:20 +0100"  >&lt;p&gt;I think this is what&apos;s causing the bug:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Internally, (t2.j2 = t1.i1) OR (t2.j2 = t1.j1) is rewritten to t2.j2 IN (t1.i1, t1.j1).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;With an index on J2, we&apos;ll choose an index scan of T2, with min(t1.i1, t1.j1) as start key and max(t1.i1, t1.j1) as stop key.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The code to create start/stop keys is generated in InListOperatorNode.generateStartStopKey(), and it uses BaseExpressionActivation.minValue()/maxValue() to find min/max.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The methods minValue() and maxValue() are not prepared for SQL NULL. If SQL NULL is passed as the first argument, they will both return SQL NULL. If the first argument is not SQL NULL, the min or max of the non-NULL values will be returned.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the join that returns wrong results, the following happens:&lt;/p&gt;

&lt;p&gt;When the second row in T1 is read, the join attempts to find a match in T2 where j2 IN (NULL,8). It calls minValue() and maxValue() with NULL as first arg and 8 as second arg. Both of them return NULL, so the index scan looks for all rows in T2 where j2 &amp;gt;= NULL and j2 &amp;lt;= NULL. Comparison with NULL never returns TRUE, so no row is found.&lt;/p&gt;

&lt;p&gt;Both minValue() and maxValue() should have returned 8, in which case the index scan would have found a match.&lt;/p&gt;</comment>
                            <comment id="12756520" author="knutanders" created="Thu, 17 Sep 2009 13:47:29 +0100"  >&lt;p&gt;The attached patch adds a fix for the bug and a test case that exposes it.&lt;/p&gt;

&lt;p&gt;The javadoc for minValue() and maxValue() in BaseExpressionActivation is clarified with respect to how NULLs are handled. Also, the methods are changed so that they handle NULLs the same way regardless of their position in the IN list. Now, SQL NULL is only returned if and only if all the inputs are SQL NULL. Previously, SQL NULL was returned if and only if the first input was SQL NULL. This change made the start and stop keys come out right if the first input was SQL NULL and there was other non-NULL inputs.&lt;/p&gt;

&lt;p&gt;I have started the full regression test suite.&lt;/p&gt;</comment>
                            <comment id="12756561" author="bryanpendleton" created="Thu, 17 Sep 2009 15:30:32 +0100"  >&lt;p&gt;Are BaseExpressionActivation&apos;s minValue and maxValue methods used widely?&lt;/p&gt;

&lt;p&gt;I&apos;m irrationally nervous about changing the handling of NULL because the complex&lt;br/&gt;
semantics of NULL have been implemented with exquisite care over the years.&lt;/p&gt;

&lt;p&gt;I suppose an alternative would be to make a change to InListOperatorNode.generateStartStopKey()&lt;br/&gt;
so that it uses some &lt;b&gt;new&lt;/b&gt; set of functions, rather than &lt;br/&gt;
BaseExpressionActivation.minValue()/maxValue() to find min/max. &lt;/p&gt;

&lt;p&gt;We could call the new methods &quot;minNonNullValue()&quot; and &quot;maxNonNullValue()&quot;, or&lt;br/&gt;
something like that, to help clarify that they had different semantics.&lt;/p&gt;</comment>
                            <comment id="12756576" author="knutanders" created="Thu, 17 Sep 2009 16:05:17 +0100"  >&lt;p&gt;As far as I can tell, those two methods are only used by InListOperatorNode.generateStartStopKey(). There are no direct calls to any of them in the code, and the only occurrences of the strings &quot;maxValue&quot; and &quot;minValue&quot; (with the double-quotes) are the ones in generateStartStopKey().&lt;/p&gt;

&lt;p&gt;I can perform this experiment: Change the names of maxValue/minValue to something completely different, and replace them with dummy methods (called maxValue/minValue) that always throw an exception. Then I&apos;ll make InListOperatorNode.generateStartStopKey() use the renamed methods and run suites.All/derbyall to (hopefully) verify that they are never called elsewhere. Would that make you feel more comfortable?&lt;/p&gt;</comment>
                            <comment id="12756583" author="knutanders" created="Thu, 17 Sep 2009 16:33:32 +0100"  >&lt;p&gt;Um, well... Running the tests may not help that much. According to the test coverage report, the BaseExpressionActivation class isn&apos;t used at all by the JUnit tests: &lt;a href=&quot;http://dbtg.foundry.sun.com/derby/test/coverage/jvm1.6/sol/suitesAll82289/_files/3b1.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dbtg.foundry.sun.com/derby/test/coverage/jvm1.6/sol/suitesAll82289/_files/3b1.html&lt;/a&gt;. I guess the MultiProbeTableScanResultSet added in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-47&quot; title=&quot;Some possible improvements to IN optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-47&quot;&gt;&lt;del&gt;DERBY-47&lt;/del&gt;&lt;/a&gt; makes it less likely that this code path is used.&lt;/p&gt;

&lt;p&gt;The lack of test coverage probably means the answer to your question (&quot;Are &lt;span class=&quot;error&quot;&gt;&amp;#91;the&amp;#93;&lt;/span&gt; methods used widely?&quot;) is no...&lt;/p&gt;

&lt;p&gt;I&apos;ll run the experiment anyway, since there may be tests in derbyall that exercise the code path.&lt;/p&gt;</comment>
                            <comment id="12756589" author="bryanpendleton" created="Thu, 17 Sep 2009 16:40:06 +0100"  >&lt;p&gt;Well, your static analysis seems pretty persuasive to me.&lt;/p&gt;

&lt;p&gt;And, like I said, it is an irrational fear.&lt;/p&gt;

&lt;p&gt;But that code in inListOperatorNode.generateStartStopKey has been&lt;br/&gt;
present since since the original Derby contribution to Apache, if I&apos;m&lt;br/&gt;
reading the svn history correctly&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/InListOperatorNode.java?revision=37083&amp;amp;view=markup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/InListOperatorNode.java?revision=37083&amp;amp;view=markup&lt;/a&gt;&lt;br/&gt;
so that&apos;s very old code indeed.&lt;/p&gt;

&lt;p&gt;Of course, if I&apos;m understanding your earlier comments here and in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4376&quot; title=&quot;Simple select runs forever&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4376&quot;&gt;&lt;del&gt;DERBY-4376&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
correctly, this behavior has been around since the original Derby contribution to Apache, too.&lt;/p&gt;

&lt;p&gt;After re-reading your comments and reading the attached patch file, I can&apos;t see any reason&lt;br/&gt;
not to proceed with your change.&lt;/p&gt;

&lt;p&gt;Thanks for letting me raise my concern, and thanks for taking the time to study this issue in detail!&lt;/p&gt;</comment>
                            <comment id="12756590" author="knutanders" created="Thu, 17 Sep 2009 16:40:24 +0100"  >&lt;p&gt;Uploading experiment.diff which makes minValue() and maxValue() throw a RuntimeException and adds methods called minValueXYZ() and maxValueXYZ() that InListOperatorNode.generateStartStopKey() can use instead. Running suites.All and derbyall now to verify that minValue() and maxValue() aren&apos;t being called by other methods.&lt;/p&gt;</comment>
                            <comment id="12757054" author="knutanders" created="Fri, 18 Sep 2009 09:50:45 +0100"  >&lt;p&gt;Thanks, Bryan!&lt;/p&gt;

&lt;p&gt;All the regression tests ran cleanly (both with the fix and with the experiment to smoke out any other callers of maxValue() and minValue()).&lt;/p&gt;

&lt;p&gt;Committed revision 816531.&lt;/p&gt;

&lt;p&gt;I plan to port the fix to 10.5, so I&apos;ll leave the issue open for now.&lt;/p&gt;</comment>
                            <comment id="12759658" author="knutanders" created="Fri, 25 Sep 2009 18:51:30 +0100"  >&lt;p&gt;Merged the fix to 10.5 and committed revision 818931.&lt;/p&gt;</comment>
                            <comment id="12761342" author="mamtas" created="Thu, 1 Oct 2009 22:08:59 +0100"  >&lt;p&gt;Knut, does the fix need to be backported to earlier revisions too? Copying one of your earlier comment for reference. thanks&lt;br/&gt;
*************&lt;br/&gt;
It seems like the problem can be reproduced even without the join. However, because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4376&quot; title=&quot;Simple select runs forever&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4376&quot;&gt;&lt;del&gt;DERBY-4376&lt;/del&gt;&lt;/a&gt;, it is only reproducible this way on 10.2.2.0 and earlier. On 10.3.1.4 and later, this will go into an infinite loop. &lt;br/&gt;
*************&lt;/p&gt;</comment>
                            <comment id="12761509" author="knutanders" created="Fri, 2 Oct 2009 09:37:43 +0100"  >&lt;p&gt;This bug also affects older versions, so it certainly can be back-ported if someone wants the fix on those branches.&lt;/p&gt;</comment>
                            <comment id="12762250" author="mamtas" created="Mon, 5 Oct 2009 17:42:15 +0100"  >&lt;p&gt;I have backported &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4376&quot; title=&quot;Simple select runs forever&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4376&quot;&gt;&lt;del&gt;DERBY-4376&lt;/del&gt;&lt;/a&gt; into 10.4 codeline and when I run the test script for this jira entry on that 10.4 codeline, I see that it returns the correct results even after the index is created. the script I tried is as follows&lt;br/&gt;
java -Dij.exceptionTrace=true org.apache.derby.tools.ij&lt;br/&gt;
connect &apos;jdbc:derby:c:/dellater/db;create=true&apos;;&lt;br/&gt;
create table t(x int); &lt;br/&gt;
insert into t values (8); &lt;br/&gt;
prepare ps as &apos;select * from t where x = ? or x = ?&apos;; &lt;br/&gt;
execute ps using &apos;values (cast(null as int), 8)&apos;; &lt;br/&gt;
create index idx on t&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;; &lt;br/&gt;
execute ps using &apos;values (cast(null as int), 8)&apos;; &lt;/p&gt;


&lt;p&gt;I didn&apos;t not running the above script before backporting &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4376&quot; title=&quot;Simple select runs forever&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4376&quot;&gt;&lt;del&gt;DERBY-4376&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will try the script on 10.3 and earlier codelines and backport the fix as needed.&lt;/p&gt;</comment>
                            <comment id="12762258" author="mamtas" created="Mon, 5 Oct 2009 17:54:08 +0100"  >&lt;p&gt;Doesn&apos;t repro on 10.3 either. I will check the other codelines and will update the jira with what I find for 10.2 and 10.1 releases.&lt;/p&gt;</comment>
                            <comment id="12762515" author="mamtas" created="Tue, 6 Oct 2009 06:30:00 +0100"  >&lt;p&gt;The problem reproduces on 10.2 and 10.1 codeline. I am not planning on backporting into those codelines at this point. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12419879" name="derby-4372-1a.diff" size="5225" author="knutanders" created="Thu, 17 Sep 2009 13:47:29 +0100"/>
                            <attachment id="12419880" name="derby-4372-1a.stat" size="168" author="knutanders" created="Thu, 17 Sep 2009 13:47:29 +0100"/>
                            <attachment id="12419901" name="experiment.diff" size="2231" author="knutanders" created="Thu, 17 Sep 2009 16:40:24 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10366"><![CDATA[Wrong query result]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Sep 2009 07:48:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24213</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Issue &amp; fix info</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10424"><![CDATA[Repro attached]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0kyv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37215</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Urgency</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10051"><![CDATA[Urgent]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>