<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:10:21 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-378/DERBY-378.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-378] support for  import/export  of  tables with clob/blob and the other binary data types   will be good addition to derby,</title>
                <link>https://issues.apache.org/jira/browse/DERBY-378</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently if  I have  a table that contains clob/blob column,  import/export operations on that table&lt;br/&gt;
throghs  unsupported feature exception. &lt;/p&gt;

&lt;p&gt;set schema iep;&lt;br/&gt;
set schema iep;&lt;br/&gt;
create table ntype(a int , ct CLOB(1024));&lt;br/&gt;
create table ntype1(bt BLOB(1024) , a int);&lt;/p&gt;

&lt;p&gt;call SYSCS_UTIL.SYSCS_EXPORT_TABLE (&apos;iep&apos;, &apos;ntype&apos; , &apos;extinout/ntype.dat&apos; ,&lt;br/&gt;
                                 null, null, null) ;&lt;br/&gt;
ERROR XIE0B: Column &apos;CT&apos; in the table is of type CLOB, it is not supported by th&lt;br/&gt;
e import/export feature.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12311526">DERBY-378</key>
            <summary>support for  import/export  of  tables with clob/blob and the other binary data types   will be good addition to derby,</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tsuresh">Suresh Thalamati</assignee>
                                    <reporter username="tsuresh">Suresh Thalamati</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Jun 2005 07:46:35 +0100</created>
                <updated>Tue, 19 Nov 2013 13:26:54 +0000</updated>
                            <resolved>Thu, 24 May 2007 00:55:29 +0100</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.3.1.4</fixVersion>
                                    <component>Tools</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12319071" author="bkbonner" created="Thu, 18 Aug 2005 04:22:16 +0100"  >&lt;p&gt;I agree with Suresh.  There needs to be a way to import and export data from clobs/blobs.&lt;/p&gt;</comment>
                            <comment id="12444956" author="tsuresh" created="Thu, 26 Oct 2006 19:32:26 +0100"  >&lt;p&gt;Some thoughts on implementing import/export for large  objects. &lt;/p&gt;</comment>
                            <comment id="12458635" author="tsuresh" created="Thu, 14 Dec 2006 22:48:50 +0000"  >&lt;p&gt;related discussion on the  derby-dev  list:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/%28DERBY-378%29-implementing--import-export-of-large-objects...-tf2515951.html#a7017509&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/%28DERBY-378%29-implementing--import-export-of-large-objects...-tf2515951.html#a7017509&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12458636" author="tsuresh" created="Thu, 14 Dec 2006 22:49:43 +0000"  >&lt;p&gt;Import uses VTI to import data into a table from a file.  Just found out&lt;br/&gt;
that derby does not  support CLOB/BLOB data types with VTI. Any one remember &lt;br/&gt;
why these types are  not supported ?&lt;/p&gt;

&lt;p&gt;Currently all the columns in the import file are treated as VARCHAR type and &lt;br/&gt;
cast them to the appropriate column type of the table, when the insert &lt;br/&gt;
statement is generated. For example to import into a table T4(&lt;br/&gt;
create table t4( a int , b char(100)) );&lt;/p&gt;

&lt;p&gt;INSERT INTO &quot;T4&quot;(&quot;A&quot;, &quot;B&quot;) --DERBY-PROPERTIES insertMode=bulkInsert&lt;br/&gt;
SELECT  cast(COLUMN1 AS INTEGER) ,  COLUMN2  from new org.apache.derby.impl.load&lt;br/&gt;
d.Import(&apos;c:/suresht/databases/emp.dat&apos;,null,null,null, 2 ) AS importvti ;&lt;/p&gt;

&lt;p&gt;Clob types column can casted from VARCHAR type, performance may be bad but it will work. &lt;br/&gt;
Problem with blob data type is, it can be casted  from any other type. &lt;/p&gt;

&lt;p&gt;I am kind of stuck on how to extract the binary data from an import file and insert&lt;br/&gt;
into the table using the VTI, without VTI  support for CLOB/BLOB types.&lt;br/&gt;
types. &lt;/p&gt;

&lt;p&gt;Any ideas/suggestions ?&lt;/p&gt;


&lt;p&gt;Thanks&lt;br/&gt;
-suresh&lt;/p&gt;</comment>
                            <comment id="12458976" author="djd" created="Sat, 16 Dec 2006 00:02:24 +0000"  >&lt;p&gt;For reading from a VTI I&apos;m not sure why CLOB and BLOB are not supported. SQLBlob seems to contain the correct code in its setValueFromResultSet(). It might be a hangover from the time the codebase supported JDK 1.1 and java.sql.Blobs were not available. It might be simply the work was never done. What error do you get?&lt;/p&gt;

&lt;p&gt;For setting BLOB/CLOB into a VTI it might be tricker, since it requires the SQL layer to be able to manufacture a java.sql.Blob object, and since they are JDBC objects the language doesn&apos;t handle them. Though it&apos;s a simiar problem to BLOBs in triggers/functions and I think at least for triggers it works, so I think there is a mechanism for creating a java.sql.Blob from a BLOB column.&lt;/p&gt;

&lt;p&gt;and having written that, I thought BLOBs were used in triggers and triggers used VTIs ...&lt;/p&gt;</comment>
                            <comment id="12458978" author="tsuresh" created="Sat, 16 Dec 2006 00:22:31 +0000"  >&lt;p&gt;Thanks for the input Dan.  When I specify the column type for import  VTI as Types.BLOB ,  I got the following error :&lt;/p&gt;

&lt;p&gt;&quot;The external virtual table interface does not support BLOB or CLOB columns. &apos;&apos;&lt;/p&gt;
{0}
&lt;p&gt;&apos;&apos; column &apos;&apos;&lt;/p&gt;
{1}
&lt;p&gt;&apos;&apos;. &quot;&lt;/p&gt;

&lt;p&gt;This error is coming  from impl/sql/compile/FromVti.java &lt;br/&gt;
        if( columnType == Types.BLOB || columnType == Types.CLOB)&lt;br/&gt;
                 throw StandardException.newException(SQLState.LANG_VTI_BLOB_CLOB_UNSUPPORTED, &lt;br/&gt;
                              getVTIName(), rsmd.getColumnName( i));&lt;/p&gt;

&lt;p&gt;I will check out  triggers with BLOBS. &lt;/p&gt;









</comment>
                            <comment id="12458981" author="djd" created="Sat, 16 Dec 2006 00:32:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-438&quot; title=&quot;Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-438&quot;&gt;&lt;del&gt;DERBY-438&lt;/del&gt;&lt;/a&gt; might lead you to the tests that show BLOBs in triggers work.&lt;/p&gt;</comment>
                            <comment id="12475576" author="tsuresh" created="Sat, 24 Feb 2007 02:14:58 +0000"  >&lt;p&gt;DERBY -378 (partial)&lt;br/&gt;
This patch adds some code required to support import/export of table with&lt;br/&gt;
clob, blob(large objects) data types. Clob/Blobs data can be exported to &lt;br/&gt;
an external file that different from the main export file. Location of the &lt;br/&gt;
lob data in the external file will be written to the main export file. &lt;br/&gt;
When writing the lob data to an external file, no conversion is done for the &lt;br/&gt;
binary data , clob data will be written using the user specified code set. &lt;/p&gt;

&lt;p&gt;1)This patch implements following two new procedure to support &lt;br/&gt;
exporting LOBS to an external file name:&lt;/p&gt;

&lt;p&gt;SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_IN_EXTFILE(..)&lt;br/&gt;
SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_IN_EXTFILE(..)&lt;/p&gt;

&lt;p&gt;2)This patch implements following two new procedure that allow&lt;br/&gt;
 import of large object data  stored in a external file.&lt;br/&gt;
(for example exported previously using the above export procedures). &lt;/p&gt;

&lt;p&gt;SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_IN_EXTFILE(...)&lt;br/&gt;
SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_IN_EXTFILE(..)&lt;/p&gt;

&lt;p&gt;3) import/export of table with clob,blob types will also work &lt;br/&gt;
with single input/output file, using the exiting import/export&lt;br/&gt;
procedures. In this can binary data is converted into hex format before &lt;br/&gt;
exporting and the data hex is converted to binary on import. &lt;br/&gt;
Clob data is exported similar to other char types. &lt;/p&gt;

&lt;p&gt;Tests: derbyall/junitall test suites passed on Windows XP/JDK142, except&lt;br/&gt;
        for the known failures. &lt;/p&gt;</comment>
                            <comment id="12475675" author="bryanpendleton" created="Sun, 25 Feb 2007 01:15:28 +0000"  >&lt;p&gt;Each blob/clob goes into its own separate external file? Or all the blobs/clobs go into a single external file? &lt;/p&gt;</comment>
                            <comment id="12475979" author="tsuresh" created="Mon, 26 Feb 2007 19:59:12 +0000"  >&lt;p&gt;&amp;gt; Each blob/clob goes into its own separate external file? Or all the blobs/clobs go into a single external file? &lt;br/&gt;
&amp;gt; [ Show &#187; ] Bryan Pendleton &lt;span class=&quot;error&quot;&gt;&amp;#91;24/Feb/07 05:15 PM&amp;#93;&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;All the blobs/clobs go into a single external file.&lt;/p&gt;
</comment>
                            <comment id="12476009" author="army" created="Mon, 26 Feb 2007 21:35:20 +0000"  >&lt;p&gt;I haven&apos;t actually reviewed the code at all, but I was just wondering about the names for the new procedures.  When I first looked at them use of the &quot;IN_EXTFILE&quot; sounded a tad awkward to me (esp. for export).  I instinctively thought &quot;...TO_EXTFILE&quot; would be better for export and &quot;FROM_EXTFILE&quot; would be better for import.  But then I realized that such names could potentially cause confusion (ex. If I&apos;m importing lobs from EXTFILE does that mean there is other, non-lob data in EXTFILE that I&apos;m not importing?)  So those probably aren&apos;t much better.&lt;/p&gt;

&lt;p&gt;The only other thing that comes to mind is &quot;USING_EXTFILE&quot;, but again, I don&apos;t know if that&apos;s really any better.  Perhaps &quot;IN_EXTFILE&quot; is in fact best because it&apos;s generic and it&apos;s short, in which case please feel free to leave the procedure names as they are.  I just thought I&apos;d mention that on first reading the names seemed slightly odd, in case you or anyone else can come up with other suggestions.&lt;/p&gt;

&lt;p&gt;NOTE: I do &lt;b&gt;not&lt;/b&gt; think this little comment should block commit of the patch.  This is a pretty minor thing and could easily be changed as part of a follow-up patch when (and if) a different set of names is chosen.&lt;/p&gt;</comment>
                            <comment id="12476056" author="tsuresh" created="Tue, 27 Feb 2007 02:12:44 +0000"  >&lt;p&gt;Committed  derby_378.diff to  trunk  on revision 512109.   If  there are any review comments related to this patch , I will address them in the  future patches for this issue. &lt;/p&gt;
</comment>
                            <comment id="12478663" author="tsuresh" created="Wed, 7 Mar 2007 01:28:36 +0000"  >&lt;p&gt;DERBY -378 (partial)&lt;br/&gt;
This patch adds code required to support import/export of a table with&lt;br/&gt;
CHAR FOR BIT DATA, VARCHAR FOR BIT DATA,  LONG VARCHAR FOR BIT DATA&lt;br/&gt;
data types. Data of this type of columns is exported to the main export &lt;br/&gt;
file as hex strings. On import data is also expected to be in hex strings &lt;br/&gt;
in the main export file for these type of columns. This patch also &lt;br/&gt;
disallows use of hex decimal characters (0-9 , a-f , A-F) as &lt;br/&gt;
delimiters for import/export procedures. &lt;/p&gt;

&lt;p&gt;Maximum data length of these types is only  32700 ( 254 bytes for CHAR FOR &lt;br/&gt;
BIT DATA , 32,672 for VARCHAR FOR BIT DATA and  32700 LONG VARCHAR FOR BIT DATA). Because max length allowed is less than 32k, I think providing import/Export&lt;br/&gt;
using an external file for these types may not add much value. No external &lt;br/&gt;
file support will be provided for these types. It can be added later, &lt;br/&gt;
if some one thinks it is required. &lt;/p&gt;

&lt;p&gt;Tests:&lt;br/&gt;
Added a new junit test to test the import/export of these binary types. &lt;/p&gt;

&lt;p&gt;It would be great if someone can review this patch.  &lt;/p&gt;</comment>
                            <comment id="12478669" author="djd" created="Wed, 7 Mar 2007 02:03:55 +0000"  >&lt;p&gt;Looks good, couple of minor questions:&lt;/p&gt;

&lt;p&gt;1) I see use of StringUtil.fromHexString() in the patch, but no use of StringUtil.toHexString() in the patch. How does the exporting work?&lt;/p&gt;

&lt;p&gt;2) If the input to  StringUtil.fromHexString() is malformed by its length not being a multiple of two then null will be silently inserted. Should import throw an exception here?&lt;/p&gt;

&lt;p&gt;These could be addressed after the patch is committed.&lt;/p&gt;</comment>
                            <comment id="12478840" author="tsuresh" created="Wed, 7 Mar 2007 18:35:57 +0000"  >&lt;p&gt;Thanks for taking time to review , Dan. &lt;/p&gt;

&lt;p&gt;&amp;gt; 1) I see use of StringUtil.fromHexString() in the patch, but no use of StringUtil.toHexString() in the patch. How does the exporting work? &lt;/p&gt;

&lt;p&gt;Export calls Resultset.getString() method for these types also. getString() method&lt;br/&gt;
return the data in hex format, by calling StringUtil.toHexString().&lt;/p&gt;

&lt;p&gt;&amp;gt; 2) If the input to StringUtil.fromHexString() is malformed by its length not being a multiple of two then null will be silently inserted. Should import throw an exception here?&lt;/p&gt;

&lt;p&gt;Good Catch.  inserting nulls on malformed hex strings is bad.  I will add a &lt;br/&gt;
a check for the return value from StringUtil.fromHexString() , and throw an &lt;br/&gt;
exception if it is null. &lt;/p&gt;


</comment>
                            <comment id="12478862" author="tsuresh" created="Wed, 7 Mar 2007 19:34:46 +0000"  >&lt;p&gt;Committed  derby378_2.diff to trunk on revision 515708..&lt;/p&gt;</comment>
                            <comment id="12479259" author="tsuresh" created="Thu, 8 Mar 2007 08:20:02 +0000"  >&lt;p&gt;DERBY -378 (partial)&lt;br/&gt;
This patch checks for invalid hex strings in the import file &lt;br/&gt;
while performing import into a table with CHAR FOR BIT DATA, &lt;br/&gt;
VARCHAR FOR BIT DATA,  LONG VARCHAR FOR BIT DATA data types.&lt;br/&gt;
Import will throw an exception if it  detects any invalid hex &lt;br/&gt;
strings during import. &lt;/p&gt;

&lt;p&gt;Tests:&lt;br/&gt;
Added a new junit test case to ImportExportBinaryDataTest.java &lt;br/&gt;
to test for the invalid hex strings in the import file. &lt;/p&gt;</comment>
                            <comment id="12480981" author="tsuresh" created="Thu, 15 Mar 2007 00:02:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-378&quot; title=&quot;support for  import/export  of  tables with clob/blob and the other binary data types   will be good addition to derby,&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-378&quot;&gt;&lt;del&gt;DERBY-378&lt;/del&gt;&lt;/a&gt; (partial)&lt;br/&gt;
This patch adds code to handles NULL (SQL NULL) data while &lt;br/&gt;
performing import/export of table with column types blob, clob.  &lt;br/&gt;
Checks for invalid hex strings in the import file while performing &lt;br/&gt;
import into a table with Blob column. Import will throw an exception &lt;br/&gt;
if it detects any invalid hex strings in the import file for blob column. &lt;/p&gt;

&lt;p&gt;Tests:&lt;/p&gt;

&lt;p&gt;1) Added a new junit test ImportExportLobTest.java  to &lt;br/&gt;
tests import/export of clobs and blob data. &lt;/p&gt;

&lt;p&gt;2) Wrapped  BufferInputStream/BufferedReader around the streams&lt;br/&gt;
   used in BaseJDBCTestCase.java:assertEquals() methods to compare &lt;br/&gt;
   clobs/blobs. Without buffering these assert method were really slow. &lt;/p&gt;</comment>
                            <comment id="12482165" author="tsuresh" created="Mon, 19 Mar 2007 17:37:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-378&quot; title=&quot;support for  import/export  of  tables with clob/blob and the other binary data types   will be good addition to derby,&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-378&quot;&gt;&lt;del&gt;DERBY-378&lt;/del&gt;&lt;/a&gt; (partial)&lt;br/&gt;
This patch adds some code required to support import/exoprt of lob data.&lt;br/&gt;
1) Addded  code to read clob data using getCharacterStream()&lt;br/&gt;
instead of getString() while importing clob data from an extern file. &lt;br/&gt;
(Note: Clobs are read using getString() until &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2465&quot; title=&quot;Clob data type should use getCharacterStream() to read a column  data from a VTI instead of getString(). &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2465&quot;&gt;DERBY-2465&lt;/a&gt; is fixed).&lt;br/&gt;
2) Made some code changes to make each lob column has it it&apos;s own file handle to&lt;br/&gt;
   the lob file to read the data, otherwise streams can get corrupted when &lt;br/&gt;
   there are more than one clob/blob type column in the table.&lt;/p&gt;</comment>
                            <comment id="12482439" author="mikem" created="Tue, 20 Mar 2007 16:43:17 +0000"  >&lt;p&gt;A comment on Army&apos;s comment on names.  I don&apos;t have strong feelings, I also thought using TO for export and FROM for import was more natural.  I do think you should check with laura and see if these names are going to cause documentation issues because they are too long, I don&apos;t remember her ever saying what the problem length was.&lt;/p&gt;</comment>
                            <comment id="12482479" author="tsuresh" created="Tue, 20 Mar 2007 18:54:21 +0000"  >&lt;p&gt;Thanks for the feedback Army &amp;amp; Mike. I agree with both of you , &lt;br/&gt;
LOBS_FROM_EXTFILE/LOBS_TO_EXTFILE  sounds better than  &lt;br/&gt;
&quot;LOBS_IN_EXTFILE&quot;.  Unless someone else has a better &lt;br/&gt;
suggestions. New procedure names will be :&lt;/p&gt;

&lt;p&gt;SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE(..)&lt;br/&gt;
SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE(..)&lt;/p&gt;

&lt;p&gt;2)This patch implements following two new procedure that allow&lt;br/&gt;
 import of large object data stored in a external file.&lt;br/&gt;
(for example exported previously using the above export procedures).&lt;/p&gt;

&lt;p&gt;SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(...)&lt;br/&gt;
SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE(..)&lt;/p&gt;


&lt;p&gt;&amp;#8211;&lt;/p&gt;

&lt;p&gt;One another other thing I was debating myself was whether &lt;br/&gt;
to use  &quot;EXTFILE&quot; or &quot;SEPFILE&quot;.  Sticking with &quot;EXTFILE&quot;,  &lt;br/&gt;
&quot;SEPFILE&quot; does not seem any better. &lt;/p&gt;</comment>
                            <comment id="12482488" author="scotsmatrix" created="Tue, 20 Mar 2007 19:13:49 +0000"  >&lt;p&gt;These procedure names are fine with me. The names are clear (Export To and Import From),&lt;br/&gt;
and they stay under 50 characters including underscores and the period (just barely &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
More than 50 can cause real problems in the PDF output.  The name can get truncated.&lt;/p&gt;

&lt;p&gt;I&apos;m assuming the EXTFILE refers to External File, as opposed to a separate file?&lt;br/&gt;
I think EXTFILE is better too.&lt;/p&gt;</comment>
                            <comment id="12482500" author="tsuresh" created="Tue, 20 Mar 2007 19:31:19 +0000"  >&lt;p&gt;Thanks for the feedback Laura.  Incase of export &quot;EXTFILE&quot;  is used &lt;br/&gt;
to indicate lob data is not stored in the main export file along with &lt;br/&gt;
other table data, but in a different file specified by the user. And incase of &lt;br/&gt;
import it indicates lobs data is in a different file, and the reference to &lt;br/&gt;
it is stored in the import file specified by the user. &lt;/p&gt;</comment>
                            <comment id="12483361" author="scotsmatrix" created="Fri, 23 Mar 2007 00:00:34 +0000"  >&lt;p&gt;Suresh is there a spec for me to look at for this issue?&lt;br/&gt;
I&apos;d like to understand the documentation hits.&lt;/p&gt;</comment>
                            <comment id="12483676" author="tsuresh" created="Fri, 23 Mar 2007 17:57:33 +0000"  >&lt;p&gt;Thanks for your interest to document this issue Laura.  Intially proposed  spec is attached to this jira (iexlobs.txt) , but it is out of date. I will update the spec and post it  in a day or two. &lt;/p&gt;
</comment>
                            <comment id="12483791" author="tsuresh" created="Fri, 23 Mar 2007 23:37:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-378&quot; title=&quot;support for  import/export  of  tables with clob/blob and the other binary data types   will be good addition to derby,&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-378&quot;&gt;&lt;del&gt;DERBY-378&lt;/del&gt;&lt;/a&gt; (partial)&lt;br/&gt;
This patch adds code required to enable new system procedures added to &lt;br/&gt;
support import/export of lob data on hard upgrade from versions before &lt;br/&gt;
10.3. Added a new test case to the 10.3 upgrade test cases.&lt;/p&gt;</comment>
                            <comment id="12487076" author="tsuresh" created="Thu, 5 Apr 2007 20:08:38 +0100"  >&lt;p&gt;updated the spec and  added some notes for dcoumnentation. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12372247">DERBY-2864</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12366664">DERBY-2527</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12372219">DERBY-2859</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12372220">DERBY-2860</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12351942" name="derby378_1.diff" size="135258" author="tsuresh" created="Sat, 24 Feb 2007 02:14:58 +0000"/>
                            <attachment id="12351943" name="derby378_1.stat" size="2105" author="tsuresh" created="Sat, 24 Feb 2007 02:14:58 +0000"/>
                            <attachment id="12352804" name="derby378_2.diff" size="23327" author="tsuresh" created="Wed, 7 Mar 2007 01:28:35 +0000"/>
                            <attachment id="12352805" name="derby378_2.stat" size="456" author="tsuresh" created="Wed, 7 Mar 2007 01:28:35 +0000"/>
                            <attachment id="12352911" name="derby378_3.diff" size="6638" author="tsuresh" created="Thu, 8 Mar 2007 08:20:02 +0000"/>
                            <attachment id="12352912" name="derby378_3.stat" size="299" author="tsuresh" created="Thu, 8 Mar 2007 08:20:02 +0000"/>
                            <attachment id="12353331" name="derby378_4.diff" size="49410" author="tsuresh" created="Thu, 15 Mar 2007 00:02:46 +0000"/>
                            <attachment id="12353332" name="derby378_4.stat" size="813" author="tsuresh" created="Thu, 15 Mar 2007 00:02:46 +0000"/>
                            <attachment id="12353671" name="derby378_5.diff" size="21099" author="tsuresh" created="Mon, 19 Mar 2007 17:37:25 +0000"/>
                            <attachment id="12354136" name="derby378_6.diff" size="4802" author="tsuresh" created="Fri, 23 Mar 2007 23:37:32 +0000"/>
                            <attachment id="12343725" name="iexlobs.txt" size="6223" author="tsuresh" created="Thu, 26 Oct 2006 19:32:26 +0100"/>
                            <attachment id="12355030" name="iexlobs_v1.txt" size="10854" author="tsuresh" created="Thu, 5 Apr 2007 20:08:38 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 18 Aug 2005 03:22:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29517</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0nbr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37597</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>