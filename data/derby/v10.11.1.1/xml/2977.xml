<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:36:00 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-2977/DERBY-2977.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-2977] Replication: Add a ReplicationMaster controller that will manage replication on the master side</title>
                <link>https://issues.apache.org/jira/browse/DERBY-2977</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The replication master role includes many tasks:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;set up a network connection to the slave&lt;/li&gt;
	&lt;li&gt;sending the database to the slave before starting replication&lt;/li&gt;
	&lt;li&gt;make sure that log records are appended to the network buffer, and that the log is later sent to the slave&lt;/li&gt;
	&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This issue is for adding a controller that will start/stop/initiate all services needed for the replication master role.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12374534">DERBY-2977</key>
            <summary>Replication: Add a ReplicationMaster controller that will manage replication on the master side</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12373499">DERBY-2922</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jorgenlo">J&#248;rgen L&#248;land</assignee>
                                    <reporter username="jorgenlo">J&#248;rgen L&#248;land</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Jul 2007 12:25:50 +0100</created>
                <updated>Thu, 2 May 2013 03:29:10 +0100</updated>
                            <resolved>Tue, 19 Feb 2008 13:28:49 +0000</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12515285" author="jorgenlo" created="Wed, 25 Jul 2007 13:47:19 +0100"  >&lt;p&gt;The initial plan for the replication master controller:&lt;/p&gt;

&lt;p&gt;The replication master controller is started when the &quot;start replication master&quot; command (see functional specification in&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2872&quot; title=&quot;Add Replication functionality to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2872&quot;&gt;&lt;del&gt;DERBY-2872&lt;/del&gt;&lt;/a&gt;) is issued for a database. There will be exactly one replication controller instance for every database with a master role.&lt;/p&gt;

&lt;p&gt;It seems to be a good idea to boot the replication controller as a service module on a per need basis. This is, e.g., done to boot the TransactionFactory and DataFactory services in engine/org/apache/derby/impl/store/raw/RawStore.java&lt;/p&gt;

&lt;p&gt;RawStore.java#boot, line 215-221:&lt;br/&gt;
----&lt;del&gt;8&amp;lt;&lt;/del&gt;----&lt;br/&gt;
xactFactory = (TransactionFactory)&lt;br/&gt;
			Monitor.bootServiceModule(&lt;br/&gt;
				create, this, getTransactionFactoryModule(), properties);&lt;/p&gt;

&lt;p&gt;dataFactory = (DataFactory)&lt;br/&gt;
			Monitor.bootServiceModule(&lt;br/&gt;
			  create, this, getDataFactoryModule(), properties);&lt;br/&gt;
----&lt;del&gt;&amp;gt;8&lt;/del&gt;----&lt;/p&gt;

&lt;p&gt;The module will need an API for these commands:&lt;/p&gt;

&lt;p&gt;start replication&lt;br/&gt;
stop replication&lt;/p&gt;

&lt;p&gt;The controller will be managing the replication strategy (asynchronous, 1-safe, 2-safe, very-safe). For now, only&lt;br/&gt;
asynchronous is considered. If more strategies are added later, the API should probably be extended with methods to dynamically change the replication strategy.&lt;/p&gt;

&lt;p&gt;Development on this issue will likely be incremental - the service must be modified as more functionality is in place.&lt;/p&gt;</comment>
                            <comment id="12523522" author="jorgenlo" created="Wed, 29 Aug 2007 10:47:30 +0100"  >&lt;p&gt;I plan to implement the ReplicationMaster Controller incrementally in multiple steps:&lt;/p&gt;

&lt;p&gt;1) Add the basic code to Derby so that the master controller can be booted as a service when a &quot;startmaster&quot; command is issued to NetworkServerControl&lt;br/&gt;
2-n) Incrementally add controller logic as replication patches are added to Derby.&lt;/p&gt;

&lt;p&gt;The current plan for step 1 is:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;NetworkServerControl will lookup the correct database, and call a startReplicationMaster method on that database service. This call will propagate through the database and access layers to RawStore.java.&lt;/li&gt;
	&lt;li&gt;RawStore#startReplicationMaster will call Monitor#bootServiceModule on the MasterFactory (interface for MasterController)&lt;/li&gt;
	&lt;li&gt;When booted, the MasterController service will initialize some basic variables but do nothing fancy.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Comments are appreciated.&lt;/p&gt;</comment>
                            <comment id="12523799" author="jorgenlo" created="Thu, 30 Aug 2007 10:12:03 +0100"  >&lt;p&gt;Attaching a patch, v1,  intended to solve step 1 described above. &lt;/p&gt;

&lt;p&gt;The patch adds a service (MasterFactory (interface), MasterController) that will be used to manage replication on the master side. Currently, the service does very little work except write out a few &quot;MasterController started&quot; lines. These printouts will be removed when code is added to the service. &lt;/p&gt;

&lt;p&gt;The service is started by calling Database#startReplicationMaster on the database that will be replicated. However, there is no code calling this method yet, so the patch is currently not used for anything. The intention is that command line calls to NetworkServerControl will start the service. &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2954&quot; title=&quot;Add commands to NetworkServerControl for interacting with the replication functionality&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2954&quot;&gt;&lt;del&gt;DERBY-2954&lt;/del&gt;&lt;/a&gt; has been added for that task.&lt;/p&gt;</comment>
                            <comment id="12524499" author="oysteing" created="Mon, 3 Sep 2007 12:10:32 +0100"  >&lt;p&gt;I think this patch looks very good.  Most of my comments are minor:&lt;/p&gt;

&lt;p&gt;1. Why do you need to expose LogToFile#logBufferSize outside the&lt;br/&gt;
   class?  The Logger used by transactions handles the buffer size&lt;br/&gt;
   dynamically, why cannot this be done in this case, too?&lt;/p&gt;

&lt;p&gt;2. MasterFactory#flushedTo:  The Javadoc should say something&lt;br/&gt;
   about why this method is needed and when it will be called.&lt;/p&gt;

&lt;p&gt;3. I think it would be good if it is were more clear from the&lt;br/&gt;
   MasterController code, which methods were implementation of which&lt;br/&gt;
   interface.  E.g., have separate sections of the file for each of&lt;br/&gt;
   the interfaces with a heading in a comment.&lt;/p&gt;

&lt;p&gt;4. MasterController#canSupport: The javadoc for the return value&lt;br/&gt;
   should say something about what it means, not just its&lt;br/&gt;
   current implementation.&lt;/p&gt;

&lt;p&gt;5. ReadOnly:  The new import does not seem necessary.&lt;/p&gt;

&lt;p&gt;6. MasterFactory javadoc says &quot;This is an implementation ...&quot;, but it&lt;br/&gt;
   is not.  It is the interface.  MasterController is the&lt;br/&gt;
   implementation.  I also think the note about being far from&lt;br/&gt;
   complete belongs in the class and not the interface.  (There is&lt;br/&gt;
   also a missing &quot;to&quot; in the second sentence of the javadoc.)&lt;/p&gt;</comment>
                            <comment id="12524546" author="jorgenlo" created="Mon, 3 Sep 2007 16:38:10 +0100"  >&lt;p&gt;Thanks for reviewing the patch, &#216;ystein.&lt;/p&gt;

&lt;p&gt;The attached patch, v1b, addresses your comments in the following way:&lt;/p&gt;

&lt;p&gt;&amp;gt; 1. Why do you need to expose LogToFile#logBufferSize outside the&lt;br/&gt;
&amp;gt;    class?  The Logger used by transactions handles the buffer size&lt;br/&gt;
&amp;gt;    dynamically, why cannot this be done in this case, too?&lt;/p&gt;

&lt;p&gt;Actually, as far as I can tell, the log buffer used by&lt;br/&gt;
transactions (LogAccessFile) uses the same LogToFile#buffersize&lt;br/&gt;
exposed here. Is there another file I should look at? I use this&lt;br/&gt;
buffer size because I cannot think of any other size that would&lt;br/&gt;
be better in the general case. I can change this if you have any&lt;br/&gt;
suggestions for an appropriate size. If so, MasterFactory should&lt;br/&gt;
probably store the default size as a static final variable. Left&lt;br/&gt;
unchanged in v1b since I can&apos;t think of a better alternative.&lt;/p&gt;

&lt;p&gt;2-6: fixed in v1b.&lt;/p&gt;</comment>
                            <comment id="12524680" author="oysteing" created="Tue, 4 Sep 2007 12:28:37 +0100"  >&lt;p&gt;J&#248;rgen L&#248;land (JIRA) wrote:&lt;br/&gt;
&amp;gt; Thanks for reviewing the patch, &#216;ystein.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; The attached patch, v1b, addresses your comments in the following way:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&amp;gt; 1. Why do you need to expose LogToFile#logBufferSize outside the&lt;br/&gt;
&amp;gt;&amp;gt;    class?  The Logger used by transactions handles the buffer size&lt;br/&gt;
&amp;gt;&amp;gt;    dynamically, why cannot this be done in this case, too?&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Actually, as far as I can tell, the log buffer used by&lt;br/&gt;
&amp;gt; transactions (LogAccessFile) uses the same LogToFile#buffersize&lt;br/&gt;
&amp;gt; exposed here. Is there another file I should look at? I use this&lt;br/&gt;
&amp;gt; buffer size because I cannot think of any other size that would&lt;br/&gt;
&amp;gt; be better in the general case. I can change this if you have any&lt;br/&gt;
&amp;gt; suggestions for an appropriate size. If so, MasterFactory should&lt;br/&gt;
&amp;gt; probably store the default size as a static final variable. Left&lt;br/&gt;
&amp;gt; unchanged in v1b since I can&apos;t think of a better alternative.&lt;/p&gt;


&lt;p&gt;Sorry, I thought there was one buffer per log record, which is similar&lt;br/&gt;
to FileLogger which has a dynamic buffer size.  Still, I do not think&lt;br/&gt;
that what is the optimal buffer size for writing to disk is&lt;br/&gt;
necessarily the best buffer size when sending messages over the&lt;br/&gt;
network.  I would think that should be independent of each other.&lt;/p&gt;

&lt;p&gt;The rest of the changes looks very good, but I have one question on&lt;br/&gt;
flushedTo: It seems to be the assumption that a log record should not&lt;br/&gt;
be sent to the slave before it is written to disk?  Is this a&lt;br/&gt;
necessary requirement?  If yes, maybe that should be documented too.&lt;/p&gt;</comment>
                            <comment id="12524722" author="jorgenlo" created="Tue, 4 Sep 2007 14:34:51 +0100"  >&lt;p&gt;Thanks for the review of the patch, &#216;ystein.&lt;/p&gt;

&lt;p&gt;Attaching a patch, v1c, addressing the buffer size issue. I agree that the replication buffer size should not depend on the disk buffer size. In lack of a better size, I still use 32k, but now defined in a constant in MasterController. This size will probably be subject to changes once we are able to test replication performance &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Regarding flushedTo: I do not see any good reason why we should not allow log records to be sent to the slave before these are written to disk. Any operations that are sent prematurely to the slave will be aborted if a commit has not been received on the slave. The disk buffer also works this way - it may write log to disk even when force has not been called.&lt;/p&gt;

&lt;p&gt;There is, however, a possibility that the following sequence happens during commit processing on the master:&lt;/p&gt;

&lt;p&gt;1. Commit log record is appended to disk buffer&lt;br/&gt;
2. Commit log record is appended to replication buffer&lt;br/&gt;
3. Replication log shipping thread gets CPU time and ships all buffered log to the slave&lt;br/&gt;
4. Master crashes before commit log record has been safely written to disk.&lt;/p&gt;

&lt;p&gt;This would lead to a case where the commit log record is not on disk on the master, but is on the slave. However, I do not think this is a problem because:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Commit has been requested in the first place, so the client should agree that committing was the intention.&lt;/li&gt;
	&lt;li&gt;For the operations of that transaction to be seen by anyone connecting to the previous slave, the failover command must be issued on the slave. The functional specification states that when this happens, the database that had the master role is no longer the active database. Thus, the actual disk image of the crashed master database is not interesting.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have started the tests, but expect no failures since the code in the patch is not in use. I will revert with the results as soon as the tests complete. &lt;/p&gt;</comment>
                            <comment id="12524733" author="oysteing" created="Tue, 4 Sep 2007 15:01:10 +0100"  >&lt;p&gt;Thanks J&#248;rgen.  What you say makes sense.  I have started the tests, and I will commit the latest patch tomorrow if the tests run well.&lt;/p&gt;</comment>
                            <comment id="12525093" author="oysteing" created="Wed, 5 Sep 2007 14:40:13 +0100"  >&lt;p&gt;Committed patch derby_2977_1c.stat.&lt;/p&gt;</comment>
                            <comment id="12530688" author="jorgenlo" created="Thu, 27 Sep 2007 12:09:36 +0100"  >&lt;p&gt;Version 2 of the proof of concept code showed a problem with the way log is appended to the repliation buffer. Currently, LogToFile#appendLogRecord is used to write log to the replication master log buffer. However, the LogAccessFile class that wraps write operations to log file also write checksums. We need these checksums at the slave because without them, the log instants on the slave and master will differ, in turn making recovery impossible (undo operations refer to a specific instant, which will not be correct).&lt;/p&gt;

&lt;p&gt;The attached patch, repli_logbuffer_v2.*, changes this erroneous behavior. With this patch, log is appended to the repliation log buffer in LogAccessFile, not LogToFile like now. The patch modifies the following files:&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/buffer/LogBufferElement.java&lt;br/&gt;
M      java/engine/org/apache/derby/impl/services/replication/buffer/ReplicationLogBuffer.java&lt;/p&gt;

&lt;p&gt;The buffer now accepts chunks of log records from LogAccessFile#writeToLog (i.e., appended to replication buffer in the same method that writes the log to disk) instead of single log records from LogToFile#appendLogRecord&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/slave/ReplicationLogScan.java&lt;/p&gt;

&lt;p&gt;Modified the slave-side log parser to read the new chunk of log record format&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/master/MasterController.java&lt;br/&gt;
M      java/engine/org/apache/derby/iapi/services/replication/master/MasterFactory.java&lt;/p&gt;

&lt;p&gt;Modified appendLog signature to accept log from LogAccessFile instead of from LogToFile&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/store/raw/log/LogAccessFile.java&lt;/p&gt;

&lt;p&gt;Can be set inReplicationMasterMode, in which log is appended to MasterFactory &lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java&lt;/p&gt;

&lt;p&gt;Removed the code that appends log to replication log buffer, and tells LogAccessFile to go into replication master mode when needed.&lt;/p&gt;

&lt;p&gt;Allsuites and derbyall completed without error&lt;/p&gt;</comment>
                            <comment id="12530689" author="jorgenlo" created="Thu, 27 Sep 2007 12:12:20 +0100"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2872&quot; title=&quot;Add Replication functionality to Derby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2872&quot;&gt;&lt;del&gt;DERBY-2872&lt;/del&gt;&lt;/a&gt; for version 2 of the proof of concept.&lt;/p&gt;</comment>
                            <comment id="12530954" author="oysteing" created="Fri, 28 Sep 2007 10:17:51 +0100"  >&lt;p&gt;The patch looks very good.  I have a few comments, but most are minor nits:&lt;/p&gt;

&lt;p&gt;1. LogToFile:&lt;br/&gt;
   It seems a bit strange to add checks for replicationMasterMode in&lt;br/&gt;
   situations where replication should not be going on (e.g., during&lt;br/&gt;
   recovery).  Would it be better to add a method to LogToFile that&lt;br/&gt;
   the LogAccessFile constructor could use to check whether&lt;br/&gt;
   replication was going on?  Or maybe pass it as a parameter to the&lt;br/&gt;
   constructor?  With the current usage, I would change the name of&lt;br/&gt;
   LogAccessFile#startReplicationMasterRole since it is not called&lt;br/&gt;
   only when replication is started.&lt;/p&gt;

&lt;p&gt;2. ReplicationLogScan:&lt;br/&gt;
   I am not quite sure I like the way you handle the mix of log&lt;br/&gt;
   records and log file switch records.  I wonder whether it would be&lt;br/&gt;
   cleaner if when a log file switch is encountered, one would set the&lt;br/&gt;
   logFileSwitch flag and continue to read the next log record.  Then,&lt;br/&gt;
   if next() returns true there will always be a valid log record, but&lt;br/&gt;
   you will have to check for log file switch before you handle it.&lt;/p&gt;

&lt;p&gt;3. ReplicationLogScan, javadoc: &lt;br/&gt;
   Why does the @see list the same class twice?&lt;/p&gt;

&lt;p&gt;4. ReplicationLogScan#next, comment in exception handling (not new):&lt;br/&gt;
   Typo: (currupt)&lt;/p&gt;

&lt;p&gt;5. ReplicationLogBuffer, javadoc (Not added by this patch):&lt;br/&gt;
   I feel &quot;... consists of n LogBufferElement, each of which can store&lt;br/&gt;
   m log records ...&quot; is a bit confusing since it sounds like the&lt;br/&gt;
   number of log records in a buffer (m) is a configurable constant.&lt;/p&gt;

&lt;p&gt;6. ReplicationLogBuffer#appendBytes:&lt;br/&gt;
   You do not want javadoc for the params?&lt;/p&gt;

&lt;p&gt;7. MasterController:&lt;br/&gt;
   Import of ReplicationMessage is unused.&lt;/p&gt;

&lt;p&gt;8. MasterController/MasterFactory#appendLogRecord, javadoc:&lt;br/&gt;
   Mismatch between javadoc and parameter name for length.&lt;/p&gt;

&lt;p&gt;9. MasterController#startReplicationMasterRole/stopReplicationMasterRole:&lt;br/&gt;
   Why is one of the member fields prefixed with &apos;this.&apos;, but not the&lt;br/&gt;
   other?&lt;/p&gt;
</comment>
                            <comment id="12533285" author="jorgenlo" created="Tue, 9 Oct 2007 07:33:53 +0100"  >&lt;p&gt;Thanks for the review, &#216;ystein. I have attached a new patch, v2b, addressing all your comments except 2:&lt;/p&gt;

&lt;p&gt;1. Changed constructor of LogAccessFile to call LogToFile#initLogAccessFileReplication. I cannot think of a better name than startReplicationMasterRole, but feel free to suggest one...&lt;br/&gt;
9. Do you mean LogToFile#start/stop? If so, startReplicationMasterRole uses this.masterFactory because a parameter has the same name, which is not the case for stopReplicationMasterRole.&lt;/p&gt;

&lt;p&gt;Not fixed:&lt;/p&gt;

&lt;p&gt;2. To be honest, I don&apos;t like either of these strategies &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;With the current strategy: &lt;br/&gt;
next() returns true -&amp;gt; some info is available - could be a log file switch, could be a log record&lt;br/&gt;
next() returns false -&amp;gt; done&lt;/p&gt;

&lt;p&gt;This allows the loop:&lt;br/&gt;
while (next()) &lt;/p&gt;
{
   if (scan.isFileSwitch()) 
      switchLogFile();
   else
      applyLog(scan.getData());
}

&lt;p&gt;The suggested strategy:&lt;br/&gt;
next() returns true -&amp;gt; log available, maybe also a log file switch &lt;br/&gt;
next() returns false -&amp;gt; no log available, but maybe a log file switch? &lt;/p&gt;

&lt;p&gt;I&apos;m ok with the &quot;true&quot; scenario, but not the &quot;false&quot; scenario. I.e., I don&apos;t think it is ok for ReplicationLogScan to have vital information (a log switch &lt;b&gt;must&lt;/b&gt; be performed at the same place on the slave and master) when it returns false. I did not change this in the attached patch. Ideally, I would like to see a third strategy that was better than both these, but cannot think of&lt;br/&gt;
one.&lt;/p&gt;

&lt;p&gt;All tests pass cleanly.&lt;/p&gt;</comment>
                            <comment id="12533334" author="jorgenlo" created="Tue, 9 Oct 2007 12:39:13 +0100"  >&lt;p&gt;Patch v2c is a minor modification to v2b (added some javadoc and a simple log instant change for log chunks in LogAccessFile). It replaces v2b. All tests passed&lt;/p&gt;</comment>
                            <comment id="12535534" author="oysteing" created="Wed, 17 Oct 2007 13:41:01 +0100"  >&lt;p&gt;Thanks for addressing my comments in the new patch, J&#248;rgen.  I have&lt;br/&gt;
just a few minor follow-up comments (same numbering as in my previous&lt;br/&gt;
review):&lt;/p&gt;

&lt;p&gt;1. Your basically looks good.  IMHO, calling the new method&lt;br/&gt;
   &apos;checkForReplication&apos; or something instead of&lt;br/&gt;
   &apos;initLogAccessFileReplication&apos; since it will not always init&lt;br/&gt;
   replication.  (Check is also the main verb you use to describe in&lt;br/&gt;
   the javadoc what it is doing.)  &lt;/p&gt;

&lt;p&gt;   As an alternative to &apos;startReplicationMasterRole&apos;, I suggest&lt;br/&gt;
   &apos;setReplicationMasterRole&apos;, since as I said, it is not always&lt;br/&gt;
   starting replication.&lt;/p&gt;

&lt;p&gt;2. A third alternative implementation that will behave almost the same&lt;br/&gt;
   as the current strategy as seen from the user, is to remember any&lt;br/&gt;
   logFileSwitch at the end of a log chunk until the next chunk&lt;br/&gt;
   arrives, and let switchLogFile() be true for the first log record&lt;br/&gt;
   of the next chunk.  Then, removing &apos;else&apos; will be the only necessary change&lt;br/&gt;
   to your example code.&lt;/p&gt;

&lt;p&gt;4. As far as I can see, you have not addressed this typo.&lt;/p&gt;

&lt;p&gt;9. I think I meant LogAccessFile#stopReplicationMasterRole.  Anyway,&lt;br/&gt;
   it is fixed now.&lt;/p&gt;

&lt;p&gt;10. (NEW) To me, adding instant as a parameter to&lt;br/&gt;
    LogAccessFile#writeToLog seems like a better solution than&lt;br/&gt;
    maintaining a field &apos;instantCurrentChunk&apos;.&lt;/p&gt;

&lt;p&gt;None of the above issues are very important, and it is your&lt;br/&gt;
call whether you would like to fix any of them before I commit.&lt;/p&gt;</comment>
                            <comment id="12535858" author="jorgenlo" created="Thu, 18 Oct 2007 09:08:47 +0100"  >&lt;p&gt;Thanks for reviewing patch v2c &#216;ystein. &lt;/p&gt;

&lt;p&gt;In patch v2d, I left the implementation of your 2nd comment as is since you don&apos;t seem to feel very strongly about it. The other issues have been fixed. All tests passed.&lt;/p&gt;</comment>
                            <comment id="12535868" author="oysteing" created="Thu, 18 Oct 2007 10:24:22 +0100"  >&lt;p&gt;Committed patch, repli_logbuffer_v2d.diff, as revision 585900.&lt;/p&gt;</comment>
                            <comment id="12570211" author="jorgenlo" created="Tue, 19 Feb 2008 13:28:49 +0000"  >&lt;p&gt;Only remaining task is to ship the database from the master to the slave location using the replication network at replication startup. Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-3434&quot; title=&quot;Send master database to the slave location using the replication network&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-3434&quot;&gt;DERBY-3434&lt;/a&gt; for this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12376584">DERBY-3021</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12377554">DERBY-3051</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12364825" name="derby_2977_1.diff" size="27296" author="jorgenlo" created="Thu, 30 Aug 2007 10:12:03 +0100"/>
                            <attachment id="12364824" name="derby_2977_1.stat" size="1180" author="jorgenlo" created="Thu, 30 Aug 2007 10:12:02 +0100"/>
                            <attachment id="12365023" name="derby_2977_1b.diff" size="29290" author="jorgenlo" created="Mon, 3 Sep 2007 16:38:10 +0100"/>
                            <attachment id="12365022" name="derby_2977_1b.stat" size="1180" author="jorgenlo" created="Mon, 3 Sep 2007 16:38:10 +0100"/>
                            <attachment id="12365081" name="derby_2977_1c.diff" size="27581" author="jorgenlo" created="Tue, 4 Sep 2007 14:34:51 +0100"/>
                            <attachment id="12365080" name="derby_2977_1c.stat" size="970" author="jorgenlo" created="Tue, 4 Sep 2007 14:34:51 +0100"/>
                            <attachment id="12366656" name="repli_logbuffer_v2.diff" size="42527" author="jorgenlo" created="Thu, 27 Sep 2007 12:09:36 +0100"/>
                            <attachment id="12366655" name="repli_logbuffer_v2.stat" size="601" author="jorgenlo" created="Thu, 27 Sep 2007 12:09:36 +0100"/>
                            <attachment id="12367320" name="repli_logbuffer_v2b.diff" size="42402" author="jorgenlo" created="Tue, 9 Oct 2007 07:33:53 +0100"/>
                            <attachment id="12367319" name="repli_logbuffer_v2b.stat" size="601" author="jorgenlo" created="Tue, 9 Oct 2007 07:33:53 +0100"/>
                            <attachment id="12367332" name="repli_logbuffer_v2c.diff" size="44604" author="jorgenlo" created="Tue, 9 Oct 2007 12:39:12 +0100"/>
                            <attachment id="12367333" name="repli_logbuffer_v2c.stat" size="681" author="jorgenlo" created="Tue, 9 Oct 2007 12:39:13 +0100"/>
                            <attachment id="12367925" name="repli_logbuffer_v2d.diff" size="45035" author="jorgenlo" created="Thu, 18 Oct 2007 09:08:47 +0100"/>
                            <attachment id="12367924" name="repli_logbuffer_v2d.stat" size="681" author="jorgenlo" created="Thu, 18 Oct 2007 09:08:46 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 3 Sep 2007 11:10:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30677</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0zd3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39547</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>