<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:46:58 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5316/DERBY-5316.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5316] Unload old JDBC drivers when done with them in the upgrade tests</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5316</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Discussed in this thread on derby-dev: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/db-derby-dev/201107.mbox/%3C4E146309.3000906@gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/201107.mbox/%3C4E146309.3000906@gmail.com%3E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After we&apos;re done testing an old version in the upgrade tests, its classes are still loaded in the JVM because the old driver is referenced in DriverManager. We should find a way to unload the old drivers so that the memory usage of the upgrade tests is reduced. Now we typically need to run with -XX:MaxPermSize=200M or similar options to work around this issue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12513022">DERBY-5316</key>
            <summary>Unload old JDBC drivers when done with them in the upgrade tests</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="knutanders">Knut Anders Hatlen</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Jul 2011 19:51:46 +0100</created>
                <updated>Tue, 24 Jul 2012 18:31:13 +0100</updated>
                            <resolved>Wed, 13 Jul 2011 13:31:02 +0100</resolved>
                                                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13060807" author="kmarsden" created="Wed, 6 Jul 2011 21:26:35 +0100"  >&lt;p&gt;Actually, I had  hoped t that  Lily&apos;s work on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt; would resolve this issue, but it seems like it is still really hard to get Derby unloaded once loaded in a class  loader.  As it is more and more common to see users use custom class loaders, we should also document the appropriate way to not only shutdown but unload Derby when using class loaders.&lt;/p&gt;
</comment>
                            <comment id="13061165" author="knutanders" created="Thu, 7 Jul 2011 10:20:05 +0100"  >&lt;p&gt;I instrumented the DriverManager.registerDriver() and DriverManager.unregisterDriver() and ran the upgrade tests. It looks like the combination of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5267&quot; title=&quot;Shut down engine for old versions in upgrade tests to save memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5267&quot;&gt;&lt;del&gt;DERBY-5267&lt;/del&gt;&lt;/a&gt; made the upgrade tests deregister driver versions lower than 10.2 and higher than 10.7. But we still have 11 versions that don&apos;t get deregistered.&lt;/p&gt;</comment>
                            <comment id="13061460" author="kmarsden" created="Thu, 7 Jul 2011 18:52:10 +0100"  >&lt;p&gt;That make sense. It is good to know that we are protected from class loader leaks moving forward with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;.  I keep forgetting with the upgrade tests we haven&apos;t solved the time travel problem. &lt;/p&gt;

&lt;p&gt;  Perhaps the approach you mentioned in the email will work for the old versions. That just to have it here in the Jira was:&lt;br/&gt;
&quot;One possible solution may be to create a helper class with a method that&lt;br/&gt;
unloads the embedded driver and somehow wire this class into the class&lt;br/&gt;
loader in which the old version is running. The helper class could be&lt;br/&gt;
used from the test tear-down. Then we should be able to trick&lt;br/&gt;
DriverManager into unloading the driver. I think...&quot;&lt;/p&gt;

&lt;p&gt;I wonder if it is possible to write a test to verify not only that the driver is deregistered (which I think was already done in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;), but verify that class loaders get garbage collected and classes unloaded to prevent  other issues from creeping in.  Getting the upgrade tests to run within the default JVM parameters with the Sun JDK would be a good indicator but it would be nice to have a more targeted functional test.  I am just not sure how we would test that directly.&lt;/p&gt;



</comment>
                            <comment id="13061543" author="kristwaa" created="Thu, 7 Jul 2011 20:58:31 +0100"  >&lt;p&gt;The unstable and probably somewhat error-prone path would be to enable tracing of class loading/unloading and parse the output. This requires us to kick off a JVM process, and we have to deal with different options to enable the tracing, output formats etc. I would think such a test shouldn&apos;t be included in suites.All, since it may be sensitive to the test machine environment (i.e. VM vendor and version).&lt;/p&gt;

&lt;p&gt;Here&apos;s an example from running the upgrade tests with versions 10.7.1.1 and 10.8.1.2 (I did run GC explicitly before the JVM exited to be sure):&lt;br/&gt;
$ grep &quot;EmbeddedDriver&quot; output.txt&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:release-jars/10.7.1.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:trunk-netbeans/classes/&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:release-jars/10.8.1.2/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Note that the &quot;origin&quot; of the class is not included in the unloading-message. I&apos;m not sure if one would have to rely on counting of the events only, or if we can conclude based on our knowledge of the test (i.e. when/how classes are loaded/unloaded) and trace order. I expect that the filtering and parsing could be done in Java as a JUnit test.&lt;br/&gt;
I have not experimented further.&lt;/p&gt;</comment>
                            <comment id="13061927" author="knutanders" created="Fri, 8 Jul 2011 13:14:21 +0100"  >&lt;p&gt;I wrote this patch to run DriverManager.deregisterDriver() in the class loader that had loaded the driver. By instrumenting DriverManager, I&apos;ve verified that the old drivers get deregistered when we&apos;re done with them. However, I still need to increase permgen from the default (64M) to get the upgrade tests to complete without OOME.&lt;/p&gt;

&lt;p&gt;Using the JVM flags Kristian mentioned, I see this trace:&lt;/p&gt;

&lt;p&gt;$ grep EmbeddedDriver out.txt&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.0.2.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/trunk/jars/sane/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.1.1.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.1.2.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.1.3.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.2.1.6/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.2.2.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.3.1.4/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.3.3.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.4.1.3/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.4.2.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.5.1.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.5.3.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.6.1.0/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.6.2.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.7.1.1/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Loaded org.apache.derby.jdbc.EmbeddedDriver from file:/code/derby/oldreleases/10.8.1.2/derby.jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;Unloading class org.apache.derby.jdbc.EmbeddedDriver&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Since it doesn&apos;t specify exactly which variant of the class that is unloaded, I&apos;d have to guess, but it looks to me as if 10.0.x and 10.1.x don&apos;t get unloaded. 10.2.x, 10.3.x and 10.4.x do get unloaded. Then 10.5.x and 10.6.x don&apos;t get unloaded. Finally 10.7.1.1 is unloaded, whereas 10.8.1.2 isn&apos;t unloaded because the test completes so soon after the deregistration of the driver that the JVM doesn&apos;t have time to do a gc.&lt;/p&gt;</comment>
                            <comment id="13061950" author="knutanders" created="Fri, 8 Jul 2011 14:20:16 +0100"  >&lt;p&gt;Not sure about 10.0.x and 10.1.x, but  &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4895&quot; title=&quot;Thread local TableDescriptor#referencedColumnMap is not removed from app threads when Derby is shut down&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4895&quot;&gt;&lt;del&gt;DERBY-4895&lt;/del&gt;&lt;/a&gt; could be why the classes are not unloaded in 10.5.x and 10.6.x. It matches the affected version numbers, and some of the classes that can&apos;t be unloaded seem to have a ThreadLocal as their gc root.&lt;/p&gt;</comment>
                            <comment id="13062035" author="knutanders" created="Fri, 8 Jul 2011 16:55:26 +0100"  >&lt;p&gt;Even though the patch doesn&apos;t fix the problem completely, it looks like it is improving the situation. I managed to run the upgrade tests successfully with 80 MB permgen space with the patch. The upgrade tests failed when I tried with 100 MB permgen without the patch.&lt;/p&gt;</comment>
                            <comment id="13062049" author="kmarsden" created="Fri, 8 Jul 2011 17:40:22 +0100"  >&lt;p&gt;Was &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4895&quot; title=&quot;Thread local TableDescriptor#referencedColumnMap is not removed from app threads when Derby is shut down&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4895&quot;&gt;&lt;del&gt;DERBY-4895&lt;/del&gt;&lt;/a&gt; a regression?&lt;/p&gt;</comment>
                            <comment id="13062896" author="knutanders" created="Mon, 11 Jul 2011 08:38:19 +0100"  >&lt;p&gt;Yes, &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4895&quot; title=&quot;Thread local TableDescriptor#referencedColumnMap is not removed from app threads when Derby is shut down&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4895&quot;&gt;&lt;del&gt;DERBY-4895&lt;/del&gt;&lt;/a&gt; was a regression.&lt;/p&gt;</comment>
                            <comment id="13063271" author="knutanders" created="Mon, 11 Jul 2011 11:32:36 +0100"  >&lt;p&gt;Attaching a simplified patch (deregister-v2.diff). The v2 patch does not create a directory with the DriverUnloader class in the test directory. Instead, it creates a specialized class loader that reads it directly from the system classpath.&lt;/p&gt;</comment>
                            <comment id="13063273" author="knutanders" created="Mon, 11 Jul 2011 11:33:16 +0100"  >&lt;p&gt;Committed revision 1145111.&lt;/p&gt;</comment>
                            <comment id="13063353" author="knutanders" created="Mon, 11 Jul 2011 15:19:54 +0100"  >&lt;p&gt;Attaching a patch that works around &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4895&quot; title=&quot;Thread local TableDescriptor#referencedColumnMap is not removed from app threads when Derby is shut down&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4895&quot;&gt;&lt;del&gt;DERBY-4895&lt;/del&gt;&lt;/a&gt; by manually clearing the ThreadLocal that prevents garbage collection of the engine classes. I was able to run the upgrade tests successfully without setting MaxPermSize when this patch was applied.&lt;/p&gt;</comment>
                            <comment id="13063439" author="kmarsden" created="Mon, 11 Jul 2011 18:12:56 +0100"  >&lt;p&gt;I only took a brief look at the patch so I may have missed it there already.  but think we should omit the deregister for versions that have the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt; fix where the deregister should happen automatically.&lt;/p&gt;
</comment>
                            <comment id="13063489" author="knutanders" created="Mon, 11 Jul 2011 20:38:49 +0100"  >&lt;p&gt;We don&apos;t actually call deregisterDriver() on the versions that already deregister the driver as part of the shutdown, since DriverManager.getDrivers() will return an empty Enumeration for those versions. But you were perhaps thinking that we should skip the entire process of checking whether there are any drivers registered? Or perhaps have an assert to verify that the driver in fact has been deregistered?&lt;/p&gt;</comment>
                            <comment id="13063508" author="kmarsden" created="Mon, 11 Jul 2011 21:17:56 +0100"  >&lt;p&gt;I was thinking of skipping the process but  an assert for those versions with the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt; would be good too.  I just in general want to make sure the workaround code put in for the old  versions with  the bugs doesn&apos;t obfuscate future regressions if they occur.&lt;/p&gt;
</comment>
                            <comment id="13063833" author="knutanders" created="Tue, 12 Jul 2011 12:37:58 +0100"  >&lt;p&gt;Attaching deregister-check.diff, which checks that we only had to deregister the driver in versions known to be affected by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-2905&quot; title=&quot;Shutting down embedded Derby does not remove all code, the AutoloadDriver is left registered in the DriverManager.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-2905&quot;&gt;&lt;del&gt;DERBY-2905&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Committed clear-threadlocal.diff with revision 1145552.&lt;br/&gt;
Committed deregister-check.diff with revision 1145553.&lt;/p&gt;</comment>
                            <comment id="13063838" author="knutanders" created="Tue, 12 Jul 2011 12:52:52 +0100"  >&lt;p&gt;I&apos;ve verified (by adding a chatty finalizer to the URLClassLoader created in UpgradeClassLoader.createClassLoader()) that all old versions from 10.2 to 10.8 are garbage collected. I&apos;m wondering if the problems we still see with 10.0 and 10.1 could be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-23&quot; title=&quot;just booting jdbc driver and shutting down seem to leak memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-23&quot;&gt;&lt;del&gt;DERBY-23&lt;/del&gt;&lt;/a&gt; (a memory leak fixed in 10.2).&lt;/p&gt;</comment>
                            <comment id="13064477" author="knutanders" created="Wed, 13 Jul 2011 11:49:18 +0100"  >&lt;p&gt;Attaching the patch clear-contextservice.diff, which works around &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-23&quot; title=&quot;just booting jdbc driver and shutting down seem to leak memory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-23&quot;&gt;&lt;del&gt;DERBY-23&lt;/del&gt;&lt;/a&gt; by clearing two fields in ContextService after the old engine has been shut down. I&apos;ve verified that the 10.0.x and 10.1.x engines are garbage collected when this patch is applied.&lt;/p&gt;</comment>
                            <comment id="13064516" author="knutanders" created="Wed, 13 Jul 2011 13:31:02 +0100"  >&lt;p&gt;Committed revision 1145973.&lt;/p&gt;

&lt;p&gt;Resolving the issue since all the old engines seem to get garbage collected in my environment now.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12468918">DERBY-4740</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12373115">DERBY-2905</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12479510">DERBY-4895</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12513285">DERBY-5322</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12509722">DERBY-5267</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12514531">DERBY-5343</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12486295" name="clear-contextservice.diff" size="4127" author="knutanders" created="Wed, 13 Jul 2011 11:49:18 +0100"/>
                            <attachment id="12486065" name="clear-threadlocal.diff" size="3505" author="knutanders" created="Mon, 11 Jul 2011 15:19:54 +0100"/>
                            <attachment id="12486167" name="deregister-check.diff" size="5455" author="knutanders" created="Tue, 12 Jul 2011 12:37:58 +0100"/>
                            <attachment id="12486042" name="deregister-v2.diff" size="8202" author="knutanders" created="Mon, 11 Jul 2011 11:32:36 +0100"/>
                            <attachment id="12485735" name="deregister.diff" size="11019" author="knutanders" created="Fri, 8 Jul 2011 13:14:21 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Jul 2011 20:26:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31598</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0873:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>