<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:15:54 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5608/DERBY-5608.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5608] BaseTestCase.readProcessOutput should read getInputStream()  and getErrorStream() in separate threads</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5608</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;BaseTestCase.readProcessOutput() reads the streams from Process.getInputStream() and Process.getErrorStream() sequentially &lt;br/&gt;
InputStream is = pr.getInputStream();&lt;br/&gt;
InputStream es = pr.getErrorStream();&lt;br/&gt;
...&lt;br/&gt;
 output += &quot;&amp;lt;STDOUT&amp;gt; &quot; + inputStreamToString(is) + &quot;&amp;lt;END STDOUT&amp;gt;\n&quot;;&lt;br/&gt;
 output += &quot;&amp;lt;STDERR&amp;gt;&quot; + inputStreamToString(es) + &quot;&amp;lt;END STDERR&amp;gt;\n&quot;;&lt;/p&gt;


&lt;p&gt;I think that to be really correct the  two streams need to be read in separate threads because if the error output  is  large it could block and cause a hang  if they are read sequentially like this.&lt;/p&gt;

&lt;p&gt;I noticed during the &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5601&quot; title=&quot;Windows hang in NativeAuthenticationServiceTest testAll with prior interrupt error in SecureServerTest and other cascade errors and failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5601&quot;&gt;&lt;del&gt;DERBY-5601&lt;/del&gt;&lt;/a&gt; discussion as Myrna referenced in that  the addition of draining the error stream caused a different problem (an InterruptException). I don&apos;t understand how it could cause that problem but do think a hang blocking on  reading the input would be possible if the error output was large enough both  before and after the change to add the reading of the error stream sequentially.&lt;/p&gt;



</description>
                <environment></environment>
        <key id="12541869">DERBY-5608</key>
            <summary>BaseTestCase.readProcessOutput should read getInputStream()  and getErrorStream() in separate threads</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="kmarsden">Kathey Marsden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Feb 2012 19:55:33 +0000</created>
                <updated>Fri, 15 Nov 2013 08:15:16 +0000</updated>
                            <resolved>Tue, 17 Apr 2012 15:02:57 +0100</resolved>
                                    <version>10.9.1.0</version>
                                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13204004" author="kristwaa" created="Wed, 8 Feb 2012 21:21:00 +0000"  >&lt;p&gt;Don&apos;t know if it is an option, but could readProcessOutput be discarded (&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;) and SpawnedProcess be extended to deal with this?&lt;br/&gt;
SpawnedProcess already does what readProcessOutput does (or should have done), except for constructing a string from the raw output data. After having read a bit about best practices for java.lang.Process, there seems to be several common pitfalls associated with its use. It would be good to deal with them in one place.&lt;br/&gt;
SpawnedProcess also has some issues that needs to be fixed. I was planning to deal with that under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5601&quot; title=&quot;Windows hang in NativeAuthenticationServiceTest testAll with prior interrupt error in SecureServerTest and other cascade errors and failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5601&quot;&gt;&lt;del&gt;DERBY-5601&lt;/del&gt;&lt;/a&gt;, but maybe this issue is a better fit?&lt;/p&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; Or keep the method and just use SpawnedProcess in the method implementation.&lt;/p&gt;</comment>
                            <comment id="13204016" author="kmarsden" created="Wed, 8 Feb 2012 21:30:05 +0000"  >&lt;p&gt;+1 to dealing with this in SpawnedProcess.    I will defer to you on what makes the most sense, a separate checkin for this part of your work under this issue  or just resolve this as fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5601&quot; title=&quot;Windows hang in NativeAuthenticationServiceTest testAll with prior interrupt error in SecureServerTest and other cascade errors and failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5601&quot;&gt;&lt;del&gt;DERBY-5601&lt;/del&gt;&lt;/a&gt; fix.  Either sounds fine.&lt;/p&gt;
</comment>
                            <comment id="13204601" author="kristwaa" created="Thu, 9 Feb 2012 15:59:37 +0000"  >&lt;p&gt;Attaching a patch that makes BaseTestCase.readProcessOutout use SpawnedProcess to handle the output from the subprocess.&lt;/p&gt;

&lt;p&gt;Only tested with derbynet._Suite so far.&lt;/p&gt;

&lt;p&gt;Patch ready for review.&lt;/p&gt;</comment>
                            <comment id="13205228" author="myrna" created="Fri, 10 Feb 2012 04:56:34 +0000"  >&lt;p&gt;I tried a run with a build with the patch applied on the system where the trouble is reproducible, and unfortunately, I see lots of cascading errors.&lt;/p&gt;

&lt;p&gt;It starts with this:&lt;br/&gt;
1) test_01_WrongUsage(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlApiTest)java.lang.InterruptedException&lt;br/&gt;
	at java.lang.ProcessImpl.waitFor(Native Method)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SpawnedProcess.complete(SpawnedProcess.java:214)&lt;br/&gt;
	at org.apache.derbyTesting.junit.SpawnedProcess.complete(SpawnedProcess.java:176)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.readProcessOutput(BaseTestCase.java:774)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.assertExecJavaCmdAsExpected(BaseTestCase.java:508)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlApiTest.test_01_WrongUsage(NetworkServerControlApiTest.java:81)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;/p&gt;

&lt;p&gt;The next failure is &lt;br/&gt;
2) testBoundaries(org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectTest)java.sql.SQLException: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ001, SQLERRMC: java.security.AccessControlException�Access denied (java.io.FilePermission &lt;span class=&quot;error&quot;&gt;&amp;#91;edited path to system dir&amp;#93;&lt;/span&gt;\system\AAAAAAAAAAAAAA&lt;span class=&quot;error&quot;&gt;&amp;#91;...repeat....&amp;#93;&lt;/span&gt;AAAA\tmp delete)�XJ001.U&lt;/p&gt;

&lt;p&gt;The third failure is:&lt;br/&gt;
3) shutdownDerby(org.apache.derbyTesting.functionTests.tests.store.BootAllTest)java.lang.NullPointerException&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.TopService.getService(TopService.java:128)&lt;br/&gt;
	at org.apache.derby.impl.services.monitor.BaseMonitor.shutdown(BaseMonitor.java:199)&lt;br/&gt;
	at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:248)&lt;br/&gt;
	at org.apache.derby.jdbc.AutoloadedDriver.connect(AutoloadedDriver.java:143)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:317)&lt;br/&gt;
	at java.sql.DriverManager.getConnection(DriverManager.java:297)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.getConnectionByAttributes(DriverManagerConnector.java:144)&lt;br/&gt;
	at org.apache.derbyTesting.junit.DriverManagerConnector.shutEngine(DriverManagerConnector.java:121)&lt;br/&gt;
	at org.apache.derbyTesting.junit.TestConfiguration.shutdownEngine(TestConfiguration.java:1716)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.store.BootAllTest.shutdownDerby(BootAllTest.java:116)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:113)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:51)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:18)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:51)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:18)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:25)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:51)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:21)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:18)&lt;/p&gt;

&lt;p&gt;Which then leaves Derby system shutdown, and causes many, many more failures.&lt;br/&gt;
Tests run: 11591,  Failures: 76,  Errors: 817&lt;/p&gt;</comment>
                            <comment id="13205261" author="kristwaa" created="Fri, 10 Feb 2012 06:16:21 +0000"  >&lt;p&gt;I think patch 1a is an improvement, so I committed it to trunk with revision 1242681.&lt;/p&gt;

&lt;p&gt;Myrna&apos;s results suggest that the old readProcessOutput isn&apos;t the cause for the problems - it&apos;s another victim. This assumes of curse that the stream draining code in SpawnedProcess isn&apos;t buggy.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching another patch 2a, which resets the interrupt flag when waitFor is interrupted in SpawnedProcess.complete. If my theory is correct that should still leave you with some failed tests due to the interrupt, but the cascading errors caused by Derby shutdowns should go away.&lt;br/&gt;
This fix is part of addressing the issues I mentioned for SpawnedProcess under &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5601&quot; title=&quot;Windows hang in NativeAuthenticationServiceTest testAll with prior interrupt error in SecureServerTest and other cascade errors and failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5601&quot;&gt;&lt;del&gt;DERBY-5601&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The real issue here is finding out where the interrupt is coming from, but I don&apos;t know how to do that.&lt;/p&gt;</comment>
                            <comment id="13206722" author="kristwaa" created="Mon, 13 Feb 2012 07:14:20 +0000"  >&lt;p&gt;I&apos;m ready to resolve this issue.&lt;br/&gt;
We may want to consider a timeout when waiting for the process, but then again we are expecting the process to terminate normally.&lt;br/&gt;
Keeping this open for a little longer to see if anything comes up.&lt;/p&gt;

&lt;p&gt;Patch 2a didn&apos;t help with Myrna&apos;s cascading errors issue.&lt;/p&gt;</comment>
                            <comment id="13212450" author="kristwaa" created="Tue, 21 Feb 2012 08:22:16 +0000"  >&lt;p&gt;Removed a space character prepended to the stdout output with revision 1291647.&lt;br/&gt;
Does anyone see enough failures related to this issue to warrant backporting the fix, which should also include &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5617&quot; title=&quot;Improve process handling in SpawnedProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5617&quot;&gt;&lt;del&gt;DERBY-5617&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13212731" author="kmarsden" created="Tue, 21 Feb 2012 16:52:28 +0000"  >&lt;p&gt;I think it would be good to backport to 10.8 .  The cleaner we can get trunk and 10.8 the better and also if there are other fixes in this area, they will be easier to backport  if this one goes. Do you think it will address &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5494&quot; title=&quot;Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5494&quot;&gt;&lt;del&gt;DERBY-5494&lt;/del&gt;&lt;/a&gt;?  I haven&apos;t had a chance to take a close look at that one yet.&lt;/p&gt;</comment>
                            <comment id="13213576" author="kristwaa" created="Wed, 22 Feb 2012 12:42:22 +0000"  >&lt;p&gt;Ok, I&apos;ll look into backporting it.&lt;/p&gt;

&lt;p&gt;Do you mean &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5594&quot; title=&quot;SecureServerTest java.io.IOException: Interrupted system call &quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5594&quot;&gt;&lt;del&gt;DERBY-5594&lt;/del&gt;&lt;/a&gt;?&lt;br/&gt;
I don&apos;t think this will fix that issue, although I&apos;m not sure. I&apos;m also not sure if there is a bug with SpawnedProcess/StreamSaver To me it looks like the process is forcibly destroyed for some reason, and it would be good to understand why that&apos;s happening.&lt;/p&gt;</comment>
                            <comment id="13255567" author="kristwaa" created="Tue, 17 Apr 2012 15:02:57 +0100"  >&lt;p&gt;Backported to 10.8, together with &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5617&quot; title=&quot;Improve process handling in SpawnedProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5617&quot;&gt;&lt;del&gt;DERBY-5617&lt;/del&gt;&lt;/a&gt;, with revision 1327102.&lt;br/&gt;
Resolving issue.&lt;/p&gt;</comment>
                            <comment id="13823444" author="knutanders" created="Fri, 15 Nov 2013 08:15:16 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;bulk update: close all resolved issues that haven&amp;#39;t had any activity the last year&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12541126">DERBY-5601</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12513969" name="derby-5608-1a-use_spawnedprocess.diff" size="6656" author="kristwaa" created="Thu, 9 Feb 2012 15:59:37 +0000"/>
                            <attachment id="12514081" name="derby-5608-2a-clear_interrupt_flag_on_waitFor.diff" size="851" author="kristwaa" created="Fri, 10 Feb 2012 06:16:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Feb 2012 21:21:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>227156</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0ccn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>