<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:43:39 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-599/DERBY-599.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-599] Using setBlob interface, should not materialize the entire blob value into memory.</title>
                <link>https://issues.apache.org/jira/browse/DERBY-599</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;setBlob and blob.length() calls should not materialize blob into memory.&lt;/p&gt;
</description>
                <environment>all</environment>
        <key id="12317544">DERBY-599</key>
            <summary>Using setBlob interface, should not materialize the entire blob value into memory.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="skambha">Sunitha Kambhampati</assignee>
                                    <reporter username="skambha">Sunitha Kambhampati</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Oct 2005 03:46:55 +0100</created>
                <updated>Wed, 1 Feb 2006 08:57:35 +0000</updated>
                            <resolved>Wed, 1 Feb 2006 08:57:18 +0000</resolved>
                                    <version>10.0.2.0</version>
                    <version>10.0.2.1</version>
                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12364039" author="skambha" created="Thu, 26 Jan 2006 09:25:08 +0000"  >&lt;p&gt;Problem:&lt;br/&gt;
setBlob(i,blob) does not set the length of the stream in the blob and but instead passes a -1 for stream length. &lt;br/&gt;
During the normalization process, setBlob.normalize(DTD,DVD) calls SQLBlob.setWith. &lt;br/&gt;
The setWidth is called in order to compare the length of the blob value to the maximum width of the column and to throw a truncation error in case the value wont fit into the column.  setWidth() calls SQLBinary.getLength().  If tvalue is a stream, the getLength() method checks for streamLength value and if the streamLength value is set to -1 (ie unknown) , it calls getBytes().length() which calls getValue() and this is where the entire stream is getting materialized.  &lt;/p&gt;

&lt;p&gt;This patch fixes &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-599&quot; title=&quot;Using setBlob interface, should not materialize the entire blob value into memory.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-599&quot;&gt;&lt;del&gt;DERBY-599&lt;/del&gt;&lt;/a&gt; so using setBlob call, will not  materialize the entire blob into memory. &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;changes to setBlob to pass the length of the blob value instead of -1.  The length of the blob value passed into setBlob can be obtained by calling Blob.length() which returns a long.&lt;/li&gt;
	&lt;li&gt;move the -ve length check from setBinaryStream to setBinaryStreamInternal since setBlob will not pass a -1 for length.&lt;/li&gt;
	&lt;li&gt;change setBinaryStreamInternal to take the length parameter as a long instead of int.&lt;/li&gt;
	&lt;li&gt;Currently Derby allows max value of 2G-1 ( Max value of an int) for blobs. Add check to ensure that if a stream with a length &amp;gt; max value of int is passed, an error is thrown. Use an existing error message&lt;br/&gt;
&apos;The resulting value is outside the range for the data type 
{0}&apos;&lt;br/&gt;
&lt;br/&gt;
svn stat:&lt;br/&gt;
M      java\engine\org\apache\derby\impl\jdbc\EmbedPreparedStatement.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\tests\largedata\LobLimits.java&lt;br/&gt;
M      java\testing\org\apache\derbyTesting\functionTests\master\LobLimits.out&lt;br/&gt;
&lt;br/&gt;
Tests&lt;br/&gt;
- Adds following testcases to largedata/LobLimits.java &lt;br/&gt;
1) test for insert of 4Gb blob using setBlob api. This will throw the newly added error message. &lt;br/&gt;
2) test for select of 2G blob and insert the 2G blob using setBlob api&lt;br/&gt;
3) test for select of 2G blob and update the 2G blob using setBlob api.&lt;br/&gt;
4) test for update of 2G blob with a 100MB blob.&lt;br/&gt;
&lt;br/&gt;
Please note, the largedata/LobLimits.java does not run as part of derbyall as it requires large amounts of diskspace and takes a long time to run. This test needs to be run explicitly.&lt;br/&gt;
&lt;br/&gt;
- The largedata/LobLimits test was run on a linux box - IBM 1.4.2 jvm/RHEL4.0/insane jars and it ran successfully with no errors. Without this patch, there would be an outofmemory exception for the test cases mentioned above (except for #1).&lt;br/&gt;
&lt;br/&gt;
Ran derbyall on Win2k using classes directory with Sun JVM 1.4.2.  I ran the network tests -derbynetmats and derbynetclientmats separately. One test failed - derbynetclientmats/derbynetmats/derbynetmats.fail:derbynet/NSinSameJVM.java. This test seems to fail intermittently. I dont believe this is related to this patch. &lt;br/&gt;
&lt;br/&gt;
----------&lt;br/&gt;
&lt;br/&gt;
I had earlier used a new error message for the case when blob length was greater than 2G, something like &apos;Blob/Clob length is greater than the supported length&apos; as I didnt find anything appropriate in EmbedPreparedStatement, but looking more, it seemed to me - like this case would be covered by this existing message &apos;The resulting value is outside the range for the data type {0}
&lt;p&gt;&apos; which I have used in this patch.  If someone feels otherwise, please let me know. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can someone please review this patch.  Thanks. &lt;/p&gt;</comment>
                            <comment id="12364398" author="mikem" created="Mon, 30 Jan 2006 05:58:30 +0000"  >&lt;p&gt;I committed the attached patch to the trunk with svn  373356&lt;/p&gt;</comment>
                            <comment id="12364750" author="skambha" created="Wed, 1 Feb 2006 08:57:18 +0000"  >&lt;p&gt;Fix has been committed.  I verified by running the test largedata/LobLimits.java successfully. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12322366" name="Derby599.diff.txt" size="14444" author="skambha" created="Thu, 26 Jan 2006 09:25:08 +0000"/>
                            <attachment id="12322367" name="Derby599.stat.txt" size="245" author="skambha" created="Thu, 26 Jan 2006 09:25:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 30 Jan 2006 05:58:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22039</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy1787:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>40821</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>