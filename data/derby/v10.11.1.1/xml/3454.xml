<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:31:46 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-3454/DERBY-3454.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-3454] &apos;java.lang.NullPointerException&apos; is thrown when starting a master db before a slave one</title>
                <link>https://issues.apache.org/jira/browse/DERBY-3454</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The &apos;java.lang.NullPointerException&apos; exception is thrown when a database is started in a master mode and is trying to establish a connection to an slave database socket, which is not available.&lt;/p&gt;

&lt;p&gt;The exception is by the MasterController#startMaster(). First, it tries to setup connection with a slave database using a transmitter:&lt;br/&gt;
    MasterController#setupConnection&lt;br/&gt;
       -&amp;gt; transmitter = new ReplicationMessageTransmit(); &lt;br/&gt;
            transmitter.initConnection()&lt;br/&gt;
              -&amp;gt; new InetSocketAddress() -&amp;gt; createSocket() -&amp;gt; connect()&lt;/p&gt;

&lt;p&gt;The connect() method throws a ConnectException, and so fails to create a socketConn instance. The exception is then wrapped several times an propagated back to the MasterController#startMaster() method. It&apos;s caught there and then a MasterController#teardownNetwork() method is called, which tries to send a STOP message using the aforementioned transmitter, which hasn&apos;t been able to init a connection. &lt;/p&gt;

&lt;p&gt;A transmitter simply tries to call socketConn.writeMessage(message), which throws NPE because socketConn is null.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</description>
                <environment></environment>
        <key id="12389381">DERBY-3454</key>
            <summary>&apos;java.lang.NullPointerException&apos; is thrown when starting a master db before a slave one</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="narayanan">V.Narayanan</assignee>
                                    <reporter username="serge.tsv">Serge Tsv</reporter>
                        <labels>
                    </labels>
                <created>Sat, 23 Feb 2008 11:16:42 +0000</created>
                <updated>Fri, 21 Jan 2011 17:51:32 +0000</updated>
                            <resolved>Mon, 7 Apr 2008 10:06:38 +0100</resolved>
                                    <version>10.4.1.3</version>
                                    <fixVersion>10.4.1.3</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12571721" author="serge.tsv" created="Sat, 23 Feb 2008 11:18:25 +0000"  >&lt;p&gt;This problem could be reproduced by simply creating a connection with a startMaster=true to an unestablished socket.&lt;/p&gt;</comment>
                            <comment id="12572196" author="narayanan" created="Mon, 25 Feb 2008 19:56:34 +0000"  >&lt;p&gt;tearDown is called in the startMaster method. The start failure and consequently the tearDown &lt;br/&gt;
is caused by the failure to establish a socket connection. Hence in the tearDown method &lt;br/&gt;
trying to send a STOP message through a socket that does not exist results in a &lt;br/&gt;
NullPointerException.&lt;/p&gt;

&lt;p&gt;All the public methods of ReplicationMessageTransmit and ReplicationMessageReceive should&lt;br/&gt;
ensure that the socket connection exists (is not null) before performing the respective&lt;br/&gt;
operations. If the socket connection does not exist readMessage returns null and the sendMessage&lt;br/&gt;
method returns quietly.&lt;/p&gt;

&lt;p&gt;Methods in ReplicationMessageTransmit&lt;br/&gt;
-------------------------------------&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;tearDown()&lt;/li&gt;
	&lt;li&gt;sendMessage()&lt;/li&gt;
	&lt;li&gt;readMessage()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Methods in ReplicationMessageReceive&lt;br/&gt;
------------------------------------&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;sendMessage()&lt;/li&gt;
	&lt;li&gt;readMessage()&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;The other methods in these classes must use the sendMessage and the readMessage methods and not&lt;br/&gt;
call socketConn.writeMessage, socketConn.readMessage on their own. This would ensure that&lt;br/&gt;
&quot;socket connection connection exist&quot; checks are restricted to the read and the write methods only.&lt;/p&gt;

&lt;p&gt;Note: The case of active=false on the master and the transmitter being called to send a message&lt;br/&gt;
      is a unique case. This happens only when the tearDown is called because of a network(socket)&lt;br/&gt;
      connection failure. Hence here it is safe to exit quietly from a send or read attempt on a&lt;br/&gt;
      non-existent socket.&lt;/p&gt;</comment>
                            <comment id="12573642" author="narayanan" created="Fri, 29 Feb 2008 09:08:07 +0000"  >&lt;p&gt;Pls find attached a patch. Below is a file by file explanation of the&lt;br/&gt;
patch attached.&lt;/p&gt;

&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageTransmit.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Introduced not null checks for sockConn in tearDown&lt;/li&gt;
	&lt;li&gt;Introduced a method that throws an exception if sockConn is null and used it&lt;br/&gt;
  in the methods that send and receive messages.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageReceive.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The changes to this file are identical to changes done on ReplicationMessageTransmit&lt;br/&gt;
  except that I change some places where sockConn is called directly to send messages&lt;br/&gt;
  to use the sendMessage method instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;M      java/engine/org/apache/derby/loc/messages.xml&lt;br/&gt;
M      java/shared/org/apache/derby/shared/common/reference/MessageId.java&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Introduced one Message for the IOException that is thrown upon SocketConnection object being&lt;br/&gt;
null&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I ran the repro. Pls find the repro output below.&lt;/p&gt;

&lt;p&gt;ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb&apos;;&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8002&apos;;&lt;br/&gt;
ERROR XRE04: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE04, SQLERRMC: replicationdblocalhost8002XRE04&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8003&apos;;&lt;br/&gt;
ERROR XRE04: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE04, SQLERRMC: replicationdblocalhost8002XRE04&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby://localhost:1527/replicationdb;startMaster=true;slaveHost=localhost;slavePort=8001&apos;;&lt;br/&gt;
ERROR XRE04: DERBY SQL error: SQLCODE: -1, SQLSTATE: XRE04, SQLERRMC: replicationdblocalhost8002XRE04&lt;br/&gt;
ij&amp;gt;&lt;/p&gt;

&lt;p&gt;You don&apos;t see the null pointer exceptions any more.&lt;/p&gt;

&lt;p&gt;8001 is the correct port. The connection with the correct port also fails because of Derby-3358.&lt;/p&gt;</comment>
                            <comment id="12574091" author="serge.tsv" created="Sat, 1 Mar 2008 11:00:14 +0000"  >&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;Have applied the patch to the trunk, and I see the same XRE04 error instread of NPE now. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
I assume that it verifies that the tearDown method is implemented properly now.&lt;/p&gt;

&lt;p&gt;I have a one small suggestion though. Could it be considered to throw a runtime exception &lt;br/&gt;
(like an IllegalStateException) other then  an IOException in the case when we try to use a &lt;br/&gt;
connection which hasn&apos;t been established (except for a tearDown method)? I think the &lt;br/&gt;
receiver/transmitter shouldn&apos;t be accessed at all after an exception is thrown during an &lt;br/&gt;
initialization, which is a case when socket couldn&apos;t be established. &lt;/p&gt;

&lt;p&gt;The XRE04 error will still be reported in this case. And if the runtime exception is used, &lt;br/&gt;
then an introduction of a new error message won&apos;t be required I guess.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12574095" author="narayanan" created="Sat, 1 Mar 2008 11:52:38 +0000"  >&lt;p&gt;Thank you for trying out the patch Serge &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;Could it be considered to throw a runtime exception&lt;br/&gt;
&amp;gt;(like an IllegalStateException) other then an IOException &lt;br/&gt;
&amp;gt;in the case when we try to use a connection which hasn&apos;t &lt;br/&gt;
&amp;gt;been established (except for a tearDown method)?&lt;/p&gt;

&lt;p&gt;I do not think it is advisable to throw unchecked exceptions&lt;br/&gt;
unless in cases where an alternate checked exception is not&lt;br/&gt;
possible&lt;/p&gt;

&lt;p&gt;&amp;gt;I think the receiver/transmitter shouldn&apos;t be accessed at all &lt;br/&gt;
&amp;gt;after an exception is thrown during an initialization, which is &lt;br/&gt;
&amp;gt;a case when socket couldn&apos;t be established.&lt;/p&gt;

&lt;p&gt;A receiver or an transmitter is an abstraction above the underlying&lt;br/&gt;
connection. Why do you think accessing the transmitter or receiver is&lt;br/&gt;
wrong?&lt;/p&gt;

&lt;p&gt;I do agree that attempting a send from the transmitter seems illogical&lt;br/&gt;
when the connection does not exist, but then the transmitter is an&lt;br/&gt;
abstraction above the connection and is insulated from the conenction&lt;br/&gt;
details. Only when it tries to access the underlying connection does&lt;br/&gt;
it know that the connection is no longer valid and gets an exception.&lt;/p&gt;

&lt;p&gt;&amp;gt;The XRE04 error will still be reported in this case. And if the &lt;br/&gt;
&amp;gt;runtime exception is used, then an introduction of a new error &lt;br/&gt;
&amp;gt;message won&apos;t be required I guess. &lt;/p&gt;

&lt;p&gt;If this had been true the NPE (which is also a RuntimeException)&lt;br/&gt;
would have resulted in a XRE04 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I do not think we will get a&lt;br/&gt;
XRE04 if a RuntimeException is thrown.&lt;/p&gt;</comment>
                            <comment id="12574414" author="oysteing" created="Mon, 3 Mar 2008 10:25:10 +0000"  >&lt;p&gt;Thanks for the patch, Narayanan.  Looks good.  Committed as revision 633026.&lt;/p&gt;</comment>
                            <comment id="12574416" author="oysteing" created="Mon, 3 Mar 2008 10:28:25 +0000"  >&lt;p&gt;Forgot to comment that I feel the message text for R012 could be improved.&lt;br/&gt;
I suggest: &quot;No replication connection for database &amp;lt;dbname&amp;gt;.&lt;/p&gt;</comment>
                            <comment id="12574612" author="serge.tsv" created="Mon, 3 Mar 2008 17:06:17 +0000"  >&lt;p&gt;V.Narayanan, thanks for your comments!&lt;/p&gt;

&lt;p&gt;I see the following generic use case for receiver/transmitter classes:&lt;/p&gt;

&lt;p&gt;1. A receiver/transmitter instance is created.&lt;br/&gt;
2. An initConnection method is called on the created instance&lt;br/&gt;
3. sendMessage/readMessage calls are executed on the initialized &lt;br/&gt;
     receiver/transmitter instance&lt;/p&gt;

&lt;p&gt;For the flow above:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If (3) is executed before (2), then I guess this would be a programmatic error&lt;br/&gt;
     and a RE should be called (like IllegalStateException)&lt;/li&gt;
	&lt;li&gt;If (2) fails, I do also consider executing (3) after that as a programmatic error,&lt;br/&gt;
      because in this case a transmitter/receiver hasn&apos;t been properly initialized. &lt;br/&gt;
      And there&apos;s an attempt to use a transmitter/receiver which has turned up to&lt;br/&gt;
      be in an illegal state.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You&apos;re right that the transmitter/receiver is an abstraction above the connection.&lt;br/&gt;
But I&apos;m just trying to say that it might be wrong (from a programmatic point of view)&lt;br/&gt;
to try to use them in an illegal state. And might be better to properly process a (2)&lt;br/&gt;
failure and make it so sendMessage/readMessage methods won&apos;t be called &lt;br/&gt;
afterwards, instead of relying on an IOException been reported to a user.&lt;/p&gt;

&lt;p&gt;&amp;gt; If this had been true the NPE (which is also a RuntimeException)&lt;br/&gt;
would have resulted in a XRE04 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I think that XRE04 is thrown by an initConnection method. The NPE was caused &lt;br/&gt;
by a tearDown method, and now it&apos;s been fixed, and there&apos;re no further calls to&lt;br/&gt;
sendMessage/readMessage in case of XRE04.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="12574826" author="narayanan" created="Tue, 4 Mar 2008 03:22:02 +0000"  >&lt;p&gt;Thank you for the comments Serge &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;For the flow above:&lt;br/&gt;
&amp;gt;   * If (3) is executed before (2), then I guess this would be a programmatic error &lt;br/&gt;
&amp;gt;     and a RE should be called (like IllegalStateException)&lt;/p&gt;

&lt;p&gt;I would try to correct the case when (3) is called before (2) (fix the programming error)&lt;br/&gt;
than throw an IllegalStateException&lt;/p&gt;


&lt;p&gt;&amp;gt;   * If (2) fails, I do also consider executing (3) after that as a programmatic error, &lt;br/&gt;
&amp;gt;      because in this case a transmitter/receiver hasn&apos;t been properly initialized. &lt;br/&gt;
&amp;gt;      And there&apos;s an attempt to use a transmitter/receiver which has turned up to&lt;br/&gt;
&amp;gt;      be in an illegal state.&lt;/p&gt;

&lt;p&gt;&amp;gt;You&apos;re right that the transmitter/receiver is an abstraction above the connection.&lt;br/&gt;
&amp;gt;But I&apos;m just trying to say that it might be wrong (from a programmatic point of view)&lt;br/&gt;
&amp;gt;to try to use them in an illegal state. And might be better to properly process a (2)&lt;br/&gt;
&amp;gt;failure and make it so sendMessage/readMessage methods won&apos;t be called &lt;br/&gt;
&amp;gt;afterwards, instead of relying on an IOException been reported to a user.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If there is a programmatic error causing an Unchecked Exception to be thrown (like an NPE)&lt;br/&gt;
  I would not correct it by throwing another Unchecked Exception (IllegalStateException)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;If there is a programmatic error that causes an Unchecked Exception to be thrown,like, (3)&lt;br/&gt;
  before (2) I would correct the programmatic error than throw an unchecked exception&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I do not agree that Properly processing a (2) failure = throwing an unchecked exception.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I am properly processing (2) when I try to ensure that the underlying connection is valid&lt;br/&gt;
  before attempting a send or a receive.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Now that all transmitter methods verify that the underlying connection is not invalid using&lt;br/&gt;
  the checkSocketConnection() method the there would be no danger of attempting (3) with a&lt;br/&gt;
  invalid connection.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12586283" author="narayanan" created="Mon, 7 Apr 2008 10:06:38 +0100"  >&lt;p&gt;All relevant patches have been submitted and committed.&lt;br/&gt;
Resolving issue!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12386188">DERBY-3318</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12376799" name="Derby3454.diff" size="8211" author="narayanan" created="Fri, 29 Feb 2008 09:08:07 +0000"/>
                            <attachment id="12376800" name="Derby3454.stat" size="323" author="narayanan" created="Fri, 29 Feb 2008 09:08:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Feb 2008 19:56:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23647</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0lnr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37327</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>