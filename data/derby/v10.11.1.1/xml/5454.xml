<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:09:15 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-5454/DERBY-5454.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-5454] ERROR 40001 deadlock in nstest on select max(serialkey)</title>
                <link>https://issues.apache.org/jira/browse/DERBY-5454</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;nstest with 10.8.2 (both 10.8.2.1 RC2 (revision 1170221) and builds off the 10.8. tree at 10.8.2.2 level after backing out re &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5448&quot; title=&quot;In the 10.8 branch, back out the concurrency improvements introduced by using SequenceUpdaters to allocate identity values.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5448&quot;&gt;&lt;del&gt;DERBY-5448&lt;/del&gt;&lt;/a&gt;) show deadlock errors like the following:&lt;/p&gt;

&lt;p&gt;Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.utils.DbUtil.pick_one(DbUtil.java:491)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.utils.DbUtil.delete_one_row(DbUtil.java:418)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.tester.TesterObject.doIUDOperation(TesterObject.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.tester.Tester2.startTesting(Tester2.java:109)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.NsTest.run(NsTest.java:555)&lt;br/&gt;
Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:&lt;br/&gt;
Lock : ROW, NSTESTTAB, (619,15)&lt;br/&gt;
  Waiting XID : &lt;/p&gt;
{104564, S}
&lt;p&gt; , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : &lt;/p&gt;
{104179, X}
&lt;p&gt;Lock : ROW, NSTESTTAB, (619,16)&lt;br/&gt;
  Waiting XID : &lt;/p&gt;
{104179, S}
&lt;p&gt; , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : &lt;/p&gt;
{104564, X}
&lt;p&gt;. The selected victim is XID : 104564.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)&lt;br/&gt;
        ... 14 more&lt;/p&gt;

&lt;p&gt;For more examples, see comments on &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5448&quot; title=&quot;In the 10.8 branch, back out the concurrency improvements introduced by using SequenceUpdaters to allocate identity values.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5448&quot;&gt;&lt;del&gt;DERBY-5448&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12526493">DERBY-5454</key>
            <summary>ERROR 40001 deadlock in nstest on select max(serialkey)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="myrna">Myrna van Lunteren</assignee>
                                    <reporter username="myrna">Myrna van Lunteren</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Oct 2011 20:01:39 +0100</created>
                <updated>Thu, 1 Nov 2012 21:10:39 +0000</updated>
                            <resolved>Tue, 10 Apr 2012 21:45:17 +0100</resolved>
                                    <version>10.7.1.1</version>
                    <version>10.8.2.2</version>
                                    <fixVersion>10.8.3.0</fixVersion>
                    <fixVersion>10.9.1.0</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13124399" author="myrna" created="Mon, 10 Oct 2011 20:03:36 +0100"  >&lt;p&gt;It seems from comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-5448&quot; title=&quot;In the 10.8 branch, back out the concurrency improvements introduced by using SequenceUpdaters to allocate identity values.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-5448&quot;&gt;&lt;del&gt;DERBY-5448&lt;/del&gt;&lt;/a&gt;, that the consensus is that this issue is most likely pre-dating 10.8.2.&lt;br/&gt;
Thus, I&apos;m not marking it blocker for 10.8.2.&lt;/p&gt;</comment>
                            <comment id="13128228" author="knutanders" created="Sat, 15 Oct 2011 16:59:19 +0100"  >&lt;p&gt;Seems like this deadlock predates 10.8.1 too. I started NsTest on 10.7.1.1 (embedded, default settings) and after just a few minutes I saw this deadlock trace:&lt;/p&gt;

&lt;p&gt;java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:&lt;br/&gt;
Lock : ROW, NSTESTTAB, (685,18)&lt;br/&gt;
  Waiting XID : &lt;/p&gt;
{126705, S} , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : {126703, X} &lt;br/&gt;
Lock : ROW, NSTESTTAB, (685,19)&lt;br/&gt;
  Waiting XID : {126703, S} , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : {126705, X} &lt;br/&gt;
. The selected victim is XID : 126705. while selecting a random row&lt;br/&gt;
java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:&lt;br/&gt;
Lock : ROW, NSTESTTAB, (685,18)&lt;br/&gt;
  Waiting XID : {126705, S}
&lt;p&gt; , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : &lt;/p&gt;
{126703, X}
&lt;p&gt; &lt;br/&gt;
Lock : ROW, NSTESTTAB, (685,19)&lt;br/&gt;
  Waiting XID : &lt;/p&gt;
{126703, S}
&lt;p&gt; , NSTEST, select max(serialkey) from nstesttab where serialkey &amp;gt; ?&lt;br/&gt;
  Granted XID : &lt;/p&gt;
{126705, X}
&lt;p&gt; &lt;br/&gt;
. The selected victim is XID : 126705.&lt;br/&gt;
        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)&lt;br/&gt;
        at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.utils.DbUtil.pick_one(DbUtil.java:527)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.utils.DbUtil.delete_one_row(DbUtil.java:440)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.tester.TesterObject.doIUDOperation(TesterObject.java:175)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.tester.Tester2.startTesting(Tester2.java:109)&lt;br/&gt;
        at org.apache.derbyTesting.system.nstest.NsTest.run(NsTest.java:555)&lt;/p&gt;</comment>
                            <comment id="13239051" author="myrna" created="Tue, 27 Mar 2012 01:23:29 +0100"  >&lt;p&gt;I&apos;m attaching an attempt to work around this deadlock issue by &lt;b&gt;not&lt;/b&gt; doing the select max(serial_key) at all, and instead obtaining a random number without using jdbc.&lt;/p&gt;

&lt;p&gt;It seems to work in as far as that with this change I do not see the deadlock on max(serial_key) (of course, not as the code&apos;s no longer there), but unfortunately I also see some ERROR 23505s popping up: &lt;/p&gt;


&lt;p&gt;------from the test output redirected to nstest.out: -----------&lt;br/&gt;
Tester2Thread 4 inserted 1 row with id -764407904&lt;br/&gt;
Exception when preparing or executing insert prepared stmt&lt;br/&gt;
java.sql.SQLIntegrityConstraintViolationException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL120322210301700&apos; defined on &apos;NSTESTTAB&apos;.&lt;br/&gt;
Tester2Thread 4 dbUtil ----&amp;gt; During executing/preparing insert stmt in dbUtil, exception thrown was : java.sql.SQLIntegrityConstraintViolationException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL120322210301700&apos; defined on &apos;NSTESTTAB&apos;.&lt;br/&gt;
java.sql.SQLIntegrityConstraintViolationException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL120322210301700&apos; defined on &apos;NSTESTTAB&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:256)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:424)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:353)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2360)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:82)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1334)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1715)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:311)&lt;br/&gt;
	at org.apache.derbyTesting.system.nstest.utils.DbUtil.add_one_row(DbUtil.java:197)&lt;br/&gt;
	at org.apache.derbyTesting.system.nstest.tester.TesterObject.doIUDOperation(TesterObject.java:148)&lt;br/&gt;
	at org.apache.derbyTesting.system.nstest.tester.Tester2.startTesting(Tester2.java:109)&lt;br/&gt;
	at org.apache.derbyTesting.system.nstest.NsTest.run(NsTest.java:555)&lt;br/&gt;
Caused by: java.sql.SQLException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL120322210301700&apos; defined on &apos;NSTESTTAB&apos;.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:42)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:122)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:71)&lt;br/&gt;
	... 12 more&lt;br/&gt;
Caused by: ERROR 23505: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by &apos;SQL120322210301700&apos; defined on &apos;NSTESTTAB&apos;.&lt;br/&gt;
	at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:295)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:466)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:383)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:590)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:999)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:519)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:443)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:324)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1242)&lt;br/&gt;
	... 6 more&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;/p&gt;


&lt;p&gt;So I don&apos;t think this is quite right. I&apos;ll look at it some more.&lt;/p&gt;

&lt;p&gt;I also wondered if perhaps it would be useful to have a test that has a good chance of hitting deadlock issues and perhaps I should make the old code available with a special test property...But decided against that because the deadlock was not happening all the time.&lt;/p&gt;
</comment>
                            <comment id="13249040" author="myrna" created="Sat, 7 Apr 2012 00:28:14 +0100"  >&lt;p&gt;Attaching a second patch which just does not attempt to do a select max(serial_key).&lt;br/&gt;
I found the original code confusing and the comments appeared contrary to what was happening. &lt;br/&gt;
A deadlock was happening regularly but seemed not the point, and so was only complicating the test.&lt;/p&gt;

&lt;p&gt;I modified the code to just generate a random number and insert that.&lt;br/&gt;
If no one has any objections I&apos;ll commit this over the weekend and backport it to 10.8.&lt;/p&gt;</comment>
                            <comment id="13251048" author="myrna" created="Tue, 10 Apr 2012 21:45:17 +0100"  >&lt;p&gt;I committed the change to remove the &apos;select max(serialkey) where...&apos; code to trunk with revision 1311804 and merged it to 10.8 with revision 1311975.&lt;/p&gt;

&lt;p&gt;Closing this issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12548026">DERBY-5671</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12524667">DERBY-5430</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12526066">DERBY-5448</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12520041" name="DERBY-5454_try1.diff" size="1681" author="myrna" created="Tue, 27 Mar 2012 01:23:29 +0100"/>
                            <attachment id="12521783" name="DERBY-5454_try2.diff" size="3494" author="myrna" created="Sat, 7 Apr 2012 00:28:13 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310200" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Bug behavior facts</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10369"><![CDATA[Regression Test Failure]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 15 Oct 2011 15:59:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56885</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0cfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35833</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>