<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:28:40 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-756/DERBY-756.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-756] OutOfMemory Error on continous execution of select statement using COUNT() and DISTINCT on same connection</title>
                <link>https://issues.apache.org/jira/browse/DERBY-756</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;The OutOfMemory is thrown when I continously execute a sql statement on an openned JDBC connection. A PreparedStatement and ResultSet is created on the connection everytime and close after each execution. I suspect that the bug is related to function COUNT() with keyword DISTINCT. For example, &quot;select count(distinct ID) from TEST where FLAG &amp;lt;&amp;gt; 2&quot;. It will be fine if DISTINCT is not used, or select count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is used.&lt;/p&gt;

&lt;p&gt;The exception like &quot;Exception in thread &quot;DRDAConnThread_2&quot; java.lang.OutOfMemoryError: Java heap space&quot; could be thrown on Derby side, or sometimes on client side.&lt;/p&gt;

&lt;p&gt;Please find the test code and schema I used for testing:&lt;br/&gt;
create table:&lt;br/&gt;
CREATE TABLE Test&lt;br/&gt;
(&lt;br/&gt;
    ID BIGINT NOT NULL,&lt;br/&gt;
    NAME VARCHAR(512) NOT NULL,&lt;br/&gt;
    FLAG int,&lt;br/&gt;
      CONSTRAINT PK_ID PRIMARY KEY (ID)&lt;br/&gt;
);&lt;/p&gt;

&lt;p&gt;insert data:&lt;br/&gt;
insert into TEST values (0, &apos;name0&apos;, 0);&lt;br/&gt;
insert into TEST values (1, &apos;name1&apos;, 1);&lt;br/&gt;
insert into TEST values (2, &apos;name2&apos;, 2);&lt;/p&gt;


&lt;p&gt;Java client:&lt;/p&gt;

&lt;p&gt;import java.sql.Connection;&lt;br/&gt;
import java.sql.PreparedStatement;&lt;br/&gt;
import java.sql.ResultSet;&lt;br/&gt;
import java.sql.DriverManager;&lt;br/&gt;
import java.sql.SQLException;&lt;/p&gt;


&lt;p&gt;public class DerbyTest&lt;br/&gt;
{&lt;br/&gt;
    static public void main(String args[]) throws Exception&lt;br/&gt;
    {&lt;br/&gt;
        Class.forName(&quot;com.ibm.db2.jcc.DB2Driver&quot;);&lt;br/&gt;
        Connection conn = null;&lt;br/&gt;
        try&lt;br/&gt;
        {&lt;br/&gt;
            conn = DriverManager.getConnection(&quot;jdbc:derby:net://localhost:1527/testDB&quot;, &quot;admin&quot;, &quot;admin&quot;);&lt;br/&gt;
            for (int i = 0; i &amp;lt; 10000000; i++)&lt;br/&gt;
            {&lt;br/&gt;
                System.out.println(&quot;Query &quot;+i);&lt;/p&gt;

&lt;p&gt;                String sql = &quot;select count(distinct ID) from TEST where FLAG &amp;lt;&amp;gt; 2&quot;;&lt;br/&gt;
                PreparedStatement pStmt = null;&lt;br/&gt;
                ResultSet rs = null;&lt;/p&gt;

&lt;p&gt;                try&lt;br/&gt;
                {&lt;/p&gt;

&lt;p&gt;                    pStmt = conn.prepareStatement(sql);&lt;br/&gt;
                    rs = pStmt.executeQuery();&lt;br/&gt;
                    if (rs.next())&lt;/p&gt;
                    {
                        rs.getInt(1);
                    }
&lt;p&gt;                }&lt;br/&gt;
                catch (SQLException e)&lt;/p&gt;
                {
                    e.printStackTrace();
                }
&lt;p&gt;                finally&lt;/p&gt;
                {
                    if (rs != null)
                        rs.close();

                    if (pStmt != null)
                        pStmt.close();

                }
&lt;p&gt;            }&lt;br/&gt;
        }&lt;br/&gt;
        finally&lt;/p&gt;
        {
            if (conn != null)
                conn.close();
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;</description>
                <environment>Windows XP, Java 1.5.0_05, Derby network server 10.0.2.1, 10.1.2.1, Derby heapsize 128m, IBM Universal JDBC driver</environment>
        <key id="12326675">DERBY-756</key>
            <summary>OutOfMemory Error on continous execution of select statement using COUNT() and DISTINCT on same connection</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mkhettry">Manish Khettry</assignee>
                                    <reporter username="billchen">Bill Chen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Dec 2005 01:27:40 +0000</created>
                <updated>Fri, 19 Oct 2007 17:12:41 +0100</updated>
                            <resolved>Wed, 15 Feb 2006 14:55:27 +0000</resolved>
                                    <version>10.0.2.1</version>
                    <version>10.1.2.1</version>
                                    <fixVersion>10.1.3.2</fixVersion>
                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>Demos/Scripts</component>
                    <component>JDBC</component>
                    <component>Network Client</component>
                    <component>Network Server</component>
                    <component>SQL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                                                            <comments>
                            <comment id="12360355" author="kartha" created="Wed, 14 Dec 2005 05:48:21 +0000"  >&lt;p&gt;I observed the OutofMemoryError running in embedded mode (v10.1.2).  On my box, I noticed 100% CPU utilization all though and ran into the error pretty early(~ 82000 attempt of the loop).&lt;/p&gt;
</comment>
                            <comment id="12362606" author="mkhettry" created="Fri, 13 Jan 2006 16:12:53 +0000"  >&lt;p&gt;It looks like the scan controller created in DistinctScalarAggregateResultSet is never closed. This causes the scanController instance variable in RAMTransaction to continue to grow with each open/close. &lt;/p&gt;

&lt;p&gt;Shouldn&apos;t DistinctScalarAggregateRS implement a close or a finish method (not sure what the difference is) and close the scan controller there.&lt;/p&gt;</comment>
                            <comment id="12363206" author="mkhettry" created="Thu, 19 Jan 2006 15:19:28 +0000"  >&lt;p&gt;Ran derbylang. Fix is simple enough I think-- I also removed some unused imports.&lt;/p&gt;</comment>
                            <comment id="12363503" author="bandaram" created="Sat, 21 Jan 2006 13:33:33 +0000"  >&lt;p&gt;Thanks for your patch, Manish... I have submitted your patch. Please RESOLVE this bug and after confirming CLOSE the fix, CLOSE it. Let me know if you need any help testing or closing the issue.&lt;/p&gt;

&lt;p&gt;Sending        java\engine\org\apache\derby\impl\sql\execute\DistinctScalarAggregateResultSet.java&lt;br/&gt;
Transmitting file data .&lt;br/&gt;
Committed revision 370978.&lt;/p&gt;</comment>
                            <comment id="12363914" author="mkhettry" created="Wed, 25 Jan 2006 12:09:13 +0000"  >&lt;p&gt;Modified DistinctScalarAggregateResultSet:close to free resources initialized during open.&lt;/p&gt;</comment>
                            <comment id="12363917" author="mkhettry" created="Wed, 25 Jan 2006 12:17:50 +0000"  >&lt;p&gt;I ran the test case in the bug with a maximum heap size of 1 MB; atleast I specified &lt;del&gt;Xmx1m&lt;/del&gt;- its possible that the JVM can&apos;t run with 1 MB and upped it to something more reasonable.&lt;/p&gt;

&lt;p&gt;Before the fix, we would run out of memory at about the 4000&apos;th iteration. The good news is that we get to about 81,000 iterations. The bad news is that we still run out of memory. I changed the query from a count(distinct id) to a simple count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and the OutOfMemory error was thrown after about 81-82K executes. I think there is another memory leak (or two) in our system that we need to identify and fix. Is it safe to mark this bug closed and file another bug to track that issue or should I use this bug to track the memory leak that remains.&lt;/p&gt;

&lt;p&gt;If I don&apos;t hear from anyone, I&apos;ll mark this bug closed and file another one.&lt;/p&gt;</comment>
                            <comment id="12363928" author="bandaram" created="Wed, 25 Jan 2006 15:38:24 +0000"  >&lt;p&gt;My suggestion is to create a sub-task of this bug, to cover any other memory leak, if present. Current bug covers issue that is specific to Distinct and that seems to be fixed with Manish&apos;s patch. Once a sub-task is created, this can be closed.&lt;/p&gt;</comment>
                            <comment id="12364980" author="mkhettry" created="Fri, 3 Feb 2006 04:02:13 +0000"  >&lt;p&gt;Per Satheesh, closing this issue but the subtask should still be open.&lt;/p&gt;</comment>
                            <comment id="12366441" author="bandaram" created="Wed, 15 Feb 2006 14:55:08 +0000"  >&lt;p&gt;Reopening to set fixin.&lt;/p&gt;</comment>
                            <comment id="12366442" author="bandaram" created="Wed, 15 Feb 2006 14:55:27 +0000"  >&lt;p&gt;Fixed in 10.2.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12322105" name="mem_leak.diff" size="2100" author="mkhettry" created="Thu, 19 Jan 2006 15:19:28 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12328484">DERBY-912</subtask>
                            <subtask id="12353523">DERBY-1978</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Dec 2005 05:48:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22131</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy10wv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39798</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>