<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:28:43 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-506/DERBY-506.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-506] Implement Statement.setQueryTimeout in the Client Driver</title>
                <link>https://issues.apache.org/jira/browse/DERBY-506</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;Currently, the Embedded Driver supports Statement.setQueryTimeout(), but the Client Driver does not. The Client Driver should be enhanced and match the Embedded Driver.&lt;/p&gt;

&lt;p&gt;For this, we need to transfer the timeout value from the client to the server, preferably without a separate round-trip. I have some loose thoughts on how to do this:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If the client has set a timeout value for a statement, prepend the (DRDA) EXCSQLSTT command with an EXCSQLSET command which contains the timeout value; conceptually a &quot;SET STATEMENT TIMEOUT &amp;lt;seconds&amp;gt;&quot; (this does not mean that we need to extend the Derby grammar; only the Network Server needs to understand this DRDA EXCSQLSET command).&lt;/li&gt;
	&lt;li&gt;In DRDAConnThread.parseEXCSQLSETobjects() on the server side, recognize the &quot;SET STATEMENT TIMEOUT&quot; text, parse the timeout value and remember it for the coming EXCSQLSTT command. Do NOT invoke executeUpdate() with the SET statement &lt;span class=&quot;error&quot;&gt;&amp;#91;see note below&amp;#93;&lt;/span&gt;.&lt;/li&gt;
	&lt;li&gt;In DRDAConnThread.parseEXCSQLSTT(), check if a timeout value has been set; if so, use it (by setting the timeout value on the server-side Statement object before calling execute/executeQuery).&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12313356">DERBY-506</key>
            <summary>Implement Statement.setQueryTimeout in the Client Driver</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bakksjo">Oyvind Bakksjo</assignee>
                                    <reporter username="bakksjo">Oyvind Bakksjo</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 Aug 2005 01:27:46 +0100</created>
                <updated>Fri, 21 Jan 2011 18:09:00 +0000</updated>
                            <resolved>Tue, 15 Nov 2005 00:47:43 +0000</resolved>
                                    <version>10.1.1.0</version>
                                    <fixVersion>10.2.1.6</fixVersion>
                                    <component>JDBC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12318655" author="bakksjo" created="Sat, 13 Aug 2005 01:30:38 +0100"  >&lt;p&gt;Currently, setQueryTimeout is implemented only in the Embedded Driver.&lt;/p&gt;</comment>
                            <comment id="12331497" author="bakksjo" created="Fri, 7 Oct 2005 00:38:33 +0100"  >&lt;p&gt;This patch is not intended for inclusion, it just illustrates the idea and is a basis for discussion about the approach.&lt;/p&gt;

&lt;p&gt;The patch enables setQueryTimeout() for prepared update statements in the client driver.&lt;/p&gt;</comment>
                            <comment id="12331512" author="kmarsden" created="Fri, 7 Oct 2005 02:20:46 +0100"  >&lt;p&gt;I think the EXCSQLSET is a good way to go but would  prefer to see it made as a call with setQueryTimeout  when the JDBC call is made instead of being resent with each Statement execution. The SET statement would then need to send the package name and section number for the Statement.  &lt;/p&gt;

&lt;p&gt;The trouble that I see with this approach as things stand now is that I think  the statement table currently includes the package name, section number, and consistency token.  The consistency token is non-ascii and so would cause problems with our SET statement, but I really think that the statement lookup could be changed to not include the consistiency token.  I  think that the package name and section number are unique for each open statement, but this should be verified.&lt;/p&gt;


&lt;p&gt;This mechanism could also be used for setMaxRows.&lt;/p&gt;</comment>
                            <comment id="12331714" author="bakksjo" created="Tue, 11 Oct 2005 01:15:27 +0100"  >&lt;p&gt;Sending the EXCSQLSET when the JDBC call &lt;span class=&quot;error&quot;&gt;&amp;#91;to Statement.setQueryTimeout()&amp;#93;&lt;/span&gt; is made would cause an additional round-trip between the client and the server, which is what I was trying to avoid by piggybacking the execute flow. Are you concerned with the extra bytes sent during the execute call? For a prepared statement, we only need to transmit the timeout once; for the first execute (or if the timeout is changed with a subsequent call to setQueryTimeout() on the client side). In code like the example below, we would only need to piggyback the execute message for the first iteration, thus avoiding both an extra round-trip and message overhead.&lt;/p&gt;

&lt;p&gt;PreparedStatement ps = connection.prepareStatement(SQL);&lt;br/&gt;
ps.setQueryTimeout(TIMEOUT);&lt;br/&gt;
while (condition) &lt;/p&gt;
{
    ps.execute();
    ....
}

&lt;p&gt;Have I understood you correctly, or do you have other concerns that makes you prefer transmitting the timeout at the JDBC call time? By the way, is that viable for unprepared statements (the server does not yet know about the statement for which the client sets a timeout)?&lt;/p&gt;</comment>
                            <comment id="12331730" author="kmarsden" created="Tue, 11 Oct 2005 03:34:03 +0100"  >&lt;p&gt;My experience with  client side code that has tried to do this in past is that it has historically caused trouble.    Common issues with this approach.&lt;/p&gt;

&lt;p&gt;1) The error messages don&apos;t make sense because they are delayed.  The embedded call to the corresponding client method  happens when the statement is executed and any related exception will happen at that  time.   Not really in keeping with JDBC, embedded compatibility or user expectations.  &lt;/p&gt;

&lt;p&gt;2)  The client has to have a lot of code to make sure it recovers  properly and keeps the proper state.     For instance if the first statement executed fails for some reason, is the queued method really going to be executed? Will server and client be in sync?   Maybe so in this case but I know with XA there were really big problems with client code that tried to keep track of the server&apos;s XA state.  &lt;/p&gt;

&lt;p&gt;3) Queued up client requests are really hard to debug for everyone but the person who put  that code in the first place because the execution is so far removed from the place where it was expected.&lt;/p&gt;

&lt;p&gt;Perhaps for setQueryTimeout these are not issues, but it is just a single round trip per setQueryTimeout call,  so I don&apos;t think queing up requests really buys us a whole lot here in terms of performance.  All that said I realize it is extra work to change the statement lookup, so I am not strongly against your change as long as the three issues above have been considered.  In general though I think  queuing up the protocol for multiple JDBC calls on the client side is bad news.&lt;/p&gt;

&lt;p&gt;Regarding uprepared statements, I think the implications are the same with the queued approach or sending the EXCSQLSET with the JDBC call. Unprepared update/delete/insert goes through EXCSQLIMM rather than EXCSQLSTT, so would not be covered by  sending the EXCSQLSET with  EXCSQLSTT. Selects even those not prepared in JDBC,  go the PRPSQLSTT-&amp;gt; EXCSQLSTT route.    Is setQueryTimout relevant to statements other than selects?&lt;/p&gt;
</comment>
                            <comment id="12331738" author="bakksjo" created="Tue, 11 Oct 2005 04:55:57 +0100"  >&lt;p&gt;I understand your points, but with regards to setQueryTimeout(), I honestly think you&apos;re making too much of this. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; To make my point clearer, I don&apos;t (logically) think of the setQueryTimeout call as a separate request which gets queued, it&apos;s just setting an attribute of a statement before it is executed. Without the execute, setting the attribute has no meaning, so it is ok to flow the attribute together with the execute request. I don&apos;t see any issues with keeping client and server in sync, and the only error message related to the setQueryTimeout call we need to handle is if the user supplies a negative value.&lt;/p&gt;

&lt;p&gt;Consider this:&lt;/p&gt;

&lt;p&gt;PreparedStatement ps = connection.prepareStatement(SQL);&lt;br/&gt;
ps.setMaxFieldSize(512);&lt;br/&gt;
ps.setMaxRows(100);&lt;br/&gt;
ps.setFetchDirection(ResultSet.FETCH_FORWARD);&lt;br/&gt;
ps.setFetchSize(10);&lt;br/&gt;
ps.setQueryTimeout(10);&lt;br/&gt;
while (condition) &lt;/p&gt;
{
    ....
    ResultSet rs = ps.execute();
    ....
}

&lt;p&gt;None of the other setX() calls result in a round trip to the server. The difference, as I see it, is simply that the DRDA protocol does not have a field for the timeout attribute (the protocol does not target JDBC, and SQL has no such attribute for statements). This is what forces my slight &quot;abuse&quot; of EXCSQLSET for transferring the attribute to the server.&lt;/p&gt;

&lt;p&gt;I really think extra round trips are a big deal in terms of performance, so I would prefer to avoid that. We have done some in-house performance comparisons with other open source databases and discovered that Derby uses more round trips per transaction than the others, and that this actually matters.&lt;/p&gt;

&lt;p&gt;My point with unprepared statements is that you cannot send a timeout value in an separate round trip and bind it to a statement which hasn&apos;t reached the server yet, it has to flow with the execute operation. And yes, I know unprepared statements use EXCSQLIMM, so I&apos;ll have to add the EXCSQLSET to this operation as well (the patch I have attached was just meant to illustrate the approach, it&apos;s not complete).&lt;/p&gt;

&lt;p&gt;In my opinion, setQueryTImeout is relevant to all kinds of DML statements, not just selects. (We already had a discussion about the semantics for timeout, what it should apply to etc.)&lt;/p&gt;</comment>
                            <comment id="12331742" author="kmarsden" created="Tue, 11 Oct 2005 06:23:48 +0100"  >
&lt;p&gt;I see your point about  it being similar to the other attributes.   Your approach sounds ok to me then, especially  since there is just a single error condition which needs to be duplicated on the client.  &lt;/p&gt;

&lt;p&gt; I only make a bit much of the general point because I have spent many, many, many,  many, many  cycles in the past dealing with issues created by  roundtrip optimization.  In general I think a thin client is best and the confusion and bugs created by such optimizations is rarely worth it, but that is just a general philosophy thing that is not related to this change.&lt;/p&gt;</comment>
                            <comment id="12357207" author="bakksjo" created="Thu, 10 Nov 2005 19:01:17 +0000"  >&lt;p&gt;Diff from revision 332067.&lt;/p&gt;</comment>
                            <comment id="12357597" author="bakksjo" created="Tue, 15 Nov 2005 00:46:42 +0000"  >&lt;p&gt;Sending        java/client/org/apache/derby/client/am/PreparedStatement.java&lt;br/&gt;
Sending        java/client/org/apache/derby/client/am/Statement.java&lt;br/&gt;
Sending        java/drda/org/apache/derby/impl/drda/DRDAConnThread.java&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNetClient.exclude&lt;br/&gt;
Sending        java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SetQueryTimeoutTest.java&lt;br/&gt;
Transmitting file data .....&lt;br/&gt;
Committed revision 344147.&lt;/p&gt;</comment>
                            <comment id="12357598" author="bakksjo" created="Tue, 15 Nov 2005 00:47:43 +0000"  >&lt;p&gt;Had to disable some testing because of &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-694&quot; title=&quot;Statement exceptions cause all the connection&amp;#39;s result sets to be closed with the client driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-694&quot;&gt;&lt;del&gt;DERBY-694&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12357610" author="bandaram" created="Tue, 15 Nov 2005 04:03:11 +0000"  >&lt;p&gt;Thanks for the useful and good patch!! I did a quick review of the code and have couple of comments:&lt;/p&gt;

&lt;p&gt;   1) Is there any need to keep the am/QueryTimerTask.java still? Since there doesn&apos;t seem to be any users of this, may be this class could be dropped?&lt;br/&gt;
    2) What would happen if a 10.2 client tries to send a SET STATEMENT_TIMEOUT statement to a 10.1 server? There doesn&apos;t seem to be any mechanism to prevent unpleasant events.&lt;/p&gt;</comment>
                            <comment id="12357680" author="bakksjo" created="Tue, 15 Nov 2005 19:03:53 +0000"  >&lt;p&gt;Answers to Satheesh:&lt;/p&gt;

&lt;p&gt;1) You&apos;re right, I&apos;ll remove this class.&lt;br/&gt;
2) As Army pointed out in his mail, unrecognized SET statements simply cause a warning to be generated.&lt;/p&gt;

&lt;p&gt;Thank you for reviewing the patch.&lt;/p&gt;</comment>
                            <comment id="12357682" author="bakksjo" created="Tue, 15 Nov 2005 19:16:04 +0000"  >&lt;p&gt;Deleting       java/client/org/apache/derby/client/am/QueryTimerTask.java&lt;/p&gt;

&lt;p&gt;Committed revision 344344.&lt;/p&gt;</comment>
                            <comment id="12357725" author="bandaram" created="Wed, 16 Nov 2005 05:41:51 +0000"  >&lt;p&gt;Thanks Oyvind for removing QueryTimerTask.java. Thanks Army and Oyvind for pointing out that unrecognized SET statements raise a warning... While not unpleasant, might confuse some users who actually look at warnings. But only under mixed setup, 10.2 or higher client talking to 10.1 or lower servers. No biggie, either way! &lt;/p&gt;

&lt;p&gt;Thanks Oyvind for updating the docs too... How did you figure that out ...&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="27621">DERBY-31</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12320591" name="DERBY-506.diff" size="14547" author="bakksjo" created="Thu, 10 Nov 2005 19:01:16 +0000"/>
                            <attachment id="12320592" name="DERBY-506.status" size="379" author="bakksjo" created="Thu, 10 Nov 2005 19:01:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Oct 2005 01:20:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29582</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0kl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37153</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>