<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun May 17 03:19:47 UTC 2015

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/DERBY-4171/DERBY-4171.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[DERBY-4171] Connections to on-disk db go to in-memory db if in-memory db with same name is booted</title>
                <link>https://issues.apache.org/jira/browse/DERBY-4171</link>
                <project id="10594" key="DERBY">Derby</project>
                    <description>&lt;p&gt;When an in-memory database has been booted, subsequent attempts to connect to an ordinary (on-disk) database with the same name as the in-memory database will connect to the in-memory db.&lt;/p&gt;

&lt;p&gt;ij version 10.5&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:memory:MyDB;create=true&apos;; &amp;#8211; with subprotocol memory&lt;br/&gt;
ij&amp;gt; create table t (x varchar(30));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into t values &apos;This is the in-memory backend&apos;;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; connect &apos;jdbc:derby:MyDB;create=true&apos;; --without subprotocol memory, should create disk db&lt;br/&gt;
WARNING 01J01: Database &apos;MyDB&apos; not created, connection made to existing database instead.&lt;br/&gt;
ij(CONNECTION1)&amp;gt; select * from t;&lt;br/&gt;
X                             &lt;br/&gt;
------------------------------&lt;br/&gt;
This is the in-memory backend &lt;/p&gt;

&lt;p&gt;1 row selected&lt;/p&gt;</description>
                <environment></environment>
        <key id="12423274">DERBY-4171</key>
            <summary>Connections to on-disk db go to in-memory db if in-memory db with same name is booted</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kristwaa">Kristian Waagan</assignee>
                                    <reporter username="knutanders">Knut Anders Hatlen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Apr 2009 14:17:56 +0100</created>
                <updated>Tue, 2 Feb 2010 10:03:15 +0000</updated>
                            <resolved>Thu, 18 Jun 2009 13:53:14 +0100</resolved>
                                    <version>10.5.1.1</version>
                    <version>10.6.1.0</version>
                                    <fixVersion>10.5.2.0</fixVersion>
                    <fixVersion>10.6.1.0</fixVersion>
                                    <component>Store</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12701099" author="kristwaa" created="Tue, 21 Apr 2009 09:25:33 +0100"  >&lt;p&gt;I&apos;m not sure yet, but there seems to be a problem in StorageFactoryService.getCanonicalServiceName:&lt;br/&gt;
	String protocolLeadIn = getType() + &quot;:&quot;;&lt;br/&gt;
        int colon = name.indexOf( &apos;:&apos;);&lt;br/&gt;
        if( colon &amp;gt; 1) // Subsubprotocols must be at least 2 characters long&lt;/p&gt;
        {
            if( ! name.startsWith( protocolLeadIn))
                return null; // It is not our database
            name = name.substring( colon + 1);
        }
&lt;p&gt;        if( getType().equals( PersistentService.DIRECTORY)) // The default subsubprototcol&lt;br/&gt;
            protocolLeadIn = &quot;&quot;;&lt;br/&gt;
        final String nm = name;&lt;/p&gt;

&lt;p&gt;If there is no subsubprotocol present in the name, the code above will use the one from the storage factory being checked. In the case of VFMemoryStorageFactory, getType() returns &apos;memory&apos;.&lt;br/&gt;
If you connect to the on-disk db first, than in-memory and finally on-disk again, the order of the services will be different and you&apos;ll (correctly) get a connection to the on-disk db.&lt;/p&gt;

&lt;p&gt;Adding the following lines of code after &apos;int colon = ...&apos; fixes the original repro:&lt;br/&gt;
        // Add the default subsubprotocol if there is none present.&lt;br/&gt;
        if (colon == -1) &lt;/p&gt;
{
            name = PersistentService.DIRECTORY + &quot;:&quot; + name;
        }

&lt;p&gt;The regression tests ran cleanly with the change, but I&apos;m not yet sure if it is the correct thing to do.&lt;br/&gt;
Also note that the problem will only happen when the databases have equal names and are &quot;stored&quot; in the same canonical path (determined by java.io.File).&lt;/p&gt;</comment>
                            <comment id="12701100" author="kristwaa" created="Tue, 21 Apr 2009 09:26:37 +0100"  >&lt;p&gt;Attached patch 1a, which makes the original repro pass.&lt;/p&gt;</comment>
                            <comment id="12701123" author="knutanders" created="Tue, 21 Apr 2009 10:57:16 +0100"  >&lt;p&gt;Thanks for the fix Kristian. I&apos;ve verified that it works.&lt;/p&gt;

&lt;p&gt;Should we also set colon = name.indexOf(&apos;:&apos;) in the body of the new if statement? The if statement right below it is supposed to return immediately if the subsubprotocol doesn&apos;t match, but since colon is still -1, that code is not executed. Not that it appears to cause any problems.&lt;/p&gt;

&lt;p&gt;Alternatively, and perhaps clearer, I think we could change the if statement like this:&lt;/p&gt;

&lt;p&gt;        if (colon == -1 &amp;amp;&amp;amp; !getType().equals(PersistentService.DIRECTORY)) &lt;/p&gt;
{
            // no subsubprotocol specified, and this is not the default service
            return null;
        }</comment>
                            <comment id="12701142" author="kristwaa" created="Tue, 21 Apr 2009 13:05:52 +0100"  >&lt;p&gt;Thanks for looking at the patch, Knut.&lt;/p&gt;

&lt;p&gt;I&apos;ll look at your suggestions and test them. There are several asserts that might be triggered by changes to this code.&lt;br/&gt;
I guess we should have had a variable like PersistentService.DEFAULT_PROTOCOL, but since we&apos;re not changing it it&apos;s not crucial. One use case could be to allow setting the default protocol to use the in-memory storage factory instead of the directory storage factory. This could be useful in scenarios where you want to use the in-memory back end for testing, but don&apos;t want to change existing code.&lt;/p&gt;</comment>
                            <comment id="12701166" author="rhillegas" created="Tue, 21 Apr 2009 15:30:28 +0100"  >&lt;p&gt;Thanks for thinking about this issue, Knut and Kristian. What do you think the behavior should be:&lt;/p&gt;

&lt;p&gt;1) The memory subprotocol defines a separate namespace of databases. In this situation, it should be possible to have two databases with the same name, one in the memory namespace and one in the namespace accessed by all other subprotocols&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;2) The first thread to open a database defines which subprotocols must be used to access the database from other connections--until the database is brought down. If a database was first opened by the memory subprotocol, then a database by that name cannot be accessed simultaneously by any other subprotocol. Conversely, if a database was first opened by the default or classpath subprotocols, then a database by that name cannot be accessed simultaneously by the memory subprotocol.&lt;/p&gt;

&lt;p&gt;I have two worries:&lt;/p&gt;

&lt;p&gt;A) We may not understand the current behavior of our subprotocols well enough. See &lt;a href=&quot;https://issues.apache.org/jira/browse/DERBY-4172&quot; title=&quot;You can open a read-write connection to a database which was originally opened by another thread using the classpath subprotocol&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DERBY-4172&quot;&gt;DERBY-4172&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;B) The code may assume that there is only one namespace for databases. Adding another namespace may be tricky.&lt;/p&gt;

&lt;p&gt;I think I would lean toward (2). If we later decide that (2) is too restrictive and we think we understand the code well enough, then we could migrate to (1) without causing serious compatibility issues. I think that going from (1) to (2) will have serious compatibility implications.&lt;/p&gt;</comment>
                            <comment id="12701242" author="knutanders" created="Tue, 21 Apr 2009 20:32:38 +0100"  >&lt;p&gt;One potential problem with (2) is that in a multi-user environment, one user can create an in-memory database with the same path as a known, unbooted disk-based database, and thereby prevent other users from booting the disk-based database.&lt;/p&gt;

&lt;p&gt;Which compatibility issues would we see when moving from (1) to (2) that we won&apos;t see when moving from the current situation to (2)?&lt;/p&gt;</comment>
                            <comment id="12701505" author="kristwaa" created="Wed, 22 Apr 2009 13:29:00 +0100"  >&lt;p&gt;Attached patch 1b, which will cause null to be returned if no subsubprotocol is specified and the storage factory isn&apos;t the default one.&lt;/p&gt;

&lt;p&gt;This is what the JavaDoc for PersistentService.getCanonicalServiceName says:&lt;br/&gt;
	/**&lt;br/&gt;
		Convert a service name into its canonical form. Returns null if the name&lt;br/&gt;
		cannot be converted into a canonical form.&lt;/p&gt;

&lt;p&gt;		@exception No canonical name, name probably invalid&lt;br/&gt;
	*/&lt;/p&gt;

&lt;p&gt;Returning null is in agreement with the following existing code (StorageFactoryService.getCanonicalServiceName):&lt;br/&gt;
        if( colon &amp;gt; 1) // Subsubprotocols must be at least 2 characters long&lt;/p&gt;
        {
            if( ! name.startsWith( protocolLeadIn))
                return null; // It is not our database
            name = name.substring( colon + 1);
        }


&lt;p&gt;Since there&apos;s an ongoing discussion about database namespaces and subsubprotocols, I&apos;ll hold off the commit for a while.&lt;/p&gt;</comment>
                            <comment id="12717643" author="kristwaa" created="Tue, 9 Jun 2009 11:58:29 +0100"  >&lt;p&gt;Committed patch 1b to trunk with revision 782954.&lt;br/&gt;
I&apos;ll backport it to 10.5 after the nightly tests have been run a few times.&lt;/p&gt;</comment>
                            <comment id="12717983" author="kristwaa" created="Wed, 10 Jun 2009 09:28:08 +0100"  >&lt;p&gt;I think patch 1b broke something on Windows, I see errors in BasicInMemoryDbTest on all the Windows platforms. Not having a Windows machine to debug on, this may have to wait until tomorrow before I can debug the problem.&lt;/p&gt;</comment>
                            <comment id="12719449" author="kristwaa" created="Mon, 15 Jun 2009 09:14:29 +0100"  >&lt;p&gt;Committed patch 2a to trunk with revision 784682.&lt;br/&gt;
Awaiting further confirmation from the nightly tests before backporting to the 10.5 branch.&lt;/p&gt;</comment>
                            <comment id="12721238" author="kristwaa" created="Thu, 18 Jun 2009 13:53:14 +0100"  >&lt;p&gt;The error on Windows platforms in the nightly tests is no longer happening.&lt;/p&gt;

&lt;p&gt;Backported to 10.5 with revision 786043.&lt;/p&gt;</comment>
                            <comment id="12828577" author="knutanders" created="Tue, 2 Feb 2010 10:03:15 +0000"  >&lt;p&gt;Verified on trunk. Closing.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12427793">DERBY-4271</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12406011" name="derby-4171-1a-fix.diff" size="775" author="kristwaa" created="Tue, 21 Apr 2009 09:26:37 +0100"/>
                            <attachment id="12406130" name="derby-4171-1b-fix.diff" size="2811" author="kristwaa" created="Wed, 22 Apr 2009 13:29:00 +0100"/>
                            <attachment id="12410636" name="derby-4171-2a.diff" size="1108" author="kristwaa" created="Mon, 15 Jun 2009 09:14:29 +0100"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Apr 2009 08:25:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24075</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2|hy0r7r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38227</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>